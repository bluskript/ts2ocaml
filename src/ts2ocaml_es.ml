[@@@js.dummy "!! This code has been generated by gen_js_api !!"]
[@@@ocaml.warning "-7-32-39"]
[@@@ocaml.warning "-7-11-32-33-39"]
open Ts2ocaml_min
module IteratorYieldResult =
  struct
    type 'TYield t = [ `IteratorYieldResult of 'TYield ] intf
    let rec t_of_js : 'TYield . (Ojs.t -> 'TYield) -> Ojs.t -> 'TYield t =
      fun _TYield -> Obj.magic
    and t_to_js : 'TYield . ('TYield -> Ojs.t) -> 'TYield t -> Ojs.t =
      fun _TYield -> Obj.magic
    type 'TYield t_1 = 'TYield t
    let rec t_1_of_js : 'TYield . (Ojs.t -> 'TYield) -> Ojs.t -> 'TYield t_1
      =
      fun (type __TYield) ->
        fun (__TYield_of_js : Ojs.t -> __TYield) ->
          fun (x3 : Ojs.t) -> t_of_js __TYield_of_js x3
    and t_1_to_js : 'TYield . ('TYield -> Ojs.t) -> 'TYield t_1 -> Ojs.t =
      fun (type __TYield) ->
        fun (__TYield_to_js : __TYield -> Ojs.t) ->
          fun (x1 : __TYield t) -> t_to_js __TYield_to_js x1
    type 'TYield tags = [ `IteratorYieldResult of 'TYield ]
    type 'TYield tags_1 = 'TYield tags
    type ('tags, 'TYield) this =
      'tags intf constraint 'tags = [> `IteratorYieldResult of 'TYield ]
    let rec this_of_js :
      'tags 'TYield .
        (Ojs.t -> 'tags) ->
          (Ojs.t -> 'TYield) -> Ojs.t -> ('tags, 'TYield) this
      =
      fun (type __tags) ->
        fun (type __TYield) ->
          fun (__tags_of_js : Ojs.t -> __tags) ->
            fun (__TYield_of_js : Ojs.t -> __TYield) ->
              fun (x7 : Ojs.t) -> intf_of_js __tags_of_js x7
    and this_to_js :
      'tags 'TYield .
        ('tags -> Ojs.t) ->
          ('TYield -> Ojs.t) -> ('tags, 'TYield) this -> Ojs.t
      =
      fun (type __tags) ->
        fun (type __TYield) ->
          fun (__tags_to_js : __tags -> Ojs.t) ->
            fun (__TYield_to_js : __TYield -> Ojs.t) ->
              fun (x5 : __tags intf) -> intf_to_js __tags_to_js x5
    let (get_done : ('tags, 'TYield) this -> [ `L_b_false ] option) =
      fun (x9 : ('tags, 'TYield) this) ->
        Ojs.option_of_js
          (fun (x12 : Ojs.t) ->
             let x13 = x12 in
             match Ojs.bool_of_js x13 with
             | false -> `L_b_false
             | _ -> assert false)
          (Ojs.get_prop_ascii (this_to_js Obj.magic Obj.magic x9) "done")
    let (set_done : ('tags, 'TYield) this -> [ `L_b_false ] -> unit) =
      fun (x14 : ('tags, 'TYield) this) ->
        fun (x15 : [ `L_b_false ]) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic Obj.magic x14) "done"
            (match x15 with | `L_b_false -> Ojs.bool_to_js false)
    let (get_value : ('tags, 'TYield) this -> 'TYield) =
      fun (x18 : ('tags, 'TYield) this) ->
        Obj.magic
          (Ojs.get_prop_ascii (this_to_js Obj.magic Obj.magic x18) "value")
    let (set_value : ('tags, 'TYield) this -> 'TYield -> unit) =
      fun (x21 : ('tags, 'TYield) this) ->
        fun (x22 : 'TYield) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic Obj.magic x21) "value"
            (Obj.magic x22)
    let (create :
      ?done_:[ `L_b_false ] -> value:'TYield -> unit -> 'TYield t) =
      fun ?done_:(x25 : [ `L_b_false ] option) ->
        fun ~value:(x26 : 'TYield) ->
          fun () ->
            let x27 = Ojs.empty_obj () in
            (match x25 with
             | Some x29 ->
                 Ojs.set_prop_ascii x27 "done"
                   (match x29 with | `L_b_false -> Ojs.bool_to_js false)
             | None -> ());
            Ojs.set_prop_ascii x27 "value" (Obj.magic x26);
            t_of_js Obj.magic x27
    let cast_from = Obj.magic
  end
module IteratorReturnResult =
  struct
    type 'TReturn t = [ `IteratorReturnResult of 'TReturn ] intf
    let rec t_of_js : 'TReturn . (Ojs.t -> 'TReturn) -> Ojs.t -> 'TReturn t =
      fun _TReturn -> Obj.magic
    and t_to_js : 'TReturn . ('TReturn -> Ojs.t) -> 'TReturn t -> Ojs.t =
      fun _TReturn -> Obj.magic
    type 'TReturn t_1 = 'TReturn t
    let rec t_1_of_js :
      'TReturn . (Ojs.t -> 'TReturn) -> Ojs.t -> 'TReturn t_1 =
      fun (type __TReturn) ->
        fun (__TReturn_of_js : Ojs.t -> __TReturn) ->
          fun (x32 : Ojs.t) -> t_of_js __TReturn_of_js x32
    and t_1_to_js : 'TReturn . ('TReturn -> Ojs.t) -> 'TReturn t_1 -> Ojs.t =
      fun (type __TReturn) ->
        fun (__TReturn_to_js : __TReturn -> Ojs.t) ->
          fun (x30 : __TReturn t) -> t_to_js __TReturn_to_js x30
    type 'TReturn tags = [ `IteratorReturnResult of 'TReturn ]
    type 'TReturn tags_1 = 'TReturn tags
    type ('tags, 'TReturn) this =
      'tags intf constraint 'tags = [> `IteratorReturnResult of 'TReturn ]
    let rec this_of_js :
      'tags 'TReturn .
        (Ojs.t -> 'tags) ->
          (Ojs.t -> 'TReturn) -> Ojs.t -> ('tags, 'TReturn) this
      =
      fun (type __tags) ->
        fun (type __TReturn) ->
          fun (__tags_of_js : Ojs.t -> __tags) ->
            fun (__TReturn_of_js : Ojs.t -> __TReturn) ->
              fun (x36 : Ojs.t) -> intf_of_js __tags_of_js x36
    and this_to_js :
      'tags 'TReturn .
        ('tags -> Ojs.t) ->
          ('TReturn -> Ojs.t) -> ('tags, 'TReturn) this -> Ojs.t
      =
      fun (type __tags) ->
        fun (type __TReturn) ->
          fun (__tags_to_js : __tags -> Ojs.t) ->
            fun (__TReturn_to_js : __TReturn -> Ojs.t) ->
              fun (x34 : __tags intf) -> intf_to_js __tags_to_js x34
    let (get_done : ('tags, 'TReturn) this -> [ `L_b_true ]) =
      fun (x38 : ('tags, 'TReturn) this) ->
        let x41 =
          Ojs.get_prop_ascii (this_to_js Obj.magic Obj.magic x38) "done" in
        match Ojs.bool_of_js x41 with | true -> `L_b_true | _ -> assert false
    let (set_done : ('tags, 'TReturn) this -> [ `L_b_true ] -> unit) =
      fun (x42 : ('tags, 'TReturn) this) ->
        fun (x43 : [ `L_b_true ]) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic Obj.magic x42) "done"
            (match x43 with | `L_b_true -> Ojs.bool_to_js true)
    let (get_value : ('tags, 'TReturn) this -> 'TReturn) =
      fun (x46 : ('tags, 'TReturn) this) ->
        Obj.magic
          (Ojs.get_prop_ascii (this_to_js Obj.magic Obj.magic x46) "value")
    let (set_value : ('tags, 'TReturn) this -> 'TReturn -> unit) =
      fun (x49 : ('tags, 'TReturn) this) ->
        fun (x50 : 'TReturn) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic Obj.magic x49) "value"
            (Obj.magic x50)
    let (create :
      done_:[ `L_b_true ] -> value:'TReturn -> unit -> 'TReturn t) =
      fun ~done_:(x53 : [ `L_b_true ]) ->
        fun ~value:(x54 : 'TReturn) ->
          fun () ->
            let x55 = Ojs.empty_obj () in
            Ojs.set_prop_ascii x55 "done"
              (match x53 with | `L_b_true -> Ojs.bool_to_js true);
            Ojs.set_prop_ascii x55 "value" (Obj.magic x54);
            t_of_js Obj.magic x55
    let cast_from = Obj.magic
  end
module IteratorResult =
  struct
    type ('T, 'TReturn) t =
      [ `U_b_false of 'T IteratorYieldResult.t 
      | `U_b_true of 'TReturn IteratorReturnResult.t ]
    let rec t_of_js :
      'T 'TReturn .
        (Ojs.t -> 'T) -> (Ojs.t -> 'TReturn) -> Ojs.t -> ('T, 'TReturn) t
      =
      fun (type __T) ->
        fun (type __TReturn) ->
          fun (__T_of_js : Ojs.t -> __T) ->
            fun (__TReturn_of_js : Ojs.t -> __TReturn) ->
              fun (x62 : Ojs.t) ->
                let x63 = x62 in
                match Ojs.bool_of_js (Ojs.get_prop_ascii x63 "done") with
                | false ->
                    `U_b_false (IteratorYieldResult.t_of_js __T_of_js x63)
                | true ->
                    `U_b_true
                      (IteratorReturnResult.t_of_js __TReturn_of_js x63)
    and t_to_js :
      'T 'TReturn .
        ('T -> Ojs.t) -> ('TReturn -> Ojs.t) -> ('T, 'TReturn) t -> Ojs.t
      =
      fun (type __T) ->
        fun (type __TReturn) ->
          fun (__T_to_js : __T -> Ojs.t) ->
            fun (__TReturn_to_js : __TReturn -> Ojs.t) ->
              fun
                (x57 :
                  [ `U_b_false of __T IteratorYieldResult.t 
                  | `U_b_true of __TReturn IteratorReturnResult.t ])
                ->
                match x57 with
                | `U_b_false x58 -> IteratorYieldResult.t_to_js __T_to_js x58
                | `U_b_true x60 ->
                    IteratorReturnResult.t_to_js __TReturn_to_js x60
    type ('T, 'TReturn) t_2 = ('T, 'TReturn) t
    let rec t_2_of_js :
      'T 'TReturn .
        (Ojs.t -> 'T) -> (Ojs.t -> 'TReturn) -> Ojs.t -> ('T, 'TReturn) t_2
      =
      fun (type __T) ->
        fun (type __TReturn) ->
          fun (__T_of_js : Ojs.t -> __T) ->
            fun (__TReturn_of_js : Ojs.t -> __TReturn) ->
              fun (x69 : Ojs.t) -> t_of_js __T_of_js __TReturn_of_js x69
    and t_2_to_js :
      'T 'TReturn .
        ('T -> Ojs.t) -> ('TReturn -> Ojs.t) -> ('T, 'TReturn) t_2 -> Ojs.t
      =
      fun (type __T) ->
        fun (type __TReturn) ->
          fun (__T_to_js : __T -> Ojs.t) ->
            fun (__TReturn_to_js : __TReturn -> Ojs.t) ->
              fun (x66 : (__T, __TReturn) t) ->
                t_to_js __T_to_js __TReturn_to_js x66
    type 'T t_1 = ('T, any) t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 =
      fun (type __T) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x75 : Ojs.t) -> t_of_js __T_of_js any_of_js x75
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t =
      fun (type __T) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x72 : (__T, any) t) -> t_to_js __T_to_js any_to_js x72
  end
module Iterator =
  struct
    type ('T, 'TReturn, 'TNext) t =
      [ `Iterator of ('T * 'TReturn * 'TNext) ] intf
    let rec t_of_js :
      'T 'TReturn 'TNext .
        (Ojs.t -> 'T) ->
          (Ojs.t -> 'TReturn) ->
            (Ojs.t -> 'TNext) -> Ojs.t -> ('T, 'TReturn, 'TNext) t
      = fun _T -> fun _TReturn -> fun _TNext -> Obj.magic
    and t_to_js :
      'T 'TReturn 'TNext .
        ('T -> Ojs.t) ->
          ('TReturn -> Ojs.t) ->
            ('TNext -> Ojs.t) -> ('T, 'TReturn, 'TNext) t -> Ojs.t
      = fun _T -> fun _TReturn -> fun _TNext -> Obj.magic
    type ('T, 'TReturn, 'TNext) t_3 = ('T, 'TReturn, 'TNext) t
    let rec t_3_of_js :
      'T 'TReturn 'TNext .
        (Ojs.t -> 'T) ->
          (Ojs.t -> 'TReturn) ->
            (Ojs.t -> 'TNext) -> Ojs.t -> ('T, 'TReturn, 'TNext) t_3
      =
      fun (type __T) ->
        fun (type __TReturn) ->
          fun (type __TNext) ->
            fun (__T_of_js : Ojs.t -> __T) ->
              fun (__TReturn_of_js : Ojs.t -> __TReturn) ->
                fun (__TNext_of_js : Ojs.t -> __TNext) ->
                  fun (x82 : Ojs.t) ->
                    t_of_js __T_of_js __TReturn_of_js __TNext_of_js x82
    and t_3_to_js :
      'T 'TReturn 'TNext .
        ('T -> Ojs.t) ->
          ('TReturn -> Ojs.t) ->
            ('TNext -> Ojs.t) -> ('T, 'TReturn, 'TNext) t_3 -> Ojs.t
      =
      fun (type __T) ->
        fun (type __TReturn) ->
          fun (type __TNext) ->
            fun (__T_to_js : __T -> Ojs.t) ->
              fun (__TReturn_to_js : __TReturn -> Ojs.t) ->
                fun (__TNext_to_js : __TNext -> Ojs.t) ->
                  fun (x78 : (__T, __TReturn, __TNext) t) ->
                    t_to_js __T_to_js __TReturn_to_js __TNext_to_js x78
    type ('T, 'TReturn) t_2 = ('T, 'TReturn, undefined) t
    let rec t_2_of_js :
      'T 'TReturn .
        (Ojs.t -> 'T) -> (Ojs.t -> 'TReturn) -> Ojs.t -> ('T, 'TReturn) t_2
      =
      fun (type __T) ->
        fun (type __TReturn) ->
          fun (__T_of_js : Ojs.t -> __T) ->
            fun (__TReturn_of_js : Ojs.t -> __TReturn) ->
              fun (x90 : Ojs.t) ->
                t_of_js __T_of_js __TReturn_of_js undefined_of_js x90
    and t_2_to_js :
      'T 'TReturn .
        ('T -> Ojs.t) -> ('TReturn -> Ojs.t) -> ('T, 'TReturn) t_2 -> Ojs.t
      =
      fun (type __T) ->
        fun (type __TReturn) ->
          fun (__T_to_js : __T -> Ojs.t) ->
            fun (__TReturn_to_js : __TReturn -> Ojs.t) ->
              fun (x86 : (__T, __TReturn, undefined) t) ->
                t_to_js __T_to_js __TReturn_to_js undefined_to_js x86
    type 'T t_1 = ('T, any, undefined) t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 =
      fun (type __T) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x98 : Ojs.t) ->
            t_of_js __T_of_js any_of_js undefined_of_js x98
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t =
      fun (type __T) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x94 : (__T, any, undefined) t) ->
            t_to_js __T_to_js any_to_js undefined_to_js x94
    type ('T, 'TReturn, 'TNext) tags =
      [ `Iterator of ('T * 'TReturn * 'TNext) ]
    type ('T, 'TReturn, 'TNext) tags_3 = ('T, 'TReturn, 'TNext) tags
    type ('T, 'TReturn) tags_2 = ('T, 'TReturn, undefined) tags
    type 'T tags_1 = ('T, any, undefined) tags
    type ('tags, 'T, 'TReturn, 'TNext) this =
      'tags intf constraint 'tags =
                  [> `Iterator of ('T * 'TReturn * 'TNext) ]
    let rec this_of_js :
      'tags 'T 'TReturn 'TNext .
        (Ojs.t -> 'tags) ->
          (Ojs.t -> 'T) ->
            (Ojs.t -> 'TReturn) ->
              (Ojs.t -> 'TNext) ->
                Ojs.t -> ('tags, 'T, 'TReturn, 'TNext) this
      =
      fun (type __tags) ->
        fun (type __T) ->
          fun (type __TReturn) ->
            fun (type __TNext) ->
              fun (__tags_of_js : Ojs.t -> __tags) ->
                fun (__T_of_js : Ojs.t -> __T) ->
                  fun (__TReturn_of_js : Ojs.t -> __TReturn) ->
                    fun (__TNext_of_js : Ojs.t -> __TNext) ->
                      fun (x104 : Ojs.t) -> intf_of_js __tags_of_js x104
    and this_to_js :
      'tags 'T 'TReturn 'TNext .
        ('tags -> Ojs.t) ->
          ('T -> Ojs.t) ->
            ('TReturn -> Ojs.t) ->
              ('TNext -> Ojs.t) ->
                ('tags, 'T, 'TReturn, 'TNext) this -> Ojs.t
      =
      fun (type __tags) ->
        fun (type __T) ->
          fun (type __TReturn) ->
            fun (type __TNext) ->
              fun (__tags_to_js : __tags -> Ojs.t) ->
                fun (__T_to_js : __T -> Ojs.t) ->
                  fun (__TReturn_to_js : __TReturn -> Ojs.t) ->
                    fun (__TNext_to_js : __TNext -> Ojs.t) ->
                      fun (x102 : __tags intf) ->
                        intf_to_js __tags_to_js x102
    let (next :
      ('tags, 'T, 'TReturn, 'TNext) this ->
        args:any list -> ('T, 'TReturn) IteratorResult.t)
      =
      fun (x109 : ('tags, 'T, 'TReturn, 'TNext) this) ->
        fun ~args:(x106 : any list) ->
          IteratorResult.t_of_js Obj.magic Obj.magic
            (let x114 =
               this_to_js Obj.magic Obj.magic Obj.magic Obj.magic x109 in
             Ojs.call (Ojs.get_prop_ascii x114 "next") "apply"
               [|x114;((let x107 =
                          Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                            [||] in
                        List.iter
                          (fun (x108 : any) ->
                             ignore
                               (Ojs.call x107 "push" [|(any_to_js x108)|]))
                          x106;
                        x107))|])
    let (return :
      ('tags, 'T, 'TReturn, 'TNext) this ->
        ?value:'TReturn -> unit -> ('T, 'TReturn) IteratorResult.t)
      =
      fun (x120 : ('tags, 'T, 'TReturn, 'TNext) this) ->
        fun ?value:(x117 : 'TReturn option) ->
          fun () ->
            IteratorResult.t_of_js Obj.magic Obj.magic
              (let x125 =
                 this_to_js Obj.magic Obj.magic Obj.magic Obj.magic x120 in
               Ojs.call (Ojs.get_prop_ascii x125 "return") "apply"
                 [|x125;((let x118 =
                            Ojs.new_obj
                              (Ojs.get_prop_ascii Ojs.global "Array") 
                              [||] in
                          (match x117 with
                           | Some x119 ->
                               ignore
                                 (Ojs.call x118 "push" [|(Obj.magic x119)|])
                           | None -> ());
                          x118))|])
    let (throw :
      ('tags, 'T, 'TReturn, 'TNext) this ->
        ?e:any -> unit -> ('T, 'TReturn) IteratorResult.t)
      =
      fun (x131 : ('tags, 'T, 'TReturn, 'TNext) this) ->
        fun ?e:(x128 : any option) ->
          fun () ->
            IteratorResult.t_of_js Obj.magic Obj.magic
              (let x136 =
                 this_to_js Obj.magic Obj.magic Obj.magic Obj.magic x131 in
               Ojs.call (Ojs.get_prop_ascii x136 "throw") "apply"
                 [|x136;((let x129 =
                            Ojs.new_obj
                              (Ojs.get_prop_ascii Ojs.global "Array") 
                              [||] in
                          (match x128 with
                           | Some x130 ->
                               ignore
                                 (Ojs.call x129 "push" [|(any_to_js x130)|])
                           | None -> ());
                          x129))|])
    let cast_from = Obj.magic
  end
module Iterable =
  struct
    type 'T t = [ `Iterable of 'T ] intf
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun _T -> Obj.magic
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun _T -> Obj.magic
    type 'T t_1 = 'T t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 =
      fun (type __T) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x141 : Ojs.t) -> t_of_js __T_of_js x141
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t =
      fun (type __T) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x139 : __T t) -> t_to_js __T_to_js x139
    type 'T tags = [ `Iterable of 'T ]
    type 'T tags_1 = 'T tags
    type ('tags, 'T) this =
      'tags intf constraint 'tags = [> `Iterable of 'T ]
    let rec this_of_js :
      'tags 'T .
        (Ojs.t -> 'tags) -> (Ojs.t -> 'T) -> Ojs.t -> ('tags, 'T) this
      =
      fun (type __tags) ->
        fun (type __T) ->
          fun (__tags_of_js : Ojs.t -> __tags) ->
            fun (__T_of_js : Ojs.t -> __T) ->
              fun (x145 : Ojs.t) -> intf_of_js __tags_of_js x145
    and this_to_js :
      'tags 'T .
        ('tags -> Ojs.t) -> ('T -> Ojs.t) -> ('tags, 'T) this -> Ojs.t
      =
      fun (type __tags) ->
        fun (type __T) ->
          fun (__tags_to_js : __tags -> Ojs.t) ->
            fun (__T_to_js : __T -> Ojs.t) ->
              fun (x143 : __tags intf) -> intf_to_js __tags_to_js x143
    let cast_from = Obj.magic
  end
module WeakSet =
  struct
    type 'T t = [ `WeakSet of 'T ] intf
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun _T -> Obj.magic
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun _T -> Obj.magic
    type 'T t_1 = 'T t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 =
      fun (type __T) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x149 : Ojs.t) -> t_of_js __T_of_js x149
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t =
      fun (type __T) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x147 : __T t) -> t_to_js __T_to_js x147
    type 'T tags = [ `WeakSet of 'T ]
    type 'T tags_1 = 'T tags
    type ('tags, 'T) this = 'tags intf constraint 'tags = [> `WeakSet of 'T ]
    let rec this_of_js :
      'tags 'T .
        (Ojs.t -> 'tags) -> (Ojs.t -> 'T) -> Ojs.t -> ('tags, 'T) this
      =
      fun (type __tags) ->
        fun (type __T) ->
          fun (__tags_of_js : Ojs.t -> __tags) ->
            fun (__T_of_js : Ojs.t -> __T) ->
              fun (x153 : Ojs.t) -> intf_of_js __tags_of_js x153
    and this_to_js :
      'tags 'T .
        ('tags -> Ojs.t) -> ('T -> Ojs.t) -> ('tags, 'T) this -> Ojs.t
      =
      fun (type __tags) ->
        fun (type __T) ->
          fun (__tags_to_js : __tags -> Ojs.t) ->
            fun (__T_to_js : __T -> Ojs.t) ->
              fun (x151 : __tags intf) -> intf_to_js __tags_to_js x151
    let (add : ('tags, 'T) this -> value:'T -> ('tags, 'T) this) =
      fun (x156 : ('tags, 'T) this) ->
        fun ~value:(x155 : 'T) ->
          this_of_js Obj.magic Obj.magic
            (Ojs.call (this_to_js Obj.magic Obj.magic x156) "add"
               [|(Obj.magic x155)|])
    let (delete : ('tags, 'T) this -> value:'T -> bool) =
      fun (x162 : ('tags, 'T) this) ->
        fun ~value:(x161 : 'T) ->
          Ojs.bool_of_js
            (Ojs.call (this_to_js Obj.magic Obj.magic x162) "delete"
               [|(Obj.magic x161)|])
    let (has : ('tags, 'T) this -> value:'T -> bool) =
      fun (x166 : ('tags, 'T) this) ->
        fun ~value:(x165 : 'T) ->
          Ojs.bool_of_js
            (Ojs.call (this_to_js Obj.magic Obj.magic x166) "has"
               [|(Obj.magic x165)|])
    let (create : 'T Iterable.t -> 'T t) =
      fun (x169 : 'T Iterable.t) ->
        t_of_js Obj.magic
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "WeakSet")
             [|(Iterable.t_to_js Obj.magic x169)|])
    let (create' : ?values:'T list option -> unit -> 'T t) =
      fun ?values:(x172 : 'T list option option) ->
        fun () ->
          t_of_js Obj.magic
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "WeakSet")
               (let x173 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x172 with
                 | Some x174 ->
                     ignore
                       (Ojs.call x173 "push"
                          [|(Ojs.option_to_js
                               (fun (x175 : 'T list) ->
                                  Ojs.list_to_js Obj.magic x175) x174)|])
                 | None -> ());
                x173))
    let (prototype : unit -> untyped_object t) =
      fun () ->
        t_of_js untyped_object_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "WeakSet")
             "prototype")
    let cast_from = Obj.magic
  end
module WeakRef =
  struct
    type 'T t = [ `WeakRef of 'T ] intf
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun _T -> Obj.magic
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun _T -> Obj.magic
    type 'T t_1 = 'T t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 =
      fun (type __T) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x181 : Ojs.t) -> t_of_js __T_of_js x181
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t =
      fun (type __T) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x179 : __T t) -> t_to_js __T_to_js x179
    type 'T tags = [ `WeakRef of 'T ]
    type 'T tags_1 = 'T tags
    type ('tags, 'T) this = 'tags intf constraint 'tags = [> `WeakRef of 'T ]
    let rec this_of_js :
      'tags 'T .
        (Ojs.t -> 'tags) -> (Ojs.t -> 'T) -> Ojs.t -> ('tags, 'T) this
      =
      fun (type __tags) ->
        fun (type __T) ->
          fun (__tags_of_js : Ojs.t -> __tags) ->
            fun (__T_of_js : Ojs.t -> __T) ->
              fun (x185 : Ojs.t) -> intf_of_js __tags_of_js x185
    and this_to_js :
      'tags 'T .
        ('tags -> Ojs.t) -> ('T -> Ojs.t) -> ('tags, 'T) this -> Ojs.t
      =
      fun (type __tags) ->
        fun (type __T) ->
          fun (__tags_to_js : __tags -> Ojs.t) ->
            fun (__T_to_js : __T -> Ojs.t) ->
              fun (x183 : __tags intf) -> intf_to_js __tags_to_js x183
    let (deref : ('tags, 'T) this -> 'T option) =
      fun (x187 : ('tags, 'T) this) ->
        Ojs.option_of_js Obj.magic
          (Ojs.call (this_to_js Obj.magic Obj.magic x187) "deref" [||])
    let (deref' : ('tags, 'T) this -> 'T option) =
      fun (x191 : ('tags, 'T) this) ->
        Ojs.option_of_js Obj.magic
          (Ojs.call (this_to_js Obj.magic Obj.magic x191) "deref" [||])
    let (prototype : unit -> any t) =
      fun () ->
        t_of_js any_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "WeakRef")
             "prototype")
    let (create : ?target:'T -> unit -> 'T t) =
      fun ?target:(x196 : 'T option) ->
        fun () ->
          t_of_js Obj.magic
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "WeakRef")
               (let x197 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x196 with
                 | Some x198 ->
                     ignore (Ojs.call x197 "push" [|(Obj.magic x198)|])
                 | None -> ());
                x197))
    let (prototype' : unit -> any t) =
      fun () ->
        t_of_js any_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "WeakRef")
             "prototype")
    let (create' : 'T -> 'T t) =
      fun (x201 : 'T) ->
        t_of_js Obj.magic
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "WeakRef")
             [|(Obj.magic x201)|])
    let cast_from = Obj.magic
  end
module WeakMap =
  struct
    type ('K, 'V) t = [ `WeakMap of ('K * 'V) ] intf
    let rec t_of_js :
      'K 'V . (Ojs.t -> 'K) -> (Ojs.t -> 'V) -> Ojs.t -> ('K, 'V) t =
      fun _K -> fun _V -> Obj.magic
    and t_to_js :
      'K 'V . ('K -> Ojs.t) -> ('V -> Ojs.t) -> ('K, 'V) t -> Ojs.t =
      fun _K -> fun _V -> Obj.magic
    type ('K, 'V) t_2 = ('K, 'V) t
    let rec t_2_of_js :
      'K 'V . (Ojs.t -> 'K) -> (Ojs.t -> 'V) -> Ojs.t -> ('K, 'V) t_2 =
      fun (type __K) ->
        fun (type __V) ->
          fun (__K_of_js : Ojs.t -> __K) ->
            fun (__V_of_js : Ojs.t -> __V) ->
              fun (x206 : Ojs.t) -> t_of_js __K_of_js __V_of_js x206
    and t_2_to_js :
      'K 'V . ('K -> Ojs.t) -> ('V -> Ojs.t) -> ('K, 'V) t_2 -> Ojs.t =
      fun (type __K) ->
        fun (type __V) ->
          fun (__K_to_js : __K -> Ojs.t) ->
            fun (__V_to_js : __V -> Ojs.t) ->
              fun (x203 : (__K, __V) t) -> t_to_js __K_to_js __V_to_js x203
    type ('K, 'V) tags = [ `WeakMap of ('K * 'V) ]
    type ('K, 'V) tags_2 = ('K, 'V) tags
    type ('tags, 'K, 'V) this =
      'tags intf constraint 'tags = [> `WeakMap of ('K * 'V) ]
    let rec this_of_js :
      'tags 'K 'V .
        (Ojs.t -> 'tags) ->
          (Ojs.t -> 'K) -> (Ojs.t -> 'V) -> Ojs.t -> ('tags, 'K, 'V) this
      =
      fun (type __tags) ->
        fun (type __K) ->
          fun (type __V) ->
            fun (__tags_of_js : Ojs.t -> __tags) ->
              fun (__K_of_js : Ojs.t -> __K) ->
                fun (__V_of_js : Ojs.t -> __V) ->
                  fun (x211 : Ojs.t) -> intf_of_js __tags_of_js x211
    and this_to_js :
      'tags 'K 'V .
        ('tags -> Ojs.t) ->
          ('K -> Ojs.t) -> ('V -> Ojs.t) -> ('tags, 'K, 'V) this -> Ojs.t
      =
      fun (type __tags) ->
        fun (type __K) ->
          fun (type __V) ->
            fun (__tags_to_js : __tags -> Ojs.t) ->
              fun (__K_to_js : __K -> Ojs.t) ->
                fun (__V_to_js : __V -> Ojs.t) ->
                  fun (x209 : __tags intf) -> intf_to_js __tags_to_js x209
    let (delete : ('tags, 'K, 'V) this -> key:'K -> bool) =
      fun (x214 : ('tags, 'K, 'V) this) ->
        fun ~key:(x213 : 'K) ->
          Ojs.bool_of_js
            (Ojs.call (this_to_js Obj.magic Obj.magic Obj.magic x214)
               "delete" [|(Obj.magic x213)|])
    let (get_ : ('tags, 'K, 'V) this -> key:'K -> 'V option) =
      fun (x219 : ('tags, 'K, 'V) this) ->
        fun ~key:(x218 : 'K) ->
          Ojs.option_of_js Obj.magic
            (Ojs.call (this_to_js Obj.magic Obj.magic Obj.magic x219) "get"
               [|(Obj.magic x218)|])
    let (has : ('tags, 'K, 'V) this -> key:'K -> bool) =
      fun (x225 : ('tags, 'K, 'V) this) ->
        fun ~key:(x224 : 'K) ->
          Ojs.bool_of_js
            (Ojs.call (this_to_js Obj.magic Obj.magic Obj.magic x225) "has"
               [|(Obj.magic x224)|])
    let (set_ :
      ('tags, 'K, 'V) this -> key:'K -> value:'V -> ('tags, 'K, 'V) this) =
      fun (x231 : ('tags, 'K, 'V) this) ->
        fun ~key:(x229 : 'K) ->
          fun ~value:(x230 : 'V) ->
            this_of_js Obj.magic Obj.magic Obj.magic
              (Ojs.call (this_to_js Obj.magic Obj.magic Obj.magic x231) "set"
                 [|(Obj.magic x229);(Obj.magic x230)|])
    let (create : ('K * 'V) Iterable.t -> ('K, 'V) t) =
      fun (x238 : ('K * 'V) Iterable.t) ->
        t_of_js Obj.magic Obj.magic
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "WeakMap")
             [|(Iterable.t_to_js
                  (fun (x239 : ('K * 'V)) ->
                     let (x240, x241) = x239 in
                     let x242 = Ojs.array_make 2 in
                     Ojs.array_set x242 0 (Obj.magic x240);
                     Ojs.array_set x242 1 (Obj.magic x241);
                     x242) x238)|])
    let (create' : ?entries:('K * 'V) list option -> unit -> ('K, 'V) t) =
      fun ?entries:(x245 : ('K * 'V) list option option) ->
        fun () ->
          t_of_js Obj.magic Obj.magic
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "WeakMap")
               (let x246 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x245 with
                 | Some x247 ->
                     ignore
                       (Ojs.call x246 "push"
                          [|(Ojs.option_to_js
                               (fun (x248 : ('K * 'V) list) ->
                                  Ojs.list_to_js
                                    (fun (x249 : ('K * 'V)) ->
                                       let (x250, x251) = x249 in
                                       let x252 = Ojs.array_make 2 in
                                       Ojs.array_set x252 0 (Obj.magic x250);
                                       Ojs.array_set x252 1 (Obj.magic x251);
                                       x252) x248) x247)|])
                 | None -> ());
                x246))
    let (prototype : unit -> (untyped_object, any) t) =
      fun () ->
        t_of_js untyped_object_of_js any_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "WeakMap")
             "prototype")
    let cast_from = Obj.magic
  end
module Uppercase =
  struct
    type 'S t = Ojs.t
    let rec t_of_js : 'S . (Ojs.t -> 'S) -> Ojs.t -> 'S t =
      fun (type __S) ->
        fun (__S_of_js : Ojs.t -> __S) -> fun (x258 : Ojs.t) -> x258
    and t_to_js : 'S . ('S -> Ojs.t) -> 'S t -> Ojs.t =
      fun (type __S) ->
        fun (__S_to_js : __S -> Ojs.t) -> fun (x257 : Ojs.t) -> x257
    type 'S t_1 = 'S t
    let rec t_1_of_js : 'S . (Ojs.t -> 'S) -> Ojs.t -> 'S t_1 =
      fun (type __S) ->
        fun (__S_of_js : Ojs.t -> __S) ->
          fun (x261 : Ojs.t) -> t_of_js __S_of_js x261
    and t_1_to_js : 'S . ('S -> Ojs.t) -> 'S t_1 -> Ojs.t =
      fun (type __S) ->
        fun (__S_to_js : __S -> Ojs.t) ->
          fun (x259 : __S t) -> t_to_js __S_to_js x259
  end
module Uncapitalize =
  struct
    type 'S t = Ojs.t
    let rec t_of_js : 'S . (Ojs.t -> 'S) -> Ojs.t -> 'S t =
      fun (type __S) ->
        fun (__S_of_js : Ojs.t -> __S) -> fun (x264 : Ojs.t) -> x264
    and t_to_js : 'S . ('S -> Ojs.t) -> 'S t -> Ojs.t =
      fun (type __S) ->
        fun (__S_to_js : __S -> Ojs.t) -> fun (x263 : Ojs.t) -> x263
    type 'S t_1 = 'S t
    let rec t_1_of_js : 'S . (Ojs.t -> 'S) -> Ojs.t -> 'S t_1 =
      fun (type __S) ->
        fun (__S_of_js : Ojs.t -> __S) ->
          fun (x267 : Ojs.t) -> t_of_js __S_of_js x267
    and t_1_to_js : 'S . ('S -> Ojs.t) -> 'S t_1 -> Ojs.t =
      fun (type __S) ->
        fun (__S_to_js : __S -> Ojs.t) ->
          fun (x265 : __S t) -> t_to_js __S_to_js x265
  end
module SharedArrayBuffer =
  struct
    type t = [ `SharedArrayBuffer ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x270 : Ojs.t) -> t_of_js x270
    and t_0_to_js : t_0 -> Ojs.t = fun (x269 : t) -> t_to_js x269
    type tags = [ `SharedArrayBuffer ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `SharedArrayBuffer ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x273 : Ojs.t) -> intf_of_js __tags_of_js x273
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x271 : __tags intf) -> intf_to_js __tags_to_js x271
    let (get_byteLength : 'tags this -> float) =
      fun (x275 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x275) "byteLength")
    let (slice : 'tags this -> begin_:float -> ?end_:float -> unit -> t) =
      fun (x281 : 'tags this) ->
        fun ~begin_:(x277 : float) ->
          fun ?end_:(x278 : float option) ->
            fun () ->
              t_of_js
                (let x283 = this_to_js Obj.magic x281 in
                 Ojs.call (Ojs.get_prop_ascii x283 "slice") "apply"
                   [|x283;((let x279 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x279 "push"
                                 [|(Ojs.float_to_js x277)|]);
                            (match x278 with
                             | Some x280 ->
                                 ignore
                                   (Ojs.call x279 "push"
                                      [|(Ojs.float_to_js x280)|])
                             | None -> ());
                            x279))|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "SharedArrayBuffer") "prototype")
    let (create : float -> t) =
      fun (x284 : float) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "SharedArrayBuffer")
             [|(Ojs.float_to_js x284)|])
    let cast_from = Obj.magic
  end
module ArrayBuffer =
  struct
    type t = [ `ArrayBuffer ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x286 : Ojs.t) -> t_of_js x286
    and t_0_to_js : t_0 -> Ojs.t = fun (x285 : t) -> t_to_js x285
    type tags = [ `ArrayBuffer ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `ArrayBuffer ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x289 : Ojs.t) -> intf_of_js __tags_of_js x289
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x287 : __tags intf) -> intf_to_js __tags_to_js x287
    let (get_byteLength : 'tags this -> float) =
      fun (x291 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x291) "byteLength")
    let (slice : 'tags this -> begin_:float -> ?end_:float -> unit -> t) =
      fun (x297 : 'tags this) ->
        fun ~begin_:(x293 : float) ->
          fun ?end_:(x294 : float option) ->
            fun () ->
              t_of_js
                (let x299 = this_to_js Obj.magic x297 in
                 Ojs.call (Ojs.get_prop_ascii x299 "slice") "apply"
                   [|x299;((let x295 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x295 "push"
                                 [|(Ojs.float_to_js x293)|]);
                            (match x294 with
                             | Some x296 ->
                                 ignore
                                   (Ojs.call x295 "push"
                                      [|(Ojs.float_to_js x296)|])
                             | None -> ());
                            x295))|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "ArrayBuffer")
             "prototype")
    let (create : float -> t) =
      fun (x300 : float) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "ArrayBuffer")
             [|(Ojs.float_to_js x300)|])
    let (isView : any -> bool) =
      fun (x301 : any) ->
        Ojs.bool_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "ArrayBuffer") "isView"
             [|(any_to_js x301)|])
    let cast_from = Obj.magic
  end
module ArrayBufferLike =
  struct
    type t = (ArrayBuffer.t, SharedArrayBuffer.t) union2
    let rec t_of_js : Ojs.t -> t =
      fun (x305 : Ojs.t) ->
        union2_of_js ArrayBuffer.t_of_js SharedArrayBuffer.t_of_js x305
    and t_to_js : t -> Ojs.t =
      fun (x302 : (ArrayBuffer.t, SharedArrayBuffer.t) union2) ->
        union2_to_js ArrayBuffer.t_to_js SharedArrayBuffer.t_to_js x302
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x309 : Ojs.t) -> t_of_js x309
    and t_0_to_js : t_0 -> Ojs.t = fun (x308 : t) -> t_to_js x308
  end
module IterableIterator =
  struct
    type 'T t =
      [ `IterableIterator of 'T  | `Iterator of ('T * any * undefined) ] intf
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun _T -> Obj.magic
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun _T -> Obj.magic
    type 'T t_1 = 'T t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 =
      fun (type __T) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x312 : Ojs.t) -> t_of_js __T_of_js x312
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t =
      fun (type __T) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x310 : __T t) -> t_to_js __T_to_js x310
    type 'T tags =
      [ `IterableIterator of 'T  | `Iterator of ('T * any * undefined) ]
    type 'T tags_1 = 'T tags
    type ('tags, 'T) this =
      'tags intf constraint 'tags = [> `IterableIterator of 'T ]
    let rec this_of_js :
      'tags 'T .
        (Ojs.t -> 'tags) -> (Ojs.t -> 'T) -> Ojs.t -> ('tags, 'T) this
      =
      fun (type __tags) ->
        fun (type __T) ->
          fun (__tags_of_js : Ojs.t -> __tags) ->
            fun (__T_of_js : Ojs.t -> __T) ->
              fun (x316 : Ojs.t) -> intf_of_js __tags_of_js x316
    and this_to_js :
      'tags 'T .
        ('tags -> Ojs.t) -> ('T -> Ojs.t) -> ('tags, 'T) this -> Ojs.t
      =
      fun (type __tags) ->
        fun (type __T) ->
          fun (__tags_to_js : __tags -> Ojs.t) ->
            fun (__T_to_js : __T -> Ojs.t) ->
              fun (x314 : __tags intf) -> intf_to_js __tags_to_js x314
    let cast_from = Obj.magic
  end
module ArrayLike =
  struct
    type 'T t = [ `ArrayLike of 'T ] intf
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun _T -> Obj.magic
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun _T -> Obj.magic
    type 'T t_1 = 'T t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 =
      fun (type __T) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x320 : Ojs.t) -> t_of_js __T_of_js x320
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t =
      fun (type __T) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x318 : __T t) -> t_to_js __T_to_js x318
    type 'T tags = [ `ArrayLike of 'T ]
    type 'T tags_1 = 'T tags
    type ('tags, 'T) this =
      'tags intf constraint 'tags = [> `ArrayLike of 'T ]
    let rec this_of_js :
      'tags 'T .
        (Ojs.t -> 'tags) -> (Ojs.t -> 'T) -> Ojs.t -> ('tags, 'T) this
      =
      fun (type __tags) ->
        fun (type __T) ->
          fun (__tags_of_js : Ojs.t -> __tags) ->
            fun (__T_of_js : Ojs.t -> __T) ->
              fun (x324 : Ojs.t) -> intf_of_js __tags_of_js x324
    and this_to_js :
      'tags 'T .
        ('tags -> Ojs.t) -> ('T -> Ojs.t) -> ('tags, 'T) this -> Ojs.t
      =
      fun (type __tags) ->
        fun (type __T) ->
          fun (__tags_to_js : __tags -> Ojs.t) ->
            fun (__T_to_js : __T -> Ojs.t) ->
              fun (x322 : __tags intf) -> intf_to_js __tags_to_js x322
    let (get_length : ('tags, 'T) this -> float) =
      fun (x326 : ('tags, 'T) this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic Obj.magic x326) "length")
    let (get : ('tags, 'T) this -> float -> 'T) =
      fun (x329 : ('tags, 'T) this) ->
        fun (x332 : float) ->
          Obj.magic
            (Ojs.get_prop (this_to_js Obj.magic Obj.magic x329)
               (Ojs.float_to_js x332))
    let cast_from = Obj.magic
    let (of_ml : 'T list -> 'T t) =
      fun (x333 : 'T list) ->
        t_of_js Obj.magic (Ojs.list_to_js Obj.magic x333)
    let (to_ml : 'T t -> 'T list) =
      fun (x336 : 'T t) -> Ojs.list_of_js Obj.magic (t_to_js Obj.magic x336)
  end
module Uint8ClampedArray =
  struct
    type t =
      [ `Uint8ClampedArray  | float ArrayLike.tags_1
      | float IterableIterator.tags_1] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x340 : Ojs.t) -> t_of_js x340
    and t_0_to_js : t_0 -> Ojs.t = fun (x339 : t) -> t_to_js x339
    type tags =
      [ `Uint8ClampedArray  | float ArrayLike.tags_1
      | float IterableIterator.tags_1]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `Uint8ClampedArray ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x343 : Ojs.t) -> intf_of_js __tags_of_js x343
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x341 : __tags intf) -> intf_to_js __tags_to_js x341
    let (at : 'tags this -> index:float -> float option) =
      fun (x346 : 'tags this) ->
        fun ~index:(x345 : float) ->
          Ojs.option_of_js Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x346) "at"
               [|(Ojs.float_to_js x345)|])
    let (includes :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> bool)
      =
      fun (x353 : 'tags this) ->
        fun ~searchElement:(x349 : float) ->
          fun ?fromIndex:(x350 : float option) ->
            fun () ->
              Ojs.bool_of_js
                (let x355 = this_to_js Obj.magic x353 in
                 Ojs.call (Ojs.get_prop_ascii x355 "includes") "apply"
                   [|x355;((let x351 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x351 "push"
                                 [|(Ojs.float_to_js x349)|]);
                            (match x350 with
                             | Some x352 ->
                                 ignore
                                   (Ojs.call x351 "push"
                                      [|(Ojs.float_to_js x352)|])
                             | None -> ());
                            x351))|])
    let (entries : 'tags this -> (float * float) IterableIterator.t) =
      fun (x356 : 'tags this) ->
        IterableIterator.t_of_js
          (fun (x358 : Ojs.t) ->
             let x359 = x358 in
             ((Ojs.float_of_js (Ojs.array_get x359 0)),
               (Ojs.float_of_js (Ojs.array_get x359 1))))
          (Ojs.call (this_to_js Obj.magic x356) "entries" [||])
    let (keys : 'tags this -> float IterableIterator.t) =
      fun (x360 : 'tags this) ->
        IterableIterator.t_of_js Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x360) "keys" [||])
    let (values : 'tags this -> float IterableIterator.t) =
      fun (x363 : 'tags this) ->
        IterableIterator.t_of_js Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x363) "values" [||])
    let (get_BYTES_PER_ELEMENT : 'tags this -> float) =
      fun (x366 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x366) "BYTES_PER_ELEMENT")
    let (get_buffer : 'tags this -> ArrayBufferLike.t) =
      fun (x368 : 'tags this) ->
        ArrayBufferLike.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x368) "buffer")
    let (get_byteLength : 'tags this -> float) =
      fun (x370 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x370) "byteLength")
    let (get_byteOffset : 'tags this -> float) =
      fun (x372 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x372) "byteOffset")
    let (copyWithin :
      'tags this ->
        target:float -> start:float -> ?end_:float -> unit -> 'tags this)
      =
      fun (x379 : 'tags this) ->
        fun ~target:(x374 : float) ->
          fun ~start:(x375 : float) ->
            fun ?end_:(x376 : float option) ->
              fun () ->
                this_of_js Obj.magic
                  (let x381 = this_to_js Obj.magic x379 in
                   Ojs.call (Ojs.get_prop_ascii x381 "copyWithin") "apply"
                     [|x381;((let x377 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x377 "push"
                                   [|(Ojs.float_to_js x374)|]);
                              ignore
                                (Ojs.call x377 "push"
                                   [|(Ojs.float_to_js x375)|]);
                              (match x376 with
                               | Some x378 ->
                                   ignore
                                     (Ojs.call x377 "push"
                                        [|(Ojs.float_to_js x378)|])
                               | None -> ());
                              x377))|])
    let (every :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x390 : 'tags this) ->
        fun
          ~predicate:(x383 :
                       value:float -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x384 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x392 = this_to_js Obj.magic x390 in
                 Ojs.call (Ojs.get_prop_ascii x392 "every") "apply"
                   [|x392;((let x385 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x385 "push"
                                 [|(Ojs.fun_to_js 3
                                      (fun (x387 : Ojs.t) ->
                                         fun (x388 : Ojs.t) ->
                                           fun (x389 : Ojs.t) ->
                                             unknown_to_js
                                               (x383
                                                  ~value:(Ojs.float_of_js
                                                            x387)
                                                  ~index:(Ojs.float_of_js
                                                            x388)
                                                  ~array:(t_of_js x389))))|]);
                            (match x384 with
                             | Some x386 ->
                                 ignore
                                   (Ojs.call x385 "push" [|(any_to_js x386)|])
                             | None -> ());
                            x385))|])
    let (fill :
      'tags this ->
        value:float -> ?start:float -> ?end_:float -> unit -> 'tags this)
      =
      fun (x399 : 'tags this) ->
        fun ~value:(x393 : float) ->
          fun ?start:(x394 : float option) ->
            fun ?end_:(x395 : float option) ->
              fun () ->
                this_of_js Obj.magic
                  (let x401 = this_to_js Obj.magic x399 in
                   Ojs.call (Ojs.get_prop_ascii x401 "fill") "apply"
                     [|x401;((let x396 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x396 "push"
                                   [|(Ojs.float_to_js x393)|]);
                              (match x394 with
                               | Some x398 ->
                                   ignore
                                     (Ojs.call x396 "push"
                                        [|(Ojs.float_to_js x398)|])
                               | None -> ());
                              (match x395 with
                               | Some x397 ->
                                   ignore
                                     (Ojs.call x396 "push"
                                        [|(Ojs.float_to_js x397)|])
                               | None -> ());
                              x396))|])
    let (filter :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> any) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x410 : 'tags this) ->
        fun ~predicate:(x403 : value:float -> index:float -> array:t -> any)
          ->
          fun ?thisArg:(x404 : any option) ->
            fun () ->
              t_of_js
                (let x412 = this_to_js Obj.magic x410 in
                 Ojs.call (Ojs.get_prop_ascii x412 "filter") "apply"
                   [|x412;((let x405 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x405 "push"
                                 [|(Ojs.fun_to_js 3
                                      (fun (x407 : Ojs.t) ->
                                         fun (x408 : Ojs.t) ->
                                           fun (x409 : Ojs.t) ->
                                             any_to_js
                                               (x403
                                                  ~value:(Ojs.float_of_js
                                                            x407)
                                                  ~index:(Ojs.float_of_js
                                                            x408)
                                                  ~array:(t_of_js x409))))|]);
                            (match x404 with
                             | Some x406 ->
                                 ignore
                                   (Ojs.call x405 "push" [|(any_to_js x406)|])
                             | None -> ());
                            x405))|])
    let (find :
      'tags this ->
        predicate:(value:float -> index:float -> obj:t -> bool) ->
          ?thisArg:any -> unit -> float option)
      =
      fun (x420 : 'tags this) ->
        fun ~predicate:(x413 : value:float -> index:float -> obj:t -> bool)
          ->
          fun ?thisArg:(x414 : any option) ->
            fun () ->
              Ojs.option_of_js Ojs.float_of_js
                (let x422 = this_to_js Obj.magic x420 in
                 Ojs.call (Ojs.get_prop_ascii x422 "find") "apply"
                   [|x422;((let x415 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x415 "push"
                                 [|(Ojs.fun_to_js 3
                                      (fun (x417 : Ojs.t) ->
                                         fun (x418 : Ojs.t) ->
                                           fun (x419 : Ojs.t) ->
                                             Ojs.bool_to_js
                                               (x413
                                                  ~value:(Ojs.float_of_js
                                                            x417)
                                                  ~index:(Ojs.float_of_js
                                                            x418)
                                                  ~obj:(t_of_js x419))))|]);
                            (match x414 with
                             | Some x416 ->
                                 ignore
                                   (Ojs.call x415 "push" [|(any_to_js x416)|])
                             | None -> ());
                            x415))|])
    let (findIndex :
      'tags this ->
        predicate:(value:float -> index:float -> obj:t -> bool) ->
          ?thisArg:any -> unit -> float)
      =
      fun (x431 : 'tags this) ->
        fun ~predicate:(x424 : value:float -> index:float -> obj:t -> bool)
          ->
          fun ?thisArg:(x425 : any option) ->
            fun () ->
              Ojs.float_of_js
                (let x433 = this_to_js Obj.magic x431 in
                 Ojs.call (Ojs.get_prop_ascii x433 "findIndex") "apply"
                   [|x433;((let x426 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x426 "push"
                                 [|(Ojs.fun_to_js 3
                                      (fun (x428 : Ojs.t) ->
                                         fun (x429 : Ojs.t) ->
                                           fun (x430 : Ojs.t) ->
                                             Ojs.bool_to_js
                                               (x424
                                                  ~value:(Ojs.float_of_js
                                                            x428)
                                                  ~index:(Ojs.float_of_js
                                                            x429)
                                                  ~obj:(t_of_js x430))))|]);
                            (match x425 with
                             | Some x427 ->
                                 ignore
                                   (Ojs.call x426 "push" [|(any_to_js x427)|])
                             | None -> ());
                            x426))|])
    let (forEach :
      'tags this ->
        callbackfn:(value:float -> index:float -> array:t -> unit) ->
          ?thisArg:any -> unit -> unit)
      =
      fun (x441 : 'tags this) ->
        fun
          ~callbackfn:(x434 : value:float -> index:float -> array:t -> unit)
          ->
          fun ?thisArg:(x435 : any option) ->
            fun () ->
              ignore
                (let x443 = this_to_js Obj.magic x441 in
                 Ojs.call (Ojs.get_prop_ascii x443 "forEach") "apply"
                   [|x443;((let x436 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x436 "push"
                                 [|(Ojs.fun_to_js 3
                                      (fun (x438 : Ojs.t) ->
                                         fun (x439 : Ojs.t) ->
                                           fun (x440 : Ojs.t) ->
                                             x434
                                               ~value:(Ojs.float_of_js x438)
                                               ~index:(Ojs.float_of_js x439)
                                               ~array:(t_of_js x440)))|]);
                            (match x435 with
                             | Some x437 ->
                                 ignore
                                   (Ojs.call x436 "push" [|(any_to_js x437)|])
                             | None -> ());
                            x436))|])
    let (indexOf :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> float)
      =
      fun (x448 : 'tags this) ->
        fun ~searchElement:(x444 : float) ->
          fun ?fromIndex:(x445 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x450 = this_to_js Obj.magic x448 in
                 Ojs.call (Ojs.get_prop_ascii x450 "indexOf") "apply"
                   [|x450;((let x446 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x446 "push"
                                 [|(Ojs.float_to_js x444)|]);
                            (match x445 with
                             | Some x447 ->
                                 ignore
                                   (Ojs.call x446 "push"
                                      [|(Ojs.float_to_js x447)|])
                             | None -> ());
                            x446))|])
    let (join : 'tags this -> ?separator:string -> unit -> string) =
      fun (x454 : 'tags this) ->
        fun ?separator:(x451 : string option) ->
          fun () ->
            Ojs.string_of_js
              (let x456 = this_to_js Obj.magic x454 in
               Ojs.call (Ojs.get_prop_ascii x456 "join") "apply"
                 [|x456;((let x452 =
                            Ojs.new_obj
                              (Ojs.get_prop_ascii Ojs.global "Array") 
                              [||] in
                          (match x451 with
                           | Some x453 ->
                               ignore
                                 (Ojs.call x452 "push"
                                    [|(Ojs.string_to_js x453)|])
                           | None -> ());
                          x452))|])
    let (lastIndexOf :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> float)
      =
      fun (x461 : 'tags this) ->
        fun ~searchElement:(x457 : float) ->
          fun ?fromIndex:(x458 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x463 = this_to_js Obj.magic x461 in
                 Ojs.call (Ojs.get_prop_ascii x463 "lastIndexOf") "apply"
                   [|x463;((let x459 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x459 "push"
                                 [|(Ojs.float_to_js x457)|]);
                            (match x458 with
                             | Some x460 ->
                                 ignore
                                   (Ojs.call x459 "push"
                                      [|(Ojs.float_to_js x460)|])
                             | None -> ());
                            x459))|])
    let (get_length : 'tags this -> float) =
      fun (x464 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x464) "length")
    let (map :
      'tags this ->
        callbackfn:(value:float -> index:float -> array:t -> float) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x473 : 'tags this) ->
        fun
          ~callbackfn:(x466 : value:float -> index:float -> array:t -> float)
          ->
          fun ?thisArg:(x467 : any option) ->
            fun () ->
              t_of_js
                (let x475 = this_to_js Obj.magic x473 in
                 Ojs.call (Ojs.get_prop_ascii x475 "map") "apply"
                   [|x475;((let x468 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x468 "push"
                                 [|(Ojs.fun_to_js 3
                                      (fun (x470 : Ojs.t) ->
                                         fun (x471 : Ojs.t) ->
                                           fun (x472 : Ojs.t) ->
                                             Ojs.float_to_js
                                               (x466
                                                  ~value:(Ojs.float_of_js
                                                            x470)
                                                  ~index:(Ojs.float_of_js
                                                            x471)
                                                  ~array:(t_of_js x472))))|]);
                            (match x467 with
                             | Some x469 ->
                                 ignore
                                   (Ojs.call x468 "push" [|(any_to_js x469)|])
                             | None -> ());
                            x468))|])
    let (reduce :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> float)
      =
      fun (x481 : 'tags this) ->
        fun
          ~callbackfn:(x476 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x481) "reduce"
               [|(Ojs.fun_to_js 4
                    (fun (x477 : Ojs.t) ->
                       fun (x478 : Ojs.t) ->
                         fun (x479 : Ojs.t) ->
                           fun (x480 : Ojs.t) ->
                             Ojs.float_to_js
                               (x476 ~previousValue:(Ojs.float_of_js x477)
                                  ~currentValue:(Ojs.float_of_js x478)
                                  ~currentIndex:(Ojs.float_of_js x479)
                                  ~array:(t_of_js x480))))|])
    let (reduce' :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> initialValue:float -> float)
      =
      fun (x489 : 'tags this) ->
        fun
          ~callbackfn:(x483 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          fun ~initialValue:(x488 : float) ->
            Ojs.float_of_js
              (Ojs.call (this_to_js Obj.magic x489) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x484 : Ojs.t) ->
                         fun (x485 : Ojs.t) ->
                           fun (x486 : Ojs.t) ->
                             fun (x487 : Ojs.t) ->
                               Ojs.float_to_js
                                 (x483 ~previousValue:(Ojs.float_of_js x484)
                                    ~currentValue:(Ojs.float_of_js x485)
                                    ~currentIndex:(Ojs.float_of_js x486)
                                    ~array:(t_of_js x487))));(Ojs.float_to_js
                                                                x488)|])
    let (reduce'' :
      'tags this ->
        callbackfn:(previousValue:'U ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x497 : 'tags this) ->
        fun
          ~callbackfn:(x491 :
                        previousValue:'U ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x496 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic x497) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x492 : Ojs.t) ->
                         fun (x493 : Ojs.t) ->
                           fun (x494 : Ojs.t) ->
                             fun (x495 : Ojs.t) ->
                               Obj.magic
                                 (x491 ~previousValue:(Obj.magic x492)
                                    ~currentValue:(Ojs.float_of_js x493)
                                    ~currentIndex:(Ojs.float_of_js x494)
                                    ~array:(t_of_js x495))));(Obj.magic x496)|])
    let (reduceRight :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> float)
      =
      fun (x504 : 'tags this) ->
        fun
          ~callbackfn:(x499 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x504) "reduceRight"
               [|(Ojs.fun_to_js 4
                    (fun (x500 : Ojs.t) ->
                       fun (x501 : Ojs.t) ->
                         fun (x502 : Ojs.t) ->
                           fun (x503 : Ojs.t) ->
                             Ojs.float_to_js
                               (x499 ~previousValue:(Ojs.float_of_js x500)
                                  ~currentValue:(Ojs.float_of_js x501)
                                  ~currentIndex:(Ojs.float_of_js x502)
                                  ~array:(t_of_js x503))))|])
    let (reduceRight' :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> initialValue:float -> float)
      =
      fun (x512 : 'tags this) ->
        fun
          ~callbackfn:(x506 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          fun ~initialValue:(x511 : float) ->
            Ojs.float_of_js
              (Ojs.call (this_to_js Obj.magic x512) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x507 : Ojs.t) ->
                         fun (x508 : Ojs.t) ->
                           fun (x509 : Ojs.t) ->
                             fun (x510 : Ojs.t) ->
                               Ojs.float_to_js
                                 (x506 ~previousValue:(Ojs.float_of_js x507)
                                    ~currentValue:(Ojs.float_of_js x508)
                                    ~currentIndex:(Ojs.float_of_js x509)
                                    ~array:(t_of_js x510))));(Ojs.float_to_js
                                                                x511)|])
    let (reduceRight'' :
      'tags this ->
        callbackfn:(previousValue:'U ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x520 : 'tags this) ->
        fun
          ~callbackfn:(x514 :
                        previousValue:'U ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x519 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic x520) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x515 : Ojs.t) ->
                         fun (x516 : Ojs.t) ->
                           fun (x517 : Ojs.t) ->
                             fun (x518 : Ojs.t) ->
                               Obj.magic
                                 (x514 ~previousValue:(Obj.magic x515)
                                    ~currentValue:(Ojs.float_of_js x516)
                                    ~currentIndex:(Ojs.float_of_js x517)
                                    ~array:(t_of_js x518))));(Obj.magic x519)|])
    let (reverse : 'tags this -> t) =
      fun (x522 : 'tags this) ->
        t_of_js (Ojs.call (this_to_js Obj.magic x522) "reverse" [||])
    let (set_ :
      'tags this -> array:float ArrayLike.t -> ?offset:float -> unit -> unit)
      =
      fun (x529 : 'tags this) ->
        fun ~array:(x524 : float ArrayLike.t) ->
          fun ?offset:(x525 : float option) ->
            fun () ->
              ignore
                (let x531 = this_to_js Obj.magic x529 in
                 Ojs.call (Ojs.get_prop_ascii x531 "set") "apply"
                   [|x531;((let x526 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x526 "push"
                                 [|(ArrayLike.t_to_js Ojs.float_to_js x524)|]);
                            (match x525 with
                             | Some x527 ->
                                 ignore
                                   (Ojs.call x526 "push"
                                      [|(Ojs.float_to_js x527)|])
                             | None -> ());
                            x526))|])
    let (slice : 'tags this -> ?start:float -> ?end_:float -> unit -> t) =
      fun (x537 : 'tags this) ->
        fun ?start:(x532 : float option) ->
          fun ?end_:(x533 : float option) ->
            fun () ->
              t_of_js
                (let x539 = this_to_js Obj.magic x537 in
                 Ojs.call (Ojs.get_prop_ascii x539 "slice") "apply"
                   [|x539;((let x534 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x532 with
                             | Some x536 ->
                                 ignore
                                   (Ojs.call x534 "push"
                                      [|(Ojs.float_to_js x536)|])
                             | None -> ());
                            (match x533 with
                             | Some x535 ->
                                 ignore
                                   (Ojs.call x534 "push"
                                      [|(Ojs.float_to_js x535)|])
                             | None -> ());
                            x534))|])
    let (some :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x547 : 'tags this) ->
        fun
          ~predicate:(x540 :
                       value:float -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x541 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x549 = this_to_js Obj.magic x547 in
                 Ojs.call (Ojs.get_prop_ascii x549 "some") "apply"
                   [|x549;((let x542 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x542 "push"
                                 [|(Ojs.fun_to_js 3
                                      (fun (x544 : Ojs.t) ->
                                         fun (x545 : Ojs.t) ->
                                           fun (x546 : Ojs.t) ->
                                             unknown_to_js
                                               (x540
                                                  ~value:(Ojs.float_of_js
                                                            x544)
                                                  ~index:(Ojs.float_of_js
                                                            x545)
                                                  ~array:(t_of_js x546))))|]);
                            (match x541 with
                             | Some x543 ->
                                 ignore
                                   (Ojs.call x542 "push" [|(any_to_js x543)|])
                             | None -> ());
                            x542))|])
    let (sort :
      'tags this ->
        ?compareFn:(a:float -> b:float -> float) -> unit -> 'tags this)
      =
      fun (x555 : 'tags this) ->
        fun ?compareFn:(x550 : (a:float -> b:float -> float) option) ->
          fun () ->
            this_of_js Obj.magic
              (let x557 = this_to_js Obj.magic x555 in
               Ojs.call (Ojs.get_prop_ascii x557 "sort") "apply"
                 [|x557;((let x551 =
                            Ojs.new_obj
                              (Ojs.get_prop_ascii Ojs.global "Array") 
                              [||] in
                          (match x550 with
                           | Some x552 ->
                               ignore
                                 (Ojs.call x551 "push"
                                    [|(Ojs.fun_to_js 2
                                         (fun (x553 : Ojs.t) ->
                                            fun (x554 : Ojs.t) ->
                                              Ojs.float_to_js
                                                (x552
                                                   ~a:(Ojs.float_of_js x553)
                                                   ~b:(Ojs.float_of_js x554))))|])
                           | None -> ());
                          x551))|])
    let (subarray : 'tags this -> ?begin_:float -> ?end_:float -> unit -> t)
      =
      fun (x564 : 'tags this) ->
        fun ?begin_:(x559 : float option) ->
          fun ?end_:(x560 : float option) ->
            fun () ->
              t_of_js
                (let x566 = this_to_js Obj.magic x564 in
                 Ojs.call (Ojs.get_prop_ascii x566 "subarray") "apply"
                   [|x566;((let x561 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x559 with
                             | Some x563 ->
                                 ignore
                                   (Ojs.call x561 "push"
                                      [|(Ojs.float_to_js x563)|])
                             | None -> ());
                            (match x560 with
                             | Some x562 ->
                                 ignore
                                   (Ojs.call x561 "push"
                                      [|(Ojs.float_to_js x562)|])
                             | None -> ());
                            x561))|])
    let (toLocaleString : 'tags this -> string) =
      fun (x567 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x567) "toLocaleString" [||])
    let (toString : 'tags this -> string) =
      fun (x569 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x569) "toString" [||])
    let (valueOf : 'tags this -> t) =
      fun (x571 : 'tags this) ->
        t_of_js (Ojs.call (this_to_js Obj.magic x571) "valueOf" [||])
    let (get : 'tags this -> float -> float) =
      fun (x573 : 'tags this) ->
        fun (x575 : float) ->
          Ojs.float_of_js
            (Ojs.get_prop (this_to_js Obj.magic x573) (Ojs.float_to_js x575))
    let (set : 'tags this -> float -> float -> unit) =
      fun (x576 : 'tags this) ->
        fun (x578 : float) ->
          fun (x579 : float) ->
            Ojs.set_prop (this_to_js Obj.magic x576) (Ojs.float_to_js x578)
              (Ojs.float_to_js x579)
    let (create : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Uint8ClampedArray")
             [||])
    let (create' : float Iterable.t -> t) =
      fun (x580 : float Iterable.t) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Uint8ClampedArray")
             [|(Iterable.t_to_js Ojs.float_to_js x580)|])
    let (from :
      arrayLike:float Iterable.t ->
        ?mapfn:(v:float -> k:float -> float) -> ?thisArg:any -> unit -> t)
      =
      fun ~arrayLike:(x582 : float Iterable.t) ->
        fun ?mapfn:(x583 : (v:float -> k:float -> float) option) ->
          fun ?thisArg:(x584 : any option) ->
            fun () ->
              t_of_js
                (let x591 = Ojs.get_prop_ascii Ojs.global "Uint8ClampedArray" in
                 Ojs.call (Ojs.get_prop_ascii x591 "from") "apply"
                   [|x591;((let x585 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x585 "push"
                                 [|(Iterable.t_to_js Ojs.float_to_js x582)|]);
                            (match x583 with
                             | Some x587 ->
                                 ignore
                                   (Ojs.call x585 "push"
                                      [|(Ojs.fun_to_js 2
                                           (fun (x588 : Ojs.t) ->
                                              fun (x589 : Ojs.t) ->
                                                Ojs.float_to_js
                                                  (x587
                                                     ~v:(Ojs.float_of_js x588)
                                                     ~k:(Ojs.float_of_js x589))))|])
                             | None -> ());
                            (match x584 with
                             | Some x586 ->
                                 ignore
                                   (Ojs.call x585 "push" [|(any_to_js x586)|])
                             | None -> ());
                            x585))|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "Uint8ClampedArray") "prototype")
    let (create'' : float -> t) =
      fun (x592 : float) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Uint8ClampedArray")
             [|(Ojs.float_to_js x592)|])
    let (create''' :
      [ `U1 of float ArrayLike.t  | `U2 of ArrayBufferLike.t ] -> t) =
      fun (x593 : [ `U1 of float ArrayLike.t  | `U2 of ArrayBufferLike.t ])
        ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Uint8ClampedArray")
             [|((match x593 with
                 | `U1 x594 -> ArrayLike.t_to_js Ojs.float_to_js x594
                 | `U2 x596 -> ArrayBufferLike.t_to_js x596))|])
    let (create'''' :
      buffer:ArrayBufferLike.t ->
        ?byteOffset:float -> ?length:float -> unit -> t)
      =
      fun ~buffer:(x597 : ArrayBufferLike.t) ->
        fun ?byteOffset:(x598 : float option) ->
          fun ?length:(x599 : float option) ->
            fun () ->
              t_of_js
                (Ojs.new_obj_arr
                   (Ojs.get_prop_ascii Ojs.global "Uint8ClampedArray")
                   (let x600 =
                      Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                        [||] in
                    ignore
                      (Ojs.call x600 "push"
                         [|(ArrayBufferLike.t_to_js x597)|]);
                    (match x598 with
                     | Some x602 ->
                         ignore
                           (Ojs.call x600 "push" [|(Ojs.float_to_js x602)|])
                     | None -> ());
                    (match x599 with
                     | Some x601 ->
                         ignore
                           (Ojs.call x600 "push" [|(Ojs.float_to_js x601)|])
                     | None -> ());
                    x600))
    let (bytes_per_element : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "Uint8ClampedArray")
             "BYTES_PER_ELEMENT")
    let (of_ : float list -> t) =
      fun (x603 : float list) ->
        t_of_js
          (let x606 = Ojs.get_prop_ascii Ojs.global "Uint8ClampedArray" in
           Ojs.call (Ojs.get_prop_ascii x606 "of") "apply"
             [|x606;((let x604 =
                        Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                          [||] in
                      List.iter
                        (fun (x605 : float) ->
                           ignore
                             (Ojs.call x604 "push" [|(Ojs.float_to_js x605)|]))
                        x603;
                      x604))|])
    let (from' : float ArrayLike.t -> t) =
      fun (x607 : float ArrayLike.t) ->
        t_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Uint8ClampedArray")
             "from" [|(ArrayLike.t_to_js Ojs.float_to_js x607)|])
    let (from'' :
      arrayLike:'T ArrayLike.t ->
        mapfn:(v:'T -> k:float -> float) -> ?thisArg:any -> unit -> t)
      =
      fun ~arrayLike:(x609 : 'T ArrayLike.t) ->
        fun ~mapfn:(x610 : v:'T -> k:float -> float) ->
          fun ?thisArg:(x611 : any option) ->
            fun () ->
              t_of_js
                (let x617 = Ojs.get_prop_ascii Ojs.global "Uint8ClampedArray" in
                 Ojs.call (Ojs.get_prop_ascii x617 "from") "apply"
                   [|x617;((let x612 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x612 "push"
                                 [|(ArrayLike.t_to_js Obj.magic x609)|]);
                            ignore
                              (Ojs.call x612 "push"
                                 [|(Ojs.fun_to_js 2
                                      (fun (x614 : Ojs.t) ->
                                         fun (x615 : Ojs.t) ->
                                           Ojs.float_to_js
                                             (x610 ~v:(Obj.magic x614)
                                                ~k:(Ojs.float_of_js x615))))|]);
                            (match x611 with
                             | Some x613 ->
                                 ignore
                                   (Ojs.call x612 "push" [|(any_to_js x613)|])
                             | None -> ());
                            x612))|])
    let cast_from = Obj.magic
  end
module rec
  Error:sig
          type t = [ `Error ] intf
          type t_0 = t
          [@@@js.stop ]
          type tags = [ `Error ]
          type tags_0 = tags
          [@@@js.start ]
          [@@@js.implem type tags = [ `Error ]
            type tags_0 = tags]
          type 'tags this = 'tags intf constraint 'tags = [> `Error ]
          val t_to_js : t -> Ojs.t
          val t_of_js : Ojs.t -> t
          val t_0_to_js : t_0 -> Ojs.t
          val t_0_of_js : Ojs.t -> t_0
          val get_cause : 'tags this -> t option
          val set_cause : 'tags this -> t -> unit
          val get_name : 'tags this -> string
          val set_name : 'tags this -> string -> unit
          val get_message : 'tags this -> string
          val set_message : 'tags this -> string -> unit
          val get_stack : 'tags this -> string option
          val set_stack : 'tags this -> string -> unit
          val create :
            ?message:string -> ?options:ErrorOptions.t -> unit -> t
          val invoke :
            ?message:string -> ?options:ErrorOptions.t -> unit -> t
          val create' : ?message:string -> unit -> t
          val invoke' : ?message:string -> unit -> t
          val prototype : unit -> t
          val create'' :
            ?cause:t ->
              name:string -> message:string -> ?stack:string -> unit -> t
          val cast_from : 'tags this -> t
        end =
  struct
    type t = [ `Error ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x619 : Ojs.t) -> t_of_js x619
    and t_0_to_js : t_0 -> Ojs.t = fun (x618 : t) -> t_to_js x618
    type tags = [ `Error ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `Error ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x622 : Ojs.t) -> intf_of_js __tags_of_js x622
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x620 : __tags intf) -> intf_to_js __tags_to_js x620
    let (get_cause : 'tags this -> t option) =
      fun (x624 : 'tags this) ->
        Ojs.option_of_js t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x624) "cause")
    let (set_cause : 'tags this -> t -> unit) =
      fun (x627 : 'tags this) ->
        fun (x628 : t) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x627) "cause"
            (t_to_js x628)
    let (get_name : 'tags this -> string) =
      fun (x630 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x630) "name")
    let (set_name : 'tags this -> string -> unit) =
      fun (x632 : 'tags this) ->
        fun (x633 : string) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x632) "name"
            (Ojs.string_to_js x633)
    let (get_message : 'tags this -> string) =
      fun (x635 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x635) "message")
    let (set_message : 'tags this -> string -> unit) =
      fun (x637 : 'tags this) ->
        fun (x638 : string) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x637) "message"
            (Ojs.string_to_js x638)
    let (get_stack : 'tags this -> string option) =
      fun (x640 : 'tags this) ->
        Ojs.option_of_js Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x640) "stack")
    let (set_stack : 'tags this -> string -> unit) =
      fun (x643 : 'tags this) ->
        fun (x644 : string) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x643) "stack"
            (Ojs.string_to_js x644)
    let (create : ?message:string -> ?options:ErrorOptions.t -> unit -> t) =
      fun ?message:(x646 : string option) ->
        fun ?options:(x647 : ErrorOptions.t option) ->
          fun () ->
            t_of_js
              (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "Error")
                 (let x648 =
                    Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                  (match x646 with
                   | Some x650 ->
                       ignore
                         (Ojs.call x648 "push" [|(Ojs.string_to_js x650)|])
                   | None -> ());
                  (match x647 with
                   | Some x649 ->
                       ignore
                         (Ojs.call x648 "push"
                            [|(ErrorOptions.t_to_js x649)|])
                   | None -> ());
                  x648))
    let (invoke : ?message:string -> ?options:ErrorOptions.t -> unit -> t) =
      fun ?message:(x651 : string option) ->
        fun ?options:(x652 : ErrorOptions.t option) ->
          fun () ->
            t_of_js
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "Error") "apply"
                 [|Ojs.null;((let x653 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              (match x651 with
                               | Some x655 ->
                                   ignore
                                     (Ojs.call x653 "push"
                                        [|(Ojs.string_to_js x655)|])
                               | None -> ());
                              (match x652 with
                               | Some x654 ->
                                   ignore
                                     (Ojs.call x653 "push"
                                        [|(ErrorOptions.t_to_js x654)|])
                               | None -> ());
                              x653))|])
    let (create' : ?message:string -> unit -> t) =
      fun ?message:(x656 : string option) ->
        fun () ->
          t_of_js
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "Error")
               (let x657 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x656 with
                 | Some x658 ->
                     ignore
                       (Ojs.call x657 "push" [|(Ojs.string_to_js x658)|])
                 | None -> ());
                x657))
    let (invoke' : ?message:string -> unit -> t) =
      fun ?message:(x659 : string option) ->
        fun () ->
          t_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "Error") "apply"
               [|Ojs.null;((let x660 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x659 with
                             | Some x661 ->
                                 ignore
                                   (Ojs.call x660 "push"
                                      [|(Ojs.string_to_js x661)|])
                             | None -> ());
                            x660))|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Error")
             "prototype")
    let (create'' :
      ?cause:t -> name:string -> message:string -> ?stack:string -> unit -> t)
      =
      fun ?cause:(x662 : t option) ->
        fun ~name:(x663 : string) ->
          fun ~message:(x664 : string) ->
            fun ?stack:(x665 : string option) ->
              fun () ->
                let x666 = Ojs.empty_obj () in
                (match x662 with
                 | Some x668 ->
                     Ojs.set_prop_ascii x666 "cause" (t_to_js x668)
                 | None -> ());
                Ojs.set_prop_ascii x666 "name" (Ojs.string_to_js x663);
                Ojs.set_prop_ascii x666 "message" (Ojs.string_to_js x664);
                (match x665 with
                 | Some x667 ->
                     Ojs.set_prop_ascii x666 "stack" (Ojs.string_to_js x667)
                 | None -> ());
                t_of_js x666
    let cast_from = Obj.magic
  end
 and
  ErrorOptions:sig
                 type t = [ `ErrorOptions ] intf
                 type t_0 = t
                 [@@@js.stop ]
                 type tags = [ `ErrorOptions ]
                 type tags_0 = tags
                 [@@@js.start ]
                 [@@@js.implem
                   type tags = [ `ErrorOptions ]
                   type tags_0 = tags]
                 type 'tags this =
                   'tags intf constraint 'tags = [> `ErrorOptions ]
                 val t_to_js : t -> Ojs.t
                 val t_of_js : Ojs.t -> t
                 val t_0_to_js : t_0 -> Ojs.t
                 val t_0_of_js : Ojs.t -> t_0
                 val get_cause : 'tags this -> Error.t option
                 val set_cause : 'tags this -> Error.t -> unit
                 val create : ?cause:Error.t -> unit -> t
                 val cast_from : 'tags this -> t
               end =
  struct
    type t = [ `ErrorOptions ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x670 : Ojs.t) -> t_of_js x670
    and t_0_to_js : t_0 -> Ojs.t = fun (x669 : t) -> t_to_js x669
    type tags = [ `ErrorOptions ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `ErrorOptions ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x673 : Ojs.t) -> intf_of_js __tags_of_js x673
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x671 : __tags intf) -> intf_to_js __tags_to_js x671
    let (get_cause : 'tags this -> Error.t option) =
      fun (x675 : 'tags this) ->
        Ojs.option_of_js Error.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x675) "cause")
    let (set_cause : 'tags this -> Error.t -> unit) =
      fun (x678 : 'tags this) ->
        fun (x679 : Error.t) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x678) "cause"
            (Error.t_to_js x679)
    let (create : ?cause:Error.t -> unit -> t) =
      fun ?cause:(x681 : Error.t option) ->
        fun () ->
          let x682 = Ojs.empty_obj () in
          (match x681 with
           | Some x683 ->
               Ojs.set_prop_ascii x682 "cause" (Error.t_to_js x683)
           | None -> ());
          t_of_js x682
    let cast_from = Obj.magic
  end
module URIError =
  struct
    type t = [ `Error  | `URIError ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x685 : Ojs.t) -> t_of_js x685
    and t_0_to_js : t_0 -> Ojs.t = fun (x684 : t) -> t_to_js x684
    type tags = [ `Error  | `URIError ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `URIError ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x688 : Ojs.t) -> intf_of_js __tags_of_js x688
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x686 : __tags intf) -> intf_to_js __tags_to_js x686
    let (create : ?message:string -> ?options:ErrorOptions.t -> unit -> t) =
      fun ?message:(x690 : string option) ->
        fun ?options:(x691 : ErrorOptions.t option) ->
          fun () ->
            t_of_js
              (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "URIError")
                 (let x692 =
                    Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                  (match x690 with
                   | Some x694 ->
                       ignore
                         (Ojs.call x692 "push" [|(Ojs.string_to_js x694)|])
                   | None -> ());
                  (match x691 with
                   | Some x693 ->
                       ignore
                         (Ojs.call x692 "push"
                            [|(ErrorOptions.t_to_js x693)|])
                   | None -> ());
                  x692))
    let (invoke : ?message:string -> ?options:ErrorOptions.t -> unit -> t) =
      fun ?message:(x695 : string option) ->
        fun ?options:(x696 : ErrorOptions.t option) ->
          fun () ->
            t_of_js
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "URIError") "apply"
                 [|Ojs.null;((let x697 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              (match x695 with
                               | Some x699 ->
                                   ignore
                                     (Ojs.call x697 "push"
                                        [|(Ojs.string_to_js x699)|])
                               | None -> ());
                              (match x696 with
                               | Some x698 ->
                                   ignore
                                     (Ojs.call x697 "push"
                                        [|(ErrorOptions.t_to_js x698)|])
                               | None -> ());
                              x697))|])
    let (create' : ?message:string -> unit -> t) =
      fun ?message:(x700 : string option) ->
        fun () ->
          t_of_js
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "URIError")
               (let x701 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x700 with
                 | Some x702 ->
                     ignore
                       (Ojs.call x701 "push" [|(Ojs.string_to_js x702)|])
                 | None -> ());
                x701))
    let (invoke' : ?message:string -> unit -> t) =
      fun ?message:(x703 : string option) ->
        fun () ->
          t_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "URIError") "apply"
               [|Ojs.null;((let x704 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x703 with
                             | Some x705 ->
                                 ignore
                                   (Ojs.call x704 "push"
                                      [|(Ojs.string_to_js x705)|])
                             | None -> ());
                            x704))|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "URIError")
             "prototype")
    let cast_from = Obj.magic
  end
module TypeError =
  struct
    type t = [ `Error  | `TypeError ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x707 : Ojs.t) -> t_of_js x707
    and t_0_to_js : t_0 -> Ojs.t = fun (x706 : t) -> t_to_js x706
    type tags = [ `Error  | `TypeError ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `TypeError ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x710 : Ojs.t) -> intf_of_js __tags_of_js x710
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x708 : __tags intf) -> intf_to_js __tags_to_js x708
    let (create : ?message:string -> ?options:ErrorOptions.t -> unit -> t) =
      fun ?message:(x712 : string option) ->
        fun ?options:(x713 : ErrorOptions.t option) ->
          fun () ->
            t_of_js
              (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "TypeError")
                 (let x714 =
                    Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                  (match x712 with
                   | Some x716 ->
                       ignore
                         (Ojs.call x714 "push" [|(Ojs.string_to_js x716)|])
                   | None -> ());
                  (match x713 with
                   | Some x715 ->
                       ignore
                         (Ojs.call x714 "push"
                            [|(ErrorOptions.t_to_js x715)|])
                   | None -> ());
                  x714))
    let (invoke : ?message:string -> ?options:ErrorOptions.t -> unit -> t) =
      fun ?message:(x717 : string option) ->
        fun ?options:(x718 : ErrorOptions.t option) ->
          fun () ->
            t_of_js
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "TypeError") "apply"
                 [|Ojs.null;((let x719 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              (match x717 with
                               | Some x721 ->
                                   ignore
                                     (Ojs.call x719 "push"
                                        [|(Ojs.string_to_js x721)|])
                               | None -> ());
                              (match x718 with
                               | Some x720 ->
                                   ignore
                                     (Ojs.call x719 "push"
                                        [|(ErrorOptions.t_to_js x720)|])
                               | None -> ());
                              x719))|])
    let (create' : ?message:string -> unit -> t) =
      fun ?message:(x722 : string option) ->
        fun () ->
          t_of_js
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "TypeError")
               (let x723 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x722 with
                 | Some x724 ->
                     ignore
                       (Ojs.call x723 "push" [|(Ojs.string_to_js x724)|])
                 | None -> ());
                x723))
    let (invoke' : ?message:string -> unit -> t) =
      fun ?message:(x725 : string option) ->
        fun () ->
          t_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "TypeError") "apply"
               [|Ojs.null;((let x726 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x725 with
                             | Some x727 ->
                                 ignore
                                   (Ojs.call x726 "push"
                                      [|(Ojs.string_to_js x727)|])
                             | None -> ());
                            x726))|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "TypeError")
             "prototype")
    let cast_from = Obj.magic
  end
module FlatArray =
  struct
    type ('Arr, 'Depth) t = any
    let rec t_of_js :
      'Arr 'Depth .
        (Ojs.t -> 'Arr) -> (Ojs.t -> 'Depth) -> Ojs.t -> ('Arr, 'Depth) t
      =
      fun (type __Arr) ->
        fun (type __Depth) ->
          fun (__Arr_of_js : Ojs.t -> __Arr) ->
            fun (__Depth_of_js : Ojs.t -> __Depth) ->
              fun (x729 : Ojs.t) -> any_of_js x729
    and t_to_js :
      'Arr 'Depth .
        ('Arr -> Ojs.t) -> ('Depth -> Ojs.t) -> ('Arr, 'Depth) t -> Ojs.t
      =
      fun (type __Arr) ->
        fun (type __Depth) ->
          fun (__Arr_to_js : __Arr -> Ojs.t) ->
            fun (__Depth_to_js : __Depth -> Ojs.t) ->
              fun (x728 : any) -> any_to_js x728
    type ('Arr, 'Depth) t_2 = ('Arr, 'Depth) t
    let rec t_2_of_js :
      'Arr 'Depth .
        (Ojs.t -> 'Arr) -> (Ojs.t -> 'Depth) -> Ojs.t -> ('Arr, 'Depth) t_2
      =
      fun (type __Arr) ->
        fun (type __Depth) ->
          fun (__Arr_of_js : Ojs.t -> __Arr) ->
            fun (__Depth_of_js : Ojs.t -> __Depth) ->
              fun (x733 : Ojs.t) -> t_of_js __Arr_of_js __Depth_of_js x733
    and t_2_to_js :
      'Arr 'Depth .
        ('Arr -> Ojs.t) -> ('Depth -> Ojs.t) -> ('Arr, 'Depth) t_2 -> Ojs.t
      =
      fun (type __Arr) ->
        fun (type __Depth) ->
          fun (__Arr_to_js : __Arr -> Ojs.t) ->
            fun (__Depth_to_js : __Depth -> Ojs.t) ->
              fun (x730 : (__Arr, __Depth) t) ->
                t_to_js __Arr_to_js __Depth_to_js x730
  end
module ConcatArray =
  struct
    type 'T t = [ `ConcatArray of 'T  | 'T ArrayLike.tags_1] intf
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun _T -> Obj.magic
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun _T -> Obj.magic
    type 'T t_1 = 'T t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 =
      fun (type __T) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x738 : Ojs.t) -> t_of_js __T_of_js x738
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t =
      fun (type __T) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x736 : __T t) -> t_to_js __T_to_js x736
    type 'T tags = [ `ConcatArray of 'T  | 'T ArrayLike.tags_1]
    type 'T tags_1 = 'T tags
    type ('tags, 'T) this =
      'tags intf constraint 'tags = [> `ConcatArray of 'T ]
    let rec this_of_js :
      'tags 'T .
        (Ojs.t -> 'tags) -> (Ojs.t -> 'T) -> Ojs.t -> ('tags, 'T) this
      =
      fun (type __tags) ->
        fun (type __T) ->
          fun (__tags_of_js : Ojs.t -> __tags) ->
            fun (__T_of_js : Ojs.t -> __T) ->
              fun (x742 : Ojs.t) -> intf_of_js __tags_of_js x742
    and this_to_js :
      'tags 'T .
        ('tags -> Ojs.t) -> ('T -> Ojs.t) -> ('tags, 'T) this -> Ojs.t
      =
      fun (type __tags) ->
        fun (type __T) ->
          fun (__tags_to_js : __tags -> Ojs.t) ->
            fun (__T_to_js : __T -> Ojs.t) ->
              fun (x740 : __tags intf) -> intf_to_js __tags_to_js x740
    let (get_length : ('tags, 'T) this -> float) =
      fun (x744 : ('tags, 'T) this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic Obj.magic x744) "length")
    let (get : ('tags, 'T) this -> float -> 'T) =
      fun (x747 : ('tags, 'T) this) ->
        fun (x750 : float) ->
          Obj.magic
            (Ojs.get_prop (this_to_js Obj.magic Obj.magic x747)
               (Ojs.float_to_js x750))
    let (join : ('tags, 'T) this -> ?separator:string -> unit -> string) =
      fun (x754 : ('tags, 'T) this) ->
        fun ?separator:(x751 : string option) ->
          fun () ->
            Ojs.string_of_js
              (let x757 = this_to_js Obj.magic Obj.magic x754 in
               Ojs.call (Ojs.get_prop_ascii x757 "join") "apply"
                 [|x757;((let x752 =
                            Ojs.new_obj
                              (Ojs.get_prop_ascii Ojs.global "Array") 
                              [||] in
                          (match x751 with
                           | Some x753 ->
                               ignore
                                 (Ojs.call x752 "push"
                                    [|(Ojs.string_to_js x753)|])
                           | None -> ());
                          x752))|])
    let (slice :
      ('tags, 'T) this -> ?start:float -> ?end_:float -> unit -> 'T list) =
      fun (x763 : ('tags, 'T) this) ->
        fun ?start:(x758 : float option) ->
          fun ?end_:(x759 : float option) ->
            fun () ->
              Ojs.list_of_js Obj.magic
                (let x766 = this_to_js Obj.magic Obj.magic x763 in
                 Ojs.call (Ojs.get_prop_ascii x766 "slice") "apply"
                   [|x766;((let x760 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x758 with
                             | Some x762 ->
                                 ignore
                                   (Ojs.call x760 "push"
                                      [|(Ojs.float_to_js x762)|])
                             | None -> ());
                            (match x759 with
                             | Some x761 ->
                                 ignore
                                   (Ojs.call x760 "push"
                                      [|(Ojs.float_to_js x761)|])
                             | None -> ());
                            x760))|])
    let cast_from = Obj.magic
  end
module ReadonlyArray =
  struct
    type 'T t =
      [ `ReadonlyArray of 'T  | 'T ArrayLike.tags_1
      | 'T IterableIterator.tags_1] intf
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun _T -> Obj.magic
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun _T -> Obj.magic
    type 'T t_1 = 'T t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 =
      fun (type __T) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x770 : Ojs.t) -> t_of_js __T_of_js x770
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t =
      fun (type __T) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x768 : __T t) -> t_to_js __T_to_js x768
    type 'T tags =
      [ `ReadonlyArray of 'T  | 'T ArrayLike.tags_1
      | 'T IterableIterator.tags_1]
    type 'T tags_1 = 'T tags
    type ('tags, 'T) this =
      'tags intf constraint 'tags = [> `ReadonlyArray of 'T ]
    let rec this_of_js :
      'tags 'T .
        (Ojs.t -> 'tags) -> (Ojs.t -> 'T) -> Ojs.t -> ('tags, 'T) this
      =
      fun (type __tags) ->
        fun (type __T) ->
          fun (__tags_of_js : Ojs.t -> __tags) ->
            fun (__T_of_js : Ojs.t -> __T) ->
              fun (x774 : Ojs.t) -> intf_of_js __tags_of_js x774
    and this_to_js :
      'tags 'T .
        ('tags -> Ojs.t) -> ('T -> Ojs.t) -> ('tags, 'T) this -> Ojs.t
      =
      fun (type __tags) ->
        fun (type __T) ->
          fun (__tags_to_js : __tags -> Ojs.t) ->
            fun (__T_to_js : __T -> Ojs.t) ->
              fun (x772 : __tags intf) -> intf_to_js __tags_to_js x772
    let (at : ('tags, 'T) this -> index:float -> 'T option) =
      fun (x777 : ('tags, 'T) this) ->
        fun ~index:(x776 : float) ->
          Ojs.option_of_js Obj.magic
            (Ojs.call (this_to_js Obj.magic Obj.magic x777) "at"
               [|(Ojs.float_to_js x776)|])
    let (flatMap :
      ('tags, 'T) this ->
        callback:(this:'This ->
                    value:'T ->
                      index:float ->
                        array:'T list -> [ `U1 of 'U  | `U2 of 'U t ])
          -> ?thisArg:'This -> unit -> 'U list)
      =
      fun (x793 : ('tags, 'T) this) ->
        fun
          ~callback:(x781 :
                      this:'This ->
                        value:'T ->
                          index:float ->
                            array:'T list -> [ `U1 of 'U  | `U2 of 'U t ])
          ->
          fun ?thisArg:(x782 : 'This option) ->
            fun () ->
              Ojs.list_of_js Obj.magic
                (let x796 = this_to_js Obj.magic Obj.magic x793 in
                 Ojs.call (Ojs.get_prop_ascii x796 "flatMap") "apply"
                   [|x796;((let x783 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x783 "push"
                                 [|(Ojs.fun_to_js 4
                                      (fun (x785 : Ojs.t) ->
                                         fun (x786 : Ojs.t) ->
                                           fun (x787 : Ojs.t) ->
                                             fun (x788 : Ojs.t) ->
                                               match x781
                                                       ~this:(Obj.magic x785)
                                                       ~value:(Obj.magic x786)
                                                       ~index:(Ojs.float_of_js
                                                                 x787)
                                                       ~array:(Ojs.list_of_js
                                                                 Obj.magic
                                                                 x788)
                                               with
                                               | `U1 x790 -> Obj.magic x790
                                               | `U2 x791 ->
                                                   t_to_js Obj.magic x791))|]);
                            (match x782 with
                             | Some x784 ->
                                 ignore
                                   (Ojs.call x783 "push" [|(Obj.magic x784)|])
                             | None -> ());
                            x783))|])
    let (flat :
      ('tags, 'T) this ->
        this:'A -> ?depth:'D -> unit -> ('A, 'D) FlatArray.t list)
      =
      fun (x802 : ('tags, 'T) this) ->
        fun ~this:(x798 : 'A) ->
          fun ?depth:(x799 : 'D option) ->
            fun () ->
              Ojs.list_of_js
                (fun (x806 : Ojs.t) ->
                   FlatArray.t_of_js Obj.magic Obj.magic x806)
                (let x805 = this_to_js Obj.magic Obj.magic x802 in
                 Ojs.call (Ojs.get_prop_ascii x805 "flat") "apply"
                   [|x805;((let x800 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x800 "push" [|(Obj.magic x798)|]);
                            (match x799 with
                             | Some x801 ->
                                 ignore
                                   (Ojs.call x800 "push" [|(Obj.magic x801)|])
                             | None -> ());
                            x800))|])
    let (includes :
      ('tags, 'T) this ->
        searchElement:'T -> ?fromIndex:float -> unit -> bool)
      =
      fun (x813 : ('tags, 'T) this) ->
        fun ~searchElement:(x809 : 'T) ->
          fun ?fromIndex:(x810 : float option) ->
            fun () ->
              Ojs.bool_of_js
                (let x816 = this_to_js Obj.magic Obj.magic x813 in
                 Ojs.call (Ojs.get_prop_ascii x816 "includes") "apply"
                   [|x816;((let x811 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x811 "push" [|(Obj.magic x809)|]);
                            (match x810 with
                             | Some x812 ->
                                 ignore
                                   (Ojs.call x811 "push"
                                      [|(Ojs.float_to_js x812)|])
                             | None -> ());
                            x811))|])
    let (entries : ('tags, 'T) this -> (float * 'T) IterableIterator.t) =
      fun (x817 : ('tags, 'T) this) ->
        IterableIterator.t_of_js
          (fun (x820 : Ojs.t) ->
             let x821 = x820 in
             ((Ojs.float_of_js (Ojs.array_get x821 0)),
               (Obj.magic (Ojs.array_get x821 1))))
          (Ojs.call (this_to_js Obj.magic Obj.magic x817) "entries" [||])
    let (keys : ('tags, 'T) this -> float IterableIterator.t) =
      fun (x822 : ('tags, 'T) this) ->
        IterableIterator.t_of_js Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic Obj.magic x822) "keys" [||])
    let (values : ('tags, 'T) this -> 'T IterableIterator.t) =
      fun (x826 : ('tags, 'T) this) ->
        IterableIterator.t_of_js Obj.magic
          (Ojs.call (this_to_js Obj.magic Obj.magic x826) "values" [||])
    let (find :
      ('tags, 'T) this ->
        predicate:(this:unit ->
                     value:'T -> index:float -> obj:'T list -> bool)
          -> ?thisArg:any -> unit -> 'S option)
      =
      fun (x839 : ('tags, 'T) this) ->
        fun
          ~predicate:(x830 :
                       this:unit ->
                         value:'T -> index:float -> obj:'T list -> bool)
          ->
          fun ?thisArg:(x831 : any option) ->
            fun () ->
              Ojs.option_of_js Obj.magic
                (let x842 = this_to_js Obj.magic Obj.magic x839 in
                 Ojs.call (Ojs.get_prop_ascii x842 "find") "apply"
                   [|x842;((let x832 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x832 "push"
                                 [|(Ojs.fun_to_js 4
                                      (fun (x834 : Ojs.t) ->
                                         fun (x835 : Ojs.t) ->
                                           fun (x836 : Ojs.t) ->
                                             fun (x837 : Ojs.t) ->
                                               Ojs.bool_to_js
                                                 (x830
                                                    ~this:(Ojs.unit_of_js
                                                             x834)
                                                    ~value:(Obj.magic x835)
                                                    ~index:(Ojs.float_of_js
                                                              x836)
                                                    ~obj:(Ojs.list_of_js
                                                            Obj.magic x837))))|]);
                            (match x831 with
                             | Some x833 ->
                                 ignore
                                   (Ojs.call x832 "push" [|(any_to_js x833)|])
                             | None -> ());
                            x832))|])
    let (find' :
      ('tags, 'T) this ->
        predicate:(value:'T -> index:float -> obj:'T list -> unknown) ->
          ?thisArg:any -> unit -> 'T option)
      =
      fun (x852 : ('tags, 'T) this) ->
        fun
          ~predicate:(x844 :
                       value:'T -> index:float -> obj:'T list -> unknown)
          ->
          fun ?thisArg:(x845 : any option) ->
            fun () ->
              Ojs.option_of_js Obj.magic
                (let x855 = this_to_js Obj.magic Obj.magic x852 in
                 Ojs.call (Ojs.get_prop_ascii x855 "find") "apply"
                   [|x855;((let x846 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x846 "push"
                                 [|(Ojs.fun_to_js 3
                                      (fun (x848 : Ojs.t) ->
                                         fun (x849 : Ojs.t) ->
                                           fun (x850 : Ojs.t) ->
                                             unknown_to_js
                                               (x844 ~value:(Obj.magic x848)
                                                  ~index:(Ojs.float_of_js
                                                            x849)
                                                  ~obj:(Ojs.list_of_js
                                                          Obj.magic x850))))|]);
                            (match x845 with
                             | Some x847 ->
                                 ignore
                                   (Ojs.call x846 "push" [|(any_to_js x847)|])
                             | None -> ());
                            x846))|])
    let (findIndex :
      ('tags, 'T) this ->
        predicate:(value:'T -> index:float -> obj:'T list -> unknown) ->
          ?thisArg:any -> unit -> float)
      =
      fun (x865 : ('tags, 'T) this) ->
        fun
          ~predicate:(x857 :
                       value:'T -> index:float -> obj:'T list -> unknown)
          ->
          fun ?thisArg:(x858 : any option) ->
            fun () ->
              Ojs.float_of_js
                (let x868 = this_to_js Obj.magic Obj.magic x865 in
                 Ojs.call (Ojs.get_prop_ascii x868 "findIndex") "apply"
                   [|x868;((let x859 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x859 "push"
                                 [|(Ojs.fun_to_js 3
                                      (fun (x861 : Ojs.t) ->
                                         fun (x862 : Ojs.t) ->
                                           fun (x863 : Ojs.t) ->
                                             unknown_to_js
                                               (x857 ~value:(Obj.magic x861)
                                                  ~index:(Ojs.float_of_js
                                                            x862)
                                                  ~obj:(Ojs.list_of_js
                                                          Obj.magic x863))))|]);
                            (match x858 with
                             | Some x860 ->
                                 ignore
                                   (Ojs.call x859 "push" [|(any_to_js x860)|])
                             | None -> ());
                            x859))|])
    let (get_length : ('tags, 'T) this -> float) =
      fun (x869 : ('tags, 'T) this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic Obj.magic x869) "length")
    let (toString : ('tags, 'T) this -> string) =
      fun (x872 : ('tags, 'T) this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic Obj.magic x872) "toString" [||])
    let (toLocaleString : ('tags, 'T) this -> string) =
      fun (x875 : ('tags, 'T) this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic Obj.magic x875) "toLocaleString"
             [||])
    let (concat : ('tags, 'T) this -> items:'T ConcatArray.t list -> 'T list)
      =
      fun (x882 : ('tags, 'T) this) ->
        fun ~items:(x878 : 'T ConcatArray.t list) ->
          Ojs.list_of_js Obj.magic
            (let x885 = this_to_js Obj.magic Obj.magic x882 in
             Ojs.call (Ojs.get_prop_ascii x885 "concat") "apply"
               [|x885;((let x879 =
                          Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                            [||] in
                        List.iter
                          (fun (x880 : 'T ConcatArray.t) ->
                             ignore
                               (Ojs.call x879 "push"
                                  [|(ConcatArray.t_to_js Obj.magic x880)|]))
                          x878;
                        x879))|])
    let (concat' :
      ('tags, 'T) this ->
        items:[ `U1 of 'T  | `U2 of 'T ConcatArray.t ] list -> 'T list)
      =
      fun (x893 : ('tags, 'T) this) ->
        fun ~items:(x887 : [ `U1 of 'T  | `U2 of 'T ConcatArray.t ] list) ->
          Ojs.list_of_js Obj.magic
            (let x896 = this_to_js Obj.magic Obj.magic x893 in
             Ojs.call (Ojs.get_prop_ascii x896 "concat") "apply"
               [|x896;((let x888 =
                          Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                            [||] in
                        List.iter
                          (fun
                             (x889 :
                               [ `U1 of 'T  | `U2 of 'T ConcatArray.t ])
                             ->
                             ignore
                               (Ojs.call x888 "push"
                                  [|((match x889 with
                                      | `U1 x890 -> Obj.magic x890
                                      | `U2 x891 ->
                                          ConcatArray.t_to_js Obj.magic x891))|]))
                          x887;
                        x888))|])
    let (join : ('tags, 'T) this -> ?separator:string -> unit -> string) =
      fun (x901 : ('tags, 'T) this) ->
        fun ?separator:(x898 : string option) ->
          fun () ->
            Ojs.string_of_js
              (let x904 = this_to_js Obj.magic Obj.magic x901 in
               Ojs.call (Ojs.get_prop_ascii x904 "join") "apply"
                 [|x904;((let x899 =
                            Ojs.new_obj
                              (Ojs.get_prop_ascii Ojs.global "Array") 
                              [||] in
                          (match x898 with
                           | Some x900 ->
                               ignore
                                 (Ojs.call x899 "push"
                                    [|(Ojs.string_to_js x900)|])
                           | None -> ());
                          x899))|])
    let (slice :
      ('tags, 'T) this -> ?start:float -> ?end_:float -> unit -> 'T list) =
      fun (x910 : ('tags, 'T) this) ->
        fun ?start:(x905 : float option) ->
          fun ?end_:(x906 : float option) ->
            fun () ->
              Ojs.list_of_js Obj.magic
                (let x913 = this_to_js Obj.magic Obj.magic x910 in
                 Ojs.call (Ojs.get_prop_ascii x913 "slice") "apply"
                   [|x913;((let x907 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x905 with
                             | Some x909 ->
                                 ignore
                                   (Ojs.call x907 "push"
                                      [|(Ojs.float_to_js x909)|])
                             | None -> ());
                            (match x906 with
                             | Some x908 ->
                                 ignore
                                   (Ojs.call x907 "push"
                                      [|(Ojs.float_to_js x908)|])
                             | None -> ());
                            x907))|])
    let (indexOf :
      ('tags, 'T) this ->
        searchElement:'T -> ?fromIndex:float -> unit -> float)
      =
      fun (x919 : ('tags, 'T) this) ->
        fun ~searchElement:(x915 : 'T) ->
          fun ?fromIndex:(x916 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x922 = this_to_js Obj.magic Obj.magic x919 in
                 Ojs.call (Ojs.get_prop_ascii x922 "indexOf") "apply"
                   [|x922;((let x917 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x917 "push" [|(Obj.magic x915)|]);
                            (match x916 with
                             | Some x918 ->
                                 ignore
                                   (Ojs.call x917 "push"
                                      [|(Ojs.float_to_js x918)|])
                             | None -> ());
                            x917))|])
    let (lastIndexOf :
      ('tags, 'T) this ->
        searchElement:'T -> ?fromIndex:float -> unit -> float)
      =
      fun (x927 : ('tags, 'T) this) ->
        fun ~searchElement:(x923 : 'T) ->
          fun ?fromIndex:(x924 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x930 = this_to_js Obj.magic Obj.magic x927 in
                 Ojs.call (Ojs.get_prop_ascii x930 "lastIndexOf") "apply"
                   [|x930;((let x925 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x925 "push" [|(Obj.magic x923)|]);
                            (match x924 with
                             | Some x926 ->
                                 ignore
                                   (Ojs.call x925 "push"
                                      [|(Ojs.float_to_js x926)|])
                             | None -> ());
                            x925))|])
    let (every :
      ('tags, 'T) this ->
        predicate:(value:'T -> index:float -> array:'T list -> bool) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x939 : ('tags, 'T) this) ->
        fun
          ~predicate:(x931 :
                       value:'T -> index:float -> array:'T list -> bool)
          ->
          fun ?thisArg:(x932 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x942 = this_to_js Obj.magic Obj.magic x939 in
                 Ojs.call (Ojs.get_prop_ascii x942 "every") "apply"
                   [|x942;((let x933 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x933 "push"
                                 [|(Ojs.fun_to_js 3
                                      (fun (x935 : Ojs.t) ->
                                         fun (x936 : Ojs.t) ->
                                           fun (x937 : Ojs.t) ->
                                             Ojs.bool_to_js
                                               (x931 ~value:(Obj.magic x935)
                                                  ~index:(Ojs.float_of_js
                                                            x936)
                                                  ~array:(Ojs.list_of_js
                                                            Obj.magic x937))))|]);
                            (match x932 with
                             | Some x934 ->
                                 ignore
                                   (Ojs.call x933 "push" [|(any_to_js x934)|])
                             | None -> ());
                            x933))|])
    let (every' :
      ('tags, 'T) this ->
        predicate:(value:'T -> index:float -> array:'T list -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x951 : ('tags, 'T) this) ->
        fun
          ~predicate:(x943 :
                       value:'T -> index:float -> array:'T list -> unknown)
          ->
          fun ?thisArg:(x944 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x954 = this_to_js Obj.magic Obj.magic x951 in
                 Ojs.call (Ojs.get_prop_ascii x954 "every") "apply"
                   [|x954;((let x945 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x945 "push"
                                 [|(Ojs.fun_to_js 3
                                      (fun (x947 : Ojs.t) ->
                                         fun (x948 : Ojs.t) ->
                                           fun (x949 : Ojs.t) ->
                                             unknown_to_js
                                               (x943 ~value:(Obj.magic x947)
                                                  ~index:(Ojs.float_of_js
                                                            x948)
                                                  ~array:(Ojs.list_of_js
                                                            Obj.magic x949))))|]);
                            (match x944 with
                             | Some x946 ->
                                 ignore
                                   (Ojs.call x945 "push" [|(any_to_js x946)|])
                             | None -> ());
                            x945))|])
    let (some :
      ('tags, 'T) this ->
        predicate:(value:'T -> index:float -> array:'T list -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x963 : ('tags, 'T) this) ->
        fun
          ~predicate:(x955 :
                       value:'T -> index:float -> array:'T list -> unknown)
          ->
          fun ?thisArg:(x956 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x966 = this_to_js Obj.magic Obj.magic x963 in
                 Ojs.call (Ojs.get_prop_ascii x966 "some") "apply"
                   [|x966;((let x957 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x957 "push"
                                 [|(Ojs.fun_to_js 3
                                      (fun (x959 : Ojs.t) ->
                                         fun (x960 : Ojs.t) ->
                                           fun (x961 : Ojs.t) ->
                                             unknown_to_js
                                               (x955 ~value:(Obj.magic x959)
                                                  ~index:(Ojs.float_of_js
                                                            x960)
                                                  ~array:(Ojs.list_of_js
                                                            Obj.magic x961))))|]);
                            (match x956 with
                             | Some x958 ->
                                 ignore
                                   (Ojs.call x957 "push" [|(any_to_js x958)|])
                             | None -> ());
                            x957))|])
    let (forEach :
      ('tags, 'T) this ->
        callbackfn:(value:'T -> index:float -> array:'T list -> unit) ->
          ?thisArg:any -> unit -> unit)
      =
      fun (x975 : ('tags, 'T) this) ->
        fun
          ~callbackfn:(x967 :
                        value:'T -> index:float -> array:'T list -> unit)
          ->
          fun ?thisArg:(x968 : any option) ->
            fun () ->
              ignore
                (let x978 = this_to_js Obj.magic Obj.magic x975 in
                 Ojs.call (Ojs.get_prop_ascii x978 "forEach") "apply"
                   [|x978;((let x969 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x969 "push"
                                 [|(Ojs.fun_to_js 3
                                      (fun (x971 : Ojs.t) ->
                                         fun (x972 : Ojs.t) ->
                                           fun (x973 : Ojs.t) ->
                                             x967 ~value:(Obj.magic x971)
                                               ~index:(Ojs.float_of_js x972)
                                               ~array:(Ojs.list_of_js
                                                         Obj.magic x973)))|]);
                            (match x968 with
                             | Some x970 ->
                                 ignore
                                   (Ojs.call x969 "push" [|(any_to_js x970)|])
                             | None -> ());
                            x969))|])
    let (map :
      ('tags, 'T) this ->
        callbackfn:(value:'T -> index:float -> array:'T list -> 'U) ->
          ?thisArg:any -> unit -> 'U list)
      =
      fun (x987 : ('tags, 'T) this) ->
        fun
          ~callbackfn:(x979 : value:'T -> index:float -> array:'T list -> 'U)
          ->
          fun ?thisArg:(x980 : any option) ->
            fun () ->
              Ojs.list_of_js Obj.magic
                (let x990 = this_to_js Obj.magic Obj.magic x987 in
                 Ojs.call (Ojs.get_prop_ascii x990 "map") "apply"
                   [|x990;((let x981 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x981 "push"
                                 [|(Ojs.fun_to_js 3
                                      (fun (x983 : Ojs.t) ->
                                         fun (x984 : Ojs.t) ->
                                           fun (x985 : Ojs.t) ->
                                             Obj.magic
                                               (x979 ~value:(Obj.magic x983)
                                                  ~index:(Ojs.float_of_js
                                                            x984)
                                                  ~array:(Ojs.list_of_js
                                                            Obj.magic x985))))|]);
                            (match x980 with
                             | Some x982 ->
                                 ignore
                                   (Ojs.call x981 "push" [|(any_to_js x982)|])
                             | None -> ());
                            x981))|])
    let (filter :
      ('tags, 'T) this ->
        predicate:(value:'T -> index:float -> array:'T list -> bool) ->
          ?thisArg:any -> unit -> 'S list)
      =
      fun (x1000 : ('tags, 'T) this) ->
        fun
          ~predicate:(x992 :
                       value:'T -> index:float -> array:'T list -> bool)
          ->
          fun ?thisArg:(x993 : any option) ->
            fun () ->
              Ojs.list_of_js Obj.magic
                (let x1003 = this_to_js Obj.magic Obj.magic x1000 in
                 Ojs.call (Ojs.get_prop_ascii x1003 "filter") "apply"
                   [|x1003;((let x994 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x994 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x996 : Ojs.t) ->
                                          fun (x997 : Ojs.t) ->
                                            fun (x998 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x992 ~value:(Obj.magic x996)
                                                   ~index:(Ojs.float_of_js
                                                             x997)
                                                   ~array:(Ojs.list_of_js
                                                             Obj.magic x998))))|]);
                             (match x993 with
                              | Some x995 ->
                                  ignore
                                    (Ojs.call x994 "push"
                                       [|(any_to_js x995)|])
                              | None -> ());
                             x994))|])
    let (filter' :
      ('tags, 'T) this ->
        predicate:(value:'T -> index:float -> array:'T list -> unknown) ->
          ?thisArg:any -> unit -> 'T list)
      =
      fun (x1013 : ('tags, 'T) this) ->
        fun
          ~predicate:(x1005 :
                       value:'T -> index:float -> array:'T list -> unknown)
          ->
          fun ?thisArg:(x1006 : any option) ->
            fun () ->
              Ojs.list_of_js Obj.magic
                (let x1016 = this_to_js Obj.magic Obj.magic x1013 in
                 Ojs.call (Ojs.get_prop_ascii x1016 "filter") "apply"
                   [|x1016;((let x1007 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1007 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x1009 : Ojs.t) ->
                                          fun (x1010 : Ojs.t) ->
                                            fun (x1011 : Ojs.t) ->
                                              unknown_to_js
                                                (x1005
                                                   ~value:(Obj.magic x1009)
                                                   ~index:(Ojs.float_of_js
                                                             x1010)
                                                   ~array:(Ojs.list_of_js
                                                             Obj.magic x1011))))|]);
                             (match x1006 with
                              | Some x1008 ->
                                  ignore
                                    (Ojs.call x1007 "push"
                                       [|(any_to_js x1008)|])
                              | None -> ());
                             x1007))|])
    let (reduce :
      ('tags, 'T) this ->
        callbackfn:(previousValue:'T ->
                      currentValue:'T ->
                        currentIndex:float -> array:'T list -> 'T)
          -> 'T)
      =
      fun (x1024 : ('tags, 'T) this) ->
        fun
          ~callbackfn:(x1018 :
                        previousValue:'T ->
                          currentValue:'T ->
                            currentIndex:float -> array:'T list -> 'T)
          ->
          Obj.magic
            (Ojs.call (this_to_js Obj.magic Obj.magic x1024) "reduce"
               [|(Ojs.fun_to_js 4
                    (fun (x1019 : Ojs.t) ->
                       fun (x1020 : Ojs.t) ->
                         fun (x1021 : Ojs.t) ->
                           fun (x1022 : Ojs.t) ->
                             Obj.magic
                               (x1018 ~previousValue:(Obj.magic x1019)
                                  ~currentValue:(Obj.magic x1020)
                                  ~currentIndex:(Ojs.float_of_js x1021)
                                  ~array:(Ojs.list_of_js Obj.magic x1022))))|])
    let (reduce' :
      ('tags, 'T) this ->
        callbackfn:(previousValue:'T ->
                      currentValue:'T ->
                        currentIndex:float -> array:'T list -> 'T)
          -> initialValue:'T -> 'T)
      =
      fun (x1034 : ('tags, 'T) this) ->
        fun
          ~callbackfn:(x1027 :
                        previousValue:'T ->
                          currentValue:'T ->
                            currentIndex:float -> array:'T list -> 'T)
          ->
          fun ~initialValue:(x1033 : 'T) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic Obj.magic x1034) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x1028 : Ojs.t) ->
                         fun (x1029 : Ojs.t) ->
                           fun (x1030 : Ojs.t) ->
                             fun (x1031 : Ojs.t) ->
                               Obj.magic
                                 (x1027 ~previousValue:(Obj.magic x1028)
                                    ~currentValue:(Obj.magic x1029)
                                    ~currentIndex:(Ojs.float_of_js x1030)
                                    ~array:(Ojs.list_of_js Obj.magic x1031))));(
                   Obj.magic x1033)|])
    let (reduce'' :
      ('tags, 'T) this ->
        callbackfn:(previousValue:'U ->
                      currentValue:'T ->
                        currentIndex:float -> array:'T list -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x1044 : ('tags, 'T) this) ->
        fun
          ~callbackfn:(x1037 :
                        previousValue:'U ->
                          currentValue:'T ->
                            currentIndex:float -> array:'T list -> 'U)
          ->
          fun ~initialValue:(x1043 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic Obj.magic x1044) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x1038 : Ojs.t) ->
                         fun (x1039 : Ojs.t) ->
                           fun (x1040 : Ojs.t) ->
                             fun (x1041 : Ojs.t) ->
                               Obj.magic
                                 (x1037 ~previousValue:(Obj.magic x1038)
                                    ~currentValue:(Obj.magic x1039)
                                    ~currentIndex:(Ojs.float_of_js x1040)
                                    ~array:(Ojs.list_of_js Obj.magic x1041))));(
                   Obj.magic x1043)|])
    let (reduceRight :
      ('tags, 'T) this ->
        callbackfn:(previousValue:'T ->
                      currentValue:'T ->
                        currentIndex:float -> array:'T list -> 'T)
          -> 'T)
      =
      fun (x1053 : ('tags, 'T) this) ->
        fun
          ~callbackfn:(x1047 :
                        previousValue:'T ->
                          currentValue:'T ->
                            currentIndex:float -> array:'T list -> 'T)
          ->
          Obj.magic
            (Ojs.call (this_to_js Obj.magic Obj.magic x1053) "reduceRight"
               [|(Ojs.fun_to_js 4
                    (fun (x1048 : Ojs.t) ->
                       fun (x1049 : Ojs.t) ->
                         fun (x1050 : Ojs.t) ->
                           fun (x1051 : Ojs.t) ->
                             Obj.magic
                               (x1047 ~previousValue:(Obj.magic x1048)
                                  ~currentValue:(Obj.magic x1049)
                                  ~currentIndex:(Ojs.float_of_js x1050)
                                  ~array:(Ojs.list_of_js Obj.magic x1051))))|])
    let (reduceRight' :
      ('tags, 'T) this ->
        callbackfn:(previousValue:'T ->
                      currentValue:'T ->
                        currentIndex:float -> array:'T list -> 'T)
          -> initialValue:'T -> 'T)
      =
      fun (x1063 : ('tags, 'T) this) ->
        fun
          ~callbackfn:(x1056 :
                        previousValue:'T ->
                          currentValue:'T ->
                            currentIndex:float -> array:'T list -> 'T)
          ->
          fun ~initialValue:(x1062 : 'T) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic Obj.magic x1063) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x1057 : Ojs.t) ->
                         fun (x1058 : Ojs.t) ->
                           fun (x1059 : Ojs.t) ->
                             fun (x1060 : Ojs.t) ->
                               Obj.magic
                                 (x1056 ~previousValue:(Obj.magic x1057)
                                    ~currentValue:(Obj.magic x1058)
                                    ~currentIndex:(Ojs.float_of_js x1059)
                                    ~array:(Ojs.list_of_js Obj.magic x1060))));(
                   Obj.magic x1062)|])
    let (reduceRight'' :
      ('tags, 'T) this ->
        callbackfn:(previousValue:'U ->
                      currentValue:'T ->
                        currentIndex:float -> array:'T list -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x1073 : ('tags, 'T) this) ->
        fun
          ~callbackfn:(x1066 :
                        previousValue:'U ->
                          currentValue:'T ->
                            currentIndex:float -> array:'T list -> 'U)
          ->
          fun ~initialValue:(x1072 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic Obj.magic x1073) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x1067 : Ojs.t) ->
                         fun (x1068 : Ojs.t) ->
                           fun (x1069 : Ojs.t) ->
                             fun (x1070 : Ojs.t) ->
                               Obj.magic
                                 (x1066 ~previousValue:(Obj.magic x1067)
                                    ~currentValue:(Obj.magic x1068)
                                    ~currentIndex:(Ojs.float_of_js x1069)
                                    ~array:(Ojs.list_of_js Obj.magic x1070))));(
                   Obj.magic x1072)|])
    let (get : ('tags, 'T) this -> float -> 'T) =
      fun (x1076 : ('tags, 'T) this) ->
        fun (x1079 : float) ->
          Obj.magic
            (Ojs.get_prop (this_to_js Obj.magic Obj.magic x1076)
               (Ojs.float_to_js x1079))
    let cast_from = Obj.magic
    let (of_ml : 'T list -> 'T t) =
      fun (x1080 : 'T list) ->
        t_of_js Obj.magic (Ojs.list_to_js Obj.magic x1080)
    let (to_ml : 'T t -> 'T list) =
      fun (x1083 : 'T t) ->
        Ojs.list_of_js Obj.magic (t_to_js Obj.magic x1083)
  end
module TemplateStringsArray =
  struct
    type t =
      [ `ReadonlyArray of string  | `ReadonlyArray of string 
      | `TemplateStringsArray  | string ArrayLike.tags_1
      | string IterableIterator.tags_1] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x1087 : Ojs.t) -> t_of_js x1087
    and t_0_to_js : t_0 -> Ojs.t = fun (x1086 : t) -> t_to_js x1086
    type tags =
      [ `ReadonlyArray of string  | `ReadonlyArray of string 
      | `TemplateStringsArray  | string ArrayLike.tags_1
      | string IterableIterator.tags_1]
    type tags_0 = tags
    type 'tags this =
      'tags intf constraint 'tags = [> `TemplateStringsArray ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x1090 : Ojs.t) -> intf_of_js __tags_of_js x1090
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x1088 : __tags intf) -> intf_to_js __tags_to_js x1088
    let (get_raw : 'tags this -> string list) =
      fun (x1092 : 'tags this) ->
        Ojs.list_of_js Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x1092) "raw")
    let (create : raw:string list -> unit -> t) =
      fun ~raw:(x1095 : string list) ->
        fun () ->
          let x1096 = Ojs.empty_obj () in
          Ojs.set_prop_ascii x1096 "raw"
            (Ojs.list_to_js Ojs.string_to_js x1095);
          t_of_js x1096
    let cast_from = Obj.magic
  end
module SyntaxError =
  struct
    type t = [ `Error  | `SyntaxError ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x1099 : Ojs.t) -> t_of_js x1099
    and t_0_to_js : t_0 -> Ojs.t = fun (x1098 : t) -> t_to_js x1098
    type tags = [ `Error  | `SyntaxError ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `SyntaxError ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x1102 : Ojs.t) -> intf_of_js __tags_of_js x1102
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x1100 : __tags intf) -> intf_to_js __tags_to_js x1100
    let (create : ?message:string -> ?options:ErrorOptions.t -> unit -> t) =
      fun ?message:(x1104 : string option) ->
        fun ?options:(x1105 : ErrorOptions.t option) ->
          fun () ->
            t_of_js
              (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "SyntaxError")
                 (let x1106 =
                    Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                  (match x1104 with
                   | Some x1108 ->
                       ignore
                         (Ojs.call x1106 "push" [|(Ojs.string_to_js x1108)|])
                   | None -> ());
                  (match x1105 with
                   | Some x1107 ->
                       ignore
                         (Ojs.call x1106 "push"
                            [|(ErrorOptions.t_to_js x1107)|])
                   | None -> ());
                  x1106))
    let (invoke : ?message:string -> ?options:ErrorOptions.t -> unit -> t) =
      fun ?message:(x1109 : string option) ->
        fun ?options:(x1110 : ErrorOptions.t option) ->
          fun () ->
            t_of_js
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "SyntaxError") "apply"
                 [|Ojs.null;((let x1111 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              (match x1109 with
                               | Some x1113 ->
                                   ignore
                                     (Ojs.call x1111 "push"
                                        [|(Ojs.string_to_js x1113)|])
                               | None -> ());
                              (match x1110 with
                               | Some x1112 ->
                                   ignore
                                     (Ojs.call x1111 "push"
                                        [|(ErrorOptions.t_to_js x1112)|])
                               | None -> ());
                              x1111))|])
    let (create' : ?message:string -> unit -> t) =
      fun ?message:(x1114 : string option) ->
        fun () ->
          t_of_js
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "SyntaxError")
               (let x1115 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x1114 with
                 | Some x1116 ->
                     ignore
                       (Ojs.call x1115 "push" [|(Ojs.string_to_js x1116)|])
                 | None -> ());
                x1115))
    let (invoke' : ?message:string -> unit -> t) =
      fun ?message:(x1117 : string option) ->
        fun () ->
          t_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "SyntaxError") "apply"
               [|Ojs.null;((let x1118 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x1117 with
                             | Some x1119 ->
                                 ignore
                                   (Ojs.call x1118 "push"
                                      [|(Ojs.string_to_js x1119)|])
                             | None -> ());
                            x1118))|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "SyntaxError")
             "prototype")
    let cast_from = Obj.magic
  end
module Symbol =
  struct
    type t = [ `Symbol ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x1121 : Ojs.t) -> t_of_js x1121
    and t_0_to_js : t_0 -> Ojs.t = fun (x1120 : t) -> t_to_js x1120
    type tags = [ `Symbol ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `Symbol ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x1124 : Ojs.t) -> intf_of_js __tags_of_js x1124
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x1122 : __tags intf) -> intf_to_js __tags_to_js x1122
    let (get_description : 'tags this -> string option) =
      fun (x1126 : 'tags this) ->
        Ojs.option_of_js Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x1126) "description")
    let (toString : 'tags this -> string) =
      fun (x1129 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x1129) "toString" [||])
    let (valueOf : 'tags this -> symbol) =
      fun (x1131 : 'tags this) ->
        symbol_of_js (Ojs.call (this_to_js Obj.magic x1131) "valueOf" [||])
    let (matchAll : unit -> symbol) =
      fun () ->
        symbol_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Symbol")
             "matchAll")
    let (asyncIterator : unit -> symbol) =
      fun () ->
        symbol_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Symbol")
             "asyncIterator")
    let (hasInstance : unit -> symbol) =
      fun () ->
        symbol_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Symbol")
             "hasInstance")
    let (isConcatSpreadable : unit -> symbol) =
      fun () ->
        symbol_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Symbol")
             "isConcatSpreadable")
    let (match_ : unit -> symbol) =
      fun () ->
        symbol_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Symbol")
             "match")
    let (replace : unit -> symbol) =
      fun () ->
        symbol_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Symbol")
             "replace")
    let (search : unit -> symbol) =
      fun () ->
        symbol_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Symbol")
             "search")
    let (species : unit -> symbol) =
      fun () ->
        symbol_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Symbol")
             "species")
    let (split : unit -> symbol) =
      fun () ->
        symbol_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Symbol")
             "split")
    let (toPrimitive : unit -> symbol) =
      fun () ->
        symbol_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Symbol")
             "toPrimitive")
    let (toStringTag : unit -> symbol) =
      fun () ->
        symbol_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Symbol")
             "toStringTag")
    let (unscopables : unit -> symbol) =
      fun () ->
        symbol_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Symbol")
             "unscopables")
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Symbol")
             "prototype")
    let (invoke :
      ?description:[ `U1 of string  | `U2 of float ] -> unit -> symbol) =
      fun ?description:(x1133 : [ `U1 of string  | `U2 of float ] option) ->
        fun () ->
          symbol_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "Symbol") "apply"
               [|Ojs.null;((let x1134 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x1133 with
                             | Some x1135 ->
                                 ignore
                                   (Ojs.call x1134 "push"
                                      [|((match x1135 with
                                          | `U1 x1136 ->
                                              Ojs.string_to_js x1136
                                          | `U2 x1137 ->
                                              Ojs.float_to_js x1137))|])
                             | None -> ());
                            x1134))|])
    let (for_ : string -> symbol) =
      fun (x1138 : string) ->
        symbol_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Symbol") "for"
             [|(Ojs.string_to_js x1138)|])
    let (keyFor : symbol -> string option) =
      fun (x1139 : symbol) ->
        Ojs.option_of_js Ojs.string_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Symbol") "keyFor"
             [|(symbol_to_js x1139)|])
    let (iterator : unit -> symbol) =
      fun () ->
        symbol_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Symbol")
             "iterator")
    let cast_from = Obj.magic
  end
module Array =
  struct
    module AnonymousInterface0 =
      struct
        type t = Ojs.t
        let rec t_of_js : Ojs.t -> t = fun (x1142 : Ojs.t) -> x1142
        and t_to_js : t -> Ojs.t = fun (x1141 : Ojs.t) -> x1141
        let (get_copyWithin : t -> bool) =
          fun (x1143 : t) ->
            Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x1143) "copyWithin")
        let (set_copyWithin : t -> bool -> unit) =
          fun (x1144 : t) ->
            fun (x1145 : bool) ->
              Ojs.set_prop_ascii (t_to_js x1144) "copyWithin"
                (Ojs.bool_to_js x1145)
        let (get_entries : t -> bool) =
          fun (x1146 : t) ->
            Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x1146) "entries")
        let (set_entries : t -> bool -> unit) =
          fun (x1147 : t) ->
            fun (x1148 : bool) ->
              Ojs.set_prop_ascii (t_to_js x1147) "entries"
                (Ojs.bool_to_js x1148)
        let (get_fill : t -> bool) =
          fun (x1149 : t) ->
            Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x1149) "fill")
        let (set_fill : t -> bool -> unit) =
          fun (x1150 : t) ->
            fun (x1151 : bool) ->
              Ojs.set_prop_ascii (t_to_js x1150) "fill"
                (Ojs.bool_to_js x1151)
        let (get_find : t -> bool) =
          fun (x1152 : t) ->
            Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x1152) "find")
        let (set_find : t -> bool -> unit) =
          fun (x1153 : t) ->
            fun (x1154 : bool) ->
              Ojs.set_prop_ascii (t_to_js x1153) "find"
                (Ojs.bool_to_js x1154)
        let (get_findIndex : t -> bool) =
          fun (x1155 : t) ->
            Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x1155) "findIndex")
        let (set_findIndex : t -> bool -> unit) =
          fun (x1156 : t) ->
            fun (x1157 : bool) ->
              Ojs.set_prop_ascii (t_to_js x1156) "findIndex"
                (Ojs.bool_to_js x1157)
        let (get_keys : t -> bool) =
          fun (x1158 : t) ->
            Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x1158) "keys")
        let (set_keys : t -> bool -> unit) =
          fun (x1159 : t) ->
            fun (x1160 : bool) ->
              Ojs.set_prop_ascii (t_to_js x1159) "keys"
                (Ojs.bool_to_js x1160)
        let (get_values : t -> bool) =
          fun (x1161 : t) ->
            Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x1161) "values")
        let (set_values : t -> bool -> unit) =
          fun (x1162 : t) ->
            fun (x1163 : bool) ->
              Ojs.set_prop_ascii (t_to_js x1162) "values"
                (Ojs.bool_to_js x1163)
        let (create :
          copyWithin:bool ->
            entries:bool ->
              fill:bool ->
                find:bool ->
                  findIndex:bool -> keys:bool -> values:bool -> unit -> t)
          =
          fun ~copyWithin:(x1164 : bool) ->
            fun ~entries:(x1165 : bool) ->
              fun ~fill:(x1166 : bool) ->
                fun ~find:(x1167 : bool) ->
                  fun ~findIndex:(x1168 : bool) ->
                    fun ~keys:(x1169 : bool) ->
                      fun ~values:(x1170 : bool) ->
                        fun () ->
                          let x1171 = Ojs.empty_obj () in
                          Ojs.set_prop_ascii x1171 "copyWithin"
                            (Ojs.bool_to_js x1164);
                          Ojs.set_prop_ascii x1171 "entries"
                            (Ojs.bool_to_js x1165);
                          Ojs.set_prop_ascii x1171 "fill"
                            (Ojs.bool_to_js x1166);
                          Ojs.set_prop_ascii x1171 "find"
                            (Ojs.bool_to_js x1167);
                          Ojs.set_prop_ascii x1171 "findIndex"
                            (Ojs.bool_to_js x1168);
                          Ojs.set_prop_ascii x1171 "keys"
                            (Ojs.bool_to_js x1169);
                          Ojs.set_prop_ascii x1171 "values"
                            (Ojs.bool_to_js x1170);
                          t_of_js x1171
      end
    type 'T t =
      [ `Array of 'T  | 'T ArrayLike.tags_1 | 'T IterableIterator.tags_1]
        intf
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun _T -> Obj.magic
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun _T -> Obj.magic
    type 'T t_1 = 'T t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 =
      fun (type __T) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x1174 : Ojs.t) -> t_of_js __T_of_js x1174
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t =
      fun (type __T) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x1172 : __T t) -> t_to_js __T_to_js x1172
    type 'T tags =
      [ `Array of 'T  | 'T ArrayLike.tags_1 | 'T IterableIterator.tags_1]
    type 'T tags_1 = 'T tags
    type ('tags, 'T) this = 'tags intf constraint 'tags = [> `Array of 'T ]
    let rec this_of_js :
      'tags 'T .
        (Ojs.t -> 'tags) -> (Ojs.t -> 'T) -> Ojs.t -> ('tags, 'T) this
      =
      fun (type __tags) ->
        fun (type __T) ->
          fun (__tags_of_js : Ojs.t -> __tags) ->
            fun (__T_of_js : Ojs.t -> __T) ->
              fun (x1178 : Ojs.t) -> intf_of_js __tags_of_js x1178
    and this_to_js :
      'tags 'T .
        ('tags -> Ojs.t) -> ('T -> Ojs.t) -> ('tags, 'T) this -> Ojs.t
      =
      fun (type __tags) ->
        fun (type __T) ->
          fun (__tags_to_js : __tags -> Ojs.t) ->
            fun (__T_to_js : __T -> Ojs.t) ->
              fun (x1176 : __tags intf) -> intf_to_js __tags_to_js x1176
    let (at : ('tags, 'T) this -> index:float -> 'T option) =
      fun (x1181 : ('tags, 'T) this) ->
        fun ~index:(x1180 : float) ->
          Ojs.option_of_js Obj.magic
            (Ojs.call (this_to_js Obj.magic Obj.magic x1181) "at"
               [|(Ojs.float_to_js x1180)|])
    let (flatMap :
      ('tags, 'T) this ->
        callback:(this:'This ->
                    value:'T ->
                      index:float ->
                        array:'T list ->
                          [ `U1 of 'U  | `U2 of 'U ReadonlyArray.t ])
          -> ?thisArg:'This -> unit -> 'U list)
      =
      fun (x1197 : ('tags, 'T) this) ->
        fun
          ~callback:(x1185 :
                      this:'This ->
                        value:'T ->
                          index:float ->
                            array:'T list ->
                              [ `U1 of 'U  | `U2 of 'U ReadonlyArray.t ])
          ->
          fun ?thisArg:(x1186 : 'This option) ->
            fun () ->
              Ojs.list_of_js Obj.magic
                (let x1200 = this_to_js Obj.magic Obj.magic x1197 in
                 Ojs.call (Ojs.get_prop_ascii x1200 "flatMap") "apply"
                   [|x1200;((let x1187 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1187 "push"
                                  [|(Ojs.fun_to_js 4
                                       (fun (x1189 : Ojs.t) ->
                                          fun (x1190 : Ojs.t) ->
                                            fun (x1191 : Ojs.t) ->
                                              fun (x1192 : Ojs.t) ->
                                                match x1185
                                                        ~this:(Obj.magic
                                                                 x1189)
                                                        ~value:(Obj.magic
                                                                  x1190)
                                                        ~index:(Ojs.float_of_js
                                                                  x1191)
                                                        ~array:(Ojs.list_of_js
                                                                  Obj.magic
                                                                  x1192)
                                                with
                                                | `U1 x1194 ->
                                                    Obj.magic x1194
                                                | `U2 x1195 ->
                                                    ReadonlyArray.t_to_js
                                                      Obj.magic x1195))|]);
                             (match x1186 with
                              | Some x1188 ->
                                  ignore
                                    (Ojs.call x1187 "push"
                                       [|(Obj.magic x1188)|])
                              | None -> ());
                             x1187))|])
    let (flat :
      ('tags, 'T) this ->
        this:'A -> ?depth:'D -> unit -> ('A, 'D) FlatArray.t list)
      =
      fun (x1206 : ('tags, 'T) this) ->
        fun ~this:(x1202 : 'A) ->
          fun ?depth:(x1203 : 'D option) ->
            fun () ->
              Ojs.list_of_js
                (fun (x1210 : Ojs.t) ->
                   FlatArray.t_of_js Obj.magic Obj.magic x1210)
                (let x1209 = this_to_js Obj.magic Obj.magic x1206 in
                 Ojs.call (Ojs.get_prop_ascii x1209 "flat") "apply"
                   [|x1209;((let x1204 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1204 "push" [|(Obj.magic x1202)|]);
                             (match x1203 with
                              | Some x1205 ->
                                  ignore
                                    (Ojs.call x1204 "push"
                                       [|(Obj.magic x1205)|])
                              | None -> ());
                             x1204))|])
    let (includes :
      ('tags, 'T) this ->
        searchElement:'T -> ?fromIndex:float -> unit -> bool)
      =
      fun (x1217 : ('tags, 'T) this) ->
        fun ~searchElement:(x1213 : 'T) ->
          fun ?fromIndex:(x1214 : float option) ->
            fun () ->
              Ojs.bool_of_js
                (let x1220 = this_to_js Obj.magic Obj.magic x1217 in
                 Ojs.call (Ojs.get_prop_ascii x1220 "includes") "apply"
                   [|x1220;((let x1215 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1215 "push" [|(Obj.magic x1213)|]);
                             (match x1214 with
                              | Some x1216 ->
                                  ignore
                                    (Ojs.call x1215 "push"
                                       [|(Ojs.float_to_js x1216)|])
                              | None -> ());
                             x1215))|])
    let (entries : ('tags, 'T) this -> (float * 'T) IterableIterator.t) =
      fun (x1221 : ('tags, 'T) this) ->
        IterableIterator.t_of_js
          (fun (x1224 : Ojs.t) ->
             let x1225 = x1224 in
             ((Ojs.float_of_js (Ojs.array_get x1225 0)),
               (Obj.magic (Ojs.array_get x1225 1))))
          (Ojs.call (this_to_js Obj.magic Obj.magic x1221) "entries" [||])
    let (keys : ('tags, 'T) this -> float IterableIterator.t) =
      fun (x1226 : ('tags, 'T) this) ->
        IterableIterator.t_of_js Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic Obj.magic x1226) "keys" [||])
    let (values : ('tags, 'T) this -> 'T IterableIterator.t) =
      fun (x1230 : ('tags, 'T) this) ->
        IterableIterator.t_of_js Obj.magic
          (Ojs.call (this_to_js Obj.magic Obj.magic x1230) "values" [||])
    let (find :
      ('tags, 'T) this ->
        predicate:(this:unit ->
                     value:'T -> index:float -> obj:'T list -> bool)
          -> ?thisArg:any -> unit -> 'S option)
      =
      fun (x1243 : ('tags, 'T) this) ->
        fun
          ~predicate:(x1234 :
                       this:unit ->
                         value:'T -> index:float -> obj:'T list -> bool)
          ->
          fun ?thisArg:(x1235 : any option) ->
            fun () ->
              Ojs.option_of_js Obj.magic
                (let x1246 = this_to_js Obj.magic Obj.magic x1243 in
                 Ojs.call (Ojs.get_prop_ascii x1246 "find") "apply"
                   [|x1246;((let x1236 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1236 "push"
                                  [|(Ojs.fun_to_js 4
                                       (fun (x1238 : Ojs.t) ->
                                          fun (x1239 : Ojs.t) ->
                                            fun (x1240 : Ojs.t) ->
                                              fun (x1241 : Ojs.t) ->
                                                Ojs.bool_to_js
                                                  (x1234
                                                     ~this:(Ojs.unit_of_js
                                                              x1238)
                                                     ~value:(Obj.magic x1239)
                                                     ~index:(Ojs.float_of_js
                                                               x1240)
                                                     ~obj:(Ojs.list_of_js
                                                             Obj.magic x1241))))|]);
                             (match x1235 with
                              | Some x1237 ->
                                  ignore
                                    (Ojs.call x1236 "push"
                                       [|(any_to_js x1237)|])
                              | None -> ());
                             x1236))|])
    let (find' :
      ('tags, 'T) this ->
        predicate:(value:'T -> index:float -> obj:'T list -> unknown) ->
          ?thisArg:any -> unit -> 'T option)
      =
      fun (x1256 : ('tags, 'T) this) ->
        fun
          ~predicate:(x1248 :
                       value:'T -> index:float -> obj:'T list -> unknown)
          ->
          fun ?thisArg:(x1249 : any option) ->
            fun () ->
              Ojs.option_of_js Obj.magic
                (let x1259 = this_to_js Obj.magic Obj.magic x1256 in
                 Ojs.call (Ojs.get_prop_ascii x1259 "find") "apply"
                   [|x1259;((let x1250 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1250 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x1252 : Ojs.t) ->
                                          fun (x1253 : Ojs.t) ->
                                            fun (x1254 : Ojs.t) ->
                                              unknown_to_js
                                                (x1248
                                                   ~value:(Obj.magic x1252)
                                                   ~index:(Ojs.float_of_js
                                                             x1253)
                                                   ~obj:(Ojs.list_of_js
                                                           Obj.magic x1254))))|]);
                             (match x1249 with
                              | Some x1251 ->
                                  ignore
                                    (Ojs.call x1250 "push"
                                       [|(any_to_js x1251)|])
                              | None -> ());
                             x1250))|])
    let (findIndex :
      ('tags, 'T) this ->
        predicate:(value:'T -> index:float -> obj:'T list -> unknown) ->
          ?thisArg:any -> unit -> float)
      =
      fun (x1269 : ('tags, 'T) this) ->
        fun
          ~predicate:(x1261 :
                       value:'T -> index:float -> obj:'T list -> unknown)
          ->
          fun ?thisArg:(x1262 : any option) ->
            fun () ->
              Ojs.float_of_js
                (let x1272 = this_to_js Obj.magic Obj.magic x1269 in
                 Ojs.call (Ojs.get_prop_ascii x1272 "findIndex") "apply"
                   [|x1272;((let x1263 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1263 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x1265 : Ojs.t) ->
                                          fun (x1266 : Ojs.t) ->
                                            fun (x1267 : Ojs.t) ->
                                              unknown_to_js
                                                (x1261
                                                   ~value:(Obj.magic x1265)
                                                   ~index:(Ojs.float_of_js
                                                             x1266)
                                                   ~obj:(Ojs.list_of_js
                                                           Obj.magic x1267))))|]);
                             (match x1262 with
                              | Some x1264 ->
                                  ignore
                                    (Ojs.call x1263 "push"
                                       [|(any_to_js x1264)|])
                              | None -> ());
                             x1263))|])
    let (fill :
      ('tags, 'T) this ->
        value:'T -> ?start:float -> ?end_:float -> unit -> ('tags, 'T) this)
      =
      fun (x1279 : ('tags, 'T) this) ->
        fun ~value:(x1273 : 'T) ->
          fun ?start:(x1274 : float option) ->
            fun ?end_:(x1275 : float option) ->
              fun () ->
                this_of_js Obj.magic Obj.magic
                  (let x1282 = this_to_js Obj.magic Obj.magic x1279 in
                   Ojs.call (Ojs.get_prop_ascii x1282 "fill") "apply"
                     [|x1282;((let x1276 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x1276 "push" [|(Obj.magic x1273)|]);
                               (match x1274 with
                                | Some x1278 ->
                                    ignore
                                      (Ojs.call x1276 "push"
                                         [|(Ojs.float_to_js x1278)|])
                                | None -> ());
                               (match x1275 with
                                | Some x1277 ->
                                    ignore
                                      (Ojs.call x1276 "push"
                                         [|(Ojs.float_to_js x1277)|])
                                | None -> ());
                               x1276))|])
    let (copyWithin :
      ('tags, 'T) this ->
        target:float ->
          start:float -> ?end_:float -> unit -> ('tags, 'T) this)
      =
      fun (x1290 : ('tags, 'T) this) ->
        fun ~target:(x1285 : float) ->
          fun ~start:(x1286 : float) ->
            fun ?end_:(x1287 : float option) ->
              fun () ->
                this_of_js Obj.magic Obj.magic
                  (let x1293 = this_to_js Obj.magic Obj.magic x1290 in
                   Ojs.call (Ojs.get_prop_ascii x1293 "copyWithin") "apply"
                     [|x1293;((let x1288 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x1288 "push"
                                    [|(Ojs.float_to_js x1285)|]);
                               ignore
                                 (Ojs.call x1288 "push"
                                    [|(Ojs.float_to_js x1286)|]);
                               (match x1287 with
                                | Some x1289 ->
                                    ignore
                                      (Ojs.call x1288 "push"
                                         [|(Ojs.float_to_js x1289)|])
                                | None -> ());
                               x1288))|])
    let (get_length : ('tags, 'T) this -> float) =
      fun (x1296 : ('tags, 'T) this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic Obj.magic x1296) "length")
    let (set_length : ('tags, 'T) this -> float -> unit) =
      fun (x1299 : ('tags, 'T) this) ->
        fun (x1300 : float) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic Obj.magic x1299) "length"
            (Ojs.float_to_js x1300)
    let (toString : ('tags, 'T) this -> string) =
      fun (x1303 : ('tags, 'T) this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic Obj.magic x1303) "toString" [||])
    let (toLocaleString : ('tags, 'T) this -> string) =
      fun (x1306 : ('tags, 'T) this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic Obj.magic x1306) "toLocaleString"
             [||])
    let (pop : ('tags, 'T) this -> 'T option) =
      fun (x1309 : ('tags, 'T) this) ->
        Ojs.option_of_js Obj.magic
          (Ojs.call (this_to_js Obj.magic Obj.magic x1309) "pop" [||])
    let (push : ('tags, 'T) this -> items:'T list -> float) =
      fun (x1316 : ('tags, 'T) this) ->
        fun ~items:(x1313 : 'T list) ->
          Ojs.float_of_js
            (let x1319 = this_to_js Obj.magic Obj.magic x1316 in
             Ojs.call (Ojs.get_prop_ascii x1319 "push") "apply"
               [|x1319;((let x1314 =
                           Ojs.new_obj
                             (Ojs.get_prop_ascii Ojs.global "Array") 
                             [||] in
                         List.iter
                           (fun (x1315 : 'T) ->
                              ignore
                                (Ojs.call x1314 "push" [|(Obj.magic x1315)|]))
                           x1313;
                         x1314))|])
    let (concat : ('tags, 'T) this -> items:'T ConcatArray.t list -> 'T list)
      =
      fun (x1324 : ('tags, 'T) this) ->
        fun ~items:(x1320 : 'T ConcatArray.t list) ->
          Ojs.list_of_js Obj.magic
            (let x1327 = this_to_js Obj.magic Obj.magic x1324 in
             Ojs.call (Ojs.get_prop_ascii x1327 "concat") "apply"
               [|x1327;((let x1321 =
                           Ojs.new_obj
                             (Ojs.get_prop_ascii Ojs.global "Array") 
                             [||] in
                         List.iter
                           (fun (x1322 : 'T ConcatArray.t) ->
                              ignore
                                (Ojs.call x1321 "push"
                                   [|(ConcatArray.t_to_js Obj.magic x1322)|]))
                           x1320;
                         x1321))|])
    let (concat' :
      ('tags, 'T) this ->
        items:[ `U1 of 'T  | `U2 of 'T ConcatArray.t ] list -> 'T list)
      =
      fun (x1335 : ('tags, 'T) this) ->
        fun ~items:(x1329 : [ `U1 of 'T  | `U2 of 'T ConcatArray.t ] list) ->
          Ojs.list_of_js Obj.magic
            (let x1338 = this_to_js Obj.magic Obj.magic x1335 in
             Ojs.call (Ojs.get_prop_ascii x1338 "concat") "apply"
               [|x1338;((let x1330 =
                           Ojs.new_obj
                             (Ojs.get_prop_ascii Ojs.global "Array") 
                             [||] in
                         List.iter
                           (fun
                              (x1331 :
                                [ `U1 of 'T  | `U2 of 'T ConcatArray.t ])
                              ->
                              ignore
                                (Ojs.call x1330 "push"
                                   [|((match x1331 with
                                       | `U1 x1332 -> Obj.magic x1332
                                       | `U2 x1333 ->
                                           ConcatArray.t_to_js Obj.magic
                                             x1333))|])) x1329;
                         x1330))|])
    let (join : ('tags, 'T) this -> ?separator:string -> unit -> string) =
      fun (x1343 : ('tags, 'T) this) ->
        fun ?separator:(x1340 : string option) ->
          fun () ->
            Ojs.string_of_js
              (let x1346 = this_to_js Obj.magic Obj.magic x1343 in
               Ojs.call (Ojs.get_prop_ascii x1346 "join") "apply"
                 [|x1346;((let x1341 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x1340 with
                            | Some x1342 ->
                                ignore
                                  (Ojs.call x1341 "push"
                                     [|(Ojs.string_to_js x1342)|])
                            | None -> ());
                           x1341))|])
    let (reverse : ('tags, 'T) this -> 'T list) =
      fun (x1347 : ('tags, 'T) this) ->
        Ojs.list_of_js Obj.magic
          (Ojs.call (this_to_js Obj.magic Obj.magic x1347) "reverse" [||])
    let (shift : ('tags, 'T) this -> 'T option) =
      fun (x1351 : ('tags, 'T) this) ->
        Ojs.option_of_js Obj.magic
          (Ojs.call (this_to_js Obj.magic Obj.magic x1351) "shift" [||])
    let (slice :
      ('tags, 'T) this -> ?start:float -> ?end_:float -> unit -> 'T list) =
      fun (x1360 : ('tags, 'T) this) ->
        fun ?start:(x1355 : float option) ->
          fun ?end_:(x1356 : float option) ->
            fun () ->
              Ojs.list_of_js Obj.magic
                (let x1363 = this_to_js Obj.magic Obj.magic x1360 in
                 Ojs.call (Ojs.get_prop_ascii x1363 "slice") "apply"
                   [|x1363;((let x1357 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x1355 with
                              | Some x1359 ->
                                  ignore
                                    (Ojs.call x1357 "push"
                                       [|(Ojs.float_to_js x1359)|])
                              | None -> ());
                             (match x1356 with
                              | Some x1358 ->
                                  ignore
                                    (Ojs.call x1357 "push"
                                       [|(Ojs.float_to_js x1358)|])
                              | None -> ());
                             x1357))|])
    let (sort :
      ('tags, 'T) this ->
        ?compareFn:(a:'T -> b:'T -> float) -> unit -> ('tags, 'T) this)
      =
      fun (x1370 : ('tags, 'T) this) ->
        fun ?compareFn:(x1365 : (a:'T -> b:'T -> float) option) ->
          fun () ->
            this_of_js Obj.magic Obj.magic
              (let x1373 = this_to_js Obj.magic Obj.magic x1370 in
               Ojs.call (Ojs.get_prop_ascii x1373 "sort") "apply"
                 [|x1373;((let x1366 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x1365 with
                            | Some x1367 ->
                                ignore
                                  (Ojs.call x1366 "push"
                                     [|(Ojs.fun_to_js 2
                                          (fun (x1368 : Ojs.t) ->
                                             fun (x1369 : Ojs.t) ->
                                               Ojs.float_to_js
                                                 (x1367 ~a:(Obj.magic x1368)
                                                    ~b:(Obj.magic x1369))))|])
                            | None -> ());
                           x1366))|])
    let (splice :
      ('tags, 'T) this ->
        start:float -> ?deleteCount:float -> unit -> 'T list)
      =
      fun (x1380 : ('tags, 'T) this) ->
        fun ~start:(x1376 : float) ->
          fun ?deleteCount:(x1377 : float option) ->
            fun () ->
              Ojs.list_of_js Obj.magic
                (let x1383 = this_to_js Obj.magic Obj.magic x1380 in
                 Ojs.call (Ojs.get_prop_ascii x1383 "splice") "apply"
                   [|x1383;((let x1378 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1378 "push"
                                  [|(Ojs.float_to_js x1376)|]);
                             (match x1377 with
                              | Some x1379 ->
                                  ignore
                                    (Ojs.call x1378 "push"
                                       [|(Ojs.float_to_js x1379)|])
                              | None -> ());
                             x1378))|])
    let (splice' :
      ('tags, 'T) this ->
        start:float -> deleteCount:float -> items:'T list -> 'T list)
      =
      fun (x1390 : ('tags, 'T) this) ->
        fun ~start:(x1385 : float) ->
          fun ~deleteCount:(x1386 : float) ->
            fun ~items:(x1387 : 'T list) ->
              Ojs.list_of_js Obj.magic
                (let x1393 = this_to_js Obj.magic Obj.magic x1390 in
                 Ojs.call (Ojs.get_prop_ascii x1393 "splice") "apply"
                   [|x1393;((let x1388 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1388 "push"
                                  [|(Ojs.float_to_js x1385)|]);
                             ignore
                               (Ojs.call x1388 "push"
                                  [|(Ojs.float_to_js x1386)|]);
                             List.iter
                               (fun (x1389 : 'T) ->
                                  ignore
                                    (Ojs.call x1388 "push"
                                       [|(Obj.magic x1389)|])) x1387;
                             x1388))|])
    let (unshift : ('tags, 'T) this -> items:'T list -> float) =
      fun (x1398 : ('tags, 'T) this) ->
        fun ~items:(x1395 : 'T list) ->
          Ojs.float_of_js
            (let x1401 = this_to_js Obj.magic Obj.magic x1398 in
             Ojs.call (Ojs.get_prop_ascii x1401 "unshift") "apply"
               [|x1401;((let x1396 =
                           Ojs.new_obj
                             (Ojs.get_prop_ascii Ojs.global "Array") 
                             [||] in
                         List.iter
                           (fun (x1397 : 'T) ->
                              ignore
                                (Ojs.call x1396 "push" [|(Obj.magic x1397)|]))
                           x1395;
                         x1396))|])
    let (indexOf :
      ('tags, 'T) this ->
        searchElement:'T -> ?fromIndex:float -> unit -> float)
      =
      fun (x1406 : ('tags, 'T) this) ->
        fun ~searchElement:(x1402 : 'T) ->
          fun ?fromIndex:(x1403 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x1409 = this_to_js Obj.magic Obj.magic x1406 in
                 Ojs.call (Ojs.get_prop_ascii x1409 "indexOf") "apply"
                   [|x1409;((let x1404 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1404 "push" [|(Obj.magic x1402)|]);
                             (match x1403 with
                              | Some x1405 ->
                                  ignore
                                    (Ojs.call x1404 "push"
                                       [|(Ojs.float_to_js x1405)|])
                              | None -> ());
                             x1404))|])
    let (lastIndexOf :
      ('tags, 'T) this ->
        searchElement:'T -> ?fromIndex:float -> unit -> float)
      =
      fun (x1414 : ('tags, 'T) this) ->
        fun ~searchElement:(x1410 : 'T) ->
          fun ?fromIndex:(x1411 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x1417 = this_to_js Obj.magic Obj.magic x1414 in
                 Ojs.call (Ojs.get_prop_ascii x1417 "lastIndexOf") "apply"
                   [|x1417;((let x1412 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1412 "push" [|(Obj.magic x1410)|]);
                             (match x1411 with
                              | Some x1413 ->
                                  ignore
                                    (Ojs.call x1412 "push"
                                       [|(Ojs.float_to_js x1413)|])
                              | None -> ());
                             x1412))|])
    let (every :
      ('tags, 'T) this ->
        predicate:(value:'T -> index:float -> array:'T list -> bool) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x1426 : ('tags, 'T) this) ->
        fun
          ~predicate:(x1418 :
                       value:'T -> index:float -> array:'T list -> bool)
          ->
          fun ?thisArg:(x1419 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x1429 = this_to_js Obj.magic Obj.magic x1426 in
                 Ojs.call (Ojs.get_prop_ascii x1429 "every") "apply"
                   [|x1429;((let x1420 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1420 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x1422 : Ojs.t) ->
                                          fun (x1423 : Ojs.t) ->
                                            fun (x1424 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x1418
                                                   ~value:(Obj.magic x1422)
                                                   ~index:(Ojs.float_of_js
                                                             x1423)
                                                   ~array:(Ojs.list_of_js
                                                             Obj.magic x1424))))|]);
                             (match x1419 with
                              | Some x1421 ->
                                  ignore
                                    (Ojs.call x1420 "push"
                                       [|(any_to_js x1421)|])
                              | None -> ());
                             x1420))|])
    let (every' :
      ('tags, 'T) this ->
        predicate:(value:'T -> index:float -> array:'T list -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x1438 : ('tags, 'T) this) ->
        fun
          ~predicate:(x1430 :
                       value:'T -> index:float -> array:'T list -> unknown)
          ->
          fun ?thisArg:(x1431 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x1441 = this_to_js Obj.magic Obj.magic x1438 in
                 Ojs.call (Ojs.get_prop_ascii x1441 "every") "apply"
                   [|x1441;((let x1432 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1432 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x1434 : Ojs.t) ->
                                          fun (x1435 : Ojs.t) ->
                                            fun (x1436 : Ojs.t) ->
                                              unknown_to_js
                                                (x1430
                                                   ~value:(Obj.magic x1434)
                                                   ~index:(Ojs.float_of_js
                                                             x1435)
                                                   ~array:(Ojs.list_of_js
                                                             Obj.magic x1436))))|]);
                             (match x1431 with
                              | Some x1433 ->
                                  ignore
                                    (Ojs.call x1432 "push"
                                       [|(any_to_js x1433)|])
                              | None -> ());
                             x1432))|])
    let (some :
      ('tags, 'T) this ->
        predicate:(value:'T -> index:float -> array:'T list -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x1450 : ('tags, 'T) this) ->
        fun
          ~predicate:(x1442 :
                       value:'T -> index:float -> array:'T list -> unknown)
          ->
          fun ?thisArg:(x1443 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x1453 = this_to_js Obj.magic Obj.magic x1450 in
                 Ojs.call (Ojs.get_prop_ascii x1453 "some") "apply"
                   [|x1453;((let x1444 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1444 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x1446 : Ojs.t) ->
                                          fun (x1447 : Ojs.t) ->
                                            fun (x1448 : Ojs.t) ->
                                              unknown_to_js
                                                (x1442
                                                   ~value:(Obj.magic x1446)
                                                   ~index:(Ojs.float_of_js
                                                             x1447)
                                                   ~array:(Ojs.list_of_js
                                                             Obj.magic x1448))))|]);
                             (match x1443 with
                              | Some x1445 ->
                                  ignore
                                    (Ojs.call x1444 "push"
                                       [|(any_to_js x1445)|])
                              | None -> ());
                             x1444))|])
    let (forEach :
      ('tags, 'T) this ->
        callbackfn:(value:'T -> index:float -> array:'T list -> unit) ->
          ?thisArg:any -> unit -> unit)
      =
      fun (x1462 : ('tags, 'T) this) ->
        fun
          ~callbackfn:(x1454 :
                        value:'T -> index:float -> array:'T list -> unit)
          ->
          fun ?thisArg:(x1455 : any option) ->
            fun () ->
              ignore
                (let x1465 = this_to_js Obj.magic Obj.magic x1462 in
                 Ojs.call (Ojs.get_prop_ascii x1465 "forEach") "apply"
                   [|x1465;((let x1456 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1456 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x1458 : Ojs.t) ->
                                          fun (x1459 : Ojs.t) ->
                                            fun (x1460 : Ojs.t) ->
                                              x1454 ~value:(Obj.magic x1458)
                                                ~index:(Ojs.float_of_js x1459)
                                                ~array:(Ojs.list_of_js
                                                          Obj.magic x1460)))|]);
                             (match x1455 with
                              | Some x1457 ->
                                  ignore
                                    (Ojs.call x1456 "push"
                                       [|(any_to_js x1457)|])
                              | None -> ());
                             x1456))|])
    let (map :
      ('tags, 'T) this ->
        callbackfn:(value:'T -> index:float -> array:'T list -> 'U) ->
          ?thisArg:any -> unit -> 'U list)
      =
      fun (x1474 : ('tags, 'T) this) ->
        fun
          ~callbackfn:(x1466 :
                        value:'T -> index:float -> array:'T list -> 'U)
          ->
          fun ?thisArg:(x1467 : any option) ->
            fun () ->
              Ojs.list_of_js Obj.magic
                (let x1477 = this_to_js Obj.magic Obj.magic x1474 in
                 Ojs.call (Ojs.get_prop_ascii x1477 "map") "apply"
                   [|x1477;((let x1468 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1468 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x1470 : Ojs.t) ->
                                          fun (x1471 : Ojs.t) ->
                                            fun (x1472 : Ojs.t) ->
                                              Obj.magic
                                                (x1466
                                                   ~value:(Obj.magic x1470)
                                                   ~index:(Ojs.float_of_js
                                                             x1471)
                                                   ~array:(Ojs.list_of_js
                                                             Obj.magic x1472))))|]);
                             (match x1467 with
                              | Some x1469 ->
                                  ignore
                                    (Ojs.call x1468 "push"
                                       [|(any_to_js x1469)|])
                              | None -> ());
                             x1468))|])
    let (filter :
      ('tags, 'T) this ->
        predicate:(value:'T -> index:float -> array:'T list -> bool) ->
          ?thisArg:any -> unit -> 'S list)
      =
      fun (x1487 : ('tags, 'T) this) ->
        fun
          ~predicate:(x1479 :
                       value:'T -> index:float -> array:'T list -> bool)
          ->
          fun ?thisArg:(x1480 : any option) ->
            fun () ->
              Ojs.list_of_js Obj.magic
                (let x1490 = this_to_js Obj.magic Obj.magic x1487 in
                 Ojs.call (Ojs.get_prop_ascii x1490 "filter") "apply"
                   [|x1490;((let x1481 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1481 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x1483 : Ojs.t) ->
                                          fun (x1484 : Ojs.t) ->
                                            fun (x1485 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x1479
                                                   ~value:(Obj.magic x1483)
                                                   ~index:(Ojs.float_of_js
                                                             x1484)
                                                   ~array:(Ojs.list_of_js
                                                             Obj.magic x1485))))|]);
                             (match x1480 with
                              | Some x1482 ->
                                  ignore
                                    (Ojs.call x1481 "push"
                                       [|(any_to_js x1482)|])
                              | None -> ());
                             x1481))|])
    let (filter' :
      ('tags, 'T) this ->
        predicate:(value:'T -> index:float -> array:'T list -> unknown) ->
          ?thisArg:any -> unit -> 'T list)
      =
      fun (x1500 : ('tags, 'T) this) ->
        fun
          ~predicate:(x1492 :
                       value:'T -> index:float -> array:'T list -> unknown)
          ->
          fun ?thisArg:(x1493 : any option) ->
            fun () ->
              Ojs.list_of_js Obj.magic
                (let x1503 = this_to_js Obj.magic Obj.magic x1500 in
                 Ojs.call (Ojs.get_prop_ascii x1503 "filter") "apply"
                   [|x1503;((let x1494 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1494 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x1496 : Ojs.t) ->
                                          fun (x1497 : Ojs.t) ->
                                            fun (x1498 : Ojs.t) ->
                                              unknown_to_js
                                                (x1492
                                                   ~value:(Obj.magic x1496)
                                                   ~index:(Ojs.float_of_js
                                                             x1497)
                                                   ~array:(Ojs.list_of_js
                                                             Obj.magic x1498))))|]);
                             (match x1493 with
                              | Some x1495 ->
                                  ignore
                                    (Ojs.call x1494 "push"
                                       [|(any_to_js x1495)|])
                              | None -> ());
                             x1494))|])
    let (reduce :
      ('tags, 'T) this ->
        callbackfn:(previousValue:'T ->
                      currentValue:'T ->
                        currentIndex:float -> array:'T list -> 'T)
          -> 'T)
      =
      fun (x1511 : ('tags, 'T) this) ->
        fun
          ~callbackfn:(x1505 :
                        previousValue:'T ->
                          currentValue:'T ->
                            currentIndex:float -> array:'T list -> 'T)
          ->
          Obj.magic
            (Ojs.call (this_to_js Obj.magic Obj.magic x1511) "reduce"
               [|(Ojs.fun_to_js 4
                    (fun (x1506 : Ojs.t) ->
                       fun (x1507 : Ojs.t) ->
                         fun (x1508 : Ojs.t) ->
                           fun (x1509 : Ojs.t) ->
                             Obj.magic
                               (x1505 ~previousValue:(Obj.magic x1506)
                                  ~currentValue:(Obj.magic x1507)
                                  ~currentIndex:(Ojs.float_of_js x1508)
                                  ~array:(Ojs.list_of_js Obj.magic x1509))))|])
    let (reduce' :
      ('tags, 'T) this ->
        callbackfn:(previousValue:'T ->
                      currentValue:'T ->
                        currentIndex:float -> array:'T list -> 'T)
          -> initialValue:'T -> 'T)
      =
      fun (x1521 : ('tags, 'T) this) ->
        fun
          ~callbackfn:(x1514 :
                        previousValue:'T ->
                          currentValue:'T ->
                            currentIndex:float -> array:'T list -> 'T)
          ->
          fun ~initialValue:(x1520 : 'T) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic Obj.magic x1521) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x1515 : Ojs.t) ->
                         fun (x1516 : Ojs.t) ->
                           fun (x1517 : Ojs.t) ->
                             fun (x1518 : Ojs.t) ->
                               Obj.magic
                                 (x1514 ~previousValue:(Obj.magic x1515)
                                    ~currentValue:(Obj.magic x1516)
                                    ~currentIndex:(Ojs.float_of_js x1517)
                                    ~array:(Ojs.list_of_js Obj.magic x1518))));(
                   Obj.magic x1520)|])
    let (reduce'' :
      ('tags, 'T) this ->
        callbackfn:(previousValue:'U ->
                      currentValue:'T ->
                        currentIndex:float -> array:'T list -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x1531 : ('tags, 'T) this) ->
        fun
          ~callbackfn:(x1524 :
                        previousValue:'U ->
                          currentValue:'T ->
                            currentIndex:float -> array:'T list -> 'U)
          ->
          fun ~initialValue:(x1530 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic Obj.magic x1531) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x1525 : Ojs.t) ->
                         fun (x1526 : Ojs.t) ->
                           fun (x1527 : Ojs.t) ->
                             fun (x1528 : Ojs.t) ->
                               Obj.magic
                                 (x1524 ~previousValue:(Obj.magic x1525)
                                    ~currentValue:(Obj.magic x1526)
                                    ~currentIndex:(Ojs.float_of_js x1527)
                                    ~array:(Ojs.list_of_js Obj.magic x1528))));(
                   Obj.magic x1530)|])
    let (reduceRight :
      ('tags, 'T) this ->
        callbackfn:(previousValue:'T ->
                      currentValue:'T ->
                        currentIndex:float -> array:'T list -> 'T)
          -> 'T)
      =
      fun (x1540 : ('tags, 'T) this) ->
        fun
          ~callbackfn:(x1534 :
                        previousValue:'T ->
                          currentValue:'T ->
                            currentIndex:float -> array:'T list -> 'T)
          ->
          Obj.magic
            (Ojs.call (this_to_js Obj.magic Obj.magic x1540) "reduceRight"
               [|(Ojs.fun_to_js 4
                    (fun (x1535 : Ojs.t) ->
                       fun (x1536 : Ojs.t) ->
                         fun (x1537 : Ojs.t) ->
                           fun (x1538 : Ojs.t) ->
                             Obj.magic
                               (x1534 ~previousValue:(Obj.magic x1535)
                                  ~currentValue:(Obj.magic x1536)
                                  ~currentIndex:(Ojs.float_of_js x1537)
                                  ~array:(Ojs.list_of_js Obj.magic x1538))))|])
    let (reduceRight' :
      ('tags, 'T) this ->
        callbackfn:(previousValue:'T ->
                      currentValue:'T ->
                        currentIndex:float -> array:'T list -> 'T)
          -> initialValue:'T -> 'T)
      =
      fun (x1550 : ('tags, 'T) this) ->
        fun
          ~callbackfn:(x1543 :
                        previousValue:'T ->
                          currentValue:'T ->
                            currentIndex:float -> array:'T list -> 'T)
          ->
          fun ~initialValue:(x1549 : 'T) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic Obj.magic x1550) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x1544 : Ojs.t) ->
                         fun (x1545 : Ojs.t) ->
                           fun (x1546 : Ojs.t) ->
                             fun (x1547 : Ojs.t) ->
                               Obj.magic
                                 (x1543 ~previousValue:(Obj.magic x1544)
                                    ~currentValue:(Obj.magic x1545)
                                    ~currentIndex:(Ojs.float_of_js x1546)
                                    ~array:(Ojs.list_of_js Obj.magic x1547))));(
                   Obj.magic x1549)|])
    let (reduceRight'' :
      ('tags, 'T) this ->
        callbackfn:(previousValue:'U ->
                      currentValue:'T ->
                        currentIndex:float -> array:'T list -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x1560 : ('tags, 'T) this) ->
        fun
          ~callbackfn:(x1553 :
                        previousValue:'U ->
                          currentValue:'T ->
                            currentIndex:float -> array:'T list -> 'U)
          ->
          fun ~initialValue:(x1559 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic Obj.magic x1560) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x1554 : Ojs.t) ->
                         fun (x1555 : Ojs.t) ->
                           fun (x1556 : Ojs.t) ->
                             fun (x1557 : Ojs.t) ->
                               Obj.magic
                                 (x1553 ~previousValue:(Obj.magic x1554)
                                    ~currentValue:(Obj.magic x1555)
                                    ~currentIndex:(Ojs.float_of_js x1556)
                                    ~array:(Ojs.list_of_js Obj.magic x1557))));(
                   Obj.magic x1559)|])
    let (get : ('tags, 'T) this -> float -> 'T) =
      fun (x1563 : ('tags, 'T) this) ->
        fun (x1566 : float) ->
          Obj.magic
            (Ojs.get_prop (this_to_js Obj.magic Obj.magic x1563)
               (Ojs.float_to_js x1566))
    let (set : ('tags, 'T) this -> float -> 'T -> unit) =
      fun (x1567 : ('tags, 'T) this) ->
        fun (x1570 : float) ->
          fun (x1571 : 'T) ->
            Ojs.set_prop (this_to_js Obj.magic Obj.magic x1567)
              (Ojs.float_to_js x1570) (Obj.magic x1571)
    let (from : [ `U1 of 'T Iterable.t  | `U2 of 'T ArrayLike.t ] -> 'T list)
      =
      fun (x1572 : [ `U1 of 'T Iterable.t  | `U2 of 'T ArrayLike.t ]) ->
        Ojs.list_of_js Obj.magic
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Array") "from"
             [|((match x1572 with
                 | `U1 x1573 -> Iterable.t_to_js Obj.magic x1573
                 | `U2 x1575 -> ArrayLike.t_to_js Obj.magic x1575))|])
    let (from' :
      iterable:[ `U1 of 'T Iterable.t  | `U2 of 'T ArrayLike.t ] ->
        mapfn:(v:'T -> k:float -> 'U) -> ?thisArg:any -> unit -> 'U list)
      =
      fun
        ~iterable:(x1578 : [ `U1 of 'T Iterable.t  | `U2 of 'T ArrayLike.t ])
        ->
        fun ~mapfn:(x1579 : v:'T -> k:float -> 'U) ->
          fun ?thisArg:(x1580 : any option) ->
            fun () ->
              Ojs.list_of_js Obj.magic
                (let x1589 = Ojs.get_prop_ascii Ojs.global "Array" in
                 Ojs.call (Ojs.get_prop_ascii x1589 "from") "apply"
                   [|x1589;((let x1581 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1581 "push"
                                  [|((match x1578 with
                                      | `U1 x1585 ->
                                          Iterable.t_to_js Obj.magic x1585
                                      | `U2 x1587 ->
                                          ArrayLike.t_to_js Obj.magic x1587))|]);
                             ignore
                               (Ojs.call x1581 "push"
                                  [|(Ojs.fun_to_js 2
                                       (fun (x1583 : Ojs.t) ->
                                          fun (x1584 : Ojs.t) ->
                                            Obj.magic
                                              (x1579 ~v:(Obj.magic x1583)
                                                 ~k:(Ojs.float_of_js x1584))))|]);
                             (match x1580 with
                              | Some x1582 ->
                                  ignore
                                    (Ojs.call x1581 "push"
                                       [|(any_to_js x1582)|])
                              | None -> ());
                             x1581))|])
    let (from'' : 'T ArrayLike.t -> 'T list) =
      fun (x1591 : 'T ArrayLike.t) ->
        Ojs.list_of_js Obj.magic
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Array") "from"
             [|(ArrayLike.t_to_js Obj.magic x1591)|])
    let (from''' :
      arrayLike:'T ArrayLike.t ->
        mapfn:(v:'T -> k:float -> 'U) -> ?thisArg:any -> unit -> 'U list)
      =
      fun ~arrayLike:(x1594 : 'T ArrayLike.t) ->
        fun ~mapfn:(x1595 : v:'T -> k:float -> 'U) ->
          fun ?thisArg:(x1596 : any option) ->
            fun () ->
              Ojs.list_of_js Obj.magic
                (let x1602 = Ojs.get_prop_ascii Ojs.global "Array" in
                 Ojs.call (Ojs.get_prop_ascii x1602 "from") "apply"
                   [|x1602;((let x1597 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1597 "push"
                                  [|(ArrayLike.t_to_js Obj.magic x1594)|]);
                             ignore
                               (Ojs.call x1597 "push"
                                  [|(Ojs.fun_to_js 2
                                       (fun (x1599 : Ojs.t) ->
                                          fun (x1600 : Ojs.t) ->
                                            Obj.magic
                                              (x1595 ~v:(Obj.magic x1599)
                                                 ~k:(Ojs.float_of_js x1600))))|]);
                             (match x1596 with
                              | Some x1598 ->
                                  ignore
                                    (Ojs.call x1597 "push"
                                       [|(any_to_js x1598)|])
                              | None -> ());
                             x1597))|])
    let (of_ : 'T list -> 'T list) =
      fun (x1604 : 'T list) ->
        Ojs.list_of_js Obj.magic
          (let x1607 = Ojs.get_prop_ascii Ojs.global "Array" in
           Ojs.call (Ojs.get_prop_ascii x1607 "of") "apply"
             [|x1607;((let x1605 =
                         Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                           [||] in
                       List.iter
                         (fun (x1606 : 'T) ->
                            ignore
                              (Ojs.call x1605 "push" [|(Obj.magic x1606)|]))
                         x1604;
                       x1605))|])
    let (create : ?arrayLength:float -> unit -> any list) =
      fun ?arrayLength:(x1609 : float option) ->
        fun () ->
          Ojs.list_of_js any_of_js
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "Array")
               (let x1610 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x1609 with
                 | Some x1611 ->
                     ignore
                       (Ojs.call x1610 "push" [|(Ojs.float_to_js x1611)|])
                 | None -> ());
                x1610))
    let (create' : float -> 'T list) =
      fun (x1613 : float) ->
        Ojs.list_of_js Obj.magic
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
             [|(Ojs.float_to_js x1613)|])
    let (create'' : 'T list -> 'T list) =
      fun (x1615 : 'T list) ->
        Ojs.list_of_js Obj.magic
          (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "Array")
             (let x1616 =
                Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
              List.iter
                (fun (x1617 : 'T) ->
                   ignore (Ojs.call x1616 "push" [|(Obj.magic x1617)|]))
                x1615;
              x1616))
    let (invoke : ?arrayLength:float -> unit -> any list) =
      fun ?arrayLength:(x1619 : float option) ->
        fun () ->
          Ojs.list_of_js any_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "Array") "apply"
               [|Ojs.null;((let x1620 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x1619 with
                             | Some x1621 ->
                                 ignore
                                   (Ojs.call x1620 "push"
                                      [|(Ojs.float_to_js x1621)|])
                             | None -> ());
                            x1620))|])
    let (invoke' : float -> 'T list) =
      fun (x1623 : float) ->
        Ojs.list_of_js Obj.magic
          (Ojs.apply (Ojs.get_prop_ascii Ojs.global "Array")
             [|(Ojs.float_to_js x1623)|])
    let (invoke'' : 'T list -> 'T list) =
      fun (x1625 : 'T list) ->
        Ojs.list_of_js Obj.magic
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Array") "apply"
             [|Ojs.null;((let x1626 =
                            Ojs.new_obj
                              (Ojs.get_prop_ascii Ojs.global "Array") 
                              [||] in
                          List.iter
                            (fun (x1627 : 'T) ->
                               ignore
                                 (Ojs.call x1626 "push" [|(Obj.magic x1627)|]))
                            x1625;
                          x1626))|])
    let (isArray : any -> bool) =
      fun (x1629 : any) ->
        Ojs.bool_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Array") "isArray"
             [|(any_to_js x1629)|])
    let (prototype : unit -> any list) =
      fun () ->
        Ojs.list_of_js any_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Array")
             "prototype")
    let cast_from = Obj.magic
    let (of_ml : 'T list -> 'T t) =
      fun (x1631 : 'T list) ->
        t_of_js Obj.magic (Ojs.list_to_js Obj.magic x1631)
    let (to_ml : 'T t -> 'T list) =
      fun (x1634 : 'T t) ->
        Ojs.list_of_js Obj.magic (t_to_js Obj.magic x1634)
  end
module RegExpMatchArray =
  struct
    module AnonymousInterface16 =
      struct
        type t = Ojs.t
        let rec t_of_js : Ojs.t -> t = fun (x1638 : Ojs.t) -> x1638
        and t_to_js : t -> Ojs.t = fun (x1637 : Ojs.t) -> x1637
        let (get : t -> string -> string) =
          fun (x1639 : t) ->
            fun (x1640 : string) ->
              Ojs.string_of_js
                (Ojs.get_prop (t_to_js x1639) (Ojs.string_to_js x1640))
        let (set : t -> string -> string -> unit) =
          fun (x1641 : t) ->
            fun (x1642 : string) ->
              fun (x1643 : string) ->
                Ojs.set_prop (t_to_js x1641) (Ojs.string_to_js x1642)
                  (Ojs.string_to_js x1643)
      end
    type t =
      [ `Array of string  | `Array of string  | `RegExpMatchArray 
      | string ArrayLike.tags_1 | string IterableIterator.tags_1] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x1645 : Ojs.t) -> t_of_js x1645
    and t_0_to_js : t_0 -> Ojs.t = fun (x1644 : t) -> t_to_js x1644
    type tags =
      [ `Array of string  | `Array of string  | `RegExpMatchArray 
      | string ArrayLike.tags_1 | string IterableIterator.tags_1]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `RegExpMatchArray ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x1648 : Ojs.t) -> intf_of_js __tags_of_js x1648
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x1646 : __tags intf) -> intf_to_js __tags_to_js x1646
    let (get_groups : 'tags this -> AnonymousInterface16.t option) =
      fun (x1650 : 'tags this) ->
        Ojs.option_of_js AnonymousInterface16.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x1650) "groups")
    let (set_groups : 'tags this -> AnonymousInterface16.t -> unit) =
      fun (x1653 : 'tags this) ->
        fun (x1654 : AnonymousInterface16.t) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x1653) "groups"
            (AnonymousInterface16.t_to_js x1654)
    let (get_index : 'tags this -> float option) =
      fun (x1656 : 'tags this) ->
        Ojs.option_of_js Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x1656) "index")
    let (set_index : 'tags this -> float -> unit) =
      fun (x1659 : 'tags this) ->
        fun (x1660 : float) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x1659) "index"
            (Ojs.float_to_js x1660)
    let (get_input : 'tags this -> string option) =
      fun (x1662 : 'tags this) ->
        Ojs.option_of_js Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x1662) "input")
    let (set_input : 'tags this -> string -> unit) =
      fun (x1665 : 'tags this) ->
        fun (x1666 : string) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x1665) "input"
            (Ojs.string_to_js x1666)
    let (create :
      ?groups:AnonymousInterface16.t ->
        ?index:float -> ?input:string -> unit -> t)
      =
      fun ?groups:(x1668 : AnonymousInterface16.t option) ->
        fun ?index:(x1669 : float option) ->
          fun ?input:(x1670 : string option) ->
            fun () ->
              let x1671 = Ojs.empty_obj () in
              (match x1668 with
               | Some x1674 ->
                   Ojs.set_prop_ascii x1671 "groups"
                     (AnonymousInterface16.t_to_js x1674)
               | None -> ());
              (match x1669 with
               | Some x1673 ->
                   Ojs.set_prop_ascii x1671 "index" (Ojs.float_to_js x1673)
               | None -> ());
              (match x1670 with
               | Some x1672 ->
                   Ojs.set_prop_ascii x1671 "input" (Ojs.string_to_js x1672)
               | None -> ());
              t_of_js x1671
    let cast_from = Obj.magic
  end
module RegExpExecArray =
  struct
    module AnonymousInterface16 =
      struct
        type t = Ojs.t
        let rec t_of_js : Ojs.t -> t = fun (x1676 : Ojs.t) -> x1676
        and t_to_js : t -> Ojs.t = fun (x1675 : Ojs.t) -> x1675
        let (get : t -> string -> string) =
          fun (x1677 : t) ->
            fun (x1678 : string) ->
              Ojs.string_of_js
                (Ojs.get_prop (t_to_js x1677) (Ojs.string_to_js x1678))
        let (set : t -> string -> string -> unit) =
          fun (x1679 : t) ->
            fun (x1680 : string) ->
              fun (x1681 : string) ->
                Ojs.set_prop (t_to_js x1679) (Ojs.string_to_js x1680)
                  (Ojs.string_to_js x1681)
      end
    type t =
      [ `Array of string  | `Array of string  | `RegExpExecArray 
      | string ArrayLike.tags_1 | string IterableIterator.tags_1] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x1683 : Ojs.t) -> t_of_js x1683
    and t_0_to_js : t_0 -> Ojs.t = fun (x1682 : t) -> t_to_js x1682
    type tags =
      [ `Array of string  | `Array of string  | `RegExpExecArray 
      | string ArrayLike.tags_1 | string IterableIterator.tags_1]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `RegExpExecArray ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x1686 : Ojs.t) -> intf_of_js __tags_of_js x1686
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x1684 : __tags intf) -> intf_to_js __tags_to_js x1684
    let (get_groups : 'tags this -> AnonymousInterface16.t option) =
      fun (x1688 : 'tags this) ->
        Ojs.option_of_js AnonymousInterface16.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x1688) "groups")
    let (set_groups : 'tags this -> AnonymousInterface16.t -> unit) =
      fun (x1691 : 'tags this) ->
        fun (x1692 : AnonymousInterface16.t) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x1691) "groups"
            (AnonymousInterface16.t_to_js x1692)
    let (get_index : 'tags this -> float) =
      fun (x1694 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x1694) "index")
    let (set_index : 'tags this -> float -> unit) =
      fun (x1696 : 'tags this) ->
        fun (x1697 : float) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x1696) "index"
            (Ojs.float_to_js x1697)
    let (get_input : 'tags this -> string) =
      fun (x1699 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x1699) "input")
    let (set_input : 'tags this -> string -> unit) =
      fun (x1701 : 'tags this) ->
        fun (x1702 : string) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x1701) "input"
            (Ojs.string_to_js x1702)
    let (create :
      ?groups:AnonymousInterface16.t ->
        index:float -> input:string -> unit -> t)
      =
      fun ?groups:(x1704 : AnonymousInterface16.t option) ->
        fun ~index:(x1705 : float) ->
          fun ~input:(x1706 : string) ->
            fun () ->
              let x1707 = Ojs.empty_obj () in
              (match x1704 with
               | Some x1708 ->
                   Ojs.set_prop_ascii x1707 "groups"
                     (AnonymousInterface16.t_to_js x1708)
               | None -> ());
              Ojs.set_prop_ascii x1707 "index" (Ojs.float_to_js x1705);
              Ojs.set_prop_ascii x1707 "input" (Ojs.string_to_js x1706);
              t_of_js x1707
    let cast_from = Obj.magic
  end
module RegExp =
  struct
    type t = [ `RegExp ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x1710 : Ojs.t) -> t_of_js x1710
    and t_0_to_js : t_0 -> Ojs.t = fun (x1709 : t) -> t_to_js x1709
    type tags = [ `RegExp ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `RegExp ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x1713 : Ojs.t) -> intf_of_js __tags_of_js x1713
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x1711 : __tags intf) -> intf_to_js __tags_to_js x1711
    let (get_dotAll : 'tags this -> bool) =
      fun (x1715 : 'tags this) ->
        Ojs.bool_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x1715) "dotAll")
    let (get_flags : 'tags this -> string) =
      fun (x1717 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x1717) "flags")
    let (get_sticky : 'tags this -> bool) =
      fun (x1719 : 'tags this) ->
        Ojs.bool_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x1719) "sticky")
    let (get_unicode : 'tags this -> bool) =
      fun (x1721 : 'tags this) ->
        Ojs.bool_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x1721) "unicode")
    let (exec : 'tags this -> string:string -> RegExpExecArray.t option) =
      fun (x1724 : 'tags this) ->
        fun ~string:(x1723 : string) ->
          Ojs.option_of_js RegExpExecArray.t_of_js
            (Ojs.call (this_to_js Obj.magic x1724) "exec"
               [|(Ojs.string_to_js x1723)|])
    let (test : 'tags this -> string:string -> bool) =
      fun (x1728 : 'tags this) ->
        fun ~string:(x1727 : string) ->
          Ojs.bool_of_js
            (Ojs.call (this_to_js Obj.magic x1728) "test"
               [|(Ojs.string_to_js x1727)|])
    let (get_source : 'tags this -> string) =
      fun (x1730 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x1730) "source")
    let (get_global : 'tags this -> bool) =
      fun (x1732 : 'tags this) ->
        Ojs.bool_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x1732) "global")
    let (get_ignoreCase : 'tags this -> bool) =
      fun (x1734 : 'tags this) ->
        Ojs.bool_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x1734) "ignoreCase")
    let (get_multiline : 'tags this -> bool) =
      fun (x1736 : 'tags this) ->
        Ojs.bool_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x1736) "multiline")
    let (get_lastIndex : 'tags this -> float) =
      fun (x1738 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x1738) "lastIndex")
    let (set_lastIndex : 'tags this -> float -> unit) =
      fun (x1740 : 'tags this) ->
        fun (x1741 : float) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x1740) "lastIndex"
            (Ojs.float_to_js x1741)
    let (compile :
      'tags this -> pattern:string -> ?flags:string -> unit -> 'tags this) =
      fun (x1747 : 'tags this) ->
        fun ~pattern:(x1743 : string) ->
          fun ?flags:(x1744 : string option) ->
            fun () ->
              this_of_js Obj.magic
                (let x1749 = this_to_js Obj.magic x1747 in
                 Ojs.call (Ojs.get_prop_ascii x1749 "compile") "apply"
                   [|x1749;((let x1745 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1745 "push"
                                  [|(Ojs.string_to_js x1743)|]);
                             (match x1744 with
                              | Some x1746 ->
                                  ignore
                                    (Ojs.call x1745 "push"
                                       [|(Ojs.string_to_js x1746)|])
                              | None -> ());
                             x1745))|])
    let (create :
      pattern:[ `U1 of t  | `U2 of string ] -> ?flags:string -> unit -> t) =
      fun ~pattern:(x1751 : [ `U1 of t  | `U2 of string ]) ->
        fun ?flags:(x1752 : string option) ->
          fun () ->
            t_of_js
              (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "RegExp")
                 (let x1753 =
                    Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                  ignore
                    (Ojs.call x1753 "push"
                       [|((match x1751 with
                           | `U1 x1755 -> t_to_js x1755
                           | `U2 x1756 -> Ojs.string_to_js x1756))|]);
                  (match x1752 with
                   | Some x1754 ->
                       ignore
                         (Ojs.call x1753 "push" [|(Ojs.string_to_js x1754)|])
                   | None -> ());
                  x1753))
    let (invoke :
      pattern:[ `U1 of t  | `U2 of string ] -> ?flags:string -> unit -> t) =
      fun ~pattern:(x1757 : [ `U1 of t  | `U2 of string ]) ->
        fun ?flags:(x1758 : string option) ->
          fun () ->
            t_of_js
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "RegExp") "apply"
                 [|Ojs.null;((let x1759 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x1759 "push"
                                   [|((match x1757 with
                                       | `U1 x1761 -> t_to_js x1761
                                       | `U2 x1762 -> Ojs.string_to_js x1762))|]);
                              (match x1758 with
                               | Some x1760 ->
                                   ignore
                                     (Ojs.call x1759 "push"
                                        [|(Ojs.string_to_js x1760)|])
                               | None -> ());
                              x1759))|])
    let (create' : [ `U1 of t  | `U2 of string ] -> t) =
      fun (x1763 : [ `U1 of t  | `U2 of string ]) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "RegExp")
             [|((match x1763 with
                 | `U1 x1764 -> t_to_js x1764
                 | `U2 x1765 -> Ojs.string_to_js x1765))|])
    let (create'' : pattern:string -> ?flags:string -> unit -> t) =
      fun ~pattern:(x1766 : string) ->
        fun ?flags:(x1767 : string option) ->
          fun () ->
            t_of_js
              (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "RegExp")
                 (let x1768 =
                    Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                  ignore (Ojs.call x1768 "push" [|(Ojs.string_to_js x1766)|]);
                  (match x1767 with
                   | Some x1769 ->
                       ignore
                         (Ojs.call x1768 "push" [|(Ojs.string_to_js x1769)|])
                   | None -> ());
                  x1768))
    let (invoke' : [ `U1 of t  | `U2 of string ] -> t) =
      fun (x1770 : [ `U1 of t  | `U2 of string ]) ->
        t_of_js
          (Ojs.apply (Ojs.get_prop_ascii Ojs.global "RegExp")
             [|((match x1770 with
                 | `U1 x1771 -> t_to_js x1771
                 | `U2 x1772 -> Ojs.string_to_js x1772))|])
    let (invoke'' : pattern:string -> ?flags:string -> unit -> t) =
      fun ~pattern:(x1773 : string) ->
        fun ?flags:(x1774 : string option) ->
          fun () ->
            t_of_js
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "RegExp") "apply"
                 [|Ojs.null;((let x1775 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x1775 "push"
                                   [|(Ojs.string_to_js x1773)|]);
                              (match x1774 with
                               | Some x1776 ->
                                   ignore
                                     (Ojs.call x1775 "push"
                                        [|(Ojs.string_to_js x1776)|])
                               | None -> ());
                              x1775))|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "RegExp")
             "prototype")
    let (_1 : unit -> string) =
      fun () ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "RegExp") "$1")
    let (_2 : unit -> string) =
      fun () ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "RegExp") "$2")
    let (_3 : unit -> string) =
      fun () ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "RegExp") "$3")
    let (_4 : unit -> string) =
      fun () ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "RegExp") "$4")
    let (_5 : unit -> string) =
      fun () ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "RegExp") "$5")
    let (_6 : unit -> string) =
      fun () ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "RegExp") "$6")
    let (_7 : unit -> string) =
      fun () ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "RegExp") "$7")
    let (_8 : unit -> string) =
      fun () ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "RegExp") "$8")
    let (_9 : unit -> string) =
      fun () ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "RegExp") "$9")
    let (input : unit -> string) =
      fun () ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "RegExp")
             "input")
    let (__ : unit -> string) =
      fun () ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "RegExp") "$_")
    let (lastMatch : unit -> string) =
      fun () ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "RegExp")
             "lastMatch")
    let (__' : unit -> string) =
      fun () ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "RegExp") "$&")
    let (lastParen : unit -> string) =
      fun () ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "RegExp")
             "lastParen")
    let (__'' : unit -> string) =
      fun () ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "RegExp") "$+")
    let (leftContext : unit -> string) =
      fun () ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "RegExp")
             "leftContext")
    let (__''' : unit -> string) =
      fun () ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "RegExp") "$`")
    let (rightContext : unit -> string) =
      fun () ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "RegExp")
             "rightContext")
    let (__'''' : unit -> string) =
      fun () ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "RegExp") "$'")
    let cast_from = Obj.magic
  end
module Partial =
  struct
    type 'T t = any
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun (type __T) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x1778 : Ojs.t) -> any_of_js x1778
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t =
      fun (type __T) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x1777 : any) -> any_to_js x1777
    type 'T t_1 = 'T t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 =
      fun (type __T) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x1781 : Ojs.t) -> t_of_js __T_of_js x1781
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t =
      fun (type __T) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x1779 : __T t) -> t_to_js __T_to_js x1779
  end
module rec
  Date:sig
         type t = [ `Date ] intf
         type t_0 = t
         [@@@js.stop ]
         type tags = [ `Date ]
         type tags_0 = tags
         [@@@js.start ]
         [@@@js.implem type tags = [ `Date ]
           type tags_0 = tags]
         type 'tags this = 'tags intf constraint 'tags = [> `Date ]
         val t_to_js : t -> Ojs.t
         val t_of_js : Ojs.t -> t
         val t_0_to_js : t_0 -> Ojs.t
         val t_0_of_js : Ojs.t -> t_0
         val toLocaleString :
           'tags this ->
             ?locales:[ `U1 of string  | `U2 of string list ] ->
               ?options:Intl.DateTimeFormatOptions.t -> unit -> string
         val toLocaleDateString :
           'tags this ->
             ?locales:[ `U1 of string  | `U2 of string list ] ->
               ?options:Intl.DateTimeFormatOptions.t -> unit -> string
         val toLocaleTimeString :
           'tags this ->
             ?locales:[ `U1 of string  | `U2 of string list ] ->
               ?options:Intl.DateTimeFormatOptions.t -> unit -> string
         val toString : 'tags this -> string
         val toDateString : 'tags this -> string
         val toTimeString : 'tags this -> string
         val toLocaleString' : 'tags this -> string
         val toLocaleDateString' : 'tags this -> string
         val toLocaleTimeString' : 'tags this -> string
         val valueOf : 'tags this -> float
         val getTime : 'tags this -> float
         val getFullYear : 'tags this -> float
         val getUTCFullYear : 'tags this -> float
         val getMonth : 'tags this -> float
         val getUTCMonth : 'tags this -> float
         val getDate : 'tags this -> float
         val getUTCDate : 'tags this -> float
         val getDay : 'tags this -> float
         val getUTCDay : 'tags this -> float
         val getHours : 'tags this -> float
         val getUTCHours : 'tags this -> float
         val getMinutes : 'tags this -> float
         val getUTCMinutes : 'tags this -> float
         val getSeconds : 'tags this -> float
         val getUTCSeconds : 'tags this -> float
         val getMilliseconds : 'tags this -> float
         val getUTCMilliseconds : 'tags this -> float
         val getTimezoneOffset : 'tags this -> float
         val setTime : 'tags this -> time:float -> float
         val setMilliseconds : 'tags this -> ms:float -> float
         val setUTCMilliseconds : 'tags this -> ms:float -> float
         val setSeconds :
           'tags this -> sec:float -> ?ms:float -> unit -> float
         val setUTCSeconds :
           'tags this -> sec:float -> ?ms:float -> unit -> float
         val setMinutes :
           'tags this ->
             min:float -> ?sec:float -> ?ms:float -> unit -> float
         val setUTCMinutes :
           'tags this ->
             min:float -> ?sec:float -> ?ms:float -> unit -> float
         val setHours :
           'tags this ->
             hours:float ->
               ?min:float -> ?sec:float -> ?ms:float -> unit -> float
         val setUTCHours :
           'tags this ->
             hours:float ->
               ?min:float -> ?sec:float -> ?ms:float -> unit -> float
         val setDate : 'tags this -> date:float -> float
         val setUTCDate : 'tags this -> date:float -> float
         val setMonth :
           'tags this -> month:float -> ?date:float -> unit -> float
         val setUTCMonth :
           'tags this -> month:float -> ?date:float -> unit -> float
         val setFullYear :
           'tags this ->
             year:float -> ?month:float -> ?date:float -> unit -> float
         val setUTCFullYear :
           'tags this ->
             year:float -> ?month:float -> ?date:float -> unit -> float
         val toUTCString : 'tags this -> string
         val toISOString : 'tags this -> string
         val toJSON : 'tags this -> ?key:any -> unit -> string
         val create : [ `U1 of float  | `U2 of string  | `U3 of t ] -> t
         val create' : unit -> t
         val create'' : [ `U1 of float  | `U2 of string ] -> t
         val create''' :
           year:float ->
             month:float ->
               ?date:float ->
                 ?hours:float ->
                   ?minutes:float -> ?seconds:float -> ?ms:float -> unit -> t
         val invoke : unit -> string
         val prototype : unit -> t
         val parse : string -> float
         val utc :
           year:float ->
             month:float ->
               ?date:float ->
                 ?hours:float ->
                   ?minutes:float ->
                     ?seconds:float -> ?ms:float -> unit -> float
         val now : unit -> float
         val cast_from : 'tags this -> t
       end =
  struct
    type t = [ `Date ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x1784 : Ojs.t) -> t_of_js x1784
    and t_0_to_js : t_0 -> Ojs.t = fun (x1783 : t) -> t_to_js x1783
    type tags = [ `Date ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `Date ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x1787 : Ojs.t) -> intf_of_js __tags_of_js x1787
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x1785 : __tags intf) -> intf_to_js __tags_to_js x1785
    let (toLocaleString :
      'tags this ->
        ?locales:[ `U1 of string  | `U2 of string list ] ->
          ?options:Intl.DateTimeFormatOptions.t -> unit -> string)
      =
      fun (x1797 : 'tags this) ->
        fun ?locales:(x1789 : [ `U1 of string  | `U2 of string list ] option)
          ->
          fun ?options:(x1790 : Intl.DateTimeFormatOptions.t option) ->
            fun () ->
              Ojs.string_of_js
                (let x1799 = this_to_js Obj.magic x1797 in
                 Ojs.call (Ojs.get_prop_ascii x1799 "toLocaleString") "apply"
                   [|x1799;((let x1791 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x1789 with
                              | Some x1793 ->
                                  ignore
                                    (Ojs.call x1791 "push"
                                       [|((match x1793 with
                                           | `U1 x1794 ->
                                               Ojs.string_to_js x1794
                                           | `U2 x1795 ->
                                               Ojs.list_to_js
                                                 Ojs.string_to_js x1795))|])
                              | None -> ());
                             (match x1790 with
                              | Some x1792 ->
                                  ignore
                                    (Ojs.call x1791 "push"
                                       [|(Intl.DateTimeFormatOptions.t_to_js
                                            x1792)|])
                              | None -> ());
                             x1791))|])
    let (toLocaleDateString :
      'tags this ->
        ?locales:[ `U1 of string  | `U2 of string list ] ->
          ?options:Intl.DateTimeFormatOptions.t -> unit -> string)
      =
      fun (x1808 : 'tags this) ->
        fun ?locales:(x1800 : [ `U1 of string  | `U2 of string list ] option)
          ->
          fun ?options:(x1801 : Intl.DateTimeFormatOptions.t option) ->
            fun () ->
              Ojs.string_of_js
                (let x1810 = this_to_js Obj.magic x1808 in
                 Ojs.call (Ojs.get_prop_ascii x1810 "toLocaleDateString")
                   "apply"
                   [|x1810;((let x1802 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x1800 with
                              | Some x1804 ->
                                  ignore
                                    (Ojs.call x1802 "push"
                                       [|((match x1804 with
                                           | `U1 x1805 ->
                                               Ojs.string_to_js x1805
                                           | `U2 x1806 ->
                                               Ojs.list_to_js
                                                 Ojs.string_to_js x1806))|])
                              | None -> ());
                             (match x1801 with
                              | Some x1803 ->
                                  ignore
                                    (Ojs.call x1802 "push"
                                       [|(Intl.DateTimeFormatOptions.t_to_js
                                            x1803)|])
                              | None -> ());
                             x1802))|])
    let (toLocaleTimeString :
      'tags this ->
        ?locales:[ `U1 of string  | `U2 of string list ] ->
          ?options:Intl.DateTimeFormatOptions.t -> unit -> string)
      =
      fun (x1819 : 'tags this) ->
        fun ?locales:(x1811 : [ `U1 of string  | `U2 of string list ] option)
          ->
          fun ?options:(x1812 : Intl.DateTimeFormatOptions.t option) ->
            fun () ->
              Ojs.string_of_js
                (let x1821 = this_to_js Obj.magic x1819 in
                 Ojs.call (Ojs.get_prop_ascii x1821 "toLocaleTimeString")
                   "apply"
                   [|x1821;((let x1813 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x1811 with
                              | Some x1815 ->
                                  ignore
                                    (Ojs.call x1813 "push"
                                       [|((match x1815 with
                                           | `U1 x1816 ->
                                               Ojs.string_to_js x1816
                                           | `U2 x1817 ->
                                               Ojs.list_to_js
                                                 Ojs.string_to_js x1817))|])
                              | None -> ());
                             (match x1812 with
                              | Some x1814 ->
                                  ignore
                                    (Ojs.call x1813 "push"
                                       [|(Intl.DateTimeFormatOptions.t_to_js
                                            x1814)|])
                              | None -> ());
                             x1813))|])
    let (toString : 'tags this -> string) =
      fun (x1822 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x1822) "toString" [||])
    let (toDateString : 'tags this -> string) =
      fun (x1824 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x1824) "toDateString" [||])
    let (toTimeString : 'tags this -> string) =
      fun (x1826 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x1826) "toTimeString" [||])
    let (toLocaleString' : 'tags this -> string) =
      fun (x1828 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x1828) "toLocaleString" [||])
    let (toLocaleDateString' : 'tags this -> string) =
      fun (x1830 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x1830) "toLocaleDateString" [||])
    let (toLocaleTimeString' : 'tags this -> string) =
      fun (x1832 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x1832) "toLocaleTimeString" [||])
    let (valueOf : 'tags this -> float) =
      fun (x1834 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x1834) "valueOf" [||])
    let (getTime : 'tags this -> float) =
      fun (x1836 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x1836) "getTime" [||])
    let (getFullYear : 'tags this -> float) =
      fun (x1838 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x1838) "getFullYear" [||])
    let (getUTCFullYear : 'tags this -> float) =
      fun (x1840 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x1840) "getUTCFullYear" [||])
    let (getMonth : 'tags this -> float) =
      fun (x1842 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x1842) "getMonth" [||])
    let (getUTCMonth : 'tags this -> float) =
      fun (x1844 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x1844) "getUTCMonth" [||])
    let (getDate : 'tags this -> float) =
      fun (x1846 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x1846) "getDate" [||])
    let (getUTCDate : 'tags this -> float) =
      fun (x1848 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x1848) "getUTCDate" [||])
    let (getDay : 'tags this -> float) =
      fun (x1850 : 'tags this) ->
        Ojs.float_of_js (Ojs.call (this_to_js Obj.magic x1850) "getDay" [||])
    let (getUTCDay : 'tags this -> float) =
      fun (x1852 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x1852) "getUTCDay" [||])
    let (getHours : 'tags this -> float) =
      fun (x1854 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x1854) "getHours" [||])
    let (getUTCHours : 'tags this -> float) =
      fun (x1856 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x1856) "getUTCHours" [||])
    let (getMinutes : 'tags this -> float) =
      fun (x1858 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x1858) "getMinutes" [||])
    let (getUTCMinutes : 'tags this -> float) =
      fun (x1860 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x1860) "getUTCMinutes" [||])
    let (getSeconds : 'tags this -> float) =
      fun (x1862 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x1862) "getSeconds" [||])
    let (getUTCSeconds : 'tags this -> float) =
      fun (x1864 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x1864) "getUTCSeconds" [||])
    let (getMilliseconds : 'tags this -> float) =
      fun (x1866 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x1866) "getMilliseconds" [||])
    let (getUTCMilliseconds : 'tags this -> float) =
      fun (x1868 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x1868) "getUTCMilliseconds" [||])
    let (getTimezoneOffset : 'tags this -> float) =
      fun (x1870 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x1870) "getTimezoneOffset" [||])
    let (setTime : 'tags this -> time:float -> float) =
      fun (x1873 : 'tags this) ->
        fun ~time:(x1872 : float) ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x1873) "setTime"
               [|(Ojs.float_to_js x1872)|])
    let (setMilliseconds : 'tags this -> ms:float -> float) =
      fun (x1876 : 'tags this) ->
        fun ~ms:(x1875 : float) ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x1876) "setMilliseconds"
               [|(Ojs.float_to_js x1875)|])
    let (setUTCMilliseconds : 'tags this -> ms:float -> float) =
      fun (x1879 : 'tags this) ->
        fun ~ms:(x1878 : float) ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x1879) "setUTCMilliseconds"
               [|(Ojs.float_to_js x1878)|])
    let (setSeconds : 'tags this -> sec:float -> ?ms:float -> unit -> float)
      =
      fun (x1885 : 'tags this) ->
        fun ~sec:(x1881 : float) ->
          fun ?ms:(x1882 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x1887 = this_to_js Obj.magic x1885 in
                 Ojs.call (Ojs.get_prop_ascii x1887 "setSeconds") "apply"
                   [|x1887;((let x1883 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1883 "push"
                                  [|(Ojs.float_to_js x1881)|]);
                             (match x1882 with
                              | Some x1884 ->
                                  ignore
                                    (Ojs.call x1883 "push"
                                       [|(Ojs.float_to_js x1884)|])
                              | None -> ());
                             x1883))|])
    let (setUTCSeconds :
      'tags this -> sec:float -> ?ms:float -> unit -> float) =
      fun (x1892 : 'tags this) ->
        fun ~sec:(x1888 : float) ->
          fun ?ms:(x1889 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x1894 = this_to_js Obj.magic x1892 in
                 Ojs.call (Ojs.get_prop_ascii x1894 "setUTCSeconds") "apply"
                   [|x1894;((let x1890 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1890 "push"
                                  [|(Ojs.float_to_js x1888)|]);
                             (match x1889 with
                              | Some x1891 ->
                                  ignore
                                    (Ojs.call x1890 "push"
                                       [|(Ojs.float_to_js x1891)|])
                              | None -> ());
                             x1890))|])
    let (setMinutes :
      'tags this -> min:float -> ?sec:float -> ?ms:float -> unit -> float) =
      fun (x1901 : 'tags this) ->
        fun ~min:(x1895 : float) ->
          fun ?sec:(x1896 : float option) ->
            fun ?ms:(x1897 : float option) ->
              fun () ->
                Ojs.float_of_js
                  (let x1903 = this_to_js Obj.magic x1901 in
                   Ojs.call (Ojs.get_prop_ascii x1903 "setMinutes") "apply"
                     [|x1903;((let x1898 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x1898 "push"
                                    [|(Ojs.float_to_js x1895)|]);
                               (match x1896 with
                                | Some x1900 ->
                                    ignore
                                      (Ojs.call x1898 "push"
                                         [|(Ojs.float_to_js x1900)|])
                                | None -> ());
                               (match x1897 with
                                | Some x1899 ->
                                    ignore
                                      (Ojs.call x1898 "push"
                                         [|(Ojs.float_to_js x1899)|])
                                | None -> ());
                               x1898))|])
    let (setUTCMinutes :
      'tags this -> min:float -> ?sec:float -> ?ms:float -> unit -> float) =
      fun (x1910 : 'tags this) ->
        fun ~min:(x1904 : float) ->
          fun ?sec:(x1905 : float option) ->
            fun ?ms:(x1906 : float option) ->
              fun () ->
                Ojs.float_of_js
                  (let x1912 = this_to_js Obj.magic x1910 in
                   Ojs.call (Ojs.get_prop_ascii x1912 "setUTCMinutes")
                     "apply"
                     [|x1912;((let x1907 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x1907 "push"
                                    [|(Ojs.float_to_js x1904)|]);
                               (match x1905 with
                                | Some x1909 ->
                                    ignore
                                      (Ojs.call x1907 "push"
                                         [|(Ojs.float_to_js x1909)|])
                                | None -> ());
                               (match x1906 with
                                | Some x1908 ->
                                    ignore
                                      (Ojs.call x1907 "push"
                                         [|(Ojs.float_to_js x1908)|])
                                | None -> ());
                               x1907))|])
    let (setHours :
      'tags this ->
        hours:float -> ?min:float -> ?sec:float -> ?ms:float -> unit -> float)
      =
      fun (x1921 : 'tags this) ->
        fun ~hours:(x1913 : float) ->
          fun ?min:(x1914 : float option) ->
            fun ?sec:(x1915 : float option) ->
              fun ?ms:(x1916 : float option) ->
                fun () ->
                  Ojs.float_of_js
                    (let x1923 = this_to_js Obj.magic x1921 in
                     Ojs.call (Ojs.get_prop_ascii x1923 "setHours") "apply"
                       [|x1923;((let x1917 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x1917 "push"
                                      [|(Ojs.float_to_js x1913)|]);
                                 (match x1914 with
                                  | Some x1920 ->
                                      ignore
                                        (Ojs.call x1917 "push"
                                           [|(Ojs.float_to_js x1920)|])
                                  | None -> ());
                                 (match x1915 with
                                  | Some x1919 ->
                                      ignore
                                        (Ojs.call x1917 "push"
                                           [|(Ojs.float_to_js x1919)|])
                                  | None -> ());
                                 (match x1916 with
                                  | Some x1918 ->
                                      ignore
                                        (Ojs.call x1917 "push"
                                           [|(Ojs.float_to_js x1918)|])
                                  | None -> ());
                                 x1917))|])
    let (setUTCHours :
      'tags this ->
        hours:float -> ?min:float -> ?sec:float -> ?ms:float -> unit -> float)
      =
      fun (x1932 : 'tags this) ->
        fun ~hours:(x1924 : float) ->
          fun ?min:(x1925 : float option) ->
            fun ?sec:(x1926 : float option) ->
              fun ?ms:(x1927 : float option) ->
                fun () ->
                  Ojs.float_of_js
                    (let x1934 = this_to_js Obj.magic x1932 in
                     Ojs.call (Ojs.get_prop_ascii x1934 "setUTCHours")
                       "apply"
                       [|x1934;((let x1928 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x1928 "push"
                                      [|(Ojs.float_to_js x1924)|]);
                                 (match x1925 with
                                  | Some x1931 ->
                                      ignore
                                        (Ojs.call x1928 "push"
                                           [|(Ojs.float_to_js x1931)|])
                                  | None -> ());
                                 (match x1926 with
                                  | Some x1930 ->
                                      ignore
                                        (Ojs.call x1928 "push"
                                           [|(Ojs.float_to_js x1930)|])
                                  | None -> ());
                                 (match x1927 with
                                  | Some x1929 ->
                                      ignore
                                        (Ojs.call x1928 "push"
                                           [|(Ojs.float_to_js x1929)|])
                                  | None -> ());
                                 x1928))|])
    let (setDate : 'tags this -> date:float -> float) =
      fun (x1936 : 'tags this) ->
        fun ~date:(x1935 : float) ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x1936) "setDate"
               [|(Ojs.float_to_js x1935)|])
    let (setUTCDate : 'tags this -> date:float -> float) =
      fun (x1939 : 'tags this) ->
        fun ~date:(x1938 : float) ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x1939) "setUTCDate"
               [|(Ojs.float_to_js x1938)|])
    let (setMonth :
      'tags this -> month:float -> ?date:float -> unit -> float) =
      fun (x1945 : 'tags this) ->
        fun ~month:(x1941 : float) ->
          fun ?date:(x1942 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x1947 = this_to_js Obj.magic x1945 in
                 Ojs.call (Ojs.get_prop_ascii x1947 "setMonth") "apply"
                   [|x1947;((let x1943 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1943 "push"
                                  [|(Ojs.float_to_js x1941)|]);
                             (match x1942 with
                              | Some x1944 ->
                                  ignore
                                    (Ojs.call x1943 "push"
                                       [|(Ojs.float_to_js x1944)|])
                              | None -> ());
                             x1943))|])
    let (setUTCMonth :
      'tags this -> month:float -> ?date:float -> unit -> float) =
      fun (x1952 : 'tags this) ->
        fun ~month:(x1948 : float) ->
          fun ?date:(x1949 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x1954 = this_to_js Obj.magic x1952 in
                 Ojs.call (Ojs.get_prop_ascii x1954 "setUTCMonth") "apply"
                   [|x1954;((let x1950 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1950 "push"
                                  [|(Ojs.float_to_js x1948)|]);
                             (match x1949 with
                              | Some x1951 ->
                                  ignore
                                    (Ojs.call x1950 "push"
                                       [|(Ojs.float_to_js x1951)|])
                              | None -> ());
                             x1950))|])
    let (setFullYear :
      'tags this ->
        year:float -> ?month:float -> ?date:float -> unit -> float)
      =
      fun (x1961 : 'tags this) ->
        fun ~year:(x1955 : float) ->
          fun ?month:(x1956 : float option) ->
            fun ?date:(x1957 : float option) ->
              fun () ->
                Ojs.float_of_js
                  (let x1963 = this_to_js Obj.magic x1961 in
                   Ojs.call (Ojs.get_prop_ascii x1963 "setFullYear") "apply"
                     [|x1963;((let x1958 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x1958 "push"
                                    [|(Ojs.float_to_js x1955)|]);
                               (match x1956 with
                                | Some x1960 ->
                                    ignore
                                      (Ojs.call x1958 "push"
                                         [|(Ojs.float_to_js x1960)|])
                                | None -> ());
                               (match x1957 with
                                | Some x1959 ->
                                    ignore
                                      (Ojs.call x1958 "push"
                                         [|(Ojs.float_to_js x1959)|])
                                | None -> ());
                               x1958))|])
    let (setUTCFullYear :
      'tags this ->
        year:float -> ?month:float -> ?date:float -> unit -> float)
      =
      fun (x1970 : 'tags this) ->
        fun ~year:(x1964 : float) ->
          fun ?month:(x1965 : float option) ->
            fun ?date:(x1966 : float option) ->
              fun () ->
                Ojs.float_of_js
                  (let x1972 = this_to_js Obj.magic x1970 in
                   Ojs.call (Ojs.get_prop_ascii x1972 "setUTCFullYear")
                     "apply"
                     [|x1972;((let x1967 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x1967 "push"
                                    [|(Ojs.float_to_js x1964)|]);
                               (match x1965 with
                                | Some x1969 ->
                                    ignore
                                      (Ojs.call x1967 "push"
                                         [|(Ojs.float_to_js x1969)|])
                                | None -> ());
                               (match x1966 with
                                | Some x1968 ->
                                    ignore
                                      (Ojs.call x1967 "push"
                                         [|(Ojs.float_to_js x1968)|])
                                | None -> ());
                               x1967))|])
    let (toUTCString : 'tags this -> string) =
      fun (x1973 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x1973) "toUTCString" [||])
    let (toISOString : 'tags this -> string) =
      fun (x1975 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x1975) "toISOString" [||])
    let (toJSON : 'tags this -> ?key:any -> unit -> string) =
      fun (x1980 : 'tags this) ->
        fun ?key:(x1977 : any option) ->
          fun () ->
            Ojs.string_of_js
              (let x1982 = this_to_js Obj.magic x1980 in
               Ojs.call (Ojs.get_prop_ascii x1982 "toJSON") "apply"
                 [|x1982;((let x1978 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x1977 with
                            | Some x1979 ->
                                ignore
                                  (Ojs.call x1978 "push"
                                     [|(any_to_js x1979)|])
                            | None -> ());
                           x1978))|])
    let (create : [ `U1 of float  | `U2 of string  | `U3 of t ] -> t) =
      fun (x1983 : [ `U1 of float  | `U2 of string  | `U3 of t ]) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Date")
             [|((match x1983 with
                 | `U1 x1984 -> Ojs.float_to_js x1984
                 | `U2 x1985 -> Ojs.string_to_js x1985
                 | `U3 x1986 -> t_to_js x1986))|])
    let (create' : unit -> t) =
      fun () ->
        t_of_js (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Date") [||])
    let (create'' : [ `U1 of float  | `U2 of string ] -> t) =
      fun (x1987 : [ `U1 of float  | `U2 of string ]) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Date")
             [|((match x1987 with
                 | `U1 x1988 -> Ojs.float_to_js x1988
                 | `U2 x1989 -> Ojs.string_to_js x1989))|])
    let (create''' :
      year:float ->
        month:float ->
          ?date:float ->
            ?hours:float ->
              ?minutes:float -> ?seconds:float -> ?ms:float -> unit -> t)
      =
      fun ~year:(x1990 : float) ->
        fun ~month:(x1991 : float) ->
          fun ?date:(x1992 : float option) ->
            fun ?hours:(x1993 : float option) ->
              fun ?minutes:(x1994 : float option) ->
                fun ?seconds:(x1995 : float option) ->
                  fun ?ms:(x1996 : float option) ->
                    fun () ->
                      t_of_js
                        (Ojs.new_obj_arr
                           (Ojs.get_prop_ascii Ojs.global "Date")
                           (let x1997 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x1997 "push"
                                 [|(Ojs.float_to_js x1990)|]);
                            ignore
                              (Ojs.call x1997 "push"
                                 [|(Ojs.float_to_js x1991)|]);
                            (match x1992 with
                             | Some x2002 ->
                                 ignore
                                   (Ojs.call x1997 "push"
                                      [|(Ojs.float_to_js x2002)|])
                             | None -> ());
                            (match x1993 with
                             | Some x2001 ->
                                 ignore
                                   (Ojs.call x1997 "push"
                                      [|(Ojs.float_to_js x2001)|])
                             | None -> ());
                            (match x1994 with
                             | Some x2000 ->
                                 ignore
                                   (Ojs.call x1997 "push"
                                      [|(Ojs.float_to_js x2000)|])
                             | None -> ());
                            (match x1995 with
                             | Some x1999 ->
                                 ignore
                                   (Ojs.call x1997 "push"
                                      [|(Ojs.float_to_js x1999)|])
                             | None -> ());
                            (match x1996 with
                             | Some x1998 ->
                                 ignore
                                   (Ojs.call x1997 "push"
                                      [|(Ojs.float_to_js x1998)|])
                             | None -> ());
                            x1997))
    let (invoke : unit -> string) =
      fun () ->
        Ojs.string_of_js
          (Ojs.apply (Ojs.get_prop_ascii Ojs.global "Date") [||])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Date")
             "prototype")
    let (parse : string -> float) =
      fun (x2003 : string) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Date") "parse"
             [|(Ojs.string_to_js x2003)|])
    let (utc :
      year:float ->
        month:float ->
          ?date:float ->
            ?hours:float ->
              ?minutes:float -> ?seconds:float -> ?ms:float -> unit -> float)
      =
      fun ~year:(x2004 : float) ->
        fun ~month:(x2005 : float) ->
          fun ?date:(x2006 : float option) ->
            fun ?hours:(x2007 : float option) ->
              fun ?minutes:(x2008 : float option) ->
                fun ?seconds:(x2009 : float option) ->
                  fun ?ms:(x2010 : float option) ->
                    fun () ->
                      Ojs.float_of_js
                        (let x2017 = Ojs.get_prop_ascii Ojs.global "Date" in
                         Ojs.call (Ojs.get_prop_ascii x2017 "UTC") "apply"
                           [|x2017;((let x2011 =
                                       Ojs.new_obj
                                         (Ojs.get_prop_ascii Ojs.global
                                            "Array") [||] in
                                     ignore
                                       (Ojs.call x2011 "push"
                                          [|(Ojs.float_to_js x2004)|]);
                                     ignore
                                       (Ojs.call x2011 "push"
                                          [|(Ojs.float_to_js x2005)|]);
                                     (match x2006 with
                                      | Some x2016 ->
                                          ignore
                                            (Ojs.call x2011 "push"
                                               [|(Ojs.float_to_js x2016)|])
                                      | None -> ());
                                     (match x2007 with
                                      | Some x2015 ->
                                          ignore
                                            (Ojs.call x2011 "push"
                                               [|(Ojs.float_to_js x2015)|])
                                      | None -> ());
                                     (match x2008 with
                                      | Some x2014 ->
                                          ignore
                                            (Ojs.call x2011 "push"
                                               [|(Ojs.float_to_js x2014)|])
                                      | None -> ());
                                     (match x2009 with
                                      | Some x2013 ->
                                          ignore
                                            (Ojs.call x2011 "push"
                                               [|(Ojs.float_to_js x2013)|])
                                      | None -> ());
                                     (match x2010 with
                                      | Some x2012 ->
                                          ignore
                                            (Ojs.call x2011 "push"
                                               [|(Ojs.float_to_js x2012)|])
                                      | None -> ());
                                     x2011))|])
    let (now : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Date") "now" [||])
    let cast_from = Obj.magic
  end
 and
  Intl:sig
         module RelativeTimeFormatNumeric :
         sig
           type t = [ `L_s21_always  | `L_s22_auto ]
           type t_0 = t
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val t_0_to_js : t_0 -> Ojs.t
           val t_0_of_js : Ojs.t -> t_0
         end
         module UnicodeBCP47LocaleIdentifier :
         sig
           type t = string
           type t_0 = t
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val t_0_to_js : t_0 -> Ojs.t
           val t_0_of_js : Ojs.t -> t_0
         end
         module RelativeTimeFormatStyle :
         sig
           type t = [ `L_s56_long  | `L_s68_narrow  | `L_s89_short ]
           type t_0 = t
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val t_0_to_js : t_0 -> Ojs.t
           val t_0_of_js : Ojs.t -> t_0
         end
         module ResolvedRelativeTimeFormatOptions :
         sig
           type t = [ `Intl_ResolvedRelativeTimeFormatOptions ] intf
           type t_0 = t
           [@@@js.stop ]
           type tags = [ `Intl_ResolvedRelativeTimeFormatOptions ]
           type tags_0 = tags
           [@@@js.start ]
           [@@@js.implem
             type tags = [ `Intl_ResolvedRelativeTimeFormatOptions ]
             type tags_0 = tags]
           type 'tags this =
             'tags intf constraint 'tags =
                         [> `Intl_ResolvedRelativeTimeFormatOptions ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val t_0_to_js : t_0 -> Ojs.t
           val t_0_of_js : Ojs.t -> t_0
           val get_locale : 'tags this -> UnicodeBCP47LocaleIdentifier.t
           val set_locale :
             'tags this -> UnicodeBCP47LocaleIdentifier.t -> unit
           val get_style : 'tags this -> RelativeTimeFormatStyle.t
           val set_style : 'tags this -> RelativeTimeFormatStyle.t -> unit
           val get_numeric : 'tags this -> RelativeTimeFormatNumeric.t
           val set_numeric :
             'tags this -> RelativeTimeFormatNumeric.t -> unit
           val get_numberingSystem : 'tags this -> string
           val set_numberingSystem : 'tags this -> string -> unit
           val create :
             locale:UnicodeBCP47LocaleIdentifier.t ->
               style:RelativeTimeFormatStyle.t ->
                 numeric:RelativeTimeFormatNumeric.t ->
                   numberingSystem:string -> unit -> t
           val cast_from : 'tags this -> t
         end
         module RelativeTimeFormatUnit :
         sig
           type t =
             [ `L_s101_weeks  | `L_s102_year  | `L_s103_years  | `L_s29_day 
             | `L_s31_days  | `L_s50_hour  | `L_s51_hours  | `L_s62_minute 
             | `L_s63_minutes  | `L_s64_month  | `L_s65_months 
             | `L_s81_quarter  | `L_s82_quarters  | `L_s87_second 
             | `L_s88_seconds  | `L_s99_week ]
           type t_0 = t
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val t_0_to_js : t_0 -> Ojs.t
           val t_0_of_js : Ojs.t -> t_0
         end
         module RelativeTimeFormatPart :
         sig
           type t = [ `Intl_RelativeTimeFormatPart ] intf
           type t_0 = t
           [@@@js.stop ]
           type tags = [ `Intl_RelativeTimeFormatPart ]
           type tags_0 = tags
           [@@@js.start ]
           [@@@js.implem
             type tags = [ `Intl_RelativeTimeFormatPart ]
             type tags_0 = tags]
           type 'tags this =
             'tags intf constraint 'tags = [> `Intl_RelativeTimeFormatPart ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val t_0_to_js : t_0 -> Ojs.t
           val t_0_of_js : Ojs.t -> t_0
           val get_type : 'tags this -> string
           val set_type : 'tags this -> string -> unit
           val get_value : 'tags this -> string
           val set_value : 'tags this -> string -> unit
           val get_unit : 'tags this -> RelativeTimeFormatUnit.t option
           val set_unit : 'tags this -> RelativeTimeFormatUnit.t -> unit
           val create :
             type_:string ->
               value:string -> ?unit:RelativeTimeFormatUnit.t -> unit -> t
           val cast_from : 'tags this -> t
         end
         module RelativeTimeFormatLocaleMatcher :
         sig
           type t = [ `L_s24_best_fit  | `L_s57_lookup ]
           type t_0 = t
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val t_0_to_js : t_0 -> Ojs.t
           val t_0_of_js : Ojs.t -> t_0
         end
         module RelativeTimeFormatOptions :
         sig
           type t = [ `Intl_RelativeTimeFormatOptions ] intf
           type t_0 = t
           [@@@js.stop ]
           type tags = [ `Intl_RelativeTimeFormatOptions ]
           type tags_0 = tags
           [@@@js.start ]
           [@@@js.implem
             type tags = [ `Intl_RelativeTimeFormatOptions ]
             type tags_0 = tags]
           type 'tags this =
             'tags intf constraint 'tags =
                         [> `Intl_RelativeTimeFormatOptions ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val t_0_to_js : t_0 -> Ojs.t
           val t_0_of_js : Ojs.t -> t_0
           val get_localeMatcher :
             'tags this -> RelativeTimeFormatLocaleMatcher.t option
           val set_localeMatcher :
             'tags this -> RelativeTimeFormatLocaleMatcher.t -> unit
           val get_numeric : 'tags this -> RelativeTimeFormatNumeric.t option
           val set_numeric :
             'tags this -> RelativeTimeFormatNumeric.t -> unit
           val get_style : 'tags this -> RelativeTimeFormatStyle.t option
           val set_style : 'tags this -> RelativeTimeFormatStyle.t -> unit
           val create :
             ?localeMatcher:RelativeTimeFormatLocaleMatcher.t ->
               ?numeric:RelativeTimeFormatNumeric.t ->
                 ?style:RelativeTimeFormatStyle.t -> unit -> t
           val cast_from : 'tags this -> t
         end
         module RelativeTimeFormat :
         sig
           type t = [ `Intl_RelativeTimeFormat ] intf
           type t_0 = t
           [@@@js.stop ]
           type tags = [ `Intl_RelativeTimeFormat ]
           type tags_0 = tags
           [@@@js.start ]
           [@@@js.implem
             type tags = [ `Intl_RelativeTimeFormat ]
             type tags_0 = tags]
           type 'tags this =
             'tags intf constraint 'tags = [> `Intl_RelativeTimeFormat ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val t_0_to_js : t_0 -> Ojs.t
           val t_0_of_js : Ojs.t -> t_0
           val format :
             'tags this ->
               value:float -> unit:RelativeTimeFormatUnit.t -> string
           val formatToParts :
             'tags this ->
               value:float ->
                 unit:RelativeTimeFormatUnit.t ->
                   RelativeTimeFormatPart.t list
           val resolvedOptions :
             'tags this -> ResolvedRelativeTimeFormatOptions.t
           val cast_from : 'tags this -> t
           val create :
             ?locales:[ `U1 of UnicodeBCP47LocaleIdentifier.t 
                      | `U2 of UnicodeBCP47LocaleIdentifier.t list ]
               -> ?options:RelativeTimeFormatOptions.t -> unit -> t
           val supportedLocalesOf :
             ?locales:[ `U1 of UnicodeBCP47LocaleIdentifier.t 
                      | `U2 of UnicodeBCP47LocaleIdentifier.t list ]
               ->
               ?options:RelativeTimeFormatOptions.t ->
                 unit -> UnicodeBCP47LocaleIdentifier.t list
         end
         module PluralRuleType :
         sig
           type t = [ `L_s25_cardinal  | `L_s76_ordinal ]
           type t_0 = t
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val t_0_to_js : t_0 -> Ojs.t
           val t_0_of_js : Ojs.t -> t_0
         end
         module LDMLPluralRule :
         sig
           type t =
             [ `L_s104_zero  | `L_s41_few  | `L_s59_many  | `L_s75_one 
             | `L_s77_other  | `L_s95_two ]
           type t_0 = t
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val t_0_to_js : t_0 -> Ojs.t
           val t_0_of_js : Ojs.t -> t_0
         end
         module ResolvedPluralRulesOptions :
         sig
           type t = [ `Intl_ResolvedPluralRulesOptions ] intf
           type t_0 = t
           [@@@js.stop ]
           type tags = [ `Intl_ResolvedPluralRulesOptions ]
           type tags_0 = tags
           [@@@js.start ]
           [@@@js.implem
             type tags = [ `Intl_ResolvedPluralRulesOptions ]
             type tags_0 = tags]
           type 'tags this =
             'tags intf constraint 'tags =
                         [> `Intl_ResolvedPluralRulesOptions ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val t_0_to_js : t_0 -> Ojs.t
           val t_0_of_js : Ojs.t -> t_0
           val get_locale : 'tags this -> string
           val set_locale : 'tags this -> string -> unit
           val get_pluralCategories : 'tags this -> LDMLPluralRule.t list
           val set_pluralCategories :
             'tags this -> LDMLPluralRule.t list -> unit
           val get_type : 'tags this -> PluralRuleType.t
           val set_type : 'tags this -> PluralRuleType.t -> unit
           val get_minimumIntegerDigits : 'tags this -> float
           val set_minimumIntegerDigits : 'tags this -> float -> unit
           val get_minimumFractionDigits : 'tags this -> float
           val set_minimumFractionDigits : 'tags this -> float -> unit
           val get_maximumFractionDigits : 'tags this -> float
           val set_maximumFractionDigits : 'tags this -> float -> unit
           val get_minimumSignificantDigits : 'tags this -> float option
           val set_minimumSignificantDigits : 'tags this -> float -> unit
           val get_maximumSignificantDigits : 'tags this -> float option
           val set_maximumSignificantDigits : 'tags this -> float -> unit
           val create :
             locale:string ->
               pluralCategories:LDMLPluralRule.t list ->
                 type_:PluralRuleType.t ->
                   minimumIntegerDigits:float ->
                     minimumFractionDigits:float ->
                       maximumFractionDigits:float ->
                         ?minimumSignificantDigits:float ->
                           ?maximumSignificantDigits:float -> unit -> t
           val cast_from : 'tags this -> t
         end
         module PluralRulesOptions :
         sig
           type t = [ `Intl_PluralRulesOptions ] intf
           type t_0 = t
           [@@@js.stop ]
           type tags = [ `Intl_PluralRulesOptions ]
           type tags_0 = tags
           [@@@js.start ]
           [@@@js.implem
             type tags = [ `Intl_PluralRulesOptions ]
             type tags_0 = tags]
           type 'tags this =
             'tags intf constraint 'tags = [> `Intl_PluralRulesOptions ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val t_0_to_js : t_0 -> Ojs.t
           val t_0_of_js : Ojs.t -> t_0
           val get_localeMatcher :
             'tags this -> [ `L_s24_best_fit  | `L_s57_lookup ] option option
           val set_localeMatcher :
             'tags this ->
               [ `Undefined of undefined  | `U1 of [ `L_s57_lookup ] 
               | `U2 of [ `L_s24_best_fit ] ] -> unit
           val get_type : 'tags this -> PluralRuleType.t option option
           val set_type :
             'tags this ->
               [ `Undefined of undefined  | `U1 of PluralRuleType.t ] -> unit
           val get_minimumIntegerDigits : 'tags this -> float option option
           val set_minimumIntegerDigits :
             'tags this ->
               [ `Undefined of undefined  | `U1 of float ] -> unit
           val get_minimumFractionDigits : 'tags this -> float option option
           val set_minimumFractionDigits :
             'tags this ->
               [ `Undefined of undefined  | `U1 of float ] -> unit
           val get_maximumFractionDigits : 'tags this -> float option option
           val set_maximumFractionDigits :
             'tags this ->
               [ `Undefined of undefined  | `U1 of float ] -> unit
           val get_minimumSignificantDigits :
             'tags this -> float option option
           val set_minimumSignificantDigits :
             'tags this ->
               [ `Undefined of undefined  | `U1 of float ] -> unit
           val get_maximumSignificantDigits :
             'tags this -> float option option
           val set_maximumSignificantDigits :
             'tags this ->
               [ `Undefined of undefined  | `U1 of float ] -> unit
           val create :
             ?localeMatcher:[ `L_s24_best_fit  | `L_s57_lookup ] ->
               ?type_:PluralRuleType.t ->
                 ?minimumIntegerDigits:float ->
                   ?minimumFractionDigits:float ->
                     ?maximumFractionDigits:float ->
                       ?minimumSignificantDigits:float ->
                         ?maximumSignificantDigits:float -> unit -> t
           val cast_from : 'tags this -> t
         end
         module PluralRules :
         sig
           module AnonymousInterface4 :
           sig
             type t = private Ojs.t
             val t_to_js : t -> Ojs.t
             val t_of_js : Ojs.t -> t
             val get_localeMatcher :
               t -> [ `L_s24_best_fit  | `L_s57_lookup ] option
             val set_localeMatcher :
               t ->
                 [ `U1 of [ `L_s57_lookup ]  | `U2 of [ `L_s24_best_fit ] ]
                   -> unit
             val create :
               ?localeMatcher:[ `L_s24_best_fit  | `L_s57_lookup ] ->
                 unit -> t
           end
           type t = [ `Intl_PluralRules ] intf
           type t_0 = t
           [@@@js.stop ]
           type tags = [ `Intl_PluralRules ]
           type tags_0 = tags
           [@@@js.start ]
           [@@@js.implem type tags = [ `Intl_PluralRules ]
             type tags_0 = tags]
           type 'tags this =
             'tags intf constraint 'tags = [> `Intl_PluralRules ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val t_0_to_js : t_0 -> Ojs.t
           val t_0_of_js : Ojs.t -> t_0
           val resolvedOptions : 'tags this -> ResolvedPluralRulesOptions.t
           val select : 'tags this -> n:float -> LDMLPluralRule.t
           val cast_from : 'tags this -> t
           val create :
             ?locales:[ `U1 of string  | `U2 of string list ] ->
               ?options:PluralRulesOptions.t -> unit -> t
           val invoke :
             ?locales:[ `U1 of string  | `U2 of string list ] ->
               ?options:PluralRulesOptions.t -> unit -> t
           val supportedLocalesOf :
             locales:[ `U1 of string  | `U2 of string list ] ->
               ?options:AnonymousInterface4.t -> unit -> string list
         end
         module ResolvedNumberFormatOptions :
         sig
           type t = [ `Intl_ResolvedNumberFormatOptions ] intf
           type t_0 = t
           [@@@js.stop ]
           type tags = [ `Intl_ResolvedNumberFormatOptions ]
           type tags_0 = tags
           [@@@js.start ]
           [@@@js.implem
             type tags = [ `Intl_ResolvedNumberFormatOptions ]
             type tags_0 = tags]
           type 'tags this =
             'tags intf constraint 'tags =
                         [> `Intl_ResolvedNumberFormatOptions ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val t_0_to_js : t_0 -> Ojs.t
           val t_0_of_js : Ojs.t -> t_0
           val get_compactDisplay :
             'tags this -> [ `L_s56_long  | `L_s89_short ] option
           val set_compactDisplay :
             'tags this ->
               [ `U1 of [ `L_s89_short ]  | `U2 of [ `L_s56_long ] ] -> unit
           val get_notation :
             'tags this ->
               [ `L_s27_compact  | `L_s34_engineering  | `L_s85_scientific 
               | `L_s90_standard ] option
           val set_notation :
             'tags this ->
               [ `U1 of [ `L_s90_standard ]  | `U2 of [ `L_s85_scientific ] 
               | `U3 of [ `L_s34_engineering ]  | `U4 of [ `L_s27_compact ] ]
                 -> unit
           val get_signDisplay :
             'tags this ->
               [ `L_s21_always  | `L_s22_auto  | `L_s36_exceptZero 
               | `L_s69_never ] option
           val set_signDisplay :
             'tags this ->
               [ `U1 of [ `L_s22_auto ]  | `U2 of [ `L_s69_never ] 
               | `U3 of [ `L_s21_always ]  | `U4 of [ `L_s36_exceptZero ] ]
                 -> unit
           val get_unit : 'tags this -> string option
           val set_unit : 'tags this -> string -> unit
           val get_unitDisplay :
             'tags this ->
               [ `L_s56_long  | `L_s68_narrow  | `L_s89_short ] option
           val set_unitDisplay :
             'tags this ->
               [ `U1 of [ `L_s89_short ]  | `U2 of [ `L_s56_long ] 
               | `U3 of [ `L_s68_narrow ] ] -> unit
           val get_currencyDisplay : 'tags this -> string option
           val set_currencyDisplay : 'tags this -> string -> unit
           val get_currencySign : 'tags this -> string option
           val set_currencySign : 'tags this -> string -> unit
           val get_locale : 'tags this -> string
           val set_locale : 'tags this -> string -> unit
           val get_numberingSystem : 'tags this -> string
           val set_numberingSystem : 'tags this -> string -> unit
           val get_style : 'tags this -> string
           val set_style : 'tags this -> string -> unit
           val get_currency : 'tags this -> string option
           val set_currency : 'tags this -> string -> unit
           val get_minimumIntegerDigits : 'tags this -> float
           val set_minimumIntegerDigits : 'tags this -> float -> unit
           val get_minimumFractionDigits : 'tags this -> float
           val set_minimumFractionDigits : 'tags this -> float -> unit
           val get_maximumFractionDigits : 'tags this -> float
           val set_maximumFractionDigits : 'tags this -> float -> unit
           val get_minimumSignificantDigits : 'tags this -> float option
           val set_minimumSignificantDigits : 'tags this -> float -> unit
           val get_maximumSignificantDigits : 'tags this -> float option
           val set_maximumSignificantDigits : 'tags this -> float -> unit
           val get_useGrouping : 'tags this -> bool
           val set_useGrouping : 'tags this -> bool -> unit
           val create :
             ?compactDisplay:[ `L_s56_long  | `L_s89_short ] ->
               ?notation:[ `L_s27_compact  | `L_s34_engineering 
                         | `L_s85_scientific  | `L_s90_standard ]
                 ->
                 ?signDisplay:[ `L_s21_always  | `L_s22_auto 
                              | `L_s36_exceptZero  | `L_s69_never ]
                   ->
                   ?unit:string ->
                     ?unitDisplay:[ `L_s56_long  | `L_s68_narrow 
                                  | `L_s89_short ]
                       ->
                       ?currencyDisplay:string ->
                         ?currencySign:string ->
                           locale:string ->
                             numberingSystem:string ->
                               style:string ->
                                 ?currency:string ->
                                   minimumIntegerDigits:float ->
                                     minimumFractionDigits:float ->
                                       maximumFractionDigits:float ->
                                         ?minimumSignificantDigits:float ->
                                           ?maximumSignificantDigits:float ->
                                             useGrouping:bool -> unit -> t
           val cast_from : 'tags this -> t
         end
         module ES2020NumberFormatPartType :
         sig
           type t =
             [ `L_s27_compact  | `L_s37_exponentInteger 
             | `L_s38_exponentMinusSign  | `L_s39_exponentSeparator 
             | `L_s96_unit  | `L_s97_unknown ]
           type t_0 = t
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val t_0_to_js : t_0 -> Ojs.t
           val t_0_of_js : Ojs.t -> t_0
         end
         module ES2018NumberFormatPartType :
         sig
           type t =
             [ `L_s26_code  | `L_s28_currency  | `L_s32_decimal 
             | `L_s42_fraction  | `L_s45_group  | `L_s52_infinity 
             | `L_s53_integer  | `L_s55_literal  | `L_s61_minusSign 
             | `L_s66_name  | `L_s67_nan  | `L_s78_percent 
             | `L_s79_percentSign  | `L_s80_plusSign  | `L_s92_symbol ]
           type t_0 = t
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val t_0_to_js : t_0 -> Ojs.t
           val t_0_of_js : Ojs.t -> t_0
         end
         module NumberFormatPartTypes :
         sig
           type t =
             [ `L_s26_code  | `L_s27_compact  | `L_s28_currency 
             | `L_s32_decimal  | `L_s37_exponentInteger 
             | `L_s38_exponentMinusSign  | `L_s39_exponentSeparator 
             | `L_s42_fraction  | `L_s45_group  | `L_s52_infinity 
             | `L_s53_integer  | `L_s55_literal  | `L_s61_minusSign 
             | `L_s66_name  | `L_s67_nan  | `L_s78_percent 
             | `L_s79_percentSign  | `L_s80_plusSign  | `L_s92_symbol 
             | `L_s96_unit  | `L_s97_unknown ]
           type t_0 = t
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val t_0_to_js : t_0 -> Ojs.t
           val t_0_of_js : Ojs.t -> t_0
         end
         module NumberFormatPart :
         sig
           type t = [ `Intl_NumberFormatPart ] intf
           type t_0 = t
           [@@@js.stop ]
           type tags = [ `Intl_NumberFormatPart ]
           type tags_0 = tags
           [@@@js.start ]
           [@@@js.implem
             type tags = [ `Intl_NumberFormatPart ]
             type tags_0 = tags]
           type 'tags this =
             'tags intf constraint 'tags = [> `Intl_NumberFormatPart ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val t_0_to_js : t_0 -> Ojs.t
           val t_0_of_js : Ojs.t -> t_0
           val get_type : 'tags this -> NumberFormatPartTypes.t
           val set_type : 'tags this -> NumberFormatPartTypes.t -> unit
           val get_value : 'tags this -> string
           val set_value : 'tags this -> string -> unit
           val create :
             type_:NumberFormatPartTypes.t -> value:string -> unit -> t
           val cast_from : 'tags this -> t
         end
         module NumberFormatOptions :
         sig
           type t = [ `Intl_NumberFormatOptions ] intf
           type t_0 = t
           [@@@js.stop ]
           type tags = [ `Intl_NumberFormatOptions ]
           type tags_0 = tags
           [@@@js.start ]
           [@@@js.implem
             type tags = [ `Intl_NumberFormatOptions ]
             type tags_0 = tags]
           type 'tags this =
             'tags intf constraint 'tags = [> `Intl_NumberFormatOptions ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val t_0_to_js : t_0 -> Ojs.t
           val t_0_of_js : Ojs.t -> t_0
           val get_compactDisplay :
             'tags this -> [ `L_s56_long  | `L_s89_short ] option option
           val set_compactDisplay :
             'tags this ->
               [ `Undefined of undefined  | `U1 of [ `L_s89_short ] 
               | `U2 of [ `L_s56_long ] ] -> unit
           val get_notation :
             'tags this ->
               [ `L_s27_compact  | `L_s34_engineering  | `L_s85_scientific 
               | `L_s90_standard ] option option
           val set_notation :
             'tags this ->
               [ `Undefined of undefined  | `U1 of [ `L_s90_standard ] 
               | `U2 of [ `L_s85_scientific ] 
               | `U3 of [ `L_s34_engineering ]  | `U4 of [ `L_s27_compact ] ]
                 -> unit
           val get_signDisplay :
             'tags this ->
               [ `L_s21_always  | `L_s22_auto  | `L_s36_exceptZero 
               | `L_s69_never ] option option
           val set_signDisplay :
             'tags this ->
               [ `Undefined of undefined  | `U1 of [ `L_s22_auto ] 
               | `U2 of [ `L_s69_never ]  | `U3 of [ `L_s21_always ] 
               | `U4 of [ `L_s36_exceptZero ] ] -> unit
           val get_unit : 'tags this -> string option option
           val set_unit :
             'tags this ->
               [ `Undefined of undefined  | `U1 of string ] -> unit
           val get_unitDisplay :
             'tags this ->
               [ `L_s56_long  | `L_s68_narrow  | `L_s89_short ] option option
           val set_unitDisplay :
             'tags this ->
               [ `Undefined of undefined  | `U1 of [ `L_s89_short ] 
               | `U2 of [ `L_s56_long ]  | `U3 of [ `L_s68_narrow ] ] -> 
                 unit
           val get_currencyDisplay : 'tags this -> string option option
           val set_currencyDisplay :
             'tags this ->
               [ `Undefined of undefined  | `U1 of string ] -> unit
           val get_currencySign : 'tags this -> string option option
           val set_currencySign :
             'tags this ->
               [ `Undefined of undefined  | `U1 of string ] -> unit
           val get_localeMatcher : 'tags this -> string option option
           val set_localeMatcher :
             'tags this ->
               [ `Undefined of undefined  | `U1 of string ] -> unit
           val get_style : 'tags this -> string option option
           val set_style :
             'tags this ->
               [ `Undefined of undefined  | `U1 of string ] -> unit
           val get_currency : 'tags this -> string option option
           val set_currency :
             'tags this ->
               [ `Undefined of undefined  | `U1 of string ] -> unit
           val get_currencySign' : 'tags this -> string option option
           val set_currencySign' :
             'tags this ->
               [ `Undefined of undefined  | `U1 of string ] -> unit
           val get_useGrouping : 'tags this -> bool option option
           val set_useGrouping :
             'tags this -> [ `Undefined of undefined  | `U1 of bool ] -> unit
           val get_minimumIntegerDigits : 'tags this -> float option option
           val set_minimumIntegerDigits :
             'tags this ->
               [ `Undefined of undefined  | `U1 of float ] -> unit
           val get_minimumFractionDigits : 'tags this -> float option option
           val set_minimumFractionDigits :
             'tags this ->
               [ `Undefined of undefined  | `U1 of float ] -> unit
           val get_maximumFractionDigits : 'tags this -> float option option
           val set_maximumFractionDigits :
             'tags this ->
               [ `Undefined of undefined  | `U1 of float ] -> unit
           val get_minimumSignificantDigits :
             'tags this -> float option option
           val set_minimumSignificantDigits :
             'tags this ->
               [ `Undefined of undefined  | `U1 of float ] -> unit
           val get_maximumSignificantDigits :
             'tags this -> float option option
           val set_maximumSignificantDigits :
             'tags this ->
               [ `Undefined of undefined  | `U1 of float ] -> unit
           val create :
             ?compactDisplay:[ `L_s56_long  | `L_s89_short ] ->
               ?notation:[ `L_s27_compact  | `L_s34_engineering 
                         | `L_s85_scientific  | `L_s90_standard ]
                 ->
                 ?signDisplay:[ `L_s21_always  | `L_s22_auto 
                              | `L_s36_exceptZero  | `L_s69_never ]
                   ->
                   ?unit:string ->
                     ?unitDisplay:[ `L_s56_long  | `L_s68_narrow 
                                  | `L_s89_short ]
                       ->
                       ?currencyDisplay:string ->
                         ?currencySign:string ->
                           ?localeMatcher:string ->
                             ?style:string ->
                               ?currency:string ->
                                 ?currencySign:string ->
                                   ?useGrouping:bool ->
                                     ?minimumIntegerDigits:float ->
                                       ?minimumFractionDigits:float ->
                                         ?maximumFractionDigits:float ->
                                           ?minimumSignificantDigits:float ->
                                             ?maximumSignificantDigits:float
                                               -> unit -> t
           val cast_from : 'tags this -> t
         end
         module NumberFormat :
         sig
           type t = [ `Intl_NumberFormat ] intf
           type t_0 = t
           [@@@js.stop ]
           type tags = [ `Intl_NumberFormat ]
           type tags_0 = tags
           [@@@js.start ]
           [@@@js.implem
             type tags = [ `Intl_NumberFormat ]
             type tags_0 = tags]
           type 'tags this =
             'tags intf constraint 'tags = [> `Intl_NumberFormat ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val t_0_to_js : t_0 -> Ojs.t
           val t_0_of_js : Ojs.t -> t_0
           val formatRange :
             'tags this ->
               startDate:[ `U1 of float  | `U2 of bigint ] ->
                 endDate:[ `U1 of float  | `U2 of bigint ] -> string
           val formatRangeToParts :
             'tags this ->
               startDate:[ `U1 of float  | `U2 of bigint ] ->
                 endDate:[ `U1 of float  | `U2 of bigint ] ->
                   NumberFormatPart.t list
           val format :
             'tags this -> value:[ `U1 of float  | `U2 of bigint ] -> string
           val resolvedOptions : 'tags this -> ResolvedNumberFormatOptions.t
           val formatToParts :
             'tags this ->
               ?number:[ `U1 of float  | `U2 of bigint ] ->
                 unit -> NumberFormatPart.t list
           val format' : 'tags this -> value:float -> string
           val resolvedOptions' : 'tags this -> ResolvedNumberFormatOptions.t
           val cast_from : 'tags this -> t
           val create :
             ?locales:[ `U1 of string  | `U2 of string list ] ->
               ?options:NumberFormatOptions.t -> unit -> t
           val invoke :
             ?locales:[ `U1 of string  | `U2 of string list ] ->
               ?options:NumberFormatOptions.t -> unit -> t
           val supportedLocalesOf :
             locales:[ `U1 of string  | `U2 of string list ] ->
               ?options:NumberFormatOptions.t -> unit -> string list
         end
         module LocaleHourCycleKey :
         sig
           type t = [ `L_s46_h11  | `L_s47_h12  | `L_s48_h23  | `L_s49_h24 ]
           type t_0 = t
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val t_0_to_js : t_0 -> Ojs.t
           val t_0_of_js : Ojs.t -> t_0
         end
         module LocaleCollationCaseFirst :
         sig
           type t = [ `L_s40_false  | `L_s58_lower  | `L_s98_upper ]
           type t_0 = t
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val t_0_to_js : t_0 -> Ojs.t
           val t_0_of_js : Ojs.t -> t_0
         end
         module LocaleOptions :
         sig
           type t = [ `Intl_LocaleOptions ] intf
           type t_0 = t
           [@@@js.stop ]
           type tags = [ `Intl_LocaleOptions ]
           type tags_0 = tags
           [@@@js.start ]
           [@@@js.implem
             type tags = [ `Intl_LocaleOptions ]
             type tags_0 = tags]
           type 'tags this =
             'tags intf constraint 'tags = [> `Intl_LocaleOptions ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val t_0_to_js : t_0 -> Ojs.t
           val t_0_of_js : Ojs.t -> t_0
           val get_baseName : 'tags this -> string option
           val set_baseName : 'tags this -> string -> unit
           val get_calendar : 'tags this -> string option
           val set_calendar : 'tags this -> string -> unit
           val get_caseFirst :
             'tags this -> LocaleCollationCaseFirst.t option
           val set_caseFirst :
             'tags this -> LocaleCollationCaseFirst.t -> unit
           val get_collation : 'tags this -> string option
           val set_collation : 'tags this -> string -> unit
           val get_hourCycle : 'tags this -> LocaleHourCycleKey.t option
           val set_hourCycle : 'tags this -> LocaleHourCycleKey.t -> unit
           val get_language : 'tags this -> string option
           val set_language : 'tags this -> string -> unit
           val get_numberingSystem : 'tags this -> string option
           val set_numberingSystem : 'tags this -> string -> unit
           val get_numeric : 'tags this -> bool option
           val set_numeric : 'tags this -> bool -> unit
           val get_region : 'tags this -> string option
           val set_region : 'tags this -> string -> unit
           val get_script : 'tags this -> string option
           val set_script : 'tags this -> string -> unit
           val create :
             ?baseName:string ->
               ?calendar:string ->
                 ?caseFirst:LocaleCollationCaseFirst.t ->
                   ?collation:string ->
                     ?hourCycle:LocaleHourCycleKey.t ->
                       ?language:string ->
                         ?numberingSystem:string ->
                           ?numeric:bool ->
                             ?region:string -> ?script:string -> unit -> t
           val cast_from : 'tags this -> t
         end
         module BCP47LanguageTag :
         sig
           type t = string
           type t_0 = t
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val t_0_to_js : t_0 -> Ojs.t
           val t_0_of_js : Ojs.t -> t_0
         end
         module Locale :
         sig
           type t = [ `Intl_Locale  | `Intl_LocaleOptions ] intf
           type t_0 = t
           [@@@js.stop ]
           type tags = [ `Intl_Locale  | `Intl_LocaleOptions ]
           type tags_0 = tags
           [@@@js.start ]
           [@@@js.implem
             type tags = [ `Intl_Locale  | `Intl_LocaleOptions ]
             type tags_0 = tags]
           type 'tags this = 'tags intf constraint 'tags = [> `Intl_Locale ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val t_0_to_js : t_0 -> Ojs.t
           val t_0_of_js : Ojs.t -> t_0
           val maximize : 'tags this -> t
           val minimize : 'tags this -> t
           val toString : 'tags this -> BCP47LanguageTag.t
           val cast_from : 'tags this -> t
           val create :
             ?tag:BCP47LanguageTag.t -> ?options:LocaleOptions.t -> unit -> t
         end
         module DisplayNamesOptions :
         sig
           type t = [ `Intl_DisplayNamesOptions ] intf
           type t_0 = t
           [@@@js.stop ]
           type tags = [ `Intl_DisplayNamesOptions ]
           type tags_0 = tags
           [@@@js.start ]
           [@@@js.implem
             type tags = [ `Intl_DisplayNamesOptions ]
             type tags_0 = tags]
           type 'tags this =
             'tags intf constraint 'tags = [> `Intl_DisplayNamesOptions ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val t_0_to_js : t_0 -> Ojs.t
           val t_0_of_js : Ojs.t -> t_0
           val get_locale : 'tags this -> UnicodeBCP47LocaleIdentifier.t
           val set_locale :
             'tags this -> UnicodeBCP47LocaleIdentifier.t -> unit
           val get_localeMatcher :
             'tags this -> RelativeTimeFormatLocaleMatcher.t
           val set_localeMatcher :
             'tags this -> RelativeTimeFormatLocaleMatcher.t -> unit
           val get_style : 'tags this -> RelativeTimeFormatStyle.t
           val set_style : 'tags this -> RelativeTimeFormatStyle.t -> unit
           val get_type :
             'tags this ->
               [ `L_s28_currency  | `L_s54_language  | `L_s83_region 
               | `L_s86_script ]
           val set_type :
             'tags this ->
               [ `U1 of [ `L_s54_language ]  | `U2 of [ `L_s83_region ] 
               | `U3 of [ `L_s86_script ]  | `U4 of [ `L_s28_currency ] ] ->
                 unit
           val get_fallback : 'tags this -> [ `L_s26_code  | `L_s70_none ]
           val set_fallback :
             'tags this ->
               [ `U1 of [ `L_s26_code ]  | `U2 of [ `L_s70_none ] ] -> unit
           val create :
             locale:UnicodeBCP47LocaleIdentifier.t ->
               localeMatcher:RelativeTimeFormatLocaleMatcher.t ->
                 style:RelativeTimeFormatStyle.t ->
                   type_:[ `L_s28_currency  | `L_s54_language 
                         | `L_s83_region  | `L_s86_script ]
                     -> fallback:[ `L_s26_code  | `L_s70_none ] -> unit -> t
           val cast_from : 'tags this -> t
         end
         module DisplayNames :
         sig
           module AnonymousInterface2 :
           sig
             type t = private Ojs.t
             val t_to_js : t -> Ojs.t
             val t_of_js : Ojs.t -> t
             val get_localeMatcher : t -> RelativeTimeFormatLocaleMatcher.t
             val set_localeMatcher :
               t -> RelativeTimeFormatLocaleMatcher.t -> unit
             val create :
               localeMatcher:RelativeTimeFormatLocaleMatcher.t -> unit -> t
           end
           type t = [ `Intl_DisplayNames ] intf
           type t_0 = t
           [@@@js.stop ]
           type tags = [ `Intl_DisplayNames ]
           type tags_0 = tags
           [@@@js.start ]
           [@@@js.implem
             type tags = [ `Intl_DisplayNames ]
             type tags_0 = tags]
           type 'tags this =
             'tags intf constraint 'tags = [> `Intl_DisplayNames ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val t_0_to_js : t_0 -> Ojs.t
           val t_0_of_js : Ojs.t -> t_0
           val of_ : 'tags this -> code:string -> string option
           val resolvedOptions : 'tags this -> DisplayNamesOptions.t
           val cast_from : 'tags this -> t
           val prototype : unit -> t
           val create :
             ?locales:[ `U1 of BCP47LanguageTag.t 
                      | `U2 of BCP47LanguageTag.t list ]
               -> ?options:DisplayNamesOptions.t Partial.t -> unit -> t
           val supportedLocalesOf :
             locales:[ `U1 of BCP47LanguageTag.t 
                     | `U2 of BCP47LanguageTag.t list ]
               ->
               ?options:AnonymousInterface2.t ->
                 unit -> BCP47LanguageTag.t list
         end
         module ResolvedDateTimeFormatOptions :
         sig
           type t = [ `Intl_ResolvedDateTimeFormatOptions ] intf
           type t_0 = t
           [@@@js.stop ]
           type tags = [ `Intl_ResolvedDateTimeFormatOptions ]
           type tags_0 = tags
           [@@@js.start ]
           [@@@js.implem
             type tags = [ `Intl_ResolvedDateTimeFormatOptions ]
             type tags_0 = tags]
           type 'tags this =
             'tags intf constraint 'tags =
                         [> `Intl_ResolvedDateTimeFormatOptions ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val t_0_to_js : t_0 -> Ojs.t
           val t_0_of_js : Ojs.t -> t_0
           val get_formatMatcher :
             'tags this -> [ `L_s23_basic  | `L_s24_best_fit ] option
           val set_formatMatcher :
             'tags this ->
               [ `U1 of [ `L_s23_basic ]  | `U2 of [ `L_s24_best_fit ] 
               | `U3 of [ `L_s24_best_fit ] ] -> unit
           val get_dateStyle :
             'tags this ->
               [ `L_s44_full  | `L_s56_long  | `L_s60_medium 
               | `L_s89_short ] option
           val set_dateStyle :
             'tags this ->
               [ `U1 of [ `L_s44_full ]  | `U2 of [ `L_s56_long ] 
               | `U3 of [ `L_s60_medium ]  | `U4 of [ `L_s89_short ] ] ->
                 unit
           val get_timeStyle :
             'tags this ->
               [ `L_s44_full  | `L_s56_long  | `L_s60_medium 
               | `L_s89_short ] option
           val set_timeStyle :
             'tags this ->
               [ `U1 of [ `L_s44_full ]  | `U2 of [ `L_s56_long ] 
               | `U3 of [ `L_s60_medium ]  | `U4 of [ `L_s89_short ] ] ->
                 unit
           val get_hourCycle :
             'tags this ->
               [ `L_s46_h11  | `L_s47_h12  | `L_s48_h23  | `L_s49_h24 ]
                 option
           val set_hourCycle :
             'tags this ->
               [ `U1 of [ `L_s46_h11 ]  | `U2 of [ `L_s47_h12 ] 
               | `U3 of [ `L_s48_h23 ]  | `U4 of [ `L_s49_h24 ] ] -> 
                 unit
           val get_dayPeriod :
             'tags this ->
               [ `L_s56_long  | `L_s68_narrow  | `L_s89_short ] option
           val set_dayPeriod :
             'tags this ->
               [ `U1 of [ `L_s68_narrow ]  | `U2 of [ `L_s89_short ] 
               | `U3 of [ `L_s56_long ] ] -> unit
           val get_fractionalSecondDigits :
             'tags this -> [ `L_n_0  | `L_n_1  | `L_n_2  | `L_n_3 ] option
           val set_fractionalSecondDigits :
             'tags this ->
               [ `U1 of [ `L_n_0 ]  | `U2 of [ `L_n_1 ]  | `U3 of [ `L_n_2 ] 
               | `U4 of [ `L_n_3 ] ] -> unit
           val get_locale : 'tags this -> string
           val set_locale : 'tags this -> string -> unit
           val get_calendar : 'tags this -> string
           val set_calendar : 'tags this -> string -> unit
           val get_numberingSystem : 'tags this -> string
           val set_numberingSystem : 'tags this -> string -> unit
           val get_timeZone : 'tags this -> string
           val set_timeZone : 'tags this -> string -> unit
           val get_hour12 : 'tags this -> bool option
           val set_hour12 : 'tags this -> bool -> unit
           val get_weekday : 'tags this -> string option
           val set_weekday : 'tags this -> string -> unit
           val get_era : 'tags this -> string option
           val set_era : 'tags this -> string -> unit
           val get_year : 'tags this -> string option
           val set_year : 'tags this -> string -> unit
           val get_month : 'tags this -> string option
           val set_month : 'tags this -> string -> unit
           val get_day : 'tags this -> string option
           val set_day : 'tags this -> string -> unit
           val get_hour : 'tags this -> string option
           val set_hour : 'tags this -> string -> unit
           val get_minute : 'tags this -> string option
           val set_minute : 'tags this -> string -> unit
           val get_second : 'tags this -> string option
           val set_second : 'tags this -> string -> unit
           val get_timeZoneName : 'tags this -> string option
           val set_timeZoneName : 'tags this -> string -> unit
           val create :
             ?formatMatcher:[ `L_s23_basic  | `L_s24_best_fit ] ->
               ?dateStyle:[ `L_s44_full  | `L_s56_long  | `L_s60_medium 
                          | `L_s89_short ]
                 ->
                 ?timeStyle:[ `L_s44_full  | `L_s56_long  | `L_s60_medium 
                            | `L_s89_short ]
                   ->
                   ?hourCycle:[ `L_s46_h11  | `L_s47_h12  | `L_s48_h23 
                              | `L_s49_h24 ]
                     ->
                     ?dayPeriod:[ `L_s56_long  | `L_s68_narrow 
                                | `L_s89_short ]
                       ->
                       ?fractionalSecondDigits:[ `L_n_0  | `L_n_1  | 
                                                 `L_n_2 
                                               | `L_n_3 ]
                         ->
                         locale:string ->
                           calendar:string ->
                             numberingSystem:string ->
                               timeZone:string ->
                                 ?hour12:bool ->
                                   ?weekday:string ->
                                     ?era:string ->
                                       ?year:string ->
                                         ?month:string ->
                                           ?day:string ->
                                             ?hour:string ->
                                               ?minute:string ->
                                                 ?second:string ->
                                                   ?timeZoneName:string ->
                                                     unit -> t
           val cast_from : 'tags this -> t
         end
         module DateTimeFormatPartTypes :
         sig
           type t =
             [ `L_s100_weekday  | `L_s102_year  | `L_s29_day 
             | `L_s30_dayPeriod  | `L_s35_era  | `L_s50_hour 
             | `L_s55_literal  | `L_s62_minute  | `L_s64_month 
             | `L_s87_second  | `L_s93_timeZoneName ]
           type t_0 = t
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val t_0_to_js : t_0 -> Ojs.t
           val t_0_of_js : Ojs.t -> t_0
         end
         module DateTimeFormatPart :
         sig
           type t = [ `Intl_DateTimeFormatPart ] intf
           type t_0 = t
           [@@@js.stop ]
           type tags = [ `Intl_DateTimeFormatPart ]
           type tags_0 = tags
           [@@@js.start ]
           [@@@js.implem
             type tags = [ `Intl_DateTimeFormatPart ]
             type tags_0 = tags]
           type 'tags this =
             'tags intf constraint 'tags = [> `Intl_DateTimeFormatPart ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val t_0_to_js : t_0 -> Ojs.t
           val t_0_of_js : Ojs.t -> t_0
           val get_type : 'tags this -> DateTimeFormatPartTypes.t
           val set_type : 'tags this -> DateTimeFormatPartTypes.t -> unit
           val get_value : 'tags this -> string
           val set_value : 'tags this -> string -> unit
           val create :
             type_:DateTimeFormatPartTypes.t -> value:string -> unit -> t
           val cast_from : 'tags this -> t
         end
         module DateTimeFormatOptions :
         sig
           type t = [ `Intl_DateTimeFormatOptions ] intf
           type t_0 = t
           [@@@js.stop ]
           type tags = [ `Intl_DateTimeFormatOptions ]
           type tags_0 = tags
           [@@@js.start ]
           [@@@js.implem
             type tags = [ `Intl_DateTimeFormatOptions ]
             type tags_0 = tags]
           type 'tags this =
             'tags intf constraint 'tags = [> `Intl_DateTimeFormatOptions ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val t_0_to_js : t_0 -> Ojs.t
           val t_0_of_js : Ojs.t -> t_0
           val get_formatMatcher :
             'tags this -> [ `L_s23_basic  | `L_s24_best_fit ] option option
           val set_formatMatcher :
             'tags this ->
               [ `Undefined of undefined  | `U1 of [ `L_s23_basic ] 
               | `U2 of [ `L_s24_best_fit ]  | `U3 of [ `L_s24_best_fit ] ]
                 -> unit
           val get_dateStyle :
             'tags this ->
               [ `L_s44_full  | `L_s56_long  | `L_s60_medium 
               | `L_s89_short ] option option
           val set_dateStyle :
             'tags this ->
               [ `Undefined of undefined  | `U1 of [ `L_s44_full ] 
               | `U2 of [ `L_s56_long ]  | `U3 of [ `L_s60_medium ] 
               | `U4 of [ `L_s89_short ] ] -> unit
           val get_timeStyle :
             'tags this ->
               [ `L_s44_full  | `L_s56_long  | `L_s60_medium 
               | `L_s89_short ] option option
           val set_timeStyle :
             'tags this ->
               [ `Undefined of undefined  | `U1 of [ `L_s44_full ] 
               | `U2 of [ `L_s56_long ]  | `U3 of [ `L_s60_medium ] 
               | `U4 of [ `L_s89_short ] ] -> unit
           val get_dayPeriod :
             'tags this ->
               [ `L_s56_long  | `L_s68_narrow  | `L_s89_short ] option option
           val set_dayPeriod :
             'tags this ->
               [ `Undefined of undefined  | `U1 of [ `L_s68_narrow ] 
               | `U2 of [ `L_s89_short ]  | `U3 of [ `L_s56_long ] ] -> 
                 unit
           val get_fractionalSecondDigits :
             'tags this ->
               [ `L_n_0  | `L_n_1  | `L_n_2  | `L_n_3 ] option option
           val set_fractionalSecondDigits :
             'tags this ->
               [ `Undefined of undefined  | `U1 of [ `L_n_0 ] 
               | `U2 of [ `L_n_1 ]  | `U3 of [ `L_n_2 ] 
               | `U4 of [ `L_n_3 ] ] -> unit
           val get_calendar : 'tags this -> string option option
           val set_calendar :
             'tags this ->
               [ `Undefined of undefined  | `U1 of string ] -> unit
           val get_dayPeriod' :
             'tags this ->
               [ `L_s56_long  | `L_s68_narrow  | `L_s89_short ] option option
           val set_dayPeriod' :
             'tags this ->
               [ `Undefined of undefined  | `U1 of [ `L_s68_narrow ] 
               | `U2 of [ `L_s89_short ]  | `U3 of [ `L_s56_long ] ] -> 
                 unit
           val get_numberingSystem : 'tags this -> string option option
           val set_numberingSystem :
             'tags this ->
               [ `Undefined of undefined  | `U1 of string ] -> unit
           val get_dateStyle' :
             'tags this ->
               [ `L_s44_full  | `L_s56_long  | `L_s60_medium 
               | `L_s89_short ] option option
           val set_dateStyle' :
             'tags this ->
               [ `Undefined of undefined  | `U1 of [ `L_s44_full ] 
               | `U2 of [ `L_s56_long ]  | `U3 of [ `L_s60_medium ] 
               | `U4 of [ `L_s89_short ] ] -> unit
           val get_timeStyle' :
             'tags this ->
               [ `L_s44_full  | `L_s56_long  | `L_s60_medium 
               | `L_s89_short ] option option
           val set_timeStyle' :
             'tags this ->
               [ `Undefined of undefined  | `U1 of [ `L_s44_full ] 
               | `U2 of [ `L_s56_long ]  | `U3 of [ `L_s60_medium ] 
               | `U4 of [ `L_s89_short ] ] -> unit
           val get_hourCycle :
             'tags this ->
               [ `L_s46_h11  | `L_s47_h12  | `L_s48_h23  | `L_s49_h24 ]
                 option option
           val set_hourCycle :
             'tags this ->
               [ `Undefined of undefined  | `U1 of [ `L_s46_h11 ] 
               | `U2 of [ `L_s47_h12 ]  | `U3 of [ `L_s48_h23 ] 
               | `U4 of [ `L_s49_h24 ] ] -> unit
           val get_localeMatcher :
             'tags this -> [ `L_s24_best_fit  | `L_s57_lookup ] option option
           val set_localeMatcher :
             'tags this ->
               [ `Undefined of undefined  | `U1 of [ `L_s24_best_fit ] 
               | `U2 of [ `L_s57_lookup ] ] -> unit
           val get_weekday :
             'tags this ->
               [ `L_s56_long  | `L_s68_narrow  | `L_s89_short ] option option
           val set_weekday :
             'tags this ->
               [ `Undefined of undefined  | `U1 of [ `L_s56_long ] 
               | `U2 of [ `L_s89_short ]  | `U3 of [ `L_s68_narrow ] ] ->
                 unit
           val get_era :
             'tags this ->
               [ `L_s56_long  | `L_s68_narrow  | `L_s89_short ] option option
           val set_era :
             'tags this ->
               [ `Undefined of undefined  | `U1 of [ `L_s56_long ] 
               | `U2 of [ `L_s89_short ]  | `U3 of [ `L_s68_narrow ] ] ->
                 unit
           val get_year :
             'tags this -> [ `L_s0_2_digit  | `L_s73_numeric ] option option
           val set_year :
             'tags this ->
               [ `Undefined of undefined  | `U1 of [ `L_s73_numeric ] 
               | `U2 of [ `L_s0_2_digit ] ] -> unit
           val get_month :
             'tags this ->
               [ `L_s0_2_digit  | `L_s56_long  | `L_s68_narrow 
               | `L_s73_numeric  | `L_s89_short ] option option
           val set_month :
             'tags this ->
               [ `Undefined of undefined  | `U1 of [ `L_s73_numeric ] 
               | `U2 of [ `L_s0_2_digit ]  | `U3 of [ `L_s56_long ] 
               | `U4 of [ `L_s89_short ]  | `U5 of [ `L_s68_narrow ] ] ->
                 unit
           val get_day :
             'tags this -> [ `L_s0_2_digit  | `L_s73_numeric ] option option
           val set_day :
             'tags this ->
               [ `Undefined of undefined  | `U1 of [ `L_s73_numeric ] 
               | `U2 of [ `L_s0_2_digit ] ] -> unit
           val get_hour :
             'tags this -> [ `L_s0_2_digit  | `L_s73_numeric ] option option
           val set_hour :
             'tags this ->
               [ `Undefined of undefined  | `U1 of [ `L_s73_numeric ] 
               | `U2 of [ `L_s0_2_digit ] ] -> unit
           val get_minute :
             'tags this -> [ `L_s0_2_digit  | `L_s73_numeric ] option option
           val set_minute :
             'tags this ->
               [ `Undefined of undefined  | `U1 of [ `L_s73_numeric ] 
               | `U2 of [ `L_s0_2_digit ] ] -> unit
           val get_second :
             'tags this -> [ `L_s0_2_digit  | `L_s73_numeric ] option option
           val set_second :
             'tags this ->
               [ `Undefined of undefined  | `U1 of [ `L_s73_numeric ] 
               | `U2 of [ `L_s0_2_digit ] ] -> unit
           val get_timeZoneName :
             'tags this -> [ `L_s56_long  | `L_s89_short ] option option
           val set_timeZoneName :
             'tags this ->
               [ `Undefined of undefined  | `U1 of [ `L_s56_long ] 
               | `U2 of [ `L_s89_short ] ] -> unit
           val get_formatMatcher' :
             'tags this -> [ `L_s23_basic  | `L_s24_best_fit ] option option
           val set_formatMatcher' :
             'tags this ->
               [ `Undefined of undefined  | `U1 of [ `L_s24_best_fit ] 
               | `U2 of [ `L_s23_basic ] ] -> unit
           val get_hour12 : 'tags this -> bool option option
           val set_hour12 :
             'tags this -> [ `Undefined of undefined  | `U1 of bool ] -> unit
           val get_timeZone : 'tags this -> string option option
           val set_timeZone :
             'tags this ->
               [ `Undefined of undefined  | `U1 of string ] -> unit
           val create :
             ?formatMatcher:[ `L_s23_basic  | `L_s24_best_fit ] ->
               ?dateStyle:[ `L_s44_full  | `L_s56_long  | `L_s60_medium 
                          | `L_s89_short ]
                 ->
                 ?timeStyle:[ `L_s44_full  | `L_s56_long  | `L_s60_medium 
                            | `L_s89_short ]
                   ->
                   ?dayPeriod:[ `L_s56_long  | `L_s68_narrow 
                              | `L_s89_short ]
                     ->
                     ?fractionalSecondDigits:[ `L_n_0  | `L_n_1  | `L_n_2 
                                             | `L_n_3 ]
                       ->
                       ?calendar:string ->
                         ?dayPeriod:[ `L_s56_long  | `L_s68_narrow 
                                    | `L_s89_short ]
                           ->
                           ?numberingSystem:string ->
                             ?dateStyle:[ `L_s44_full  | `L_s56_long 
                                        | `L_s60_medium  | `L_s89_short ]
                               ->
                               ?timeStyle:[ `L_s44_full  | `L_s56_long 
                                          | `L_s60_medium  | `L_s89_short ]
                                 ->
                                 ?hourCycle:[ `L_s46_h11  | `L_s47_h12 
                                            | `L_s48_h23  | `L_s49_h24 ]
                                   ->
                                   ?localeMatcher:[ `L_s24_best_fit 
                                                  | `L_s57_lookup ]
                                     ->
                                     ?weekday:[ `L_s56_long  | `L_s68_narrow 
                                              | `L_s89_short ]
                                       ->
                                       ?era:[ `L_s56_long  | `L_s68_narrow 
                                            | `L_s89_short ]
                                         ->
                                         ?year:[ `L_s0_2_digit 
                                               | `L_s73_numeric ]
                                           ->
                                           ?month:[ `L_s0_2_digit 
                                                  | `L_s56_long 
                                                  | `L_s68_narrow 
                                                  | `L_s73_numeric 
                                                  | `L_s89_short ]
                                             ->
                                             ?day:[ `L_s0_2_digit 
                                                  | `L_s73_numeric ]
                                               ->
                                               ?hour:[ `L_s0_2_digit 
                                                     | `L_s73_numeric ]
                                                 ->
                                                 ?minute:[ `L_s0_2_digit 
                                                         | `L_s73_numeric ]
                                                   ->
                                                   ?second:[ `L_s0_2_digit 
                                                           | `L_s73_numeric ]
                                                     ->
                                                     ?timeZoneName:[
                                                                    `L_s56_long
                                                                     | 
                                                                    `L_s89_short
                                                                    ]
                                                       ->
                                                       ?formatMatcher:
                                                         [ `L_s23_basic 
                                                         | `L_s24_best_fit ]
                                                         ->
                                                         ?hour12:bool ->
                                                           ?timeZone:string
                                                             -> unit -> t
           val cast_from : 'tags this -> t
         end
         module DateTimeFormat :
         sig
           type t = [ `Intl_DateTimeFormat ] intf
           type t_0 = t
           [@@@js.stop ]
           type tags = [ `Intl_DateTimeFormat ]
           type tags_0 = tags
           [@@@js.start ]
           [@@@js.implem
             type tags = [ `Intl_DateTimeFormat ]
             type tags_0 = tags]
           type 'tags this =
             'tags intf constraint 'tags = [> `Intl_DateTimeFormat ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val t_0_to_js : t_0 -> Ojs.t
           val t_0_of_js : Ojs.t -> t_0
           val formatToParts :
             'tags this ->
               ?date:[ `U1 of Date.t  | `U2 of float ] ->
                 unit -> DateTimeFormatPart.t list
           val format :
             'tags this ->
               ?date:[ `U1 of Date.t  | `U2 of float ] -> unit -> string
           val resolvedOptions :
             'tags this -> ResolvedDateTimeFormatOptions.t
           val cast_from : 'tags this -> t
           val create :
             ?locales:[ `U1 of string  | `U2 of string list ] ->
               ?options:DateTimeFormatOptions.t -> unit -> t
           val invoke :
             ?locales:[ `U1 of string  | `U2 of string list ] ->
               ?options:DateTimeFormatOptions.t -> unit -> t
           val supportedLocalesOf :
             locales:[ `U1 of string  | `U2 of string list ] ->
               ?options:DateTimeFormatOptions.t -> unit -> string list
         end
         module ResolvedCollatorOptions :
         sig
           type t = [ `Intl_ResolvedCollatorOptions ] intf
           type t_0 = t
           [@@@js.stop ]
           type tags = [ `Intl_ResolvedCollatorOptions ]
           type tags_0 = tags
           [@@@js.start ]
           [@@@js.implem
             type tags = [ `Intl_ResolvedCollatorOptions ]
             type tags_0 = tags]
           type 'tags this =
             'tags intf constraint 'tags = [> `Intl_ResolvedCollatorOptions ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val t_0_to_js : t_0 -> Ojs.t
           val t_0_of_js : Ojs.t -> t_0
           val get_locale : 'tags this -> string
           val set_locale : 'tags this -> string -> unit
           val get_usage : 'tags this -> string
           val set_usage : 'tags this -> string -> unit
           val get_sensitivity : 'tags this -> string
           val set_sensitivity : 'tags this -> string -> unit
           val get_ignorePunctuation : 'tags this -> bool
           val set_ignorePunctuation : 'tags this -> bool -> unit
           val get_collation : 'tags this -> string
           val set_collation : 'tags this -> string -> unit
           val get_caseFirst : 'tags this -> string
           val set_caseFirst : 'tags this -> string -> unit
           val get_numeric : 'tags this -> bool
           val set_numeric : 'tags this -> bool -> unit
           val create :
             locale:string ->
               usage:string ->
                 sensitivity:string ->
                   ignorePunctuation:bool ->
                     collation:string ->
                       caseFirst:string -> numeric:bool -> unit -> t
           val cast_from : 'tags this -> t
         end
         module CollatorOptions :
         sig
           type t = [ `Intl_CollatorOptions ] intf
           type t_0 = t
           [@@@js.stop ]
           type tags = [ `Intl_CollatorOptions ]
           type tags_0 = tags
           [@@@js.start ]
           [@@@js.implem
             type tags = [ `Intl_CollatorOptions ]
             type tags_0 = tags]
           type 'tags this =
             'tags intf constraint 'tags = [> `Intl_CollatorOptions ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val t_0_to_js : t_0 -> Ojs.t
           val t_0_of_js : Ojs.t -> t_0
           val get_usage : 'tags this -> string option option
           val set_usage :
             'tags this ->
               [ `Undefined of undefined  | `U1 of string ] -> unit
           val get_localeMatcher : 'tags this -> string option option
           val set_localeMatcher :
             'tags this ->
               [ `Undefined of undefined  | `U1 of string ] -> unit
           val get_numeric : 'tags this -> bool option option
           val set_numeric :
             'tags this -> [ `Undefined of undefined  | `U1 of bool ] -> unit
           val get_caseFirst : 'tags this -> string option option
           val set_caseFirst :
             'tags this ->
               [ `Undefined of undefined  | `U1 of string ] -> unit
           val get_sensitivity : 'tags this -> string option option
           val set_sensitivity :
             'tags this ->
               [ `Undefined of undefined  | `U1 of string ] -> unit
           val get_ignorePunctuation : 'tags this -> bool option option
           val set_ignorePunctuation :
             'tags this -> [ `Undefined of undefined  | `U1 of bool ] -> unit
           val create :
             ?usage:string ->
               ?localeMatcher:string ->
                 ?numeric:bool ->
                   ?caseFirst:string ->
                     ?sensitivity:string ->
                       ?ignorePunctuation:bool -> unit -> t
           val cast_from : 'tags this -> t
         end
         module Collator :
         sig
           type t = [ `Intl_Collator ] intf
           type t_0 = t
           [@@@js.stop ]
           type tags = [ `Intl_Collator ]
           type tags_0 = tags
           [@@@js.start ]
           [@@@js.implem type tags = [ `Intl_Collator ]
             type tags_0 = tags]
           type 'tags this =
             'tags intf constraint 'tags = [> `Intl_Collator ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val t_0_to_js : t_0 -> Ojs.t
           val t_0_of_js : Ojs.t -> t_0
           val compare : 'tags this -> x:string -> y:string -> float
           val resolvedOptions : 'tags this -> ResolvedCollatorOptions.t
           val cast_from : 'tags this -> t
           val create :
             ?locales:[ `U1 of string  | `U2 of string list ] ->
               ?options:CollatorOptions.t -> unit -> t
           val invoke :
             ?locales:[ `U1 of string  | `U2 of string list ] ->
               ?options:CollatorOptions.t -> unit -> t
           val supportedLocalesOf :
             locales:[ `U1 of string  | `U2 of string list ] ->
               ?options:CollatorOptions.t -> unit -> string list
         end
       end =
  struct
    module RelativeTimeFormatNumeric =
      struct
        type t = [ `L_s21_always  | `L_s22_auto ]
        let rec t_of_js : Ojs.t -> t =
          fun (x2019 : Ojs.t) ->
            let x2020 = x2019 in
            match Ojs.string_of_js x2020 with
            | "always" -> `L_s21_always
            | "auto" -> `L_s22_auto
            | _ -> assert false
        and t_to_js : t -> Ojs.t =
          fun (x2018 : [ `L_s21_always  | `L_s22_auto ]) ->
            match x2018 with
            | `L_s21_always -> Ojs.string_to_js "always"
            | `L_s22_auto -> Ojs.string_to_js "auto"
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x2022 : Ojs.t) -> t_of_js x2022
        and t_0_to_js : t_0 -> Ojs.t = fun (x2021 : t) -> t_to_js x2021
      end
    module UnicodeBCP47LocaleIdentifier =
      struct
        type t = string
        let rec t_of_js : Ojs.t -> t =
          fun (x2024 : Ojs.t) -> Ojs.string_of_js x2024
        and t_to_js : t -> Ojs.t =
          fun (x2023 : string) -> Ojs.string_to_js x2023
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x2026 : Ojs.t) -> t_of_js x2026
        and t_0_to_js : t_0 -> Ojs.t = fun (x2025 : t) -> t_to_js x2025
      end
    module RelativeTimeFormatStyle =
      struct
        type t = [ `L_s56_long  | `L_s68_narrow  | `L_s89_short ]
        let rec t_of_js : Ojs.t -> t =
          fun (x2028 : Ojs.t) ->
            let x2029 = x2028 in
            match Ojs.string_of_js x2029 with
            | "long" -> `L_s56_long
            | "narrow" -> `L_s68_narrow
            | "short" -> `L_s89_short
            | _ -> assert false
        and t_to_js : t -> Ojs.t =
          fun (x2027 : [ `L_s56_long  | `L_s68_narrow  | `L_s89_short ]) ->
            match x2027 with
            | `L_s56_long -> Ojs.string_to_js "long"
            | `L_s68_narrow -> Ojs.string_to_js "narrow"
            | `L_s89_short -> Ojs.string_to_js "short"
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x2031 : Ojs.t) -> t_of_js x2031
        and t_0_to_js : t_0 -> Ojs.t = fun (x2030 : t) -> t_to_js x2030
      end
    module ResolvedRelativeTimeFormatOptions =
      struct
        type t = [ `Intl_ResolvedRelativeTimeFormatOptions ] intf
        let rec t_of_js : Ojs.t -> t = Obj.magic
        and t_to_js : t -> Ojs.t = Obj.magic
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x2033 : Ojs.t) -> t_of_js x2033
        and t_0_to_js : t_0 -> Ojs.t = fun (x2032 : t) -> t_to_js x2032
        type tags = [ `Intl_ResolvedRelativeTimeFormatOptions ]
        type tags_0 = tags
        type 'tags this =
          'tags intf constraint 'tags =
                      [> `Intl_ResolvedRelativeTimeFormatOptions ]
        let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
          =
          fun (type __tags) ->
            fun (__tags_of_js : Ojs.t -> __tags) ->
              fun (x2036 : Ojs.t) -> intf_of_js __tags_of_js x2036
        and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
          fun (type __tags) ->
            fun (__tags_to_js : __tags -> Ojs.t) ->
              fun (x2034 : __tags intf) -> intf_to_js __tags_to_js x2034
        let (get_locale : 'tags this -> UnicodeBCP47LocaleIdentifier.t) =
          fun (x2038 : 'tags this) ->
            UnicodeBCP47LocaleIdentifier.t_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2038) "locale")
        let (set_locale :
          'tags this -> UnicodeBCP47LocaleIdentifier.t -> unit) =
          fun (x2040 : 'tags this) ->
            fun (x2041 : UnicodeBCP47LocaleIdentifier.t) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2040) "locale"
                (UnicodeBCP47LocaleIdentifier.t_to_js x2041)
        let (get_style : 'tags this -> RelativeTimeFormatStyle.t) =
          fun (x2043 : 'tags this) ->
            RelativeTimeFormatStyle.t_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2043) "style")
        let (set_style : 'tags this -> RelativeTimeFormatStyle.t -> unit) =
          fun (x2045 : 'tags this) ->
            fun (x2046 : RelativeTimeFormatStyle.t) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2045) "style"
                (RelativeTimeFormatStyle.t_to_js x2046)
        let (get_numeric : 'tags this -> RelativeTimeFormatNumeric.t) =
          fun (x2048 : 'tags this) ->
            RelativeTimeFormatNumeric.t_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2048) "numeric")
        let (set_numeric : 'tags this -> RelativeTimeFormatNumeric.t -> unit)
          =
          fun (x2050 : 'tags this) ->
            fun (x2051 : RelativeTimeFormatNumeric.t) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2050) "numeric"
                (RelativeTimeFormatNumeric.t_to_js x2051)
        let (get_numberingSystem : 'tags this -> string) =
          fun (x2053 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2053)
                 "numberingSystem")
        let (set_numberingSystem : 'tags this -> string -> unit) =
          fun (x2055 : 'tags this) ->
            fun (x2056 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2055)
                "numberingSystem" (Ojs.string_to_js x2056)
        let (create :
          locale:UnicodeBCP47LocaleIdentifier.t ->
            style:RelativeTimeFormatStyle.t ->
              numeric:RelativeTimeFormatNumeric.t ->
                numberingSystem:string -> unit -> t)
          =
          fun ~locale:(x2058 : UnicodeBCP47LocaleIdentifier.t) ->
            fun ~style:(x2059 : RelativeTimeFormatStyle.t) ->
              fun ~numeric:(x2060 : RelativeTimeFormatNumeric.t) ->
                fun ~numberingSystem:(x2061 : string) ->
                  fun () ->
                    let x2062 = Ojs.empty_obj () in
                    Ojs.set_prop_ascii x2062 "locale"
                      (UnicodeBCP47LocaleIdentifier.t_to_js x2058);
                    Ojs.set_prop_ascii x2062 "style"
                      (RelativeTimeFormatStyle.t_to_js x2059);
                    Ojs.set_prop_ascii x2062 "numeric"
                      (RelativeTimeFormatNumeric.t_to_js x2060);
                    Ojs.set_prop_ascii x2062 "numberingSystem"
                      (Ojs.string_to_js x2061);
                    t_of_js x2062
        let cast_from = Obj.magic
      end
    module RelativeTimeFormatUnit =
      struct
        type t =
          [ `L_s101_weeks  | `L_s102_year  | `L_s103_years  | `L_s29_day 
          | `L_s31_days  | `L_s50_hour  | `L_s51_hours  | `L_s62_minute 
          | `L_s63_minutes  | `L_s64_month  | `L_s65_months 
          | `L_s81_quarter  | `L_s82_quarters  | `L_s87_second 
          | `L_s88_seconds  | `L_s99_week ]
        let rec t_of_js : Ojs.t -> t =
          fun (x2064 : Ojs.t) ->
            let x2065 = x2064 in
            match Ojs.string_of_js x2065 with
            | "weeks" -> `L_s101_weeks
            | "year" -> `L_s102_year
            | "years" -> `L_s103_years
            | "day" -> `L_s29_day
            | "days" -> `L_s31_days
            | "hour" -> `L_s50_hour
            | "hours" -> `L_s51_hours
            | "minute" -> `L_s62_minute
            | "minutes" -> `L_s63_minutes
            | "month" -> `L_s64_month
            | "months" -> `L_s65_months
            | "quarter" -> `L_s81_quarter
            | "quarters" -> `L_s82_quarters
            | "second" -> `L_s87_second
            | "seconds" -> `L_s88_seconds
            | "week" -> `L_s99_week
            | _ -> assert false
        and t_to_js : t -> Ojs.t =
          fun
            (x2063 :
              [ `L_s101_weeks  | `L_s102_year  | `L_s103_years  | `L_s29_day 
              | `L_s31_days  | `L_s50_hour  | `L_s51_hours  | `L_s62_minute 
              | `L_s63_minutes  | `L_s64_month  | `L_s65_months 
              | `L_s81_quarter  | `L_s82_quarters  | `L_s87_second 
              | `L_s88_seconds  | `L_s99_week ])
            ->
            match x2063 with
            | `L_s101_weeks -> Ojs.string_to_js "weeks"
            | `L_s102_year -> Ojs.string_to_js "year"
            | `L_s103_years -> Ojs.string_to_js "years"
            | `L_s29_day -> Ojs.string_to_js "day"
            | `L_s31_days -> Ojs.string_to_js "days"
            | `L_s50_hour -> Ojs.string_to_js "hour"
            | `L_s51_hours -> Ojs.string_to_js "hours"
            | `L_s62_minute -> Ojs.string_to_js "minute"
            | `L_s63_minutes -> Ojs.string_to_js "minutes"
            | `L_s64_month -> Ojs.string_to_js "month"
            | `L_s65_months -> Ojs.string_to_js "months"
            | `L_s81_quarter -> Ojs.string_to_js "quarter"
            | `L_s82_quarters -> Ojs.string_to_js "quarters"
            | `L_s87_second -> Ojs.string_to_js "second"
            | `L_s88_seconds -> Ojs.string_to_js "seconds"
            | `L_s99_week -> Ojs.string_to_js "week"
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x2067 : Ojs.t) -> t_of_js x2067
        and t_0_to_js : t_0 -> Ojs.t = fun (x2066 : t) -> t_to_js x2066
      end
    module RelativeTimeFormatPart =
      struct
        type t = [ `Intl_RelativeTimeFormatPart ] intf
        let rec t_of_js : Ojs.t -> t = Obj.magic
        and t_to_js : t -> Ojs.t = Obj.magic
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x2069 : Ojs.t) -> t_of_js x2069
        and t_0_to_js : t_0 -> Ojs.t = fun (x2068 : t) -> t_to_js x2068
        type tags = [ `Intl_RelativeTimeFormatPart ]
        type tags_0 = tags
        type 'tags this =
          'tags intf constraint 'tags = [> `Intl_RelativeTimeFormatPart ]
        let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
          =
          fun (type __tags) ->
            fun (__tags_of_js : Ojs.t -> __tags) ->
              fun (x2072 : Ojs.t) -> intf_of_js __tags_of_js x2072
        and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
          fun (type __tags) ->
            fun (__tags_to_js : __tags -> Ojs.t) ->
              fun (x2070 : __tags intf) -> intf_to_js __tags_to_js x2070
        let (get_type : 'tags this -> string) =
          fun (x2074 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2074) "type")
        let (set_type : 'tags this -> string -> unit) =
          fun (x2076 : 'tags this) ->
            fun (x2077 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2076) "type"
                (Ojs.string_to_js x2077)
        let (get_value : 'tags this -> string) =
          fun (x2079 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2079) "value")
        let (set_value : 'tags this -> string -> unit) =
          fun (x2081 : 'tags this) ->
            fun (x2082 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2081) "value"
                (Ojs.string_to_js x2082)
        let (get_unit : 'tags this -> RelativeTimeFormatUnit.t option) =
          fun (x2084 : 'tags this) ->
            Ojs.option_of_js RelativeTimeFormatUnit.t_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2084) "unit")
        let (set_unit : 'tags this -> RelativeTimeFormatUnit.t -> unit) =
          fun (x2087 : 'tags this) ->
            fun (x2088 : RelativeTimeFormatUnit.t) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2087) "unit"
                (RelativeTimeFormatUnit.t_to_js x2088)
        let (create :
          type_:string ->
            value:string -> ?unit:RelativeTimeFormatUnit.t -> unit -> t)
          =
          fun ~type_:(x2090 : string) ->
            fun ~value:(x2091 : string) ->
              fun ?unit:(x2092 : RelativeTimeFormatUnit.t option) ->
                fun () ->
                  let x2093 = Ojs.empty_obj () in
                  Ojs.set_prop_ascii x2093 "type" (Ojs.string_to_js x2090);
                  Ojs.set_prop_ascii x2093 "value" (Ojs.string_to_js x2091);
                  (match x2092 with
                   | Some x2094 ->
                       Ojs.set_prop_ascii x2093 "unit"
                         (RelativeTimeFormatUnit.t_to_js x2094)
                   | None -> ());
                  t_of_js x2093
        let cast_from = Obj.magic
      end
    module RelativeTimeFormatLocaleMatcher =
      struct
        type t = [ `L_s24_best_fit  | `L_s57_lookup ]
        let rec t_of_js : Ojs.t -> t =
          fun (x2096 : Ojs.t) ->
            let x2097 = x2096 in
            match Ojs.string_of_js x2097 with
            | "best fit" -> `L_s24_best_fit
            | "lookup" -> `L_s57_lookup
            | _ -> assert false
        and t_to_js : t -> Ojs.t =
          fun (x2095 : [ `L_s24_best_fit  | `L_s57_lookup ]) ->
            match x2095 with
            | `L_s24_best_fit -> Ojs.string_to_js "best fit"
            | `L_s57_lookup -> Ojs.string_to_js "lookup"
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x2099 : Ojs.t) -> t_of_js x2099
        and t_0_to_js : t_0 -> Ojs.t = fun (x2098 : t) -> t_to_js x2098
      end
    module RelativeTimeFormatOptions =
      struct
        type t = [ `Intl_RelativeTimeFormatOptions ] intf
        let rec t_of_js : Ojs.t -> t = Obj.magic
        and t_to_js : t -> Ojs.t = Obj.magic
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x2101 : Ojs.t) -> t_of_js x2101
        and t_0_to_js : t_0 -> Ojs.t = fun (x2100 : t) -> t_to_js x2100
        type tags = [ `Intl_RelativeTimeFormatOptions ]
        type tags_0 = tags
        type 'tags this =
          'tags intf constraint 'tags = [> `Intl_RelativeTimeFormatOptions ]
        let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
          =
          fun (type __tags) ->
            fun (__tags_of_js : Ojs.t -> __tags) ->
              fun (x2104 : Ojs.t) -> intf_of_js __tags_of_js x2104
        and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
          fun (type __tags) ->
            fun (__tags_to_js : __tags -> Ojs.t) ->
              fun (x2102 : __tags intf) -> intf_to_js __tags_to_js x2102
        let (get_localeMatcher :
          'tags this -> RelativeTimeFormatLocaleMatcher.t option) =
          fun (x2106 : 'tags this) ->
            Ojs.option_of_js RelativeTimeFormatLocaleMatcher.t_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2106)
                 "localeMatcher")
        let (set_localeMatcher :
          'tags this -> RelativeTimeFormatLocaleMatcher.t -> unit) =
          fun (x2109 : 'tags this) ->
            fun (x2110 : RelativeTimeFormatLocaleMatcher.t) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2109) "localeMatcher"
                (RelativeTimeFormatLocaleMatcher.t_to_js x2110)
        let (get_numeric : 'tags this -> RelativeTimeFormatNumeric.t option)
          =
          fun (x2112 : 'tags this) ->
            Ojs.option_of_js RelativeTimeFormatNumeric.t_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2112) "numeric")
        let (set_numeric : 'tags this -> RelativeTimeFormatNumeric.t -> unit)
          =
          fun (x2115 : 'tags this) ->
            fun (x2116 : RelativeTimeFormatNumeric.t) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2115) "numeric"
                (RelativeTimeFormatNumeric.t_to_js x2116)
        let (get_style : 'tags this -> RelativeTimeFormatStyle.t option) =
          fun (x2118 : 'tags this) ->
            Ojs.option_of_js RelativeTimeFormatStyle.t_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2118) "style")
        let (set_style : 'tags this -> RelativeTimeFormatStyle.t -> unit) =
          fun (x2121 : 'tags this) ->
            fun (x2122 : RelativeTimeFormatStyle.t) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2121) "style"
                (RelativeTimeFormatStyle.t_to_js x2122)
        let (create :
          ?localeMatcher:RelativeTimeFormatLocaleMatcher.t ->
            ?numeric:RelativeTimeFormatNumeric.t ->
              ?style:RelativeTimeFormatStyle.t -> unit -> t)
          =
          fun
            ?localeMatcher:(x2124 : RelativeTimeFormatLocaleMatcher.t option)
            ->
            fun ?numeric:(x2125 : RelativeTimeFormatNumeric.t option) ->
              fun ?style:(x2126 : RelativeTimeFormatStyle.t option) ->
                fun () ->
                  let x2127 = Ojs.empty_obj () in
                  (match x2124 with
                   | Some x2130 ->
                       Ojs.set_prop_ascii x2127 "localeMatcher"
                         (RelativeTimeFormatLocaleMatcher.t_to_js x2130)
                   | None -> ());
                  (match x2125 with
                   | Some x2129 ->
                       Ojs.set_prop_ascii x2127 "numeric"
                         (RelativeTimeFormatNumeric.t_to_js x2129)
                   | None -> ());
                  (match x2126 with
                   | Some x2128 ->
                       Ojs.set_prop_ascii x2127 "style"
                         (RelativeTimeFormatStyle.t_to_js x2128)
                   | None -> ());
                  t_of_js x2127
        let cast_from = Obj.magic
      end
    module RelativeTimeFormat =
      struct
        type t = [ `Intl_RelativeTimeFormat ] intf
        let rec t_of_js : Ojs.t -> t = Obj.magic
        and t_to_js : t -> Ojs.t = Obj.magic
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x2132 : Ojs.t) -> t_of_js x2132
        and t_0_to_js : t_0 -> Ojs.t = fun (x2131 : t) -> t_to_js x2131
        type tags = [ `Intl_RelativeTimeFormat ]
        type tags_0 = tags
        type 'tags this =
          'tags intf constraint 'tags = [> `Intl_RelativeTimeFormat ]
        let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
          =
          fun (type __tags) ->
            fun (__tags_of_js : Ojs.t -> __tags) ->
              fun (x2135 : Ojs.t) -> intf_of_js __tags_of_js x2135
        and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
          fun (type __tags) ->
            fun (__tags_to_js : __tags -> Ojs.t) ->
              fun (x2133 : __tags intf) -> intf_to_js __tags_to_js x2133
        let (format :
          'tags this ->
            value:float -> unit:RelativeTimeFormatUnit.t -> string)
          =
          fun (x2139 : 'tags this) ->
            fun ~value:(x2137 : float) ->
              fun ~unit:(x2138 : RelativeTimeFormatUnit.t) ->
                Ojs.string_of_js
                  (Ojs.call (this_to_js Obj.magic x2139) "format"
                     [|(Ojs.float_to_js x2137);(RelativeTimeFormatUnit.t_to_js
                                                  x2138)|])
        let (formatToParts :
          'tags this ->
            value:float ->
              unit:RelativeTimeFormatUnit.t -> RelativeTimeFormatPart.t list)
          =
          fun (x2143 : 'tags this) ->
            fun ~value:(x2141 : float) ->
              fun ~unit:(x2142 : RelativeTimeFormatUnit.t) ->
                Ojs.list_of_js RelativeTimeFormatPart.t_of_js
                  (Ojs.call (this_to_js Obj.magic x2143) "formatToParts"
                     [|(Ojs.float_to_js x2141);(RelativeTimeFormatUnit.t_to_js
                                                  x2142)|])
        let (resolvedOptions :
          'tags this -> ResolvedRelativeTimeFormatOptions.t) =
          fun (x2146 : 'tags this) ->
            ResolvedRelativeTimeFormatOptions.t_of_js
              (Ojs.call (this_to_js Obj.magic x2146) "resolvedOptions" [||])
        let cast_from = Obj.magic
        let (create :
          ?locales:[ `U1 of UnicodeBCP47LocaleIdentifier.t 
                   | `U2 of UnicodeBCP47LocaleIdentifier.t list ]
            -> ?options:RelativeTimeFormatOptions.t -> unit -> t)
          =
          fun
            ?locales:(x2148 :
                       [ `U1 of UnicodeBCP47LocaleIdentifier.t 
                       | `U2 of UnicodeBCP47LocaleIdentifier.t list ] option)
            ->
            fun ?options:(x2149 : RelativeTimeFormatOptions.t option) ->
              fun () ->
                t_of_js
                  (Ojs.new_obj_arr
                     (Ojs.get_prop_ascii
                        (Ojs.get_prop_ascii Ojs.global "Intl")
                        "RelativeTimeFormat")
                     (let x2150 =
                        Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                          [||] in
                      (match x2148 with
                       | Some x2152 ->
                           ignore
                             (Ojs.call x2150 "push"
                                [|((match x2152 with
                                    | `U1 x2153 ->
                                        UnicodeBCP47LocaleIdentifier.t_to_js
                                          x2153
                                    | `U2 x2154 ->
                                        Ojs.list_to_js
                                          UnicodeBCP47LocaleIdentifier.t_to_js
                                          x2154))|])
                       | None -> ());
                      (match x2149 with
                       | Some x2151 ->
                           ignore
                             (Ojs.call x2150 "push"
                                [|(RelativeTimeFormatOptions.t_to_js x2151)|])
                       | None -> ());
                      x2150))
        let (supportedLocalesOf :
          ?locales:[ `U1 of UnicodeBCP47LocaleIdentifier.t 
                   | `U2 of UnicodeBCP47LocaleIdentifier.t list ]
            ->
            ?options:RelativeTimeFormatOptions.t ->
              unit -> UnicodeBCP47LocaleIdentifier.t list)
          =
          fun
            ?locales:(x2156 :
                       [ `U1 of UnicodeBCP47LocaleIdentifier.t 
                       | `U2 of UnicodeBCP47LocaleIdentifier.t list ] option)
            ->
            fun ?options:(x2157 : RelativeTimeFormatOptions.t option) ->
              fun () ->
                Ojs.list_of_js UnicodeBCP47LocaleIdentifier.t_of_js
                  (let x2164 =
                     Ojs.get_prop_ascii
                       (Ojs.get_prop_ascii Ojs.global "Intl")
                       "RelativeTimeFormat" in
                   Ojs.call (Ojs.get_prop_ascii x2164 "supportedLocalesOf")
                     "apply"
                     [|x2164;((let x2158 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               (match x2156 with
                                | Some x2160 ->
                                    ignore
                                      (Ojs.call x2158 "push"
                                         [|((match x2160 with
                                             | `U1 x2161 ->
                                                 UnicodeBCP47LocaleIdentifier.t_to_js
                                                   x2161
                                             | `U2 x2162 ->
                                                 Ojs.list_to_js
                                                   UnicodeBCP47LocaleIdentifier.t_to_js
                                                   x2162))|])
                                | None -> ());
                               (match x2157 with
                                | Some x2159 ->
                                    ignore
                                      (Ojs.call x2158 "push"
                                         [|(RelativeTimeFormatOptions.t_to_js
                                              x2159)|])
                                | None -> ());
                               x2158))|])
      end
    module PluralRuleType =
      struct
        type t = [ `L_s25_cardinal  | `L_s76_ordinal ]
        let rec t_of_js : Ojs.t -> t =
          fun (x2167 : Ojs.t) ->
            let x2168 = x2167 in
            match Ojs.string_of_js x2168 with
            | "cardinal" -> `L_s25_cardinal
            | "ordinal" -> `L_s76_ordinal
            | _ -> assert false
        and t_to_js : t -> Ojs.t =
          fun (x2166 : [ `L_s25_cardinal  | `L_s76_ordinal ]) ->
            match x2166 with
            | `L_s25_cardinal -> Ojs.string_to_js "cardinal"
            | `L_s76_ordinal -> Ojs.string_to_js "ordinal"
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x2170 : Ojs.t) -> t_of_js x2170
        and t_0_to_js : t_0 -> Ojs.t = fun (x2169 : t) -> t_to_js x2169
      end
    module LDMLPluralRule =
      struct
        type t =
          [ `L_s104_zero  | `L_s41_few  | `L_s59_many  | `L_s75_one 
          | `L_s77_other  | `L_s95_two ]
        let rec t_of_js : Ojs.t -> t =
          fun (x2172 : Ojs.t) ->
            let x2173 = x2172 in
            match Ojs.string_of_js x2173 with
            | "zero" -> `L_s104_zero
            | "few" -> `L_s41_few
            | "many" -> `L_s59_many
            | "one" -> `L_s75_one
            | "other" -> `L_s77_other
            | "two" -> `L_s95_two
            | _ -> assert false
        and t_to_js : t -> Ojs.t =
          fun
            (x2171 :
              [ `L_s104_zero  | `L_s41_few  | `L_s59_many  | `L_s75_one 
              | `L_s77_other  | `L_s95_two ])
            ->
            match x2171 with
            | `L_s104_zero -> Ojs.string_to_js "zero"
            | `L_s41_few -> Ojs.string_to_js "few"
            | `L_s59_many -> Ojs.string_to_js "many"
            | `L_s75_one -> Ojs.string_to_js "one"
            | `L_s77_other -> Ojs.string_to_js "other"
            | `L_s95_two -> Ojs.string_to_js "two"
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x2175 : Ojs.t) -> t_of_js x2175
        and t_0_to_js : t_0 -> Ojs.t = fun (x2174 : t) -> t_to_js x2174
      end
    module ResolvedPluralRulesOptions =
      struct
        type t = [ `Intl_ResolvedPluralRulesOptions ] intf
        let rec t_of_js : Ojs.t -> t = Obj.magic
        and t_to_js : t -> Ojs.t = Obj.magic
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x2177 : Ojs.t) -> t_of_js x2177
        and t_0_to_js : t_0 -> Ojs.t = fun (x2176 : t) -> t_to_js x2176
        type tags = [ `Intl_ResolvedPluralRulesOptions ]
        type tags_0 = tags
        type 'tags this =
          'tags intf constraint 'tags = [> `Intl_ResolvedPluralRulesOptions ]
        let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
          =
          fun (type __tags) ->
            fun (__tags_of_js : Ojs.t -> __tags) ->
              fun (x2180 : Ojs.t) -> intf_of_js __tags_of_js x2180
        and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
          fun (type __tags) ->
            fun (__tags_to_js : __tags -> Ojs.t) ->
              fun (x2178 : __tags intf) -> intf_to_js __tags_to_js x2178
        let (get_locale : 'tags this -> string) =
          fun (x2182 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2182) "locale")
        let (set_locale : 'tags this -> string -> unit) =
          fun (x2184 : 'tags this) ->
            fun (x2185 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2184) "locale"
                (Ojs.string_to_js x2185)
        let (get_pluralCategories : 'tags this -> LDMLPluralRule.t list) =
          fun (x2187 : 'tags this) ->
            Ojs.list_of_js LDMLPluralRule.t_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2187)
                 "pluralCategories")
        let (set_pluralCategories :
          'tags this -> LDMLPluralRule.t list -> unit) =
          fun (x2190 : 'tags this) ->
            fun (x2191 : LDMLPluralRule.t list) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2190)
                "pluralCategories"
                (Ojs.list_to_js LDMLPluralRule.t_to_js x2191)
        let (get_type : 'tags this -> PluralRuleType.t) =
          fun (x2194 : 'tags this) ->
            PluralRuleType.t_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2194) "type")
        let (set_type : 'tags this -> PluralRuleType.t -> unit) =
          fun (x2196 : 'tags this) ->
            fun (x2197 : PluralRuleType.t) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2196) "type"
                (PluralRuleType.t_to_js x2197)
        let (get_minimumIntegerDigits : 'tags this -> float) =
          fun (x2199 : 'tags this) ->
            Ojs.float_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2199)
                 "minimumIntegerDigits")
        let (set_minimumIntegerDigits : 'tags this -> float -> unit) =
          fun (x2201 : 'tags this) ->
            fun (x2202 : float) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2201)
                "minimumIntegerDigits" (Ojs.float_to_js x2202)
        let (get_minimumFractionDigits : 'tags this -> float) =
          fun (x2204 : 'tags this) ->
            Ojs.float_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2204)
                 "minimumFractionDigits")
        let (set_minimumFractionDigits : 'tags this -> float -> unit) =
          fun (x2206 : 'tags this) ->
            fun (x2207 : float) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2206)
                "minimumFractionDigits" (Ojs.float_to_js x2207)
        let (get_maximumFractionDigits : 'tags this -> float) =
          fun (x2209 : 'tags this) ->
            Ojs.float_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2209)
                 "maximumFractionDigits")
        let (set_maximumFractionDigits : 'tags this -> float -> unit) =
          fun (x2211 : 'tags this) ->
            fun (x2212 : float) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2211)
                "maximumFractionDigits" (Ojs.float_to_js x2212)
        let (get_minimumSignificantDigits : 'tags this -> float option) =
          fun (x2214 : 'tags this) ->
            Ojs.option_of_js Ojs.float_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2214)
                 "minimumSignificantDigits")
        let (set_minimumSignificantDigits : 'tags this -> float -> unit) =
          fun (x2217 : 'tags this) ->
            fun (x2218 : float) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2217)
                "minimumSignificantDigits" (Ojs.float_to_js x2218)
        let (get_maximumSignificantDigits : 'tags this -> float option) =
          fun (x2220 : 'tags this) ->
            Ojs.option_of_js Ojs.float_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2220)
                 "maximumSignificantDigits")
        let (set_maximumSignificantDigits : 'tags this -> float -> unit) =
          fun (x2223 : 'tags this) ->
            fun (x2224 : float) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2223)
                "maximumSignificantDigits" (Ojs.float_to_js x2224)
        let (create :
          locale:string ->
            pluralCategories:LDMLPluralRule.t list ->
              type_:PluralRuleType.t ->
                minimumIntegerDigits:float ->
                  minimumFractionDigits:float ->
                    maximumFractionDigits:float ->
                      ?minimumSignificantDigits:float ->
                        ?maximumSignificantDigits:float -> unit -> t)
          =
          fun ~locale:(x2226 : string) ->
            fun ~pluralCategories:(x2227 : LDMLPluralRule.t list) ->
              fun ~type_:(x2228 : PluralRuleType.t) ->
                fun ~minimumIntegerDigits:(x2229 : float) ->
                  fun ~minimumFractionDigits:(x2230 : float) ->
                    fun ~maximumFractionDigits:(x2231 : float) ->
                      fun ?minimumSignificantDigits:(x2232 : float option) ->
                        fun ?maximumSignificantDigits:(x2233 : float option)
                          ->
                          fun () ->
                            let x2234 = Ojs.empty_obj () in
                            Ojs.set_prop_ascii x2234 "locale"
                              (Ojs.string_to_js x2226);
                            Ojs.set_prop_ascii x2234 "pluralCategories"
                              (Ojs.list_to_js LDMLPluralRule.t_to_js x2227);
                            Ojs.set_prop_ascii x2234 "type"
                              (PluralRuleType.t_to_js x2228);
                            Ojs.set_prop_ascii x2234 "minimumIntegerDigits"
                              (Ojs.float_to_js x2229);
                            Ojs.set_prop_ascii x2234 "minimumFractionDigits"
                              (Ojs.float_to_js x2230);
                            Ojs.set_prop_ascii x2234 "maximumFractionDigits"
                              (Ojs.float_to_js x2231);
                            (match x2232 with
                             | Some x2236 ->
                                 Ojs.set_prop_ascii x2234
                                   "minimumSignificantDigits"
                                   (Ojs.float_to_js x2236)
                             | None -> ());
                            (match x2233 with
                             | Some x2235 ->
                                 Ojs.set_prop_ascii x2234
                                   "maximumSignificantDigits"
                                   (Ojs.float_to_js x2235)
                             | None -> ());
                            t_of_js x2234
        let cast_from = Obj.magic
      end
    module PluralRulesOptions =
      struct
        type t = [ `Intl_PluralRulesOptions ] intf
        let rec t_of_js : Ojs.t -> t = Obj.magic
        and t_to_js : t -> Ojs.t = Obj.magic
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x2239 : Ojs.t) -> t_of_js x2239
        and t_0_to_js : t_0 -> Ojs.t = fun (x2238 : t) -> t_to_js x2238
        type tags = [ `Intl_PluralRulesOptions ]
        type tags_0 = tags
        type 'tags this =
          'tags intf constraint 'tags = [> `Intl_PluralRulesOptions ]
        let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
          =
          fun (type __tags) ->
            fun (__tags_of_js : Ojs.t -> __tags) ->
              fun (x2242 : Ojs.t) -> intf_of_js __tags_of_js x2242
        and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
          fun (type __tags) ->
            fun (__tags_to_js : __tags -> Ojs.t) ->
              fun (x2240 : __tags intf) -> intf_to_js __tags_to_js x2240
        let (get_localeMatcher :
          'tags this -> [ `L_s24_best_fit  | `L_s57_lookup ] option option) =
          fun (x2244 : 'tags this) ->
            Ojs.option_of_js
              (fun (x2246 : Ojs.t) ->
                 Ojs.option_of_js
                   (fun (x2247 : Ojs.t) ->
                      let x2248 = x2247 in
                      match Ojs.string_of_js x2248 with
                      | "best fit" -> `L_s24_best_fit
                      | "lookup" -> `L_s57_lookup
                      | _ -> assert false) x2246)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2244)
                 "localeMatcher")
        let (set_localeMatcher :
          'tags this ->
            [ `Undefined of undefined  | `U1 of [ `L_s57_lookup ] 
            | `U2 of [ `L_s24_best_fit ] ] -> unit)
          =
          fun (x2249 : 'tags this) ->
            fun
              (x2250 :
                [ `Undefined of undefined  | `U1 of [ `L_s57_lookup ] 
                | `U2 of [ `L_s24_best_fit ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2249) "localeMatcher"
                (match x2250 with
                 | `Undefined x2251 -> undefined_to_js x2251
                 | `U1 x2252 ->
                     (match x2252 with
                      | `L_s57_lookup -> Ojs.string_to_js "lookup")
                 | `U2 x2253 ->
                     (match x2253 with
                      | `L_s24_best_fit -> Ojs.string_to_js "best fit"))
        let (get_type : 'tags this -> PluralRuleType.t option option) =
          fun (x2255 : 'tags this) ->
            Ojs.option_of_js
              (fun (x2257 : Ojs.t) ->
                 Ojs.option_of_js PluralRuleType.t_of_js x2257)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2255) "type")
        let (set_type :
          'tags this ->
            [ `Undefined of undefined  | `U1 of PluralRuleType.t ] -> unit)
          =
          fun (x2259 : 'tags this) ->
            fun
              (x2260 :
                [ `Undefined of undefined  | `U1 of PluralRuleType.t ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2259) "type"
                (match x2260 with
                 | `Undefined x2261 -> undefined_to_js x2261
                 | `U1 x2262 -> PluralRuleType.t_to_js x2262)
        let (get_minimumIntegerDigits : 'tags this -> float option option) =
          fun (x2264 : 'tags this) ->
            Ojs.option_of_js
              (fun (x2266 : Ojs.t) -> Ojs.option_of_js Ojs.float_of_js x2266)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2264)
                 "minimumIntegerDigits")
        let (set_minimumIntegerDigits :
          'tags this -> [ `Undefined of undefined  | `U1 of float ] -> unit)
          =
          fun (x2268 : 'tags this) ->
            fun (x2269 : [ `Undefined of undefined  | `U1 of float ]) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2268)
                "minimumIntegerDigits"
                (match x2269 with
                 | `Undefined x2270 -> undefined_to_js x2270
                 | `U1 x2271 -> Ojs.float_to_js x2271)
        let (get_minimumFractionDigits : 'tags this -> float option option) =
          fun (x2273 : 'tags this) ->
            Ojs.option_of_js
              (fun (x2275 : Ojs.t) -> Ojs.option_of_js Ojs.float_of_js x2275)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2273)
                 "minimumFractionDigits")
        let (set_minimumFractionDigits :
          'tags this -> [ `Undefined of undefined  | `U1 of float ] -> unit)
          =
          fun (x2277 : 'tags this) ->
            fun (x2278 : [ `Undefined of undefined  | `U1 of float ]) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2277)
                "minimumFractionDigits"
                (match x2278 with
                 | `Undefined x2279 -> undefined_to_js x2279
                 | `U1 x2280 -> Ojs.float_to_js x2280)
        let (get_maximumFractionDigits : 'tags this -> float option option) =
          fun (x2282 : 'tags this) ->
            Ojs.option_of_js
              (fun (x2284 : Ojs.t) -> Ojs.option_of_js Ojs.float_of_js x2284)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2282)
                 "maximumFractionDigits")
        let (set_maximumFractionDigits :
          'tags this -> [ `Undefined of undefined  | `U1 of float ] -> unit)
          =
          fun (x2286 : 'tags this) ->
            fun (x2287 : [ `Undefined of undefined  | `U1 of float ]) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2286)
                "maximumFractionDigits"
                (match x2287 with
                 | `Undefined x2288 -> undefined_to_js x2288
                 | `U1 x2289 -> Ojs.float_to_js x2289)
        let (get_minimumSignificantDigits :
          'tags this -> float option option) =
          fun (x2291 : 'tags this) ->
            Ojs.option_of_js
              (fun (x2293 : Ojs.t) -> Ojs.option_of_js Ojs.float_of_js x2293)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2291)
                 "minimumSignificantDigits")
        let (set_minimumSignificantDigits :
          'tags this -> [ `Undefined of undefined  | `U1 of float ] -> unit)
          =
          fun (x2295 : 'tags this) ->
            fun (x2296 : [ `Undefined of undefined  | `U1 of float ]) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2295)
                "minimumSignificantDigits"
                (match x2296 with
                 | `Undefined x2297 -> undefined_to_js x2297
                 | `U1 x2298 -> Ojs.float_to_js x2298)
        let (get_maximumSignificantDigits :
          'tags this -> float option option) =
          fun (x2300 : 'tags this) ->
            Ojs.option_of_js
              (fun (x2302 : Ojs.t) -> Ojs.option_of_js Ojs.float_of_js x2302)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2300)
                 "maximumSignificantDigits")
        let (set_maximumSignificantDigits :
          'tags this -> [ `Undefined of undefined  | `U1 of float ] -> unit)
          =
          fun (x2304 : 'tags this) ->
            fun (x2305 : [ `Undefined of undefined  | `U1 of float ]) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2304)
                "maximumSignificantDigits"
                (match x2305 with
                 | `Undefined x2306 -> undefined_to_js x2306
                 | `U1 x2307 -> Ojs.float_to_js x2307)
        let (create :
          ?localeMatcher:[ `L_s24_best_fit  | `L_s57_lookup ] ->
            ?type_:PluralRuleType.t ->
              ?minimumIntegerDigits:float ->
                ?minimumFractionDigits:float ->
                  ?maximumFractionDigits:float ->
                    ?minimumSignificantDigits:float ->
                      ?maximumSignificantDigits:float -> unit -> t)
          =
          fun
            ?localeMatcher:(x2309 :
                             [ `L_s24_best_fit  | `L_s57_lookup ] option)
            ->
            fun ?type_:(x2310 : PluralRuleType.t option) ->
              fun ?minimumIntegerDigits:(x2311 : float option) ->
                fun ?minimumFractionDigits:(x2312 : float option) ->
                  fun ?maximumFractionDigits:(x2313 : float option) ->
                    fun ?minimumSignificantDigits:(x2314 : float option) ->
                      fun ?maximumSignificantDigits:(x2315 : float option) ->
                        fun () ->
                          let x2316 = Ojs.empty_obj () in
                          (match x2309 with
                           | Some x2323 ->
                               Ojs.set_prop_ascii x2316 "localeMatcher"
                                 (match x2323 with
                                  | `L_s24_best_fit ->
                                      Ojs.string_to_js "best fit"
                                  | `L_s57_lookup ->
                                      Ojs.string_to_js "lookup")
                           | None -> ());
                          (match x2310 with
                           | Some x2322 ->
                               Ojs.set_prop_ascii x2316 "type"
                                 (PluralRuleType.t_to_js x2322)
                           | None -> ());
                          (match x2311 with
                           | Some x2321 ->
                               Ojs.set_prop_ascii x2316
                                 "minimumIntegerDigits"
                                 (Ojs.float_to_js x2321)
                           | None -> ());
                          (match x2312 with
                           | Some x2320 ->
                               Ojs.set_prop_ascii x2316
                                 "minimumFractionDigits"
                                 (Ojs.float_to_js x2320)
                           | None -> ());
                          (match x2313 with
                           | Some x2319 ->
                               Ojs.set_prop_ascii x2316
                                 "maximumFractionDigits"
                                 (Ojs.float_to_js x2319)
                           | None -> ());
                          (match x2314 with
                           | Some x2318 ->
                               Ojs.set_prop_ascii x2316
                                 "minimumSignificantDigits"
                                 (Ojs.float_to_js x2318)
                           | None -> ());
                          (match x2315 with
                           | Some x2317 ->
                               Ojs.set_prop_ascii x2316
                                 "maximumSignificantDigits"
                                 (Ojs.float_to_js x2317)
                           | None -> ());
                          t_of_js x2316
        let cast_from = Obj.magic
      end
    module PluralRules =
      struct
        module AnonymousInterface4 =
          struct
            type t = Ojs.t
            let rec t_of_js : Ojs.t -> t = fun (x2325 : Ojs.t) -> x2325
            and t_to_js : t -> Ojs.t = fun (x2324 : Ojs.t) -> x2324
            let (get_localeMatcher :
              t -> [ `L_s24_best_fit  | `L_s57_lookup ] option) =
              fun (x2326 : t) ->
                Ojs.option_of_js
                  (fun (x2327 : Ojs.t) ->
                     let x2328 = x2327 in
                     match Ojs.string_of_js x2328 with
                     | "best fit" -> `L_s24_best_fit
                     | "lookup" -> `L_s57_lookup
                     | _ -> assert false)
                  (Ojs.get_prop_ascii (t_to_js x2326) "localeMatcher")
            let (set_localeMatcher :
              t ->
                [ `U1 of [ `L_s57_lookup ]  | `U2 of [ `L_s24_best_fit ] ] ->
                  unit)
              =
              fun (x2329 : t) ->
                fun
                  (x2330 :
                    [ `U1 of [ `L_s57_lookup ] 
                    | `U2 of [ `L_s24_best_fit ] ])
                  ->
                  Ojs.set_prop_ascii (t_to_js x2329) "localeMatcher"
                    (match x2330 with
                     | `U1 x2331 ->
                         (match x2331 with
                          | `L_s57_lookup -> Ojs.string_to_js "lookup")
                     | `U2 x2332 ->
                         (match x2332 with
                          | `L_s24_best_fit -> Ojs.string_to_js "best fit"))
            let (create :
              ?localeMatcher:[ `L_s24_best_fit  | `L_s57_lookup ] ->
                unit -> t)
              =
              fun
                ?localeMatcher:(x2333 :
                                 [ `L_s24_best_fit  | `L_s57_lookup ] option)
                ->
                fun () ->
                  let x2334 = Ojs.empty_obj () in
                  (match x2333 with
                   | Some x2335 ->
                       Ojs.set_prop_ascii x2334 "localeMatcher"
                         (match x2335 with
                          | `L_s24_best_fit -> Ojs.string_to_js "best fit"
                          | `L_s57_lookup -> Ojs.string_to_js "lookup")
                   | None -> ());
                  t_of_js x2334
          end
        type t = [ `Intl_PluralRules ] intf
        let rec t_of_js : Ojs.t -> t = Obj.magic
        and t_to_js : t -> Ojs.t = Obj.magic
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x2337 : Ojs.t) -> t_of_js x2337
        and t_0_to_js : t_0 -> Ojs.t = fun (x2336 : t) -> t_to_js x2336
        type tags = [ `Intl_PluralRules ]
        type tags_0 = tags
        type 'tags this =
          'tags intf constraint 'tags = [> `Intl_PluralRules ]
        let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
          =
          fun (type __tags) ->
            fun (__tags_of_js : Ojs.t -> __tags) ->
              fun (x2340 : Ojs.t) -> intf_of_js __tags_of_js x2340
        and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
          fun (type __tags) ->
            fun (__tags_to_js : __tags -> Ojs.t) ->
              fun (x2338 : __tags intf) -> intf_to_js __tags_to_js x2338
        let (resolvedOptions : 'tags this -> ResolvedPluralRulesOptions.t) =
          fun (x2342 : 'tags this) ->
            ResolvedPluralRulesOptions.t_of_js
              (Ojs.call (this_to_js Obj.magic x2342) "resolvedOptions" [||])
        let (select : 'tags this -> n:float -> LDMLPluralRule.t) =
          fun (x2345 : 'tags this) ->
            fun ~n:(x2344 : float) ->
              LDMLPluralRule.t_of_js
                (Ojs.call (this_to_js Obj.magic x2345) "select"
                   [|(Ojs.float_to_js x2344)|])
        let cast_from = Obj.magic
        let (create :
          ?locales:[ `U1 of string  | `U2 of string list ] ->
            ?options:PluralRulesOptions.t -> unit -> t)
          =
          fun
            ?locales:(x2347 : [ `U1 of string  | `U2 of string list ] option)
            ->
            fun ?options:(x2348 : PluralRulesOptions.t option) ->
              fun () ->
                t_of_js
                  (Ojs.new_obj_arr
                     (Ojs.get_prop_ascii
                        (Ojs.get_prop_ascii Ojs.global "Intl") "PluralRules")
                     (let x2349 =
                        Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                          [||] in
                      (match x2347 with
                       | Some x2351 ->
                           ignore
                             (Ojs.call x2349 "push"
                                [|((match x2351 with
                                    | `U1 x2352 -> Ojs.string_to_js x2352
                                    | `U2 x2353 ->
                                        Ojs.list_to_js Ojs.string_to_js x2353))|])
                       | None -> ());
                      (match x2348 with
                       | Some x2350 ->
                           ignore
                             (Ojs.call x2349 "push"
                                [|(PluralRulesOptions.t_to_js x2350)|])
                       | None -> ());
                      x2349))
        let (invoke :
          ?locales:[ `U1 of string  | `U2 of string list ] ->
            ?options:PluralRulesOptions.t -> unit -> t)
          =
          fun
            ?locales:(x2355 : [ `U1 of string  | `U2 of string list ] option)
            ->
            fun ?options:(x2356 : PluralRulesOptions.t option) ->
              fun () ->
                t_of_js
                  (Ojs.call
                     (Ojs.get_prop_ascii
                        (Ojs.get_prop_ascii Ojs.global "Intl") "PluralRules")
                     "apply"
                     [|Ojs.null;((let x2357 =
                                    Ojs.new_obj
                                      (Ojs.get_prop_ascii Ojs.global "Array")
                                      [||] in
                                  (match x2355 with
                                   | Some x2359 ->
                                       ignore
                                         (Ojs.call x2357 "push"
                                            [|((match x2359 with
                                                | `U1 x2360 ->
                                                    Ojs.string_to_js x2360
                                                | `U2 x2361 ->
                                                    Ojs.list_to_js
                                                      Ojs.string_to_js x2361))|])
                                   | None -> ());
                                  (match x2356 with
                                   | Some x2358 ->
                                       ignore
                                         (Ojs.call x2357 "push"
                                            [|(PluralRulesOptions.t_to_js
                                                 x2358)|])
                                   | None -> ());
                                  x2357))|])
        let (supportedLocalesOf :
          locales:[ `U1 of string  | `U2 of string list ] ->
            ?options:AnonymousInterface4.t -> unit -> string list)
          =
          fun ~locales:(x2363 : [ `U1 of string  | `U2 of string list ]) ->
            fun ?options:(x2364 : AnonymousInterface4.t option) ->
              fun () ->
                Ojs.list_of_js Ojs.string_of_js
                  (let x2370 =
                     Ojs.get_prop_ascii
                       (Ojs.get_prop_ascii Ojs.global "Intl") "PluralRules" in
                   Ojs.call (Ojs.get_prop_ascii x2370 "supportedLocalesOf")
                     "apply"
                     [|x2370;((let x2365 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x2365 "push"
                                    [|((match x2363 with
                                        | `U1 x2367 -> Ojs.string_to_js x2367
                                        | `U2 x2368 ->
                                            Ojs.list_to_js Ojs.string_to_js
                                              x2368))|]);
                               (match x2364 with
                                | Some x2366 ->
                                    ignore
                                      (Ojs.call x2365 "push"
                                         [|(AnonymousInterface4.t_to_js x2366)|])
                                | None -> ());
                               x2365))|])
      end
    module ResolvedNumberFormatOptions =
      struct
        type t = [ `Intl_ResolvedNumberFormatOptions ] intf
        let rec t_of_js : Ojs.t -> t = Obj.magic
        and t_to_js : t -> Ojs.t = Obj.magic
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x2373 : Ojs.t) -> t_of_js x2373
        and t_0_to_js : t_0 -> Ojs.t = fun (x2372 : t) -> t_to_js x2372
        type tags = [ `Intl_ResolvedNumberFormatOptions ]
        type tags_0 = tags
        type 'tags this =
          'tags intf constraint 'tags =
                      [> `Intl_ResolvedNumberFormatOptions ]
        let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
          =
          fun (type __tags) ->
            fun (__tags_of_js : Ojs.t -> __tags) ->
              fun (x2376 : Ojs.t) -> intf_of_js __tags_of_js x2376
        and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
          fun (type __tags) ->
            fun (__tags_to_js : __tags -> Ojs.t) ->
              fun (x2374 : __tags intf) -> intf_to_js __tags_to_js x2374
        let (get_compactDisplay :
          'tags this -> [ `L_s56_long  | `L_s89_short ] option) =
          fun (x2378 : 'tags this) ->
            Ojs.option_of_js
              (fun (x2380 : Ojs.t) ->
                 let x2381 = x2380 in
                 match Ojs.string_of_js x2381 with
                 | "long" -> `L_s56_long
                 | "short" -> `L_s89_short
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2378)
                 "compactDisplay")
        let (set_compactDisplay :
          'tags this ->
            [ `U1 of [ `L_s89_short ]  | `U2 of [ `L_s56_long ] ] -> unit)
          =
          fun (x2382 : 'tags this) ->
            fun
              (x2383 : [ `U1 of [ `L_s89_short ]  | `U2 of [ `L_s56_long ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2382)
                "compactDisplay"
                (match x2383 with
                 | `U1 x2384 ->
                     (match x2384 with
                      | `L_s89_short -> Ojs.string_to_js "short")
                 | `U2 x2385 ->
                     (match x2385 with
                      | `L_s56_long -> Ojs.string_to_js "long"))
        let (get_notation :
          'tags this ->
            [ `L_s27_compact  | `L_s34_engineering  | `L_s85_scientific 
            | `L_s90_standard ] option)
          =
          fun (x2387 : 'tags this) ->
            Ojs.option_of_js
              (fun (x2389 : Ojs.t) ->
                 let x2390 = x2389 in
                 match Ojs.string_of_js x2390 with
                 | "compact" -> `L_s27_compact
                 | "engineering" -> `L_s34_engineering
                 | "scientific" -> `L_s85_scientific
                 | "standard" -> `L_s90_standard
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2387) "notation")
        let (set_notation :
          'tags this ->
            [ `U1 of [ `L_s90_standard ]  | `U2 of [ `L_s85_scientific ] 
            | `U3 of [ `L_s34_engineering ]  | `U4 of [ `L_s27_compact ] ] ->
              unit)
          =
          fun (x2391 : 'tags this) ->
            fun
              (x2392 :
                [ `U1 of [ `L_s90_standard ]  | `U2 of [ `L_s85_scientific ] 
                | `U3 of [ `L_s34_engineering ] 
                | `U4 of [ `L_s27_compact ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2391) "notation"
                (match x2392 with
                 | `U1 x2393 ->
                     (match x2393 with
                      | `L_s90_standard -> Ojs.string_to_js "standard")
                 | `U2 x2394 ->
                     (match x2394 with
                      | `L_s85_scientific -> Ojs.string_to_js "scientific")
                 | `U3 x2395 ->
                     (match x2395 with
                      | `L_s34_engineering -> Ojs.string_to_js "engineering")
                 | `U4 x2396 ->
                     (match x2396 with
                      | `L_s27_compact -> Ojs.string_to_js "compact"))
        let (get_signDisplay :
          'tags this ->
            [ `L_s21_always  | `L_s22_auto  | `L_s36_exceptZero 
            | `L_s69_never ] option)
          =
          fun (x2398 : 'tags this) ->
            Ojs.option_of_js
              (fun (x2400 : Ojs.t) ->
                 let x2401 = x2400 in
                 match Ojs.string_of_js x2401 with
                 | "always" -> `L_s21_always
                 | "auto" -> `L_s22_auto
                 | "exceptZero" -> `L_s36_exceptZero
                 | "never" -> `L_s69_never
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2398) "signDisplay")
        let (set_signDisplay :
          'tags this ->
            [ `U1 of [ `L_s22_auto ]  | `U2 of [ `L_s69_never ] 
            | `U3 of [ `L_s21_always ]  | `U4 of [ `L_s36_exceptZero ] ] ->
              unit)
          =
          fun (x2402 : 'tags this) ->
            fun
              (x2403 :
                [ `U1 of [ `L_s22_auto ]  | `U2 of [ `L_s69_never ] 
                | `U3 of [ `L_s21_always ]  | `U4 of [ `L_s36_exceptZero ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2402) "signDisplay"
                (match x2403 with
                 | `U1 x2404 ->
                     (match x2404 with
                      | `L_s22_auto -> Ojs.string_to_js "auto")
                 | `U2 x2405 ->
                     (match x2405 with
                      | `L_s69_never -> Ojs.string_to_js "never")
                 | `U3 x2406 ->
                     (match x2406 with
                      | `L_s21_always -> Ojs.string_to_js "always")
                 | `U4 x2407 ->
                     (match x2407 with
                      | `L_s36_exceptZero -> Ojs.string_to_js "exceptZero"))
        let (get_unit : 'tags this -> string option) =
          fun (x2409 : 'tags this) ->
            Ojs.option_of_js Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2409) "unit")
        let (set_unit : 'tags this -> string -> unit) =
          fun (x2412 : 'tags this) ->
            fun (x2413 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2412) "unit"
                (Ojs.string_to_js x2413)
        let (get_unitDisplay :
          'tags this ->
            [ `L_s56_long  | `L_s68_narrow  | `L_s89_short ] option)
          =
          fun (x2415 : 'tags this) ->
            Ojs.option_of_js
              (fun (x2417 : Ojs.t) ->
                 let x2418 = x2417 in
                 match Ojs.string_of_js x2418 with
                 | "long" -> `L_s56_long
                 | "narrow" -> `L_s68_narrow
                 | "short" -> `L_s89_short
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2415) "unitDisplay")
        let (set_unitDisplay :
          'tags this ->
            [ `U1 of [ `L_s89_short ]  | `U2 of [ `L_s56_long ] 
            | `U3 of [ `L_s68_narrow ] ] -> unit)
          =
          fun (x2419 : 'tags this) ->
            fun
              (x2420 :
                [ `U1 of [ `L_s89_short ]  | `U2 of [ `L_s56_long ] 
                | `U3 of [ `L_s68_narrow ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2419) "unitDisplay"
                (match x2420 with
                 | `U1 x2421 ->
                     (match x2421 with
                      | `L_s89_short -> Ojs.string_to_js "short")
                 | `U2 x2422 ->
                     (match x2422 with
                      | `L_s56_long -> Ojs.string_to_js "long")
                 | `U3 x2423 ->
                     (match x2423 with
                      | `L_s68_narrow -> Ojs.string_to_js "narrow"))
        let (get_currencyDisplay : 'tags this -> string option) =
          fun (x2425 : 'tags this) ->
            Ojs.option_of_js Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2425)
                 "currencyDisplay")
        let (set_currencyDisplay : 'tags this -> string -> unit) =
          fun (x2428 : 'tags this) ->
            fun (x2429 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2428)
                "currencyDisplay" (Ojs.string_to_js x2429)
        let (get_currencySign : 'tags this -> string option) =
          fun (x2431 : 'tags this) ->
            Ojs.option_of_js Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2431) "currencySign")
        let (set_currencySign : 'tags this -> string -> unit) =
          fun (x2434 : 'tags this) ->
            fun (x2435 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2434) "currencySign"
                (Ojs.string_to_js x2435)
        let (get_locale : 'tags this -> string) =
          fun (x2437 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2437) "locale")
        let (set_locale : 'tags this -> string -> unit) =
          fun (x2439 : 'tags this) ->
            fun (x2440 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2439) "locale"
                (Ojs.string_to_js x2440)
        let (get_numberingSystem : 'tags this -> string) =
          fun (x2442 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2442)
                 "numberingSystem")
        let (set_numberingSystem : 'tags this -> string -> unit) =
          fun (x2444 : 'tags this) ->
            fun (x2445 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2444)
                "numberingSystem" (Ojs.string_to_js x2445)
        let (get_style : 'tags this -> string) =
          fun (x2447 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2447) "style")
        let (set_style : 'tags this -> string -> unit) =
          fun (x2449 : 'tags this) ->
            fun (x2450 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2449) "style"
                (Ojs.string_to_js x2450)
        let (get_currency : 'tags this -> string option) =
          fun (x2452 : 'tags this) ->
            Ojs.option_of_js Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2452) "currency")
        let (set_currency : 'tags this -> string -> unit) =
          fun (x2455 : 'tags this) ->
            fun (x2456 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2455) "currency"
                (Ojs.string_to_js x2456)
        let (get_minimumIntegerDigits : 'tags this -> float) =
          fun (x2458 : 'tags this) ->
            Ojs.float_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2458)
                 "minimumIntegerDigits")
        let (set_minimumIntegerDigits : 'tags this -> float -> unit) =
          fun (x2460 : 'tags this) ->
            fun (x2461 : float) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2460)
                "minimumIntegerDigits" (Ojs.float_to_js x2461)
        let (get_minimumFractionDigits : 'tags this -> float) =
          fun (x2463 : 'tags this) ->
            Ojs.float_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2463)
                 "minimumFractionDigits")
        let (set_minimumFractionDigits : 'tags this -> float -> unit) =
          fun (x2465 : 'tags this) ->
            fun (x2466 : float) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2465)
                "minimumFractionDigits" (Ojs.float_to_js x2466)
        let (get_maximumFractionDigits : 'tags this -> float) =
          fun (x2468 : 'tags this) ->
            Ojs.float_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2468)
                 "maximumFractionDigits")
        let (set_maximumFractionDigits : 'tags this -> float -> unit) =
          fun (x2470 : 'tags this) ->
            fun (x2471 : float) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2470)
                "maximumFractionDigits" (Ojs.float_to_js x2471)
        let (get_minimumSignificantDigits : 'tags this -> float option) =
          fun (x2473 : 'tags this) ->
            Ojs.option_of_js Ojs.float_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2473)
                 "minimumSignificantDigits")
        let (set_minimumSignificantDigits : 'tags this -> float -> unit) =
          fun (x2476 : 'tags this) ->
            fun (x2477 : float) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2476)
                "minimumSignificantDigits" (Ojs.float_to_js x2477)
        let (get_maximumSignificantDigits : 'tags this -> float option) =
          fun (x2479 : 'tags this) ->
            Ojs.option_of_js Ojs.float_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2479)
                 "maximumSignificantDigits")
        let (set_maximumSignificantDigits : 'tags this -> float -> unit) =
          fun (x2482 : 'tags this) ->
            fun (x2483 : float) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2482)
                "maximumSignificantDigits" (Ojs.float_to_js x2483)
        let (get_useGrouping : 'tags this -> bool) =
          fun (x2485 : 'tags this) ->
            Ojs.bool_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2485) "useGrouping")
        let (set_useGrouping : 'tags this -> bool -> unit) =
          fun (x2487 : 'tags this) ->
            fun (x2488 : bool) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2487) "useGrouping"
                (Ojs.bool_to_js x2488)
        let (create :
          ?compactDisplay:[ `L_s56_long  | `L_s89_short ] ->
            ?notation:[ `L_s27_compact  | `L_s34_engineering 
                      | `L_s85_scientific  | `L_s90_standard ]
              ->
              ?signDisplay:[ `L_s21_always  | `L_s22_auto 
                           | `L_s36_exceptZero  | `L_s69_never ]
                ->
                ?unit:string ->
                  ?unitDisplay:[ `L_s56_long  | `L_s68_narrow 
                               | `L_s89_short ]
                    ->
                    ?currencyDisplay:string ->
                      ?currencySign:string ->
                        locale:string ->
                          numberingSystem:string ->
                            style:string ->
                              ?currency:string ->
                                minimumIntegerDigits:float ->
                                  minimumFractionDigits:float ->
                                    maximumFractionDigits:float ->
                                      ?minimumSignificantDigits:float ->
                                        ?maximumSignificantDigits:float ->
                                          useGrouping:bool -> unit -> t)
          =
          fun
            ?compactDisplay:(x2490 : [ `L_s56_long  | `L_s89_short ] option)
            ->
            fun
              ?notation:(x2491 :
                          [ `L_s27_compact  | `L_s34_engineering 
                          | `L_s85_scientific  | `L_s90_standard ] option)
              ->
              fun
                ?signDisplay:(x2492 :
                               [ `L_s21_always  | `L_s22_auto 
                               | `L_s36_exceptZero  | `L_s69_never ] option)
                ->
                fun ?unit:(x2493 : string option) ->
                  fun
                    ?unitDisplay:(x2494 :
                                   [ `L_s56_long  | `L_s68_narrow 
                                   | `L_s89_short ] option)
                    ->
                    fun ?currencyDisplay:(x2495 : string option) ->
                      fun ?currencySign:(x2496 : string option) ->
                        fun ~locale:(x2497 : string) ->
                          fun ~numberingSystem:(x2498 : string) ->
                            fun ~style:(x2499 : string) ->
                              fun ?currency:(x2500 : string option) ->
                                fun ~minimumIntegerDigits:(x2501 : float) ->
                                  fun ~minimumFractionDigits:(x2502 : float)
                                    ->
                                    fun
                                      ~maximumFractionDigits:(x2503 : float)
                                      ->
                                      fun
                                        ?minimumSignificantDigits:(x2504 :
                                                                    float
                                                                    option)
                                        ->
                                        fun
                                          ?maximumSignificantDigits:(x2505 :
                                                                    float
                                                                    option)
                                          ->
                                          fun ~useGrouping:(x2506 : bool) ->
                                            fun () ->
                                              let x2507 = Ojs.empty_obj () in
                                              (match x2490 with
                                               | Some x2517 ->
                                                   Ojs.set_prop_ascii x2507
                                                     "compactDisplay"
                                                     (match x2517 with
                                                      | `L_s56_long ->
                                                          Ojs.string_to_js
                                                            "long"
                                                      | `L_s89_short ->
                                                          Ojs.string_to_js
                                                            "short")
                                               | None -> ());
                                              (match x2491 with
                                               | Some x2516 ->
                                                   Ojs.set_prop_ascii x2507
                                                     "notation"
                                                     (match x2516 with
                                                      | `L_s27_compact ->
                                                          Ojs.string_to_js
                                                            "compact"
                                                      | `L_s34_engineering ->
                                                          Ojs.string_to_js
                                                            "engineering"
                                                      | `L_s85_scientific ->
                                                          Ojs.string_to_js
                                                            "scientific"
                                                      | `L_s90_standard ->
                                                          Ojs.string_to_js
                                                            "standard")
                                               | None -> ());
                                              (match x2492 with
                                               | Some x2515 ->
                                                   Ojs.set_prop_ascii x2507
                                                     "signDisplay"
                                                     (match x2515 with
                                                      | `L_s21_always ->
                                                          Ojs.string_to_js
                                                            "always"
                                                      | `L_s22_auto ->
                                                          Ojs.string_to_js
                                                            "auto"
                                                      | `L_s36_exceptZero ->
                                                          Ojs.string_to_js
                                                            "exceptZero"
                                                      | `L_s69_never ->
                                                          Ojs.string_to_js
                                                            "never")
                                               | None -> ());
                                              (match x2493 with
                                               | Some x2514 ->
                                                   Ojs.set_prop_ascii x2507
                                                     "unit"
                                                     (Ojs.string_to_js x2514)
                                               | None -> ());
                                              (match x2494 with
                                               | Some x2513 ->
                                                   Ojs.set_prop_ascii x2507
                                                     "unitDisplay"
                                                     (match x2513 with
                                                      | `L_s56_long ->
                                                          Ojs.string_to_js
                                                            "long"
                                                      | `L_s68_narrow ->
                                                          Ojs.string_to_js
                                                            "narrow"
                                                      | `L_s89_short ->
                                                          Ojs.string_to_js
                                                            "short")
                                               | None -> ());
                                              (match x2495 with
                                               | Some x2512 ->
                                                   Ojs.set_prop_ascii x2507
                                                     "currencyDisplay"
                                                     (Ojs.string_to_js x2512)
                                               | None -> ());
                                              (match x2496 with
                                               | Some x2511 ->
                                                   Ojs.set_prop_ascii x2507
                                                     "currencySign"
                                                     (Ojs.string_to_js x2511)
                                               | None -> ());
                                              Ojs.set_prop_ascii x2507
                                                "locale"
                                                (Ojs.string_to_js x2497);
                                              Ojs.set_prop_ascii x2507
                                                "numberingSystem"
                                                (Ojs.string_to_js x2498);
                                              Ojs.set_prop_ascii x2507
                                                "style"
                                                (Ojs.string_to_js x2499);
                                              (match x2500 with
                                               | Some x2510 ->
                                                   Ojs.set_prop_ascii x2507
                                                     "currency"
                                                     (Ojs.string_to_js x2510)
                                               | None -> ());
                                              Ojs.set_prop_ascii x2507
                                                "minimumIntegerDigits"
                                                (Ojs.float_to_js x2501);
                                              Ojs.set_prop_ascii x2507
                                                "minimumFractionDigits"
                                                (Ojs.float_to_js x2502);
                                              Ojs.set_prop_ascii x2507
                                                "maximumFractionDigits"
                                                (Ojs.float_to_js x2503);
                                              (match x2504 with
                                               | Some x2509 ->
                                                   Ojs.set_prop_ascii x2507
                                                     "minimumSignificantDigits"
                                                     (Ojs.float_to_js x2509)
                                               | None -> ());
                                              (match x2505 with
                                               | Some x2508 ->
                                                   Ojs.set_prop_ascii x2507
                                                     "maximumSignificantDigits"
                                                     (Ojs.float_to_js x2508)
                                               | None -> ());
                                              Ojs.set_prop_ascii x2507
                                                "useGrouping"
                                                (Ojs.bool_to_js x2506);
                                              t_of_js x2507
        let cast_from = Obj.magic
      end
    module ES2020NumberFormatPartType =
      struct
        type t =
          [ `L_s27_compact  | `L_s37_exponentInteger 
          | `L_s38_exponentMinusSign  | `L_s39_exponentSeparator 
          | `L_s96_unit  | `L_s97_unknown ]
        let rec t_of_js : Ojs.t -> t =
          fun (x2519 : Ojs.t) ->
            let x2520 = x2519 in
            match Ojs.string_of_js x2520 with
            | "compact" -> `L_s27_compact
            | "exponentInteger" -> `L_s37_exponentInteger
            | "exponentMinusSign" -> `L_s38_exponentMinusSign
            | "exponentSeparator" -> `L_s39_exponentSeparator
            | "unit" -> `L_s96_unit
            | "unknown" -> `L_s97_unknown
            | _ -> assert false
        and t_to_js : t -> Ojs.t =
          fun
            (x2518 :
              [ `L_s27_compact  | `L_s37_exponentInteger 
              | `L_s38_exponentMinusSign  | `L_s39_exponentSeparator 
              | `L_s96_unit  | `L_s97_unknown ])
            ->
            match x2518 with
            | `L_s27_compact -> Ojs.string_to_js "compact"
            | `L_s37_exponentInteger -> Ojs.string_to_js "exponentInteger"
            | `L_s38_exponentMinusSign ->
                Ojs.string_to_js "exponentMinusSign"
            | `L_s39_exponentSeparator ->
                Ojs.string_to_js "exponentSeparator"
            | `L_s96_unit -> Ojs.string_to_js "unit"
            | `L_s97_unknown -> Ojs.string_to_js "unknown"
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x2522 : Ojs.t) -> t_of_js x2522
        and t_0_to_js : t_0 -> Ojs.t = fun (x2521 : t) -> t_to_js x2521
      end
    module ES2018NumberFormatPartType =
      struct
        type t =
          [ `L_s26_code  | `L_s28_currency  | `L_s32_decimal 
          | `L_s42_fraction  | `L_s45_group  | `L_s52_infinity 
          | `L_s53_integer  | `L_s55_literal  | `L_s61_minusSign 
          | `L_s66_name  | `L_s67_nan  | `L_s78_percent 
          | `L_s79_percentSign  | `L_s80_plusSign  | `L_s92_symbol ]
        let rec t_of_js : Ojs.t -> t =
          fun (x2524 : Ojs.t) ->
            let x2525 = x2524 in
            match Ojs.string_of_js x2525 with
            | "code" -> `L_s26_code
            | "currency" -> `L_s28_currency
            | "decimal" -> `L_s32_decimal
            | "fraction" -> `L_s42_fraction
            | "group" -> `L_s45_group
            | "infinity" -> `L_s52_infinity
            | "integer" -> `L_s53_integer
            | "literal" -> `L_s55_literal
            | "minusSign" -> `L_s61_minusSign
            | "name" -> `L_s66_name
            | "nan" -> `L_s67_nan
            | "percent" -> `L_s78_percent
            | "percentSign" -> `L_s79_percentSign
            | "plusSign" -> `L_s80_plusSign
            | "symbol" -> `L_s92_symbol
            | _ -> assert false
        and t_to_js : t -> Ojs.t =
          fun
            (x2523 :
              [ `L_s26_code  | `L_s28_currency  | `L_s32_decimal 
              | `L_s42_fraction  | `L_s45_group  | `L_s52_infinity 
              | `L_s53_integer  | `L_s55_literal  | `L_s61_minusSign 
              | `L_s66_name  | `L_s67_nan  | `L_s78_percent 
              | `L_s79_percentSign  | `L_s80_plusSign  | `L_s92_symbol ])
            ->
            match x2523 with
            | `L_s26_code -> Ojs.string_to_js "code"
            | `L_s28_currency -> Ojs.string_to_js "currency"
            | `L_s32_decimal -> Ojs.string_to_js "decimal"
            | `L_s42_fraction -> Ojs.string_to_js "fraction"
            | `L_s45_group -> Ojs.string_to_js "group"
            | `L_s52_infinity -> Ojs.string_to_js "infinity"
            | `L_s53_integer -> Ojs.string_to_js "integer"
            | `L_s55_literal -> Ojs.string_to_js "literal"
            | `L_s61_minusSign -> Ojs.string_to_js "minusSign"
            | `L_s66_name -> Ojs.string_to_js "name"
            | `L_s67_nan -> Ojs.string_to_js "nan"
            | `L_s78_percent -> Ojs.string_to_js "percent"
            | `L_s79_percentSign -> Ojs.string_to_js "percentSign"
            | `L_s80_plusSign -> Ojs.string_to_js "plusSign"
            | `L_s92_symbol -> Ojs.string_to_js "symbol"
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x2527 : Ojs.t) -> t_of_js x2527
        and t_0_to_js : t_0 -> Ojs.t = fun (x2526 : t) -> t_to_js x2526
      end
    module NumberFormatPartTypes =
      struct
        type t =
          [ `L_s26_code  | `L_s27_compact  | `L_s28_currency 
          | `L_s32_decimal  | `L_s37_exponentInteger 
          | `L_s38_exponentMinusSign  | `L_s39_exponentSeparator 
          | `L_s42_fraction  | `L_s45_group  | `L_s52_infinity 
          | `L_s53_integer  | `L_s55_literal  | `L_s61_minusSign 
          | `L_s66_name  | `L_s67_nan  | `L_s78_percent 
          | `L_s79_percentSign  | `L_s80_plusSign  | `L_s92_symbol 
          | `L_s96_unit  | `L_s97_unknown ]
        let rec t_of_js : Ojs.t -> t =
          fun (x2529 : Ojs.t) ->
            let x2530 = x2529 in
            match Ojs.string_of_js x2530 with
            | "code" -> `L_s26_code
            | "compact" -> `L_s27_compact
            | "currency" -> `L_s28_currency
            | "decimal" -> `L_s32_decimal
            | "exponentInteger" -> `L_s37_exponentInteger
            | "exponentMinusSign" -> `L_s38_exponentMinusSign
            | "exponentSeparator" -> `L_s39_exponentSeparator
            | "fraction" -> `L_s42_fraction
            | "group" -> `L_s45_group
            | "infinity" -> `L_s52_infinity
            | "integer" -> `L_s53_integer
            | "literal" -> `L_s55_literal
            | "minusSign" -> `L_s61_minusSign
            | "name" -> `L_s66_name
            | "nan" -> `L_s67_nan
            | "percent" -> `L_s78_percent
            | "percentSign" -> `L_s79_percentSign
            | "plusSign" -> `L_s80_plusSign
            | "symbol" -> `L_s92_symbol
            | "unit" -> `L_s96_unit
            | "unknown" -> `L_s97_unknown
            | _ -> assert false
        and t_to_js : t -> Ojs.t =
          fun
            (x2528 :
              [ `L_s26_code  | `L_s27_compact  | `L_s28_currency 
              | `L_s32_decimal  | `L_s37_exponentInteger 
              | `L_s38_exponentMinusSign  | `L_s39_exponentSeparator 
              | `L_s42_fraction  | `L_s45_group  | `L_s52_infinity 
              | `L_s53_integer  | `L_s55_literal  | `L_s61_minusSign 
              | `L_s66_name  | `L_s67_nan  | `L_s78_percent 
              | `L_s79_percentSign  | `L_s80_plusSign  | `L_s92_symbol 
              | `L_s96_unit  | `L_s97_unknown ])
            ->
            match x2528 with
            | `L_s26_code -> Ojs.string_to_js "code"
            | `L_s27_compact -> Ojs.string_to_js "compact"
            | `L_s28_currency -> Ojs.string_to_js "currency"
            | `L_s32_decimal -> Ojs.string_to_js "decimal"
            | `L_s37_exponentInteger -> Ojs.string_to_js "exponentInteger"
            | `L_s38_exponentMinusSign ->
                Ojs.string_to_js "exponentMinusSign"
            | `L_s39_exponentSeparator ->
                Ojs.string_to_js "exponentSeparator"
            | `L_s42_fraction -> Ojs.string_to_js "fraction"
            | `L_s45_group -> Ojs.string_to_js "group"
            | `L_s52_infinity -> Ojs.string_to_js "infinity"
            | `L_s53_integer -> Ojs.string_to_js "integer"
            | `L_s55_literal -> Ojs.string_to_js "literal"
            | `L_s61_minusSign -> Ojs.string_to_js "minusSign"
            | `L_s66_name -> Ojs.string_to_js "name"
            | `L_s67_nan -> Ojs.string_to_js "nan"
            | `L_s78_percent -> Ojs.string_to_js "percent"
            | `L_s79_percentSign -> Ojs.string_to_js "percentSign"
            | `L_s80_plusSign -> Ojs.string_to_js "plusSign"
            | `L_s92_symbol -> Ojs.string_to_js "symbol"
            | `L_s96_unit -> Ojs.string_to_js "unit"
            | `L_s97_unknown -> Ojs.string_to_js "unknown"
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x2532 : Ojs.t) -> t_of_js x2532
        and t_0_to_js : t_0 -> Ojs.t = fun (x2531 : t) -> t_to_js x2531
      end
    module NumberFormatPart =
      struct
        type t = [ `Intl_NumberFormatPart ] intf
        let rec t_of_js : Ojs.t -> t = Obj.magic
        and t_to_js : t -> Ojs.t = Obj.magic
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x2534 : Ojs.t) -> t_of_js x2534
        and t_0_to_js : t_0 -> Ojs.t = fun (x2533 : t) -> t_to_js x2533
        type tags = [ `Intl_NumberFormatPart ]
        type tags_0 = tags
        type 'tags this =
          'tags intf constraint 'tags = [> `Intl_NumberFormatPart ]
        let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
          =
          fun (type __tags) ->
            fun (__tags_of_js : Ojs.t -> __tags) ->
              fun (x2537 : Ojs.t) -> intf_of_js __tags_of_js x2537
        and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
          fun (type __tags) ->
            fun (__tags_to_js : __tags -> Ojs.t) ->
              fun (x2535 : __tags intf) -> intf_to_js __tags_to_js x2535
        let (get_type : 'tags this -> NumberFormatPartTypes.t) =
          fun (x2539 : 'tags this) ->
            NumberFormatPartTypes.t_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2539) "type")
        let (set_type : 'tags this -> NumberFormatPartTypes.t -> unit) =
          fun (x2541 : 'tags this) ->
            fun (x2542 : NumberFormatPartTypes.t) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2541) "type"
                (NumberFormatPartTypes.t_to_js x2542)
        let (get_value : 'tags this -> string) =
          fun (x2544 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2544) "value")
        let (set_value : 'tags this -> string -> unit) =
          fun (x2546 : 'tags this) ->
            fun (x2547 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2546) "value"
                (Ojs.string_to_js x2547)
        let (create :
          type_:NumberFormatPartTypes.t -> value:string -> unit -> t) =
          fun ~type_:(x2549 : NumberFormatPartTypes.t) ->
            fun ~value:(x2550 : string) ->
              fun () ->
                let x2551 = Ojs.empty_obj () in
                Ojs.set_prop_ascii x2551 "type"
                  (NumberFormatPartTypes.t_to_js x2549);
                Ojs.set_prop_ascii x2551 "value" (Ojs.string_to_js x2550);
                t_of_js x2551
        let cast_from = Obj.magic
      end
    module NumberFormatOptions =
      struct
        type t = [ `Intl_NumberFormatOptions ] intf
        let rec t_of_js : Ojs.t -> t = Obj.magic
        and t_to_js : t -> Ojs.t = Obj.magic
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x2553 : Ojs.t) -> t_of_js x2553
        and t_0_to_js : t_0 -> Ojs.t = fun (x2552 : t) -> t_to_js x2552
        type tags = [ `Intl_NumberFormatOptions ]
        type tags_0 = tags
        type 'tags this =
          'tags intf constraint 'tags = [> `Intl_NumberFormatOptions ]
        let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
          =
          fun (type __tags) ->
            fun (__tags_of_js : Ojs.t -> __tags) ->
              fun (x2556 : Ojs.t) -> intf_of_js __tags_of_js x2556
        and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
          fun (type __tags) ->
            fun (__tags_to_js : __tags -> Ojs.t) ->
              fun (x2554 : __tags intf) -> intf_to_js __tags_to_js x2554
        let (get_compactDisplay :
          'tags this -> [ `L_s56_long  | `L_s89_short ] option option) =
          fun (x2558 : 'tags this) ->
            Ojs.option_of_js
              (fun (x2560 : Ojs.t) ->
                 Ojs.option_of_js
                   (fun (x2561 : Ojs.t) ->
                      let x2562 = x2561 in
                      match Ojs.string_of_js x2562 with
                      | "long" -> `L_s56_long
                      | "short" -> `L_s89_short
                      | _ -> assert false) x2560)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2558)
                 "compactDisplay")
        let (set_compactDisplay :
          'tags this ->
            [ `Undefined of undefined  | `U1 of [ `L_s89_short ] 
            | `U2 of [ `L_s56_long ] ] -> unit)
          =
          fun (x2563 : 'tags this) ->
            fun
              (x2564 :
                [ `Undefined of undefined  | `U1 of [ `L_s89_short ] 
                | `U2 of [ `L_s56_long ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2563)
                "compactDisplay"
                (match x2564 with
                 | `Undefined x2565 -> undefined_to_js x2565
                 | `U1 x2566 ->
                     (match x2566 with
                      | `L_s89_short -> Ojs.string_to_js "short")
                 | `U2 x2567 ->
                     (match x2567 with
                      | `L_s56_long -> Ojs.string_to_js "long"))
        let (get_notation :
          'tags this ->
            [ `L_s27_compact  | `L_s34_engineering  | `L_s85_scientific 
            | `L_s90_standard ] option option)
          =
          fun (x2569 : 'tags this) ->
            Ojs.option_of_js
              (fun (x2571 : Ojs.t) ->
                 Ojs.option_of_js
                   (fun (x2572 : Ojs.t) ->
                      let x2573 = x2572 in
                      match Ojs.string_of_js x2573 with
                      | "compact" -> `L_s27_compact
                      | "engineering" -> `L_s34_engineering
                      | "scientific" -> `L_s85_scientific
                      | "standard" -> `L_s90_standard
                      | _ -> assert false) x2571)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2569) "notation")
        let (set_notation :
          'tags this ->
            [ `Undefined of undefined  | `U1 of [ `L_s90_standard ] 
            | `U2 of [ `L_s85_scientific ]  | `U3 of [ `L_s34_engineering ] 
            | `U4 of [ `L_s27_compact ] ] -> unit)
          =
          fun (x2574 : 'tags this) ->
            fun
              (x2575 :
                [ `Undefined of undefined  | `U1 of [ `L_s90_standard ] 
                | `U2 of [ `L_s85_scientific ] 
                | `U3 of [ `L_s34_engineering ] 
                | `U4 of [ `L_s27_compact ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2574) "notation"
                (match x2575 with
                 | `Undefined x2576 -> undefined_to_js x2576
                 | `U1 x2577 ->
                     (match x2577 with
                      | `L_s90_standard -> Ojs.string_to_js "standard")
                 | `U2 x2578 ->
                     (match x2578 with
                      | `L_s85_scientific -> Ojs.string_to_js "scientific")
                 | `U3 x2579 ->
                     (match x2579 with
                      | `L_s34_engineering -> Ojs.string_to_js "engineering")
                 | `U4 x2580 ->
                     (match x2580 with
                      | `L_s27_compact -> Ojs.string_to_js "compact"))
        let (get_signDisplay :
          'tags this ->
            [ `L_s21_always  | `L_s22_auto  | `L_s36_exceptZero 
            | `L_s69_never ] option option)
          =
          fun (x2582 : 'tags this) ->
            Ojs.option_of_js
              (fun (x2584 : Ojs.t) ->
                 Ojs.option_of_js
                   (fun (x2585 : Ojs.t) ->
                      let x2586 = x2585 in
                      match Ojs.string_of_js x2586 with
                      | "always" -> `L_s21_always
                      | "auto" -> `L_s22_auto
                      | "exceptZero" -> `L_s36_exceptZero
                      | "never" -> `L_s69_never
                      | _ -> assert false) x2584)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2582) "signDisplay")
        let (set_signDisplay :
          'tags this ->
            [ `Undefined of undefined  | `U1 of [ `L_s22_auto ] 
            | `U2 of [ `L_s69_never ]  | `U3 of [ `L_s21_always ] 
            | `U4 of [ `L_s36_exceptZero ] ] -> unit)
          =
          fun (x2587 : 'tags this) ->
            fun
              (x2588 :
                [ `Undefined of undefined  | `U1 of [ `L_s22_auto ] 
                | `U2 of [ `L_s69_never ]  | `U3 of [ `L_s21_always ] 
                | `U4 of [ `L_s36_exceptZero ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2587) "signDisplay"
                (match x2588 with
                 | `Undefined x2589 -> undefined_to_js x2589
                 | `U1 x2590 ->
                     (match x2590 with
                      | `L_s22_auto -> Ojs.string_to_js "auto")
                 | `U2 x2591 ->
                     (match x2591 with
                      | `L_s69_never -> Ojs.string_to_js "never")
                 | `U3 x2592 ->
                     (match x2592 with
                      | `L_s21_always -> Ojs.string_to_js "always")
                 | `U4 x2593 ->
                     (match x2593 with
                      | `L_s36_exceptZero -> Ojs.string_to_js "exceptZero"))
        let (get_unit : 'tags this -> string option option) =
          fun (x2595 : 'tags this) ->
            Ojs.option_of_js
              (fun (x2597 : Ojs.t) -> Ojs.option_of_js Ojs.string_of_js x2597)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2595) "unit")
        let (set_unit :
          'tags this -> [ `Undefined of undefined  | `U1 of string ] -> unit)
          =
          fun (x2599 : 'tags this) ->
            fun (x2600 : [ `Undefined of undefined  | `U1 of string ]) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2599) "unit"
                (match x2600 with
                 | `Undefined x2601 -> undefined_to_js x2601
                 | `U1 x2602 -> Ojs.string_to_js x2602)
        let (get_unitDisplay :
          'tags this ->
            [ `L_s56_long  | `L_s68_narrow  | `L_s89_short ] option option)
          =
          fun (x2604 : 'tags this) ->
            Ojs.option_of_js
              (fun (x2606 : Ojs.t) ->
                 Ojs.option_of_js
                   (fun (x2607 : Ojs.t) ->
                      let x2608 = x2607 in
                      match Ojs.string_of_js x2608 with
                      | "long" -> `L_s56_long
                      | "narrow" -> `L_s68_narrow
                      | "short" -> `L_s89_short
                      | _ -> assert false) x2606)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2604) "unitDisplay")
        let (set_unitDisplay :
          'tags this ->
            [ `Undefined of undefined  | `U1 of [ `L_s89_short ] 
            | `U2 of [ `L_s56_long ]  | `U3 of [ `L_s68_narrow ] ] -> 
              unit)
          =
          fun (x2609 : 'tags this) ->
            fun
              (x2610 :
                [ `Undefined of undefined  | `U1 of [ `L_s89_short ] 
                | `U2 of [ `L_s56_long ]  | `U3 of [ `L_s68_narrow ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2609) "unitDisplay"
                (match x2610 with
                 | `Undefined x2611 -> undefined_to_js x2611
                 | `U1 x2612 ->
                     (match x2612 with
                      | `L_s89_short -> Ojs.string_to_js "short")
                 | `U2 x2613 ->
                     (match x2613 with
                      | `L_s56_long -> Ojs.string_to_js "long")
                 | `U3 x2614 ->
                     (match x2614 with
                      | `L_s68_narrow -> Ojs.string_to_js "narrow"))
        let (get_currencyDisplay : 'tags this -> string option option) =
          fun (x2616 : 'tags this) ->
            Ojs.option_of_js
              (fun (x2618 : Ojs.t) -> Ojs.option_of_js Ojs.string_of_js x2618)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2616)
                 "currencyDisplay")
        let (set_currencyDisplay :
          'tags this -> [ `Undefined of undefined  | `U1 of string ] -> unit)
          =
          fun (x2620 : 'tags this) ->
            fun (x2621 : [ `Undefined of undefined  | `U1 of string ]) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2620)
                "currencyDisplay"
                (match x2621 with
                 | `Undefined x2622 -> undefined_to_js x2622
                 | `U1 x2623 -> Ojs.string_to_js x2623)
        let (get_currencySign : 'tags this -> string option option) =
          fun (x2625 : 'tags this) ->
            Ojs.option_of_js
              (fun (x2627 : Ojs.t) -> Ojs.option_of_js Ojs.string_of_js x2627)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2625) "currencySign")
        let (set_currencySign :
          'tags this -> [ `Undefined of undefined  | `U1 of string ] -> unit)
          =
          fun (x2629 : 'tags this) ->
            fun (x2630 : [ `Undefined of undefined  | `U1 of string ]) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2629) "currencySign"
                (match x2630 with
                 | `Undefined x2631 -> undefined_to_js x2631
                 | `U1 x2632 -> Ojs.string_to_js x2632)
        let (get_localeMatcher : 'tags this -> string option option) =
          fun (x2634 : 'tags this) ->
            Ojs.option_of_js
              (fun (x2636 : Ojs.t) -> Ojs.option_of_js Ojs.string_of_js x2636)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2634)
                 "localeMatcher")
        let (set_localeMatcher :
          'tags this -> [ `Undefined of undefined  | `U1 of string ] -> unit)
          =
          fun (x2638 : 'tags this) ->
            fun (x2639 : [ `Undefined of undefined  | `U1 of string ]) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2638) "localeMatcher"
                (match x2639 with
                 | `Undefined x2640 -> undefined_to_js x2640
                 | `U1 x2641 -> Ojs.string_to_js x2641)
        let (get_style : 'tags this -> string option option) =
          fun (x2643 : 'tags this) ->
            Ojs.option_of_js
              (fun (x2645 : Ojs.t) -> Ojs.option_of_js Ojs.string_of_js x2645)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2643) "style")
        let (set_style :
          'tags this -> [ `Undefined of undefined  | `U1 of string ] -> unit)
          =
          fun (x2647 : 'tags this) ->
            fun (x2648 : [ `Undefined of undefined  | `U1 of string ]) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2647) "style"
                (match x2648 with
                 | `Undefined x2649 -> undefined_to_js x2649
                 | `U1 x2650 -> Ojs.string_to_js x2650)
        let (get_currency : 'tags this -> string option option) =
          fun (x2652 : 'tags this) ->
            Ojs.option_of_js
              (fun (x2654 : Ojs.t) -> Ojs.option_of_js Ojs.string_of_js x2654)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2652) "currency")
        let (set_currency :
          'tags this -> [ `Undefined of undefined  | `U1 of string ] -> unit)
          =
          fun (x2656 : 'tags this) ->
            fun (x2657 : [ `Undefined of undefined  | `U1 of string ]) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2656) "currency"
                (match x2657 with
                 | `Undefined x2658 -> undefined_to_js x2658
                 | `U1 x2659 -> Ojs.string_to_js x2659)
        let (get_currencySign' : 'tags this -> string option option) =
          fun (x2661 : 'tags this) ->
            Ojs.option_of_js
              (fun (x2663 : Ojs.t) -> Ojs.option_of_js Ojs.string_of_js x2663)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2661) "currencySign")
        let (set_currencySign' :
          'tags this -> [ `Undefined of undefined  | `U1 of string ] -> unit)
          =
          fun (x2665 : 'tags this) ->
            fun (x2666 : [ `Undefined of undefined  | `U1 of string ]) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2665) "currencySign"
                (match x2666 with
                 | `Undefined x2667 -> undefined_to_js x2667
                 | `U1 x2668 -> Ojs.string_to_js x2668)
        let (get_useGrouping : 'tags this -> bool option option) =
          fun (x2670 : 'tags this) ->
            Ojs.option_of_js
              (fun (x2672 : Ojs.t) -> Ojs.option_of_js Ojs.bool_of_js x2672)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2670) "useGrouping")
        let (set_useGrouping :
          'tags this -> [ `Undefined of undefined  | `U1 of bool ] -> unit) =
          fun (x2674 : 'tags this) ->
            fun (x2675 : [ `Undefined of undefined  | `U1 of bool ]) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2674) "useGrouping"
                (match x2675 with
                 | `Undefined x2676 -> undefined_to_js x2676
                 | `U1 x2677 -> Ojs.bool_to_js x2677)
        let (get_minimumIntegerDigits : 'tags this -> float option option) =
          fun (x2679 : 'tags this) ->
            Ojs.option_of_js
              (fun (x2681 : Ojs.t) -> Ojs.option_of_js Ojs.float_of_js x2681)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2679)
                 "minimumIntegerDigits")
        let (set_minimumIntegerDigits :
          'tags this -> [ `Undefined of undefined  | `U1 of float ] -> unit)
          =
          fun (x2683 : 'tags this) ->
            fun (x2684 : [ `Undefined of undefined  | `U1 of float ]) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2683)
                "minimumIntegerDigits"
                (match x2684 with
                 | `Undefined x2685 -> undefined_to_js x2685
                 | `U1 x2686 -> Ojs.float_to_js x2686)
        let (get_minimumFractionDigits : 'tags this -> float option option) =
          fun (x2688 : 'tags this) ->
            Ojs.option_of_js
              (fun (x2690 : Ojs.t) -> Ojs.option_of_js Ojs.float_of_js x2690)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2688)
                 "minimumFractionDigits")
        let (set_minimumFractionDigits :
          'tags this -> [ `Undefined of undefined  | `U1 of float ] -> unit)
          =
          fun (x2692 : 'tags this) ->
            fun (x2693 : [ `Undefined of undefined  | `U1 of float ]) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2692)
                "minimumFractionDigits"
                (match x2693 with
                 | `Undefined x2694 -> undefined_to_js x2694
                 | `U1 x2695 -> Ojs.float_to_js x2695)
        let (get_maximumFractionDigits : 'tags this -> float option option) =
          fun (x2697 : 'tags this) ->
            Ojs.option_of_js
              (fun (x2699 : Ojs.t) -> Ojs.option_of_js Ojs.float_of_js x2699)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2697)
                 "maximumFractionDigits")
        let (set_maximumFractionDigits :
          'tags this -> [ `Undefined of undefined  | `U1 of float ] -> unit)
          =
          fun (x2701 : 'tags this) ->
            fun (x2702 : [ `Undefined of undefined  | `U1 of float ]) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2701)
                "maximumFractionDigits"
                (match x2702 with
                 | `Undefined x2703 -> undefined_to_js x2703
                 | `U1 x2704 -> Ojs.float_to_js x2704)
        let (get_minimumSignificantDigits :
          'tags this -> float option option) =
          fun (x2706 : 'tags this) ->
            Ojs.option_of_js
              (fun (x2708 : Ojs.t) -> Ojs.option_of_js Ojs.float_of_js x2708)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2706)
                 "minimumSignificantDigits")
        let (set_minimumSignificantDigits :
          'tags this -> [ `Undefined of undefined  | `U1 of float ] -> unit)
          =
          fun (x2710 : 'tags this) ->
            fun (x2711 : [ `Undefined of undefined  | `U1 of float ]) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2710)
                "minimumSignificantDigits"
                (match x2711 with
                 | `Undefined x2712 -> undefined_to_js x2712
                 | `U1 x2713 -> Ojs.float_to_js x2713)
        let (get_maximumSignificantDigits :
          'tags this -> float option option) =
          fun (x2715 : 'tags this) ->
            Ojs.option_of_js
              (fun (x2717 : Ojs.t) -> Ojs.option_of_js Ojs.float_of_js x2717)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2715)
                 "maximumSignificantDigits")
        let (set_maximumSignificantDigits :
          'tags this -> [ `Undefined of undefined  | `U1 of float ] -> unit)
          =
          fun (x2719 : 'tags this) ->
            fun (x2720 : [ `Undefined of undefined  | `U1 of float ]) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2719)
                "maximumSignificantDigits"
                (match x2720 with
                 | `Undefined x2721 -> undefined_to_js x2721
                 | `U1 x2722 -> Ojs.float_to_js x2722)
        let (create :
          ?compactDisplay:[ `L_s56_long  | `L_s89_short ] ->
            ?notation:[ `L_s27_compact  | `L_s34_engineering 
                      | `L_s85_scientific  | `L_s90_standard ]
              ->
              ?signDisplay:[ `L_s21_always  | `L_s22_auto 
                           | `L_s36_exceptZero  | `L_s69_never ]
                ->
                ?unit:string ->
                  ?unitDisplay:[ `L_s56_long  | `L_s68_narrow 
                               | `L_s89_short ]
                    ->
                    ?currencyDisplay:string ->
                      ?currencySign:string ->
                        ?localeMatcher:string ->
                          ?style:string ->
                            ?currency:string ->
                              ?currencySign:string ->
                                ?useGrouping:bool ->
                                  ?minimumIntegerDigits:float ->
                                    ?minimumFractionDigits:float ->
                                      ?maximumFractionDigits:float ->
                                        ?minimumSignificantDigits:float ->
                                          ?maximumSignificantDigits:float ->
                                            unit -> t)
          =
          fun
            ?compactDisplay:(x2724 : [ `L_s56_long  | `L_s89_short ] option)
            ->
            fun
              ?notation:(x2725 :
                          [ `L_s27_compact  | `L_s34_engineering 
                          | `L_s85_scientific  | `L_s90_standard ] option)
              ->
              fun
                ?signDisplay:(x2726 :
                               [ `L_s21_always  | `L_s22_auto 
                               | `L_s36_exceptZero  | `L_s69_never ] option)
                ->
                fun ?unit:(x2727 : string option) ->
                  fun
                    ?unitDisplay:(x2728 :
                                   [ `L_s56_long  | `L_s68_narrow 
                                   | `L_s89_short ] option)
                    ->
                    fun ?currencyDisplay:(x2729 : string option) ->
                      fun ?currencySign:(x2730 : string option) ->
                        fun ?localeMatcher:(x2731 : string option) ->
                          fun ?style:(x2732 : string option) ->
                            fun ?currency:(x2733 : string option) ->
                              fun ?currencySign:(x2734 : string option) ->
                                fun ?useGrouping:(x2735 : bool option) ->
                                  fun
                                    ?minimumIntegerDigits:(x2736 :
                                                            float option)
                                    ->
                                    fun
                                      ?minimumFractionDigits:(x2737 :
                                                               float option)
                                      ->
                                      fun
                                        ?maximumFractionDigits:(x2738 :
                                                                 float option)
                                        ->
                                        fun
                                          ?minimumSignificantDigits:(x2739 :
                                                                    float
                                                                    option)
                                          ->
                                          fun
                                            ?maximumSignificantDigits:
                                            (x2740 : float option) ->
                                            fun () ->
                                              let x2741 = Ojs.empty_obj () in
                                              (match x2724 with
                                               | Some x2758 ->
                                                   Ojs.set_prop_ascii x2741
                                                     "compactDisplay"
                                                     (match x2758 with
                                                      | `L_s56_long ->
                                                          Ojs.string_to_js
                                                            "long"
                                                      | `L_s89_short ->
                                                          Ojs.string_to_js
                                                            "short")
                                               | None -> ());
                                              (match x2725 with
                                               | Some x2757 ->
                                                   Ojs.set_prop_ascii x2741
                                                     "notation"
                                                     (match x2757 with
                                                      | `L_s27_compact ->
                                                          Ojs.string_to_js
                                                            "compact"
                                                      | `L_s34_engineering ->
                                                          Ojs.string_to_js
                                                            "engineering"
                                                      | `L_s85_scientific ->
                                                          Ojs.string_to_js
                                                            "scientific"
                                                      | `L_s90_standard ->
                                                          Ojs.string_to_js
                                                            "standard")
                                               | None -> ());
                                              (match x2726 with
                                               | Some x2756 ->
                                                   Ojs.set_prop_ascii x2741
                                                     "signDisplay"
                                                     (match x2756 with
                                                      | `L_s21_always ->
                                                          Ojs.string_to_js
                                                            "always"
                                                      | `L_s22_auto ->
                                                          Ojs.string_to_js
                                                            "auto"
                                                      | `L_s36_exceptZero ->
                                                          Ojs.string_to_js
                                                            "exceptZero"
                                                      | `L_s69_never ->
                                                          Ojs.string_to_js
                                                            "never")
                                               | None -> ());
                                              (match x2727 with
                                               | Some x2755 ->
                                                   Ojs.set_prop_ascii x2741
                                                     "unit"
                                                     (Ojs.string_to_js x2755)
                                               | None -> ());
                                              (match x2728 with
                                               | Some x2754 ->
                                                   Ojs.set_prop_ascii x2741
                                                     "unitDisplay"
                                                     (match x2754 with
                                                      | `L_s56_long ->
                                                          Ojs.string_to_js
                                                            "long"
                                                      | `L_s68_narrow ->
                                                          Ojs.string_to_js
                                                            "narrow"
                                                      | `L_s89_short ->
                                                          Ojs.string_to_js
                                                            "short")
                                               | None -> ());
                                              (match x2729 with
                                               | Some x2753 ->
                                                   Ojs.set_prop_ascii x2741
                                                     "currencyDisplay"
                                                     (Ojs.string_to_js x2753)
                                               | None -> ());
                                              (match x2730 with
                                               | Some x2752 ->
                                                   Ojs.set_prop_ascii x2741
                                                     "currencySign"
                                                     (Ojs.string_to_js x2752)
                                               | None -> ());
                                              (match x2731 with
                                               | Some x2751 ->
                                                   Ojs.set_prop_ascii x2741
                                                     "localeMatcher"
                                                     (Ojs.string_to_js x2751)
                                               | None -> ());
                                              (match x2732 with
                                               | Some x2750 ->
                                                   Ojs.set_prop_ascii x2741
                                                     "style"
                                                     (Ojs.string_to_js x2750)
                                               | None -> ());
                                              (match x2733 with
                                               | Some x2749 ->
                                                   Ojs.set_prop_ascii x2741
                                                     "currency"
                                                     (Ojs.string_to_js x2749)
                                               | None -> ());
                                              (match x2734 with
                                               | Some x2748 ->
                                                   Ojs.set_prop_ascii x2741
                                                     "currencySign"
                                                     (Ojs.string_to_js x2748)
                                               | None -> ());
                                              (match x2735 with
                                               | Some x2747 ->
                                                   Ojs.set_prop_ascii x2741
                                                     "useGrouping"
                                                     (Ojs.bool_to_js x2747)
                                               | None -> ());
                                              (match x2736 with
                                               | Some x2746 ->
                                                   Ojs.set_prop_ascii x2741
                                                     "minimumIntegerDigits"
                                                     (Ojs.float_to_js x2746)
                                               | None -> ());
                                              (match x2737 with
                                               | Some x2745 ->
                                                   Ojs.set_prop_ascii x2741
                                                     "minimumFractionDigits"
                                                     (Ojs.float_to_js x2745)
                                               | None -> ());
                                              (match x2738 with
                                               | Some x2744 ->
                                                   Ojs.set_prop_ascii x2741
                                                     "maximumFractionDigits"
                                                     (Ojs.float_to_js x2744)
                                               | None -> ());
                                              (match x2739 with
                                               | Some x2743 ->
                                                   Ojs.set_prop_ascii x2741
                                                     "minimumSignificantDigits"
                                                     (Ojs.float_to_js x2743)
                                               | None -> ());
                                              (match x2740 with
                                               | Some x2742 ->
                                                   Ojs.set_prop_ascii x2741
                                                     "maximumSignificantDigits"
                                                     (Ojs.float_to_js x2742)
                                               | None -> ());
                                              t_of_js x2741
        let cast_from = Obj.magic
      end
    module NumberFormat =
      struct
        type t = [ `Intl_NumberFormat ] intf
        let rec t_of_js : Ojs.t -> t = Obj.magic
        and t_to_js : t -> Ojs.t = Obj.magic
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x2760 : Ojs.t) -> t_of_js x2760
        and t_0_to_js : t_0 -> Ojs.t = fun (x2759 : t) -> t_to_js x2759
        type tags = [ `Intl_NumberFormat ]
        type tags_0 = tags
        type 'tags this =
          'tags intf constraint 'tags = [> `Intl_NumberFormat ]
        let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
          =
          fun (type __tags) ->
            fun (__tags_of_js : Ojs.t -> __tags) ->
              fun (x2763 : Ojs.t) -> intf_of_js __tags_of_js x2763
        and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
          fun (type __tags) ->
            fun (__tags_to_js : __tags -> Ojs.t) ->
              fun (x2761 : __tags intf) -> intf_to_js __tags_to_js x2761
        let (formatRange :
          'tags this ->
            startDate:[ `U1 of float  | `U2 of bigint ] ->
              endDate:[ `U1 of float  | `U2 of bigint ] -> string)
          =
          fun (x2771 : 'tags this) ->
            fun ~startDate:(x2765 : [ `U1 of float  | `U2 of bigint ]) ->
              fun ~endDate:(x2768 : [ `U1 of float  | `U2 of bigint ]) ->
                Ojs.string_of_js
                  (Ojs.call (this_to_js Obj.magic x2771) "formatRange"
                     [|((match x2765 with
                         | `U1 x2766 -> Ojs.float_to_js x2766
                         | `U2 x2767 -> bigint_to_js x2767));((match x2768
                                                               with
                                                               | `U1 x2769 ->
                                                                   Ojs.float_to_js
                                                                    x2769
                                                               | `U2 x2770 ->
                                                                   bigint_to_js
                                                                    x2770))|])
        let (formatRangeToParts :
          'tags this ->
            startDate:[ `U1 of float  | `U2 of bigint ] ->
              endDate:[ `U1 of float  | `U2 of bigint ] ->
                NumberFormatPart.t list)
          =
          fun (x2779 : 'tags this) ->
            fun ~startDate:(x2773 : [ `U1 of float  | `U2 of bigint ]) ->
              fun ~endDate:(x2776 : [ `U1 of float  | `U2 of bigint ]) ->
                Ojs.list_of_js NumberFormatPart.t_of_js
                  (Ojs.call (this_to_js Obj.magic x2779) "formatRangeToParts"
                     [|((match x2773 with
                         | `U1 x2774 -> Ojs.float_to_js x2774
                         | `U2 x2775 -> bigint_to_js x2775));((match x2776
                                                               with
                                                               | `U1 x2777 ->
                                                                   Ojs.float_to_js
                                                                    x2777
                                                               | `U2 x2778 ->
                                                                   bigint_to_js
                                                                    x2778))|])
        let (format :
          'tags this -> value:[ `U1 of float  | `U2 of bigint ] -> string) =
          fun (x2785 : 'tags this) ->
            fun ~value:(x2782 : [ `U1 of float  | `U2 of bigint ]) ->
              Ojs.string_of_js
                (Ojs.call (this_to_js Obj.magic x2785) "format"
                   [|((match x2782 with
                       | `U1 x2783 -> Ojs.float_to_js x2783
                       | `U2 x2784 -> bigint_to_js x2784))|])
        let (resolvedOptions : 'tags this -> ResolvedNumberFormatOptions.t) =
          fun (x2787 : 'tags this) ->
            ResolvedNumberFormatOptions.t_of_js
              (Ojs.call (this_to_js Obj.magic x2787) "resolvedOptions" [||])
        let (formatToParts :
          'tags this ->
            ?number:[ `U1 of float  | `U2 of bigint ] ->
              unit -> NumberFormatPart.t list)
          =
          fun (x2794 : 'tags this) ->
            fun ?number:(x2789 : [ `U1 of float  | `U2 of bigint ] option) ->
              fun () ->
                Ojs.list_of_js NumberFormatPart.t_of_js
                  (let x2796 = this_to_js Obj.magic x2794 in
                   Ojs.call (Ojs.get_prop_ascii x2796 "formatToParts")
                     "apply"
                     [|x2796;((let x2790 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               (match x2789 with
                                | Some x2791 ->
                                    ignore
                                      (Ojs.call x2790 "push"
                                         [|((match x2791 with
                                             | `U1 x2792 ->
                                                 Ojs.float_to_js x2792
                                             | `U2 x2793 ->
                                                 bigint_to_js x2793))|])
                                | None -> ());
                               x2790))|])
        let (format' : 'tags this -> value:float -> string) =
          fun (x2799 : 'tags this) ->
            fun ~value:(x2798 : float) ->
              Ojs.string_of_js
                (Ojs.call (this_to_js Obj.magic x2799) "format"
                   [|(Ojs.float_to_js x2798)|])
        let (resolvedOptions' : 'tags this -> ResolvedNumberFormatOptions.t)
          =
          fun (x2801 : 'tags this) ->
            ResolvedNumberFormatOptions.t_of_js
              (Ojs.call (this_to_js Obj.magic x2801) "resolvedOptions" [||])
        let cast_from = Obj.magic
        let (create :
          ?locales:[ `U1 of string  | `U2 of string list ] ->
            ?options:NumberFormatOptions.t -> unit -> t)
          =
          fun
            ?locales:(x2803 : [ `U1 of string  | `U2 of string list ] option)
            ->
            fun ?options:(x2804 : NumberFormatOptions.t option) ->
              fun () ->
                t_of_js
                  (Ojs.new_obj_arr
                     (Ojs.get_prop_ascii
                        (Ojs.get_prop_ascii Ojs.global "Intl") "NumberFormat")
                     (let x2805 =
                        Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                          [||] in
                      (match x2803 with
                       | Some x2807 ->
                           ignore
                             (Ojs.call x2805 "push"
                                [|((match x2807 with
                                    | `U1 x2808 -> Ojs.string_to_js x2808
                                    | `U2 x2809 ->
                                        Ojs.list_to_js Ojs.string_to_js x2809))|])
                       | None -> ());
                      (match x2804 with
                       | Some x2806 ->
                           ignore
                             (Ojs.call x2805 "push"
                                [|(NumberFormatOptions.t_to_js x2806)|])
                       | None -> ());
                      x2805))
        let (invoke :
          ?locales:[ `U1 of string  | `U2 of string list ] ->
            ?options:NumberFormatOptions.t -> unit -> t)
          =
          fun
            ?locales:(x2811 : [ `U1 of string  | `U2 of string list ] option)
            ->
            fun ?options:(x2812 : NumberFormatOptions.t option) ->
              fun () ->
                t_of_js
                  (Ojs.call
                     (Ojs.get_prop_ascii
                        (Ojs.get_prop_ascii Ojs.global "Intl") "NumberFormat")
                     "apply"
                     [|Ojs.null;((let x2813 =
                                    Ojs.new_obj
                                      (Ojs.get_prop_ascii Ojs.global "Array")
                                      [||] in
                                  (match x2811 with
                                   | Some x2815 ->
                                       ignore
                                         (Ojs.call x2813 "push"
                                            [|((match x2815 with
                                                | `U1 x2816 ->
                                                    Ojs.string_to_js x2816
                                                | `U2 x2817 ->
                                                    Ojs.list_to_js
                                                      Ojs.string_to_js x2817))|])
                                   | None -> ());
                                  (match x2812 with
                                   | Some x2814 ->
                                       ignore
                                         (Ojs.call x2813 "push"
                                            [|(NumberFormatOptions.t_to_js
                                                 x2814)|])
                                   | None -> ());
                                  x2813))|])
        let (supportedLocalesOf :
          locales:[ `U1 of string  | `U2 of string list ] ->
            ?options:NumberFormatOptions.t -> unit -> string list)
          =
          fun ~locales:(x2819 : [ `U1 of string  | `U2 of string list ]) ->
            fun ?options:(x2820 : NumberFormatOptions.t option) ->
              fun () ->
                Ojs.list_of_js Ojs.string_of_js
                  (let x2826 =
                     Ojs.get_prop_ascii
                       (Ojs.get_prop_ascii Ojs.global "Intl") "NumberFormat" in
                   Ojs.call (Ojs.get_prop_ascii x2826 "supportedLocalesOf")
                     "apply"
                     [|x2826;((let x2821 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x2821 "push"
                                    [|((match x2819 with
                                        | `U1 x2823 -> Ojs.string_to_js x2823
                                        | `U2 x2824 ->
                                            Ojs.list_to_js Ojs.string_to_js
                                              x2824))|]);
                               (match x2820 with
                                | Some x2822 ->
                                    ignore
                                      (Ojs.call x2821 "push"
                                         [|(NumberFormatOptions.t_to_js x2822)|])
                                | None -> ());
                               x2821))|])
      end
    module LocaleHourCycleKey =
      struct
        type t = [ `L_s46_h11  | `L_s47_h12  | `L_s48_h23  | `L_s49_h24 ]
        let rec t_of_js : Ojs.t -> t =
          fun (x2829 : Ojs.t) ->
            let x2830 = x2829 in
            match Ojs.string_of_js x2830 with
            | "h11" -> `L_s46_h11
            | "h12" -> `L_s47_h12
            | "h23" -> `L_s48_h23
            | "h24" -> `L_s49_h24
            | _ -> assert false
        and t_to_js : t -> Ojs.t =
          fun
            (x2828 :
              [ `L_s46_h11  | `L_s47_h12  | `L_s48_h23  | `L_s49_h24 ])
            ->
            match x2828 with
            | `L_s46_h11 -> Ojs.string_to_js "h11"
            | `L_s47_h12 -> Ojs.string_to_js "h12"
            | `L_s48_h23 -> Ojs.string_to_js "h23"
            | `L_s49_h24 -> Ojs.string_to_js "h24"
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x2832 : Ojs.t) -> t_of_js x2832
        and t_0_to_js : t_0 -> Ojs.t = fun (x2831 : t) -> t_to_js x2831
      end
    module LocaleCollationCaseFirst =
      struct
        type t = [ `L_s40_false  | `L_s58_lower  | `L_s98_upper ]
        let rec t_of_js : Ojs.t -> t =
          fun (x2834 : Ojs.t) ->
            let x2835 = x2834 in
            match Ojs.string_of_js x2835 with
            | "false" -> `L_s40_false
            | "lower" -> `L_s58_lower
            | "upper" -> `L_s98_upper
            | _ -> assert false
        and t_to_js : t -> Ojs.t =
          fun (x2833 : [ `L_s40_false  | `L_s58_lower  | `L_s98_upper ]) ->
            match x2833 with
            | `L_s40_false -> Ojs.string_to_js "false"
            | `L_s58_lower -> Ojs.string_to_js "lower"
            | `L_s98_upper -> Ojs.string_to_js "upper"
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x2837 : Ojs.t) -> t_of_js x2837
        and t_0_to_js : t_0 -> Ojs.t = fun (x2836 : t) -> t_to_js x2836
      end
    module LocaleOptions =
      struct
        type t = [ `Intl_LocaleOptions ] intf
        let rec t_of_js : Ojs.t -> t = Obj.magic
        and t_to_js : t -> Ojs.t = Obj.magic
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x2839 : Ojs.t) -> t_of_js x2839
        and t_0_to_js : t_0 -> Ojs.t = fun (x2838 : t) -> t_to_js x2838
        type tags = [ `Intl_LocaleOptions ]
        type tags_0 = tags
        type 'tags this =
          'tags intf constraint 'tags = [> `Intl_LocaleOptions ]
        let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
          =
          fun (type __tags) ->
            fun (__tags_of_js : Ojs.t -> __tags) ->
              fun (x2842 : Ojs.t) -> intf_of_js __tags_of_js x2842
        and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
          fun (type __tags) ->
            fun (__tags_to_js : __tags -> Ojs.t) ->
              fun (x2840 : __tags intf) -> intf_to_js __tags_to_js x2840
        let (get_baseName : 'tags this -> string option) =
          fun (x2844 : 'tags this) ->
            Ojs.option_of_js Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2844) "baseName")
        let (set_baseName : 'tags this -> string -> unit) =
          fun (x2847 : 'tags this) ->
            fun (x2848 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2847) "baseName"
                (Ojs.string_to_js x2848)
        let (get_calendar : 'tags this -> string option) =
          fun (x2850 : 'tags this) ->
            Ojs.option_of_js Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2850) "calendar")
        let (set_calendar : 'tags this -> string -> unit) =
          fun (x2853 : 'tags this) ->
            fun (x2854 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2853) "calendar"
                (Ojs.string_to_js x2854)
        let (get_caseFirst : 'tags this -> LocaleCollationCaseFirst.t option)
          =
          fun (x2856 : 'tags this) ->
            Ojs.option_of_js LocaleCollationCaseFirst.t_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2856) "caseFirst")
        let (set_caseFirst :
          'tags this -> LocaleCollationCaseFirst.t -> unit) =
          fun (x2859 : 'tags this) ->
            fun (x2860 : LocaleCollationCaseFirst.t) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2859) "caseFirst"
                (LocaleCollationCaseFirst.t_to_js x2860)
        let (get_collation : 'tags this -> string option) =
          fun (x2862 : 'tags this) ->
            Ojs.option_of_js Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2862) "collation")
        let (set_collation : 'tags this -> string -> unit) =
          fun (x2865 : 'tags this) ->
            fun (x2866 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2865) "collation"
                (Ojs.string_to_js x2866)
        let (get_hourCycle : 'tags this -> LocaleHourCycleKey.t option) =
          fun (x2868 : 'tags this) ->
            Ojs.option_of_js LocaleHourCycleKey.t_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2868) "hourCycle")
        let (set_hourCycle : 'tags this -> LocaleHourCycleKey.t -> unit) =
          fun (x2871 : 'tags this) ->
            fun (x2872 : LocaleHourCycleKey.t) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2871) "hourCycle"
                (LocaleHourCycleKey.t_to_js x2872)
        let (get_language : 'tags this -> string option) =
          fun (x2874 : 'tags this) ->
            Ojs.option_of_js Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2874) "language")
        let (set_language : 'tags this -> string -> unit) =
          fun (x2877 : 'tags this) ->
            fun (x2878 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2877) "language"
                (Ojs.string_to_js x2878)
        let (get_numberingSystem : 'tags this -> string option) =
          fun (x2880 : 'tags this) ->
            Ojs.option_of_js Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2880)
                 "numberingSystem")
        let (set_numberingSystem : 'tags this -> string -> unit) =
          fun (x2883 : 'tags this) ->
            fun (x2884 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2883)
                "numberingSystem" (Ojs.string_to_js x2884)
        let (get_numeric : 'tags this -> bool option) =
          fun (x2886 : 'tags this) ->
            Ojs.option_of_js Ojs.bool_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2886) "numeric")
        let (set_numeric : 'tags this -> bool -> unit) =
          fun (x2889 : 'tags this) ->
            fun (x2890 : bool) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2889) "numeric"
                (Ojs.bool_to_js x2890)
        let (get_region : 'tags this -> string option) =
          fun (x2892 : 'tags this) ->
            Ojs.option_of_js Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2892) "region")
        let (set_region : 'tags this -> string -> unit) =
          fun (x2895 : 'tags this) ->
            fun (x2896 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2895) "region"
                (Ojs.string_to_js x2896)
        let (get_script : 'tags this -> string option) =
          fun (x2898 : 'tags this) ->
            Ojs.option_of_js Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2898) "script")
        let (set_script : 'tags this -> string -> unit) =
          fun (x2901 : 'tags this) ->
            fun (x2902 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2901) "script"
                (Ojs.string_to_js x2902)
        let (create :
          ?baseName:string ->
            ?calendar:string ->
              ?caseFirst:LocaleCollationCaseFirst.t ->
                ?collation:string ->
                  ?hourCycle:LocaleHourCycleKey.t ->
                    ?language:string ->
                      ?numberingSystem:string ->
                        ?numeric:bool ->
                          ?region:string -> ?script:string -> unit -> t)
          =
          fun ?baseName:(x2904 : string option) ->
            fun ?calendar:(x2905 : string option) ->
              fun ?caseFirst:(x2906 : LocaleCollationCaseFirst.t option) ->
                fun ?collation:(x2907 : string option) ->
                  fun ?hourCycle:(x2908 : LocaleHourCycleKey.t option) ->
                    fun ?language:(x2909 : string option) ->
                      fun ?numberingSystem:(x2910 : string option) ->
                        fun ?numeric:(x2911 : bool option) ->
                          fun ?region:(x2912 : string option) ->
                            fun ?script:(x2913 : string option) ->
                              fun () ->
                                let x2914 = Ojs.empty_obj () in
                                (match x2904 with
                                 | Some x2924 ->
                                     Ojs.set_prop_ascii x2914 "baseName"
                                       (Ojs.string_to_js x2924)
                                 | None -> ());
                                (match x2905 with
                                 | Some x2923 ->
                                     Ojs.set_prop_ascii x2914 "calendar"
                                       (Ojs.string_to_js x2923)
                                 | None -> ());
                                (match x2906 with
                                 | Some x2922 ->
                                     Ojs.set_prop_ascii x2914 "caseFirst"
                                       (LocaleCollationCaseFirst.t_to_js
                                          x2922)
                                 | None -> ());
                                (match x2907 with
                                 | Some x2921 ->
                                     Ojs.set_prop_ascii x2914 "collation"
                                       (Ojs.string_to_js x2921)
                                 | None -> ());
                                (match x2908 with
                                 | Some x2920 ->
                                     Ojs.set_prop_ascii x2914 "hourCycle"
                                       (LocaleHourCycleKey.t_to_js x2920)
                                 | None -> ());
                                (match x2909 with
                                 | Some x2919 ->
                                     Ojs.set_prop_ascii x2914 "language"
                                       (Ojs.string_to_js x2919)
                                 | None -> ());
                                (match x2910 with
                                 | Some x2918 ->
                                     Ojs.set_prop_ascii x2914
                                       "numberingSystem"
                                       (Ojs.string_to_js x2918)
                                 | None -> ());
                                (match x2911 with
                                 | Some x2917 ->
                                     Ojs.set_prop_ascii x2914 "numeric"
                                       (Ojs.bool_to_js x2917)
                                 | None -> ());
                                (match x2912 with
                                 | Some x2916 ->
                                     Ojs.set_prop_ascii x2914 "region"
                                       (Ojs.string_to_js x2916)
                                 | None -> ());
                                (match x2913 with
                                 | Some x2915 ->
                                     Ojs.set_prop_ascii x2914 "script"
                                       (Ojs.string_to_js x2915)
                                 | None -> ());
                                t_of_js x2914
        let cast_from = Obj.magic
      end
    module BCP47LanguageTag =
      struct
        type t = string
        let rec t_of_js : Ojs.t -> t =
          fun (x2926 : Ojs.t) -> Ojs.string_of_js x2926
        and t_to_js : t -> Ojs.t =
          fun (x2925 : string) -> Ojs.string_to_js x2925
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x2928 : Ojs.t) -> t_of_js x2928
        and t_0_to_js : t_0 -> Ojs.t = fun (x2927 : t) -> t_to_js x2927
      end
    module Locale =
      struct
        type t = [ `Intl_Locale  | `Intl_LocaleOptions ] intf
        let rec t_of_js : Ojs.t -> t = Obj.magic
        and t_to_js : t -> Ojs.t = Obj.magic
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x2930 : Ojs.t) -> t_of_js x2930
        and t_0_to_js : t_0 -> Ojs.t = fun (x2929 : t) -> t_to_js x2929
        type tags = [ `Intl_Locale  | `Intl_LocaleOptions ]
        type tags_0 = tags
        type 'tags this = 'tags intf constraint 'tags = [> `Intl_Locale ]
        let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
          =
          fun (type __tags) ->
            fun (__tags_of_js : Ojs.t -> __tags) ->
              fun (x2933 : Ojs.t) -> intf_of_js __tags_of_js x2933
        and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
          fun (type __tags) ->
            fun (__tags_to_js : __tags -> Ojs.t) ->
              fun (x2931 : __tags intf) -> intf_to_js __tags_to_js x2931
        let (maximize : 'tags this -> t) =
          fun (x2935 : 'tags this) ->
            t_of_js (Ojs.call (this_to_js Obj.magic x2935) "maximize" [||])
        let (minimize : 'tags this -> t) =
          fun (x2937 : 'tags this) ->
            t_of_js (Ojs.call (this_to_js Obj.magic x2937) "minimize" [||])
        let (toString : 'tags this -> BCP47LanguageTag.t) =
          fun (x2939 : 'tags this) ->
            BCP47LanguageTag.t_of_js
              (Ojs.call (this_to_js Obj.magic x2939) "toString" [||])
        let cast_from = Obj.magic
        let (create :
          ?tag:BCP47LanguageTag.t -> ?options:LocaleOptions.t -> unit -> t) =
          fun ?tag:(x2941 : BCP47LanguageTag.t option) ->
            fun ?options:(x2942 : LocaleOptions.t option) ->
              fun () ->
                t_of_js
                  (Ojs.new_obj_arr
                     (Ojs.get_prop_ascii
                        (Ojs.get_prop_ascii Ojs.global "Intl") "Locale")
                     (let x2943 =
                        Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                          [||] in
                      (match x2941 with
                       | Some x2945 ->
                           ignore
                             (Ojs.call x2943 "push"
                                [|(BCP47LanguageTag.t_to_js x2945)|])
                       | None -> ());
                      (match x2942 with
                       | Some x2944 ->
                           ignore
                             (Ojs.call x2943 "push"
                                [|(LocaleOptions.t_to_js x2944)|])
                       | None -> ());
                      x2943))
      end
    module DisplayNamesOptions =
      struct
        type t = [ `Intl_DisplayNamesOptions ] intf
        let rec t_of_js : Ojs.t -> t = Obj.magic
        and t_to_js : t -> Ojs.t = Obj.magic
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x2947 : Ojs.t) -> t_of_js x2947
        and t_0_to_js : t_0 -> Ojs.t = fun (x2946 : t) -> t_to_js x2946
        type tags = [ `Intl_DisplayNamesOptions ]
        type tags_0 = tags
        type 'tags this =
          'tags intf constraint 'tags = [> `Intl_DisplayNamesOptions ]
        let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
          =
          fun (type __tags) ->
            fun (__tags_of_js : Ojs.t -> __tags) ->
              fun (x2950 : Ojs.t) -> intf_of_js __tags_of_js x2950
        and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
          fun (type __tags) ->
            fun (__tags_to_js : __tags -> Ojs.t) ->
              fun (x2948 : __tags intf) -> intf_to_js __tags_to_js x2948
        let (get_locale : 'tags this -> UnicodeBCP47LocaleIdentifier.t) =
          fun (x2952 : 'tags this) ->
            UnicodeBCP47LocaleIdentifier.t_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2952) "locale")
        let (set_locale :
          'tags this -> UnicodeBCP47LocaleIdentifier.t -> unit) =
          fun (x2954 : 'tags this) ->
            fun (x2955 : UnicodeBCP47LocaleIdentifier.t) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2954) "locale"
                (UnicodeBCP47LocaleIdentifier.t_to_js x2955)
        let (get_localeMatcher :
          'tags this -> RelativeTimeFormatLocaleMatcher.t) =
          fun (x2957 : 'tags this) ->
            RelativeTimeFormatLocaleMatcher.t_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2957)
                 "localeMatcher")
        let (set_localeMatcher :
          'tags this -> RelativeTimeFormatLocaleMatcher.t -> unit) =
          fun (x2959 : 'tags this) ->
            fun (x2960 : RelativeTimeFormatLocaleMatcher.t) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2959) "localeMatcher"
                (RelativeTimeFormatLocaleMatcher.t_to_js x2960)
        let (get_style : 'tags this -> RelativeTimeFormatStyle.t) =
          fun (x2962 : 'tags this) ->
            RelativeTimeFormatStyle.t_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2962) "style")
        let (set_style : 'tags this -> RelativeTimeFormatStyle.t -> unit) =
          fun (x2964 : 'tags this) ->
            fun (x2965 : RelativeTimeFormatStyle.t) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2964) "style"
                (RelativeTimeFormatStyle.t_to_js x2965)
        let (get_type :
          'tags this ->
            [ `L_s28_currency  | `L_s54_language  | `L_s83_region 
            | `L_s86_script ])
          =
          fun (x2967 : 'tags this) ->
            let x2969 =
              Ojs.get_prop_ascii (this_to_js Obj.magic x2967) "type" in
            match Ojs.string_of_js x2969 with
            | "currency" -> `L_s28_currency
            | "language" -> `L_s54_language
            | "region" -> `L_s83_region
            | "script" -> `L_s86_script
            | _ -> assert false
        let (set_type :
          'tags this ->
            [ `U1 of [ `L_s54_language ]  | `U2 of [ `L_s83_region ] 
            | `U3 of [ `L_s86_script ]  | `U4 of [ `L_s28_currency ] ] ->
              unit)
          =
          fun (x2970 : 'tags this) ->
            fun
              (x2971 :
                [ `U1 of [ `L_s54_language ]  | `U2 of [ `L_s83_region ] 
                | `U3 of [ `L_s86_script ]  | `U4 of [ `L_s28_currency ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2970) "type"
                (match x2971 with
                 | `U1 x2972 ->
                     (match x2972 with
                      | `L_s54_language -> Ojs.string_to_js "language")
                 | `U2 x2973 ->
                     (match x2973 with
                      | `L_s83_region -> Ojs.string_to_js "region")
                 | `U3 x2974 ->
                     (match x2974 with
                      | `L_s86_script -> Ojs.string_to_js "script")
                 | `U4 x2975 ->
                     (match x2975 with
                      | `L_s28_currency -> Ojs.string_to_js "currency"))
        let (get_fallback : 'tags this -> [ `L_s26_code  | `L_s70_none ]) =
          fun (x2977 : 'tags this) ->
            let x2979 =
              Ojs.get_prop_ascii (this_to_js Obj.magic x2977) "fallback" in
            match Ojs.string_of_js x2979 with
            | "code" -> `L_s26_code
            | "none" -> `L_s70_none
            | _ -> assert false
        let (set_fallback :
          'tags this ->
            [ `U1 of [ `L_s26_code ]  | `U2 of [ `L_s70_none ] ] -> unit)
          =
          fun (x2980 : 'tags this) ->
            fun
              (x2981 : [ `U1 of [ `L_s26_code ]  | `U2 of [ `L_s70_none ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2980) "fallback"
                (match x2981 with
                 | `U1 x2982 ->
                     (match x2982 with
                      | `L_s26_code -> Ojs.string_to_js "code")
                 | `U2 x2983 ->
                     (match x2983 with
                      | `L_s70_none -> Ojs.string_to_js "none"))
        let (create :
          locale:UnicodeBCP47LocaleIdentifier.t ->
            localeMatcher:RelativeTimeFormatLocaleMatcher.t ->
              style:RelativeTimeFormatStyle.t ->
                type_:[ `L_s28_currency  | `L_s54_language  | `L_s83_region 
                      | `L_s86_script ]
                  -> fallback:[ `L_s26_code  | `L_s70_none ] -> unit -> t)
          =
          fun ~locale:(x2985 : UnicodeBCP47LocaleIdentifier.t) ->
            fun ~localeMatcher:(x2986 : RelativeTimeFormatLocaleMatcher.t) ->
              fun ~style:(x2987 : RelativeTimeFormatStyle.t) ->
                fun
                  ~type_:(x2988 :
                           [ `L_s28_currency  | `L_s54_language 
                           | `L_s83_region  | `L_s86_script ])
                  ->
                  fun ~fallback:(x2989 : [ `L_s26_code  | `L_s70_none ]) ->
                    fun () ->
                      let x2990 = Ojs.empty_obj () in
                      Ojs.set_prop_ascii x2990 "locale"
                        (UnicodeBCP47LocaleIdentifier.t_to_js x2985);
                      Ojs.set_prop_ascii x2990 "localeMatcher"
                        (RelativeTimeFormatLocaleMatcher.t_to_js x2986);
                      Ojs.set_prop_ascii x2990 "style"
                        (RelativeTimeFormatStyle.t_to_js x2987);
                      Ojs.set_prop_ascii x2990 "type"
                        (match x2988 with
                         | `L_s28_currency -> Ojs.string_to_js "currency"
                         | `L_s54_language -> Ojs.string_to_js "language"
                         | `L_s83_region -> Ojs.string_to_js "region"
                         | `L_s86_script -> Ojs.string_to_js "script");
                      Ojs.set_prop_ascii x2990 "fallback"
                        (match x2989 with
                         | `L_s26_code -> Ojs.string_to_js "code"
                         | `L_s70_none -> Ojs.string_to_js "none");
                      t_of_js x2990
        let cast_from = Obj.magic
      end
    module DisplayNames =
      struct
        module AnonymousInterface2 =
          struct
            type t = Ojs.t
            let rec t_of_js : Ojs.t -> t = fun (x2992 : Ojs.t) -> x2992
            and t_to_js : t -> Ojs.t = fun (x2991 : Ojs.t) -> x2991
            let (get_localeMatcher : t -> RelativeTimeFormatLocaleMatcher.t)
              =
              fun (x2993 : t) ->
                RelativeTimeFormatLocaleMatcher.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x2993) "localeMatcher")
            let (set_localeMatcher :
              t -> RelativeTimeFormatLocaleMatcher.t -> unit) =
              fun (x2994 : t) ->
                fun (x2995 : RelativeTimeFormatLocaleMatcher.t) ->
                  Ojs.set_prop_ascii (t_to_js x2994) "localeMatcher"
                    (RelativeTimeFormatLocaleMatcher.t_to_js x2995)
            let (create :
              localeMatcher:RelativeTimeFormatLocaleMatcher.t -> unit -> t) =
              fun ~localeMatcher:(x2996 : RelativeTimeFormatLocaleMatcher.t)
                ->
                fun () ->
                  let x2997 = Ojs.empty_obj () in
                  Ojs.set_prop_ascii x2997 "localeMatcher"
                    (RelativeTimeFormatLocaleMatcher.t_to_js x2996);
                  t_of_js x2997
          end
        type t = [ `Intl_DisplayNames ] intf
        let rec t_of_js : Ojs.t -> t = Obj.magic
        and t_to_js : t -> Ojs.t = Obj.magic
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x2999 : Ojs.t) -> t_of_js x2999
        and t_0_to_js : t_0 -> Ojs.t = fun (x2998 : t) -> t_to_js x2998
        type tags = [ `Intl_DisplayNames ]
        type tags_0 = tags
        type 'tags this =
          'tags intf constraint 'tags = [> `Intl_DisplayNames ]
        let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
          =
          fun (type __tags) ->
            fun (__tags_of_js : Ojs.t -> __tags) ->
              fun (x3002 : Ojs.t) -> intf_of_js __tags_of_js x3002
        and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
          fun (type __tags) ->
            fun (__tags_to_js : __tags -> Ojs.t) ->
              fun (x3000 : __tags intf) -> intf_to_js __tags_to_js x3000
        let (of_ : 'tags this -> code:string -> string option) =
          fun (x3005 : 'tags this) ->
            fun ~code:(x3004 : string) ->
              Ojs.option_of_js Ojs.string_of_js
                (Ojs.call (this_to_js Obj.magic x3005) "of"
                   [|(Ojs.string_to_js x3004)|])
        let (resolvedOptions : 'tags this -> DisplayNamesOptions.t) =
          fun (x3008 : 'tags this) ->
            DisplayNamesOptions.t_of_js
              (Ojs.call (this_to_js Obj.magic x3008) "resolvedOptions" [||])
        let cast_from = Obj.magic
        let (prototype : unit -> t) =
          fun () ->
            t_of_js
              (Ojs.get_prop_ascii
                 (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Intl")
                    "DisplayNames") "prototype")
        let (create :
          ?locales:[ `U1 of BCP47LanguageTag.t 
                   | `U2 of BCP47LanguageTag.t list ]
            -> ?options:DisplayNamesOptions.t Partial.t -> unit -> t)
          =
          fun
            ?locales:(x3010 :
                       [ `U1 of BCP47LanguageTag.t 
                       | `U2 of BCP47LanguageTag.t list ] option)
            ->
            fun ?options:(x3011 : DisplayNamesOptions.t Partial.t option) ->
              fun () ->
                t_of_js
                  (Ojs.new_obj_arr
                     (Ojs.get_prop_ascii
                        (Ojs.get_prop_ascii Ojs.global "Intl") "DisplayNames")
                     (let x3012 =
                        Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                          [||] in
                      (match x3010 with
                       | Some x3015 ->
                           ignore
                             (Ojs.call x3012 "push"
                                [|((match x3015 with
                                    | `U1 x3016 ->
                                        BCP47LanguageTag.t_to_js x3016
                                    | `U2 x3017 ->
                                        Ojs.list_to_js
                                          BCP47LanguageTag.t_to_js x3017))|])
                       | None -> ());
                      (match x3011 with
                       | Some x3013 ->
                           ignore
                             (Ojs.call x3012 "push"
                                [|(Partial.t_to_js
                                     DisplayNamesOptions.t_to_js x3013)|])
                       | None -> ());
                      x3012))
        let (supportedLocalesOf :
          locales:[ `U1 of BCP47LanguageTag.t 
                  | `U2 of BCP47LanguageTag.t list ]
            ->
            ?options:AnonymousInterface2.t -> unit -> BCP47LanguageTag.t list)
          =
          fun
            ~locales:(x3019 :
                       [ `U1 of BCP47LanguageTag.t 
                       | `U2 of BCP47LanguageTag.t list ])
            ->
            fun ?options:(x3020 : AnonymousInterface2.t option) ->
              fun () ->
                Ojs.list_of_js BCP47LanguageTag.t_of_js
                  (let x3026 =
                     Ojs.get_prop_ascii
                       (Ojs.get_prop_ascii Ojs.global "Intl") "DisplayNames" in
                   Ojs.call (Ojs.get_prop_ascii x3026 "supportedLocalesOf")
                     "apply"
                     [|x3026;((let x3021 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x3021 "push"
                                    [|((match x3019 with
                                        | `U1 x3023 ->
                                            BCP47LanguageTag.t_to_js x3023
                                        | `U2 x3024 ->
                                            Ojs.list_to_js
                                              BCP47LanguageTag.t_to_js x3024))|]);
                               (match x3020 with
                                | Some x3022 ->
                                    ignore
                                      (Ojs.call x3021 "push"
                                         [|(AnonymousInterface2.t_to_js x3022)|])
                                | None -> ());
                               x3021))|])
      end
    module ResolvedDateTimeFormatOptions =
      struct
        type t = [ `Intl_ResolvedDateTimeFormatOptions ] intf
        let rec t_of_js : Ojs.t -> t = Obj.magic
        and t_to_js : t -> Ojs.t = Obj.magic
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x3029 : Ojs.t) -> t_of_js x3029
        and t_0_to_js : t_0 -> Ojs.t = fun (x3028 : t) -> t_to_js x3028
        type tags = [ `Intl_ResolvedDateTimeFormatOptions ]
        type tags_0 = tags
        type 'tags this =
          'tags intf constraint 'tags =
                      [> `Intl_ResolvedDateTimeFormatOptions ]
        let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
          =
          fun (type __tags) ->
            fun (__tags_of_js : Ojs.t -> __tags) ->
              fun (x3032 : Ojs.t) -> intf_of_js __tags_of_js x3032
        and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
          fun (type __tags) ->
            fun (__tags_to_js : __tags -> Ojs.t) ->
              fun (x3030 : __tags intf) -> intf_to_js __tags_to_js x3030
        let (get_formatMatcher :
          'tags this -> [ `L_s23_basic  | `L_s24_best_fit ] option) =
          fun (x3034 : 'tags this) ->
            Ojs.option_of_js
              (fun (x3036 : Ojs.t) ->
                 let x3037 = x3036 in
                 match Ojs.string_of_js x3037 with
                 | "basic" -> `L_s23_basic
                 | "best fit" -> `L_s24_best_fit
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3034)
                 "formatMatcher")
        let (set_formatMatcher :
          'tags this ->
            [ `U1 of [ `L_s23_basic ]  | `U2 of [ `L_s24_best_fit ] 
            | `U3 of [ `L_s24_best_fit ] ] -> unit)
          =
          fun (x3038 : 'tags this) ->
            fun
              (x3039 :
                [ `U1 of [ `L_s23_basic ]  | `U2 of [ `L_s24_best_fit ] 
                | `U3 of [ `L_s24_best_fit ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3038) "formatMatcher"
                (match x3039 with
                 | `U1 x3040 ->
                     (match x3040 with
                      | `L_s23_basic -> Ojs.string_to_js "basic")
                 | `U2 x3041 ->
                     (match x3041 with
                      | `L_s24_best_fit -> Ojs.string_to_js "best fit")
                 | `U3 x3042 ->
                     (match x3042 with
                      | `L_s24_best_fit -> Ojs.string_to_js "best fit"))
        let (get_dateStyle :
          'tags this ->
            [ `L_s44_full  | `L_s56_long  | `L_s60_medium  | `L_s89_short ]
              option)
          =
          fun (x3044 : 'tags this) ->
            Ojs.option_of_js
              (fun (x3046 : Ojs.t) ->
                 let x3047 = x3046 in
                 match Ojs.string_of_js x3047 with
                 | "full" -> `L_s44_full
                 | "long" -> `L_s56_long
                 | "medium" -> `L_s60_medium
                 | "short" -> `L_s89_short
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3044) "dateStyle")
        let (set_dateStyle :
          'tags this ->
            [ `U1 of [ `L_s44_full ]  | `U2 of [ `L_s56_long ] 
            | `U3 of [ `L_s60_medium ]  | `U4 of [ `L_s89_short ] ] -> 
              unit)
          =
          fun (x3048 : 'tags this) ->
            fun
              (x3049 :
                [ `U1 of [ `L_s44_full ]  | `U2 of [ `L_s56_long ] 
                | `U3 of [ `L_s60_medium ]  | `U4 of [ `L_s89_short ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3048) "dateStyle"
                (match x3049 with
                 | `U1 x3050 ->
                     (match x3050 with
                      | `L_s44_full -> Ojs.string_to_js "full")
                 | `U2 x3051 ->
                     (match x3051 with
                      | `L_s56_long -> Ojs.string_to_js "long")
                 | `U3 x3052 ->
                     (match x3052 with
                      | `L_s60_medium -> Ojs.string_to_js "medium")
                 | `U4 x3053 ->
                     (match x3053 with
                      | `L_s89_short -> Ojs.string_to_js "short"))
        let (get_timeStyle :
          'tags this ->
            [ `L_s44_full  | `L_s56_long  | `L_s60_medium  | `L_s89_short ]
              option)
          =
          fun (x3055 : 'tags this) ->
            Ojs.option_of_js
              (fun (x3057 : Ojs.t) ->
                 let x3058 = x3057 in
                 match Ojs.string_of_js x3058 with
                 | "full" -> `L_s44_full
                 | "long" -> `L_s56_long
                 | "medium" -> `L_s60_medium
                 | "short" -> `L_s89_short
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3055) "timeStyle")
        let (set_timeStyle :
          'tags this ->
            [ `U1 of [ `L_s44_full ]  | `U2 of [ `L_s56_long ] 
            | `U3 of [ `L_s60_medium ]  | `U4 of [ `L_s89_short ] ] -> 
              unit)
          =
          fun (x3059 : 'tags this) ->
            fun
              (x3060 :
                [ `U1 of [ `L_s44_full ]  | `U2 of [ `L_s56_long ] 
                | `U3 of [ `L_s60_medium ]  | `U4 of [ `L_s89_short ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3059) "timeStyle"
                (match x3060 with
                 | `U1 x3061 ->
                     (match x3061 with
                      | `L_s44_full -> Ojs.string_to_js "full")
                 | `U2 x3062 ->
                     (match x3062 with
                      | `L_s56_long -> Ojs.string_to_js "long")
                 | `U3 x3063 ->
                     (match x3063 with
                      | `L_s60_medium -> Ojs.string_to_js "medium")
                 | `U4 x3064 ->
                     (match x3064 with
                      | `L_s89_short -> Ojs.string_to_js "short"))
        let (get_hourCycle :
          'tags this ->
            [ `L_s46_h11  | `L_s47_h12  | `L_s48_h23  | `L_s49_h24 ] option)
          =
          fun (x3066 : 'tags this) ->
            Ojs.option_of_js
              (fun (x3068 : Ojs.t) ->
                 let x3069 = x3068 in
                 match Ojs.string_of_js x3069 with
                 | "h11" -> `L_s46_h11
                 | "h12" -> `L_s47_h12
                 | "h23" -> `L_s48_h23
                 | "h24" -> `L_s49_h24
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3066) "hourCycle")
        let (set_hourCycle :
          'tags this ->
            [ `U1 of [ `L_s46_h11 ]  | `U2 of [ `L_s47_h12 ] 
            | `U3 of [ `L_s48_h23 ]  | `U4 of [ `L_s49_h24 ] ] -> unit)
          =
          fun (x3070 : 'tags this) ->
            fun
              (x3071 :
                [ `U1 of [ `L_s46_h11 ]  | `U2 of [ `L_s47_h12 ] 
                | `U3 of [ `L_s48_h23 ]  | `U4 of [ `L_s49_h24 ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3070) "hourCycle"
                (match x3071 with
                 | `U1 x3072 ->
                     (match x3072 with | `L_s46_h11 -> Ojs.string_to_js "h11")
                 | `U2 x3073 ->
                     (match x3073 with | `L_s47_h12 -> Ojs.string_to_js "h12")
                 | `U3 x3074 ->
                     (match x3074 with | `L_s48_h23 -> Ojs.string_to_js "h23")
                 | `U4 x3075 ->
                     (match x3075 with | `L_s49_h24 -> Ojs.string_to_js "h24"))
        let (get_dayPeriod :
          'tags this ->
            [ `L_s56_long  | `L_s68_narrow  | `L_s89_short ] option)
          =
          fun (x3077 : 'tags this) ->
            Ojs.option_of_js
              (fun (x3079 : Ojs.t) ->
                 let x3080 = x3079 in
                 match Ojs.string_of_js x3080 with
                 | "long" -> `L_s56_long
                 | "narrow" -> `L_s68_narrow
                 | "short" -> `L_s89_short
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3077) "dayPeriod")
        let (set_dayPeriod :
          'tags this ->
            [ `U1 of [ `L_s68_narrow ]  | `U2 of [ `L_s89_short ] 
            | `U3 of [ `L_s56_long ] ] -> unit)
          =
          fun (x3081 : 'tags this) ->
            fun
              (x3082 :
                [ `U1 of [ `L_s68_narrow ]  | `U2 of [ `L_s89_short ] 
                | `U3 of [ `L_s56_long ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3081) "dayPeriod"
                (match x3082 with
                 | `U1 x3083 ->
                     (match x3083 with
                      | `L_s68_narrow -> Ojs.string_to_js "narrow")
                 | `U2 x3084 ->
                     (match x3084 with
                      | `L_s89_short -> Ojs.string_to_js "short")
                 | `U3 x3085 ->
                     (match x3085 with
                      | `L_s56_long -> Ojs.string_to_js "long"))
        let (get_fractionalSecondDigits :
          'tags this -> [ `L_n_0  | `L_n_1  | `L_n_2  | `L_n_3 ] option) =
          fun (x3087 : 'tags this) ->
            Ojs.option_of_js
              (fun (x3089 : Ojs.t) ->
                 let x3090 = x3089 in
                 match Ojs.int_of_js x3090 with
                 | 0 -> `L_n_0
                 | 1 -> `L_n_1
                 | 2 -> `L_n_2
                 | 3 -> `L_n_3
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3087)
                 "fractionalSecondDigits")
        let (set_fractionalSecondDigits :
          'tags this ->
            [ `U1 of [ `L_n_0 ]  | `U2 of [ `L_n_1 ]  | `U3 of [ `L_n_2 ] 
            | `U4 of [ `L_n_3 ] ] -> unit)
          =
          fun (x3091 : 'tags this) ->
            fun
              (x3092 :
                [ `U1 of [ `L_n_0 ]  | `U2 of [ `L_n_1 ] 
                | `U3 of [ `L_n_2 ]  | `U4 of [ `L_n_3 ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3091)
                "fractionalSecondDigits"
                (match x3092 with
                 | `U1 x3093 ->
                     (match x3093 with | `L_n_0 -> Ojs.int_to_js 0)
                 | `U2 x3094 ->
                     (match x3094 with | `L_n_1 -> Ojs.int_to_js 1)
                 | `U3 x3095 ->
                     (match x3095 with | `L_n_2 -> Ojs.int_to_js 2)
                 | `U4 x3096 ->
                     (match x3096 with | `L_n_3 -> Ojs.int_to_js 3))
        let (get_locale : 'tags this -> string) =
          fun (x3098 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3098) "locale")
        let (set_locale : 'tags this -> string -> unit) =
          fun (x3100 : 'tags this) ->
            fun (x3101 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3100) "locale"
                (Ojs.string_to_js x3101)
        let (get_calendar : 'tags this -> string) =
          fun (x3103 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3103) "calendar")
        let (set_calendar : 'tags this -> string -> unit) =
          fun (x3105 : 'tags this) ->
            fun (x3106 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3105) "calendar"
                (Ojs.string_to_js x3106)
        let (get_numberingSystem : 'tags this -> string) =
          fun (x3108 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3108)
                 "numberingSystem")
        let (set_numberingSystem : 'tags this -> string -> unit) =
          fun (x3110 : 'tags this) ->
            fun (x3111 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3110)
                "numberingSystem" (Ojs.string_to_js x3111)
        let (get_timeZone : 'tags this -> string) =
          fun (x3113 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3113) "timeZone")
        let (set_timeZone : 'tags this -> string -> unit) =
          fun (x3115 : 'tags this) ->
            fun (x3116 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3115) "timeZone"
                (Ojs.string_to_js x3116)
        let (get_hour12 : 'tags this -> bool option) =
          fun (x3118 : 'tags this) ->
            Ojs.option_of_js Ojs.bool_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3118) "hour12")
        let (set_hour12 : 'tags this -> bool -> unit) =
          fun (x3121 : 'tags this) ->
            fun (x3122 : bool) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3121) "hour12"
                (Ojs.bool_to_js x3122)
        let (get_weekday : 'tags this -> string option) =
          fun (x3124 : 'tags this) ->
            Ojs.option_of_js Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3124) "weekday")
        let (set_weekday : 'tags this -> string -> unit) =
          fun (x3127 : 'tags this) ->
            fun (x3128 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3127) "weekday"
                (Ojs.string_to_js x3128)
        let (get_era : 'tags this -> string option) =
          fun (x3130 : 'tags this) ->
            Ojs.option_of_js Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3130) "era")
        let (set_era : 'tags this -> string -> unit) =
          fun (x3133 : 'tags this) ->
            fun (x3134 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3133) "era"
                (Ojs.string_to_js x3134)
        let (get_year : 'tags this -> string option) =
          fun (x3136 : 'tags this) ->
            Ojs.option_of_js Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3136) "year")
        let (set_year : 'tags this -> string -> unit) =
          fun (x3139 : 'tags this) ->
            fun (x3140 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3139) "year"
                (Ojs.string_to_js x3140)
        let (get_month : 'tags this -> string option) =
          fun (x3142 : 'tags this) ->
            Ojs.option_of_js Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3142) "month")
        let (set_month : 'tags this -> string -> unit) =
          fun (x3145 : 'tags this) ->
            fun (x3146 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3145) "month"
                (Ojs.string_to_js x3146)
        let (get_day : 'tags this -> string option) =
          fun (x3148 : 'tags this) ->
            Ojs.option_of_js Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3148) "day")
        let (set_day : 'tags this -> string -> unit) =
          fun (x3151 : 'tags this) ->
            fun (x3152 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3151) "day"
                (Ojs.string_to_js x3152)
        let (get_hour : 'tags this -> string option) =
          fun (x3154 : 'tags this) ->
            Ojs.option_of_js Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3154) "hour")
        let (set_hour : 'tags this -> string -> unit) =
          fun (x3157 : 'tags this) ->
            fun (x3158 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3157) "hour"
                (Ojs.string_to_js x3158)
        let (get_minute : 'tags this -> string option) =
          fun (x3160 : 'tags this) ->
            Ojs.option_of_js Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3160) "minute")
        let (set_minute : 'tags this -> string -> unit) =
          fun (x3163 : 'tags this) ->
            fun (x3164 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3163) "minute"
                (Ojs.string_to_js x3164)
        let (get_second : 'tags this -> string option) =
          fun (x3166 : 'tags this) ->
            Ojs.option_of_js Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3166) "second")
        let (set_second : 'tags this -> string -> unit) =
          fun (x3169 : 'tags this) ->
            fun (x3170 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3169) "second"
                (Ojs.string_to_js x3170)
        let (get_timeZoneName : 'tags this -> string option) =
          fun (x3172 : 'tags this) ->
            Ojs.option_of_js Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3172) "timeZoneName")
        let (set_timeZoneName : 'tags this -> string -> unit) =
          fun (x3175 : 'tags this) ->
            fun (x3176 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3175) "timeZoneName"
                (Ojs.string_to_js x3176)
        let (create :
          ?formatMatcher:[ `L_s23_basic  | `L_s24_best_fit ] ->
            ?dateStyle:[ `L_s44_full  | `L_s56_long  | `L_s60_medium 
                       | `L_s89_short ]
              ->
              ?timeStyle:[ `L_s44_full  | `L_s56_long  | `L_s60_medium 
                         | `L_s89_short ]
                ->
                ?hourCycle:[ `L_s46_h11  | `L_s47_h12  | `L_s48_h23 
                           | `L_s49_h24 ]
                  ->
                  ?dayPeriod:[ `L_s56_long  | `L_s68_narrow  | `L_s89_short ]
                    ->
                    ?fractionalSecondDigits:[ `L_n_0  | `L_n_1  | `L_n_2 
                                            | `L_n_3 ]
                      ->
                      locale:string ->
                        calendar:string ->
                          numberingSystem:string ->
                            timeZone:string ->
                              ?hour12:bool ->
                                ?weekday:string ->
                                  ?era:string ->
                                    ?year:string ->
                                      ?month:string ->
                                        ?day:string ->
                                          ?hour:string ->
                                            ?minute:string ->
                                              ?second:string ->
                                                ?timeZoneName:string ->
                                                  unit -> t)
          =
          fun
            ?formatMatcher:(x3178 :
                             [ `L_s23_basic  | `L_s24_best_fit ] option)
            ->
            fun
              ?dateStyle:(x3179 :
                           [ `L_s44_full  | `L_s56_long  | `L_s60_medium 
                           | `L_s89_short ] option)
              ->
              fun
                ?timeStyle:(x3180 :
                             [ `L_s44_full  | `L_s56_long  | `L_s60_medium 
                             | `L_s89_short ] option)
                ->
                fun
                  ?hourCycle:(x3181 :
                               [ `L_s46_h11  | `L_s47_h12  | `L_s48_h23 
                               | `L_s49_h24 ] option)
                  ->
                  fun
                    ?dayPeriod:(x3182 :
                                 [ `L_s56_long  | `L_s68_narrow 
                                 | `L_s89_short ] option)
                    ->
                    fun
                      ?fractionalSecondDigits:(x3183 :
                                                [ `L_n_0  | `L_n_1  | 
                                                  `L_n_2 
                                                | `L_n_3 ] option)
                      ->
                      fun ~locale:(x3184 : string) ->
                        fun ~calendar:(x3185 : string) ->
                          fun ~numberingSystem:(x3186 : string) ->
                            fun ~timeZone:(x3187 : string) ->
                              fun ?hour12:(x3188 : bool option) ->
                                fun ?weekday:(x3189 : string option) ->
                                  fun ?era:(x3190 : string option) ->
                                    fun ?year:(x3191 : string option) ->
                                      fun ?month:(x3192 : string option) ->
                                        fun ?day:(x3193 : string option) ->
                                          fun ?hour:(x3194 : string option)
                                            ->
                                            fun
                                              ?minute:(x3195 : string option)
                                              ->
                                              fun
                                                ?second:(x3196 :
                                                          string option)
                                                ->
                                                fun
                                                  ?timeZoneName:(x3197 :
                                                                  string
                                                                    option)
                                                  ->
                                                  fun () ->
                                                    let x3198 =
                                                      Ojs.empty_obj () in
                                                    (match x3178 with
                                                     | Some x3214 ->
                                                         Ojs.set_prop_ascii
                                                           x3198
                                                           "formatMatcher"
                                                           (match x3214 with
                                                            | `L_s23_basic ->
                                                                Ojs.string_to_js
                                                                  "basic"
                                                            | `L_s24_best_fit
                                                                ->
                                                                Ojs.string_to_js
                                                                  "best fit")
                                                     | None -> ());
                                                    (match x3179 with
                                                     | Some x3213 ->
                                                         Ojs.set_prop_ascii
                                                           x3198 "dateStyle"
                                                           (match x3213 with
                                                            | `L_s44_full ->
                                                                Ojs.string_to_js
                                                                  "full"
                                                            | `L_s56_long ->
                                                                Ojs.string_to_js
                                                                  "long"
                                                            | `L_s60_medium
                                                                ->
                                                                Ojs.string_to_js
                                                                  "medium"
                                                            | `L_s89_short ->
                                                                Ojs.string_to_js
                                                                  "short")
                                                     | None -> ());
                                                    (match x3180 with
                                                     | Some x3212 ->
                                                         Ojs.set_prop_ascii
                                                           x3198 "timeStyle"
                                                           (match x3212 with
                                                            | `L_s44_full ->
                                                                Ojs.string_to_js
                                                                  "full"
                                                            | `L_s56_long ->
                                                                Ojs.string_to_js
                                                                  "long"
                                                            | `L_s60_medium
                                                                ->
                                                                Ojs.string_to_js
                                                                  "medium"
                                                            | `L_s89_short ->
                                                                Ojs.string_to_js
                                                                  "short")
                                                     | None -> ());
                                                    (match x3181 with
                                                     | Some x3211 ->
                                                         Ojs.set_prop_ascii
                                                           x3198 "hourCycle"
                                                           (match x3211 with
                                                            | `L_s46_h11 ->
                                                                Ojs.string_to_js
                                                                  "h11"
                                                            | `L_s47_h12 ->
                                                                Ojs.string_to_js
                                                                  "h12"
                                                            | `L_s48_h23 ->
                                                                Ojs.string_to_js
                                                                  "h23"
                                                            | `L_s49_h24 ->
                                                                Ojs.string_to_js
                                                                  "h24")
                                                     | None -> ());
                                                    (match x3182 with
                                                     | Some x3210 ->
                                                         Ojs.set_prop_ascii
                                                           x3198 "dayPeriod"
                                                           (match x3210 with
                                                            | `L_s56_long ->
                                                                Ojs.string_to_js
                                                                  "long"
                                                            | `L_s68_narrow
                                                                ->
                                                                Ojs.string_to_js
                                                                  "narrow"
                                                            | `L_s89_short ->
                                                                Ojs.string_to_js
                                                                  "short")
                                                     | None -> ());
                                                    (match x3183 with
                                                     | Some x3209 ->
                                                         Ojs.set_prop_ascii
                                                           x3198
                                                           "fractionalSecondDigits"
                                                           (match x3209 with
                                                            | `L_n_0 ->
                                                                Ojs.int_to_js
                                                                  0
                                                            | `L_n_1 ->
                                                                Ojs.int_to_js
                                                                  1
                                                            | `L_n_2 ->
                                                                Ojs.int_to_js
                                                                  2
                                                            | `L_n_3 ->
                                                                Ojs.int_to_js
                                                                  3)
                                                     | None -> ());
                                                    Ojs.set_prop_ascii x3198
                                                      "locale"
                                                      (Ojs.string_to_js x3184);
                                                    Ojs.set_prop_ascii x3198
                                                      "calendar"
                                                      (Ojs.string_to_js x3185);
                                                    Ojs.set_prop_ascii x3198
                                                      "numberingSystem"
                                                      (Ojs.string_to_js x3186);
                                                    Ojs.set_prop_ascii x3198
                                                      "timeZone"
                                                      (Ojs.string_to_js x3187);
                                                    (match x3188 with
                                                     | Some x3208 ->
                                                         Ojs.set_prop_ascii
                                                           x3198 "hour12"
                                                           (Ojs.bool_to_js
                                                              x3208)
                                                     | None -> ());
                                                    (match x3189 with
                                                     | Some x3207 ->
                                                         Ojs.set_prop_ascii
                                                           x3198 "weekday"
                                                           (Ojs.string_to_js
                                                              x3207)
                                                     | None -> ());
                                                    (match x3190 with
                                                     | Some x3206 ->
                                                         Ojs.set_prop_ascii
                                                           x3198 "era"
                                                           (Ojs.string_to_js
                                                              x3206)
                                                     | None -> ());
                                                    (match x3191 with
                                                     | Some x3205 ->
                                                         Ojs.set_prop_ascii
                                                           x3198 "year"
                                                           (Ojs.string_to_js
                                                              x3205)
                                                     | None -> ());
                                                    (match x3192 with
                                                     | Some x3204 ->
                                                         Ojs.set_prop_ascii
                                                           x3198 "month"
                                                           (Ojs.string_to_js
                                                              x3204)
                                                     | None -> ());
                                                    (match x3193 with
                                                     | Some x3203 ->
                                                         Ojs.set_prop_ascii
                                                           x3198 "day"
                                                           (Ojs.string_to_js
                                                              x3203)
                                                     | None -> ());
                                                    (match x3194 with
                                                     | Some x3202 ->
                                                         Ojs.set_prop_ascii
                                                           x3198 "hour"
                                                           (Ojs.string_to_js
                                                              x3202)
                                                     | None -> ());
                                                    (match x3195 with
                                                     | Some x3201 ->
                                                         Ojs.set_prop_ascii
                                                           x3198 "minute"
                                                           (Ojs.string_to_js
                                                              x3201)
                                                     | None -> ());
                                                    (match x3196 with
                                                     | Some x3200 ->
                                                         Ojs.set_prop_ascii
                                                           x3198 "second"
                                                           (Ojs.string_to_js
                                                              x3200)
                                                     | None -> ());
                                                    (match x3197 with
                                                     | Some x3199 ->
                                                         Ojs.set_prop_ascii
                                                           x3198
                                                           "timeZoneName"
                                                           (Ojs.string_to_js
                                                              x3199)
                                                     | None -> ());
                                                    t_of_js x3198
        let cast_from = Obj.magic
      end
    module DateTimeFormatPartTypes =
      struct
        type t =
          [ `L_s100_weekday  | `L_s102_year  | `L_s29_day 
          | `L_s30_dayPeriod  | `L_s35_era  | `L_s50_hour  | `L_s55_literal 
          | `L_s62_minute  | `L_s64_month  | `L_s87_second 
          | `L_s93_timeZoneName ]
        let rec t_of_js : Ojs.t -> t =
          fun (x3216 : Ojs.t) ->
            let x3217 = x3216 in
            match Ojs.string_of_js x3217 with
            | "weekday" -> `L_s100_weekday
            | "year" -> `L_s102_year
            | "day" -> `L_s29_day
            | "dayPeriod" -> `L_s30_dayPeriod
            | "era" -> `L_s35_era
            | "hour" -> `L_s50_hour
            | "literal" -> `L_s55_literal
            | "minute" -> `L_s62_minute
            | "month" -> `L_s64_month
            | "second" -> `L_s87_second
            | "timeZoneName" -> `L_s93_timeZoneName
            | _ -> assert false
        and t_to_js : t -> Ojs.t =
          fun
            (x3215 :
              [ `L_s100_weekday  | `L_s102_year  | `L_s29_day 
              | `L_s30_dayPeriod  | `L_s35_era  | `L_s50_hour 
              | `L_s55_literal  | `L_s62_minute  | `L_s64_month 
              | `L_s87_second  | `L_s93_timeZoneName ])
            ->
            match x3215 with
            | `L_s100_weekday -> Ojs.string_to_js "weekday"
            | `L_s102_year -> Ojs.string_to_js "year"
            | `L_s29_day -> Ojs.string_to_js "day"
            | `L_s30_dayPeriod -> Ojs.string_to_js "dayPeriod"
            | `L_s35_era -> Ojs.string_to_js "era"
            | `L_s50_hour -> Ojs.string_to_js "hour"
            | `L_s55_literal -> Ojs.string_to_js "literal"
            | `L_s62_minute -> Ojs.string_to_js "minute"
            | `L_s64_month -> Ojs.string_to_js "month"
            | `L_s87_second -> Ojs.string_to_js "second"
            | `L_s93_timeZoneName -> Ojs.string_to_js "timeZoneName"
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x3219 : Ojs.t) -> t_of_js x3219
        and t_0_to_js : t_0 -> Ojs.t = fun (x3218 : t) -> t_to_js x3218
      end
    module DateTimeFormatPart =
      struct
        type t = [ `Intl_DateTimeFormatPart ] intf
        let rec t_of_js : Ojs.t -> t = Obj.magic
        and t_to_js : t -> Ojs.t = Obj.magic
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x3221 : Ojs.t) -> t_of_js x3221
        and t_0_to_js : t_0 -> Ojs.t = fun (x3220 : t) -> t_to_js x3220
        type tags = [ `Intl_DateTimeFormatPart ]
        type tags_0 = tags
        type 'tags this =
          'tags intf constraint 'tags = [> `Intl_DateTimeFormatPart ]
        let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
          =
          fun (type __tags) ->
            fun (__tags_of_js : Ojs.t -> __tags) ->
              fun (x3224 : Ojs.t) -> intf_of_js __tags_of_js x3224
        and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
          fun (type __tags) ->
            fun (__tags_to_js : __tags -> Ojs.t) ->
              fun (x3222 : __tags intf) -> intf_to_js __tags_to_js x3222
        let (get_type : 'tags this -> DateTimeFormatPartTypes.t) =
          fun (x3226 : 'tags this) ->
            DateTimeFormatPartTypes.t_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3226) "type")
        let (set_type : 'tags this -> DateTimeFormatPartTypes.t -> unit) =
          fun (x3228 : 'tags this) ->
            fun (x3229 : DateTimeFormatPartTypes.t) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3228) "type"
                (DateTimeFormatPartTypes.t_to_js x3229)
        let (get_value : 'tags this -> string) =
          fun (x3231 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3231) "value")
        let (set_value : 'tags this -> string -> unit) =
          fun (x3233 : 'tags this) ->
            fun (x3234 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3233) "value"
                (Ojs.string_to_js x3234)
        let (create :
          type_:DateTimeFormatPartTypes.t -> value:string -> unit -> t) =
          fun ~type_:(x3236 : DateTimeFormatPartTypes.t) ->
            fun ~value:(x3237 : string) ->
              fun () ->
                let x3238 = Ojs.empty_obj () in
                Ojs.set_prop_ascii x3238 "type"
                  (DateTimeFormatPartTypes.t_to_js x3236);
                Ojs.set_prop_ascii x3238 "value" (Ojs.string_to_js x3237);
                t_of_js x3238
        let cast_from = Obj.magic
      end
    module DateTimeFormatOptions =
      struct
        type t = [ `Intl_DateTimeFormatOptions ] intf
        let rec t_of_js : Ojs.t -> t = Obj.magic
        and t_to_js : t -> Ojs.t = Obj.magic
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x3240 : Ojs.t) -> t_of_js x3240
        and t_0_to_js : t_0 -> Ojs.t = fun (x3239 : t) -> t_to_js x3239
        type tags = [ `Intl_DateTimeFormatOptions ]
        type tags_0 = tags
        type 'tags this =
          'tags intf constraint 'tags = [> `Intl_DateTimeFormatOptions ]
        let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
          =
          fun (type __tags) ->
            fun (__tags_of_js : Ojs.t -> __tags) ->
              fun (x3243 : Ojs.t) -> intf_of_js __tags_of_js x3243
        and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
          fun (type __tags) ->
            fun (__tags_to_js : __tags -> Ojs.t) ->
              fun (x3241 : __tags intf) -> intf_to_js __tags_to_js x3241
        let (get_formatMatcher :
          'tags this -> [ `L_s23_basic  | `L_s24_best_fit ] option option) =
          fun (x3245 : 'tags this) ->
            Ojs.option_of_js
              (fun (x3247 : Ojs.t) ->
                 Ojs.option_of_js
                   (fun (x3248 : Ojs.t) ->
                      let x3249 = x3248 in
                      match Ojs.string_of_js x3249 with
                      | "basic" -> `L_s23_basic
                      | "best fit" -> `L_s24_best_fit
                      | _ -> assert false) x3247)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3245)
                 "formatMatcher")
        let (set_formatMatcher :
          'tags this ->
            [ `Undefined of undefined  | `U1 of [ `L_s23_basic ] 
            | `U2 of [ `L_s24_best_fit ]  | `U3 of [ `L_s24_best_fit ] ] ->
              unit)
          =
          fun (x3250 : 'tags this) ->
            fun
              (x3251 :
                [ `Undefined of undefined  | `U1 of [ `L_s23_basic ] 
                | `U2 of [ `L_s24_best_fit ]  | `U3 of [ `L_s24_best_fit ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3250) "formatMatcher"
                (match x3251 with
                 | `Undefined x3252 -> undefined_to_js x3252
                 | `U1 x3253 ->
                     (match x3253 with
                      | `L_s23_basic -> Ojs.string_to_js "basic")
                 | `U2 x3254 ->
                     (match x3254 with
                      | `L_s24_best_fit -> Ojs.string_to_js "best fit")
                 | `U3 x3255 ->
                     (match x3255 with
                      | `L_s24_best_fit -> Ojs.string_to_js "best fit"))
        let (get_dateStyle :
          'tags this ->
            [ `L_s44_full  | `L_s56_long  | `L_s60_medium  | `L_s89_short ]
              option option)
          =
          fun (x3257 : 'tags this) ->
            Ojs.option_of_js
              (fun (x3259 : Ojs.t) ->
                 Ojs.option_of_js
                   (fun (x3260 : Ojs.t) ->
                      let x3261 = x3260 in
                      match Ojs.string_of_js x3261 with
                      | "full" -> `L_s44_full
                      | "long" -> `L_s56_long
                      | "medium" -> `L_s60_medium
                      | "short" -> `L_s89_short
                      | _ -> assert false) x3259)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3257) "dateStyle")
        let (set_dateStyle :
          'tags this ->
            [ `Undefined of undefined  | `U1 of [ `L_s44_full ] 
            | `U2 of [ `L_s56_long ]  | `U3 of [ `L_s60_medium ] 
            | `U4 of [ `L_s89_short ] ] -> unit)
          =
          fun (x3262 : 'tags this) ->
            fun
              (x3263 :
                [ `Undefined of undefined  | `U1 of [ `L_s44_full ] 
                | `U2 of [ `L_s56_long ]  | `U3 of [ `L_s60_medium ] 
                | `U4 of [ `L_s89_short ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3262) "dateStyle"
                (match x3263 with
                 | `Undefined x3264 -> undefined_to_js x3264
                 | `U1 x3265 ->
                     (match x3265 with
                      | `L_s44_full -> Ojs.string_to_js "full")
                 | `U2 x3266 ->
                     (match x3266 with
                      | `L_s56_long -> Ojs.string_to_js "long")
                 | `U3 x3267 ->
                     (match x3267 with
                      | `L_s60_medium -> Ojs.string_to_js "medium")
                 | `U4 x3268 ->
                     (match x3268 with
                      | `L_s89_short -> Ojs.string_to_js "short"))
        let (get_timeStyle :
          'tags this ->
            [ `L_s44_full  | `L_s56_long  | `L_s60_medium  | `L_s89_short ]
              option option)
          =
          fun (x3270 : 'tags this) ->
            Ojs.option_of_js
              (fun (x3272 : Ojs.t) ->
                 Ojs.option_of_js
                   (fun (x3273 : Ojs.t) ->
                      let x3274 = x3273 in
                      match Ojs.string_of_js x3274 with
                      | "full" -> `L_s44_full
                      | "long" -> `L_s56_long
                      | "medium" -> `L_s60_medium
                      | "short" -> `L_s89_short
                      | _ -> assert false) x3272)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3270) "timeStyle")
        let (set_timeStyle :
          'tags this ->
            [ `Undefined of undefined  | `U1 of [ `L_s44_full ] 
            | `U2 of [ `L_s56_long ]  | `U3 of [ `L_s60_medium ] 
            | `U4 of [ `L_s89_short ] ] -> unit)
          =
          fun (x3275 : 'tags this) ->
            fun
              (x3276 :
                [ `Undefined of undefined  | `U1 of [ `L_s44_full ] 
                | `U2 of [ `L_s56_long ]  | `U3 of [ `L_s60_medium ] 
                | `U4 of [ `L_s89_short ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3275) "timeStyle"
                (match x3276 with
                 | `Undefined x3277 -> undefined_to_js x3277
                 | `U1 x3278 ->
                     (match x3278 with
                      | `L_s44_full -> Ojs.string_to_js "full")
                 | `U2 x3279 ->
                     (match x3279 with
                      | `L_s56_long -> Ojs.string_to_js "long")
                 | `U3 x3280 ->
                     (match x3280 with
                      | `L_s60_medium -> Ojs.string_to_js "medium")
                 | `U4 x3281 ->
                     (match x3281 with
                      | `L_s89_short -> Ojs.string_to_js "short"))
        let (get_dayPeriod :
          'tags this ->
            [ `L_s56_long  | `L_s68_narrow  | `L_s89_short ] option option)
          =
          fun (x3283 : 'tags this) ->
            Ojs.option_of_js
              (fun (x3285 : Ojs.t) ->
                 Ojs.option_of_js
                   (fun (x3286 : Ojs.t) ->
                      let x3287 = x3286 in
                      match Ojs.string_of_js x3287 with
                      | "long" -> `L_s56_long
                      | "narrow" -> `L_s68_narrow
                      | "short" -> `L_s89_short
                      | _ -> assert false) x3285)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3283) "dayPeriod")
        let (set_dayPeriod :
          'tags this ->
            [ `Undefined of undefined  | `U1 of [ `L_s68_narrow ] 
            | `U2 of [ `L_s89_short ]  | `U3 of [ `L_s56_long ] ] -> 
              unit)
          =
          fun (x3288 : 'tags this) ->
            fun
              (x3289 :
                [ `Undefined of undefined  | `U1 of [ `L_s68_narrow ] 
                | `U2 of [ `L_s89_short ]  | `U3 of [ `L_s56_long ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3288) "dayPeriod"
                (match x3289 with
                 | `Undefined x3290 -> undefined_to_js x3290
                 | `U1 x3291 ->
                     (match x3291 with
                      | `L_s68_narrow -> Ojs.string_to_js "narrow")
                 | `U2 x3292 ->
                     (match x3292 with
                      | `L_s89_short -> Ojs.string_to_js "short")
                 | `U3 x3293 ->
                     (match x3293 with
                      | `L_s56_long -> Ojs.string_to_js "long"))
        let (get_fractionalSecondDigits :
          'tags this ->
            [ `L_n_0  | `L_n_1  | `L_n_2  | `L_n_3 ] option option)
          =
          fun (x3295 : 'tags this) ->
            Ojs.option_of_js
              (fun (x3297 : Ojs.t) ->
                 Ojs.option_of_js
                   (fun (x3298 : Ojs.t) ->
                      let x3299 = x3298 in
                      match Ojs.int_of_js x3299 with
                      | 0 -> `L_n_0
                      | 1 -> `L_n_1
                      | 2 -> `L_n_2
                      | 3 -> `L_n_3
                      | _ -> assert false) x3297)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3295)
                 "fractionalSecondDigits")
        let (set_fractionalSecondDigits :
          'tags this ->
            [ `Undefined of undefined  | `U1 of [ `L_n_0 ] 
            | `U2 of [ `L_n_1 ]  | `U3 of [ `L_n_2 ]  | `U4 of [ `L_n_3 ] ]
              -> unit)
          =
          fun (x3300 : 'tags this) ->
            fun
              (x3301 :
                [ `Undefined of undefined  | `U1 of [ `L_n_0 ] 
                | `U2 of [ `L_n_1 ]  | `U3 of [ `L_n_2 ] 
                | `U4 of [ `L_n_3 ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3300)
                "fractionalSecondDigits"
                (match x3301 with
                 | `Undefined x3302 -> undefined_to_js x3302
                 | `U1 x3303 ->
                     (match x3303 with | `L_n_0 -> Ojs.int_to_js 0)
                 | `U2 x3304 ->
                     (match x3304 with | `L_n_1 -> Ojs.int_to_js 1)
                 | `U3 x3305 ->
                     (match x3305 with | `L_n_2 -> Ojs.int_to_js 2)
                 | `U4 x3306 ->
                     (match x3306 with | `L_n_3 -> Ojs.int_to_js 3))
        let (get_calendar : 'tags this -> string option option) =
          fun (x3308 : 'tags this) ->
            Ojs.option_of_js
              (fun (x3310 : Ojs.t) -> Ojs.option_of_js Ojs.string_of_js x3310)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3308) "calendar")
        let (set_calendar :
          'tags this -> [ `Undefined of undefined  | `U1 of string ] -> unit)
          =
          fun (x3312 : 'tags this) ->
            fun (x3313 : [ `Undefined of undefined  | `U1 of string ]) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3312) "calendar"
                (match x3313 with
                 | `Undefined x3314 -> undefined_to_js x3314
                 | `U1 x3315 -> Ojs.string_to_js x3315)
        let (get_dayPeriod' :
          'tags this ->
            [ `L_s56_long  | `L_s68_narrow  | `L_s89_short ] option option)
          =
          fun (x3317 : 'tags this) ->
            Ojs.option_of_js
              (fun (x3319 : Ojs.t) ->
                 Ojs.option_of_js
                   (fun (x3320 : Ojs.t) ->
                      let x3321 = x3320 in
                      match Ojs.string_of_js x3321 with
                      | "long" -> `L_s56_long
                      | "narrow" -> `L_s68_narrow
                      | "short" -> `L_s89_short
                      | _ -> assert false) x3319)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3317) "dayPeriod")
        let (set_dayPeriod' :
          'tags this ->
            [ `Undefined of undefined  | `U1 of [ `L_s68_narrow ] 
            | `U2 of [ `L_s89_short ]  | `U3 of [ `L_s56_long ] ] -> 
              unit)
          =
          fun (x3322 : 'tags this) ->
            fun
              (x3323 :
                [ `Undefined of undefined  | `U1 of [ `L_s68_narrow ] 
                | `U2 of [ `L_s89_short ]  | `U3 of [ `L_s56_long ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3322) "dayPeriod"
                (match x3323 with
                 | `Undefined x3324 -> undefined_to_js x3324
                 | `U1 x3325 ->
                     (match x3325 with
                      | `L_s68_narrow -> Ojs.string_to_js "narrow")
                 | `U2 x3326 ->
                     (match x3326 with
                      | `L_s89_short -> Ojs.string_to_js "short")
                 | `U3 x3327 ->
                     (match x3327 with
                      | `L_s56_long -> Ojs.string_to_js "long"))
        let (get_numberingSystem : 'tags this -> string option option) =
          fun (x3329 : 'tags this) ->
            Ojs.option_of_js
              (fun (x3331 : Ojs.t) -> Ojs.option_of_js Ojs.string_of_js x3331)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3329)
                 "numberingSystem")
        let (set_numberingSystem :
          'tags this -> [ `Undefined of undefined  | `U1 of string ] -> unit)
          =
          fun (x3333 : 'tags this) ->
            fun (x3334 : [ `Undefined of undefined  | `U1 of string ]) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3333)
                "numberingSystem"
                (match x3334 with
                 | `Undefined x3335 -> undefined_to_js x3335
                 | `U1 x3336 -> Ojs.string_to_js x3336)
        let (get_dateStyle' :
          'tags this ->
            [ `L_s44_full  | `L_s56_long  | `L_s60_medium  | `L_s89_short ]
              option option)
          =
          fun (x3338 : 'tags this) ->
            Ojs.option_of_js
              (fun (x3340 : Ojs.t) ->
                 Ojs.option_of_js
                   (fun (x3341 : Ojs.t) ->
                      let x3342 = x3341 in
                      match Ojs.string_of_js x3342 with
                      | "full" -> `L_s44_full
                      | "long" -> `L_s56_long
                      | "medium" -> `L_s60_medium
                      | "short" -> `L_s89_short
                      | _ -> assert false) x3340)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3338) "dateStyle")
        let (set_dateStyle' :
          'tags this ->
            [ `Undefined of undefined  | `U1 of [ `L_s44_full ] 
            | `U2 of [ `L_s56_long ]  | `U3 of [ `L_s60_medium ] 
            | `U4 of [ `L_s89_short ] ] -> unit)
          =
          fun (x3343 : 'tags this) ->
            fun
              (x3344 :
                [ `Undefined of undefined  | `U1 of [ `L_s44_full ] 
                | `U2 of [ `L_s56_long ]  | `U3 of [ `L_s60_medium ] 
                | `U4 of [ `L_s89_short ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3343) "dateStyle"
                (match x3344 with
                 | `Undefined x3345 -> undefined_to_js x3345
                 | `U1 x3346 ->
                     (match x3346 with
                      | `L_s44_full -> Ojs.string_to_js "full")
                 | `U2 x3347 ->
                     (match x3347 with
                      | `L_s56_long -> Ojs.string_to_js "long")
                 | `U3 x3348 ->
                     (match x3348 with
                      | `L_s60_medium -> Ojs.string_to_js "medium")
                 | `U4 x3349 ->
                     (match x3349 with
                      | `L_s89_short -> Ojs.string_to_js "short"))
        let (get_timeStyle' :
          'tags this ->
            [ `L_s44_full  | `L_s56_long  | `L_s60_medium  | `L_s89_short ]
              option option)
          =
          fun (x3351 : 'tags this) ->
            Ojs.option_of_js
              (fun (x3353 : Ojs.t) ->
                 Ojs.option_of_js
                   (fun (x3354 : Ojs.t) ->
                      let x3355 = x3354 in
                      match Ojs.string_of_js x3355 with
                      | "full" -> `L_s44_full
                      | "long" -> `L_s56_long
                      | "medium" -> `L_s60_medium
                      | "short" -> `L_s89_short
                      | _ -> assert false) x3353)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3351) "timeStyle")
        let (set_timeStyle' :
          'tags this ->
            [ `Undefined of undefined  | `U1 of [ `L_s44_full ] 
            | `U2 of [ `L_s56_long ]  | `U3 of [ `L_s60_medium ] 
            | `U4 of [ `L_s89_short ] ] -> unit)
          =
          fun (x3356 : 'tags this) ->
            fun
              (x3357 :
                [ `Undefined of undefined  | `U1 of [ `L_s44_full ] 
                | `U2 of [ `L_s56_long ]  | `U3 of [ `L_s60_medium ] 
                | `U4 of [ `L_s89_short ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3356) "timeStyle"
                (match x3357 with
                 | `Undefined x3358 -> undefined_to_js x3358
                 | `U1 x3359 ->
                     (match x3359 with
                      | `L_s44_full -> Ojs.string_to_js "full")
                 | `U2 x3360 ->
                     (match x3360 with
                      | `L_s56_long -> Ojs.string_to_js "long")
                 | `U3 x3361 ->
                     (match x3361 with
                      | `L_s60_medium -> Ojs.string_to_js "medium")
                 | `U4 x3362 ->
                     (match x3362 with
                      | `L_s89_short -> Ojs.string_to_js "short"))
        let (get_hourCycle :
          'tags this ->
            [ `L_s46_h11  | `L_s47_h12  | `L_s48_h23  | `L_s49_h24 ] option
              option)
          =
          fun (x3364 : 'tags this) ->
            Ojs.option_of_js
              (fun (x3366 : Ojs.t) ->
                 Ojs.option_of_js
                   (fun (x3367 : Ojs.t) ->
                      let x3368 = x3367 in
                      match Ojs.string_of_js x3368 with
                      | "h11" -> `L_s46_h11
                      | "h12" -> `L_s47_h12
                      | "h23" -> `L_s48_h23
                      | "h24" -> `L_s49_h24
                      | _ -> assert false) x3366)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3364) "hourCycle")
        let (set_hourCycle :
          'tags this ->
            [ `Undefined of undefined  | `U1 of [ `L_s46_h11 ] 
            | `U2 of [ `L_s47_h12 ]  | `U3 of [ `L_s48_h23 ] 
            | `U4 of [ `L_s49_h24 ] ] -> unit)
          =
          fun (x3369 : 'tags this) ->
            fun
              (x3370 :
                [ `Undefined of undefined  | `U1 of [ `L_s46_h11 ] 
                | `U2 of [ `L_s47_h12 ]  | `U3 of [ `L_s48_h23 ] 
                | `U4 of [ `L_s49_h24 ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3369) "hourCycle"
                (match x3370 with
                 | `Undefined x3371 -> undefined_to_js x3371
                 | `U1 x3372 ->
                     (match x3372 with | `L_s46_h11 -> Ojs.string_to_js "h11")
                 | `U2 x3373 ->
                     (match x3373 with | `L_s47_h12 -> Ojs.string_to_js "h12")
                 | `U3 x3374 ->
                     (match x3374 with | `L_s48_h23 -> Ojs.string_to_js "h23")
                 | `U4 x3375 ->
                     (match x3375 with | `L_s49_h24 -> Ojs.string_to_js "h24"))
        let (get_localeMatcher :
          'tags this -> [ `L_s24_best_fit  | `L_s57_lookup ] option option) =
          fun (x3377 : 'tags this) ->
            Ojs.option_of_js
              (fun (x3379 : Ojs.t) ->
                 Ojs.option_of_js
                   (fun (x3380 : Ojs.t) ->
                      let x3381 = x3380 in
                      match Ojs.string_of_js x3381 with
                      | "best fit" -> `L_s24_best_fit
                      | "lookup" -> `L_s57_lookup
                      | _ -> assert false) x3379)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3377)
                 "localeMatcher")
        let (set_localeMatcher :
          'tags this ->
            [ `Undefined of undefined  | `U1 of [ `L_s24_best_fit ] 
            | `U2 of [ `L_s57_lookup ] ] -> unit)
          =
          fun (x3382 : 'tags this) ->
            fun
              (x3383 :
                [ `Undefined of undefined  | `U1 of [ `L_s24_best_fit ] 
                | `U2 of [ `L_s57_lookup ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3382) "localeMatcher"
                (match x3383 with
                 | `Undefined x3384 -> undefined_to_js x3384
                 | `U1 x3385 ->
                     (match x3385 with
                      | `L_s24_best_fit -> Ojs.string_to_js "best fit")
                 | `U2 x3386 ->
                     (match x3386 with
                      | `L_s57_lookup -> Ojs.string_to_js "lookup"))
        let (get_weekday :
          'tags this ->
            [ `L_s56_long  | `L_s68_narrow  | `L_s89_short ] option option)
          =
          fun (x3388 : 'tags this) ->
            Ojs.option_of_js
              (fun (x3390 : Ojs.t) ->
                 Ojs.option_of_js
                   (fun (x3391 : Ojs.t) ->
                      let x3392 = x3391 in
                      match Ojs.string_of_js x3392 with
                      | "long" -> `L_s56_long
                      | "narrow" -> `L_s68_narrow
                      | "short" -> `L_s89_short
                      | _ -> assert false) x3390)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3388) "weekday")
        let (set_weekday :
          'tags this ->
            [ `Undefined of undefined  | `U1 of [ `L_s56_long ] 
            | `U2 of [ `L_s89_short ]  | `U3 of [ `L_s68_narrow ] ] -> 
              unit)
          =
          fun (x3393 : 'tags this) ->
            fun
              (x3394 :
                [ `Undefined of undefined  | `U1 of [ `L_s56_long ] 
                | `U2 of [ `L_s89_short ]  | `U3 of [ `L_s68_narrow ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3393) "weekday"
                (match x3394 with
                 | `Undefined x3395 -> undefined_to_js x3395
                 | `U1 x3396 ->
                     (match x3396 with
                      | `L_s56_long -> Ojs.string_to_js "long")
                 | `U2 x3397 ->
                     (match x3397 with
                      | `L_s89_short -> Ojs.string_to_js "short")
                 | `U3 x3398 ->
                     (match x3398 with
                      | `L_s68_narrow -> Ojs.string_to_js "narrow"))
        let (get_era :
          'tags this ->
            [ `L_s56_long  | `L_s68_narrow  | `L_s89_short ] option option)
          =
          fun (x3400 : 'tags this) ->
            Ojs.option_of_js
              (fun (x3402 : Ojs.t) ->
                 Ojs.option_of_js
                   (fun (x3403 : Ojs.t) ->
                      let x3404 = x3403 in
                      match Ojs.string_of_js x3404 with
                      | "long" -> `L_s56_long
                      | "narrow" -> `L_s68_narrow
                      | "short" -> `L_s89_short
                      | _ -> assert false) x3402)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3400) "era")
        let (set_era :
          'tags this ->
            [ `Undefined of undefined  | `U1 of [ `L_s56_long ] 
            | `U2 of [ `L_s89_short ]  | `U3 of [ `L_s68_narrow ] ] -> 
              unit)
          =
          fun (x3405 : 'tags this) ->
            fun
              (x3406 :
                [ `Undefined of undefined  | `U1 of [ `L_s56_long ] 
                | `U2 of [ `L_s89_short ]  | `U3 of [ `L_s68_narrow ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3405) "era"
                (match x3406 with
                 | `Undefined x3407 -> undefined_to_js x3407
                 | `U1 x3408 ->
                     (match x3408 with
                      | `L_s56_long -> Ojs.string_to_js "long")
                 | `U2 x3409 ->
                     (match x3409 with
                      | `L_s89_short -> Ojs.string_to_js "short")
                 | `U3 x3410 ->
                     (match x3410 with
                      | `L_s68_narrow -> Ojs.string_to_js "narrow"))
        let (get_year :
          'tags this -> [ `L_s0_2_digit  | `L_s73_numeric ] option option) =
          fun (x3412 : 'tags this) ->
            Ojs.option_of_js
              (fun (x3414 : Ojs.t) ->
                 Ojs.option_of_js
                   (fun (x3415 : Ojs.t) ->
                      let x3416 = x3415 in
                      match Ojs.string_of_js x3416 with
                      | "2-digit" -> `L_s0_2_digit
                      | "numeric" -> `L_s73_numeric
                      | _ -> assert false) x3414)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3412) "year")
        let (set_year :
          'tags this ->
            [ `Undefined of undefined  | `U1 of [ `L_s73_numeric ] 
            | `U2 of [ `L_s0_2_digit ] ] -> unit)
          =
          fun (x3417 : 'tags this) ->
            fun
              (x3418 :
                [ `Undefined of undefined  | `U1 of [ `L_s73_numeric ] 
                | `U2 of [ `L_s0_2_digit ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3417) "year"
                (match x3418 with
                 | `Undefined x3419 -> undefined_to_js x3419
                 | `U1 x3420 ->
                     (match x3420 with
                      | `L_s73_numeric -> Ojs.string_to_js "numeric")
                 | `U2 x3421 ->
                     (match x3421 with
                      | `L_s0_2_digit -> Ojs.string_to_js "2-digit"))
        let (get_month :
          'tags this ->
            [ `L_s0_2_digit  | `L_s56_long  | `L_s68_narrow 
            | `L_s73_numeric  | `L_s89_short ] option option)
          =
          fun (x3423 : 'tags this) ->
            Ojs.option_of_js
              (fun (x3425 : Ojs.t) ->
                 Ojs.option_of_js
                   (fun (x3426 : Ojs.t) ->
                      let x3427 = x3426 in
                      match Ojs.string_of_js x3427 with
                      | "2-digit" -> `L_s0_2_digit
                      | "long" -> `L_s56_long
                      | "narrow" -> `L_s68_narrow
                      | "numeric" -> `L_s73_numeric
                      | "short" -> `L_s89_short
                      | _ -> assert false) x3425)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3423) "month")
        let (set_month :
          'tags this ->
            [ `Undefined of undefined  | `U1 of [ `L_s73_numeric ] 
            | `U2 of [ `L_s0_2_digit ]  | `U3 of [ `L_s56_long ] 
            | `U4 of [ `L_s89_short ]  | `U5 of [ `L_s68_narrow ] ] -> 
              unit)
          =
          fun (x3428 : 'tags this) ->
            fun
              (x3429 :
                [ `Undefined of undefined  | `U1 of [ `L_s73_numeric ] 
                | `U2 of [ `L_s0_2_digit ]  | `U3 of [ `L_s56_long ] 
                | `U4 of [ `L_s89_short ]  | `U5 of [ `L_s68_narrow ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3428) "month"
                (match x3429 with
                 | `Undefined x3430 -> undefined_to_js x3430
                 | `U1 x3431 ->
                     (match x3431 with
                      | `L_s73_numeric -> Ojs.string_to_js "numeric")
                 | `U2 x3432 ->
                     (match x3432 with
                      | `L_s0_2_digit -> Ojs.string_to_js "2-digit")
                 | `U3 x3433 ->
                     (match x3433 with
                      | `L_s56_long -> Ojs.string_to_js "long")
                 | `U4 x3434 ->
                     (match x3434 with
                      | `L_s89_short -> Ojs.string_to_js "short")
                 | `U5 x3435 ->
                     (match x3435 with
                      | `L_s68_narrow -> Ojs.string_to_js "narrow"))
        let (get_day :
          'tags this -> [ `L_s0_2_digit  | `L_s73_numeric ] option option) =
          fun (x3437 : 'tags this) ->
            Ojs.option_of_js
              (fun (x3439 : Ojs.t) ->
                 Ojs.option_of_js
                   (fun (x3440 : Ojs.t) ->
                      let x3441 = x3440 in
                      match Ojs.string_of_js x3441 with
                      | "2-digit" -> `L_s0_2_digit
                      | "numeric" -> `L_s73_numeric
                      | _ -> assert false) x3439)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3437) "day")
        let (set_day :
          'tags this ->
            [ `Undefined of undefined  | `U1 of [ `L_s73_numeric ] 
            | `U2 of [ `L_s0_2_digit ] ] -> unit)
          =
          fun (x3442 : 'tags this) ->
            fun
              (x3443 :
                [ `Undefined of undefined  | `U1 of [ `L_s73_numeric ] 
                | `U2 of [ `L_s0_2_digit ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3442) "day"
                (match x3443 with
                 | `Undefined x3444 -> undefined_to_js x3444
                 | `U1 x3445 ->
                     (match x3445 with
                      | `L_s73_numeric -> Ojs.string_to_js "numeric")
                 | `U2 x3446 ->
                     (match x3446 with
                      | `L_s0_2_digit -> Ojs.string_to_js "2-digit"))
        let (get_hour :
          'tags this -> [ `L_s0_2_digit  | `L_s73_numeric ] option option) =
          fun (x3448 : 'tags this) ->
            Ojs.option_of_js
              (fun (x3450 : Ojs.t) ->
                 Ojs.option_of_js
                   (fun (x3451 : Ojs.t) ->
                      let x3452 = x3451 in
                      match Ojs.string_of_js x3452 with
                      | "2-digit" -> `L_s0_2_digit
                      | "numeric" -> `L_s73_numeric
                      | _ -> assert false) x3450)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3448) "hour")
        let (set_hour :
          'tags this ->
            [ `Undefined of undefined  | `U1 of [ `L_s73_numeric ] 
            | `U2 of [ `L_s0_2_digit ] ] -> unit)
          =
          fun (x3453 : 'tags this) ->
            fun
              (x3454 :
                [ `Undefined of undefined  | `U1 of [ `L_s73_numeric ] 
                | `U2 of [ `L_s0_2_digit ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3453) "hour"
                (match x3454 with
                 | `Undefined x3455 -> undefined_to_js x3455
                 | `U1 x3456 ->
                     (match x3456 with
                      | `L_s73_numeric -> Ojs.string_to_js "numeric")
                 | `U2 x3457 ->
                     (match x3457 with
                      | `L_s0_2_digit -> Ojs.string_to_js "2-digit"))
        let (get_minute :
          'tags this -> [ `L_s0_2_digit  | `L_s73_numeric ] option option) =
          fun (x3459 : 'tags this) ->
            Ojs.option_of_js
              (fun (x3461 : Ojs.t) ->
                 Ojs.option_of_js
                   (fun (x3462 : Ojs.t) ->
                      let x3463 = x3462 in
                      match Ojs.string_of_js x3463 with
                      | "2-digit" -> `L_s0_2_digit
                      | "numeric" -> `L_s73_numeric
                      | _ -> assert false) x3461)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3459) "minute")
        let (set_minute :
          'tags this ->
            [ `Undefined of undefined  | `U1 of [ `L_s73_numeric ] 
            | `U2 of [ `L_s0_2_digit ] ] -> unit)
          =
          fun (x3464 : 'tags this) ->
            fun
              (x3465 :
                [ `Undefined of undefined  | `U1 of [ `L_s73_numeric ] 
                | `U2 of [ `L_s0_2_digit ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3464) "minute"
                (match x3465 with
                 | `Undefined x3466 -> undefined_to_js x3466
                 | `U1 x3467 ->
                     (match x3467 with
                      | `L_s73_numeric -> Ojs.string_to_js "numeric")
                 | `U2 x3468 ->
                     (match x3468 with
                      | `L_s0_2_digit -> Ojs.string_to_js "2-digit"))
        let (get_second :
          'tags this -> [ `L_s0_2_digit  | `L_s73_numeric ] option option) =
          fun (x3470 : 'tags this) ->
            Ojs.option_of_js
              (fun (x3472 : Ojs.t) ->
                 Ojs.option_of_js
                   (fun (x3473 : Ojs.t) ->
                      let x3474 = x3473 in
                      match Ojs.string_of_js x3474 with
                      | "2-digit" -> `L_s0_2_digit
                      | "numeric" -> `L_s73_numeric
                      | _ -> assert false) x3472)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3470) "second")
        let (set_second :
          'tags this ->
            [ `Undefined of undefined  | `U1 of [ `L_s73_numeric ] 
            | `U2 of [ `L_s0_2_digit ] ] -> unit)
          =
          fun (x3475 : 'tags this) ->
            fun
              (x3476 :
                [ `Undefined of undefined  | `U1 of [ `L_s73_numeric ] 
                | `U2 of [ `L_s0_2_digit ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3475) "second"
                (match x3476 with
                 | `Undefined x3477 -> undefined_to_js x3477
                 | `U1 x3478 ->
                     (match x3478 with
                      | `L_s73_numeric -> Ojs.string_to_js "numeric")
                 | `U2 x3479 ->
                     (match x3479 with
                      | `L_s0_2_digit -> Ojs.string_to_js "2-digit"))
        let (get_timeZoneName :
          'tags this -> [ `L_s56_long  | `L_s89_short ] option option) =
          fun (x3481 : 'tags this) ->
            Ojs.option_of_js
              (fun (x3483 : Ojs.t) ->
                 Ojs.option_of_js
                   (fun (x3484 : Ojs.t) ->
                      let x3485 = x3484 in
                      match Ojs.string_of_js x3485 with
                      | "long" -> `L_s56_long
                      | "short" -> `L_s89_short
                      | _ -> assert false) x3483)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3481) "timeZoneName")
        let (set_timeZoneName :
          'tags this ->
            [ `Undefined of undefined  | `U1 of [ `L_s56_long ] 
            | `U2 of [ `L_s89_short ] ] -> unit)
          =
          fun (x3486 : 'tags this) ->
            fun
              (x3487 :
                [ `Undefined of undefined  | `U1 of [ `L_s56_long ] 
                | `U2 of [ `L_s89_short ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3486) "timeZoneName"
                (match x3487 with
                 | `Undefined x3488 -> undefined_to_js x3488
                 | `U1 x3489 ->
                     (match x3489 with
                      | `L_s56_long -> Ojs.string_to_js "long")
                 | `U2 x3490 ->
                     (match x3490 with
                      | `L_s89_short -> Ojs.string_to_js "short"))
        let (get_formatMatcher' :
          'tags this -> [ `L_s23_basic  | `L_s24_best_fit ] option option) =
          fun (x3492 : 'tags this) ->
            Ojs.option_of_js
              (fun (x3494 : Ojs.t) ->
                 Ojs.option_of_js
                   (fun (x3495 : Ojs.t) ->
                      let x3496 = x3495 in
                      match Ojs.string_of_js x3496 with
                      | "basic" -> `L_s23_basic
                      | "best fit" -> `L_s24_best_fit
                      | _ -> assert false) x3494)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3492)
                 "formatMatcher")
        let (set_formatMatcher' :
          'tags this ->
            [ `Undefined of undefined  | `U1 of [ `L_s24_best_fit ] 
            | `U2 of [ `L_s23_basic ] ] -> unit)
          =
          fun (x3497 : 'tags this) ->
            fun
              (x3498 :
                [ `Undefined of undefined  | `U1 of [ `L_s24_best_fit ] 
                | `U2 of [ `L_s23_basic ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3497) "formatMatcher"
                (match x3498 with
                 | `Undefined x3499 -> undefined_to_js x3499
                 | `U1 x3500 ->
                     (match x3500 with
                      | `L_s24_best_fit -> Ojs.string_to_js "best fit")
                 | `U2 x3501 ->
                     (match x3501 with
                      | `L_s23_basic -> Ojs.string_to_js "basic"))
        let (get_hour12 : 'tags this -> bool option option) =
          fun (x3503 : 'tags this) ->
            Ojs.option_of_js
              (fun (x3505 : Ojs.t) -> Ojs.option_of_js Ojs.bool_of_js x3505)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3503) "hour12")
        let (set_hour12 :
          'tags this -> [ `Undefined of undefined  | `U1 of bool ] -> unit) =
          fun (x3507 : 'tags this) ->
            fun (x3508 : [ `Undefined of undefined  | `U1 of bool ]) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3507) "hour12"
                (match x3508 with
                 | `Undefined x3509 -> undefined_to_js x3509
                 | `U1 x3510 -> Ojs.bool_to_js x3510)
        let (get_timeZone : 'tags this -> string option option) =
          fun (x3512 : 'tags this) ->
            Ojs.option_of_js
              (fun (x3514 : Ojs.t) -> Ojs.option_of_js Ojs.string_of_js x3514)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3512) "timeZone")
        let (set_timeZone :
          'tags this -> [ `Undefined of undefined  | `U1 of string ] -> unit)
          =
          fun (x3516 : 'tags this) ->
            fun (x3517 : [ `Undefined of undefined  | `U1 of string ]) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3516) "timeZone"
                (match x3517 with
                 | `Undefined x3518 -> undefined_to_js x3518
                 | `U1 x3519 -> Ojs.string_to_js x3519)
        let (create :
          ?formatMatcher:[ `L_s23_basic  | `L_s24_best_fit ] ->
            ?dateStyle:[ `L_s44_full  | `L_s56_long  | `L_s60_medium 
                       | `L_s89_short ]
              ->
              ?timeStyle:[ `L_s44_full  | `L_s56_long  | `L_s60_medium 
                         | `L_s89_short ]
                ->
                ?dayPeriod:[ `L_s56_long  | `L_s68_narrow  | `L_s89_short ]
                  ->
                  ?fractionalSecondDigits:[ `L_n_0  | `L_n_1  | `L_n_2 
                                          | `L_n_3 ]
                    ->
                    ?calendar:string ->
                      ?dayPeriod:[ `L_s56_long  | `L_s68_narrow 
                                 | `L_s89_short ]
                        ->
                        ?numberingSystem:string ->
                          ?dateStyle:[ `L_s44_full  | `L_s56_long 
                                     | `L_s60_medium  | `L_s89_short ]
                            ->
                            ?timeStyle:[ `L_s44_full  | `L_s56_long 
                                       | `L_s60_medium  | `L_s89_short ]
                              ->
                              ?hourCycle:[ `L_s46_h11  | `L_s47_h12 
                                         | `L_s48_h23  | `L_s49_h24 ]
                                ->
                                ?localeMatcher:[ `L_s24_best_fit 
                                               | `L_s57_lookup ]
                                  ->
                                  ?weekday:[ `L_s56_long  | `L_s68_narrow 
                                           | `L_s89_short ]
                                    ->
                                    ?era:[ `L_s56_long  | `L_s68_narrow 
                                         | `L_s89_short ]
                                      ->
                                      ?year:[ `L_s0_2_digit 
                                            | `L_s73_numeric ]
                                        ->
                                        ?month:[ `L_s0_2_digit 
                                               | `L_s56_long 
                                               | `L_s68_narrow 
                                               | `L_s73_numeric 
                                               | `L_s89_short ]
                                          ->
                                          ?day:[ `L_s0_2_digit 
                                               | `L_s73_numeric ]
                                            ->
                                            ?hour:[ `L_s0_2_digit 
                                                  | `L_s73_numeric ]
                                              ->
                                              ?minute:[ `L_s0_2_digit 
                                                      | `L_s73_numeric ]
                                                ->
                                                ?second:[ `L_s0_2_digit 
                                                        | `L_s73_numeric ]
                                                  ->
                                                  ?timeZoneName:[
                                                                  `L_s56_long 
                                                                | `L_s89_short
                                                                    ]
                                                    ->
                                                    ?formatMatcher:[
                                                                    `L_s23_basic
                                                                     | 
                                                                    `L_s24_best_fit
                                                                    ]
                                                      ->
                                                      ?hour12:bool ->
                                                        ?timeZone:string ->
                                                          unit -> t)
          =
          fun
            ?formatMatcher:(x3521 :
                             [ `L_s23_basic  | `L_s24_best_fit ] option)
            ->
            fun
              ?dateStyle:(x3522 :
                           [ `L_s44_full  | `L_s56_long  | `L_s60_medium 
                           | `L_s89_short ] option)
              ->
              fun
                ?timeStyle:(x3523 :
                             [ `L_s44_full  | `L_s56_long  | `L_s60_medium 
                             | `L_s89_short ] option)
                ->
                fun
                  ?dayPeriod:(x3524 :
                               [ `L_s56_long  | `L_s68_narrow 
                               | `L_s89_short ] option)
                  ->
                  fun
                    ?fractionalSecondDigits:(x3525 :
                                              [ `L_n_0  | `L_n_1  | `L_n_2 
                                              | `L_n_3 ] option)
                    ->
                    fun ?calendar:(x3526 : string option) ->
                      fun
                        ?dayPeriod:(x3527 :
                                     [ `L_s56_long  | `L_s68_narrow 
                                     | `L_s89_short ] option)
                        ->
                        fun ?numberingSystem:(x3528 : string option) ->
                          fun
                            ?dateStyle:(x3529 :
                                         [ `L_s44_full  | `L_s56_long 
                                         | `L_s60_medium  | `L_s89_short ]
                                           option)
                            ->
                            fun
                              ?timeStyle:(x3530 :
                                           [ `L_s44_full  | `L_s56_long 
                                           | `L_s60_medium  | `L_s89_short ]
                                             option)
                              ->
                              fun
                                ?hourCycle:(x3531 :
                                             [ `L_s46_h11  | `L_s47_h12 
                                             | `L_s48_h23  | `L_s49_h24 ]
                                               option)
                                ->
                                fun
                                  ?localeMatcher:(x3532 :
                                                   [ `L_s24_best_fit 
                                                   | `L_s57_lookup ] option)
                                  ->
                                  fun
                                    ?weekday:(x3533 :
                                               [ `L_s56_long 
                                               | `L_s68_narrow 
                                               | `L_s89_short ] option)
                                    ->
                                    fun
                                      ?era:(x3534 :
                                             [ `L_s56_long  | `L_s68_narrow 
                                             | `L_s89_short ] option)
                                      ->
                                      fun
                                        ?year:(x3535 :
                                                [ `L_s0_2_digit 
                                                | `L_s73_numeric ] option)
                                        ->
                                        fun
                                          ?month:(x3536 :
                                                   [ `L_s0_2_digit 
                                                   | `L_s56_long 
                                                   | `L_s68_narrow 
                                                   | `L_s73_numeric 
                                                   | `L_s89_short ] option)
                                          ->
                                          fun
                                            ?day:(x3537 :
                                                   [ `L_s0_2_digit 
                                                   | `L_s73_numeric ] option)
                                            ->
                                            fun
                                              ?hour:(x3538 :
                                                      [ `L_s0_2_digit 
                                                      | `L_s73_numeric ]
                                                        option)
                                              ->
                                              fun
                                                ?minute:(x3539 :
                                                          [ `L_s0_2_digit 
                                                          | `L_s73_numeric ]
                                                            option)
                                                ->
                                                fun
                                                  ?second:(x3540 :
                                                            [ `L_s0_2_digit 
                                                            | `L_s73_numeric ]
                                                              option)
                                                  ->
                                                  fun
                                                    ?timeZoneName:(x3541 :
                                                                    [
                                                                    `L_s56_long
                                                                     | 
                                                                    `L_s89_short
                                                                    ] option)
                                                    ->
                                                    fun
                                                      ?formatMatcher:
                                                      (x3542 :
                                                        [ `L_s23_basic 
                                                        | `L_s24_best_fit ]
                                                          option)
                                                      ->
                                                      fun
                                                        ?hour12:(x3543 :
                                                                  bool option)
                                                        ->
                                                        fun
                                                          ?timeZone:(x3544 :
                                                                    string
                                                                    option)
                                                          ->
                                                          fun () ->
                                                            let x3545 =
                                                              Ojs.empty_obj
                                                                () in
                                                            (match x3521 with
                                                             | Some x3569 ->
                                                                 Ojs.set_prop_ascii
                                                                   x3545
                                                                   "formatMatcher"
                                                                   (match x3569
                                                                    with
                                                                    | 
                                                                    `L_s23_basic
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "basic"
                                                                    | 
                                                                    `L_s24_best_fit
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "best fit")
                                                             | None -> ());
                                                            (match x3522 with
                                                             | Some x3568 ->
                                                                 Ojs.set_prop_ascii
                                                                   x3545
                                                                   "dateStyle"
                                                                   (match x3568
                                                                    with
                                                                    | 
                                                                    `L_s44_full
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "full"
                                                                    | 
                                                                    `L_s56_long
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "long"
                                                                    | 
                                                                    `L_s60_medium
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "medium"
                                                                    | 
                                                                    `L_s89_short
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "short")
                                                             | None -> ());
                                                            (match x3523 with
                                                             | Some x3567 ->
                                                                 Ojs.set_prop_ascii
                                                                   x3545
                                                                   "timeStyle"
                                                                   (match x3567
                                                                    with
                                                                    | 
                                                                    `L_s44_full
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "full"
                                                                    | 
                                                                    `L_s56_long
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "long"
                                                                    | 
                                                                    `L_s60_medium
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "medium"
                                                                    | 
                                                                    `L_s89_short
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "short")
                                                             | None -> ());
                                                            (match x3524 with
                                                             | Some x3566 ->
                                                                 Ojs.set_prop_ascii
                                                                   x3545
                                                                   "dayPeriod"
                                                                   (match x3566
                                                                    with
                                                                    | 
                                                                    `L_s56_long
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "long"
                                                                    | 
                                                                    `L_s68_narrow
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "narrow"
                                                                    | 
                                                                    `L_s89_short
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "short")
                                                             | None -> ());
                                                            (match x3525 with
                                                             | Some x3565 ->
                                                                 Ojs.set_prop_ascii
                                                                   x3545
                                                                   "fractionalSecondDigits"
                                                                   (match x3565
                                                                    with
                                                                    | 
                                                                    `L_n_0 ->
                                                                    Ojs.int_to_js
                                                                    0
                                                                    | 
                                                                    `L_n_1 ->
                                                                    Ojs.int_to_js
                                                                    1
                                                                    | 
                                                                    `L_n_2 ->
                                                                    Ojs.int_to_js
                                                                    2
                                                                    | 
                                                                    `L_n_3 ->
                                                                    Ojs.int_to_js
                                                                    3)
                                                             | None -> ());
                                                            (match x3526 with
                                                             | Some x3564 ->
                                                                 Ojs.set_prop_ascii
                                                                   x3545
                                                                   "calendar"
                                                                   (Ojs.string_to_js
                                                                    x3564)
                                                             | None -> ());
                                                            (match x3527 with
                                                             | Some x3563 ->
                                                                 Ojs.set_prop_ascii
                                                                   x3545
                                                                   "dayPeriod"
                                                                   (match x3563
                                                                    with
                                                                    | 
                                                                    `L_s56_long
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "long"
                                                                    | 
                                                                    `L_s68_narrow
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "narrow"
                                                                    | 
                                                                    `L_s89_short
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "short")
                                                             | None -> ());
                                                            (match x3528 with
                                                             | Some x3562 ->
                                                                 Ojs.set_prop_ascii
                                                                   x3545
                                                                   "numberingSystem"
                                                                   (Ojs.string_to_js
                                                                    x3562)
                                                             | None -> ());
                                                            (match x3529 with
                                                             | Some x3561 ->
                                                                 Ojs.set_prop_ascii
                                                                   x3545
                                                                   "dateStyle"
                                                                   (match x3561
                                                                    with
                                                                    | 
                                                                    `L_s44_full
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "full"
                                                                    | 
                                                                    `L_s56_long
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "long"
                                                                    | 
                                                                    `L_s60_medium
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "medium"
                                                                    | 
                                                                    `L_s89_short
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "short")
                                                             | None -> ());
                                                            (match x3530 with
                                                             | Some x3560 ->
                                                                 Ojs.set_prop_ascii
                                                                   x3545
                                                                   "timeStyle"
                                                                   (match x3560
                                                                    with
                                                                    | 
                                                                    `L_s44_full
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "full"
                                                                    | 
                                                                    `L_s56_long
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "long"
                                                                    | 
                                                                    `L_s60_medium
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "medium"
                                                                    | 
                                                                    `L_s89_short
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "short")
                                                             | None -> ());
                                                            (match x3531 with
                                                             | Some x3559 ->
                                                                 Ojs.set_prop_ascii
                                                                   x3545
                                                                   "hourCycle"
                                                                   (match x3559
                                                                    with
                                                                    | 
                                                                    `L_s46_h11
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "h11"
                                                                    | 
                                                                    `L_s47_h12
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "h12"
                                                                    | 
                                                                    `L_s48_h23
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "h23"
                                                                    | 
                                                                    `L_s49_h24
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "h24")
                                                             | None -> ());
                                                            (match x3532 with
                                                             | Some x3558 ->
                                                                 Ojs.set_prop_ascii
                                                                   x3545
                                                                   "localeMatcher"
                                                                   (match x3558
                                                                    with
                                                                    | 
                                                                    `L_s24_best_fit
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "best fit"
                                                                    | 
                                                                    `L_s57_lookup
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "lookup")
                                                             | None -> ());
                                                            (match x3533 with
                                                             | Some x3557 ->
                                                                 Ojs.set_prop_ascii
                                                                   x3545
                                                                   "weekday"
                                                                   (match x3557
                                                                    with
                                                                    | 
                                                                    `L_s56_long
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "long"
                                                                    | 
                                                                    `L_s68_narrow
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "narrow"
                                                                    | 
                                                                    `L_s89_short
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "short")
                                                             | None -> ());
                                                            (match x3534 with
                                                             | Some x3556 ->
                                                                 Ojs.set_prop_ascii
                                                                   x3545
                                                                   "era"
                                                                   (match x3556
                                                                    with
                                                                    | 
                                                                    `L_s56_long
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "long"
                                                                    | 
                                                                    `L_s68_narrow
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "narrow"
                                                                    | 
                                                                    `L_s89_short
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "short")
                                                             | None -> ());
                                                            (match x3535 with
                                                             | Some x3555 ->
                                                                 Ojs.set_prop_ascii
                                                                   x3545
                                                                   "year"
                                                                   (match x3555
                                                                    with
                                                                    | 
                                                                    `L_s0_2_digit
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "2-digit"
                                                                    | 
                                                                    `L_s73_numeric
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "numeric")
                                                             | None -> ());
                                                            (match x3536 with
                                                             | Some x3554 ->
                                                                 Ojs.set_prop_ascii
                                                                   x3545
                                                                   "month"
                                                                   (match x3554
                                                                    with
                                                                    | 
                                                                    `L_s0_2_digit
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "2-digit"
                                                                    | 
                                                                    `L_s56_long
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "long"
                                                                    | 
                                                                    `L_s68_narrow
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "narrow"
                                                                    | 
                                                                    `L_s73_numeric
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "numeric"
                                                                    | 
                                                                    `L_s89_short
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "short")
                                                             | None -> ());
                                                            (match x3537 with
                                                             | Some x3553 ->
                                                                 Ojs.set_prop_ascii
                                                                   x3545
                                                                   "day"
                                                                   (match x3553
                                                                    with
                                                                    | 
                                                                    `L_s0_2_digit
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "2-digit"
                                                                    | 
                                                                    `L_s73_numeric
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "numeric")
                                                             | None -> ());
                                                            (match x3538 with
                                                             | Some x3552 ->
                                                                 Ojs.set_prop_ascii
                                                                   x3545
                                                                   "hour"
                                                                   (match x3552
                                                                    with
                                                                    | 
                                                                    `L_s0_2_digit
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "2-digit"
                                                                    | 
                                                                    `L_s73_numeric
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "numeric")
                                                             | None -> ());
                                                            (match x3539 with
                                                             | Some x3551 ->
                                                                 Ojs.set_prop_ascii
                                                                   x3545
                                                                   "minute"
                                                                   (match x3551
                                                                    with
                                                                    | 
                                                                    `L_s0_2_digit
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "2-digit"
                                                                    | 
                                                                    `L_s73_numeric
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "numeric")
                                                             | None -> ());
                                                            (match x3540 with
                                                             | Some x3550 ->
                                                                 Ojs.set_prop_ascii
                                                                   x3545
                                                                   "second"
                                                                   (match x3550
                                                                    with
                                                                    | 
                                                                    `L_s0_2_digit
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "2-digit"
                                                                    | 
                                                                    `L_s73_numeric
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "numeric")
                                                             | None -> ());
                                                            (match x3541 with
                                                             | Some x3549 ->
                                                                 Ojs.set_prop_ascii
                                                                   x3545
                                                                   "timeZoneName"
                                                                   (match x3549
                                                                    with
                                                                    | 
                                                                    `L_s56_long
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "long"
                                                                    | 
                                                                    `L_s89_short
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "short")
                                                             | None -> ());
                                                            (match x3542 with
                                                             | Some x3548 ->
                                                                 Ojs.set_prop_ascii
                                                                   x3545
                                                                   "formatMatcher"
                                                                   (match x3548
                                                                    with
                                                                    | 
                                                                    `L_s23_basic
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "basic"
                                                                    | 
                                                                    `L_s24_best_fit
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "best fit")
                                                             | None -> ());
                                                            (match x3543 with
                                                             | Some x3547 ->
                                                                 Ojs.set_prop_ascii
                                                                   x3545
                                                                   "hour12"
                                                                   (Ojs.bool_to_js
                                                                    x3547)
                                                             | None -> ());
                                                            (match x3544 with
                                                             | Some x3546 ->
                                                                 Ojs.set_prop_ascii
                                                                   x3545
                                                                   "timeZone"
                                                                   (Ojs.string_to_js
                                                                    x3546)
                                                             | None -> ());
                                                            t_of_js x3545
        let cast_from = Obj.magic
      end
    module DateTimeFormat =
      struct
        type t = [ `Intl_DateTimeFormat ] intf
        let rec t_of_js : Ojs.t -> t = Obj.magic
        and t_to_js : t -> Ojs.t = Obj.magic
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x3571 : Ojs.t) -> t_of_js x3571
        and t_0_to_js : t_0 -> Ojs.t = fun (x3570 : t) -> t_to_js x3570
        type tags = [ `Intl_DateTimeFormat ]
        type tags_0 = tags
        type 'tags this =
          'tags intf constraint 'tags = [> `Intl_DateTimeFormat ]
        let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
          =
          fun (type __tags) ->
            fun (__tags_of_js : Ojs.t -> __tags) ->
              fun (x3574 : Ojs.t) -> intf_of_js __tags_of_js x3574
        and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
          fun (type __tags) ->
            fun (__tags_to_js : __tags -> Ojs.t) ->
              fun (x3572 : __tags intf) -> intf_to_js __tags_to_js x3572
        let (formatToParts :
          'tags this ->
            ?date:[ `U1 of Date.t  | `U2 of float ] ->
              unit -> DateTimeFormatPart.t list)
          =
          fun (x3581 : 'tags this) ->
            fun ?date:(x3576 : [ `U1 of Date.t  | `U2 of float ] option) ->
              fun () ->
                Ojs.list_of_js DateTimeFormatPart.t_of_js
                  (let x3583 = this_to_js Obj.magic x3581 in
                   Ojs.call (Ojs.get_prop_ascii x3583 "formatToParts")
                     "apply"
                     [|x3583;((let x3577 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               (match x3576 with
                                | Some x3578 ->
                                    ignore
                                      (Ojs.call x3577 "push"
                                         [|((match x3578 with
                                             | `U1 x3579 ->
                                                 Date.t_to_js x3579
                                             | `U2 x3580 ->
                                                 Ojs.float_to_js x3580))|])
                                | None -> ());
                               x3577))|])
        let (format :
          'tags this ->
            ?date:[ `U1 of Date.t  | `U2 of float ] -> unit -> string)
          =
          fun (x3590 : 'tags this) ->
            fun ?date:(x3585 : [ `U1 of Date.t  | `U2 of float ] option) ->
              fun () ->
                Ojs.string_of_js
                  (let x3592 = this_to_js Obj.magic x3590 in
                   Ojs.call (Ojs.get_prop_ascii x3592 "format") "apply"
                     [|x3592;((let x3586 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               (match x3585 with
                                | Some x3587 ->
                                    ignore
                                      (Ojs.call x3586 "push"
                                         [|((match x3587 with
                                             | `U1 x3588 ->
                                                 Date.t_to_js x3588
                                             | `U2 x3589 ->
                                                 Ojs.float_to_js x3589))|])
                                | None -> ());
                               x3586))|])
        let (resolvedOptions : 'tags this -> ResolvedDateTimeFormatOptions.t)
          =
          fun (x3593 : 'tags this) ->
            ResolvedDateTimeFormatOptions.t_of_js
              (Ojs.call (this_to_js Obj.magic x3593) "resolvedOptions" [||])
        let cast_from = Obj.magic
        let (create :
          ?locales:[ `U1 of string  | `U2 of string list ] ->
            ?options:DateTimeFormatOptions.t -> unit -> t)
          =
          fun
            ?locales:(x3595 : [ `U1 of string  | `U2 of string list ] option)
            ->
            fun ?options:(x3596 : DateTimeFormatOptions.t option) ->
              fun () ->
                t_of_js
                  (Ojs.new_obj_arr
                     (Ojs.get_prop_ascii
                        (Ojs.get_prop_ascii Ojs.global "Intl")
                        "DateTimeFormat")
                     (let x3597 =
                        Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                          [||] in
                      (match x3595 with
                       | Some x3599 ->
                           ignore
                             (Ojs.call x3597 "push"
                                [|((match x3599 with
                                    | `U1 x3600 -> Ojs.string_to_js x3600
                                    | `U2 x3601 ->
                                        Ojs.list_to_js Ojs.string_to_js x3601))|])
                       | None -> ());
                      (match x3596 with
                       | Some x3598 ->
                           ignore
                             (Ojs.call x3597 "push"
                                [|(DateTimeFormatOptions.t_to_js x3598)|])
                       | None -> ());
                      x3597))
        let (invoke :
          ?locales:[ `U1 of string  | `U2 of string list ] ->
            ?options:DateTimeFormatOptions.t -> unit -> t)
          =
          fun
            ?locales:(x3603 : [ `U1 of string  | `U2 of string list ] option)
            ->
            fun ?options:(x3604 : DateTimeFormatOptions.t option) ->
              fun () ->
                t_of_js
                  (Ojs.call
                     (Ojs.get_prop_ascii
                        (Ojs.get_prop_ascii Ojs.global "Intl")
                        "DateTimeFormat") "apply"
                     [|Ojs.null;((let x3605 =
                                    Ojs.new_obj
                                      (Ojs.get_prop_ascii Ojs.global "Array")
                                      [||] in
                                  (match x3603 with
                                   | Some x3607 ->
                                       ignore
                                         (Ojs.call x3605 "push"
                                            [|((match x3607 with
                                                | `U1 x3608 ->
                                                    Ojs.string_to_js x3608
                                                | `U2 x3609 ->
                                                    Ojs.list_to_js
                                                      Ojs.string_to_js x3609))|])
                                   | None -> ());
                                  (match x3604 with
                                   | Some x3606 ->
                                       ignore
                                         (Ojs.call x3605 "push"
                                            [|(DateTimeFormatOptions.t_to_js
                                                 x3606)|])
                                   | None -> ());
                                  x3605))|])
        let (supportedLocalesOf :
          locales:[ `U1 of string  | `U2 of string list ] ->
            ?options:DateTimeFormatOptions.t -> unit -> string list)
          =
          fun ~locales:(x3611 : [ `U1 of string  | `U2 of string list ]) ->
            fun ?options:(x3612 : DateTimeFormatOptions.t option) ->
              fun () ->
                Ojs.list_of_js Ojs.string_of_js
                  (let x3618 =
                     Ojs.get_prop_ascii
                       (Ojs.get_prop_ascii Ojs.global "Intl")
                       "DateTimeFormat" in
                   Ojs.call (Ojs.get_prop_ascii x3618 "supportedLocalesOf")
                     "apply"
                     [|x3618;((let x3613 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x3613 "push"
                                    [|((match x3611 with
                                        | `U1 x3615 -> Ojs.string_to_js x3615
                                        | `U2 x3616 ->
                                            Ojs.list_to_js Ojs.string_to_js
                                              x3616))|]);
                               (match x3612 with
                                | Some x3614 ->
                                    ignore
                                      (Ojs.call x3613 "push"
                                         [|(DateTimeFormatOptions.t_to_js
                                              x3614)|])
                                | None -> ());
                               x3613))|])
      end
    module ResolvedCollatorOptions =
      struct
        type t = [ `Intl_ResolvedCollatorOptions ] intf
        let rec t_of_js : Ojs.t -> t = Obj.magic
        and t_to_js : t -> Ojs.t = Obj.magic
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x3621 : Ojs.t) -> t_of_js x3621
        and t_0_to_js : t_0 -> Ojs.t = fun (x3620 : t) -> t_to_js x3620
        type tags = [ `Intl_ResolvedCollatorOptions ]
        type tags_0 = tags
        type 'tags this =
          'tags intf constraint 'tags = [> `Intl_ResolvedCollatorOptions ]
        let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
          =
          fun (type __tags) ->
            fun (__tags_of_js : Ojs.t -> __tags) ->
              fun (x3624 : Ojs.t) -> intf_of_js __tags_of_js x3624
        and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
          fun (type __tags) ->
            fun (__tags_to_js : __tags -> Ojs.t) ->
              fun (x3622 : __tags intf) -> intf_to_js __tags_to_js x3622
        let (get_locale : 'tags this -> string) =
          fun (x3626 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3626) "locale")
        let (set_locale : 'tags this -> string -> unit) =
          fun (x3628 : 'tags this) ->
            fun (x3629 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3628) "locale"
                (Ojs.string_to_js x3629)
        let (get_usage : 'tags this -> string) =
          fun (x3631 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3631) "usage")
        let (set_usage : 'tags this -> string -> unit) =
          fun (x3633 : 'tags this) ->
            fun (x3634 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3633) "usage"
                (Ojs.string_to_js x3634)
        let (get_sensitivity : 'tags this -> string) =
          fun (x3636 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3636) "sensitivity")
        let (set_sensitivity : 'tags this -> string -> unit) =
          fun (x3638 : 'tags this) ->
            fun (x3639 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3638) "sensitivity"
                (Ojs.string_to_js x3639)
        let (get_ignorePunctuation : 'tags this -> bool) =
          fun (x3641 : 'tags this) ->
            Ojs.bool_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3641)
                 "ignorePunctuation")
        let (set_ignorePunctuation : 'tags this -> bool -> unit) =
          fun (x3643 : 'tags this) ->
            fun (x3644 : bool) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3643)
                "ignorePunctuation" (Ojs.bool_to_js x3644)
        let (get_collation : 'tags this -> string) =
          fun (x3646 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3646) "collation")
        let (set_collation : 'tags this -> string -> unit) =
          fun (x3648 : 'tags this) ->
            fun (x3649 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3648) "collation"
                (Ojs.string_to_js x3649)
        let (get_caseFirst : 'tags this -> string) =
          fun (x3651 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3651) "caseFirst")
        let (set_caseFirst : 'tags this -> string -> unit) =
          fun (x3653 : 'tags this) ->
            fun (x3654 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3653) "caseFirst"
                (Ojs.string_to_js x3654)
        let (get_numeric : 'tags this -> bool) =
          fun (x3656 : 'tags this) ->
            Ojs.bool_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3656) "numeric")
        let (set_numeric : 'tags this -> bool -> unit) =
          fun (x3658 : 'tags this) ->
            fun (x3659 : bool) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3658) "numeric"
                (Ojs.bool_to_js x3659)
        let (create :
          locale:string ->
            usage:string ->
              sensitivity:string ->
                ignorePunctuation:bool ->
                  collation:string ->
                    caseFirst:string -> numeric:bool -> unit -> t)
          =
          fun ~locale:(x3661 : string) ->
            fun ~usage:(x3662 : string) ->
              fun ~sensitivity:(x3663 : string) ->
                fun ~ignorePunctuation:(x3664 : bool) ->
                  fun ~collation:(x3665 : string) ->
                    fun ~caseFirst:(x3666 : string) ->
                      fun ~numeric:(x3667 : bool) ->
                        fun () ->
                          let x3668 = Ojs.empty_obj () in
                          Ojs.set_prop_ascii x3668 "locale"
                            (Ojs.string_to_js x3661);
                          Ojs.set_prop_ascii x3668 "usage"
                            (Ojs.string_to_js x3662);
                          Ojs.set_prop_ascii x3668 "sensitivity"
                            (Ojs.string_to_js x3663);
                          Ojs.set_prop_ascii x3668 "ignorePunctuation"
                            (Ojs.bool_to_js x3664);
                          Ojs.set_prop_ascii x3668 "collation"
                            (Ojs.string_to_js x3665);
                          Ojs.set_prop_ascii x3668 "caseFirst"
                            (Ojs.string_to_js x3666);
                          Ojs.set_prop_ascii x3668 "numeric"
                            (Ojs.bool_to_js x3667);
                          t_of_js x3668
        let cast_from = Obj.magic
      end
    module CollatorOptions =
      struct
        type t = [ `Intl_CollatorOptions ] intf
        let rec t_of_js : Ojs.t -> t = Obj.magic
        and t_to_js : t -> Ojs.t = Obj.magic
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x3670 : Ojs.t) -> t_of_js x3670
        and t_0_to_js : t_0 -> Ojs.t = fun (x3669 : t) -> t_to_js x3669
        type tags = [ `Intl_CollatorOptions ]
        type tags_0 = tags
        type 'tags this =
          'tags intf constraint 'tags = [> `Intl_CollatorOptions ]
        let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
          =
          fun (type __tags) ->
            fun (__tags_of_js : Ojs.t -> __tags) ->
              fun (x3673 : Ojs.t) -> intf_of_js __tags_of_js x3673
        and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
          fun (type __tags) ->
            fun (__tags_to_js : __tags -> Ojs.t) ->
              fun (x3671 : __tags intf) -> intf_to_js __tags_to_js x3671
        let (get_usage : 'tags this -> string option option) =
          fun (x3675 : 'tags this) ->
            Ojs.option_of_js
              (fun (x3677 : Ojs.t) -> Ojs.option_of_js Ojs.string_of_js x3677)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3675) "usage")
        let (set_usage :
          'tags this -> [ `Undefined of undefined  | `U1 of string ] -> unit)
          =
          fun (x3679 : 'tags this) ->
            fun (x3680 : [ `Undefined of undefined  | `U1 of string ]) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3679) "usage"
                (match x3680 with
                 | `Undefined x3681 -> undefined_to_js x3681
                 | `U1 x3682 -> Ojs.string_to_js x3682)
        let (get_localeMatcher : 'tags this -> string option option) =
          fun (x3684 : 'tags this) ->
            Ojs.option_of_js
              (fun (x3686 : Ojs.t) -> Ojs.option_of_js Ojs.string_of_js x3686)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3684)
                 "localeMatcher")
        let (set_localeMatcher :
          'tags this -> [ `Undefined of undefined  | `U1 of string ] -> unit)
          =
          fun (x3688 : 'tags this) ->
            fun (x3689 : [ `Undefined of undefined  | `U1 of string ]) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3688) "localeMatcher"
                (match x3689 with
                 | `Undefined x3690 -> undefined_to_js x3690
                 | `U1 x3691 -> Ojs.string_to_js x3691)
        let (get_numeric : 'tags this -> bool option option) =
          fun (x3693 : 'tags this) ->
            Ojs.option_of_js
              (fun (x3695 : Ojs.t) -> Ojs.option_of_js Ojs.bool_of_js x3695)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3693) "numeric")
        let (set_numeric :
          'tags this -> [ `Undefined of undefined  | `U1 of bool ] -> unit) =
          fun (x3697 : 'tags this) ->
            fun (x3698 : [ `Undefined of undefined  | `U1 of bool ]) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3697) "numeric"
                (match x3698 with
                 | `Undefined x3699 -> undefined_to_js x3699
                 | `U1 x3700 -> Ojs.bool_to_js x3700)
        let (get_caseFirst : 'tags this -> string option option) =
          fun (x3702 : 'tags this) ->
            Ojs.option_of_js
              (fun (x3704 : Ojs.t) -> Ojs.option_of_js Ojs.string_of_js x3704)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3702) "caseFirst")
        let (set_caseFirst :
          'tags this -> [ `Undefined of undefined  | `U1 of string ] -> unit)
          =
          fun (x3706 : 'tags this) ->
            fun (x3707 : [ `Undefined of undefined  | `U1 of string ]) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3706) "caseFirst"
                (match x3707 with
                 | `Undefined x3708 -> undefined_to_js x3708
                 | `U1 x3709 -> Ojs.string_to_js x3709)
        let (get_sensitivity : 'tags this -> string option option) =
          fun (x3711 : 'tags this) ->
            Ojs.option_of_js
              (fun (x3713 : Ojs.t) -> Ojs.option_of_js Ojs.string_of_js x3713)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3711) "sensitivity")
        let (set_sensitivity :
          'tags this -> [ `Undefined of undefined  | `U1 of string ] -> unit)
          =
          fun (x3715 : 'tags this) ->
            fun (x3716 : [ `Undefined of undefined  | `U1 of string ]) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3715) "sensitivity"
                (match x3716 with
                 | `Undefined x3717 -> undefined_to_js x3717
                 | `U1 x3718 -> Ojs.string_to_js x3718)
        let (get_ignorePunctuation : 'tags this -> bool option option) =
          fun (x3720 : 'tags this) ->
            Ojs.option_of_js
              (fun (x3722 : Ojs.t) -> Ojs.option_of_js Ojs.bool_of_js x3722)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3720)
                 "ignorePunctuation")
        let (set_ignorePunctuation :
          'tags this -> [ `Undefined of undefined  | `U1 of bool ] -> unit) =
          fun (x3724 : 'tags this) ->
            fun (x3725 : [ `Undefined of undefined  | `U1 of bool ]) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3724)
                "ignorePunctuation"
                (match x3725 with
                 | `Undefined x3726 -> undefined_to_js x3726
                 | `U1 x3727 -> Ojs.bool_to_js x3727)
        let (create :
          ?usage:string ->
            ?localeMatcher:string ->
              ?numeric:bool ->
                ?caseFirst:string ->
                  ?sensitivity:string -> ?ignorePunctuation:bool -> unit -> t)
          =
          fun ?usage:(x3729 : string option) ->
            fun ?localeMatcher:(x3730 : string option) ->
              fun ?numeric:(x3731 : bool option) ->
                fun ?caseFirst:(x3732 : string option) ->
                  fun ?sensitivity:(x3733 : string option) ->
                    fun ?ignorePunctuation:(x3734 : bool option) ->
                      fun () ->
                        let x3735 = Ojs.empty_obj () in
                        (match x3729 with
                         | Some x3741 ->
                             Ojs.set_prop_ascii x3735 "usage"
                               (Ojs.string_to_js x3741)
                         | None -> ());
                        (match x3730 with
                         | Some x3740 ->
                             Ojs.set_prop_ascii x3735 "localeMatcher"
                               (Ojs.string_to_js x3740)
                         | None -> ());
                        (match x3731 with
                         | Some x3739 ->
                             Ojs.set_prop_ascii x3735 "numeric"
                               (Ojs.bool_to_js x3739)
                         | None -> ());
                        (match x3732 with
                         | Some x3738 ->
                             Ojs.set_prop_ascii x3735 "caseFirst"
                               (Ojs.string_to_js x3738)
                         | None -> ());
                        (match x3733 with
                         | Some x3737 ->
                             Ojs.set_prop_ascii x3735 "sensitivity"
                               (Ojs.string_to_js x3737)
                         | None -> ());
                        (match x3734 with
                         | Some x3736 ->
                             Ojs.set_prop_ascii x3735 "ignorePunctuation"
                               (Ojs.bool_to_js x3736)
                         | None -> ());
                        t_of_js x3735
        let cast_from = Obj.magic
      end
    module Collator =
      struct
        type t = [ `Intl_Collator ] intf
        let rec t_of_js : Ojs.t -> t = Obj.magic
        and t_to_js : t -> Ojs.t = Obj.magic
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x3743 : Ojs.t) -> t_of_js x3743
        and t_0_to_js : t_0 -> Ojs.t = fun (x3742 : t) -> t_to_js x3742
        type tags = [ `Intl_Collator ]
        type tags_0 = tags
        type 'tags this = 'tags intf constraint 'tags = [> `Intl_Collator ]
        let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
          =
          fun (type __tags) ->
            fun (__tags_of_js : Ojs.t -> __tags) ->
              fun (x3746 : Ojs.t) -> intf_of_js __tags_of_js x3746
        and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
          fun (type __tags) ->
            fun (__tags_to_js : __tags -> Ojs.t) ->
              fun (x3744 : __tags intf) -> intf_to_js __tags_to_js x3744
        let (compare : 'tags this -> x:string -> y:string -> float) =
          fun (x3750 : 'tags this) ->
            fun ~x:(x3748 : string) ->
              fun ~y:(x3749 : string) ->
                Ojs.float_of_js
                  (Ojs.call (this_to_js Obj.magic x3750) "compare"
                     [|(Ojs.string_to_js x3748);(Ojs.string_to_js x3749)|])
        let (resolvedOptions : 'tags this -> ResolvedCollatorOptions.t) =
          fun (x3752 : 'tags this) ->
            ResolvedCollatorOptions.t_of_js
              (Ojs.call (this_to_js Obj.magic x3752) "resolvedOptions" [||])
        let cast_from = Obj.magic
        let (create :
          ?locales:[ `U1 of string  | `U2 of string list ] ->
            ?options:CollatorOptions.t -> unit -> t)
          =
          fun
            ?locales:(x3754 : [ `U1 of string  | `U2 of string list ] option)
            ->
            fun ?options:(x3755 : CollatorOptions.t option) ->
              fun () ->
                t_of_js
                  (Ojs.new_obj_arr
                     (Ojs.get_prop_ascii
                        (Ojs.get_prop_ascii Ojs.global "Intl") "Collator")
                     (let x3756 =
                        Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                          [||] in
                      (match x3754 with
                       | Some x3758 ->
                           ignore
                             (Ojs.call x3756 "push"
                                [|((match x3758 with
                                    | `U1 x3759 -> Ojs.string_to_js x3759
                                    | `U2 x3760 ->
                                        Ojs.list_to_js Ojs.string_to_js x3760))|])
                       | None -> ());
                      (match x3755 with
                       | Some x3757 ->
                           ignore
                             (Ojs.call x3756 "push"
                                [|(CollatorOptions.t_to_js x3757)|])
                       | None -> ());
                      x3756))
        let (invoke :
          ?locales:[ `U1 of string  | `U2 of string list ] ->
            ?options:CollatorOptions.t -> unit -> t)
          =
          fun
            ?locales:(x3762 : [ `U1 of string  | `U2 of string list ] option)
            ->
            fun ?options:(x3763 : CollatorOptions.t option) ->
              fun () ->
                t_of_js
                  (Ojs.call
                     (Ojs.get_prop_ascii
                        (Ojs.get_prop_ascii Ojs.global "Intl") "Collator")
                     "apply"
                     [|Ojs.null;((let x3764 =
                                    Ojs.new_obj
                                      (Ojs.get_prop_ascii Ojs.global "Array")
                                      [||] in
                                  (match x3762 with
                                   | Some x3766 ->
                                       ignore
                                         (Ojs.call x3764 "push"
                                            [|((match x3766 with
                                                | `U1 x3767 ->
                                                    Ojs.string_to_js x3767
                                                | `U2 x3768 ->
                                                    Ojs.list_to_js
                                                      Ojs.string_to_js x3768))|])
                                   | None -> ());
                                  (match x3763 with
                                   | Some x3765 ->
                                       ignore
                                         (Ojs.call x3764 "push"
                                            [|(CollatorOptions.t_to_js x3765)|])
                                   | None -> ());
                                  x3764))|])
        let (supportedLocalesOf :
          locales:[ `U1 of string  | `U2 of string list ] ->
            ?options:CollatorOptions.t -> unit -> string list)
          =
          fun ~locales:(x3770 : [ `U1 of string  | `U2 of string list ]) ->
            fun ?options:(x3771 : CollatorOptions.t option) ->
              fun () ->
                Ojs.list_of_js Ojs.string_of_js
                  (let x3777 =
                     Ojs.get_prop_ascii
                       (Ojs.get_prop_ascii Ojs.global "Intl") "Collator" in
                   Ojs.call (Ojs.get_prop_ascii x3777 "supportedLocalesOf")
                     "apply"
                     [|x3777;((let x3772 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x3772 "push"
                                    [|((match x3770 with
                                        | `U1 x3774 -> Ojs.string_to_js x3774
                                        | `U2 x3775 ->
                                            Ojs.list_to_js Ojs.string_to_js
                                              x3775))|]);
                               (match x3771 with
                                | Some x3773 ->
                                    ignore
                                      (Ojs.call x3772 "push"
                                         [|(CollatorOptions.t_to_js x3773)|])
                                | None -> ());
                               x3772))|])
      end
  end
module String =
  struct
    module AnonymousInterface6 =
      struct
        type t = Ojs.t
        let rec t_of_js : Ojs.t -> t = fun (x3780 : Ojs.t) -> x3780
        and t_to_js : t -> Ojs.t = fun (x3779 : Ojs.t) -> x3779
        let (get_raw : t -> (string ArrayLike.t, string list) union2) =
          fun (x3781 : t) ->
            union2_of_js
              (fun (x3782 : Ojs.t) ->
                 ArrayLike.t_of_js Ojs.string_of_js x3782)
              (fun (x3784 : Ojs.t) -> Ojs.list_of_js Ojs.string_of_js x3784)
              (Ojs.get_prop_ascii (t_to_js x3781) "raw")
        let (set_raw :
          t -> [ `U1 of string list  | `U2 of string ArrayLike.t ] -> unit) =
          fun (x3786 : t) ->
            fun (x3787 : [ `U1 of string list  | `U2 of string ArrayLike.t ])
              ->
              Ojs.set_prop_ascii (t_to_js x3786) "raw"
                (match x3787 with
                 | `U1 x3788 -> Ojs.list_to_js Ojs.string_to_js x3788
                 | `U2 x3790 -> ArrayLike.t_to_js Ojs.string_to_js x3790)
        let (create :
          raw:(string ArrayLike.t, string list) union2 -> unit -> t) =
          fun ~raw:(x3792 : (string ArrayLike.t, string list) union2) ->
            fun () ->
              let x3793 = Ojs.empty_obj () in
              Ojs.set_prop_ascii x3793 "raw"
                (union2_to_js
                   (fun (x3794 : string ArrayLike.t) ->
                      ArrayLike.t_to_js Ojs.string_to_js x3794)
                   (fun (x3796 : string list) ->
                      Ojs.list_to_js Ojs.string_to_js x3796) x3792);
              t_of_js x3793
      end
    module AnonymousInterface22 =
      struct
        type t = Ojs.t
        let rec t_of_js : Ojs.t -> t = fun (x3799 : Ojs.t) -> x3799
        and t_to_js : t -> Ojs.t = fun (x3798 : Ojs.t) -> x3798
      end
    module AnonymousInterface21 =
      struct
        type t = Ojs.t
        let rec t_of_js : Ojs.t -> t = fun (x3801 : Ojs.t) -> x3801
        and t_to_js : t -> Ojs.t = fun (x3800 : Ojs.t) -> x3800
      end
    module AnonymousInterface20 =
      struct
        type t = Ojs.t
        let rec t_of_js : Ojs.t -> t = fun (x3803 : Ojs.t) -> x3803
        and t_to_js : t -> Ojs.t = fun (x3802 : Ojs.t) -> x3802
      end
    module AnonymousInterface19 =
      struct
        type t = Ojs.t
        let rec t_of_js : Ojs.t -> t = fun (x3805 : Ojs.t) -> x3805
        and t_to_js : t -> Ojs.t = fun (x3804 : Ojs.t) -> x3804
      end
    module AnonymousInterface18 =
      struct
        type t = Ojs.t
        let rec t_of_js : Ojs.t -> t = fun (x3807 : Ojs.t) -> x3807
        and t_to_js : t -> Ojs.t = fun (x3806 : Ojs.t) -> x3806
      end
    type t =
      [ `String  | string ArrayLike.tags_1 | string IterableIterator.tags_1]
        intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x3809 : Ojs.t) -> t_of_js x3809
    and t_0_to_js : t_0 -> Ojs.t = fun (x3808 : t) -> t_to_js x3808
    type tags =
      [ `String  | string ArrayLike.tags_1 | string IterableIterator.tags_1]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `String ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x3812 : Ojs.t) -> intf_of_js __tags_of_js x3812
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x3810 : __tags intf) -> intf_to_js __tags_to_js x3810
    let (replaceAll :
      'tags this ->
        searchValue:[ `U1 of string  | `U2 of RegExp.t ] ->
          replaceValue:string -> string)
      =
      fun (x3818 : 'tags this) ->
        fun ~searchValue:(x3814 : [ `U1 of string  | `U2 of RegExp.t ]) ->
          fun ~replaceValue:(x3817 : string) ->
            Ojs.string_of_js
              (Ojs.call (this_to_js Obj.magic x3818) "replaceAll"
                 [|((match x3814 with
                     | `U1 x3815 -> Ojs.string_to_js x3815
                     | `U2 x3816 -> RegExp.t_to_js x3816));(Ojs.string_to_js
                                                              x3817)|])
    let (replaceAll' :
      'tags this ->
        searchValue:[ `U1 of string  | `U2 of RegExp.t ] ->
          replacer:(substring:string -> args:any list -> string) -> string)
      =
      fun (x3826 : 'tags this) ->
        fun ~searchValue:(x3820 : [ `U1 of string  | `U2 of RegExp.t ]) ->
          fun ~replacer:(x3823 : substring:string -> args:any list -> string)
            ->
            Ojs.string_of_js
              (Ojs.call (this_to_js Obj.magic x3826) "replaceAll"
                 [|((match x3820 with
                     | `U1 x3821 -> Ojs.string_to_js x3821
                     | `U2 x3822 -> RegExp.t_to_js x3822));(Ojs.fun_to_js_args
                                                              (fun
                                                                 (x3824 : _)
                                                                 ->
                                                                 Ojs.string_to_js
                                                                   (x3823
                                                                    ~substring:(
                                                                    Ojs.string_of_js
                                                                    (Ojs.array_get
                                                                    x3824 0))
                                                                    ~args:(
                                                                    Ojs.list_of_js_from
                                                                    any_of_js
                                                                    x3824 1))))|])
    let (at : 'tags this -> index:float -> string option) =
      fun (x3829 : 'tags this) ->
        fun ~index:(x3828 : float) ->
          Ojs.option_of_js Ojs.string_of_js
            (Ojs.call (this_to_js Obj.magic x3829) "at"
               [|(Ojs.float_to_js x3828)|])
    let (replaceAll'' :
      'tags this ->
        searchValue:[ `U1 of string  | `U2 of RegExp.t ] ->
          replaceValue:string -> string)
      =
      fun (x3836 : 'tags this) ->
        fun ~searchValue:(x3832 : [ `U1 of string  | `U2 of RegExp.t ]) ->
          fun ~replaceValue:(x3835 : string) ->
            Ojs.string_of_js
              (Ojs.call (this_to_js Obj.magic x3836) "replaceAll"
                 [|((match x3832 with
                     | `U1 x3833 -> Ojs.string_to_js x3833
                     | `U2 x3834 -> RegExp.t_to_js x3834));(Ojs.string_to_js
                                                              x3835)|])
    let (replaceAll''' :
      'tags this ->
        searchValue:[ `U1 of string  | `U2 of RegExp.t ] ->
          replacer:(substring:string -> args:any list -> string) -> string)
      =
      fun (x3844 : 'tags this) ->
        fun ~searchValue:(x3838 : [ `U1 of string  | `U2 of RegExp.t ]) ->
          fun ~replacer:(x3841 : substring:string -> args:any list -> string)
            ->
            Ojs.string_of_js
              (Ojs.call (this_to_js Obj.magic x3844) "replaceAll"
                 [|((match x3838 with
                     | `U1 x3839 -> Ojs.string_to_js x3839
                     | `U2 x3840 -> RegExp.t_to_js x3840));(Ojs.fun_to_js_args
                                                              (fun
                                                                 (x3842 : _)
                                                                 ->
                                                                 Ojs.string_to_js
                                                                   (x3841
                                                                    ~substring:(
                                                                    Ojs.string_of_js
                                                                    (Ojs.array_get
                                                                    x3842 0))
                                                                    ~args:(
                                                                    Ojs.list_of_js_from
                                                                    any_of_js
                                                                    x3842 1))))|])
    let (matchAll :
      'tags this -> regexp:RegExp.t -> RegExpMatchArray.t IterableIterator.t)
      =
      fun (x3847 : 'tags this) ->
        fun ~regexp:(x3846 : RegExp.t) ->
          IterableIterator.t_of_js RegExpMatchArray.t_of_js
            (Ojs.call (this_to_js Obj.magic x3847) "matchAll"
               [|(RegExp.t_to_js x3846)|])
    let (trimEnd : 'tags this -> string) =
      fun (x3850 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x3850) "trimEnd" [||])
    let (trimStart : 'tags this -> string) =
      fun (x3852 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x3852) "trimStart" [||])
    let (trimLeft : 'tags this -> string) =
      fun (x3854 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x3854) "trimLeft" [||])
    let (trimRight : 'tags this -> string) =
      fun (x3856 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x3856) "trimRight" [||])
    let (padStart :
      'tags this -> maxLength:float -> ?fillString:string -> unit -> string)
      =
      fun (x3862 : 'tags this) ->
        fun ~maxLength:(x3858 : float) ->
          fun ?fillString:(x3859 : string option) ->
            fun () ->
              Ojs.string_of_js
                (let x3864 = this_to_js Obj.magic x3862 in
                 Ojs.call (Ojs.get_prop_ascii x3864 "padStart") "apply"
                   [|x3864;((let x3860 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x3860 "push"
                                  [|(Ojs.float_to_js x3858)|]);
                             (match x3859 with
                              | Some x3861 ->
                                  ignore
                                    (Ojs.call x3860 "push"
                                       [|(Ojs.string_to_js x3861)|])
                              | None -> ());
                             x3860))|])
    let (padEnd :
      'tags this -> maxLength:float -> ?fillString:string -> unit -> string)
      =
      fun (x3869 : 'tags this) ->
        fun ~maxLength:(x3865 : float) ->
          fun ?fillString:(x3866 : string option) ->
            fun () ->
              Ojs.string_of_js
                (let x3871 = this_to_js Obj.magic x3869 in
                 Ojs.call (Ojs.get_prop_ascii x3871 "padEnd") "apply"
                   [|x3871;((let x3867 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x3867 "push"
                                  [|(Ojs.float_to_js x3865)|]);
                             (match x3866 with
                              | Some x3868 ->
                                  ignore
                                    (Ojs.call x3867 "push"
                                       [|(Ojs.string_to_js x3868)|])
                              | None -> ());
                             x3867))|])
    let (match_ :
      'tags this ->
        matcher:AnonymousInterface18.t -> RegExpMatchArray.t option)
      =
      fun (x3873 : 'tags this) ->
        fun ~matcher:(x3872 : AnonymousInterface18.t) ->
          Ojs.option_of_js RegExpMatchArray.t_of_js
            (Ojs.call (this_to_js Obj.magic x3873) "match"
               [|(AnonymousInterface18.t_to_js x3872)|])
    let (replace :
      'tags this ->
        searchValue:AnonymousInterface19.t -> replaceValue:string -> string)
      =
      fun (x3878 : 'tags this) ->
        fun ~searchValue:(x3876 : AnonymousInterface19.t) ->
          fun ~replaceValue:(x3877 : string) ->
            Ojs.string_of_js
              (Ojs.call (this_to_js Obj.magic x3878) "replace"
                 [|(AnonymousInterface19.t_to_js x3876);(Ojs.string_to_js
                                                           x3877)|])
    let (replace' :
      'tags this ->
        searchValue:AnonymousInterface20.t ->
          replacer:(substring:string -> args:any list -> string) -> string)
      =
      fun (x3884 : 'tags this) ->
        fun ~searchValue:(x3880 : AnonymousInterface20.t) ->
          fun ~replacer:(x3881 : substring:string -> args:any list -> string)
            ->
            Ojs.string_of_js
              (Ojs.call (this_to_js Obj.magic x3884) "replace"
                 [|(AnonymousInterface20.t_to_js x3880);(Ojs.fun_to_js_args
                                                           (fun (x3882 : _)
                                                              ->
                                                              Ojs.string_to_js
                                                                (x3881
                                                                   ~substring:(
                                                                   Ojs.string_of_js
                                                                    (Ojs.array_get
                                                                    x3882 0))
                                                                   ~args:(
                                                                   Ojs.list_of_js_from
                                                                    any_of_js
                                                                    x3882 1))))|])
    let (search : 'tags this -> searcher:AnonymousInterface21.t -> float) =
      fun (x3887 : 'tags this) ->
        fun ~searcher:(x3886 : AnonymousInterface21.t) ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x3887) "search"
               [|(AnonymousInterface21.t_to_js x3886)|])
    let (split :
      'tags this ->
        splitter:AnonymousInterface22.t ->
          ?limit:float -> unit -> string list)
      =
      fun (x3893 : 'tags this) ->
        fun ~splitter:(x3889 : AnonymousInterface22.t) ->
          fun ?limit:(x3890 : float option) ->
            fun () ->
              Ojs.list_of_js Ojs.string_of_js
                (let x3895 = this_to_js Obj.magic x3893 in
                 Ojs.call (Ojs.get_prop_ascii x3895 "split") "apply"
                   [|x3895;((let x3891 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x3891 "push"
                                  [|(AnonymousInterface22.t_to_js x3889)|]);
                             (match x3890 with
                              | Some x3892 ->
                                  ignore
                                    (Ojs.call x3891 "push"
                                       [|(Ojs.float_to_js x3892)|])
                              | None -> ());
                             x3891))|])
    let (codePointAt : 'tags this -> pos:float -> float option) =
      fun (x3898 : 'tags this) ->
        fun ~pos:(x3897 : float) ->
          Ojs.option_of_js Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x3898) "codePointAt"
               [|(Ojs.float_to_js x3897)|])
    let (includes :
      'tags this -> searchString:string -> ?position:float -> unit -> bool) =
      fun (x3905 : 'tags this) ->
        fun ~searchString:(x3901 : string) ->
          fun ?position:(x3902 : float option) ->
            fun () ->
              Ojs.bool_of_js
                (let x3907 = this_to_js Obj.magic x3905 in
                 Ojs.call (Ojs.get_prop_ascii x3907 "includes") "apply"
                   [|x3907;((let x3903 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x3903 "push"
                                  [|(Ojs.string_to_js x3901)|]);
                             (match x3902 with
                              | Some x3904 ->
                                  ignore
                                    (Ojs.call x3903 "push"
                                       [|(Ojs.float_to_js x3904)|])
                              | None -> ());
                             x3903))|])
    let (endsWith :
      'tags this -> searchString:string -> ?endPosition:float -> unit -> bool)
      =
      fun (x3912 : 'tags this) ->
        fun ~searchString:(x3908 : string) ->
          fun ?endPosition:(x3909 : float option) ->
            fun () ->
              Ojs.bool_of_js
                (let x3914 = this_to_js Obj.magic x3912 in
                 Ojs.call (Ojs.get_prop_ascii x3914 "endsWith") "apply"
                   [|x3914;((let x3910 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x3910 "push"
                                  [|(Ojs.string_to_js x3908)|]);
                             (match x3909 with
                              | Some x3911 ->
                                  ignore
                                    (Ojs.call x3910 "push"
                                       [|(Ojs.float_to_js x3911)|])
                              | None -> ());
                             x3910))|])
    let (normalize :
      'tags this ->
        form:[ `U1 of [ `L_s11_NFC ]  | `U2 of [ `L_s12_NFD ] 
             | `U3 of [ `L_s13_NFKC ]  | `U4 of [ `L_s14_NFKD ] ]
          -> string)
      =
      fun (x3920 : 'tags this) ->
        fun
          ~form:(x3915 :
                  [ `U1 of [ `L_s11_NFC ]  | `U2 of [ `L_s12_NFD ] 
                  | `U3 of [ `L_s13_NFKC ]  | `U4 of [ `L_s14_NFKD ] ])
          ->
          Ojs.string_of_js
            (Ojs.call (this_to_js Obj.magic x3920) "normalize"
               [|((match x3915 with
                   | `U1 x3916 ->
                       (match x3916 with
                        | `L_s11_NFC -> Ojs.string_to_js "NFC")
                   | `U2 x3917 ->
                       (match x3917 with
                        | `L_s12_NFD -> Ojs.string_to_js "NFD")
                   | `U3 x3918 ->
                       (match x3918 with
                        | `L_s13_NFKC -> Ojs.string_to_js "NFKC")
                   | `U4 x3919 ->
                       (match x3919 with
                        | `L_s14_NFKD -> Ojs.string_to_js "NFKD")))|])
    let (normalize' : 'tags this -> ?form:string -> unit -> string) =
      fun (x3925 : 'tags this) ->
        fun ?form:(x3922 : string option) ->
          fun () ->
            Ojs.string_of_js
              (let x3927 = this_to_js Obj.magic x3925 in
               Ojs.call (Ojs.get_prop_ascii x3927 "normalize") "apply"
                 [|x3927;((let x3923 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x3922 with
                            | Some x3924 ->
                                ignore
                                  (Ojs.call x3923 "push"
                                     [|(Ojs.string_to_js x3924)|])
                            | None -> ());
                           x3923))|])
    let (repeat : 'tags this -> count:float -> string) =
      fun (x3929 : 'tags this) ->
        fun ~count:(x3928 : float) ->
          Ojs.string_of_js
            (Ojs.call (this_to_js Obj.magic x3929) "repeat"
               [|(Ojs.float_to_js x3928)|])
    let (startsWith :
      'tags this -> searchString:string -> ?position:float -> unit -> bool) =
      fun (x3935 : 'tags this) ->
        fun ~searchString:(x3931 : string) ->
          fun ?position:(x3932 : float option) ->
            fun () ->
              Ojs.bool_of_js
                (let x3937 = this_to_js Obj.magic x3935 in
                 Ojs.call (Ojs.get_prop_ascii x3937 "startsWith") "apply"
                   [|x3937;((let x3933 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x3933 "push"
                                  [|(Ojs.string_to_js x3931)|]);
                             (match x3932 with
                              | Some x3934 ->
                                  ignore
                                    (Ojs.call x3933 "push"
                                       [|(Ojs.float_to_js x3934)|])
                              | None -> ());
                             x3933))|])
    let (anchor : 'tags this -> name:string -> string) =
      fun (x3939 : 'tags this) ->
        fun ~name:(x3938 : string) ->
          Ojs.string_of_js
            (Ojs.call (this_to_js Obj.magic x3939) "anchor"
               [|(Ojs.string_to_js x3938)|])
    let (big : 'tags this -> string) =
      fun (x3941 : 'tags this) ->
        Ojs.string_of_js (Ojs.call (this_to_js Obj.magic x3941) "big" [||])
    let (blink : 'tags this -> string) =
      fun (x3943 : 'tags this) ->
        Ojs.string_of_js (Ojs.call (this_to_js Obj.magic x3943) "blink" [||])
    let (bold : 'tags this -> string) =
      fun (x3945 : 'tags this) ->
        Ojs.string_of_js (Ojs.call (this_to_js Obj.magic x3945) "bold" [||])
    let (fixed : 'tags this -> string) =
      fun (x3947 : 'tags this) ->
        Ojs.string_of_js (Ojs.call (this_to_js Obj.magic x3947) "fixed" [||])
    let (fontcolor : 'tags this -> color:string -> string) =
      fun (x3950 : 'tags this) ->
        fun ~color:(x3949 : string) ->
          Ojs.string_of_js
            (Ojs.call (this_to_js Obj.magic x3950) "fontcolor"
               [|(Ojs.string_to_js x3949)|])
    let (fontsize : 'tags this -> size:float -> string) =
      fun (x3953 : 'tags this) ->
        fun ~size:(x3952 : float) ->
          Ojs.string_of_js
            (Ojs.call (this_to_js Obj.magic x3953) "fontsize"
               [|(Ojs.float_to_js x3952)|])
    let (fontsize' : 'tags this -> size:string -> string) =
      fun (x3956 : 'tags this) ->
        fun ~size:(x3955 : string) ->
          Ojs.string_of_js
            (Ojs.call (this_to_js Obj.magic x3956) "fontsize"
               [|(Ojs.string_to_js x3955)|])
    let (italics : 'tags this -> string) =
      fun (x3958 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x3958) "italics" [||])
    let (link : 'tags this -> url:string -> string) =
      fun (x3961 : 'tags this) ->
        fun ~url:(x3960 : string) ->
          Ojs.string_of_js
            (Ojs.call (this_to_js Obj.magic x3961) "link"
               [|(Ojs.string_to_js x3960)|])
    let (small : 'tags this -> string) =
      fun (x3963 : 'tags this) ->
        Ojs.string_of_js (Ojs.call (this_to_js Obj.magic x3963) "small" [||])
    let (strike : 'tags this -> string) =
      fun (x3965 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x3965) "strike" [||])
    let (sub : 'tags this -> string) =
      fun (x3967 : 'tags this) ->
        Ojs.string_of_js (Ojs.call (this_to_js Obj.magic x3967) "sub" [||])
    let (sup : 'tags this -> string) =
      fun (x3969 : 'tags this) ->
        Ojs.string_of_js (Ojs.call (this_to_js Obj.magic x3969) "sup" [||])
    let (localeCompare :
      'tags this ->
        that:string ->
          ?locales:[ `U1 of string  | `U2 of string list ] ->
            ?options:Intl.CollatorOptions.t -> unit -> float)
      =
      fun (x3980 : 'tags this) ->
        fun ~that:(x3971 : string) ->
          fun
            ?locales:(x3972 : [ `U1 of string  | `U2 of string list ] option)
            ->
            fun ?options:(x3973 : Intl.CollatorOptions.t option) ->
              fun () ->
                Ojs.float_of_js
                  (let x3982 = this_to_js Obj.magic x3980 in
                   Ojs.call (Ojs.get_prop_ascii x3982 "localeCompare")
                     "apply"
                     [|x3982;((let x3974 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x3974 "push"
                                    [|(Ojs.string_to_js x3971)|]);
                               (match x3972 with
                                | Some x3976 ->
                                    ignore
                                      (Ojs.call x3974 "push"
                                         [|((match x3976 with
                                             | `U1 x3977 ->
                                                 Ojs.string_to_js x3977
                                             | `U2 x3978 ->
                                                 Ojs.list_to_js
                                                   Ojs.string_to_js x3978))|])
                                | None -> ());
                               (match x3973 with
                                | Some x3975 ->
                                    ignore
                                      (Ojs.call x3974 "push"
                                         [|(Intl.CollatorOptions.t_to_js
                                              x3975)|])
                                | None -> ());
                               x3974))|])
    let (toString : 'tags this -> string) =
      fun (x3983 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x3983) "toString" [||])
    let (charAt : 'tags this -> pos:float -> string) =
      fun (x3986 : 'tags this) ->
        fun ~pos:(x3985 : float) ->
          Ojs.string_of_js
            (Ojs.call (this_to_js Obj.magic x3986) "charAt"
               [|(Ojs.float_to_js x3985)|])
    let (charCodeAt : 'tags this -> index:float -> float) =
      fun (x3989 : 'tags this) ->
        fun ~index:(x3988 : float) ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x3989) "charCodeAt"
               [|(Ojs.float_to_js x3988)|])
    let (concat : 'tags this -> strings:string list -> string) =
      fun (x3994 : 'tags this) ->
        fun ~strings:(x3991 : string list) ->
          Ojs.string_of_js
            (let x3996 = this_to_js Obj.magic x3994 in
             Ojs.call (Ojs.get_prop_ascii x3996 "concat") "apply"
               [|x3996;((let x3992 =
                           Ojs.new_obj
                             (Ojs.get_prop_ascii Ojs.global "Array") 
                             [||] in
                         List.iter
                           (fun (x3993 : string) ->
                              ignore
                                (Ojs.call x3992 "push"
                                   [|(Ojs.string_to_js x3993)|])) x3991;
                         x3992))|])
    let (indexOf :
      'tags this -> searchString:string -> ?position:float -> unit -> float)
      =
      fun (x4001 : 'tags this) ->
        fun ~searchString:(x3997 : string) ->
          fun ?position:(x3998 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x4003 = this_to_js Obj.magic x4001 in
                 Ojs.call (Ojs.get_prop_ascii x4003 "indexOf") "apply"
                   [|x4003;((let x3999 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x3999 "push"
                                  [|(Ojs.string_to_js x3997)|]);
                             (match x3998 with
                              | Some x4000 ->
                                  ignore
                                    (Ojs.call x3999 "push"
                                       [|(Ojs.float_to_js x4000)|])
                              | None -> ());
                             x3999))|])
    let (lastIndexOf :
      'tags this -> searchString:string -> ?position:float -> unit -> float)
      =
      fun (x4008 : 'tags this) ->
        fun ~searchString:(x4004 : string) ->
          fun ?position:(x4005 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x4010 = this_to_js Obj.magic x4008 in
                 Ojs.call (Ojs.get_prop_ascii x4010 "lastIndexOf") "apply"
                   [|x4010;((let x4006 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x4006 "push"
                                  [|(Ojs.string_to_js x4004)|]);
                             (match x4005 with
                              | Some x4007 ->
                                  ignore
                                    (Ojs.call x4006 "push"
                                       [|(Ojs.float_to_js x4007)|])
                              | None -> ());
                             x4006))|])
    let (localeCompare' : 'tags this -> that:string -> float) =
      fun (x4012 : 'tags this) ->
        fun ~that:(x4011 : string) ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x4012) "localeCompare"
               [|(Ojs.string_to_js x4011)|])
    let (match_' :
      'tags this ->
        regexp:[ `U1 of string  | `U2 of RegExp.t ] ->
          RegExpMatchArray.t option)
      =
      fun (x4017 : 'tags this) ->
        fun ~regexp:(x4014 : [ `U1 of string  | `U2 of RegExp.t ]) ->
          Ojs.option_of_js RegExpMatchArray.t_of_js
            (Ojs.call (this_to_js Obj.magic x4017) "match"
               [|((match x4014 with
                   | `U1 x4015 -> Ojs.string_to_js x4015
                   | `U2 x4016 -> RegExp.t_to_js x4016))|])
    let (replace'' :
      'tags this ->
        searchValue:[ `U1 of string  | `U2 of RegExp.t ] ->
          replaceValue:string -> string)
      =
      fun (x4024 : 'tags this) ->
        fun ~searchValue:(x4020 : [ `U1 of string  | `U2 of RegExp.t ]) ->
          fun ~replaceValue:(x4023 : string) ->
            Ojs.string_of_js
              (Ojs.call (this_to_js Obj.magic x4024) "replace"
                 [|((match x4020 with
                     | `U1 x4021 -> Ojs.string_to_js x4021
                     | `U2 x4022 -> RegExp.t_to_js x4022));(Ojs.string_to_js
                                                              x4023)|])
    let (replace''' :
      'tags this ->
        searchValue:[ `U1 of string  | `U2 of RegExp.t ] ->
          replacer:(substring:string -> args:any list -> string) -> string)
      =
      fun (x4032 : 'tags this) ->
        fun ~searchValue:(x4026 : [ `U1 of string  | `U2 of RegExp.t ]) ->
          fun ~replacer:(x4029 : substring:string -> args:any list -> string)
            ->
            Ojs.string_of_js
              (Ojs.call (this_to_js Obj.magic x4032) "replace"
                 [|((match x4026 with
                     | `U1 x4027 -> Ojs.string_to_js x4027
                     | `U2 x4028 -> RegExp.t_to_js x4028));(Ojs.fun_to_js_args
                                                              (fun
                                                                 (x4030 : _)
                                                                 ->
                                                                 Ojs.string_to_js
                                                                   (x4029
                                                                    ~substring:(
                                                                    Ojs.string_of_js
                                                                    (Ojs.array_get
                                                                    x4030 0))
                                                                    ~args:(
                                                                    Ojs.list_of_js_from
                                                                    any_of_js
                                                                    x4030 1))))|])
    let (search' :
      'tags this -> regexp:[ `U1 of string  | `U2 of RegExp.t ] -> float) =
      fun (x4037 : 'tags this) ->
        fun ~regexp:(x4034 : [ `U1 of string  | `U2 of RegExp.t ]) ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x4037) "search"
               [|((match x4034 with
                   | `U1 x4035 -> Ojs.string_to_js x4035
                   | `U2 x4036 -> RegExp.t_to_js x4036))|])
    let (slice : 'tags this -> ?start:float -> ?end_:float -> unit -> string)
      =
      fun (x4044 : 'tags this) ->
        fun ?start:(x4039 : float option) ->
          fun ?end_:(x4040 : float option) ->
            fun () ->
              Ojs.string_of_js
                (let x4046 = this_to_js Obj.magic x4044 in
                 Ojs.call (Ojs.get_prop_ascii x4046 "slice") "apply"
                   [|x4046;((let x4041 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x4039 with
                              | Some x4043 ->
                                  ignore
                                    (Ojs.call x4041 "push"
                                       [|(Ojs.float_to_js x4043)|])
                              | None -> ());
                             (match x4040 with
                              | Some x4042 ->
                                  ignore
                                    (Ojs.call x4041 "push"
                                       [|(Ojs.float_to_js x4042)|])
                              | None -> ());
                             x4041))|])
    let (split' :
      'tags this ->
        separator:[ `U1 of string  | `U2 of RegExp.t ] ->
          ?limit:float -> unit -> string list)
      =
      fun (x4053 : 'tags this) ->
        fun ~separator:(x4047 : [ `U1 of string  | `U2 of RegExp.t ]) ->
          fun ?limit:(x4048 : float option) ->
            fun () ->
              Ojs.list_of_js Ojs.string_of_js
                (let x4055 = this_to_js Obj.magic x4053 in
                 Ojs.call (Ojs.get_prop_ascii x4055 "split") "apply"
                   [|x4055;((let x4049 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x4049 "push"
                                  [|((match x4047 with
                                      | `U1 x4051 -> Ojs.string_to_js x4051
                                      | `U2 x4052 -> RegExp.t_to_js x4052))|]);
                             (match x4048 with
                              | Some x4050 ->
                                  ignore
                                    (Ojs.call x4049 "push"
                                       [|(Ojs.float_to_js x4050)|])
                              | None -> ());
                             x4049))|])
    let (substring :
      'tags this -> start:float -> ?end_:float -> unit -> string) =
      fun (x4061 : 'tags this) ->
        fun ~start:(x4057 : float) ->
          fun ?end_:(x4058 : float option) ->
            fun () ->
              Ojs.string_of_js
                (let x4063 = this_to_js Obj.magic x4061 in
                 Ojs.call (Ojs.get_prop_ascii x4063 "substring") "apply"
                   [|x4063;((let x4059 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x4059 "push"
                                  [|(Ojs.float_to_js x4057)|]);
                             (match x4058 with
                              | Some x4060 ->
                                  ignore
                                    (Ojs.call x4059 "push"
                                       [|(Ojs.float_to_js x4060)|])
                              | None -> ());
                             x4059))|])
    let (toLowerCase : 'tags this -> string) =
      fun (x4064 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x4064) "toLowerCase" [||])
    let (toLocaleLowerCase :
      'tags this ->
        ?locales:[ `U1 of string  | `U2 of string list ] -> unit -> string)
      =
      fun (x4072 : 'tags this) ->
        fun ?locales:(x4066 : [ `U1 of string  | `U2 of string list ] option)
          ->
          fun () ->
            Ojs.string_of_js
              (let x4074 = this_to_js Obj.magic x4072 in
               Ojs.call (Ojs.get_prop_ascii x4074 "toLocaleLowerCase")
                 "apply"
                 [|x4074;((let x4067 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x4066 with
                            | Some x4068 ->
                                ignore
                                  (Ojs.call x4067 "push"
                                     [|((match x4068 with
                                         | `U1 x4069 ->
                                             Ojs.string_to_js x4069
                                         | `U2 x4070 ->
                                             Ojs.list_to_js Ojs.string_to_js
                                               x4070))|])
                            | None -> ());
                           x4067))|])
    let (toUpperCase : 'tags this -> string) =
      fun (x4075 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x4075) "toUpperCase" [||])
    let (toLocaleUpperCase :
      'tags this ->
        ?locales:[ `U1 of string  | `U2 of string list ] -> unit -> string)
      =
      fun (x4083 : 'tags this) ->
        fun ?locales:(x4077 : [ `U1 of string  | `U2 of string list ] option)
          ->
          fun () ->
            Ojs.string_of_js
              (let x4085 = this_to_js Obj.magic x4083 in
               Ojs.call (Ojs.get_prop_ascii x4085 "toLocaleUpperCase")
                 "apply"
                 [|x4085;((let x4078 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x4077 with
                            | Some x4079 ->
                                ignore
                                  (Ojs.call x4078 "push"
                                     [|((match x4079 with
                                         | `U1 x4080 ->
                                             Ojs.string_to_js x4080
                                         | `U2 x4081 ->
                                             Ojs.list_to_js Ojs.string_to_js
                                               x4081))|])
                            | None -> ());
                           x4078))|])
    let (trim : 'tags this -> string) =
      fun (x4086 : 'tags this) ->
        Ojs.string_of_js (Ojs.call (this_to_js Obj.magic x4086) "trim" [||])
    let (get_length : 'tags this -> float) =
      fun (x4088 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x4088) "length")
    let (substr :
      'tags this -> from:float -> ?length:float -> unit -> string) =
      fun (x4094 : 'tags this) ->
        fun ~from:(x4090 : float) ->
          fun ?length:(x4091 : float option) ->
            fun () ->
              Ojs.string_of_js
                (let x4096 = this_to_js Obj.magic x4094 in
                 Ojs.call (Ojs.get_prop_ascii x4096 "substr") "apply"
                   [|x4096;((let x4092 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x4092 "push"
                                  [|(Ojs.float_to_js x4090)|]);
                             (match x4091 with
                              | Some x4093 ->
                                  ignore
                                    (Ojs.call x4092 "push"
                                       [|(Ojs.float_to_js x4093)|])
                              | None -> ());
                             x4092))|])
    let (valueOf : 'tags this -> string) =
      fun (x4097 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x4097) "valueOf" [||])
    let (get : 'tags this -> float -> string) =
      fun (x4099 : 'tags this) ->
        fun (x4101 : float) ->
          Ojs.string_of_js
            (Ojs.get_prop (this_to_js Obj.magic x4099)
               (Ojs.float_to_js x4101))
    let (fromCodePoint : float list -> string) =
      fun (x4102 : float list) ->
        Ojs.string_of_js
          (let x4105 = Ojs.get_prop_ascii Ojs.global "String" in
           Ojs.call (Ojs.get_prop_ascii x4105 "fromCodePoint") "apply"
             [|x4105;((let x4103 =
                         Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                           [||] in
                       List.iter
                         (fun (x4104 : float) ->
                            ignore
                              (Ojs.call x4103 "push"
                                 [|(Ojs.float_to_js x4104)|])) x4102;
                       x4103))|])
    let (raw :
      template:AnonymousInterface6.t -> substitutions:any list -> string) =
      fun ~template:(x4106 : AnonymousInterface6.t) ->
        fun ~substitutions:(x4107 : any list) ->
          Ojs.string_of_js
            (let x4110 = Ojs.get_prop_ascii Ojs.global "String" in
             Ojs.call (Ojs.get_prop_ascii x4110 "raw") "apply"
               [|x4110;((let x4108 =
                           Ojs.new_obj
                             (Ojs.get_prop_ascii Ojs.global "Array") 
                             [||] in
                         ignore
                           (Ojs.call x4108 "push"
                              [|(AnonymousInterface6.t_to_js x4106)|]);
                         List.iter
                           (fun (x4109 : any) ->
                              ignore
                                (Ojs.call x4108 "push" [|(any_to_js x4109)|]))
                           x4107;
                         x4108))|])
    let (create : ?value:any -> unit -> t) =
      fun ?value:(x4111 : any option) ->
        fun () ->
          t_of_js
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "String")
               (let x4112 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x4111 with
                 | Some x4113 ->
                     ignore (Ojs.call x4112 "push" [|(any_to_js x4113)|])
                 | None -> ());
                x4112))
    let (invoke : ?value:any -> unit -> string) =
      fun ?value:(x4114 : any option) ->
        fun () ->
          Ojs.string_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "String") "apply"
               [|Ojs.null;((let x4115 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x4114 with
                             | Some x4116 ->
                                 ignore
                                   (Ojs.call x4115 "push"
                                      [|(any_to_js x4116)|])
                             | None -> ());
                            x4115))|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "String")
             "prototype")
    let (fromCharCode : float list -> string) =
      fun (x4117 : float list) ->
        Ojs.string_of_js
          (let x4120 = Ojs.get_prop_ascii Ojs.global "String" in
           Ojs.call (Ojs.get_prop_ascii x4120 "fromCharCode") "apply"
             [|x4120;((let x4118 =
                         Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                           [||] in
                       List.iter
                         (fun (x4119 : float) ->
                            ignore
                              (Ojs.call x4118 "push"
                                 [|(Ojs.float_to_js x4119)|])) x4117;
                       x4118))|])
    let cast_from = Obj.magic
    let (of_ml : string -> t) =
      fun (x4121 : string) -> t_of_js (Ojs.string_to_js x4121)
    let (to_ml : t -> string) =
      fun (x4122 : t) ->
        Ojs.string_of_js (Ojs.call (t_to_js x4122) "valueOf" [||])
  end
module Set =
  struct
    type 'T t = [ `Set of 'T  | 'T IterableIterator.tags_1] intf
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun _T -> Obj.magic
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun _T -> Obj.magic
    type 'T t_1 = 'T t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 =
      fun (type __T) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x4125 : Ojs.t) -> t_of_js __T_of_js x4125
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t =
      fun (type __T) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x4123 : __T t) -> t_to_js __T_to_js x4123
    type 'T tags = [ `Set of 'T  | 'T IterableIterator.tags_1]
    type 'T tags_1 = 'T tags
    type ('tags, 'T) this = 'tags intf constraint 'tags = [> `Set of 'T ]
    let rec this_of_js :
      'tags 'T .
        (Ojs.t -> 'tags) -> (Ojs.t -> 'T) -> Ojs.t -> ('tags, 'T) this
      =
      fun (type __tags) ->
        fun (type __T) ->
          fun (__tags_of_js : Ojs.t -> __tags) ->
            fun (__T_of_js : Ojs.t -> __T) ->
              fun (x4129 : Ojs.t) -> intf_of_js __tags_of_js x4129
    and this_to_js :
      'tags 'T .
        ('tags -> Ojs.t) -> ('T -> Ojs.t) -> ('tags, 'T) this -> Ojs.t
      =
      fun (type __tags) ->
        fun (type __T) ->
          fun (__tags_to_js : __tags -> Ojs.t) ->
            fun (__T_to_js : __T -> Ojs.t) ->
              fun (x4127 : __tags intf) -> intf_to_js __tags_to_js x4127
    let (entries : ('tags, 'T) this -> ('T * 'T) IterableIterator.t) =
      fun (x4131 : ('tags, 'T) this) ->
        IterableIterator.t_of_js
          (fun (x4134 : Ojs.t) ->
             let x4135 = x4134 in
             ((Obj.magic (Ojs.array_get x4135 0)),
               (Obj.magic (Ojs.array_get x4135 1))))
          (Ojs.call (this_to_js Obj.magic Obj.magic x4131) "entries" [||])
    let (keys : ('tags, 'T) this -> 'T IterableIterator.t) =
      fun (x4136 : ('tags, 'T) this) ->
        IterableIterator.t_of_js Obj.magic
          (Ojs.call (this_to_js Obj.magic Obj.magic x4136) "keys" [||])
    let (values : ('tags, 'T) this -> 'T IterableIterator.t) =
      fun (x4140 : ('tags, 'T) this) ->
        IterableIterator.t_of_js Obj.magic
          (Ojs.call (this_to_js Obj.magic Obj.magic x4140) "values" [||])
    let (add : ('tags, 'T) this -> value:'T -> ('tags, 'T) this) =
      fun (x4145 : ('tags, 'T) this) ->
        fun ~value:(x4144 : 'T) ->
          this_of_js Obj.magic Obj.magic
            (Ojs.call (this_to_js Obj.magic Obj.magic x4145) "add"
               [|(Obj.magic x4144)|])
    let (clear : ('tags, 'T) this -> unit) =
      fun (x4150 : ('tags, 'T) this) ->
        ignore (Ojs.call (this_to_js Obj.magic Obj.magic x4150) "clear" [||])
    let (delete : ('tags, 'T) this -> value:'T -> bool) =
      fun (x4154 : ('tags, 'T) this) ->
        fun ~value:(x4153 : 'T) ->
          Ojs.bool_of_js
            (Ojs.call (this_to_js Obj.magic Obj.magic x4154) "delete"
               [|(Obj.magic x4153)|])
    let (forEach :
      ('tags, 'T) this ->
        callbackfn:(value:'T -> value2:'T -> set_:'T t -> unit) ->
          ?thisArg:any -> unit -> unit)
      =
      fun (x4165 : ('tags, 'T) this) ->
        fun ~callbackfn:(x4157 : value:'T -> value2:'T -> set_:'T t -> unit)
          ->
          fun ?thisArg:(x4158 : any option) ->
            fun () ->
              ignore
                (let x4168 = this_to_js Obj.magic Obj.magic x4165 in
                 Ojs.call (Ojs.get_prop_ascii x4168 "forEach") "apply"
                   [|x4168;((let x4159 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x4159 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x4161 : Ojs.t) ->
                                          fun (x4162 : Ojs.t) ->
                                            fun (x4163 : Ojs.t) ->
                                              x4157 ~value:(Obj.magic x4161)
                                                ~value2:(Obj.magic x4162)
                                                ~set_:(t_of_js Obj.magic
                                                         x4163)))|]);
                             (match x4158 with
                              | Some x4160 ->
                                  ignore
                                    (Ojs.call x4159 "push"
                                       [|(any_to_js x4160)|])
                              | None -> ());
                             x4159))|])
    let (has : ('tags, 'T) this -> value:'T -> bool) =
      fun (x4170 : ('tags, 'T) this) ->
        fun ~value:(x4169 : 'T) ->
          Ojs.bool_of_js
            (Ojs.call (this_to_js Obj.magic Obj.magic x4170) "has"
               [|(Obj.magic x4169)|])
    let (get_size : ('tags, 'T) this -> float) =
      fun (x4173 : ('tags, 'T) this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic Obj.magic x4173) "size")
    let (create : ?iterable:'T Iterable.t option -> unit -> 'T t) =
      fun ?iterable:(x4176 : 'T Iterable.t option option) ->
        fun () ->
          t_of_js Obj.magic
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "Set")
               (let x4177 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x4176 with
                 | Some x4178 ->
                     ignore
                       (Ojs.call x4177 "push"
                          [|(Ojs.option_to_js
                               (fun (x4179 : 'T Iterable.t) ->
                                  Iterable.t_to_js Obj.magic x4179) x4178)|])
                 | None -> ());
                x4177))
    let (create' : ?values:'T list option -> unit -> 'T t) =
      fun ?values:(x4182 : 'T list option option) ->
        fun () ->
          t_of_js Obj.magic
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "Set")
               (let x4183 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x4182 with
                 | Some x4184 ->
                     ignore
                       (Ojs.call x4183 "push"
                          [|(Ojs.option_to_js
                               (fun (x4185 : 'T list) ->
                                  Ojs.list_to_js Obj.magic x4185) x4184)|])
                 | None -> ());
                x4183))
    let (prototype : unit -> any t) =
      fun () ->
        t_of_js any_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Set")
             "prototype")
    let cast_from = Obj.magic
  end
module ReturnType =
  struct
    type 'T t = any
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun (type __T) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x4190 : Ojs.t) -> any_of_js x4190
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t =
      fun (type __T) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x4189 : any) -> any_to_js x4189
    type 'T t_1 = 'T t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 =
      fun (type __T) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x4193 : Ojs.t) -> t_of_js __T_of_js x4193
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t =
      fun (type __T) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x4191 : __T t) -> t_to_js __T_to_js x4191
  end
module Required =
  struct
    type 'T t = any
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun (type __T) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x4196 : Ojs.t) -> any_of_js x4196
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t =
      fun (type __T) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x4195 : any) -> any_to_js x4195
    type 'T t_1 = 'T t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 =
      fun (type __T) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x4199 : Ojs.t) -> t_of_js __T_of_js x4199
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t =
      fun (type __T) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x4197 : __T t) -> t_to_js __T_to_js x4197
  end
module PropertyKey =
  struct
    type t =
      [ `Number of float  | `String of string  | `Symbol of symbol ]
        Primitive.t
    let rec t_of_js : Ojs.t -> t =
      fun (x4206 : Ojs.t) ->
        Primitive.t_of_js
          (fun (x4207 : Ojs.t) ->
             let x4208 = x4207 in
             match Ojs.string_of_js (Ojs.get_prop_ascii x4208 "dummy") with
             | "Number" -> `Number (Ojs.float_of_js x4208)
             | "String" -> `String (Ojs.string_of_js x4208)
             | "Symbol" -> `Symbol (symbol_of_js x4208)
             | _ -> assert false) x4206
    and t_to_js : t -> Ojs.t =
      fun
        (x4201 :
          [ `Number of float  | `String of string  | `Symbol of symbol ]
            Primitive.t)
        ->
        Primitive.t_to_js
          (fun
             (x4202 :
               [ `Number of float  | `String of string  | `Symbol of symbol ])
             ->
             match x4202 with
             | `Number x4203 -> Ojs.float_to_js x4203
             | `String x4204 -> Ojs.string_to_js x4204
             | `Symbol x4205 -> symbol_to_js x4205) x4201
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x4210 : Ojs.t) -> t_of_js x4210
    and t_0_to_js : t_0 -> Ojs.t = fun (x4209 : t) -> t_to_js x4209
  end
module PropertyDescriptor =
  struct
    type t = [ `PropertyDescriptor ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x4212 : Ojs.t) -> t_of_js x4212
    and t_0_to_js : t_0 -> Ojs.t = fun (x4211 : t) -> t_to_js x4211
    type tags = [ `PropertyDescriptor ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `PropertyDescriptor ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x4215 : Ojs.t) -> intf_of_js __tags_of_js x4215
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x4213 : __tags intf) -> intf_to_js __tags_to_js x4213
    let (get_configurable : 'tags this -> bool option) =
      fun (x4217 : 'tags this) ->
        Ojs.option_of_js Ojs.bool_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x4217) "configurable")
    let (set_configurable : 'tags this -> bool -> unit) =
      fun (x4220 : 'tags this) ->
        fun (x4221 : bool) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x4220) "configurable"
            (Ojs.bool_to_js x4221)
    let (get_enumerable : 'tags this -> bool option) =
      fun (x4223 : 'tags this) ->
        Ojs.option_of_js Ojs.bool_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x4223) "enumerable")
    let (set_enumerable : 'tags this -> bool -> unit) =
      fun (x4226 : 'tags this) ->
        fun (x4227 : bool) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x4226) "enumerable"
            (Ojs.bool_to_js x4227)
    let (get_value : 'tags this -> any option) =
      fun (x4229 : 'tags this) ->
        Ojs.option_of_js any_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x4229) "value")
    let (set_value : 'tags this -> any -> unit) =
      fun (x4232 : 'tags this) ->
        fun (x4233 : any) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x4232) "value"
            (any_to_js x4233)
    let (get_writable : 'tags this -> bool option) =
      fun (x4235 : 'tags this) ->
        Ojs.option_of_js Ojs.bool_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x4235) "writable")
    let (set_writable : 'tags this -> bool -> unit) =
      fun (x4238 : 'tags this) ->
        fun (x4239 : bool) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x4238) "writable"
            (Ojs.bool_to_js x4239)
    let (get_ : 'tags this -> any) =
      fun (x4241 : 'tags this) ->
        any_of_js (Ojs.call (this_to_js Obj.magic x4241) "get" [||])
    let (set_ : 'tags this -> v:any -> unit) =
      fun (x4244 : 'tags this) ->
        fun ~v:(x4243 : any) ->
          ignore
            (Ojs.call (this_to_js Obj.magic x4244) "set"
               [|(any_to_js x4243)|])
    let cast_from = Obj.magic
  end
module Function =
  struct
    type t = [ `Function ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x4247 : Ojs.t) -> t_of_js x4247
    and t_0_to_js : t_0 -> Ojs.t = fun (x4246 : t) -> t_to_js x4246
    type tags = [ `Function ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `Function ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x4250 : Ojs.t) -> intf_of_js __tags_of_js x4250
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x4248 : __tags intf) -> intf_to_js __tags_to_js x4248
    let (get_name : 'tags this -> string) =
      fun (x4252 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x4252) "name")
    let (apply_ :
      'tags this -> this:t -> thisArg:any -> ?argArray:any -> unit -> any) =
      fun (x4259 : 'tags this) ->
        fun ~this:(x4254 : t) ->
          fun ~thisArg:(x4255 : any) ->
            fun ?argArray:(x4256 : any option) ->
              fun () ->
                any_of_js
                  (let x4261 = this_to_js Obj.magic x4259 in
                   Ojs.call (Ojs.get_prop_ascii x4261 "apply") "apply"
                     [|x4261;((let x4257 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x4257 "push" [|(t_to_js x4254)|]);
                               ignore
                                 (Ojs.call x4257 "push" [|(any_to_js x4255)|]);
                               (match x4256 with
                                | Some x4258 ->
                                    ignore
                                      (Ojs.call x4257 "push"
                                         [|(any_to_js x4258)|])
                                | None -> ());
                               x4257))|])
    let (call :
      'tags this -> this:t -> thisArg:any -> argArray:any list -> any) =
      fun (x4267 : 'tags this) ->
        fun ~this:(x4262 : t) ->
          fun ~thisArg:(x4263 : any) ->
            fun ~argArray:(x4264 : any list) ->
              any_of_js
                (let x4269 = this_to_js Obj.magic x4267 in
                 Ojs.call (Ojs.get_prop_ascii x4269 "call") "apply"
                   [|x4269;((let x4265 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x4265 "push" [|(t_to_js x4262)|]);
                             ignore
                               (Ojs.call x4265 "push" [|(any_to_js x4263)|]);
                             List.iter
                               (fun (x4266 : any) ->
                                  ignore
                                    (Ojs.call x4265 "push"
                                       [|(any_to_js x4266)|])) x4264;
                             x4265))|])
    let (bind :
      'tags this -> this:t -> thisArg:any -> argArray:any list -> any) =
      fun (x4275 : 'tags this) ->
        fun ~this:(x4270 : t) ->
          fun ~thisArg:(x4271 : any) ->
            fun ~argArray:(x4272 : any list) ->
              any_of_js
                (let x4277 = this_to_js Obj.magic x4275 in
                 Ojs.call (Ojs.get_prop_ascii x4277 "bind") "apply"
                   [|x4277;((let x4273 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x4273 "push" [|(t_to_js x4270)|]);
                             ignore
                               (Ojs.call x4273 "push" [|(any_to_js x4271)|]);
                             List.iter
                               (fun (x4274 : any) ->
                                  ignore
                                    (Ojs.call x4273 "push"
                                       [|(any_to_js x4274)|])) x4272;
                             x4273))|])
    let (toString : 'tags this -> string) =
      fun (x4278 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x4278) "toString" [||])
    let (get_prototype : 'tags this -> any) =
      fun (x4280 : 'tags this) ->
        any_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x4280) "prototype")
    let (set_prototype : 'tags this -> any -> unit) =
      fun (x4282 : 'tags this) ->
        fun (x4283 : any) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x4282) "prototype"
            (any_to_js x4283)
    let (get_length : 'tags this -> float) =
      fun (x4285 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x4285) "length")
    let (get_arguments : 'tags this -> any) =
      fun (x4287 : 'tags this) ->
        any_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x4287) "arguments")
    let (set_arguments : 'tags this -> any -> unit) =
      fun (x4289 : 'tags this) ->
        fun (x4290 : any) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x4289) "arguments"
            (any_to_js x4290)
    let (get_caller : 'tags this -> t) =
      fun (x4292 : 'tags this) ->
        t_of_js (Ojs.get_prop_ascii (this_to_js Obj.magic x4292) "caller")
    let (set_caller : 'tags this -> t -> unit) =
      fun (x4294 : 'tags this) ->
        fun (x4295 : t) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x4294) "caller"
            (t_to_js x4295)
    let (create : string list -> t) =
      fun (x4297 : string list) ->
        t_of_js
          (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "Function")
             (let x4298 =
                Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
              List.iter
                (fun (x4299 : string) ->
                   ignore
                     (Ojs.call x4298 "push" [|(Ojs.string_to_js x4299)|]))
                x4297;
              x4298))
    let (invoke : string list -> t) =
      fun (x4300 : string list) ->
        t_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Function") "apply"
             [|Ojs.null;((let x4301 =
                            Ojs.new_obj
                              (Ojs.get_prop_ascii Ojs.global "Array") 
                              [||] in
                          List.iter
                            (fun (x4302 : string) ->
                               ignore
                                 (Ojs.call x4301 "push"
                                    [|(Ojs.string_to_js x4302)|])) x4300;
                          x4301))|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Function")
             "prototype")
    let cast_from = Obj.magic
  end
module Reflect =
  struct
    let (apply_ :
      target:Function.t ->
        thisArgument:any -> argumentsList:any ArrayLike.t -> any)
      =
      fun ~target:(x4303 : Function.t) ->
        fun ~thisArgument:(x4304 : any) ->
          fun ~argumentsList:(x4305 : any ArrayLike.t) ->
            any_of_js
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "Reflect") "apply"
                 [|(Function.t_to_js x4303);(any_to_js x4304);(ArrayLike.t_to_js
                                                                 any_to_js
                                                                 x4305)|])
    let (construct :
      target:Function.t ->
        argumentsList:any ArrayLike.t -> ?newTarget:Function.t -> unit -> any)
      =
      fun ~target:(x4307 : Function.t) ->
        fun ~argumentsList:(x4308 : any ArrayLike.t) ->
          fun ?newTarget:(x4309 : Function.t option) ->
            fun () ->
              any_of_js
                (let x4313 = Ojs.get_prop_ascii Ojs.global "Reflect" in
                 Ojs.call (Ojs.get_prop_ascii x4313 "construct") "apply"
                   [|x4313;((let x4310 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x4310 "push"
                                  [|(Function.t_to_js x4307)|]);
                             ignore
                               (Ojs.call x4310 "push"
                                  [|(ArrayLike.t_to_js any_to_js x4308)|]);
                             (match x4309 with
                              | Some x4311 ->
                                  ignore
                                    (Ojs.call x4310 "push"
                                       [|(Function.t_to_js x4311)|])
                              | None -> ());
                             x4310))|])
    let (defineProperty :
      target:untyped_object ->
        propertyKey:PropertyKey.t -> attributes:PropertyDescriptor.t -> bool)
      =
      fun ~target:(x4314 : untyped_object) ->
        fun ~propertyKey:(x4315 : PropertyKey.t) ->
          fun ~attributes:(x4316 : PropertyDescriptor.t) ->
            Ojs.bool_of_js
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "Reflect")
                 "defineProperty"
                 [|(untyped_object_to_js x4314);(PropertyKey.t_to_js x4315);(
                   PropertyDescriptor.t_to_js x4316)|])
    let (deleteProperty :
      target:untyped_object -> propertyKey:PropertyKey.t -> bool) =
      fun ~target:(x4317 : untyped_object) ->
        fun ~propertyKey:(x4318 : PropertyKey.t) ->
          Ojs.bool_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "Reflect")
               "deleteProperty"
               [|(untyped_object_to_js x4317);(PropertyKey.t_to_js x4318)|])
    let (get_ :
      target:untyped_object ->
        propertyKey:PropertyKey.t -> ?receiver:any -> unit -> any)
      =
      fun ~target:(x4319 : untyped_object) ->
        fun ~propertyKey:(x4320 : PropertyKey.t) ->
          fun ?receiver:(x4321 : any option) ->
            fun () ->
              any_of_js
                (let x4324 = Ojs.get_prop_ascii Ojs.global "Reflect" in
                 Ojs.call (Ojs.get_prop_ascii x4324 "get") "apply"
                   [|x4324;((let x4322 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x4322 "push"
                                  [|(untyped_object_to_js x4319)|]);
                             ignore
                               (Ojs.call x4322 "push"
                                  [|(PropertyKey.t_to_js x4320)|]);
                             (match x4321 with
                              | Some x4323 ->
                                  ignore
                                    (Ojs.call x4322 "push"
                                       [|(any_to_js x4323)|])
                              | None -> ());
                             x4322))|])
    let (getOwnPropertyDescriptor :
      target:untyped_object ->
        propertyKey:PropertyKey.t -> PropertyDescriptor.t option)
      =
      fun ~target:(x4325 : untyped_object) ->
        fun ~propertyKey:(x4326 : PropertyKey.t) ->
          Ojs.option_of_js PropertyDescriptor.t_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "Reflect")
               "getOwnPropertyDescriptor"
               [|(untyped_object_to_js x4325);(PropertyKey.t_to_js x4326)|])
    let (getPrototypeOf : untyped_object -> untyped_object option) =
      fun (x4328 : untyped_object) ->
        Ojs.option_of_js untyped_object_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Reflect")
             "getPrototypeOf" [|(untyped_object_to_js x4328)|])
    let (has : target:untyped_object -> propertyKey:PropertyKey.t -> bool) =
      fun ~target:(x4330 : untyped_object) ->
        fun ~propertyKey:(x4331 : PropertyKey.t) ->
          Ojs.bool_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "Reflect") "has"
               [|(untyped_object_to_js x4330);(PropertyKey.t_to_js x4331)|])
    let (isExtensible : untyped_object -> bool) =
      fun (x4332 : untyped_object) ->
        Ojs.bool_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Reflect") "isExtensible"
             [|(untyped_object_to_js x4332)|])
    let (ownKeys :
      untyped_object ->
        [ `String of string  | `Symbol of symbol ] Primitive.t list)
      =
      fun (x4333 : untyped_object) ->
        Ojs.list_of_js
          (fun (x4334 : Ojs.t) ->
             Primitive.t_of_js
               (fun (x4335 : Ojs.t) ->
                  let x4336 = x4335 in
                  match Ojs.string_of_js (Ojs.get_prop_ascii x4336 "dummy")
                  with
                  | "String" -> `String (Ojs.string_of_js x4336)
                  | "Symbol" -> `Symbol (symbol_of_js x4336)
                  | _ -> assert false) x4334)
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Reflect") "ownKeys"
             [|(untyped_object_to_js x4333)|])
    let (preventExtensions : untyped_object -> bool) =
      fun (x4337 : untyped_object) ->
        Ojs.bool_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Reflect")
             "preventExtensions" [|(untyped_object_to_js x4337)|])
    let (set_ :
      target:untyped_object ->
        propertyKey:PropertyKey.t ->
          value:any -> ?receiver:any -> unit -> bool)
      =
      fun ~target:(x4338 : untyped_object) ->
        fun ~propertyKey:(x4339 : PropertyKey.t) ->
          fun ~value:(x4340 : any) ->
            fun ?receiver:(x4341 : any option) ->
              fun () ->
                Ojs.bool_of_js
                  (let x4344 = Ojs.get_prop_ascii Ojs.global "Reflect" in
                   Ojs.call (Ojs.get_prop_ascii x4344 "set") "apply"
                     [|x4344;((let x4342 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x4342 "push"
                                    [|(untyped_object_to_js x4338)|]);
                               ignore
                                 (Ojs.call x4342 "push"
                                    [|(PropertyKey.t_to_js x4339)|]);
                               ignore
                                 (Ojs.call x4342 "push" [|(any_to_js x4340)|]);
                               (match x4341 with
                                | Some x4343 ->
                                    ignore
                                      (Ojs.call x4342 "push"
                                         [|(any_to_js x4343)|])
                                | None -> ());
                               x4342))|])
    let (setPrototypeOf :
      target:untyped_object -> proto:untyped_object option -> bool) =
      fun ~target:(x4345 : untyped_object) ->
        fun ~proto:(x4346 : untyped_object option) ->
          Ojs.bool_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "Reflect")
               "setPrototypeOf"
               [|(untyped_object_to_js x4345);(Ojs.option_to_js
                                                 untyped_object_to_js x4346)|])
  end
module ReferenceError =
  struct
    type t = [ `Error  | `ReferenceError ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x4349 : Ojs.t) -> t_of_js x4349
    and t_0_to_js : t_0 -> Ojs.t = fun (x4348 : t) -> t_to_js x4348
    type tags = [ `Error  | `ReferenceError ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `ReferenceError ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x4352 : Ojs.t) -> intf_of_js __tags_of_js x4352
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x4350 : __tags intf) -> intf_to_js __tags_to_js x4350
    let (create : ?message:string -> ?options:ErrorOptions.t -> unit -> t) =
      fun ?message:(x4354 : string option) ->
        fun ?options:(x4355 : ErrorOptions.t option) ->
          fun () ->
            t_of_js
              (Ojs.new_obj_arr
                 (Ojs.get_prop_ascii Ojs.global "ReferenceError")
                 (let x4356 =
                    Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                  (match x4354 with
                   | Some x4358 ->
                       ignore
                         (Ojs.call x4356 "push" [|(Ojs.string_to_js x4358)|])
                   | None -> ());
                  (match x4355 with
                   | Some x4357 ->
                       ignore
                         (Ojs.call x4356 "push"
                            [|(ErrorOptions.t_to_js x4357)|])
                   | None -> ());
                  x4356))
    let (invoke : ?message:string -> ?options:ErrorOptions.t -> unit -> t) =
      fun ?message:(x4359 : string option) ->
        fun ?options:(x4360 : ErrorOptions.t option) ->
          fun () ->
            t_of_js
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "ReferenceError")
                 "apply"
                 [|Ojs.null;((let x4361 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              (match x4359 with
                               | Some x4363 ->
                                   ignore
                                     (Ojs.call x4361 "push"
                                        [|(Ojs.string_to_js x4363)|])
                               | None -> ());
                              (match x4360 with
                               | Some x4362 ->
                                   ignore
                                     (Ojs.call x4361 "push"
                                        [|(ErrorOptions.t_to_js x4362)|])
                               | None -> ());
                              x4361))|])
    let (create' : ?message:string -> unit -> t) =
      fun ?message:(x4364 : string option) ->
        fun () ->
          t_of_js
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "ReferenceError")
               (let x4365 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x4364 with
                 | Some x4366 ->
                     ignore
                       (Ojs.call x4365 "push" [|(Ojs.string_to_js x4366)|])
                 | None -> ());
                x4365))
    let (invoke' : ?message:string -> unit -> t) =
      fun ?message:(x4367 : string option) ->
        fun () ->
          t_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "ReferenceError")
               "apply"
               [|Ojs.null;((let x4368 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x4367 with
                             | Some x4369 ->
                                 ignore
                                   (Ojs.call x4368 "push"
                                      [|(Ojs.string_to_js x4369)|])
                             | None -> ());
                            x4368))|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "ReferenceError") "prototype")
    let cast_from = Obj.magic
  end
module Record =
  struct
    type ('K, 'T) t = any
    let rec t_of_js :
      'K 'T . (Ojs.t -> 'K) -> (Ojs.t -> 'T) -> Ojs.t -> ('K, 'T) t =
      fun (type __K) ->
        fun (type __T) ->
          fun (__K_of_js : Ojs.t -> __K) ->
            fun (__T_of_js : Ojs.t -> __T) ->
              fun (x4371 : Ojs.t) -> any_of_js x4371
    and t_to_js :
      'K 'T . ('K -> Ojs.t) -> ('T -> Ojs.t) -> ('K, 'T) t -> Ojs.t =
      fun (type __K) ->
        fun (type __T) ->
          fun (__K_to_js : __K -> Ojs.t) ->
            fun (__T_to_js : __T -> Ojs.t) ->
              fun (x4370 : any) -> any_to_js x4370
    type ('K, 'T) t_2 = ('K, 'T) t
    let rec t_2_of_js :
      'K 'T . (Ojs.t -> 'K) -> (Ojs.t -> 'T) -> Ojs.t -> ('K, 'T) t_2 =
      fun (type __K) ->
        fun (type __T) ->
          fun (__K_of_js : Ojs.t -> __K) ->
            fun (__T_of_js : Ojs.t -> __T) ->
              fun (x4375 : Ojs.t) -> t_of_js __K_of_js __T_of_js x4375
    and t_2_to_js :
      'K 'T . ('K -> Ojs.t) -> ('T -> Ojs.t) -> ('K, 'T) t_2 -> Ojs.t =
      fun (type __K) ->
        fun (type __T) ->
          fun (__K_to_js : __K -> Ojs.t) ->
            fun (__T_to_js : __T -> Ojs.t) ->
              fun (x4372 : (__K, __T) t) -> t_to_js __K_to_js __T_to_js x4372
  end
module ReadonlySet =
  struct
    type 'T t = [ `ReadonlySet of 'T  | 'T IterableIterator.tags_1] intf
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun _T -> Obj.magic
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun _T -> Obj.magic
    type 'T t_1 = 'T t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 =
      fun (type __T) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x4380 : Ojs.t) -> t_of_js __T_of_js x4380
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t =
      fun (type __T) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x4378 : __T t) -> t_to_js __T_to_js x4378
    type 'T tags = [ `ReadonlySet of 'T  | 'T IterableIterator.tags_1]
    type 'T tags_1 = 'T tags
    type ('tags, 'T) this =
      'tags intf constraint 'tags = [> `ReadonlySet of 'T ]
    let rec this_of_js :
      'tags 'T .
        (Ojs.t -> 'tags) -> (Ojs.t -> 'T) -> Ojs.t -> ('tags, 'T) this
      =
      fun (type __tags) ->
        fun (type __T) ->
          fun (__tags_of_js : Ojs.t -> __tags) ->
            fun (__T_of_js : Ojs.t -> __T) ->
              fun (x4384 : Ojs.t) -> intf_of_js __tags_of_js x4384
    and this_to_js :
      'tags 'T .
        ('tags -> Ojs.t) -> ('T -> Ojs.t) -> ('tags, 'T) this -> Ojs.t
      =
      fun (type __tags) ->
        fun (type __T) ->
          fun (__tags_to_js : __tags -> Ojs.t) ->
            fun (__T_to_js : __T -> Ojs.t) ->
              fun (x4382 : __tags intf) -> intf_to_js __tags_to_js x4382
    let (entries : ('tags, 'T) this -> ('T * 'T) IterableIterator.t) =
      fun (x4386 : ('tags, 'T) this) ->
        IterableIterator.t_of_js
          (fun (x4389 : Ojs.t) ->
             let x4390 = x4389 in
             ((Obj.magic (Ojs.array_get x4390 0)),
               (Obj.magic (Ojs.array_get x4390 1))))
          (Ojs.call (this_to_js Obj.magic Obj.magic x4386) "entries" [||])
    let (keys : ('tags, 'T) this -> 'T IterableIterator.t) =
      fun (x4391 : ('tags, 'T) this) ->
        IterableIterator.t_of_js Obj.magic
          (Ojs.call (this_to_js Obj.magic Obj.magic x4391) "keys" [||])
    let (values : ('tags, 'T) this -> 'T IterableIterator.t) =
      fun (x4395 : ('tags, 'T) this) ->
        IterableIterator.t_of_js Obj.magic
          (Ojs.call (this_to_js Obj.magic Obj.magic x4395) "values" [||])
    let (forEach :
      ('tags, 'T) this ->
        callbackfn:(value:'T -> value2:'T -> set_:'T t -> unit) ->
          ?thisArg:any -> unit -> unit)
      =
      fun (x4407 : ('tags, 'T) this) ->
        fun ~callbackfn:(x4399 : value:'T -> value2:'T -> set_:'T t -> unit)
          ->
          fun ?thisArg:(x4400 : any option) ->
            fun () ->
              ignore
                (let x4410 = this_to_js Obj.magic Obj.magic x4407 in
                 Ojs.call (Ojs.get_prop_ascii x4410 "forEach") "apply"
                   [|x4410;((let x4401 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x4401 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x4403 : Ojs.t) ->
                                          fun (x4404 : Ojs.t) ->
                                            fun (x4405 : Ojs.t) ->
                                              x4399 ~value:(Obj.magic x4403)
                                                ~value2:(Obj.magic x4404)
                                                ~set_:(t_of_js Obj.magic
                                                         x4405)))|]);
                             (match x4400 with
                              | Some x4402 ->
                                  ignore
                                    (Ojs.call x4401 "push"
                                       [|(any_to_js x4402)|])
                              | None -> ());
                             x4401))|])
    let (has : ('tags, 'T) this -> value:'T -> bool) =
      fun (x4412 : ('tags, 'T) this) ->
        fun ~value:(x4411 : 'T) ->
          Ojs.bool_of_js
            (Ojs.call (this_to_js Obj.magic Obj.magic x4412) "has"
               [|(Obj.magic x4411)|])
    let (get_size : ('tags, 'T) this -> float) =
      fun (x4415 : ('tags, 'T) this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic Obj.magic x4415) "size")
    let cast_from = Obj.magic
  end
module ReadonlyMap =
  struct
    type ('K, 'V) t =
      [ `ReadonlyMap of ('K * 'V)  | ('K * 'V) IterableIterator.tags_1] intf
    let rec t_of_js :
      'K 'V . (Ojs.t -> 'K) -> (Ojs.t -> 'V) -> Ojs.t -> ('K, 'V) t =
      fun _K -> fun _V -> Obj.magic
    and t_to_js :
      'K 'V . ('K -> Ojs.t) -> ('V -> Ojs.t) -> ('K, 'V) t -> Ojs.t =
      fun _K -> fun _V -> Obj.magic
    type ('K, 'V) t_2 = ('K, 'V) t
    let rec t_2_of_js :
      'K 'V . (Ojs.t -> 'K) -> (Ojs.t -> 'V) -> Ojs.t -> ('K, 'V) t_2 =
      fun (type __K) ->
        fun (type __V) ->
          fun (__K_of_js : Ojs.t -> __K) ->
            fun (__V_of_js : Ojs.t -> __V) ->
              fun (x4421 : Ojs.t) -> t_of_js __K_of_js __V_of_js x4421
    and t_2_to_js :
      'K 'V . ('K -> Ojs.t) -> ('V -> Ojs.t) -> ('K, 'V) t_2 -> Ojs.t =
      fun (type __K) ->
        fun (type __V) ->
          fun (__K_to_js : __K -> Ojs.t) ->
            fun (__V_to_js : __V -> Ojs.t) ->
              fun (x4418 : (__K, __V) t) -> t_to_js __K_to_js __V_to_js x4418
    type ('K, 'V) tags =
      [ `ReadonlyMap of ('K * 'V)  | ('K * 'V) IterableIterator.tags_1]
    type ('K, 'V) tags_2 = ('K, 'V) tags
    type ('tags, 'K, 'V) this =
      'tags intf constraint 'tags = [> `ReadonlyMap of ('K * 'V) ]
    let rec this_of_js :
      'tags 'K 'V .
        (Ojs.t -> 'tags) ->
          (Ojs.t -> 'K) -> (Ojs.t -> 'V) -> Ojs.t -> ('tags, 'K, 'V) this
      =
      fun (type __tags) ->
        fun (type __K) ->
          fun (type __V) ->
            fun (__tags_of_js : Ojs.t -> __tags) ->
              fun (__K_of_js : Ojs.t -> __K) ->
                fun (__V_of_js : Ojs.t -> __V) ->
                  fun (x4426 : Ojs.t) -> intf_of_js __tags_of_js x4426
    and this_to_js :
      'tags 'K 'V .
        ('tags -> Ojs.t) ->
          ('K -> Ojs.t) -> ('V -> Ojs.t) -> ('tags, 'K, 'V) this -> Ojs.t
      =
      fun (type __tags) ->
        fun (type __K) ->
          fun (type __V) ->
            fun (__tags_to_js : __tags -> Ojs.t) ->
              fun (__K_to_js : __K -> Ojs.t) ->
                fun (__V_to_js : __V -> Ojs.t) ->
                  fun (x4424 : __tags intf) -> intf_to_js __tags_to_js x4424
    let (entries : ('tags, 'K, 'V) this -> ('K * 'V) IterableIterator.t) =
      fun (x4428 : ('tags, 'K, 'V) this) ->
        IterableIterator.t_of_js
          (fun (x4432 : Ojs.t) ->
             let x4433 = x4432 in
             ((Obj.magic (Ojs.array_get x4433 0)),
               (Obj.magic (Ojs.array_get x4433 1))))
          (Ojs.call (this_to_js Obj.magic Obj.magic Obj.magic x4428)
             "entries" [||])
    let (keys : ('tags, 'K, 'V) this -> 'K IterableIterator.t) =
      fun (x4434 : ('tags, 'K, 'V) this) ->
        IterableIterator.t_of_js Obj.magic
          (Ojs.call (this_to_js Obj.magic Obj.magic Obj.magic x4434) "keys"
             [||])
    let (values : ('tags, 'K, 'V) this -> 'V IterableIterator.t) =
      fun (x4439 : ('tags, 'K, 'V) this) ->
        IterableIterator.t_of_js Obj.magic
          (Ojs.call (this_to_js Obj.magic Obj.magic Obj.magic x4439) "values"
             [||])
    let (forEach :
      ('tags, 'K, 'V) this ->
        callbackfn:(value:'V -> key:'K -> map:('K, 'V) t -> unit) ->
          ?thisArg:any -> unit -> unit)
      =
      fun (x4453 : ('tags, 'K, 'V) this) ->
        fun
          ~callbackfn:(x4444 : value:'V -> key:'K -> map:('K, 'V) t -> unit)
          ->
          fun ?thisArg:(x4445 : any option) ->
            fun () ->
              ignore
                (let x4457 = this_to_js Obj.magic Obj.magic Obj.magic x4453 in
                 Ojs.call (Ojs.get_prop_ascii x4457 "forEach") "apply"
                   [|x4457;((let x4446 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x4446 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x4448 : Ojs.t) ->
                                          fun (x4449 : Ojs.t) ->
                                            fun (x4450 : Ojs.t) ->
                                              x4444 ~value:(Obj.magic x4448)
                                                ~key:(Obj.magic x4449)
                                                ~map:(t_of_js Obj.magic
                                                        Obj.magic x4450)))|]);
                             (match x4445 with
                              | Some x4447 ->
                                  ignore
                                    (Ojs.call x4446 "push"
                                       [|(any_to_js x4447)|])
                              | None -> ());
                             x4446))|])
    let (get_ : ('tags, 'K, 'V) this -> key:'K -> 'V option) =
      fun (x4459 : ('tags, 'K, 'V) this) ->
        fun ~key:(x4458 : 'K) ->
          Ojs.option_of_js Obj.magic
            (Ojs.call (this_to_js Obj.magic Obj.magic Obj.magic x4459) "get"
               [|(Obj.magic x4458)|])
    let (has : ('tags, 'K, 'V) this -> key:'K -> bool) =
      fun (x4465 : ('tags, 'K, 'V) this) ->
        fun ~key:(x4464 : 'K) ->
          Ojs.bool_of_js
            (Ojs.call (this_to_js Obj.magic Obj.magic Obj.magic x4465) "has"
               [|(Obj.magic x4464)|])
    let (get_size : ('tags, 'K, 'V) this -> float) =
      fun (x4469 : ('tags, 'K, 'V) this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii
             (this_to_js Obj.magic Obj.magic Obj.magic x4469) "size")
    let cast_from = Obj.magic
  end
module RangeError =
  struct
    type t = [ `Error  | `RangeError ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x4474 : Ojs.t) -> t_of_js x4474
    and t_0_to_js : t_0 -> Ojs.t = fun (x4473 : t) -> t_to_js x4473
    type tags = [ `Error  | `RangeError ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `RangeError ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x4477 : Ojs.t) -> intf_of_js __tags_of_js x4477
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x4475 : __tags intf) -> intf_to_js __tags_to_js x4475
    let (create : ?message:string -> ?options:ErrorOptions.t -> unit -> t) =
      fun ?message:(x4479 : string option) ->
        fun ?options:(x4480 : ErrorOptions.t option) ->
          fun () ->
            t_of_js
              (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "RangeError")
                 (let x4481 =
                    Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                  (match x4479 with
                   | Some x4483 ->
                       ignore
                         (Ojs.call x4481 "push" [|(Ojs.string_to_js x4483)|])
                   | None -> ());
                  (match x4480 with
                   | Some x4482 ->
                       ignore
                         (Ojs.call x4481 "push"
                            [|(ErrorOptions.t_to_js x4482)|])
                   | None -> ());
                  x4481))
    let (invoke : ?message:string -> ?options:ErrorOptions.t -> unit -> t) =
      fun ?message:(x4484 : string option) ->
        fun ?options:(x4485 : ErrorOptions.t option) ->
          fun () ->
            t_of_js
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "RangeError") "apply"
                 [|Ojs.null;((let x4486 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              (match x4484 with
                               | Some x4488 ->
                                   ignore
                                     (Ojs.call x4486 "push"
                                        [|(Ojs.string_to_js x4488)|])
                               | None -> ());
                              (match x4485 with
                               | Some x4487 ->
                                   ignore
                                     (Ojs.call x4486 "push"
                                        [|(ErrorOptions.t_to_js x4487)|])
                               | None -> ());
                              x4486))|])
    let (create' : ?message:string -> unit -> t) =
      fun ?message:(x4489 : string option) ->
        fun () ->
          t_of_js
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "RangeError")
               (let x4490 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x4489 with
                 | Some x4491 ->
                     ignore
                       (Ojs.call x4490 "push" [|(Ojs.string_to_js x4491)|])
                 | None -> ());
                x4490))
    let (invoke' : ?message:string -> unit -> t) =
      fun ?message:(x4492 : string option) ->
        fun () ->
          t_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "RangeError") "apply"
               [|Ojs.null;((let x4493 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x4492 with
                             | Some x4494 ->
                                 ignore
                                   (Ojs.call x4493 "push"
                                      [|(Ojs.string_to_js x4494)|])
                             | None -> ());
                            x4493))|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "RangeError")
             "prototype")
    let cast_from = Obj.magic
  end
module ProxyHandler =
  struct
    type 'T t = [ `ProxyHandler of 'T ] intf
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun _T -> Obj.magic
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun _T -> Obj.magic
    type 'T t_1 = 'T t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 =
      fun (type __T) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x4497 : Ojs.t) -> t_of_js __T_of_js x4497
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t =
      fun (type __T) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x4495 : __T t) -> t_to_js __T_to_js x4495
    type 'T tags = [ `ProxyHandler of 'T ]
    type 'T tags_1 = 'T tags
    type ('tags, 'T) this =
      'tags intf constraint 'tags = [> `ProxyHandler of 'T ]
    let rec this_of_js :
      'tags 'T .
        (Ojs.t -> 'tags) -> (Ojs.t -> 'T) -> Ojs.t -> ('tags, 'T) this
      =
      fun (type __tags) ->
        fun (type __T) ->
          fun (__tags_of_js : Ojs.t -> __tags) ->
            fun (__T_of_js : Ojs.t -> __T) ->
              fun (x4501 : Ojs.t) -> intf_of_js __tags_of_js x4501
    and this_to_js :
      'tags 'T .
        ('tags -> Ojs.t) -> ('T -> Ojs.t) -> ('tags, 'T) this -> Ojs.t
      =
      fun (type __tags) ->
        fun (type __T) ->
          fun (__tags_to_js : __tags -> Ojs.t) ->
            fun (__T_to_js : __T -> Ojs.t) ->
              fun (x4499 : __tags intf) -> intf_to_js __tags_to_js x4499
    let (apply_ :
      ('tags, 'T) this ->
        target:'T -> thisArg:any -> argArray:any list -> any)
      =
      fun (x4507 : ('tags, 'T) this) ->
        fun ~target:(x4503 : 'T) ->
          fun ~thisArg:(x4504 : any) ->
            fun ~argArray:(x4505 : any list) ->
              any_of_js
                (Ojs.call (this_to_js Obj.magic Obj.magic x4507) "apply"
                   [|(Obj.magic x4503);(any_to_js x4504);(Ojs.list_to_js
                                                            any_to_js x4505)|])
    let (construct :
      ('tags, 'T) this ->
        target:'T ->
          argArray:any list -> newTarget:Function.t -> untyped_object)
      =
      fun (x4514 : ('tags, 'T) this) ->
        fun ~target:(x4510 : 'T) ->
          fun ~argArray:(x4511 : any list) ->
            fun ~newTarget:(x4513 : Function.t) ->
              untyped_object_of_js
                (Ojs.call (this_to_js Obj.magic Obj.magic x4514) "construct"
                   [|(Obj.magic x4510);(Ojs.list_to_js any_to_js x4511);(
                     Function.t_to_js x4513)|])
    let (defineProperty :
      ('tags, 'T) this ->
        target:'T ->
          p:[ `U1 of string  | `U2 of symbol ] ->
            attributes:PropertyDescriptor.t -> bool)
      =
      fun (x4522 : ('tags, 'T) this) ->
        fun ~target:(x4517 : 'T) ->
          fun ~p:(x4518 : [ `U1 of string  | `U2 of symbol ]) ->
            fun ~attributes:(x4521 : PropertyDescriptor.t) ->
              Ojs.bool_of_js
                (Ojs.call (this_to_js Obj.magic Obj.magic x4522)
                   "defineProperty"
                   [|(Obj.magic x4517);((match x4518 with
                                         | `U1 x4519 ->
                                             Ojs.string_to_js x4519
                                         | `U2 x4520 -> symbol_to_js x4520));(
                     PropertyDescriptor.t_to_js x4521)|])
    let (deleteProperty :
      ('tags, 'T) this ->
        target:'T -> p:[ `U1 of string  | `U2 of symbol ] -> bool)
      =
      fun (x4529 : ('tags, 'T) this) ->
        fun ~target:(x4525 : 'T) ->
          fun ~p:(x4526 : [ `U1 of string  | `U2 of symbol ]) ->
            Ojs.bool_of_js
              (Ojs.call (this_to_js Obj.magic Obj.magic x4529)
                 "deleteProperty"
                 [|(Obj.magic x4525);((match x4526 with
                                       | `U1 x4527 -> Ojs.string_to_js x4527
                                       | `U2 x4528 -> symbol_to_js x4528))|])
    let (get_ :
      ('tags, 'T) this ->
        target:'T ->
          p:[ `U1 of string  | `U2 of symbol ] -> receiver:any -> any)
      =
      fun (x4537 : ('tags, 'T) this) ->
        fun ~target:(x4532 : 'T) ->
          fun ~p:(x4533 : [ `U1 of string  | `U2 of symbol ]) ->
            fun ~receiver:(x4536 : any) ->
              any_of_js
                (Ojs.call (this_to_js Obj.magic Obj.magic x4537) "get"
                   [|(Obj.magic x4532);((match x4533 with
                                         | `U1 x4534 ->
                                             Ojs.string_to_js x4534
                                         | `U2 x4535 -> symbol_to_js x4535));(
                     any_to_js x4536)|])
    let (getOwnPropertyDescriptor :
      ('tags, 'T) this ->
        target:'T ->
          p:[ `U1 of string  | `U2 of symbol ] -> PropertyDescriptor.t option)
      =
      fun (x4544 : ('tags, 'T) this) ->
        fun ~target:(x4540 : 'T) ->
          fun ~p:(x4541 : [ `U1 of string  | `U2 of symbol ]) ->
            Ojs.option_of_js PropertyDescriptor.t_of_js
              (Ojs.call (this_to_js Obj.magic Obj.magic x4544)
                 "getOwnPropertyDescriptor"
                 [|(Obj.magic x4540);((match x4541 with
                                       | `U1 x4542 -> Ojs.string_to_js x4542
                                       | `U2 x4543 -> symbol_to_js x4543))|])
    let (getPrototypeOf :
      ('tags, 'T) this -> target:'T -> untyped_object option) =
      fun (x4549 : ('tags, 'T) this) ->
        fun ~target:(x4548 : 'T) ->
          Ojs.option_of_js untyped_object_of_js
            (Ojs.call (this_to_js Obj.magic Obj.magic x4549) "getPrototypeOf"
               [|(Obj.magic x4548)|])
    let (has :
      ('tags, 'T) this ->
        target:'T -> p:[ `U1 of string  | `U2 of symbol ] -> bool)
      =
      fun (x4557 : ('tags, 'T) this) ->
        fun ~target:(x4553 : 'T) ->
          fun ~p:(x4554 : [ `U1 of string  | `U2 of symbol ]) ->
            Ojs.bool_of_js
              (Ojs.call (this_to_js Obj.magic Obj.magic x4557) "has"
                 [|(Obj.magic x4553);((match x4554 with
                                       | `U1 x4555 -> Ojs.string_to_js x4555
                                       | `U2 x4556 -> symbol_to_js x4556))|])
    let (isExtensible : ('tags, 'T) this -> target:'T -> bool) =
      fun (x4561 : ('tags, 'T) this) ->
        fun ~target:(x4560 : 'T) ->
          Ojs.bool_of_js
            (Ojs.call (this_to_js Obj.magic Obj.magic x4561) "isExtensible"
               [|(Obj.magic x4560)|])
    let (ownKeys :
      ('tags, 'T) this ->
        target:'T ->
          [ `String of string  | `Symbol of symbol ] Primitive.t ArrayLike.t)
      =
      fun (x4565 : ('tags, 'T) this) ->
        fun ~target:(x4564 : 'T) ->
          ArrayLike.t_of_js
            (fun (x4568 : Ojs.t) ->
               Primitive.t_of_js
                 (fun (x4569 : Ojs.t) ->
                    let x4570 = x4569 in
                    match Ojs.string_of_js (Ojs.get_prop_ascii x4570 "dummy")
                    with
                    | "String" -> `String (Ojs.string_of_js x4570)
                    | "Symbol" -> `Symbol (symbol_of_js x4570)
                    | _ -> assert false) x4568)
            (Ojs.call (this_to_js Obj.magic Obj.magic x4565) "ownKeys"
               [|(Obj.magic x4564)|])
    let (preventExtensions : ('tags, 'T) this -> target:'T -> bool) =
      fun (x4572 : ('tags, 'T) this) ->
        fun ~target:(x4571 : 'T) ->
          Ojs.bool_of_js
            (Ojs.call (this_to_js Obj.magic Obj.magic x4572)
               "preventExtensions" [|(Obj.magic x4571)|])
    let (set_ :
      ('tags, 'T) this ->
        target:'T ->
          p:[ `U1 of string  | `U2 of symbol ] ->
            value:any -> receiver:any -> bool)
      =
      fun (x4581 : ('tags, 'T) this) ->
        fun ~target:(x4575 : 'T) ->
          fun ~p:(x4576 : [ `U1 of string  | `U2 of symbol ]) ->
            fun ~value:(x4579 : any) ->
              fun ~receiver:(x4580 : any) ->
                Ojs.bool_of_js
                  (Ojs.call (this_to_js Obj.magic Obj.magic x4581) "set"
                     [|(Obj.magic x4575);((match x4576 with
                                           | `U1 x4577 ->
                                               Ojs.string_to_js x4577
                                           | `U2 x4578 -> symbol_to_js x4578));(
                       any_to_js x4579);(any_to_js x4580)|])
    let (setPrototypeOf :
      ('tags, 'T) this -> target:'T -> v:untyped_object option -> bool) =
      fun (x4587 : ('tags, 'T) this) ->
        fun ~target:(x4584 : 'T) ->
          fun ~v:(x4585 : untyped_object option) ->
            Ojs.bool_of_js
              (Ojs.call (this_to_js Obj.magic Obj.magic x4587)
                 "setPrototypeOf"
                 [|(Obj.magic x4584);(Ojs.option_to_js untyped_object_to_js
                                        x4585)|])
    let cast_from = Obj.magic
  end
module ProxyStatic =
  struct
    module AnonymousInterface41 =
      struct
        type 'T t = Ojs.t
        let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
          fun (type __T) ->
            fun (__T_of_js : Ojs.t -> __T) -> fun (x4591 : Ojs.t) -> x4591
        and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t =
          fun (type __T) ->
            fun (__T_to_js : __T -> Ojs.t) -> fun (x4590 : Ojs.t) -> x4590
        let (get_proxy : 'T t -> 'T) =
          fun (x4592 : 'T t) ->
            Obj.magic (Ojs.get_prop_ascii (t_to_js Obj.magic x4592) "proxy")
        let (set_proxy : 'T t -> 'T -> unit) =
          fun (x4594 : 'T t) ->
            fun (x4595 : 'T) ->
              Ojs.set_prop_ascii (t_to_js Obj.magic x4594) "proxy"
                (Obj.magic x4595)
        let (revoke : 'T t -> unit) =
          fun (x4597 : 'T t) ->
            ignore (Ojs.call (t_to_js Obj.magic x4597) "revoke" [||])
        let (create : proxy:'T -> revoke:(unit -> unit) -> unit -> 'T t) =
          fun ~proxy:(x4599 : 'T) ->
            fun ~revoke:(x4600 : unit -> unit) ->
              fun () ->
                let x4601 = Ojs.empty_obj () in
                Ojs.set_prop_ascii x4601 "proxy" (Obj.magic x4599);
                Ojs.set_prop_ascii x4601 "revoke"
                  (Ojs.fun_to_js 1 (fun _ -> x4600 ()));
                t_of_js Obj.magic x4601
        module Make(T:Ojs.T) =
          struct
            type 'T parent = 'T t
            let rec parent_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T parent =
              fun (type __T) ->
                fun (__T_of_js : Ojs.t -> __T) ->
                  fun (x4605 : Ojs.t) -> t_of_js __T_of_js x4605
            and parent_to_js : 'T . ('T -> Ojs.t) -> 'T parent -> Ojs.t =
              fun (type __T) ->
                fun (__T_to_js : __T -> Ojs.t) ->
                  fun (x4603 : __T t) -> t_to_js __T_to_js x4603
            type t = T.t parent
            let rec t_of_js : Ojs.t -> t =
              fun (x4609 : Ojs.t) -> parent_of_js T.t_of_js x4609
            and t_to_js : t -> Ojs.t =
              fun (x4607 : T.t parent) -> parent_to_js T.t_to_js x4607
            let (get_proxy : t -> T.t) =
              fun (x4611 : t) ->
                T.t_of_js (Ojs.get_prop_ascii (t_to_js x4611) "proxy")
            let (set_proxy : t -> T.t -> unit) =
              fun (x4612 : t) ->
                fun (x4613 : T.t) ->
                  Ojs.set_prop_ascii (t_to_js x4612) "proxy"
                    (T.t_to_js x4613)
            let (revoke : t -> unit) =
              fun (x4614 : t) ->
                ignore (Ojs.call (t_to_js x4614) "revoke" [||])
          end
      end
    let (revocable :
      target:'T -> handler:'T ProxyHandler.t -> 'T AnonymousInterface41.t) =
      fun ~target:(x4615 : 'T) ->
        fun ~handler:(x4616 : 'T ProxyHandler.t) ->
          AnonymousInterface41.t_of_js Obj.magic
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "Proxy") "revocable"
               [|(Obj.magic x4615);(ProxyHandler.t_to_js Obj.magic x4616)|])
    let (create : target:'T -> handler:'T ProxyHandler.t -> 'T) =
      fun ~target:(x4619 : 'T) ->
        fun ~handler:(x4620 : 'T ProxyHandler.t) ->
          Obj.magic
            (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Proxy")
               [|(Obj.magic x4619);(ProxyHandler.t_to_js Obj.magic x4620)|])
  end
module ProxyConstructor =
  struct
    module AnonymousInterface41 =
      struct
        type 'T t = Ojs.t
        let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
          fun (type __T) ->
            fun (__T_of_js : Ojs.t -> __T) -> fun (x4623 : Ojs.t) -> x4623
        and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t =
          fun (type __T) ->
            fun (__T_to_js : __T -> Ojs.t) -> fun (x4622 : Ojs.t) -> x4622
        let (get_proxy : 'T t -> 'T) =
          fun (x4624 : 'T t) ->
            Obj.magic (Ojs.get_prop_ascii (t_to_js Obj.magic x4624) "proxy")
        let (set_proxy : 'T t -> 'T -> unit) =
          fun (x4626 : 'T t) ->
            fun (x4627 : 'T) ->
              Ojs.set_prop_ascii (t_to_js Obj.magic x4626) "proxy"
                (Obj.magic x4627)
        let (revoke : 'T t -> unit) =
          fun (x4629 : 'T t) ->
            ignore (Ojs.call (t_to_js Obj.magic x4629) "revoke" [||])
        let (create : proxy:'T -> revoke:(unit -> unit) -> unit -> 'T t) =
          fun ~proxy:(x4631 : 'T) ->
            fun ~revoke:(x4632 : unit -> unit) ->
              fun () ->
                let x4633 = Ojs.empty_obj () in
                Ojs.set_prop_ascii x4633 "proxy" (Obj.magic x4631);
                Ojs.set_prop_ascii x4633 "revoke"
                  (Ojs.fun_to_js 1 (fun _ -> x4632 ()));
                t_of_js Obj.magic x4633
        module Make(T:Ojs.T) =
          struct
            type 'T parent = 'T t
            let rec parent_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T parent =
              fun (type __T) ->
                fun (__T_of_js : Ojs.t -> __T) ->
                  fun (x4637 : Ojs.t) -> t_of_js __T_of_js x4637
            and parent_to_js : 'T . ('T -> Ojs.t) -> 'T parent -> Ojs.t =
              fun (type __T) ->
                fun (__T_to_js : __T -> Ojs.t) ->
                  fun (x4635 : __T t) -> t_to_js __T_to_js x4635
            type t = T.t parent
            let rec t_of_js : Ojs.t -> t =
              fun (x4641 : Ojs.t) -> parent_of_js T.t_of_js x4641
            and t_to_js : t -> Ojs.t =
              fun (x4639 : T.t parent) -> parent_to_js T.t_to_js x4639
            let (get_proxy : t -> T.t) =
              fun (x4643 : t) ->
                T.t_of_js (Ojs.get_prop_ascii (t_to_js x4643) "proxy")
            let (set_proxy : t -> T.t -> unit) =
              fun (x4644 : t) ->
                fun (x4645 : T.t) ->
                  Ojs.set_prop_ascii (t_to_js x4644) "proxy"
                    (T.t_to_js x4645)
            let (revoke : t -> unit) =
              fun (x4646 : t) ->
                ignore (Ojs.call (t_to_js x4646) "revoke" [||])
          end
      end
    type t = [ `ProxyConstructor ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x4648 : Ojs.t) -> t_of_js x4648
    and t_0_to_js : t_0 -> Ojs.t = fun (x4647 : t) -> t_to_js x4647
    type tags = [ `ProxyConstructor ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `ProxyConstructor ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x4651 : Ojs.t) -> intf_of_js __tags_of_js x4651
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x4649 : __tags intf) -> intf_to_js __tags_to_js x4649
    let (revocable :
      'tags this ->
        target:'T -> handler:'T ProxyHandler.t -> 'T AnonymousInterface41.t)
      =
      fun (x4656 : 'tags this) ->
        fun ~target:(x4653 : 'T) ->
          fun ~handler:(x4654 : 'T ProxyHandler.t) ->
            AnonymousInterface41.t_of_js Obj.magic
              (Ojs.call (this_to_js Obj.magic x4656) "revocable"
                 [|(Obj.magic x4653);(ProxyHandler.t_to_js Obj.magic x4654)|])
    let (create : 'tags this -> target:'T -> handler:'T ProxyHandler.t -> 'T)
      =
      fun (x4662 : 'tags this) ->
        fun ~target:(x4659 : 'T) ->
          fun ~handler:(x4660 : 'T ProxyHandler.t) ->
            Obj.magic
              (Ojs.new_obj (this_to_js Obj.magic x4662)
                 [|(Obj.magic x4659);(ProxyHandler.t_to_js Obj.magic x4660)|])
    let cast_from = Obj.magic
  end
module ThisType =
  struct
    type 'T t = [ `ThisType of 'T ] intf
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun _T -> Obj.magic
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun _T -> Obj.magic
    type 'T t_1 = 'T t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 =
      fun (type __T) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x4666 : Ojs.t) -> t_of_js __T_of_js x4666
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t =
      fun (type __T) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x4664 : __T t) -> t_to_js __T_to_js x4664
    type 'T tags = [ `ThisType of 'T ]
    type 'T tags_1 = 'T tags
    type ('tags, 'T) this =
      'tags intf constraint 'tags = [> `ThisType of 'T ]
    let rec this_of_js :
      'tags 'T .
        (Ojs.t -> 'tags) -> (Ojs.t -> 'T) -> Ojs.t -> ('tags, 'T) this
      =
      fun (type __tags) ->
        fun (type __T) ->
          fun (__tags_of_js : Ojs.t -> __tags) ->
            fun (__T_of_js : Ojs.t -> __T) ->
              fun (x4670 : Ojs.t) -> intf_of_js __tags_of_js x4670
    and this_to_js :
      'tags 'T .
        ('tags -> Ojs.t) -> ('T -> Ojs.t) -> ('tags, 'T) this -> Ojs.t
      =
      fun (type __tags) ->
        fun (type __T) ->
          fun (__tags_to_js : __tags -> Ojs.t) ->
            fun (__T_to_js : __T -> Ojs.t) ->
              fun (x4668 : __tags intf) -> intf_to_js __tags_to_js x4668
    let cast_from = Obj.magic
  end
module Readonly =
  struct
    type 'T t = any
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun (type __T) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x4673 : Ojs.t) -> any_of_js x4673
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t =
      fun (type __T) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x4672 : any) -> any_to_js x4672
    type 'T t_1 = 'T t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 =
      fun (type __T) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x4676 : Ojs.t) -> t_of_js __T_of_js x4676
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t =
      fun (type __T) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x4674 : __T t) -> t_to_js __T_to_js x4674
  end
module PropertyDescriptorMap =
  struct
    type t = [ `PropertyDescriptorMap ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x4679 : Ojs.t) -> t_of_js x4679
    and t_0_to_js : t_0 -> Ojs.t = fun (x4678 : t) -> t_to_js x4678
    type tags = [ `PropertyDescriptorMap ]
    type tags_0 = tags
    type 'tags this =
      'tags intf constraint 'tags = [> `PropertyDescriptorMap ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x4682 : Ojs.t) -> intf_of_js __tags_of_js x4682
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x4680 : __tags intf) -> intf_to_js __tags_to_js x4680
    let (get : 'tags this -> PropertyKey.t -> PropertyDescriptor.t) =
      fun (x4684 : 'tags this) ->
        fun (x4686 : PropertyKey.t) ->
          PropertyDescriptor.t_of_js
            (Ojs.get_prop (this_to_js Obj.magic x4684)
               (PropertyKey.t_to_js x4686))
    let (set : 'tags this -> PropertyKey.t -> PropertyDescriptor.t -> unit) =
      fun (x4687 : 'tags this) ->
        fun (x4689 : PropertyKey.t) ->
          fun (x4690 : PropertyDescriptor.t) ->
            Ojs.set_prop (this_to_js Obj.magic x4687)
              (PropertyKey.t_to_js x4689) (PropertyDescriptor.t_to_js x4690)
    let cast_from = Obj.magic
  end
module Object =
  struct
    module AnonymousInterface48 =
      struct
        type 'T t = Ojs.t
        let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
          fun (type __T) ->
            fun (__T_of_js : Ojs.t -> __T) -> fun (x4692 : Ojs.t) -> x4692
        and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t =
          fun (type __T) ->
            fun (__T_to_js : __T -> Ojs.t) -> fun (x4691 : Ojs.t) -> x4691
        let (get : 'T t -> string -> 'T) =
          fun (x4693 : 'T t) ->
            fun (x4695 : string) ->
              Obj.magic
                (Ojs.get_prop (t_to_js Obj.magic x4693)
                   (Ojs.string_to_js x4695))
        let (set : 'T t -> string -> 'T -> unit) =
          fun (x4696 : 'T t) ->
            fun (x4698 : string) ->
              fun (x4699 : 'T) ->
                Ojs.set_prop (t_to_js Obj.magic x4696)
                  (Ojs.string_to_js x4698) (Obj.magic x4699)
        module Make(T:Ojs.T) =
          struct
            type 'T parent = 'T t
            let rec parent_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T parent =
              fun (type __T) ->
                fun (__T_of_js : Ojs.t -> __T) ->
                  fun (x4702 : Ojs.t) -> t_of_js __T_of_js x4702
            and parent_to_js : 'T . ('T -> Ojs.t) -> 'T parent -> Ojs.t =
              fun (type __T) ->
                fun (__T_to_js : __T -> Ojs.t) ->
                  fun (x4700 : __T t) -> t_to_js __T_to_js x4700
            type t = T.t parent
            let rec t_of_js : Ojs.t -> t =
              fun (x4706 : Ojs.t) -> parent_of_js T.t_of_js x4706
            and t_to_js : t -> Ojs.t =
              fun (x4704 : T.t parent) -> parent_to_js T.t_to_js x4704
            let (get : t -> string -> T.t) =
              fun (x4708 : t) ->
                fun (x4709 : string) ->
                  T.t_of_js
                    (Ojs.get_prop (t_to_js x4708) (Ojs.string_to_js x4709))
            let (set : t -> string -> T.t -> unit) =
              fun (x4710 : t) ->
                fun (x4711 : string) ->
                  fun (x4712 : T.t) ->
                    Ojs.set_prop (t_to_js x4710) (Ojs.string_to_js x4711)
                      (T.t_to_js x4712)
          end
      end
    module AnonymousInterface45 =
      struct
        type 'T t = Ojs.t
        let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
          fun (type __T) ->
            fun (__T_of_js : Ojs.t -> __T) -> fun (x4714 : Ojs.t) -> x4714
        and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t =
          fun (type __T) ->
            fun (__T_to_js : __T -> Ojs.t) -> fun (x4713 : Ojs.t) -> x4713
        let (get : 'T t -> string -> 'T) =
          fun (x4715 : 'T t) ->
            fun (x4717 : string) ->
              Obj.magic
                (Ojs.get_prop (t_to_js Obj.magic x4715)
                   (Ojs.string_to_js x4717))
        let (set : 'T t -> string -> 'T -> unit) =
          fun (x4718 : 'T t) ->
            fun (x4720 : string) ->
              fun (x4721 : 'T) ->
                Ojs.set_prop (t_to_js Obj.magic x4718)
                  (Ojs.string_to_js x4720) (Obj.magic x4721)
        module Make(T:Ojs.T) =
          struct
            type 'T parent = 'T t
            let rec parent_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T parent =
              fun (type __T) ->
                fun (__T_of_js : Ojs.t -> __T) ->
                  fun (x4724 : Ojs.t) -> t_of_js __T_of_js x4724
            and parent_to_js : 'T . ('T -> Ojs.t) -> 'T parent -> Ojs.t =
              fun (type __T) ->
                fun (__T_to_js : __T -> Ojs.t) ->
                  fun (x4722 : __T t) -> t_to_js __T_to_js x4722
            type t = T.t parent
            let rec t_of_js : Ojs.t -> t =
              fun (x4728 : Ojs.t) -> parent_of_js T.t_of_js x4728
            and t_to_js : t -> Ojs.t =
              fun (x4726 : T.t parent) -> parent_to_js T.t_to_js x4726
            let (get : t -> string -> T.t) =
              fun (x4730 : t) ->
                fun (x4731 : string) ->
                  T.t_of_js
                    (Ojs.get_prop (t_to_js x4730) (Ojs.string_to_js x4731))
            let (set : t -> string -> T.t -> unit) =
              fun (x4732 : t) ->
                fun (x4733 : string) ->
                  fun (x4734 : T.t) ->
                    Ojs.set_prop (t_to_js x4732) (Ojs.string_to_js x4733)
                      (T.t_to_js x4734)
          end
      end
    module AnonymousInterface17 =
      struct
        type t = Ojs.t
        let rec t_of_js : Ojs.t -> t = fun (x4736 : Ojs.t) -> x4736
        and t_to_js : t -> Ojs.t = fun (x4735 : Ojs.t) -> x4735
        let (get : t -> string -> PropertyDescriptor.t) =
          fun (x4737 : t) ->
            fun (x4738 : string) ->
              PropertyDescriptor.t_of_js
                (Ojs.get_prop (t_to_js x4737) (Ojs.string_to_js x4738))
        let (set : t -> string -> PropertyDescriptor.t -> unit) =
          fun (x4739 : t) ->
            fun (x4740 : string) ->
              fun (x4741 : PropertyDescriptor.t) ->
                Ojs.set_prop (t_to_js x4739) (Ojs.string_to_js x4740)
                  (PropertyDescriptor.t_to_js x4741)
      end
    type t = [ `Object ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x4743 : Ojs.t) -> t_of_js x4743
    and t_0_to_js : t_0 -> Ojs.t = fun (x4742 : t) -> t_to_js x4742
    type tags = [ `Object ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `Object ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x4746 : Ojs.t) -> intf_of_js __tags_of_js x4746
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x4744 : __tags intf) -> intf_to_js __tags_to_js x4744
    let (get_constructor : 'tags this -> Function.t) =
      fun (x4748 : 'tags this) ->
        Function.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x4748) "constructor")
    let (set_constructor : 'tags this -> Function.t -> unit) =
      fun (x4750 : 'tags this) ->
        fun (x4751 : Function.t) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x4750) "constructor"
            (Function.t_to_js x4751)
    let (toString : 'tags this -> string) =
      fun (x4753 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x4753) "toString" [||])
    let (toLocaleString : 'tags this -> string) =
      fun (x4755 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x4755) "toLocaleString" [||])
    let (valueOf : 'tags this -> t) =
      fun (x4757 : 'tags this) ->
        t_of_js (Ojs.call (this_to_js Obj.magic x4757) "valueOf" [||])
    let (hasOwnProperty : 'tags this -> v:PropertyKey.t -> bool) =
      fun (x4760 : 'tags this) ->
        fun ~v:(x4759 : PropertyKey.t) ->
          Ojs.bool_of_js
            (Ojs.call (this_to_js Obj.magic x4760) "hasOwnProperty"
               [|(PropertyKey.t_to_js x4759)|])
    let (isPrototypeOf : 'tags this -> v:t -> bool) =
      fun (x4763 : 'tags this) ->
        fun ~v:(x4762 : t) ->
          Ojs.bool_of_js
            (Ojs.call (this_to_js Obj.magic x4763) "isPrototypeOf"
               [|(t_to_js x4762)|])
    let (propertyIsEnumerable : 'tags this -> v:PropertyKey.t -> bool) =
      fun (x4766 : 'tags this) ->
        fun ~v:(x4765 : PropertyKey.t) ->
          Ojs.bool_of_js
            (Ojs.call (this_to_js Obj.magic x4766) "propertyIsEnumerable"
               [|(PropertyKey.t_to_js x4765)|])
    let (hasOwn : o:untyped_object -> v:PropertyKey.t -> bool) =
      fun ~o:(x4768 : untyped_object) ->
        fun ~v:(x4769 : PropertyKey.t) ->
          Ojs.bool_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "hasOwn"
               [|(untyped_object_to_js x4768);(PropertyKey.t_to_js x4769)|])
    let (fromEntries :
      (PropertyKey.t * 'T) Iterable.t -> 'T AnonymousInterface45.t) =
      fun (x4770 : (PropertyKey.t * 'T) Iterable.t) ->
        AnonymousInterface45.t_of_js Obj.magic
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "fromEntries"
             [|(Iterable.t_to_js
                  (fun (x4771 : (PropertyKey.t * 'T)) ->
                     let (x4772, x4773) = x4771 in
                     let x4774 = Ojs.array_make 2 in
                     Ojs.array_set x4774 0 (PropertyKey.t_to_js x4772);
                     Ojs.array_set x4774 1 (Obj.magic x4773);
                     x4774) x4770)|])
    let (fromEntries' : any list Iterable.t -> any) =
      fun (x4776 : any list Iterable.t) ->
        any_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "fromEntries"
             [|(Iterable.t_to_js
                  (fun (x4777 : any list) -> Ojs.list_to_js any_to_js x4777)
                  x4776)|])
    let (values :
      [ `U1 of 'T AnonymousInterface48.t  | `U2 of 'T ArrayLike.t ] ->
        'T list)
      =
      fun
        (x4779 :
          [ `U1 of 'T AnonymousInterface48.t  | `U2 of 'T ArrayLike.t ])
        ->
        Ojs.list_of_js Obj.magic
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "values"
             [|((match x4779 with
                 | `U1 x4780 -> AnonymousInterface48.t_to_js Obj.magic x4780
                 | `U2 x4782 -> ArrayLike.t_to_js Obj.magic x4782))|])
    let (values' : untyped_object -> any list) =
      fun (x4785 : untyped_object) ->
        Ojs.list_of_js any_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "values"
             [|(untyped_object_to_js x4785)|])
    let (entries :
      [ `U1 of 'T AnonymousInterface48.t  | `U2 of 'T ArrayLike.t ] ->
        (string * 'T) list)
      =
      fun
        (x4787 :
          [ `U1 of 'T AnonymousInterface48.t  | `U2 of 'T ArrayLike.t ])
        ->
        Ojs.list_of_js
          (fun (x4792 : Ojs.t) ->
             let x4793 = x4792 in
             ((Ojs.string_of_js (Ojs.array_get x4793 0)),
               (Obj.magic (Ojs.array_get x4793 1))))
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "entries"
             [|((match x4787 with
                 | `U1 x4788 -> AnonymousInterface48.t_to_js Obj.magic x4788
                 | `U2 x4790 -> ArrayLike.t_to_js Obj.magic x4790))|])
    let (entries' : untyped_object -> (string * any) list) =
      fun (x4794 : untyped_object) ->
        Ojs.list_of_js
          (fun (x4795 : Ojs.t) ->
             let x4796 = x4795 in
             ((Ojs.string_of_js (Ojs.array_get x4796 0)),
               (any_of_js (Ojs.array_get x4796 1))))
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "entries"
             [|(untyped_object_to_js x4794)|])
    let (getOwnPropertyDescriptors :
      'T -> (any, AnonymousInterface17.t) intersection2) =
      fun (x4797 : 'T) ->
        intersection2_of_js any_of_js AnonymousInterface17.t_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object")
             "getOwnPropertyDescriptors" [|(Obj.magic x4797)|])
    let (assign : target:'T -> source:'U -> ('T, 'U) intersection2) =
      fun ~target:(x4800 : 'T) ->
        fun ~source:(x4801 : 'U) ->
          intersection2_of_js Obj.magic Obj.magic
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "assign"
               [|(Obj.magic x4800);(Obj.magic x4801)|])
    let (assign' :
      target:'T -> source1:'U -> source2:'V -> ('T, 'U, 'V) intersection3) =
      fun ~target:(x4804 : 'T) ->
        fun ~source1:(x4805 : 'U) ->
          fun ~source2:(x4806 : 'V) ->
            intersection3_of_js Obj.magic Obj.magic Obj.magic
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "assign"
                 [|(Obj.magic x4804);(Obj.magic x4805);(Obj.magic x4806)|])
    let (assign'' :
      target:'T ->
        source1:'U ->
          source2:'V -> source3:'W -> ('T, 'U, 'V, 'W) intersection4)
      =
      fun ~target:(x4810 : 'T) ->
        fun ~source1:(x4811 : 'U) ->
          fun ~source2:(x4812 : 'V) ->
            fun ~source3:(x4813 : 'W) ->
              intersection4_of_js Obj.magic Obj.magic Obj.magic Obj.magic
                (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "assign"
                   [|(Obj.magic x4810);(Obj.magic x4811);(Obj.magic x4812);(
                     Obj.magic x4813)|])
    let (assign''' : target:untyped_object -> sources:any list -> any) =
      fun ~target:(x4818 : untyped_object) ->
        fun ~sources:(x4819 : any list) ->
          any_of_js
            (let x4822 = Ojs.get_prop_ascii Ojs.global "Object" in
             Ojs.call (Ojs.get_prop_ascii x4822 "assign") "apply"
               [|x4822;((let x4820 =
                           Ojs.new_obj
                             (Ojs.get_prop_ascii Ojs.global "Array") 
                             [||] in
                         ignore
                           (Ojs.call x4820 "push"
                              [|(untyped_object_to_js x4818)|]);
                         List.iter
                           (fun (x4821 : any) ->
                              ignore
                                (Ojs.call x4820 "push" [|(any_to_js x4821)|]))
                           x4819;
                         x4820))|])
    let (getOwnPropertySymbols : any -> symbol list) =
      fun (x4823 : any) ->
        Ojs.list_of_js symbol_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object")
             "getOwnPropertySymbols" [|(any_to_js x4823)|])
    let (keys : untyped_object -> string list) =
      fun (x4825 : untyped_object) ->
        Ojs.list_of_js Ojs.string_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "keys"
             [|(untyped_object_to_js x4825)|])
    let (is : value1:any -> value2:any -> bool) =
      fun ~value1:(x4827 : any) ->
        fun ~value2:(x4828 : any) ->
          Ojs.bool_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "is"
               [|(any_to_js x4827);(any_to_js x4828)|])
    let (setPrototypeOf : o:any -> proto:untyped_object option -> any) =
      fun ~o:(x4829 : any) ->
        fun ~proto:(x4830 : untyped_object option) ->
          any_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object")
               "setPrototypeOf"
               [|(any_to_js x4829);(Ojs.option_to_js untyped_object_to_js
                                      x4830)|])
    let (create : ?value:any -> unit -> t) =
      fun ?value:(x4832 : any option) ->
        fun () ->
          t_of_js
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "Object")
               (let x4833 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x4832 with
                 | Some x4834 ->
                     ignore (Ojs.call x4833 "push" [|(any_to_js x4834)|])
                 | None -> ());
                x4833))
    let (invoke : unit -> any) =
      fun () ->
        any_of_js (Ojs.apply (Ojs.get_prop_ascii Ojs.global "Object") [||])
    let (invoke' : any -> any) =
      fun (x4835 : any) ->
        any_of_js
          (Ojs.apply (Ojs.get_prop_ascii Ojs.global "Object")
             [|(any_to_js x4835)|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Object")
             "prototype")
    let (getPrototypeOf : any -> any) =
      fun (x4836 : any) ->
        any_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "getPrototypeOf"
             [|(any_to_js x4836)|])
    let (getOwnPropertyDescriptor :
      o:any -> p:PropertyKey.t -> PropertyDescriptor.t option) =
      fun ~o:(x4837 : any) ->
        fun ~p:(x4838 : PropertyKey.t) ->
          Ojs.option_of_js PropertyDescriptor.t_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object")
               "getOwnPropertyDescriptor"
               [|(any_to_js x4837);(PropertyKey.t_to_js x4838)|])
    let (getOwnPropertyNames : any -> string list) =
      fun (x4840 : any) ->
        Ojs.list_of_js Ojs.string_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object")
             "getOwnPropertyNames" [|(any_to_js x4840)|])
    let (create_ : untyped_object option -> any) =
      fun (x4842 : untyped_object option) ->
        any_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "create"
             [|(Ojs.option_to_js untyped_object_to_js x4842)|])
    let (create_' :
      o:untyped_object option ->
        properties:(PropertyDescriptorMap.t, any ThisType.t) intersection2 ->
          any)
      =
      fun ~o:(x4844 : untyped_object option) ->
        fun
          ~properties:(x4846 :
                        (PropertyDescriptorMap.t, any ThisType.t)
                          intersection2)
          ->
          any_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "create"
               [|(Ojs.option_to_js untyped_object_to_js x4844);(intersection2_to_js
                                                                  PropertyDescriptorMap.t_to_js
                                                                  (fun
                                                                    (x4848 :
                                                                    any
                                                                    ThisType.t)
                                                                    ->
                                                                    ThisType.t_to_js
                                                                    any_to_js
                                                                    x4848)
                                                                  x4846)|])
    let (defineProperty :
      o:'T ->
        p:PropertyKey.t ->
          attributes:(PropertyDescriptor.t, any ThisType.t) intersection2 ->
            'T)
      =
      fun ~o:(x4850 : 'T) ->
        fun ~p:(x4851 : PropertyKey.t) ->
          fun
            ~attributes:(x4852 :
                          (PropertyDescriptor.t, any ThisType.t)
                            intersection2)
            ->
            Obj.magic
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object")
                 "defineProperty"
                 [|(Obj.magic x4850);(PropertyKey.t_to_js x4851);(intersection2_to_js
                                                                    PropertyDescriptor.t_to_js
                                                                    (
                                                                    fun
                                                                    (x4854 :
                                                                    any
                                                                    ThisType.t)
                                                                    ->
                                                                    ThisType.t_to_js
                                                                    any_to_js
                                                                    x4854)
                                                                    x4852)|])
    let (defineProperties :
      o:'T ->
        properties:(PropertyDescriptorMap.t, any ThisType.t) intersection2 ->
          'T)
      =
      fun ~o:(x4856 : 'T) ->
        fun
          ~properties:(x4857 :
                        (PropertyDescriptorMap.t, any ThisType.t)
                          intersection2)
          ->
          Obj.magic
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object")
               "defineProperties"
               [|(Obj.magic x4856);(intersection2_to_js
                                      PropertyDescriptorMap.t_to_js
                                      (fun (x4859 : any ThisType.t) ->
                                         ThisType.t_to_js any_to_js x4859)
                                      x4857)|])
    let (seal : 'T -> 'T) =
      fun (x4861 : 'T) ->
        Obj.magic
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "seal"
             [|(Obj.magic x4861)|])
    let (freeze : 'T list -> 'T list) =
      fun (x4862 : 'T list) ->
        Ojs.list_of_js Obj.magic
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "freeze"
             [|(Ojs.list_to_js Obj.magic x4862)|])
    let (freeze' : 'T -> 'T) =
      fun (x4865 : 'T) ->
        Obj.magic
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "freeze"
             [|(Obj.magic x4865)|])
    let (freeze'' : 'T -> 'T Readonly.t) =
      fun (x4866 : 'T) ->
        Readonly.t_of_js Obj.magic
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "freeze"
             [|(Obj.magic x4866)|])
    let (preventExtensions : 'T -> 'T) =
      fun (x4868 : 'T) ->
        Obj.magic
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object")
             "preventExtensions" [|(Obj.magic x4868)|])
    let (isSealed : any -> bool) =
      fun (x4869 : any) ->
        Ojs.bool_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "isSealed"
             [|(any_to_js x4869)|])
    let (isFrozen : any -> bool) =
      fun (x4870 : any) ->
        Ojs.bool_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "isFrozen"
             [|(any_to_js x4870)|])
    let (isExtensible : any -> bool) =
      fun (x4871 : any) ->
        Ojs.bool_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "isExtensible"
             [|(any_to_js x4871)|])
    let (keys' : untyped_object -> string list) =
      fun (x4872 : untyped_object) ->
        Ojs.list_of_js Ojs.string_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "keys"
             [|(untyped_object_to_js x4872)|])
    let cast_from = Obj.magic
  end
module PropertyDecorator =
  struct
    type t = [ `PropertyDecorator ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x4875 : Ojs.t) -> t_of_js x4875
    and t_0_to_js : t_0 -> Ojs.t = fun (x4874 : t) -> t_to_js x4874
    type tags = [ `PropertyDecorator ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `PropertyDecorator ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x4878 : Ojs.t) -> intf_of_js __tags_of_js x4878
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x4876 : __tags intf) -> intf_to_js __tags_to_js x4876
    let (apply :
      'tags this ->
        target:Object.t ->
          propertyKey:[ `U1 of string  | `U2 of symbol ] -> unit)
      =
      fun (x4884 : 'tags this) ->
        fun ~target:(x4880 : Object.t) ->
          fun ~propertyKey:(x4881 : [ `U1 of string  | `U2 of symbol ]) ->
            ignore
              (Ojs.apply (this_to_js Obj.magic x4884)
                 [|(Object.t_to_js x4880);((match x4881 with
                                            | `U1 x4882 ->
                                                Ojs.string_to_js x4882
                                            | `U2 x4883 -> symbol_to_js x4883))|])
    let cast_from = Obj.magic
  end
module PromiseLike =
  struct
    type 'T t = [ `PromiseLike of 'T ] intf
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun _T -> Obj.magic
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun _T -> Obj.magic
    type 'T t_1 = 'T t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 =
      fun (type __T) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x4888 : Ojs.t) -> t_of_js __T_of_js x4888
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t =
      fun (type __T) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x4886 : __T t) -> t_to_js __T_to_js x4886
    type 'T tags = [ `PromiseLike of 'T ]
    type 'T tags_1 = 'T tags
    type ('tags, 'T) this =
      'tags intf constraint 'tags = [> `PromiseLike of 'T ]
    let rec this_of_js :
      'tags 'T .
        (Ojs.t -> 'tags) -> (Ojs.t -> 'T) -> Ojs.t -> ('tags, 'T) this
      =
      fun (type __tags) ->
        fun (type __T) ->
          fun (__tags_of_js : Ojs.t -> __tags) ->
            fun (__T_of_js : Ojs.t -> __T) ->
              fun (x4892 : Ojs.t) -> intf_of_js __tags_of_js x4892
    and this_to_js :
      'tags 'T .
        ('tags -> Ojs.t) -> ('T -> Ojs.t) -> ('tags, 'T) this -> Ojs.t
      =
      fun (type __tags) ->
        fun (type __T) ->
          fun (__tags_to_js : __tags -> Ojs.t) ->
            fun (__T_to_js : __T -> Ojs.t) ->
              fun (x4890 : __tags intf) -> intf_to_js __tags_to_js x4890
    let (then_ :
      ('tags, 'T) this ->
        ?onfulfilled:[ `Null  | `Undefined of undefined 
                     | `U1 of
                         'T -> [ `U1 of 'TResult1  | `U2 of 'TResult1 t ] ]
          ->
          ?onrejected:[ `Null  | `Undefined of undefined 
                      | `U1 of
                          any -> [ `U1 of 'TResult2  | `U2 of 'TResult2 t ] ]
            -> unit -> ('TResult1, 'TResult2) union2 t)
      =
      fun (x4911 : ('tags, 'T) this) ->
        fun
          ?onfulfilled:(x4894 :
                         [ `Null  | `Undefined of undefined 
                         | `U1 of
                             'T -> [ `U1 of 'TResult1  | `U2 of 'TResult1 t ] ]
                           option)
          ->
          fun
            ?onrejected:(x4895 :
                          [ `Null  | `Undefined of undefined 
                          | `U1 of
                              any ->
                                [ `U1 of 'TResult2  | `U2 of 'TResult2 t ]
                              ]
                            option)
            ->
            fun () ->
              t_of_js
                (fun (x4915 : Ojs.t) ->
                   union2_of_js Obj.magic Obj.magic x4915)
                (let x4914 = this_to_js Obj.magic Obj.magic x4911 in
                 Ojs.call (Ojs.get_prop_ascii x4914 "then") "apply"
                   [|x4914;((let x4896 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x4894 with
                              | Some x4904 ->
                                  ignore
                                    (Ojs.call x4896 "push"
                                       [|((match x4904 with
                                           | `Null -> Ojs.null
                                           | `Undefined x4905 ->
                                               undefined_to_js x4905
                                           | `U1 x4906 ->
                                               Ojs.fun_to_js 1
                                                 (fun (x4907 : Ojs.t) ->
                                                    match x4906
                                                            (Obj.magic x4907)
                                                    with
                                                    | `U1 x4908 ->
                                                        Obj.magic x4908
                                                    | `U2 x4909 ->
                                                        t_to_js Obj.magic
                                                          x4909)))|])
                              | None -> ());
                             (match x4895 with
                              | Some x4897 ->
                                  ignore
                                    (Ojs.call x4896 "push"
                                       [|((match x4897 with
                                           | `Null -> Ojs.null
                                           | `Undefined x4898 ->
                                               undefined_to_js x4898
                                           | `U1 x4899 ->
                                               Ojs.fun_to_js 1
                                                 (fun (x4900 : Ojs.t) ->
                                                    match x4899
                                                            (any_of_js x4900)
                                                    with
                                                    | `U1 x4901 ->
                                                        Obj.magic x4901
                                                    | `U2 x4902 ->
                                                        t_to_js Obj.magic
                                                          x4902)))|])
                              | None -> ());
                             x4896))|])
    let cast_from = Obj.magic
  end
module PromiseConstructorLike =
  struct
    module AnonymousInterface9 =
      struct
        type t = Ojs.t
        let rec t_of_js : Ojs.t -> t = fun (x4919 : Ojs.t) -> x4919
        and t_to_js : t -> Ojs.t = fun (x4918 : Ojs.t) -> x4918
        let (create :
          t ->
            executor:(resolve:([ `U1 of 'T  | `U2 of 'T PromiseLike.t ] ->
                                 unit)
                        -> reject:(?reason:any -> unit -> unit) -> unit)
              -> 'T PromiseLike.t)
          =
          fun (x4930 : t) ->
            fun
              ~executor:(x4920 :
                          resolve:([ `U1 of 'T  | `U2 of 'T PromiseLike.t ]
                                     -> unit)
                            -> reject:(?reason:any -> unit -> unit) -> unit)
              ->
              PromiseLike.t_of_js Obj.magic
                (Ojs.new_obj (t_to_js x4930)
                   [|(Ojs.fun_to_js 2
                        (fun (x4921 : Ojs.t) ->
                           fun (x4926 : Ojs.t) ->
                             x4920
                               ~resolve:(fun
                                           (x4922 :
                                             [ `U1 of 'T 
                                             | `U2 of 'T PromiseLike.t ])
                                           ->
                                           ignore
                                             (Ojs.apply x4921
                                                [|((match x4922 with
                                                    | `U1 x4923 ->
                                                        Obj.magic x4923
                                                    | `U2 x4924 ->
                                                        PromiseLike.t_to_js
                                                          Obj.magic x4924))|]))
                               ~reject:(fun ?reason:(x4927 : any option) ->
                                          fun () ->
                                            ignore
                                              (Ojs.call x4926 "apply"
                                                 [|Ojs.null;((let x4928 =
                                                                Ojs.new_obj
                                                                  (Ojs.get_prop_ascii
                                                                    Ojs.global
                                                                    "Array")
                                                                  [||] in
                                                              (match x4927
                                                               with
                                                               | Some x4929
                                                                   ->
                                                                   ignore
                                                                    (Ojs.call
                                                                    x4928
                                                                    "push"
                                                                    [|(
                                                                    any_to_js
                                                                    x4929)|])
                                                               | None -> ());
                                                              x4928))|]))))|])
      end
    type t = AnonymousInterface9.t
    let rec t_of_js : Ojs.t -> t =
      fun (x4933 : Ojs.t) -> AnonymousInterface9.t_of_js x4933
    and t_to_js : t -> Ojs.t =
      fun (x4932 : AnonymousInterface9.t) ->
        AnonymousInterface9.t_to_js x4932
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x4935 : Ojs.t) -> t_of_js x4935
    and t_0_to_js : t_0 -> Ojs.t = fun (x4934 : t) -> t_to_js x4934
  end
module Parameters =
  struct
    type 'T t = any
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun (type __T) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x4937 : Ojs.t) -> any_of_js x4937
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t =
      fun (type __T) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x4936 : any) -> any_to_js x4936
    type 'T t_1 = 'T t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 =
      fun (type __T) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x4940 : Ojs.t) -> t_of_js __T_of_js x4940
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t =
      fun (type __T) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x4938 : __T t) -> t_to_js __T_to_js x4938
  end
module ParameterDecorator =
  struct
    type t = [ `ParameterDecorator ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x4943 : Ojs.t) -> t_of_js x4943
    and t_0_to_js : t_0 -> Ojs.t = fun (x4942 : t) -> t_to_js x4942
    type tags = [ `ParameterDecorator ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `ParameterDecorator ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x4946 : Ojs.t) -> intf_of_js __tags_of_js x4946
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x4944 : __tags intf) -> intf_to_js __tags_to_js x4944
    let (apply :
      'tags this ->
        target:Object.t ->
          propertyKey:[ `U1 of string  | `U2 of symbol ] ->
            parameterIndex:float -> unit)
      =
      fun (x4953 : 'tags this) ->
        fun ~target:(x4948 : Object.t) ->
          fun ~propertyKey:(x4949 : [ `U1 of string  | `U2 of symbol ]) ->
            fun ~parameterIndex:(x4952 : float) ->
              ignore
                (Ojs.apply (this_to_js Obj.magic x4953)
                   [|(Object.t_to_js x4948);((match x4949 with
                                              | `U1 x4950 ->
                                                  Ojs.string_to_js x4950
                                              | `U2 x4951 ->
                                                  symbol_to_js x4951));(
                     Ojs.float_to_js x4952)|])
    let cast_from = Obj.magic
  end
module Pick =
  struct
    type ('T, 'K) t = any
    let rec t_of_js :
      'T 'K . (Ojs.t -> 'T) -> (Ojs.t -> 'K) -> Ojs.t -> ('T, 'K) t =
      fun (type __T) ->
        fun (type __K) ->
          fun (__T_of_js : Ojs.t -> __T) ->
            fun (__K_of_js : Ojs.t -> __K) ->
              fun (x4956 : Ojs.t) -> any_of_js x4956
    and t_to_js :
      'T 'K . ('T -> Ojs.t) -> ('K -> Ojs.t) -> ('T, 'K) t -> Ojs.t =
      fun (type __T) ->
        fun (type __K) ->
          fun (__T_to_js : __T -> Ojs.t) ->
            fun (__K_to_js : __K -> Ojs.t) ->
              fun (x4955 : any) -> any_to_js x4955
    type ('T, 'K) t_2 = ('T, 'K) t
    let rec t_2_of_js :
      'T 'K . (Ojs.t -> 'T) -> (Ojs.t -> 'K) -> Ojs.t -> ('T, 'K) t_2 =
      fun (type __T) ->
        fun (type __K) ->
          fun (__T_of_js : Ojs.t -> __T) ->
            fun (__K_of_js : Ojs.t -> __K) ->
              fun (x4960 : Ojs.t) -> t_of_js __T_of_js __K_of_js x4960
    and t_2_to_js :
      'T 'K . ('T -> Ojs.t) -> ('K -> Ojs.t) -> ('T, 'K) t_2 -> Ojs.t =
      fun (type __T) ->
        fun (type __K) ->
          fun (__T_to_js : __T -> Ojs.t) ->
            fun (__K_to_js : __K -> Ojs.t) ->
              fun (x4957 : (__T, __K) t) -> t_to_js __T_to_js __K_to_js x4957
  end
module Exclude =
  struct
    type ('T, 'U) t = any
    let rec t_of_js :
      'T 'U . (Ojs.t -> 'T) -> (Ojs.t -> 'U) -> Ojs.t -> ('T, 'U) t =
      fun (type __T) ->
        fun (type __U) ->
          fun (__T_of_js : Ojs.t -> __T) ->
            fun (__U_of_js : Ojs.t -> __U) ->
              fun (x4964 : Ojs.t) -> any_of_js x4964
    and t_to_js :
      'T 'U . ('T -> Ojs.t) -> ('U -> Ojs.t) -> ('T, 'U) t -> Ojs.t =
      fun (type __T) ->
        fun (type __U) ->
          fun (__T_to_js : __T -> Ojs.t) ->
            fun (__U_to_js : __U -> Ojs.t) ->
              fun (x4963 : any) -> any_to_js x4963
    type ('T, 'U) t_2 = ('T, 'U) t
    let rec t_2_of_js :
      'T 'U . (Ojs.t -> 'T) -> (Ojs.t -> 'U) -> Ojs.t -> ('T, 'U) t_2 =
      fun (type __T) ->
        fun (type __U) ->
          fun (__T_of_js : Ojs.t -> __T) ->
            fun (__U_of_js : Ojs.t -> __U) ->
              fun (x4968 : Ojs.t) -> t_of_js __T_of_js __U_of_js x4968
    and t_2_to_js :
      'T 'U . ('T -> Ojs.t) -> ('U -> Ojs.t) -> ('T, 'U) t_2 -> Ojs.t =
      fun (type __T) ->
        fun (type __U) ->
          fun (__T_to_js : __T -> Ojs.t) ->
            fun (__U_to_js : __U -> Ojs.t) ->
              fun (x4965 : (__T, __U) t) -> t_to_js __T_to_js __U_to_js x4965
  end
module Omit =
  struct
    type ('T, 'K) t = ('T, (any, 'K) Exclude.t) Pick.t
    let rec t_of_js :
      'T 'K . (Ojs.t -> 'T) -> (Ojs.t -> 'K) -> Ojs.t -> ('T, 'K) t =
      fun (type __T) ->
        fun (type __K) ->
          fun (__T_of_js : Ojs.t -> __T) ->
            fun (__K_of_js : Ojs.t -> __K) ->
              fun (x4976 : Ojs.t) ->
                Pick.t_of_js __T_of_js
                  (fun (x4978 : Ojs.t) ->
                     Exclude.t_of_js any_of_js __K_of_js x4978) x4976
    and t_to_js :
      'T 'K . ('T -> Ojs.t) -> ('K -> Ojs.t) -> ('T, 'K) t -> Ojs.t =
      fun (type __T) ->
        fun (type __K) ->
          fun (__T_to_js : __T -> Ojs.t) ->
            fun (__K_to_js : __K -> Ojs.t) ->
              fun (x4971 : (__T, (any, __K) Exclude.t) Pick.t) ->
                Pick.t_to_js __T_to_js
                  (fun (x4973 : (any, __K) Exclude.t) ->
                     Exclude.t_to_js any_to_js __K_to_js x4973) x4971
    type ('T, 'K) t_2 = ('T, 'K) t
    let rec t_2_of_js :
      'T 'K . (Ojs.t -> 'T) -> (Ojs.t -> 'K) -> Ojs.t -> ('T, 'K) t_2 =
      fun (type __T) ->
        fun (type __K) ->
          fun (__T_of_js : Ojs.t -> __T) ->
            fun (__K_of_js : Ojs.t -> __K) ->
              fun (x4984 : Ojs.t) -> t_of_js __T_of_js __K_of_js x4984
    and t_2_to_js :
      'T 'K . ('T -> Ojs.t) -> ('K -> Ojs.t) -> ('T, 'K) t_2 -> Ojs.t =
      fun (type __T) ->
        fun (type __K) ->
          fun (__T_to_js : __T -> Ojs.t) ->
            fun (__K_to_js : __K -> Ojs.t) ->
              fun (x4981 : (__T, __K) t) -> t_to_js __T_to_js __K_to_js x4981
  end
module Number =
  struct
    type t = [ `Number ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x4988 : Ojs.t) -> t_of_js x4988
    and t_0_to_js : t_0 -> Ojs.t = fun (x4987 : t) -> t_to_js x4987
    type tags = [ `Number ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `Number ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x4991 : Ojs.t) -> intf_of_js __tags_of_js x4991
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x4989 : __tags intf) -> intf_to_js __tags_to_js x4989
    let (toLocaleString :
      'tags this ->
        ?locales:[ `U1 of string  | `U2 of string list ] ->
          ?options:Intl.NumberFormatOptions.t -> unit -> string)
      =
      fun (x5001 : 'tags this) ->
        fun ?locales:(x4993 : [ `U1 of string  | `U2 of string list ] option)
          ->
          fun ?options:(x4994 : Intl.NumberFormatOptions.t option) ->
            fun () ->
              Ojs.string_of_js
                (let x5003 = this_to_js Obj.magic x5001 in
                 Ojs.call (Ojs.get_prop_ascii x5003 "toLocaleString") "apply"
                   [|x5003;((let x4995 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x4993 with
                              | Some x4997 ->
                                  ignore
                                    (Ojs.call x4995 "push"
                                       [|((match x4997 with
                                           | `U1 x4998 ->
                                               Ojs.string_to_js x4998
                                           | `U2 x4999 ->
                                               Ojs.list_to_js
                                                 Ojs.string_to_js x4999))|])
                              | None -> ());
                             (match x4994 with
                              | Some x4996 ->
                                  ignore
                                    (Ojs.call x4995 "push"
                                       [|(Intl.NumberFormatOptions.t_to_js
                                            x4996)|])
                              | None -> ());
                             x4995))|])
    let (toString : 'tags this -> ?radix:float -> unit -> string) =
      fun (x5007 : 'tags this) ->
        fun ?radix:(x5004 : float option) ->
          fun () ->
            Ojs.string_of_js
              (let x5009 = this_to_js Obj.magic x5007 in
               Ojs.call (Ojs.get_prop_ascii x5009 "toString") "apply"
                 [|x5009;((let x5005 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x5004 with
                            | Some x5006 ->
                                ignore
                                  (Ojs.call x5005 "push"
                                     [|(Ojs.float_to_js x5006)|])
                            | None -> ());
                           x5005))|])
    let (toFixed : 'tags this -> ?fractionDigits:float -> unit -> string) =
      fun (x5013 : 'tags this) ->
        fun ?fractionDigits:(x5010 : float option) ->
          fun () ->
            Ojs.string_of_js
              (let x5015 = this_to_js Obj.magic x5013 in
               Ojs.call (Ojs.get_prop_ascii x5015 "toFixed") "apply"
                 [|x5015;((let x5011 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x5010 with
                            | Some x5012 ->
                                ignore
                                  (Ojs.call x5011 "push"
                                     [|(Ojs.float_to_js x5012)|])
                            | None -> ());
                           x5011))|])
    let (toExponential :
      'tags this -> ?fractionDigits:float -> unit -> string) =
      fun (x5019 : 'tags this) ->
        fun ?fractionDigits:(x5016 : float option) ->
          fun () ->
            Ojs.string_of_js
              (let x5021 = this_to_js Obj.magic x5019 in
               Ojs.call (Ojs.get_prop_ascii x5021 "toExponential") "apply"
                 [|x5021;((let x5017 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x5016 with
                            | Some x5018 ->
                                ignore
                                  (Ojs.call x5017 "push"
                                     [|(Ojs.float_to_js x5018)|])
                            | None -> ());
                           x5017))|])
    let (toPrecision : 'tags this -> ?precision:float -> unit -> string) =
      fun (x5025 : 'tags this) ->
        fun ?precision:(x5022 : float option) ->
          fun () ->
            Ojs.string_of_js
              (let x5027 = this_to_js Obj.magic x5025 in
               Ojs.call (Ojs.get_prop_ascii x5027 "toPrecision") "apply"
                 [|x5027;((let x5023 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x5022 with
                            | Some x5024 ->
                                ignore
                                  (Ojs.call x5023 "push"
                                     [|(Ojs.float_to_js x5024)|])
                            | None -> ());
                           x5023))|])
    let (valueOf : 'tags this -> float) =
      fun (x5028 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x5028) "valueOf" [||])
    let (epsilon : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Number")
             "EPSILON")
    let (isFinite : unknown -> bool) =
      fun (x5030 : unknown) ->
        Ojs.bool_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Number") "isFinite"
             [|(unknown_to_js x5030)|])
    let (isInteger : unknown -> bool) =
      fun (x5031 : unknown) ->
        Ojs.bool_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Number") "isInteger"
             [|(unknown_to_js x5031)|])
    let (isNaN : unknown -> bool) =
      fun (x5032 : unknown) ->
        Ojs.bool_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Number") "isNaN"
             [|(unknown_to_js x5032)|])
    let (isSafeInteger : unknown -> bool) =
      fun (x5033 : unknown) ->
        Ojs.bool_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Number") "isSafeInteger"
             [|(unknown_to_js x5033)|])
    let (max_safe_integer : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Number")
             "MAX_SAFE_INTEGER")
    let (min_safe_integer : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Number")
             "MIN_SAFE_INTEGER")
    let (parseFloat : string -> float) =
      fun (x5034 : string) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Number") "parseFloat"
             [|(Ojs.string_to_js x5034)|])
    let (parseInt : string:string -> ?radix:float -> unit -> float) =
      fun ~string:(x5035 : string) ->
        fun ?radix:(x5036 : float option) ->
          fun () ->
            Ojs.float_of_js
              (let x5039 = Ojs.get_prop_ascii Ojs.global "Number" in
               Ojs.call (Ojs.get_prop_ascii x5039 "parseInt") "apply"
                 [|x5039;((let x5037 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           ignore
                             (Ojs.call x5037 "push"
                                [|(Ojs.string_to_js x5035)|]);
                           (match x5036 with
                            | Some x5038 ->
                                ignore
                                  (Ojs.call x5037 "push"
                                     [|(Ojs.float_to_js x5038)|])
                            | None -> ());
                           x5037))|])
    let (create : ?value:any -> unit -> t) =
      fun ?value:(x5040 : any option) ->
        fun () ->
          t_of_js
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "Number")
               (let x5041 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x5040 with
                 | Some x5042 ->
                     ignore (Ojs.call x5041 "push" [|(any_to_js x5042)|])
                 | None -> ());
                x5041))
    let (invoke : ?value:any -> unit -> float) =
      fun ?value:(x5043 : any option) ->
        fun () ->
          Ojs.float_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "Number") "apply"
               [|Ojs.null;((let x5044 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x5043 with
                             | Some x5045 ->
                                 ignore
                                   (Ojs.call x5044 "push"
                                      [|(any_to_js x5045)|])
                             | None -> ());
                            x5044))|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Number")
             "prototype")
    let (max_value : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Number")
             "MAX_VALUE")
    let (min_value : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Number")
             "MIN_VALUE")
    let (nan : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Number") "NaN")
    let (negative_infinity : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Number")
             "NEGATIVE_INFINITY")
    let (positive_infinity : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Number")
             "POSITIVE_INFINITY")
    let cast_from = Obj.magic
    let (of_ml : float -> t) =
      fun (x5046 : float) -> t_of_js (Ojs.float_to_js x5046)
    let (to_ml : t -> float) =
      fun (x5047 : t) ->
        Ojs.float_of_js (Ojs.call (t_to_js x5047) "valueOf" [||])
  end
module NonNullable =
  struct
    type 'T t = any
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun (type __T) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x5049 : Ojs.t) -> any_of_js x5049
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t =
      fun (type __T) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x5048 : any) -> any_to_js x5048
    type 'T t_1 = 'T t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 =
      fun (type __T) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x5052 : Ojs.t) -> t_of_js __T_of_js x5052
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t =
      fun (type __T) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x5050 : __T t) -> t_to_js __T_to_js x5050
  end
module NewableFunction =
  struct
    module AnonymousInterface43 =
      struct
        type 'T t = Ojs.t
        let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
          fun (type __T) ->
            fun (__T_of_js : Ojs.t -> __T) -> fun (x5055 : Ojs.t) -> x5055
        and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t =
          fun (type __T) ->
            fun (__T_to_js : __T -> Ojs.t) -> fun (x5054 : Ojs.t) -> x5054
        let (create : 'T t -> 'T) =
          fun (x5056 : 'T t) ->
            Obj.magic (Ojs.new_obj (t_to_js Obj.magic x5056) [||])
        module Make(T:Ojs.T) =
          struct
            type 'T parent = 'T t
            let rec parent_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T parent =
              fun (type __T) ->
                fun (__T_of_js : Ojs.t -> __T) ->
                  fun (x5060 : Ojs.t) -> t_of_js __T_of_js x5060
            and parent_to_js : 'T . ('T -> Ojs.t) -> 'T parent -> Ojs.t =
              fun (type __T) ->
                fun (__T_to_js : __T -> Ojs.t) ->
                  fun (x5058 : __T t) -> t_to_js __T_to_js x5058
            type t = T.t parent
            let rec t_of_js : Ojs.t -> t =
              fun (x5064 : Ojs.t) -> parent_of_js T.t_of_js x5064
            and t_to_js : t -> Ojs.t =
              fun (x5062 : T.t parent) -> parent_to_js T.t_to_js x5062
            let (create : t -> T.t) =
              fun (x5066 : t) -> T.t_of_js (Ojs.new_obj (t_to_js x5066) [||])
          end
      end
    module AnonymousInterface39 =
      struct
        type ('AX, 'R) t = Ojs.t
        let rec t_of_js :
          'AX 'R . (Ojs.t -> 'AX) -> (Ojs.t -> 'R) -> Ojs.t -> ('AX, 'R) t =
          fun (type __AX) ->
            fun (type __R) ->
              fun (__AX_of_js : Ojs.t -> __AX) ->
                fun (__R_of_js : Ojs.t -> __R) ->
                  fun (x5068 : Ojs.t) -> x5068
        and t_to_js :
          'AX 'R . ('AX -> Ojs.t) -> ('R -> Ojs.t) -> ('AX, 'R) t -> Ojs.t =
          fun (type __AX) ->
            fun (type __R) ->
              fun (__AX_to_js : __AX -> Ojs.t) ->
                fun (__R_to_js : __R -> Ojs.t) ->
                  fun (x5067 : Ojs.t) -> x5067
        let (create : ('AX, 'R) t -> args:'AX list -> 'R) =
          fun (x5072 : ('AX, 'R) t) ->
            fun ~args:(x5069 : 'AX list) ->
              Obj.magic
                (Ojs.new_obj_arr (t_to_js Obj.magic Obj.magic x5072)
                   (let x5070 =
                      Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                        [||] in
                    List.iter
                      (fun (x5071 : 'AX) ->
                         ignore (Ojs.call x5070 "push" [|(Obj.magic x5071)|]))
                      x5069;
                    x5070))
        module Make(AX:Ojs.T)(R:Ojs.T) =
          struct
            type ('AX, 'R) parent = ('AX, 'R) t
            let rec parent_of_js :
              'AX 'R .
                (Ojs.t -> 'AX) -> (Ojs.t -> 'R) -> Ojs.t -> ('AX, 'R) parent
              =
              fun (type __AX) ->
                fun (type __R) ->
                  fun (__AX_of_js : Ojs.t -> __AX) ->
                    fun (__R_of_js : Ojs.t -> __R) ->
                      fun (x5078 : Ojs.t) ->
                        t_of_js __AX_of_js __R_of_js x5078
            and parent_to_js :
              'AX 'R .
                ('AX -> Ojs.t) -> ('R -> Ojs.t) -> ('AX, 'R) parent -> Ojs.t
              =
              fun (type __AX) ->
                fun (type __R) ->
                  fun (__AX_to_js : __AX -> Ojs.t) ->
                    fun (__R_to_js : __R -> Ojs.t) ->
                      fun (x5075 : (__AX, __R) t) ->
                        t_to_js __AX_to_js __R_to_js x5075
            type t = (AX.t, R.t) parent
            let rec t_of_js : Ojs.t -> t =
              fun (x5084 : Ojs.t) -> parent_of_js AX.t_of_js R.t_of_js x5084
            and t_to_js : t -> Ojs.t =
              fun (x5081 : (AX.t, R.t) parent) ->
                parent_to_js AX.t_to_js R.t_to_js x5081
            let (create : t -> args:AX.t list -> R.t) =
              fun (x5090 : t) ->
                fun ~args:(x5087 : AX.t list) ->
                  R.t_of_js
                    (Ojs.new_obj_arr (t_to_js x5090)
                       (let x5088 =
                          Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                            [||] in
                        List.iter
                          (fun (x5089 : AX.t) ->
                             ignore
                               (Ojs.call x5088 "push" [|(AX.t_to_js x5089)|]))
                          x5087;
                        x5088))
          end
      end
    module AnonymousInterface36 =
      struct
        type ('A, 'T) t = Ojs.t
        let rec t_of_js :
          'A 'T . (Ojs.t -> 'A) -> (Ojs.t -> 'T) -> Ojs.t -> ('A, 'T) t =
          fun (type __A) ->
            fun (type __T) ->
              fun (__A_of_js : Ojs.t -> __A) ->
                fun (__T_of_js : Ojs.t -> __T) ->
                  fun (x5092 : Ojs.t) -> x5092
        and t_to_js :
          'A 'T . ('A -> Ojs.t) -> ('T -> Ojs.t) -> ('A, 'T) t -> Ojs.t =
          fun (type __A) ->
            fun (type __T) ->
              fun (__A_to_js : __A -> Ojs.t) ->
                fun (__T_to_js : __T -> Ojs.t) ->
                  fun (x5091 : Ojs.t) -> x5091
        let (create : ('A, 'T) t -> args:any list -> 'T) =
          fun (x5096 : ('A, 'T) t) ->
            fun ~args:(x5093 : any list) ->
              Obj.magic
                (Ojs.new_obj_arr (t_to_js Obj.magic Obj.magic x5096)
                   (let x5094 =
                      Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                        [||] in
                    List.iter
                      (fun (x5095 : any) ->
                         ignore (Ojs.call x5094 "push" [|(any_to_js x5095)|]))
                      x5093;
                    x5094))
        module Make(A:Ojs.T)(T:Ojs.T) =
          struct
            type ('A, 'T) parent = ('A, 'T) t
            let rec parent_of_js :
              'A 'T .
                (Ojs.t -> 'A) -> (Ojs.t -> 'T) -> Ojs.t -> ('A, 'T) parent
              =
              fun (type __A) ->
                fun (type __T) ->
                  fun (__A_of_js : Ojs.t -> __A) ->
                    fun (__T_of_js : Ojs.t -> __T) ->
                      fun (x5102 : Ojs.t) ->
                        t_of_js __A_of_js __T_of_js x5102
            and parent_to_js :
              'A 'T .
                ('A -> Ojs.t) -> ('T -> Ojs.t) -> ('A, 'T) parent -> Ojs.t
              =
              fun (type __A) ->
                fun (type __T) ->
                  fun (__A_to_js : __A -> Ojs.t) ->
                    fun (__T_to_js : __T -> Ojs.t) ->
                      fun (x5099 : (__A, __T) t) ->
                        t_to_js __A_to_js __T_to_js x5099
            type t = (A.t, T.t) parent
            let rec t_of_js : Ojs.t -> t =
              fun (x5108 : Ojs.t) -> parent_of_js A.t_of_js T.t_of_js x5108
            and t_to_js : t -> Ojs.t =
              fun (x5105 : (A.t, T.t) parent) ->
                parent_to_js A.t_to_js T.t_to_js x5105
            let (create : t -> args:any list -> T.t) =
              fun (x5114 : t) ->
                fun ~args:(x5111 : any list) ->
                  T.t_of_js
                    (Ojs.new_obj_arr (t_to_js x5114)
                       (let x5112 =
                          Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                            [||] in
                        List.iter
                          (fun (x5113 : any) ->
                             ignore
                               (Ojs.call x5112 "push" [|(any_to_js x5113)|]))
                          x5111;
                        x5112))
          end
      end
    module AnonymousInterface33 =
      struct
        type ('A, 'R) t = Ojs.t
        let rec t_of_js :
          'A 'R . (Ojs.t -> 'A) -> (Ojs.t -> 'R) -> Ojs.t -> ('A, 'R) t =
          fun (type __A) ->
            fun (type __R) ->
              fun (__A_of_js : Ojs.t -> __A) ->
                fun (__R_of_js : Ojs.t -> __R) ->
                  fun (x5116 : Ojs.t) -> x5116
        and t_to_js :
          'A 'R . ('A -> Ojs.t) -> ('R -> Ojs.t) -> ('A, 'R) t -> Ojs.t =
          fun (type __A) ->
            fun (type __R) ->
              fun (__A_to_js : __A -> Ojs.t) ->
                fun (__R_to_js : __R -> Ojs.t) ->
                  fun (x5115 : Ojs.t) -> x5115
        let (create : ('A, 'R) t -> args:any list -> 'R) =
          fun (x5120 : ('A, 'R) t) ->
            fun ~args:(x5117 : any list) ->
              Obj.magic
                (Ojs.new_obj_arr (t_to_js Obj.magic Obj.magic x5120)
                   (let x5118 =
                      Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                        [||] in
                    List.iter
                      (fun (x5119 : any) ->
                         ignore (Ojs.call x5118 "push" [|(any_to_js x5119)|]))
                      x5117;
                    x5118))
        module Make(A:Ojs.T)(R:Ojs.T) =
          struct
            type ('A, 'R) parent = ('A, 'R) t
            let rec parent_of_js :
              'A 'R .
                (Ojs.t -> 'A) -> (Ojs.t -> 'R) -> Ojs.t -> ('A, 'R) parent
              =
              fun (type __A) ->
                fun (type __R) ->
                  fun (__A_of_js : Ojs.t -> __A) ->
                    fun (__R_of_js : Ojs.t -> __R) ->
                      fun (x5126 : Ojs.t) ->
                        t_of_js __A_of_js __R_of_js x5126
            and parent_to_js :
              'A 'R .
                ('A -> Ojs.t) -> ('R -> Ojs.t) -> ('A, 'R) parent -> Ojs.t
              =
              fun (type __A) ->
                fun (type __R) ->
                  fun (__A_to_js : __A -> Ojs.t) ->
                    fun (__R_to_js : __R -> Ojs.t) ->
                      fun (x5123 : (__A, __R) t) ->
                        t_to_js __A_to_js __R_to_js x5123
            type t = (A.t, R.t) parent
            let rec t_of_js : Ojs.t -> t =
              fun (x5132 : Ojs.t) -> parent_of_js A.t_of_js R.t_of_js x5132
            and t_to_js : t -> Ojs.t =
              fun (x5129 : (A.t, R.t) parent) ->
                parent_to_js A.t_to_js R.t_to_js x5129
            let (create : t -> args:any list -> R.t) =
              fun (x5138 : t) ->
                fun ~args:(x5135 : any list) ->
                  R.t_of_js
                    (Ojs.new_obj_arr (t_to_js x5138)
                       (let x5136 =
                          Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                            [||] in
                        List.iter
                          (fun (x5137 : any) ->
                             ignore
                               (Ojs.call x5136 "push" [|(any_to_js x5137)|]))
                          x5135;
                        x5136))
          end
      end
    module AnonymousInterface31 =
      struct
        type ('A, 'A0, 'R) t = Ojs.t
        let rec t_of_js :
          'A 'A0 'R .
            (Ojs.t -> 'A) ->
              (Ojs.t -> 'A0) -> (Ojs.t -> 'R) -> Ojs.t -> ('A, 'A0, 'R) t
          =
          fun (type __A) ->
            fun (type __A0) ->
              fun (type __R) ->
                fun (__A_of_js : Ojs.t -> __A) ->
                  fun (__A0_of_js : Ojs.t -> __A0) ->
                    fun (__R_of_js : Ojs.t -> __R) ->
                      fun (x5140 : Ojs.t) -> x5140
        and t_to_js :
          'A 'A0 'R .
            ('A -> Ojs.t) ->
              ('A0 -> Ojs.t) -> ('R -> Ojs.t) -> ('A, 'A0, 'R) t -> Ojs.t
          =
          fun (type __A) ->
            fun (type __A0) ->
              fun (type __R) ->
                fun (__A_to_js : __A -> Ojs.t) ->
                  fun (__A0_to_js : __A0 -> Ojs.t) ->
                    fun (__R_to_js : __R -> Ojs.t) ->
                      fun (x5139 : Ojs.t) -> x5139
        let (create : ('A, 'A0, 'R) t -> arg0:'A0 -> args:any list -> 'R) =
          fun (x5145 : ('A, 'A0, 'R) t) ->
            fun ~arg0:(x5141 : 'A0) ->
              fun ~args:(x5142 : any list) ->
                Obj.magic
                  (Ojs.new_obj_arr
                     (t_to_js Obj.magic Obj.magic Obj.magic x5145)
                     (let x5143 =
                        Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                          [||] in
                      ignore (Ojs.call x5143 "push" [|(Obj.magic x5141)|]);
                      List.iter
                        (fun (x5144 : any) ->
                           ignore
                             (Ojs.call x5143 "push" [|(any_to_js x5144)|]))
                        x5142;
                      x5143))
        module Make(A:Ojs.T)(A0:Ojs.T)(R:Ojs.T) =
          struct
            type ('A, 'A0, 'R) parent = ('A, 'A0, 'R) t
            let rec parent_of_js :
              'A 'A0 'R .
                (Ojs.t -> 'A) ->
                  (Ojs.t -> 'A0) ->
                    (Ojs.t -> 'R) -> Ojs.t -> ('A, 'A0, 'R) parent
              =
              fun (type __A) ->
                fun (type __A0) ->
                  fun (type __R) ->
                    fun (__A_of_js : Ojs.t -> __A) ->
                      fun (__A0_of_js : Ojs.t -> __A0) ->
                        fun (__R_of_js : Ojs.t -> __R) ->
                          fun (x5153 : Ojs.t) ->
                            t_of_js __A_of_js __A0_of_js __R_of_js x5153
            and parent_to_js :
              'A 'A0 'R .
                ('A -> Ojs.t) ->
                  ('A0 -> Ojs.t) ->
                    ('R -> Ojs.t) -> ('A, 'A0, 'R) parent -> Ojs.t
              =
              fun (type __A) ->
                fun (type __A0) ->
                  fun (type __R) ->
                    fun (__A_to_js : __A -> Ojs.t) ->
                      fun (__A0_to_js : __A0 -> Ojs.t) ->
                        fun (__R_to_js : __R -> Ojs.t) ->
                          fun (x5149 : (__A, __A0, __R) t) ->
                            t_to_js __A_to_js __A0_to_js __R_to_js x5149
            type t = (A.t, A0.t, R.t) parent
            let rec t_of_js : Ojs.t -> t =
              fun (x5161 : Ojs.t) ->
                parent_of_js A.t_of_js A0.t_of_js R.t_of_js x5161
            and t_to_js : t -> Ojs.t =
              fun (x5157 : (A.t, A0.t, R.t) parent) ->
                parent_to_js A.t_to_js A0.t_to_js R.t_to_js x5157
            let (create : t -> arg0:A0.t -> args:any list -> R.t) =
              fun (x5169 : t) ->
                fun ~arg0:(x5165 : A0.t) ->
                  fun ~args:(x5166 : any list) ->
                    R.t_of_js
                      (Ojs.new_obj_arr (t_to_js x5169)
                         (let x5167 =
                            Ojs.new_obj
                              (Ojs.get_prop_ascii Ojs.global "Array") 
                              [||] in
                          ignore
                            (Ojs.call x5167 "push" [|(A0.t_to_js x5165)|]);
                          List.iter
                            (fun (x5168 : any) ->
                               ignore
                                 (Ojs.call x5167 "push" [|(any_to_js x5168)|]))
                            x5166;
                          x5167))
          end
      end
    module AnonymousInterface29 =
      struct
        type ('A, 'A0, 'A1, 'R) t = Ojs.t
        let rec t_of_js :
          'A 'A0 'A1 'R .
            (Ojs.t -> 'A) ->
              (Ojs.t -> 'A0) ->
                (Ojs.t -> 'A1) ->
                  (Ojs.t -> 'R) -> Ojs.t -> ('A, 'A0, 'A1, 'R) t
          =
          fun (type __A) ->
            fun (type __A0) ->
              fun (type __A1) ->
                fun (type __R) ->
                  fun (__A_of_js : Ojs.t -> __A) ->
                    fun (__A0_of_js : Ojs.t -> __A0) ->
                      fun (__A1_of_js : Ojs.t -> __A1) ->
                        fun (__R_of_js : Ojs.t -> __R) ->
                          fun (x5171 : Ojs.t) -> x5171
        and t_to_js :
          'A 'A0 'A1 'R .
            ('A -> Ojs.t) ->
              ('A0 -> Ojs.t) ->
                ('A1 -> Ojs.t) ->
                  ('R -> Ojs.t) -> ('A, 'A0, 'A1, 'R) t -> Ojs.t
          =
          fun (type __A) ->
            fun (type __A0) ->
              fun (type __A1) ->
                fun (type __R) ->
                  fun (__A_to_js : __A -> Ojs.t) ->
                    fun (__A0_to_js : __A0 -> Ojs.t) ->
                      fun (__A1_to_js : __A1 -> Ojs.t) ->
                        fun (__R_to_js : __R -> Ojs.t) ->
                          fun (x5170 : Ojs.t) -> x5170
        let (create :
          ('A, 'A0, 'A1, 'R) t -> arg0:'A0 -> arg1:'A1 -> args:any list -> 'R)
          =
          fun (x5177 : ('A, 'A0, 'A1, 'R) t) ->
            fun ~arg0:(x5172 : 'A0) ->
              fun ~arg1:(x5173 : 'A1) ->
                fun ~args:(x5174 : any list) ->
                  Obj.magic
                    (Ojs.new_obj_arr
                       (t_to_js Obj.magic Obj.magic Obj.magic Obj.magic x5177)
                       (let x5175 =
                          Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                            [||] in
                        ignore (Ojs.call x5175 "push" [|(Obj.magic x5172)|]);
                        ignore (Ojs.call x5175 "push" [|(Obj.magic x5173)|]);
                        List.iter
                          (fun (x5176 : any) ->
                             ignore
                               (Ojs.call x5175 "push" [|(any_to_js x5176)|]))
                          x5174;
                        x5175))
        module Make(A:Ojs.T)(A0:Ojs.T)(A1:Ojs.T)(R:Ojs.T) =
          struct
            type ('A, 'A0, 'A1, 'R) parent = ('A, 'A0, 'A1, 'R) t
            let rec parent_of_js :
              'A 'A0 'A1 'R .
                (Ojs.t -> 'A) ->
                  (Ojs.t -> 'A0) ->
                    (Ojs.t -> 'A1) ->
                      (Ojs.t -> 'R) -> Ojs.t -> ('A, 'A0, 'A1, 'R) parent
              =
              fun (type __A) ->
                fun (type __A0) ->
                  fun (type __A1) ->
                    fun (type __R) ->
                      fun (__A_of_js : Ojs.t -> __A) ->
                        fun (__A0_of_js : Ojs.t -> __A0) ->
                          fun (__A1_of_js : Ojs.t -> __A1) ->
                            fun (__R_of_js : Ojs.t -> __R) ->
                              fun (x5187 : Ojs.t) ->
                                t_of_js __A_of_js __A0_of_js __A1_of_js
                                  __R_of_js x5187
            and parent_to_js :
              'A 'A0 'A1 'R .
                ('A -> Ojs.t) ->
                  ('A0 -> Ojs.t) ->
                    ('A1 -> Ojs.t) ->
                      ('R -> Ojs.t) -> ('A, 'A0, 'A1, 'R) parent -> Ojs.t
              =
              fun (type __A) ->
                fun (type __A0) ->
                  fun (type __A1) ->
                    fun (type __R) ->
                      fun (__A_to_js : __A -> Ojs.t) ->
                        fun (__A0_to_js : __A0 -> Ojs.t) ->
                          fun (__A1_to_js : __A1 -> Ojs.t) ->
                            fun (__R_to_js : __R -> Ojs.t) ->
                              fun (x5182 : (__A, __A0, __A1, __R) t) ->
                                t_to_js __A_to_js __A0_to_js __A1_to_js
                                  __R_to_js x5182
            type t = (A.t, A0.t, A1.t, R.t) parent
            let rec t_of_js : Ojs.t -> t =
              fun (x5197 : Ojs.t) ->
                parent_of_js A.t_of_js A0.t_of_js A1.t_of_js R.t_of_js x5197
            and t_to_js : t -> Ojs.t =
              fun (x5192 : (A.t, A0.t, A1.t, R.t) parent) ->
                parent_to_js A.t_to_js A0.t_to_js A1.t_to_js R.t_to_js x5192
            let (create :
              t -> arg0:A0.t -> arg1:A1.t -> args:any list -> R.t) =
              fun (x5207 : t) ->
                fun ~arg0:(x5202 : A0.t) ->
                  fun ~arg1:(x5203 : A1.t) ->
                    fun ~args:(x5204 : any list) ->
                      R.t_of_js
                        (Ojs.new_obj_arr (t_to_js x5207)
                           (let x5205 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x5205 "push" [|(A0.t_to_js x5202)|]);
                            ignore
                              (Ojs.call x5205 "push" [|(A1.t_to_js x5203)|]);
                            List.iter
                              (fun (x5206 : any) ->
                                 ignore
                                   (Ojs.call x5205 "push"
                                      [|(any_to_js x5206)|])) x5204;
                            x5205))
          end
      end
    module AnonymousInterface27 =
      struct
        type ('A, 'A0, 'A1, 'A2, 'R) t = Ojs.t
        let rec t_of_js :
          'A 'A0 'A1 'A2 'R .
            (Ojs.t -> 'A) ->
              (Ojs.t -> 'A0) ->
                (Ojs.t -> 'A1) ->
                  (Ojs.t -> 'A2) ->
                    (Ojs.t -> 'R) -> Ojs.t -> ('A, 'A0, 'A1, 'A2, 'R) t
          =
          fun (type __A) ->
            fun (type __A0) ->
              fun (type __A1) ->
                fun (type __A2) ->
                  fun (type __R) ->
                    fun (__A_of_js : Ojs.t -> __A) ->
                      fun (__A0_of_js : Ojs.t -> __A0) ->
                        fun (__A1_of_js : Ojs.t -> __A1) ->
                          fun (__A2_of_js : Ojs.t -> __A2) ->
                            fun (__R_of_js : Ojs.t -> __R) ->
                              fun (x5209 : Ojs.t) -> x5209
        and t_to_js :
          'A 'A0 'A1 'A2 'R .
            ('A -> Ojs.t) ->
              ('A0 -> Ojs.t) ->
                ('A1 -> Ojs.t) ->
                  ('A2 -> Ojs.t) ->
                    ('R -> Ojs.t) -> ('A, 'A0, 'A1, 'A2, 'R) t -> Ojs.t
          =
          fun (type __A) ->
            fun (type __A0) ->
              fun (type __A1) ->
                fun (type __A2) ->
                  fun (type __R) ->
                    fun (__A_to_js : __A -> Ojs.t) ->
                      fun (__A0_to_js : __A0 -> Ojs.t) ->
                        fun (__A1_to_js : __A1 -> Ojs.t) ->
                          fun (__A2_to_js : __A2 -> Ojs.t) ->
                            fun (__R_to_js : __R -> Ojs.t) ->
                              fun (x5208 : Ojs.t) -> x5208
        let (create :
          ('A, 'A0, 'A1, 'A2, 'R) t ->
            arg0:'A0 -> arg1:'A1 -> arg2:'A2 -> args:any list -> 'R)
          =
          fun (x5216 : ('A, 'A0, 'A1, 'A2, 'R) t) ->
            fun ~arg0:(x5210 : 'A0) ->
              fun ~arg1:(x5211 : 'A1) ->
                fun ~arg2:(x5212 : 'A2) ->
                  fun ~args:(x5213 : any list) ->
                    Obj.magic
                      (Ojs.new_obj_arr
                         (t_to_js Obj.magic Obj.magic Obj.magic Obj.magic
                            Obj.magic x5216)
                         (let x5214 =
                            Ojs.new_obj
                              (Ojs.get_prop_ascii Ojs.global "Array") 
                              [||] in
                          ignore
                            (Ojs.call x5214 "push" [|(Obj.magic x5210)|]);
                          ignore
                            (Ojs.call x5214 "push" [|(Obj.magic x5211)|]);
                          ignore
                            (Ojs.call x5214 "push" [|(Obj.magic x5212)|]);
                          List.iter
                            (fun (x5215 : any) ->
                               ignore
                                 (Ojs.call x5214 "push" [|(any_to_js x5215)|]))
                            x5213;
                          x5214))
        module Make(A:Ojs.T)(A0:Ojs.T)(A1:Ojs.T)(A2:Ojs.T)(R:Ojs.T) =
          struct
            type ('A, 'A0, 'A1, 'A2, 'R) parent = ('A, 'A0, 'A1, 'A2, 'R) t
            let rec parent_of_js :
              'A 'A0 'A1 'A2 'R .
                (Ojs.t -> 'A) ->
                  (Ojs.t -> 'A0) ->
                    (Ojs.t -> 'A1) ->
                      (Ojs.t -> 'A2) ->
                        (Ojs.t -> 'R) ->
                          Ojs.t -> ('A, 'A0, 'A1, 'A2, 'R) parent
              =
              fun (type __A) ->
                fun (type __A0) ->
                  fun (type __A1) ->
                    fun (type __A2) ->
                      fun (type __R) ->
                        fun (__A_of_js : Ojs.t -> __A) ->
                          fun (__A0_of_js : Ojs.t -> __A0) ->
                            fun (__A1_of_js : Ojs.t -> __A1) ->
                              fun (__A2_of_js : Ojs.t -> __A2) ->
                                fun (__R_of_js : Ojs.t -> __R) ->
                                  fun (x5228 : Ojs.t) ->
                                    t_of_js __A_of_js __A0_of_js __A1_of_js
                                      __A2_of_js __R_of_js x5228
            and parent_to_js :
              'A 'A0 'A1 'A2 'R .
                ('A -> Ojs.t) ->
                  ('A0 -> Ojs.t) ->
                    ('A1 -> Ojs.t) ->
                      ('A2 -> Ojs.t) ->
                        ('R -> Ojs.t) ->
                          ('A, 'A0, 'A1, 'A2, 'R) parent -> Ojs.t
              =
              fun (type __A) ->
                fun (type __A0) ->
                  fun (type __A1) ->
                    fun (type __A2) ->
                      fun (type __R) ->
                        fun (__A_to_js : __A -> Ojs.t) ->
                          fun (__A0_to_js : __A0 -> Ojs.t) ->
                            fun (__A1_to_js : __A1 -> Ojs.t) ->
                              fun (__A2_to_js : __A2 -> Ojs.t) ->
                                fun (__R_to_js : __R -> Ojs.t) ->
                                  fun
                                    (x5222 : (__A, __A0, __A1, __A2, __R) t)
                                    ->
                                    t_to_js __A_to_js __A0_to_js __A1_to_js
                                      __A2_to_js __R_to_js x5222
            type t = (A.t, A0.t, A1.t, A2.t, R.t) parent
            let rec t_of_js : Ojs.t -> t =
              fun (x5240 : Ojs.t) ->
                parent_of_js A.t_of_js A0.t_of_js A1.t_of_js A2.t_of_js
                  R.t_of_js x5240
            and t_to_js : t -> Ojs.t =
              fun (x5234 : (A.t, A0.t, A1.t, A2.t, R.t) parent) ->
                parent_to_js A.t_to_js A0.t_to_js A1.t_to_js A2.t_to_js
                  R.t_to_js x5234
            let (create :
              t ->
                arg0:A0.t -> arg1:A1.t -> arg2:A2.t -> args:any list -> R.t)
              =
              fun (x5252 : t) ->
                fun ~arg0:(x5246 : A0.t) ->
                  fun ~arg1:(x5247 : A1.t) ->
                    fun ~arg2:(x5248 : A2.t) ->
                      fun ~args:(x5249 : any list) ->
                        R.t_of_js
                          (Ojs.new_obj_arr (t_to_js x5252)
                             (let x5250 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x5250 "push" [|(A0.t_to_js x5246)|]);
                              ignore
                                (Ojs.call x5250 "push" [|(A1.t_to_js x5247)|]);
                              ignore
                                (Ojs.call x5250 "push" [|(A2.t_to_js x5248)|]);
                              List.iter
                                (fun (x5251 : any) ->
                                   ignore
                                     (Ojs.call x5250 "push"
                                        [|(any_to_js x5251)|])) x5249;
                              x5250))
          end
      end
    module AnonymousInterface25 =
      struct
        type ('A, 'A0, 'A1, 'A2, 'A3, 'R) t = Ojs.t
        let rec t_of_js :
          'A 'A0 'A1 'A2 'A3 'R .
            (Ojs.t -> 'A) ->
              (Ojs.t -> 'A0) ->
                (Ojs.t -> 'A1) ->
                  (Ojs.t -> 'A2) ->
                    (Ojs.t -> 'A3) ->
                      (Ojs.t -> 'R) ->
                        Ojs.t -> ('A, 'A0, 'A1, 'A2, 'A3, 'R) t
          =
          fun (type __A) ->
            fun (type __A0) ->
              fun (type __A1) ->
                fun (type __A2) ->
                  fun (type __A3) ->
                    fun (type __R) ->
                      fun (__A_of_js : Ojs.t -> __A) ->
                        fun (__A0_of_js : Ojs.t -> __A0) ->
                          fun (__A1_of_js : Ojs.t -> __A1) ->
                            fun (__A2_of_js : Ojs.t -> __A2) ->
                              fun (__A3_of_js : Ojs.t -> __A3) ->
                                fun (__R_of_js : Ojs.t -> __R) ->
                                  fun (x5254 : Ojs.t) -> x5254
        and t_to_js :
          'A 'A0 'A1 'A2 'A3 'R .
            ('A -> Ojs.t) ->
              ('A0 -> Ojs.t) ->
                ('A1 -> Ojs.t) ->
                  ('A2 -> Ojs.t) ->
                    ('A3 -> Ojs.t) ->
                      ('R -> Ojs.t) ->
                        ('A, 'A0, 'A1, 'A2, 'A3, 'R) t -> Ojs.t
          =
          fun (type __A) ->
            fun (type __A0) ->
              fun (type __A1) ->
                fun (type __A2) ->
                  fun (type __A3) ->
                    fun (type __R) ->
                      fun (__A_to_js : __A -> Ojs.t) ->
                        fun (__A0_to_js : __A0 -> Ojs.t) ->
                          fun (__A1_to_js : __A1 -> Ojs.t) ->
                            fun (__A2_to_js : __A2 -> Ojs.t) ->
                              fun (__A3_to_js : __A3 -> Ojs.t) ->
                                fun (__R_to_js : __R -> Ojs.t) ->
                                  fun (x5253 : Ojs.t) -> x5253
        let (create :
          ('A, 'A0, 'A1, 'A2, 'A3, 'R) t ->
            arg0:'A0 ->
              arg1:'A1 -> arg2:'A2 -> arg3:'A3 -> args:any list -> 'R)
          =
          fun (x5262 : ('A, 'A0, 'A1, 'A2, 'A3, 'R) t) ->
            fun ~arg0:(x5255 : 'A0) ->
              fun ~arg1:(x5256 : 'A1) ->
                fun ~arg2:(x5257 : 'A2) ->
                  fun ~arg3:(x5258 : 'A3) ->
                    fun ~args:(x5259 : any list) ->
                      Obj.magic
                        (Ojs.new_obj_arr
                           (t_to_js Obj.magic Obj.magic Obj.magic Obj.magic
                              Obj.magic Obj.magic x5262)
                           (let x5260 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x5260 "push" [|(Obj.magic x5255)|]);
                            ignore
                              (Ojs.call x5260 "push" [|(Obj.magic x5256)|]);
                            ignore
                              (Ojs.call x5260 "push" [|(Obj.magic x5257)|]);
                            ignore
                              (Ojs.call x5260 "push" [|(Obj.magic x5258)|]);
                            List.iter
                              (fun (x5261 : any) ->
                                 ignore
                                   (Ojs.call x5260 "push"
                                      [|(any_to_js x5261)|])) x5259;
                            x5260))
        module Make(A:Ojs.T)(A0:Ojs.T)(A1:Ojs.T)(A2:Ojs.T)(A3:Ojs.T)(R:Ojs.T) =
          struct
            type ('A, 'A0, 'A1, 'A2, 'A3, 'R) parent =
              ('A, 'A0, 'A1, 'A2, 'A3, 'R) t
            let rec parent_of_js :
              'A 'A0 'A1 'A2 'A3 'R .
                (Ojs.t -> 'A) ->
                  (Ojs.t -> 'A0) ->
                    (Ojs.t -> 'A1) ->
                      (Ojs.t -> 'A2) ->
                        (Ojs.t -> 'A3) ->
                          (Ojs.t -> 'R) ->
                            Ojs.t -> ('A, 'A0, 'A1, 'A2, 'A3, 'R) parent
              =
              fun (type __A) ->
                fun (type __A0) ->
                  fun (type __A1) ->
                    fun (type __A2) ->
                      fun (type __A3) ->
                        fun (type __R) ->
                          fun (__A_of_js : Ojs.t -> __A) ->
                            fun (__A0_of_js : Ojs.t -> __A0) ->
                              fun (__A1_of_js : Ojs.t -> __A1) ->
                                fun (__A2_of_js : Ojs.t -> __A2) ->
                                  fun (__A3_of_js : Ojs.t -> __A3) ->
                                    fun (__R_of_js : Ojs.t -> __R) ->
                                      fun (x5276 : Ojs.t) ->
                                        t_of_js __A_of_js __A0_of_js
                                          __A1_of_js __A2_of_js __A3_of_js
                                          __R_of_js x5276
            and parent_to_js :
              'A 'A0 'A1 'A2 'A3 'R .
                ('A -> Ojs.t) ->
                  ('A0 -> Ojs.t) ->
                    ('A1 -> Ojs.t) ->
                      ('A2 -> Ojs.t) ->
                        ('A3 -> Ojs.t) ->
                          ('R -> Ojs.t) ->
                            ('A, 'A0, 'A1, 'A2, 'A3, 'R) parent -> Ojs.t
              =
              fun (type __A) ->
                fun (type __A0) ->
                  fun (type __A1) ->
                    fun (type __A2) ->
                      fun (type __A3) ->
                        fun (type __R) ->
                          fun (__A_to_js : __A -> Ojs.t) ->
                            fun (__A0_to_js : __A0 -> Ojs.t) ->
                              fun (__A1_to_js : __A1 -> Ojs.t) ->
                                fun (__A2_to_js : __A2 -> Ojs.t) ->
                                  fun (__A3_to_js : __A3 -> Ojs.t) ->
                                    fun (__R_to_js : __R -> Ojs.t) ->
                                      fun
                                        (x5269 :
                                          (__A, __A0, __A1, __A2, __A3, 
                                            __R) t)
                                        ->
                                        t_to_js __A_to_js __A0_to_js
                                          __A1_to_js __A2_to_js __A3_to_js
                                          __R_to_js x5269
            type t = (A.t, A0.t, A1.t, A2.t, A3.t, R.t) parent
            let rec t_of_js : Ojs.t -> t =
              fun (x5290 : Ojs.t) ->
                parent_of_js A.t_of_js A0.t_of_js A1.t_of_js A2.t_of_js
                  A3.t_of_js R.t_of_js x5290
            and t_to_js : t -> Ojs.t =
              fun (x5283 : (A.t, A0.t, A1.t, A2.t, A3.t, R.t) parent) ->
                parent_to_js A.t_to_js A0.t_to_js A1.t_to_js A2.t_to_js
                  A3.t_to_js R.t_to_js x5283
            let (create :
              t ->
                arg0:A0.t ->
                  arg1:A1.t -> arg2:A2.t -> arg3:A3.t -> args:any list -> R.t)
              =
              fun (x5304 : t) ->
                fun ~arg0:(x5297 : A0.t) ->
                  fun ~arg1:(x5298 : A1.t) ->
                    fun ~arg2:(x5299 : A2.t) ->
                      fun ~arg3:(x5300 : A3.t) ->
                        fun ~args:(x5301 : any list) ->
                          R.t_of_js
                            (Ojs.new_obj_arr (t_to_js x5304)
                               (let x5302 =
                                  Ojs.new_obj
                                    (Ojs.get_prop_ascii Ojs.global "Array")
                                    [||] in
                                ignore
                                  (Ojs.call x5302 "push"
                                     [|(A0.t_to_js x5297)|]);
                                ignore
                                  (Ojs.call x5302 "push"
                                     [|(A1.t_to_js x5298)|]);
                                ignore
                                  (Ojs.call x5302 "push"
                                     [|(A2.t_to_js x5299)|]);
                                ignore
                                  (Ojs.call x5302 "push"
                                     [|(A3.t_to_js x5300)|]);
                                List.iter
                                  (fun (x5303 : any) ->
                                     ignore
                                       (Ojs.call x5302 "push"
                                          [|(any_to_js x5303)|])) x5301;
                                x5302))
          end
      end
    type t = [ `Function  | `Function  | `NewableFunction ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x5306 : Ojs.t) -> t_of_js x5306
    and t_0_to_js : t_0 -> Ojs.t = fun (x5305 : t) -> t_to_js x5305
    type tags = [ `Function  | `Function  | `NewableFunction ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `NewableFunction ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x5309 : Ojs.t) -> intf_of_js __tags_of_js x5309
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x5307 : __tags intf) -> intf_to_js __tags_to_js x5307
    let (apply_ :
      'tags this -> this:'T AnonymousInterface43.t -> thisArg:'T -> unit) =
      fun (x5314 : 'tags this) ->
        fun ~this:(x5311 : 'T AnonymousInterface43.t) ->
          fun ~thisArg:(x5313 : 'T) ->
            ignore
              (Ojs.call (this_to_js Obj.magic x5314) "apply"
                 [|(AnonymousInterface43.t_to_js Obj.magic x5311);(Obj.magic
                                                                    x5313)|])
    let (apply_' :
      'tags this ->
        this:('A, 'T) AnonymousInterface36.t -> thisArg:'T -> args:'A -> unit)
      =
      fun (x5321 : 'tags this) ->
        fun ~this:(x5316 : ('A, 'T) AnonymousInterface36.t) ->
          fun ~thisArg:(x5319 : 'T) ->
            fun ~args:(x5320 : 'A) ->
              ignore
                (Ojs.call (this_to_js Obj.magic x5321) "apply"
                   [|(AnonymousInterface36.t_to_js Obj.magic Obj.magic x5316);(
                     Obj.magic x5319);(Obj.magic x5320)|])
    let (call :
      'tags this ->
        this:('A, 'T) AnonymousInterface36.t ->
          thisArg:'T -> args:any list -> unit)
      =
      fun (x5330 : 'tags this) ->
        fun ~this:(x5323 : ('A, 'T) AnonymousInterface36.t) ->
          fun ~thisArg:(x5324 : 'T) ->
            fun ~args:(x5325 : any list) ->
              ignore
                (let x5332 = this_to_js Obj.magic x5330 in
                 Ojs.call (Ojs.get_prop_ascii x5332 "call") "apply"
                   [|x5332;((let x5326 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x5326 "push"
                                  [|(AnonymousInterface36.t_to_js Obj.magic
                                       Obj.magic x5323)|]);
                             ignore
                               (Ojs.call x5326 "push" [|(Obj.magic x5324)|]);
                             List.iter
                               (fun (x5327 : any) ->
                                  ignore
                                    (Ojs.call x5326 "push"
                                       [|(any_to_js x5327)|])) x5325;
                             x5326))|])
    let (bind : 'tags this -> this:'T -> thisArg:any -> 'T) =
      fun (x5335 : 'tags this) ->
        fun ~this:(x5333 : 'T) ->
          fun ~thisArg:(x5334 : any) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic x5335) "bind"
                 [|(Obj.magic x5333);(any_to_js x5334)|])
    let (bind' :
      'tags this ->
        this:('A, 'A0, 'R) AnonymousInterface31.t ->
          thisArg:any -> arg0:'A0 -> ('A, 'R) AnonymousInterface33.t)
      =
      fun (x5343 : 'tags this) ->
        fun ~this:(x5337 : ('A, 'A0, 'R) AnonymousInterface31.t) ->
          fun ~thisArg:(x5341 : any) ->
            fun ~arg0:(x5342 : 'A0) ->
              AnonymousInterface33.t_of_js Obj.magic Obj.magic
                (Ojs.call (this_to_js Obj.magic x5343) "bind"
                   [|(AnonymousInterface31.t_to_js Obj.magic Obj.magic
                        Obj.magic x5337);(any_to_js x5341);(Obj.magic x5342)|])
    let (bind'' :
      'tags this ->
        this:('A, 'A0, 'A1, 'R) AnonymousInterface29.t ->
          thisArg:any ->
            arg0:'A0 -> arg1:'A1 -> ('A, 'R) AnonymousInterface33.t)
      =
      fun (x5355 : 'tags this) ->
        fun ~this:(x5347 : ('A, 'A0, 'A1, 'R) AnonymousInterface29.t) ->
          fun ~thisArg:(x5352 : any) ->
            fun ~arg0:(x5353 : 'A0) ->
              fun ~arg1:(x5354 : 'A1) ->
                AnonymousInterface33.t_of_js Obj.magic Obj.magic
                  (Ojs.call (this_to_js Obj.magic x5355) "bind"
                     [|(AnonymousInterface29.t_to_js Obj.magic Obj.magic
                          Obj.magic Obj.magic x5347);(any_to_js x5352);(
                       Obj.magic x5353);(Obj.magic x5354)|])
    let (bind''' :
      'tags this ->
        this:('A, 'A0, 'A1, 'A2, 'R) AnonymousInterface27.t ->
          thisArg:any ->
            arg0:'A0 ->
              arg1:'A1 -> arg2:'A2 -> ('A, 'R) AnonymousInterface33.t)
      =
      fun (x5369 : 'tags this) ->
        fun ~this:(x5359 : ('A, 'A0, 'A1, 'A2, 'R) AnonymousInterface27.t) ->
          fun ~thisArg:(x5365 : any) ->
            fun ~arg0:(x5366 : 'A0) ->
              fun ~arg1:(x5367 : 'A1) ->
                fun ~arg2:(x5368 : 'A2) ->
                  AnonymousInterface33.t_of_js Obj.magic Obj.magic
                    (Ojs.call (this_to_js Obj.magic x5369) "bind"
                       [|(AnonymousInterface27.t_to_js Obj.magic Obj.magic
                            Obj.magic Obj.magic Obj.magic x5359);(any_to_js
                                                                    x5365);(
                         Obj.magic x5366);(Obj.magic x5367);(Obj.magic x5368)|])
    let (bind'''' :
      'tags this ->
        this:('A, 'A0, 'A1, 'A2, 'A3, 'R) AnonymousInterface25.t ->
          thisArg:any ->
            arg0:'A0 ->
              arg1:'A1 ->
                arg2:'A2 -> arg3:'A3 -> ('A, 'R) AnonymousInterface33.t)
      =
      fun (x5385 : 'tags this) ->
        fun
          ~this:(x5373 : ('A, 'A0, 'A1, 'A2, 'A3, 'R) AnonymousInterface25.t)
          ->
          fun ~thisArg:(x5380 : any) ->
            fun ~arg0:(x5381 : 'A0) ->
              fun ~arg1:(x5382 : 'A1) ->
                fun ~arg2:(x5383 : 'A2) ->
                  fun ~arg3:(x5384 : 'A3) ->
                    AnonymousInterface33.t_of_js Obj.magic Obj.magic
                      (Ojs.call (this_to_js Obj.magic x5385) "bind"
                         [|(AnonymousInterface25.t_to_js Obj.magic Obj.magic
                              Obj.magic Obj.magic Obj.magic Obj.magic x5373);(
                           any_to_js x5380);(Obj.magic x5381);(Obj.magic
                                                                 x5382);(
                           Obj.magic x5383);(Obj.magic x5384)|])
    let (bind''''' :
      'tags this ->
        this:('AX, 'R) AnonymousInterface39.t ->
          thisArg:any -> args:'AX list -> ('AX, 'R) AnonymousInterface39.t)
      =
      fun (x5396 : 'tags this) ->
        fun ~this:(x5389 : ('AX, 'R) AnonymousInterface39.t) ->
          fun ~thisArg:(x5390 : any) ->
            fun ~args:(x5391 : 'AX list) ->
              AnonymousInterface39.t_of_js Obj.magic Obj.magic
                (let x5398 = this_to_js Obj.magic x5396 in
                 Ojs.call (Ojs.get_prop_ascii x5398 "bind") "apply"
                   [|x5398;((let x5392 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x5392 "push"
                                  [|(AnonymousInterface39.t_to_js Obj.magic
                                       Obj.magic x5389)|]);
                             ignore
                               (Ojs.call x5392 "push" [|(any_to_js x5390)|]);
                             List.iter
                               (fun (x5393 : 'AX) ->
                                  ignore
                                    (Ojs.call x5392 "push"
                                       [|(Obj.magic x5393)|])) x5391;
                             x5392))|])
    let cast_from = Obj.magic
  end
module TypedPropertyDescriptor =
  struct
    type 'T t = [ `TypedPropertyDescriptor of 'T ] intf
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun _T -> Obj.magic
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun _T -> Obj.magic
    type 'T t_1 = 'T t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 =
      fun (type __T) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x5403 : Ojs.t) -> t_of_js __T_of_js x5403
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t =
      fun (type __T) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x5401 : __T t) -> t_to_js __T_to_js x5401
    type 'T tags = [ `TypedPropertyDescriptor of 'T ]
    type 'T tags_1 = 'T tags
    type ('tags, 'T) this =
      'tags intf constraint 'tags = [> `TypedPropertyDescriptor of 'T ]
    let rec this_of_js :
      'tags 'T .
        (Ojs.t -> 'tags) -> (Ojs.t -> 'T) -> Ojs.t -> ('tags, 'T) this
      =
      fun (type __tags) ->
        fun (type __T) ->
          fun (__tags_of_js : Ojs.t -> __tags) ->
            fun (__T_of_js : Ojs.t -> __T) ->
              fun (x5407 : Ojs.t) -> intf_of_js __tags_of_js x5407
    and this_to_js :
      'tags 'T .
        ('tags -> Ojs.t) -> ('T -> Ojs.t) -> ('tags, 'T) this -> Ojs.t
      =
      fun (type __tags) ->
        fun (type __T) ->
          fun (__tags_to_js : __tags -> Ojs.t) ->
            fun (__T_to_js : __T -> Ojs.t) ->
              fun (x5405 : __tags intf) -> intf_to_js __tags_to_js x5405
    let (get_enumerable : ('tags, 'T) this -> bool option) =
      fun (x5409 : ('tags, 'T) this) ->
        Ojs.option_of_js Ojs.bool_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic Obj.magic x5409)
             "enumerable")
    let (set_enumerable : ('tags, 'T) this -> bool -> unit) =
      fun (x5413 : ('tags, 'T) this) ->
        fun (x5414 : bool) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic Obj.magic x5413)
            "enumerable" (Ojs.bool_to_js x5414)
    let (get_configurable : ('tags, 'T) this -> bool option) =
      fun (x5417 : ('tags, 'T) this) ->
        Ojs.option_of_js Ojs.bool_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic Obj.magic x5417)
             "configurable")
    let (set_configurable : ('tags, 'T) this -> bool -> unit) =
      fun (x5421 : ('tags, 'T) this) ->
        fun (x5422 : bool) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic Obj.magic x5421)
            "configurable" (Ojs.bool_to_js x5422)
    let (get_writable : ('tags, 'T) this -> bool option) =
      fun (x5425 : ('tags, 'T) this) ->
        Ojs.option_of_js Ojs.bool_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic Obj.magic x5425)
             "writable")
    let (set_writable : ('tags, 'T) this -> bool -> unit) =
      fun (x5429 : ('tags, 'T) this) ->
        fun (x5430 : bool) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic Obj.magic x5429)
            "writable" (Ojs.bool_to_js x5430)
    let (get_value : ('tags, 'T) this -> 'T option) =
      fun (x5433 : ('tags, 'T) this) ->
        Ojs.option_of_js Obj.magic
          (Ojs.get_prop_ascii (this_to_js Obj.magic Obj.magic x5433) "value")
    let (set_value : ('tags, 'T) this -> 'T -> unit) =
      fun (x5437 : ('tags, 'T) this) ->
        fun (x5438 : 'T) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic Obj.magic x5437) "value"
            (Obj.magic x5438)
    let (get_ : ('tags, 'T) this -> 'T) =
      fun (x5441 : ('tags, 'T) this) ->
        Obj.magic
          (Ojs.call (this_to_js Obj.magic Obj.magic x5441) "get" [||])
    let (set_ : ('tags, 'T) this -> value:'T -> unit) =
      fun (x5445 : ('tags, 'T) this) ->
        fun ~value:(x5444 : 'T) ->
          ignore
            (Ojs.call (this_to_js Obj.magic Obj.magic x5445) "set"
               [|(Obj.magic x5444)|])
    let (create :
      ?enumerable:bool ->
        ?configurable:bool ->
          ?writable:bool ->
            ?value:'T ->
              ?get_:(unit -> 'T) -> ?set_:('T -> unit) -> unit -> 'T t)
      =
      fun ?enumerable:(x5448 : bool option) ->
        fun ?configurable:(x5449 : bool option) ->
          fun ?writable:(x5450 : bool option) ->
            fun ?value:(x5451 : 'T option) ->
              fun ?get_:(x5452 : (unit -> 'T) option) ->
                fun ?set_:(x5453 : ('T -> unit) option) ->
                  fun () ->
                    let x5454 = Ojs.empty_obj () in
                    (match x5448 with
                     | Some x5462 ->
                         Ojs.set_prop_ascii x5454 "enumerable"
                           (Ojs.bool_to_js x5462)
                     | None -> ());
                    (match x5449 with
                     | Some x5461 ->
                         Ojs.set_prop_ascii x5454 "configurable"
                           (Ojs.bool_to_js x5461)
                     | None -> ());
                    (match x5450 with
                     | Some x5460 ->
                         Ojs.set_prop_ascii x5454 "writable"
                           (Ojs.bool_to_js x5460)
                     | None -> ());
                    (match x5451 with
                     | Some x5459 ->
                         Ojs.set_prop_ascii x5454 "value" (Obj.magic x5459)
                     | None -> ());
                    (match x5452 with
                     | Some x5458 ->
                         Ojs.set_prop_ascii x5454 "get"
                           (Ojs.fun_to_js 1 (fun _ -> Obj.magic (x5458 ())))
                     | None -> ());
                    (match x5453 with
                     | Some x5456 ->
                         Ojs.set_prop_ascii x5454 "set"
                           (Ojs.fun_to_js 1
                              (fun (x5457 : Ojs.t) -> x5456 (Obj.magic x5457)))
                     | None -> ());
                    t_of_js Obj.magic x5454
    let cast_from = Obj.magic
  end
module MethodDecorator =
  struct
    type t = [ `MethodDecorator ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x5464 : Ojs.t) -> t_of_js x5464
    and t_0_to_js : t_0 -> Ojs.t = fun (x5463 : t) -> t_to_js x5463
    type tags = [ `MethodDecorator ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `MethodDecorator ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x5467 : Ojs.t) -> intf_of_js __tags_of_js x5467
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x5465 : __tags intf) -> intf_to_js __tags_to_js x5465
    let (apply :
      'tags this ->
        target:Object.t ->
          propertyKey:[ `U1 of string  | `U2 of symbol ] ->
            descriptor:'T TypedPropertyDescriptor.t ->
              (unit, 'T TypedPropertyDescriptor.t) union2)
      =
      fun (x5475 : 'tags this) ->
        fun ~target:(x5469 : Object.t) ->
          fun ~propertyKey:(x5470 : [ `U1 of string  | `U2 of symbol ]) ->
            fun ~descriptor:(x5473 : 'T TypedPropertyDescriptor.t) ->
              union2_of_js Ojs.unit_of_js
                (fun (x5478 : Ojs.t) ->
                   TypedPropertyDescriptor.t_of_js Obj.magic x5478)
                (Ojs.apply (this_to_js Obj.magic x5475)
                   [|(Object.t_to_js x5469);((match x5470 with
                                              | `U1 x5471 ->
                                                  Ojs.string_to_js x5471
                                              | `U2 x5472 ->
                                                  symbol_to_js x5472));(
                     TypedPropertyDescriptor.t_to_js Obj.magic x5473)|])
    let cast_from = Obj.magic
  end
module Math =
  struct
    let (clz32 : float -> float) =
      fun (x5480 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "clz32"
             [|(Ojs.float_to_js x5480)|])
    let (imul : x:float -> y:float -> float) =
      fun ~x:(x5481 : float) ->
        fun ~y:(x5482 : float) ->
          Ojs.float_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "imul"
               [|(Ojs.float_to_js x5481);(Ojs.float_to_js x5482)|])
    let (sign : float -> float) =
      fun (x5483 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "sign"
             [|(Ojs.float_to_js x5483)|])
    let (log10 : float -> float) =
      fun (x5484 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "log10"
             [|(Ojs.float_to_js x5484)|])
    let (log2 : float -> float) =
      fun (x5485 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "log2"
             [|(Ojs.float_to_js x5485)|])
    let (log1p : float -> float) =
      fun (x5486 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "log1p"
             [|(Ojs.float_to_js x5486)|])
    let (expm1 : float -> float) =
      fun (x5487 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "expm1"
             [|(Ojs.float_to_js x5487)|])
    let (cosh : float -> float) =
      fun (x5488 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "cosh"
             [|(Ojs.float_to_js x5488)|])
    let (sinh : float -> float) =
      fun (x5489 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "sinh"
             [|(Ojs.float_to_js x5489)|])
    let (tanh : float -> float) =
      fun (x5490 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "tanh"
             [|(Ojs.float_to_js x5490)|])
    let (acosh : float -> float) =
      fun (x5491 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "acosh"
             [|(Ojs.float_to_js x5491)|])
    let (asinh : float -> float) =
      fun (x5492 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "asinh"
             [|(Ojs.float_to_js x5492)|])
    let (atanh : float -> float) =
      fun (x5493 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "atanh"
             [|(Ojs.float_to_js x5493)|])
    let (hypot : float list -> float) =
      fun (x5494 : float list) ->
        Ojs.float_of_js
          (let x5497 = Ojs.get_prop_ascii Ojs.global "Math" in
           Ojs.call (Ojs.get_prop_ascii x5497 "hypot") "apply"
             [|x5497;((let x5495 =
                         Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                           [||] in
                       List.iter
                         (fun (x5496 : float) ->
                            ignore
                              (Ojs.call x5495 "push"
                                 [|(Ojs.float_to_js x5496)|])) x5494;
                       x5495))|])
    let (trunc : float -> float) =
      fun (x5498 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "trunc"
             [|(Ojs.float_to_js x5498)|])
    let (fround : float -> float) =
      fun (x5499 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "fround"
             [|(Ojs.float_to_js x5499)|])
    let (cbrt : float -> float) =
      fun (x5500 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "cbrt"
             [|(Ojs.float_to_js x5500)|])
    let (e : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Math") "E")
    let (ln10 : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Math") "LN10")
    let (ln2 : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Math") "LN2")
    let (log2e : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Math") "LOG2E")
    let (log10e : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Math") "LOG10E")
    let (pi : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Math") "PI")
    let (sqrt1_2 : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Math")
             "SQRT1_2")
    let (sqrt2 : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Math") "SQRT2")
    let (abs : float -> float) =
      fun (x5501 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "abs"
             [|(Ojs.float_to_js x5501)|])
    let (acos : float -> float) =
      fun (x5502 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "acos"
             [|(Ojs.float_to_js x5502)|])
    let (asin : float -> float) =
      fun (x5503 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "asin"
             [|(Ojs.float_to_js x5503)|])
    let (atan : float -> float) =
      fun (x5504 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "atan"
             [|(Ojs.float_to_js x5504)|])
    let (atan2 : y:float -> x:float -> float) =
      fun ~y:(x5505 : float) ->
        fun ~x:(x5506 : float) ->
          Ojs.float_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "atan2"
               [|(Ojs.float_to_js x5505);(Ojs.float_to_js x5506)|])
    let (ceil : float -> float) =
      fun (x5507 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "ceil"
             [|(Ojs.float_to_js x5507)|])
    let (cos : float -> float) =
      fun (x5508 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "cos"
             [|(Ojs.float_to_js x5508)|])
    let (exp : float -> float) =
      fun (x5509 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "exp"
             [|(Ojs.float_to_js x5509)|])
    let (floor : float -> float) =
      fun (x5510 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "floor"
             [|(Ojs.float_to_js x5510)|])
    let (log : float -> float) =
      fun (x5511 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "log"
             [|(Ojs.float_to_js x5511)|])
    let (max : float list -> float) =
      fun (x5512 : float list) ->
        Ojs.float_of_js
          (let x5515 = Ojs.get_prop_ascii Ojs.global "Math" in
           Ojs.call (Ojs.get_prop_ascii x5515 "max") "apply"
             [|x5515;((let x5513 =
                         Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                           [||] in
                       List.iter
                         (fun (x5514 : float) ->
                            ignore
                              (Ojs.call x5513 "push"
                                 [|(Ojs.float_to_js x5514)|])) x5512;
                       x5513))|])
    let (min : float list -> float) =
      fun (x5516 : float list) ->
        Ojs.float_of_js
          (let x5519 = Ojs.get_prop_ascii Ojs.global "Math" in
           Ojs.call (Ojs.get_prop_ascii x5519 "min") "apply"
             [|x5519;((let x5517 =
                         Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                           [||] in
                       List.iter
                         (fun (x5518 : float) ->
                            ignore
                              (Ojs.call x5517 "push"
                                 [|(Ojs.float_to_js x5518)|])) x5516;
                       x5517))|])
    let (pow : x:float -> y:float -> float) =
      fun ~x:(x5520 : float) ->
        fun ~y:(x5521 : float) ->
          Ojs.float_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "pow"
               [|(Ojs.float_to_js x5520);(Ojs.float_to_js x5521)|])
    let (random : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "random" [||])
    let (round : float -> float) =
      fun (x5522 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "round"
             [|(Ojs.float_to_js x5522)|])
    let (sin : float -> float) =
      fun (x5523 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "sin"
             [|(Ojs.float_to_js x5523)|])
    let (sqrt : float -> float) =
      fun (x5524 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "sqrt"
             [|(Ojs.float_to_js x5524)|])
    let (tan : float -> float) =
      fun (x5525 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "tan"
             [|(Ojs.float_to_js x5525)|])
  end
module Map =
  struct
    type ('K, 'V) t =
      [ `Map of ('K * 'V)  | ('K * 'V) IterableIterator.tags_1] intf
    let rec t_of_js :
      'K 'V . (Ojs.t -> 'K) -> (Ojs.t -> 'V) -> Ojs.t -> ('K, 'V) t =
      fun _K -> fun _V -> Obj.magic
    and t_to_js :
      'K 'V . ('K -> Ojs.t) -> ('V -> Ojs.t) -> ('K, 'V) t -> Ojs.t =
      fun _K -> fun _V -> Obj.magic
    type ('K, 'V) t_2 = ('K, 'V) t
    let rec t_2_of_js :
      'K 'V . (Ojs.t -> 'K) -> (Ojs.t -> 'V) -> Ojs.t -> ('K, 'V) t_2 =
      fun (type __K) ->
        fun (type __V) ->
          fun (__K_of_js : Ojs.t -> __K) ->
            fun (__V_of_js : Ojs.t -> __V) ->
              fun (x5529 : Ojs.t) -> t_of_js __K_of_js __V_of_js x5529
    and t_2_to_js :
      'K 'V . ('K -> Ojs.t) -> ('V -> Ojs.t) -> ('K, 'V) t_2 -> Ojs.t =
      fun (type __K) ->
        fun (type __V) ->
          fun (__K_to_js : __K -> Ojs.t) ->
            fun (__V_to_js : __V -> Ojs.t) ->
              fun (x5526 : (__K, __V) t) -> t_to_js __K_to_js __V_to_js x5526
    type ('K, 'V) tags =
      [ `Map of ('K * 'V)  | ('K * 'V) IterableIterator.tags_1]
    type ('K, 'V) tags_2 = ('K, 'V) tags
    type ('tags, 'K, 'V) this =
      'tags intf constraint 'tags = [> `Map of ('K * 'V) ]
    let rec this_of_js :
      'tags 'K 'V .
        (Ojs.t -> 'tags) ->
          (Ojs.t -> 'K) -> (Ojs.t -> 'V) -> Ojs.t -> ('tags, 'K, 'V) this
      =
      fun (type __tags) ->
        fun (type __K) ->
          fun (type __V) ->
            fun (__tags_of_js : Ojs.t -> __tags) ->
              fun (__K_of_js : Ojs.t -> __K) ->
                fun (__V_of_js : Ojs.t -> __V) ->
                  fun (x5534 : Ojs.t) -> intf_of_js __tags_of_js x5534
    and this_to_js :
      'tags 'K 'V .
        ('tags -> Ojs.t) ->
          ('K -> Ojs.t) -> ('V -> Ojs.t) -> ('tags, 'K, 'V) this -> Ojs.t
      =
      fun (type __tags) ->
        fun (type __K) ->
          fun (type __V) ->
            fun (__tags_to_js : __tags -> Ojs.t) ->
              fun (__K_to_js : __K -> Ojs.t) ->
                fun (__V_to_js : __V -> Ojs.t) ->
                  fun (x5532 : __tags intf) -> intf_to_js __tags_to_js x5532
    let (entries : ('tags, 'K, 'V) this -> ('K * 'V) IterableIterator.t) =
      fun (x5536 : ('tags, 'K, 'V) this) ->
        IterableIterator.t_of_js
          (fun (x5540 : Ojs.t) ->
             let x5541 = x5540 in
             ((Obj.magic (Ojs.array_get x5541 0)),
               (Obj.magic (Ojs.array_get x5541 1))))
          (Ojs.call (this_to_js Obj.magic Obj.magic Obj.magic x5536)
             "entries" [||])
    let (keys : ('tags, 'K, 'V) this -> 'K IterableIterator.t) =
      fun (x5542 : ('tags, 'K, 'V) this) ->
        IterableIterator.t_of_js Obj.magic
          (Ojs.call (this_to_js Obj.magic Obj.magic Obj.magic x5542) "keys"
             [||])
    let (values : ('tags, 'K, 'V) this -> 'V IterableIterator.t) =
      fun (x5547 : ('tags, 'K, 'V) this) ->
        IterableIterator.t_of_js Obj.magic
          (Ojs.call (this_to_js Obj.magic Obj.magic Obj.magic x5547) "values"
             [||])
    let (clear : ('tags, 'K, 'V) this -> unit) =
      fun (x5552 : ('tags, 'K, 'V) this) ->
        ignore
          (Ojs.call (this_to_js Obj.magic Obj.magic Obj.magic x5552) "clear"
             [||])
    let (delete : ('tags, 'K, 'V) this -> key:'K -> bool) =
      fun (x5557 : ('tags, 'K, 'V) this) ->
        fun ~key:(x5556 : 'K) ->
          Ojs.bool_of_js
            (Ojs.call (this_to_js Obj.magic Obj.magic Obj.magic x5557)
               "delete" [|(Obj.magic x5556)|])
    let (forEach :
      ('tags, 'K, 'V) this ->
        callbackfn:(value:'V -> key:'K -> map:('K, 'V) t -> unit) ->
          ?thisArg:any -> unit -> unit)
      =
      fun (x5570 : ('tags, 'K, 'V) this) ->
        fun
          ~callbackfn:(x5561 : value:'V -> key:'K -> map:('K, 'V) t -> unit)
          ->
          fun ?thisArg:(x5562 : any option) ->
            fun () ->
              ignore
                (let x5574 = this_to_js Obj.magic Obj.magic Obj.magic x5570 in
                 Ojs.call (Ojs.get_prop_ascii x5574 "forEach") "apply"
                   [|x5574;((let x5563 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x5563 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x5565 : Ojs.t) ->
                                          fun (x5566 : Ojs.t) ->
                                            fun (x5567 : Ojs.t) ->
                                              x5561 ~value:(Obj.magic x5565)
                                                ~key:(Obj.magic x5566)
                                                ~map:(t_of_js Obj.magic
                                                        Obj.magic x5567)))|]);
                             (match x5562 with
                              | Some x5564 ->
                                  ignore
                                    (Ojs.call x5563 "push"
                                       [|(any_to_js x5564)|])
                              | None -> ());
                             x5563))|])
    let (get_ : ('tags, 'K, 'V) this -> key:'K -> 'V option) =
      fun (x5576 : ('tags, 'K, 'V) this) ->
        fun ~key:(x5575 : 'K) ->
          Ojs.option_of_js Obj.magic
            (Ojs.call (this_to_js Obj.magic Obj.magic Obj.magic x5576) "get"
               [|(Obj.magic x5575)|])
    let (has : ('tags, 'K, 'V) this -> key:'K -> bool) =
      fun (x5582 : ('tags, 'K, 'V) this) ->
        fun ~key:(x5581 : 'K) ->
          Ojs.bool_of_js
            (Ojs.call (this_to_js Obj.magic Obj.magic Obj.magic x5582) "has"
               [|(Obj.magic x5581)|])
    let (set_ :
      ('tags, 'K, 'V) this -> key:'K -> value:'V -> ('tags, 'K, 'V) this) =
      fun (x5588 : ('tags, 'K, 'V) this) ->
        fun ~key:(x5586 : 'K) ->
          fun ~value:(x5587 : 'V) ->
            this_of_js Obj.magic Obj.magic Obj.magic
              (Ojs.call (this_to_js Obj.magic Obj.magic Obj.magic x5588)
                 "set" [|(Obj.magic x5586);(Obj.magic x5587)|])
    let (get_size : ('tags, 'K, 'V) this -> float) =
      fun (x5595 : ('tags, 'K, 'V) this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii
             (this_to_js Obj.magic Obj.magic Obj.magic x5595) "size")
    let (create : unit -> (any, any) t) =
      fun () ->
        t_of_js any_of_js any_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Map") [||])
    let (create' :
      ?iterable:('K * 'V) Iterable.t option -> unit -> ('K, 'V) t) =
      fun ?iterable:(x5601 : ('K * 'V) Iterable.t option option) ->
        fun () ->
          t_of_js Obj.magic Obj.magic
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "Map")
               (let x5602 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x5601 with
                 | Some x5603 ->
                     ignore
                       (Ojs.call x5602 "push"
                          [|(Ojs.option_to_js
                               (fun (x5604 : ('K * 'V) Iterable.t) ->
                                  Iterable.t_to_js
                                    (fun (x5605 : ('K * 'V)) ->
                                       let (x5606, x5607) = x5605 in
                                       let x5608 = Ojs.array_make 2 in
                                       Ojs.array_set x5608 0
                                         (Obj.magic x5606);
                                       Ojs.array_set x5608 1
                                         (Obj.magic x5607);
                                       x5608) x5604) x5603)|])
                 | None -> ());
                x5602))
    let (create'' : unit -> (any, any) t) =
      fun () ->
        t_of_js any_of_js any_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Map") [||])
    let (create''' : ?entries:('K * 'V) list option -> unit -> ('K, 'V) t) =
      fun ?entries:(x5613 : ('K * 'V) list option option) ->
        fun () ->
          t_of_js Obj.magic Obj.magic
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "Map")
               (let x5614 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x5613 with
                 | Some x5615 ->
                     ignore
                       (Ojs.call x5614 "push"
                          [|(Ojs.option_to_js
                               (fun (x5616 : ('K * 'V) list) ->
                                  Ojs.list_to_js
                                    (fun (x5617 : ('K * 'V)) ->
                                       let (x5618, x5619) = x5617 in
                                       let x5620 = Ojs.array_make 2 in
                                       Ojs.array_set x5620 0
                                         (Obj.magic x5618);
                                       Ojs.array_set x5620 1
                                         (Obj.magic x5619);
                                       x5620) x5616) x5615)|])
                 | None -> ());
                x5614))
    let (prototype : unit -> (any, any) t) =
      fun () ->
        t_of_js any_of_js any_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Map")
             "prototype")
    let cast_from = Obj.magic
  end
module Lowercase =
  struct
    type 'S t = Ojs.t
    let rec t_of_js : 'S . (Ojs.t -> 'S) -> Ojs.t -> 'S t =
      fun (type __S) ->
        fun (__S_of_js : Ojs.t -> __S) -> fun (x5626 : Ojs.t) -> x5626
    and t_to_js : 'S . ('S -> Ojs.t) -> 'S t -> Ojs.t =
      fun (type __S) ->
        fun (__S_to_js : __S -> Ojs.t) -> fun (x5625 : Ojs.t) -> x5625
    type 'S t_1 = 'S t
    let rec t_1_of_js : 'S . (Ojs.t -> 'S) -> Ojs.t -> 'S t_1 =
      fun (type __S) ->
        fun (__S_of_js : Ojs.t -> __S) ->
          fun (x5629 : Ojs.t) -> t_of_js __S_of_js x5629
    and t_1_to_js : 'S . ('S -> Ojs.t) -> 'S t_1 -> Ojs.t =
      fun (type __S) ->
        fun (__S_to_js : __S -> Ojs.t) ->
          fun (x5627 : __S t) -> t_to_js __S_to_js x5627
  end
module JSON =
  struct
    let (parse :
      text:string ->
        ?reviver:(this:any -> key:string -> value:any -> any) -> unit -> any)
      =
      fun ~text:(x5631 : string) ->
        fun
          ?reviver:(x5632 :
                     (this:any -> key:string -> value:any -> any) option)
          ->
          fun () ->
            any_of_js
              (let x5638 = Ojs.get_prop_ascii Ojs.global "JSON" in
               Ojs.call (Ojs.get_prop_ascii x5638 "parse") "apply"
                 [|x5638;((let x5633 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           ignore
                             (Ojs.call x5633 "push"
                                [|(Ojs.string_to_js x5631)|]);
                           (match x5632 with
                            | Some x5634 ->
                                ignore
                                  (Ojs.call x5633 "push"
                                     [|(Ojs.fun_to_js 3
                                          (fun (x5635 : Ojs.t) ->
                                             fun (x5636 : Ojs.t) ->
                                               fun (x5637 : Ojs.t) ->
                                                 any_to_js
                                                   (x5634
                                                      ~this:(any_of_js x5635)
                                                      ~key:(Ojs.string_of_js
                                                              x5636)
                                                      ~value:(any_of_js x5637))))|])
                            | None -> ());
                           x5633))|])
    let (stringify :
      value:any ->
        ?replacer:(this:any -> key:string -> value:any -> any) ->
          ?space:[ `U1 of string  | `U2 of float ] -> unit -> string)
      =
      fun ~value:(x5639 : any) ->
        fun
          ?replacer:(x5640 :
                      (this:any -> key:string -> value:any -> any) option)
          ->
          fun ?space:(x5641 : [ `U1 of string  | `U2 of float ] option) ->
            fun () ->
              Ojs.string_of_js
                (let x5650 = Ojs.get_prop_ascii Ojs.global "JSON" in
                 Ojs.call (Ojs.get_prop_ascii x5650 "stringify") "apply"
                   [|x5650;((let x5642 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x5642 "push" [|(any_to_js x5639)|]);
                             (match x5640 with
                              | Some x5646 ->
                                  ignore
                                    (Ojs.call x5642 "push"
                                       [|(Ojs.fun_to_js 3
                                            (fun (x5647 : Ojs.t) ->
                                               fun (x5648 : Ojs.t) ->
                                                 fun (x5649 : Ojs.t) ->
                                                   any_to_js
                                                     (x5646
                                                        ~this:(any_of_js
                                                                 x5647)
                                                        ~key:(Ojs.string_of_js
                                                                x5648)
                                                        ~value:(any_of_js
                                                                  x5649))))|])
                              | None -> ());
                             (match x5641 with
                              | Some x5643 ->
                                  ignore
                                    (Ojs.call x5642 "push"
                                       [|((match x5643 with
                                           | `U1 x5644 ->
                                               Ojs.string_to_js x5644
                                           | `U2 x5645 ->
                                               Ojs.float_to_js x5645))|])
                              | None -> ());
                             x5642))|])
    let (stringify' :
      value:any ->
        ?replacer:[ `U1 of float  | `U2 of string ] list option ->
          ?space:[ `U1 of string  | `U2 of float ] -> unit -> string)
      =
      fun ~value:(x5651 : any) ->
        fun
          ?replacer:(x5652 :
                      [ `U1 of float  | `U2 of string ] list option option)
          ->
          fun ?space:(x5653 : [ `U1 of string  | `U2 of float ] option) ->
            fun () ->
              Ojs.string_of_js
                (let x5663 = Ojs.get_prop_ascii Ojs.global "JSON" in
                 Ojs.call (Ojs.get_prop_ascii x5663 "stringify") "apply"
                   [|x5663;((let x5654 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x5654 "push" [|(any_to_js x5651)|]);
                             (match x5652 with
                              | Some x5658 ->
                                  ignore
                                    (Ojs.call x5654 "push"
                                       [|(Ojs.option_to_js
                                            (fun
                                               (x5659 :
                                                 [ `U1 of float 
                                                 | `U2 of string ] list)
                                               ->
                                               Ojs.list_to_js
                                                 (fun
                                                    (x5660 :
                                                      [ `U1 of float 
                                                      | `U2 of string ])
                                                    ->
                                                    match x5660 with
                                                    | `U1 x5661 ->
                                                        Ojs.float_to_js x5661
                                                    | `U2 x5662 ->
                                                        Ojs.string_to_js
                                                          x5662) x5659) x5658)|])
                              | None -> ());
                             (match x5653 with
                              | Some x5655 ->
                                  ignore
                                    (Ojs.call x5654 "push"
                                       [|((match x5655 with
                                           | `U1 x5656 ->
                                               Ojs.string_to_js x5656
                                           | `U2 x5657 ->
                                               Ojs.float_to_js x5657))|])
                              | None -> ());
                             x5654))|])
  end
module InstanceType =
  struct
    module AnonymousInterface8 =
      struct
        type t = Ojs.t
        let rec t_of_js : Ojs.t -> t = fun (x5665 : Ojs.t) -> x5665
        and t_to_js : t -> Ojs.t = fun (x5664 : Ojs.t) -> x5664
        let (create : t -> args:any list -> any) =
          fun (x5669 : t) ->
            fun ~args:(x5666 : any list) ->
              any_of_js
                (Ojs.new_obj_arr (t_to_js x5669)
                   (let x5667 =
                      Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                        [||] in
                    List.iter
                      (fun (x5668 : any) ->
                         ignore (Ojs.call x5667 "push" [|(any_to_js x5668)|]))
                      x5666;
                    x5667))
      end
    type 'T t = any
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun (type __T) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x5671 : Ojs.t) -> any_of_js x5671
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t =
      fun (type __T) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x5670 : any) -> any_to_js x5670
    type 'T t_1 = 'T t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 =
      fun (type __T) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x5674 : Ojs.t) -> t_of_js __T_of_js x5674
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t =
      fun (type __T) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x5672 : __T t) -> t_to_js __T_to_js x5672
  end
module ImportMeta =
  struct
    type t = [ `ImportMeta ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x5677 : Ojs.t) -> t_of_js x5677
    and t_0_to_js : t_0 -> Ojs.t = fun (x5676 : t) -> t_to_js x5676
    type tags = [ `ImportMeta ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `ImportMeta ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x5680 : Ojs.t) -> intf_of_js __tags_of_js x5680
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x5678 : __tags intf) -> intf_to_js __tags_to_js x5678
    let cast_from = Obj.magic
  end
module ImportAssertions =
  struct
    type t = [ `ImportAssertions ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x5683 : Ojs.t) -> t_of_js x5683
    and t_0_to_js : t_0 -> Ojs.t = fun (x5682 : t) -> t_to_js x5682
    type tags = [ `ImportAssertions ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `ImportAssertions ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x5686 : Ojs.t) -> intf_of_js __tags_of_js x5686
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x5684 : __tags intf) -> intf_to_js __tags_to_js x5684
    let (get : 'tags this -> string -> string) =
      fun (x5688 : 'tags this) ->
        fun (x5690 : string) ->
          Ojs.string_of_js
            (Ojs.get_prop (this_to_js Obj.magic x5688)
               (Ojs.string_to_js x5690))
    let (set : 'tags this -> string -> string -> unit) =
      fun (x5691 : 'tags this) ->
        fun (x5693 : string) ->
          fun (x5694 : string) ->
            Ojs.set_prop (this_to_js Obj.magic x5691)
              (Ojs.string_to_js x5693) (Ojs.string_to_js x5694)
    let cast_from = Obj.magic
  end
module ImportCallOptions =
  struct
    type t = [ `ImportCallOptions ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x5696 : Ojs.t) -> t_of_js x5696
    and t_0_to_js : t_0 -> Ojs.t = fun (x5695 : t) -> t_to_js x5695
    type tags = [ `ImportCallOptions ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `ImportCallOptions ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x5699 : Ojs.t) -> intf_of_js __tags_of_js x5699
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x5697 : __tags intf) -> intf_to_js __tags_to_js x5697
    let (get_assert : 'tags this -> ImportAssertions.t option) =
      fun (x5701 : 'tags this) ->
        Ojs.option_of_js ImportAssertions.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x5701) "assert")
    let (set_assert : 'tags this -> ImportAssertions.t -> unit) =
      fun (x5704 : 'tags this) ->
        fun (x5705 : ImportAssertions.t) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x5704) "assert"
            (ImportAssertions.t_to_js x5705)
    let (create : ?assert_:ImportAssertions.t -> unit -> t) =
      fun ?assert_:(x5707 : ImportAssertions.t option) ->
        fun () ->
          let x5708 = Ojs.empty_obj () in
          (match x5707 with
           | Some x5709 ->
               Ojs.set_prop_ascii x5708 "assert"
                 (ImportAssertions.t_to_js x5709)
           | None -> ());
          t_of_js x5708
    let cast_from = Obj.magic
  end
module IArguments =
  struct
    type t =
      [ `IArguments  | any ArrayLike.tags_1 | any IterableIterator.tags_1]
        intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x5711 : Ojs.t) -> t_of_js x5711
    and t_0_to_js : t_0 -> Ojs.t = fun (x5710 : t) -> t_to_js x5710
    type tags =
      [ `IArguments  | any ArrayLike.tags_1 | any IterableIterator.tags_1]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `IArguments ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x5714 : Ojs.t) -> intf_of_js __tags_of_js x5714
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x5712 : __tags intf) -> intf_to_js __tags_to_js x5712
    let (get : 'tags this -> float -> any) =
      fun (x5716 : 'tags this) ->
        fun (x5718 : float) ->
          any_of_js
            (Ojs.get_prop (this_to_js Obj.magic x5716)
               (Ojs.float_to_js x5718))
    let (set : 'tags this -> float -> any -> unit) =
      fun (x5719 : 'tags this) ->
        fun (x5721 : float) ->
          fun (x5722 : any) ->
            Ojs.set_prop (this_to_js Obj.magic x5719) (Ojs.float_to_js x5721)
              (any_to_js x5722)
    let (get_length : 'tags this -> float) =
      fun (x5723 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x5723) "length")
    let (set_length : 'tags this -> float -> unit) =
      fun (x5725 : 'tags this) ->
        fun (x5726 : float) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x5725) "length"
            (Ojs.float_to_js x5726)
    let (get_callee : 'tags this -> Function.t) =
      fun (x5728 : 'tags this) ->
        Function.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x5728) "callee")
    let (set_callee : 'tags this -> Function.t -> unit) =
      fun (x5730 : 'tags this) ->
        fun (x5731 : Function.t) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x5730) "callee"
            (Function.t_to_js x5731)
    let cast_from = Obj.magic
  end
module Generator =
  struct
    type ('T, 'TReturn, 'TNext) t =
      [ `Generator of ('T * 'TReturn * 'TNext) 
      | `Iterator of ('T * 'TReturn * 'TNext) ] intf
    let rec t_of_js :
      'T 'TReturn 'TNext .
        (Ojs.t -> 'T) ->
          (Ojs.t -> 'TReturn) ->
            (Ojs.t -> 'TNext) -> Ojs.t -> ('T, 'TReturn, 'TNext) t
      = fun _T -> fun _TReturn -> fun _TNext -> Obj.magic
    and t_to_js :
      'T 'TReturn 'TNext .
        ('T -> Ojs.t) ->
          ('TReturn -> Ojs.t) ->
            ('TNext -> Ojs.t) -> ('T, 'TReturn, 'TNext) t -> Ojs.t
      = fun _T -> fun _TReturn -> fun _TNext -> Obj.magic
    type ('T, 'TReturn, 'TNext) t_3 = ('T, 'TReturn, 'TNext) t
    let rec t_3_of_js :
      'T 'TReturn 'TNext .
        (Ojs.t -> 'T) ->
          (Ojs.t -> 'TReturn) ->
            (Ojs.t -> 'TNext) -> Ojs.t -> ('T, 'TReturn, 'TNext) t_3
      =
      fun (type __T) ->
        fun (type __TReturn) ->
          fun (type __TNext) ->
            fun (__T_of_js : Ojs.t -> __T) ->
              fun (__TReturn_of_js : Ojs.t -> __TReturn) ->
                fun (__TNext_of_js : Ojs.t -> __TNext) ->
                  fun (x5737 : Ojs.t) ->
                    t_of_js __T_of_js __TReturn_of_js __TNext_of_js x5737
    and t_3_to_js :
      'T 'TReturn 'TNext .
        ('T -> Ojs.t) ->
          ('TReturn -> Ojs.t) ->
            ('TNext -> Ojs.t) -> ('T, 'TReturn, 'TNext) t_3 -> Ojs.t
      =
      fun (type __T) ->
        fun (type __TReturn) ->
          fun (type __TNext) ->
            fun (__T_to_js : __T -> Ojs.t) ->
              fun (__TReturn_to_js : __TReturn -> Ojs.t) ->
                fun (__TNext_to_js : __TNext -> Ojs.t) ->
                  fun (x5733 : (__T, __TReturn, __TNext) t) ->
                    t_to_js __T_to_js __TReturn_to_js __TNext_to_js x5733
    type ('T, 'TReturn) t_2 = ('T, 'TReturn, unknown) t
    let rec t_2_of_js :
      'T 'TReturn .
        (Ojs.t -> 'T) -> (Ojs.t -> 'TReturn) -> Ojs.t -> ('T, 'TReturn) t_2
      =
      fun (type __T) ->
        fun (type __TReturn) ->
          fun (__T_of_js : Ojs.t -> __T) ->
            fun (__TReturn_of_js : Ojs.t -> __TReturn) ->
              fun (x5745 : Ojs.t) ->
                t_of_js __T_of_js __TReturn_of_js unknown_of_js x5745
    and t_2_to_js :
      'T 'TReturn .
        ('T -> Ojs.t) -> ('TReturn -> Ojs.t) -> ('T, 'TReturn) t_2 -> Ojs.t
      =
      fun (type __T) ->
        fun (type __TReturn) ->
          fun (__T_to_js : __T -> Ojs.t) ->
            fun (__TReturn_to_js : __TReturn -> Ojs.t) ->
              fun (x5741 : (__T, __TReturn, unknown) t) ->
                t_to_js __T_to_js __TReturn_to_js unknown_to_js x5741
    type 'T t_1 = ('T, any, unknown) t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 =
      fun (type __T) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x5753 : Ojs.t) ->
            t_of_js __T_of_js any_of_js unknown_of_js x5753
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t =
      fun (type __T) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x5749 : (__T, any, unknown) t) ->
            t_to_js __T_to_js any_to_js unknown_to_js x5749
    type t_0 = (unknown, any, unknown) t
    let rec t_0_of_js : Ojs.t -> t_0 =
      fun (x5761 : Ojs.t) ->
        t_of_js unknown_of_js any_of_js unknown_of_js x5761
    and t_0_to_js : t_0 -> Ojs.t =
      fun (x5757 : (unknown, any, unknown) t) ->
        t_to_js unknown_to_js any_to_js unknown_to_js x5757
    type ('T, 'TReturn, 'TNext) tags =
      [ `Generator of ('T * 'TReturn * 'TNext) 
      | `Iterator of ('T * 'TReturn * 'TNext) ]
    type ('T, 'TReturn, 'TNext) tags_3 = ('T, 'TReturn, 'TNext) tags
    type ('T, 'TReturn) tags_2 = ('T, 'TReturn, unknown) tags
    type 'T tags_1 = ('T, any, unknown) tags
    type tags_0 = (unknown, any, unknown) tags
    type ('tags, 'T, 'TReturn, 'TNext) this =
      'tags intf constraint 'tags =
                  [> `Generator of ('T * 'TReturn * 'TNext) ]
    let rec this_of_js :
      'tags 'T 'TReturn 'TNext .
        (Ojs.t -> 'tags) ->
          (Ojs.t -> 'T) ->
            (Ojs.t -> 'TReturn) ->
              (Ojs.t -> 'TNext) ->
                Ojs.t -> ('tags, 'T, 'TReturn, 'TNext) this
      =
      fun (type __tags) ->
        fun (type __T) ->
          fun (type __TReturn) ->
            fun (type __TNext) ->
              fun (__tags_of_js : Ojs.t -> __tags) ->
                fun (__T_of_js : Ojs.t -> __T) ->
                  fun (__TReturn_of_js : Ojs.t -> __TReturn) ->
                    fun (__TNext_of_js : Ojs.t -> __TNext) ->
                      fun (x5767 : Ojs.t) -> intf_of_js __tags_of_js x5767
    and this_to_js :
      'tags 'T 'TReturn 'TNext .
        ('tags -> Ojs.t) ->
          ('T -> Ojs.t) ->
            ('TReturn -> Ojs.t) ->
              ('TNext -> Ojs.t) ->
                ('tags, 'T, 'TReturn, 'TNext) this -> Ojs.t
      =
      fun (type __tags) ->
        fun (type __T) ->
          fun (type __TReturn) ->
            fun (type __TNext) ->
              fun (__tags_to_js : __tags -> Ojs.t) ->
                fun (__T_to_js : __T -> Ojs.t) ->
                  fun (__TReturn_to_js : __TReturn -> Ojs.t) ->
                    fun (__TNext_to_js : __TNext -> Ojs.t) ->
                      fun (x5765 : __tags intf) ->
                        intf_to_js __tags_to_js x5765
    let (next :
      ('tags, 'T, 'TReturn, 'TNext) this ->
        args:any list -> ('T, 'TReturn) IteratorResult.t)
      =
      fun (x5772 : ('tags, 'T, 'TReturn, 'TNext) this) ->
        fun ~args:(x5769 : any list) ->
          IteratorResult.t_of_js Obj.magic Obj.magic
            (let x5777 =
               this_to_js Obj.magic Obj.magic Obj.magic Obj.magic x5772 in
             Ojs.call (Ojs.get_prop_ascii x5777 "next") "apply"
               [|x5777;((let x5770 =
                           Ojs.new_obj
                             (Ojs.get_prop_ascii Ojs.global "Array") 
                             [||] in
                         List.iter
                           (fun (x5771 : any) ->
                              ignore
                                (Ojs.call x5770 "push" [|(any_to_js x5771)|]))
                           x5769;
                         x5770))|])
    let (return :
      ('tags, 'T, 'TReturn, 'TNext) this ->
        value:'TReturn -> ('T, 'TReturn) IteratorResult.t)
      =
      fun (x5781 : ('tags, 'T, 'TReturn, 'TNext) this) ->
        fun ~value:(x5780 : 'TReturn) ->
          IteratorResult.t_of_js Obj.magic Obj.magic
            (Ojs.call
               (this_to_js Obj.magic Obj.magic Obj.magic Obj.magic x5781)
               "return" [|(Obj.magic x5780)|])
    let (throw :
      ('tags, 'T, 'TReturn, 'TNext) this ->
        e:any -> ('T, 'TReturn) IteratorResult.t)
      =
      fun (x5789 : ('tags, 'T, 'TReturn, 'TNext) this) ->
        fun ~e:(x5788 : any) ->
          IteratorResult.t_of_js Obj.magic Obj.magic
            (Ojs.call
               (this_to_js Obj.magic Obj.magic Obj.magic Obj.magic x5789)
               "throw" [|(any_to_js x5788)|])
    let cast_from = Obj.magic
  end
module GeneratorFunction =
  struct
    type t = [ `GeneratorFunction ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x5797 : Ojs.t) -> t_of_js x5797
    and t_0_to_js : t_0 -> Ojs.t = fun (x5796 : t) -> t_to_js x5796
    type tags = [ `GeneratorFunction ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `GeneratorFunction ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x5800 : Ojs.t) -> intf_of_js __tags_of_js x5800
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x5798 : __tags intf) -> intf_to_js __tags_to_js x5798
    let (create : 'tags this -> args:any list -> Generator.t_0) =
      fun (x5805 : 'tags this) ->
        fun ~args:(x5802 : any list) ->
          Generator.t_0_of_js
            (Ojs.new_obj_arr (this_to_js Obj.magic x5805)
               (let x5803 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                List.iter
                  (fun (x5804 : any) ->
                     ignore (Ojs.call x5803 "push" [|(any_to_js x5804)|]))
                  x5802;
                x5803))
    let (apply : 'tags this -> args:any list -> Generator.t_0) =
      fun (x5810 : 'tags this) ->
        fun ~args:(x5807 : any list) ->
          Generator.t_0_of_js
            (Ojs.call (this_to_js Obj.magic x5810) "apply"
               [|Ojs.null;((let x5808 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            List.iter
                              (fun (x5809 : any) ->
                                 ignore
                                   (Ojs.call x5808 "push"
                                      [|(any_to_js x5809)|])) x5807;
                            x5808))|])
    let (get_length : 'tags this -> float) =
      fun (x5812 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x5812) "length")
    let (get_name : 'tags this -> string) =
      fun (x5814 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x5814) "name")
    let (get_prototype : 'tags this -> Generator.t_0) =
      fun (x5816 : 'tags this) ->
        Generator.t_0_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x5816) "prototype")
    let cast_from = Obj.magic
  end
module GeneratorFunctionConstructor =
  struct
    type t = [ `GeneratorFunctionConstructor ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x5819 : Ojs.t) -> t_of_js x5819
    and t_0_to_js : t_0 -> Ojs.t = fun (x5818 : t) -> t_to_js x5818
    type tags = [ `GeneratorFunctionConstructor ]
    type tags_0 = tags
    type 'tags this =
      'tags intf constraint 'tags = [> `GeneratorFunctionConstructor ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x5822 : Ojs.t) -> intf_of_js __tags_of_js x5822
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x5820 : __tags intf) -> intf_to_js __tags_to_js x5820
    let (create : 'tags this -> args:string list -> GeneratorFunction.t) =
      fun (x5827 : 'tags this) ->
        fun ~args:(x5824 : string list) ->
          GeneratorFunction.t_of_js
            (Ojs.new_obj_arr (this_to_js Obj.magic x5827)
               (let x5825 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                List.iter
                  (fun (x5826 : string) ->
                     ignore
                       (Ojs.call x5825 "push" [|(Ojs.string_to_js x5826)|]))
                  x5824;
                x5825))
    let (apply : 'tags this -> args:string list -> GeneratorFunction.t) =
      fun (x5832 : 'tags this) ->
        fun ~args:(x5829 : string list) ->
          GeneratorFunction.t_of_js
            (Ojs.call (this_to_js Obj.magic x5832) "apply"
               [|Ojs.null;((let x5830 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            List.iter
                              (fun (x5831 : string) ->
                                 ignore
                                   (Ojs.call x5830 "push"
                                      [|(Ojs.string_to_js x5831)|])) x5829;
                            x5830))|])
    let (get_length : 'tags this -> float) =
      fun (x5834 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x5834) "length")
    let (get_name : 'tags this -> string) =
      fun (x5836 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x5836) "name")
    let (get_prototype : 'tags this -> GeneratorFunction.t) =
      fun (x5838 : 'tags this) ->
        GeneratorFunction.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x5838) "prototype")
    let cast_from = Obj.magic
  end
module Float64Array =
  struct
    type t =
      [ `Float64Array  | float ArrayLike.tags_1
      | float IterableIterator.tags_1] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x5841 : Ojs.t) -> t_of_js x5841
    and t_0_to_js : t_0 -> Ojs.t = fun (x5840 : t) -> t_to_js x5840
    type tags =
      [ `Float64Array  | float ArrayLike.tags_1
      | float IterableIterator.tags_1]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `Float64Array ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x5844 : Ojs.t) -> intf_of_js __tags_of_js x5844
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x5842 : __tags intf) -> intf_to_js __tags_to_js x5842
    let (at : 'tags this -> index:float -> float option) =
      fun (x5847 : 'tags this) ->
        fun ~index:(x5846 : float) ->
          Ojs.option_of_js Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x5847) "at"
               [|(Ojs.float_to_js x5846)|])
    let (includes :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> bool)
      =
      fun (x5854 : 'tags this) ->
        fun ~searchElement:(x5850 : float) ->
          fun ?fromIndex:(x5851 : float option) ->
            fun () ->
              Ojs.bool_of_js
                (let x5856 = this_to_js Obj.magic x5854 in
                 Ojs.call (Ojs.get_prop_ascii x5856 "includes") "apply"
                   [|x5856;((let x5852 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x5852 "push"
                                  [|(Ojs.float_to_js x5850)|]);
                             (match x5851 with
                              | Some x5853 ->
                                  ignore
                                    (Ojs.call x5852 "push"
                                       [|(Ojs.float_to_js x5853)|])
                              | None -> ());
                             x5852))|])
    let (entries : 'tags this -> (float * float) IterableIterator.t) =
      fun (x5857 : 'tags this) ->
        IterableIterator.t_of_js
          (fun (x5859 : Ojs.t) ->
             let x5860 = x5859 in
             ((Ojs.float_of_js (Ojs.array_get x5860 0)),
               (Ojs.float_of_js (Ojs.array_get x5860 1))))
          (Ojs.call (this_to_js Obj.magic x5857) "entries" [||])
    let (keys : 'tags this -> float IterableIterator.t) =
      fun (x5861 : 'tags this) ->
        IterableIterator.t_of_js Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x5861) "keys" [||])
    let (values : 'tags this -> float IterableIterator.t) =
      fun (x5864 : 'tags this) ->
        IterableIterator.t_of_js Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x5864) "values" [||])
    let (get_BYTES_PER_ELEMENT : 'tags this -> float) =
      fun (x5867 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x5867)
             "BYTES_PER_ELEMENT")
    let (get_buffer : 'tags this -> ArrayBufferLike.t) =
      fun (x5869 : 'tags this) ->
        ArrayBufferLike.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x5869) "buffer")
    let (get_byteLength : 'tags this -> float) =
      fun (x5871 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x5871) "byteLength")
    let (get_byteOffset : 'tags this -> float) =
      fun (x5873 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x5873) "byteOffset")
    let (copyWithin :
      'tags this ->
        target:float -> start:float -> ?end_:float -> unit -> 'tags this)
      =
      fun (x5880 : 'tags this) ->
        fun ~target:(x5875 : float) ->
          fun ~start:(x5876 : float) ->
            fun ?end_:(x5877 : float option) ->
              fun () ->
                this_of_js Obj.magic
                  (let x5882 = this_to_js Obj.magic x5880 in
                   Ojs.call (Ojs.get_prop_ascii x5882 "copyWithin") "apply"
                     [|x5882;((let x5878 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x5878 "push"
                                    [|(Ojs.float_to_js x5875)|]);
                               ignore
                                 (Ojs.call x5878 "push"
                                    [|(Ojs.float_to_js x5876)|]);
                               (match x5877 with
                                | Some x5879 ->
                                    ignore
                                      (Ojs.call x5878 "push"
                                         [|(Ojs.float_to_js x5879)|])
                                | None -> ());
                               x5878))|])
    let (every :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x5891 : 'tags this) ->
        fun
          ~predicate:(x5884 :
                       value:float -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x5885 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x5893 = this_to_js Obj.magic x5891 in
                 Ojs.call (Ojs.get_prop_ascii x5893 "every") "apply"
                   [|x5893;((let x5886 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x5886 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x5888 : Ojs.t) ->
                                          fun (x5889 : Ojs.t) ->
                                            fun (x5890 : Ojs.t) ->
                                              unknown_to_js
                                                (x5884
                                                   ~value:(Ojs.float_of_js
                                                             x5888)
                                                   ~index:(Ojs.float_of_js
                                                             x5889)
                                                   ~array:(t_of_js x5890))))|]);
                             (match x5885 with
                              | Some x5887 ->
                                  ignore
                                    (Ojs.call x5886 "push"
                                       [|(any_to_js x5887)|])
                              | None -> ());
                             x5886))|])
    let (fill :
      'tags this ->
        value:float -> ?start:float -> ?end_:float -> unit -> 'tags this)
      =
      fun (x5900 : 'tags this) ->
        fun ~value:(x5894 : float) ->
          fun ?start:(x5895 : float option) ->
            fun ?end_:(x5896 : float option) ->
              fun () ->
                this_of_js Obj.magic
                  (let x5902 = this_to_js Obj.magic x5900 in
                   Ojs.call (Ojs.get_prop_ascii x5902 "fill") "apply"
                     [|x5902;((let x5897 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x5897 "push"
                                    [|(Ojs.float_to_js x5894)|]);
                               (match x5895 with
                                | Some x5899 ->
                                    ignore
                                      (Ojs.call x5897 "push"
                                         [|(Ojs.float_to_js x5899)|])
                                | None -> ());
                               (match x5896 with
                                | Some x5898 ->
                                    ignore
                                      (Ojs.call x5897 "push"
                                         [|(Ojs.float_to_js x5898)|])
                                | None -> ());
                               x5897))|])
    let (filter :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> any) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x5911 : 'tags this) ->
        fun ~predicate:(x5904 : value:float -> index:float -> array:t -> any)
          ->
          fun ?thisArg:(x5905 : any option) ->
            fun () ->
              t_of_js
                (let x5913 = this_to_js Obj.magic x5911 in
                 Ojs.call (Ojs.get_prop_ascii x5913 "filter") "apply"
                   [|x5913;((let x5906 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x5906 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x5908 : Ojs.t) ->
                                          fun (x5909 : Ojs.t) ->
                                            fun (x5910 : Ojs.t) ->
                                              any_to_js
                                                (x5904
                                                   ~value:(Ojs.float_of_js
                                                             x5908)
                                                   ~index:(Ojs.float_of_js
                                                             x5909)
                                                   ~array:(t_of_js x5910))))|]);
                             (match x5905 with
                              | Some x5907 ->
                                  ignore
                                    (Ojs.call x5906 "push"
                                       [|(any_to_js x5907)|])
                              | None -> ());
                             x5906))|])
    let (find :
      'tags this ->
        predicate:(value:float -> index:float -> obj:t -> bool) ->
          ?thisArg:any -> unit -> float option)
      =
      fun (x5921 : 'tags this) ->
        fun ~predicate:(x5914 : value:float -> index:float -> obj:t -> bool)
          ->
          fun ?thisArg:(x5915 : any option) ->
            fun () ->
              Ojs.option_of_js Ojs.float_of_js
                (let x5923 = this_to_js Obj.magic x5921 in
                 Ojs.call (Ojs.get_prop_ascii x5923 "find") "apply"
                   [|x5923;((let x5916 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x5916 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x5918 : Ojs.t) ->
                                          fun (x5919 : Ojs.t) ->
                                            fun (x5920 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x5914
                                                   ~value:(Ojs.float_of_js
                                                             x5918)
                                                   ~index:(Ojs.float_of_js
                                                             x5919)
                                                   ~obj:(t_of_js x5920))))|]);
                             (match x5915 with
                              | Some x5917 ->
                                  ignore
                                    (Ojs.call x5916 "push"
                                       [|(any_to_js x5917)|])
                              | None -> ());
                             x5916))|])
    let (findIndex :
      'tags this ->
        predicate:(value:float -> index:float -> obj:t -> bool) ->
          ?thisArg:any -> unit -> float)
      =
      fun (x5932 : 'tags this) ->
        fun ~predicate:(x5925 : value:float -> index:float -> obj:t -> bool)
          ->
          fun ?thisArg:(x5926 : any option) ->
            fun () ->
              Ojs.float_of_js
                (let x5934 = this_to_js Obj.magic x5932 in
                 Ojs.call (Ojs.get_prop_ascii x5934 "findIndex") "apply"
                   [|x5934;((let x5927 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x5927 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x5929 : Ojs.t) ->
                                          fun (x5930 : Ojs.t) ->
                                            fun (x5931 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x5925
                                                   ~value:(Ojs.float_of_js
                                                             x5929)
                                                   ~index:(Ojs.float_of_js
                                                             x5930)
                                                   ~obj:(t_of_js x5931))))|]);
                             (match x5926 with
                              | Some x5928 ->
                                  ignore
                                    (Ojs.call x5927 "push"
                                       [|(any_to_js x5928)|])
                              | None -> ());
                             x5927))|])
    let (forEach :
      'tags this ->
        callbackfn:(value:float -> index:float -> array:t -> unit) ->
          ?thisArg:any -> unit -> unit)
      =
      fun (x5942 : 'tags this) ->
        fun
          ~callbackfn:(x5935 : value:float -> index:float -> array:t -> unit)
          ->
          fun ?thisArg:(x5936 : any option) ->
            fun () ->
              ignore
                (let x5944 = this_to_js Obj.magic x5942 in
                 Ojs.call (Ojs.get_prop_ascii x5944 "forEach") "apply"
                   [|x5944;((let x5937 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x5937 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x5939 : Ojs.t) ->
                                          fun (x5940 : Ojs.t) ->
                                            fun (x5941 : Ojs.t) ->
                                              x5935
                                                ~value:(Ojs.float_of_js x5939)
                                                ~index:(Ojs.float_of_js x5940)
                                                ~array:(t_of_js x5941)))|]);
                             (match x5936 with
                              | Some x5938 ->
                                  ignore
                                    (Ojs.call x5937 "push"
                                       [|(any_to_js x5938)|])
                              | None -> ());
                             x5937))|])
    let (indexOf :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> float)
      =
      fun (x5949 : 'tags this) ->
        fun ~searchElement:(x5945 : float) ->
          fun ?fromIndex:(x5946 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x5951 = this_to_js Obj.magic x5949 in
                 Ojs.call (Ojs.get_prop_ascii x5951 "indexOf") "apply"
                   [|x5951;((let x5947 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x5947 "push"
                                  [|(Ojs.float_to_js x5945)|]);
                             (match x5946 with
                              | Some x5948 ->
                                  ignore
                                    (Ojs.call x5947 "push"
                                       [|(Ojs.float_to_js x5948)|])
                              | None -> ());
                             x5947))|])
    let (join : 'tags this -> ?separator:string -> unit -> string) =
      fun (x5955 : 'tags this) ->
        fun ?separator:(x5952 : string option) ->
          fun () ->
            Ojs.string_of_js
              (let x5957 = this_to_js Obj.magic x5955 in
               Ojs.call (Ojs.get_prop_ascii x5957 "join") "apply"
                 [|x5957;((let x5953 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x5952 with
                            | Some x5954 ->
                                ignore
                                  (Ojs.call x5953 "push"
                                     [|(Ojs.string_to_js x5954)|])
                            | None -> ());
                           x5953))|])
    let (lastIndexOf :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> float)
      =
      fun (x5962 : 'tags this) ->
        fun ~searchElement:(x5958 : float) ->
          fun ?fromIndex:(x5959 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x5964 = this_to_js Obj.magic x5962 in
                 Ojs.call (Ojs.get_prop_ascii x5964 "lastIndexOf") "apply"
                   [|x5964;((let x5960 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x5960 "push"
                                  [|(Ojs.float_to_js x5958)|]);
                             (match x5959 with
                              | Some x5961 ->
                                  ignore
                                    (Ojs.call x5960 "push"
                                       [|(Ojs.float_to_js x5961)|])
                              | None -> ());
                             x5960))|])
    let (get_length : 'tags this -> float) =
      fun (x5965 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x5965) "length")
    let (map :
      'tags this ->
        callbackfn:(value:float -> index:float -> array:t -> float) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x5974 : 'tags this) ->
        fun
          ~callbackfn:(x5967 :
                        value:float -> index:float -> array:t -> float)
          ->
          fun ?thisArg:(x5968 : any option) ->
            fun () ->
              t_of_js
                (let x5976 = this_to_js Obj.magic x5974 in
                 Ojs.call (Ojs.get_prop_ascii x5976 "map") "apply"
                   [|x5976;((let x5969 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x5969 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x5971 : Ojs.t) ->
                                          fun (x5972 : Ojs.t) ->
                                            fun (x5973 : Ojs.t) ->
                                              Ojs.float_to_js
                                                (x5967
                                                   ~value:(Ojs.float_of_js
                                                             x5971)
                                                   ~index:(Ojs.float_of_js
                                                             x5972)
                                                   ~array:(t_of_js x5973))))|]);
                             (match x5968 with
                              | Some x5970 ->
                                  ignore
                                    (Ojs.call x5969 "push"
                                       [|(any_to_js x5970)|])
                              | None -> ());
                             x5969))|])
    let (reduce :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> float)
      =
      fun (x5982 : 'tags this) ->
        fun
          ~callbackfn:(x5977 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x5982) "reduce"
               [|(Ojs.fun_to_js 4
                    (fun (x5978 : Ojs.t) ->
                       fun (x5979 : Ojs.t) ->
                         fun (x5980 : Ojs.t) ->
                           fun (x5981 : Ojs.t) ->
                             Ojs.float_to_js
                               (x5977 ~previousValue:(Ojs.float_of_js x5978)
                                  ~currentValue:(Ojs.float_of_js x5979)
                                  ~currentIndex:(Ojs.float_of_js x5980)
                                  ~array:(t_of_js x5981))))|])
    let (reduce' :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> initialValue:float -> float)
      =
      fun (x5990 : 'tags this) ->
        fun
          ~callbackfn:(x5984 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          fun ~initialValue:(x5989 : float) ->
            Ojs.float_of_js
              (Ojs.call (this_to_js Obj.magic x5990) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x5985 : Ojs.t) ->
                         fun (x5986 : Ojs.t) ->
                           fun (x5987 : Ojs.t) ->
                             fun (x5988 : Ojs.t) ->
                               Ojs.float_to_js
                                 (x5984
                                    ~previousValue:(Ojs.float_of_js x5985)
                                    ~currentValue:(Ojs.float_of_js x5986)
                                    ~currentIndex:(Ojs.float_of_js x5987)
                                    ~array:(t_of_js x5988))));(Ojs.float_to_js
                                                                 x5989)|])
    let (reduce'' :
      'tags this ->
        callbackfn:(previousValue:'U ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x5998 : 'tags this) ->
        fun
          ~callbackfn:(x5992 :
                        previousValue:'U ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x5997 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic x5998) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x5993 : Ojs.t) ->
                         fun (x5994 : Ojs.t) ->
                           fun (x5995 : Ojs.t) ->
                             fun (x5996 : Ojs.t) ->
                               Obj.magic
                                 (x5992 ~previousValue:(Obj.magic x5993)
                                    ~currentValue:(Ojs.float_of_js x5994)
                                    ~currentIndex:(Ojs.float_of_js x5995)
                                    ~array:(t_of_js x5996))));(Obj.magic
                                                                 x5997)|])
    let (reduceRight :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> float)
      =
      fun (x6005 : 'tags this) ->
        fun
          ~callbackfn:(x6000 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x6005) "reduceRight"
               [|(Ojs.fun_to_js 4
                    (fun (x6001 : Ojs.t) ->
                       fun (x6002 : Ojs.t) ->
                         fun (x6003 : Ojs.t) ->
                           fun (x6004 : Ojs.t) ->
                             Ojs.float_to_js
                               (x6000 ~previousValue:(Ojs.float_of_js x6001)
                                  ~currentValue:(Ojs.float_of_js x6002)
                                  ~currentIndex:(Ojs.float_of_js x6003)
                                  ~array:(t_of_js x6004))))|])
    let (reduceRight' :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> initialValue:float -> float)
      =
      fun (x6013 : 'tags this) ->
        fun
          ~callbackfn:(x6007 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          fun ~initialValue:(x6012 : float) ->
            Ojs.float_of_js
              (Ojs.call (this_to_js Obj.magic x6013) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x6008 : Ojs.t) ->
                         fun (x6009 : Ojs.t) ->
                           fun (x6010 : Ojs.t) ->
                             fun (x6011 : Ojs.t) ->
                               Ojs.float_to_js
                                 (x6007
                                    ~previousValue:(Ojs.float_of_js x6008)
                                    ~currentValue:(Ojs.float_of_js x6009)
                                    ~currentIndex:(Ojs.float_of_js x6010)
                                    ~array:(t_of_js x6011))));(Ojs.float_to_js
                                                                 x6012)|])
    let (reduceRight'' :
      'tags this ->
        callbackfn:(previousValue:'U ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x6021 : 'tags this) ->
        fun
          ~callbackfn:(x6015 :
                        previousValue:'U ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x6020 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic x6021) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x6016 : Ojs.t) ->
                         fun (x6017 : Ojs.t) ->
                           fun (x6018 : Ojs.t) ->
                             fun (x6019 : Ojs.t) ->
                               Obj.magic
                                 (x6015 ~previousValue:(Obj.magic x6016)
                                    ~currentValue:(Ojs.float_of_js x6017)
                                    ~currentIndex:(Ojs.float_of_js x6018)
                                    ~array:(t_of_js x6019))));(Obj.magic
                                                                 x6020)|])
    let (reverse : 'tags this -> t) =
      fun (x6023 : 'tags this) ->
        t_of_js (Ojs.call (this_to_js Obj.magic x6023) "reverse" [||])
    let (set_ :
      'tags this -> array:float ArrayLike.t -> ?offset:float -> unit -> unit)
      =
      fun (x6030 : 'tags this) ->
        fun ~array:(x6025 : float ArrayLike.t) ->
          fun ?offset:(x6026 : float option) ->
            fun () ->
              ignore
                (let x6032 = this_to_js Obj.magic x6030 in
                 Ojs.call (Ojs.get_prop_ascii x6032 "set") "apply"
                   [|x6032;((let x6027 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6027 "push"
                                  [|(ArrayLike.t_to_js Ojs.float_to_js x6025)|]);
                             (match x6026 with
                              | Some x6028 ->
                                  ignore
                                    (Ojs.call x6027 "push"
                                       [|(Ojs.float_to_js x6028)|])
                              | None -> ());
                             x6027))|])
    let (slice : 'tags this -> ?start:float -> ?end_:float -> unit -> t) =
      fun (x6038 : 'tags this) ->
        fun ?start:(x6033 : float option) ->
          fun ?end_:(x6034 : float option) ->
            fun () ->
              t_of_js
                (let x6040 = this_to_js Obj.magic x6038 in
                 Ojs.call (Ojs.get_prop_ascii x6040 "slice") "apply"
                   [|x6040;((let x6035 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x6033 with
                              | Some x6037 ->
                                  ignore
                                    (Ojs.call x6035 "push"
                                       [|(Ojs.float_to_js x6037)|])
                              | None -> ());
                             (match x6034 with
                              | Some x6036 ->
                                  ignore
                                    (Ojs.call x6035 "push"
                                       [|(Ojs.float_to_js x6036)|])
                              | None -> ());
                             x6035))|])
    let (some :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x6048 : 'tags this) ->
        fun
          ~predicate:(x6041 :
                       value:float -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x6042 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x6050 = this_to_js Obj.magic x6048 in
                 Ojs.call (Ojs.get_prop_ascii x6050 "some") "apply"
                   [|x6050;((let x6043 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6043 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x6045 : Ojs.t) ->
                                          fun (x6046 : Ojs.t) ->
                                            fun (x6047 : Ojs.t) ->
                                              unknown_to_js
                                                (x6041
                                                   ~value:(Ojs.float_of_js
                                                             x6045)
                                                   ~index:(Ojs.float_of_js
                                                             x6046)
                                                   ~array:(t_of_js x6047))))|]);
                             (match x6042 with
                              | Some x6044 ->
                                  ignore
                                    (Ojs.call x6043 "push"
                                       [|(any_to_js x6044)|])
                              | None -> ());
                             x6043))|])
    let (sort :
      'tags this ->
        ?compareFn:(a:float -> b:float -> float) -> unit -> 'tags this)
      =
      fun (x6056 : 'tags this) ->
        fun ?compareFn:(x6051 : (a:float -> b:float -> float) option) ->
          fun () ->
            this_of_js Obj.magic
              (let x6058 = this_to_js Obj.magic x6056 in
               Ojs.call (Ojs.get_prop_ascii x6058 "sort") "apply"
                 [|x6058;((let x6052 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x6051 with
                            | Some x6053 ->
                                ignore
                                  (Ojs.call x6052 "push"
                                     [|(Ojs.fun_to_js 2
                                          (fun (x6054 : Ojs.t) ->
                                             fun (x6055 : Ojs.t) ->
                                               Ojs.float_to_js
                                                 (x6053
                                                    ~a:(Ojs.float_of_js x6054)
                                                    ~b:(Ojs.float_of_js x6055))))|])
                            | None -> ());
                           x6052))|])
    let (subarray : 'tags this -> ?begin_:float -> ?end_:float -> unit -> t)
      =
      fun (x6065 : 'tags this) ->
        fun ?begin_:(x6060 : float option) ->
          fun ?end_:(x6061 : float option) ->
            fun () ->
              t_of_js
                (let x6067 = this_to_js Obj.magic x6065 in
                 Ojs.call (Ojs.get_prop_ascii x6067 "subarray") "apply"
                   [|x6067;((let x6062 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x6060 with
                              | Some x6064 ->
                                  ignore
                                    (Ojs.call x6062 "push"
                                       [|(Ojs.float_to_js x6064)|])
                              | None -> ());
                             (match x6061 with
                              | Some x6063 ->
                                  ignore
                                    (Ojs.call x6062 "push"
                                       [|(Ojs.float_to_js x6063)|])
                              | None -> ());
                             x6062))|])
    let (toString : 'tags this -> string) =
      fun (x6068 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x6068) "toString" [||])
    let (valueOf : 'tags this -> t) =
      fun (x6070 : 'tags this) ->
        t_of_js (Ojs.call (this_to_js Obj.magic x6070) "valueOf" [||])
    let (get : 'tags this -> float -> float) =
      fun (x6072 : 'tags this) ->
        fun (x6074 : float) ->
          Ojs.float_of_js
            (Ojs.get_prop (this_to_js Obj.magic x6072)
               (Ojs.float_to_js x6074))
    let (set : 'tags this -> float -> float -> unit) =
      fun (x6075 : 'tags this) ->
        fun (x6077 : float) ->
          fun (x6078 : float) ->
            Ojs.set_prop (this_to_js Obj.magic x6075) (Ojs.float_to_js x6077)
              (Ojs.float_to_js x6078)
    let (create : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Float64Array") [||])
    let (create' : float Iterable.t -> t) =
      fun (x6079 : float Iterable.t) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Float64Array")
             [|(Iterable.t_to_js Ojs.float_to_js x6079)|])
    let (from :
      arrayLike:float Iterable.t ->
        ?mapfn:(v:float -> k:float -> float) -> ?thisArg:any -> unit -> t)
      =
      fun ~arrayLike:(x6081 : float Iterable.t) ->
        fun ?mapfn:(x6082 : (v:float -> k:float -> float) option) ->
          fun ?thisArg:(x6083 : any option) ->
            fun () ->
              t_of_js
                (let x6090 = Ojs.get_prop_ascii Ojs.global "Float64Array" in
                 Ojs.call (Ojs.get_prop_ascii x6090 "from") "apply"
                   [|x6090;((let x6084 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6084 "push"
                                  [|(Iterable.t_to_js Ojs.float_to_js x6081)|]);
                             (match x6082 with
                              | Some x6086 ->
                                  ignore
                                    (Ojs.call x6084 "push"
                                       [|(Ojs.fun_to_js 2
                                            (fun (x6087 : Ojs.t) ->
                                               fun (x6088 : Ojs.t) ->
                                                 Ojs.float_to_js
                                                   (x6086
                                                      ~v:(Ojs.float_of_js
                                                            x6087)
                                                      ~k:(Ojs.float_of_js
                                                            x6088))))|])
                              | None -> ());
                             (match x6083 with
                              | Some x6085 ->
                                  ignore
                                    (Ojs.call x6084 "push"
                                       [|(any_to_js x6085)|])
                              | None -> ());
                             x6084))|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Float64Array")
             "prototype")
    let (create'' : float -> t) =
      fun (x6091 : float) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Float64Array")
             [|(Ojs.float_to_js x6091)|])
    let (create''' :
      [ `U1 of float ArrayLike.t  | `U2 of ArrayBufferLike.t ] -> t) =
      fun (x6092 : [ `U1 of float ArrayLike.t  | `U2 of ArrayBufferLike.t ])
        ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Float64Array")
             [|((match x6092 with
                 | `U1 x6093 -> ArrayLike.t_to_js Ojs.float_to_js x6093
                 | `U2 x6095 -> ArrayBufferLike.t_to_js x6095))|])
    let (create'''' :
      buffer:ArrayBufferLike.t ->
        ?byteOffset:float -> ?length:float -> unit -> t)
      =
      fun ~buffer:(x6096 : ArrayBufferLike.t) ->
        fun ?byteOffset:(x6097 : float option) ->
          fun ?length:(x6098 : float option) ->
            fun () ->
              t_of_js
                (Ojs.new_obj_arr
                   (Ojs.get_prop_ascii Ojs.global "Float64Array")
                   (let x6099 =
                      Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                        [||] in
                    ignore
                      (Ojs.call x6099 "push"
                         [|(ArrayBufferLike.t_to_js x6096)|]);
                    (match x6097 with
                     | Some x6101 ->
                         ignore
                           (Ojs.call x6099 "push" [|(Ojs.float_to_js x6101)|])
                     | None -> ());
                    (match x6098 with
                     | Some x6100 ->
                         ignore
                           (Ojs.call x6099 "push" [|(Ojs.float_to_js x6100)|])
                     | None -> ());
                    x6099))
    let (bytes_per_element : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Float64Array")
             "BYTES_PER_ELEMENT")
    let (of_ : float list -> t) =
      fun (x6102 : float list) ->
        t_of_js
          (let x6105 = Ojs.get_prop_ascii Ojs.global "Float64Array" in
           Ojs.call (Ojs.get_prop_ascii x6105 "of") "apply"
             [|x6105;((let x6103 =
                         Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                           [||] in
                       List.iter
                         (fun (x6104 : float) ->
                            ignore
                              (Ojs.call x6103 "push"
                                 [|(Ojs.float_to_js x6104)|])) x6102;
                       x6103))|])
    let (from' : float ArrayLike.t -> t) =
      fun (x6106 : float ArrayLike.t) ->
        t_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Float64Array") "from"
             [|(ArrayLike.t_to_js Ojs.float_to_js x6106)|])
    let (from'' :
      arrayLike:'T ArrayLike.t ->
        mapfn:(v:'T -> k:float -> float) -> ?thisArg:any -> unit -> t)
      =
      fun ~arrayLike:(x6108 : 'T ArrayLike.t) ->
        fun ~mapfn:(x6109 : v:'T -> k:float -> float) ->
          fun ?thisArg:(x6110 : any option) ->
            fun () ->
              t_of_js
                (let x6116 = Ojs.get_prop_ascii Ojs.global "Float64Array" in
                 Ojs.call (Ojs.get_prop_ascii x6116 "from") "apply"
                   [|x6116;((let x6111 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6111 "push"
                                  [|(ArrayLike.t_to_js Obj.magic x6108)|]);
                             ignore
                               (Ojs.call x6111 "push"
                                  [|(Ojs.fun_to_js 2
                                       (fun (x6113 : Ojs.t) ->
                                          fun (x6114 : Ojs.t) ->
                                            Ojs.float_to_js
                                              (x6109 ~v:(Obj.magic x6113)
                                                 ~k:(Ojs.float_of_js x6114))))|]);
                             (match x6110 with
                              | Some x6112 ->
                                  ignore
                                    (Ojs.call x6111 "push"
                                       [|(any_to_js x6112)|])
                              | None -> ());
                             x6111))|])
    let cast_from = Obj.magic
  end
module Float32Array =
  struct
    type t =
      [ `Float32Array  | float ArrayLike.tags_1
      | float IterableIterator.tags_1] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x6118 : Ojs.t) -> t_of_js x6118
    and t_0_to_js : t_0 -> Ojs.t = fun (x6117 : t) -> t_to_js x6117
    type tags =
      [ `Float32Array  | float ArrayLike.tags_1
      | float IterableIterator.tags_1]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `Float32Array ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x6121 : Ojs.t) -> intf_of_js __tags_of_js x6121
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x6119 : __tags intf) -> intf_to_js __tags_to_js x6119
    let (at : 'tags this -> index:float -> float option) =
      fun (x6124 : 'tags this) ->
        fun ~index:(x6123 : float) ->
          Ojs.option_of_js Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x6124) "at"
               [|(Ojs.float_to_js x6123)|])
    let (includes :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> bool)
      =
      fun (x6131 : 'tags this) ->
        fun ~searchElement:(x6127 : float) ->
          fun ?fromIndex:(x6128 : float option) ->
            fun () ->
              Ojs.bool_of_js
                (let x6133 = this_to_js Obj.magic x6131 in
                 Ojs.call (Ojs.get_prop_ascii x6133 "includes") "apply"
                   [|x6133;((let x6129 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6129 "push"
                                  [|(Ojs.float_to_js x6127)|]);
                             (match x6128 with
                              | Some x6130 ->
                                  ignore
                                    (Ojs.call x6129 "push"
                                       [|(Ojs.float_to_js x6130)|])
                              | None -> ());
                             x6129))|])
    let (entries : 'tags this -> (float * float) IterableIterator.t) =
      fun (x6134 : 'tags this) ->
        IterableIterator.t_of_js
          (fun (x6136 : Ojs.t) ->
             let x6137 = x6136 in
             ((Ojs.float_of_js (Ojs.array_get x6137 0)),
               (Ojs.float_of_js (Ojs.array_get x6137 1))))
          (Ojs.call (this_to_js Obj.magic x6134) "entries" [||])
    let (keys : 'tags this -> float IterableIterator.t) =
      fun (x6138 : 'tags this) ->
        IterableIterator.t_of_js Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x6138) "keys" [||])
    let (values : 'tags this -> float IterableIterator.t) =
      fun (x6141 : 'tags this) ->
        IterableIterator.t_of_js Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x6141) "values" [||])
    let (get_BYTES_PER_ELEMENT : 'tags this -> float) =
      fun (x6144 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6144)
             "BYTES_PER_ELEMENT")
    let (get_buffer : 'tags this -> ArrayBufferLike.t) =
      fun (x6146 : 'tags this) ->
        ArrayBufferLike.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6146) "buffer")
    let (get_byteLength : 'tags this -> float) =
      fun (x6148 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6148) "byteLength")
    let (get_byteOffset : 'tags this -> float) =
      fun (x6150 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6150) "byteOffset")
    let (copyWithin :
      'tags this ->
        target:float -> start:float -> ?end_:float -> unit -> 'tags this)
      =
      fun (x6157 : 'tags this) ->
        fun ~target:(x6152 : float) ->
          fun ~start:(x6153 : float) ->
            fun ?end_:(x6154 : float option) ->
              fun () ->
                this_of_js Obj.magic
                  (let x6159 = this_to_js Obj.magic x6157 in
                   Ojs.call (Ojs.get_prop_ascii x6159 "copyWithin") "apply"
                     [|x6159;((let x6155 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x6155 "push"
                                    [|(Ojs.float_to_js x6152)|]);
                               ignore
                                 (Ojs.call x6155 "push"
                                    [|(Ojs.float_to_js x6153)|]);
                               (match x6154 with
                                | Some x6156 ->
                                    ignore
                                      (Ojs.call x6155 "push"
                                         [|(Ojs.float_to_js x6156)|])
                                | None -> ());
                               x6155))|])
    let (every :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x6168 : 'tags this) ->
        fun
          ~predicate:(x6161 :
                       value:float -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x6162 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x6170 = this_to_js Obj.magic x6168 in
                 Ojs.call (Ojs.get_prop_ascii x6170 "every") "apply"
                   [|x6170;((let x6163 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6163 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x6165 : Ojs.t) ->
                                          fun (x6166 : Ojs.t) ->
                                            fun (x6167 : Ojs.t) ->
                                              unknown_to_js
                                                (x6161
                                                   ~value:(Ojs.float_of_js
                                                             x6165)
                                                   ~index:(Ojs.float_of_js
                                                             x6166)
                                                   ~array:(t_of_js x6167))))|]);
                             (match x6162 with
                              | Some x6164 ->
                                  ignore
                                    (Ojs.call x6163 "push"
                                       [|(any_to_js x6164)|])
                              | None -> ());
                             x6163))|])
    let (fill :
      'tags this ->
        value:float -> ?start:float -> ?end_:float -> unit -> 'tags this)
      =
      fun (x6177 : 'tags this) ->
        fun ~value:(x6171 : float) ->
          fun ?start:(x6172 : float option) ->
            fun ?end_:(x6173 : float option) ->
              fun () ->
                this_of_js Obj.magic
                  (let x6179 = this_to_js Obj.magic x6177 in
                   Ojs.call (Ojs.get_prop_ascii x6179 "fill") "apply"
                     [|x6179;((let x6174 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x6174 "push"
                                    [|(Ojs.float_to_js x6171)|]);
                               (match x6172 with
                                | Some x6176 ->
                                    ignore
                                      (Ojs.call x6174 "push"
                                         [|(Ojs.float_to_js x6176)|])
                                | None -> ());
                               (match x6173 with
                                | Some x6175 ->
                                    ignore
                                      (Ojs.call x6174 "push"
                                         [|(Ojs.float_to_js x6175)|])
                                | None -> ());
                               x6174))|])
    let (filter :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> any) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x6188 : 'tags this) ->
        fun ~predicate:(x6181 : value:float -> index:float -> array:t -> any)
          ->
          fun ?thisArg:(x6182 : any option) ->
            fun () ->
              t_of_js
                (let x6190 = this_to_js Obj.magic x6188 in
                 Ojs.call (Ojs.get_prop_ascii x6190 "filter") "apply"
                   [|x6190;((let x6183 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6183 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x6185 : Ojs.t) ->
                                          fun (x6186 : Ojs.t) ->
                                            fun (x6187 : Ojs.t) ->
                                              any_to_js
                                                (x6181
                                                   ~value:(Ojs.float_of_js
                                                             x6185)
                                                   ~index:(Ojs.float_of_js
                                                             x6186)
                                                   ~array:(t_of_js x6187))))|]);
                             (match x6182 with
                              | Some x6184 ->
                                  ignore
                                    (Ojs.call x6183 "push"
                                       [|(any_to_js x6184)|])
                              | None -> ());
                             x6183))|])
    let (find :
      'tags this ->
        predicate:(value:float -> index:float -> obj:t -> bool) ->
          ?thisArg:any -> unit -> float option)
      =
      fun (x6198 : 'tags this) ->
        fun ~predicate:(x6191 : value:float -> index:float -> obj:t -> bool)
          ->
          fun ?thisArg:(x6192 : any option) ->
            fun () ->
              Ojs.option_of_js Ojs.float_of_js
                (let x6200 = this_to_js Obj.magic x6198 in
                 Ojs.call (Ojs.get_prop_ascii x6200 "find") "apply"
                   [|x6200;((let x6193 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6193 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x6195 : Ojs.t) ->
                                          fun (x6196 : Ojs.t) ->
                                            fun (x6197 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x6191
                                                   ~value:(Ojs.float_of_js
                                                             x6195)
                                                   ~index:(Ojs.float_of_js
                                                             x6196)
                                                   ~obj:(t_of_js x6197))))|]);
                             (match x6192 with
                              | Some x6194 ->
                                  ignore
                                    (Ojs.call x6193 "push"
                                       [|(any_to_js x6194)|])
                              | None -> ());
                             x6193))|])
    let (findIndex :
      'tags this ->
        predicate:(value:float -> index:float -> obj:t -> bool) ->
          ?thisArg:any -> unit -> float)
      =
      fun (x6209 : 'tags this) ->
        fun ~predicate:(x6202 : value:float -> index:float -> obj:t -> bool)
          ->
          fun ?thisArg:(x6203 : any option) ->
            fun () ->
              Ojs.float_of_js
                (let x6211 = this_to_js Obj.magic x6209 in
                 Ojs.call (Ojs.get_prop_ascii x6211 "findIndex") "apply"
                   [|x6211;((let x6204 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6204 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x6206 : Ojs.t) ->
                                          fun (x6207 : Ojs.t) ->
                                            fun (x6208 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x6202
                                                   ~value:(Ojs.float_of_js
                                                             x6206)
                                                   ~index:(Ojs.float_of_js
                                                             x6207)
                                                   ~obj:(t_of_js x6208))))|]);
                             (match x6203 with
                              | Some x6205 ->
                                  ignore
                                    (Ojs.call x6204 "push"
                                       [|(any_to_js x6205)|])
                              | None -> ());
                             x6204))|])
    let (forEach :
      'tags this ->
        callbackfn:(value:float -> index:float -> array:t -> unit) ->
          ?thisArg:any -> unit -> unit)
      =
      fun (x6219 : 'tags this) ->
        fun
          ~callbackfn:(x6212 : value:float -> index:float -> array:t -> unit)
          ->
          fun ?thisArg:(x6213 : any option) ->
            fun () ->
              ignore
                (let x6221 = this_to_js Obj.magic x6219 in
                 Ojs.call (Ojs.get_prop_ascii x6221 "forEach") "apply"
                   [|x6221;((let x6214 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6214 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x6216 : Ojs.t) ->
                                          fun (x6217 : Ojs.t) ->
                                            fun (x6218 : Ojs.t) ->
                                              x6212
                                                ~value:(Ojs.float_of_js x6216)
                                                ~index:(Ojs.float_of_js x6217)
                                                ~array:(t_of_js x6218)))|]);
                             (match x6213 with
                              | Some x6215 ->
                                  ignore
                                    (Ojs.call x6214 "push"
                                       [|(any_to_js x6215)|])
                              | None -> ());
                             x6214))|])
    let (indexOf :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> float)
      =
      fun (x6226 : 'tags this) ->
        fun ~searchElement:(x6222 : float) ->
          fun ?fromIndex:(x6223 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x6228 = this_to_js Obj.magic x6226 in
                 Ojs.call (Ojs.get_prop_ascii x6228 "indexOf") "apply"
                   [|x6228;((let x6224 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6224 "push"
                                  [|(Ojs.float_to_js x6222)|]);
                             (match x6223 with
                              | Some x6225 ->
                                  ignore
                                    (Ojs.call x6224 "push"
                                       [|(Ojs.float_to_js x6225)|])
                              | None -> ());
                             x6224))|])
    let (join : 'tags this -> ?separator:string -> unit -> string) =
      fun (x6232 : 'tags this) ->
        fun ?separator:(x6229 : string option) ->
          fun () ->
            Ojs.string_of_js
              (let x6234 = this_to_js Obj.magic x6232 in
               Ojs.call (Ojs.get_prop_ascii x6234 "join") "apply"
                 [|x6234;((let x6230 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x6229 with
                            | Some x6231 ->
                                ignore
                                  (Ojs.call x6230 "push"
                                     [|(Ojs.string_to_js x6231)|])
                            | None -> ());
                           x6230))|])
    let (lastIndexOf :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> float)
      =
      fun (x6239 : 'tags this) ->
        fun ~searchElement:(x6235 : float) ->
          fun ?fromIndex:(x6236 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x6241 = this_to_js Obj.magic x6239 in
                 Ojs.call (Ojs.get_prop_ascii x6241 "lastIndexOf") "apply"
                   [|x6241;((let x6237 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6237 "push"
                                  [|(Ojs.float_to_js x6235)|]);
                             (match x6236 with
                              | Some x6238 ->
                                  ignore
                                    (Ojs.call x6237 "push"
                                       [|(Ojs.float_to_js x6238)|])
                              | None -> ());
                             x6237))|])
    let (get_length : 'tags this -> float) =
      fun (x6242 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6242) "length")
    let (map :
      'tags this ->
        callbackfn:(value:float -> index:float -> array:t -> float) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x6251 : 'tags this) ->
        fun
          ~callbackfn:(x6244 :
                        value:float -> index:float -> array:t -> float)
          ->
          fun ?thisArg:(x6245 : any option) ->
            fun () ->
              t_of_js
                (let x6253 = this_to_js Obj.magic x6251 in
                 Ojs.call (Ojs.get_prop_ascii x6253 "map") "apply"
                   [|x6253;((let x6246 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6246 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x6248 : Ojs.t) ->
                                          fun (x6249 : Ojs.t) ->
                                            fun (x6250 : Ojs.t) ->
                                              Ojs.float_to_js
                                                (x6244
                                                   ~value:(Ojs.float_of_js
                                                             x6248)
                                                   ~index:(Ojs.float_of_js
                                                             x6249)
                                                   ~array:(t_of_js x6250))))|]);
                             (match x6245 with
                              | Some x6247 ->
                                  ignore
                                    (Ojs.call x6246 "push"
                                       [|(any_to_js x6247)|])
                              | None -> ());
                             x6246))|])
    let (reduce :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> float)
      =
      fun (x6259 : 'tags this) ->
        fun
          ~callbackfn:(x6254 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x6259) "reduce"
               [|(Ojs.fun_to_js 4
                    (fun (x6255 : Ojs.t) ->
                       fun (x6256 : Ojs.t) ->
                         fun (x6257 : Ojs.t) ->
                           fun (x6258 : Ojs.t) ->
                             Ojs.float_to_js
                               (x6254 ~previousValue:(Ojs.float_of_js x6255)
                                  ~currentValue:(Ojs.float_of_js x6256)
                                  ~currentIndex:(Ojs.float_of_js x6257)
                                  ~array:(t_of_js x6258))))|])
    let (reduce' :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> initialValue:float -> float)
      =
      fun (x6267 : 'tags this) ->
        fun
          ~callbackfn:(x6261 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          fun ~initialValue:(x6266 : float) ->
            Ojs.float_of_js
              (Ojs.call (this_to_js Obj.magic x6267) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x6262 : Ojs.t) ->
                         fun (x6263 : Ojs.t) ->
                           fun (x6264 : Ojs.t) ->
                             fun (x6265 : Ojs.t) ->
                               Ojs.float_to_js
                                 (x6261
                                    ~previousValue:(Ojs.float_of_js x6262)
                                    ~currentValue:(Ojs.float_of_js x6263)
                                    ~currentIndex:(Ojs.float_of_js x6264)
                                    ~array:(t_of_js x6265))));(Ojs.float_to_js
                                                                 x6266)|])
    let (reduce'' :
      'tags this ->
        callbackfn:(previousValue:'U ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x6275 : 'tags this) ->
        fun
          ~callbackfn:(x6269 :
                        previousValue:'U ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x6274 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic x6275) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x6270 : Ojs.t) ->
                         fun (x6271 : Ojs.t) ->
                           fun (x6272 : Ojs.t) ->
                             fun (x6273 : Ojs.t) ->
                               Obj.magic
                                 (x6269 ~previousValue:(Obj.magic x6270)
                                    ~currentValue:(Ojs.float_of_js x6271)
                                    ~currentIndex:(Ojs.float_of_js x6272)
                                    ~array:(t_of_js x6273))));(Obj.magic
                                                                 x6274)|])
    let (reduceRight :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> float)
      =
      fun (x6282 : 'tags this) ->
        fun
          ~callbackfn:(x6277 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x6282) "reduceRight"
               [|(Ojs.fun_to_js 4
                    (fun (x6278 : Ojs.t) ->
                       fun (x6279 : Ojs.t) ->
                         fun (x6280 : Ojs.t) ->
                           fun (x6281 : Ojs.t) ->
                             Ojs.float_to_js
                               (x6277 ~previousValue:(Ojs.float_of_js x6278)
                                  ~currentValue:(Ojs.float_of_js x6279)
                                  ~currentIndex:(Ojs.float_of_js x6280)
                                  ~array:(t_of_js x6281))))|])
    let (reduceRight' :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> initialValue:float -> float)
      =
      fun (x6290 : 'tags this) ->
        fun
          ~callbackfn:(x6284 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          fun ~initialValue:(x6289 : float) ->
            Ojs.float_of_js
              (Ojs.call (this_to_js Obj.magic x6290) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x6285 : Ojs.t) ->
                         fun (x6286 : Ojs.t) ->
                           fun (x6287 : Ojs.t) ->
                             fun (x6288 : Ojs.t) ->
                               Ojs.float_to_js
                                 (x6284
                                    ~previousValue:(Ojs.float_of_js x6285)
                                    ~currentValue:(Ojs.float_of_js x6286)
                                    ~currentIndex:(Ojs.float_of_js x6287)
                                    ~array:(t_of_js x6288))));(Ojs.float_to_js
                                                                 x6289)|])
    let (reduceRight'' :
      'tags this ->
        callbackfn:(previousValue:'U ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x6298 : 'tags this) ->
        fun
          ~callbackfn:(x6292 :
                        previousValue:'U ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x6297 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic x6298) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x6293 : Ojs.t) ->
                         fun (x6294 : Ojs.t) ->
                           fun (x6295 : Ojs.t) ->
                             fun (x6296 : Ojs.t) ->
                               Obj.magic
                                 (x6292 ~previousValue:(Obj.magic x6293)
                                    ~currentValue:(Ojs.float_of_js x6294)
                                    ~currentIndex:(Ojs.float_of_js x6295)
                                    ~array:(t_of_js x6296))));(Obj.magic
                                                                 x6297)|])
    let (reverse : 'tags this -> t) =
      fun (x6300 : 'tags this) ->
        t_of_js (Ojs.call (this_to_js Obj.magic x6300) "reverse" [||])
    let (set_ :
      'tags this -> array:float ArrayLike.t -> ?offset:float -> unit -> unit)
      =
      fun (x6307 : 'tags this) ->
        fun ~array:(x6302 : float ArrayLike.t) ->
          fun ?offset:(x6303 : float option) ->
            fun () ->
              ignore
                (let x6309 = this_to_js Obj.magic x6307 in
                 Ojs.call (Ojs.get_prop_ascii x6309 "set") "apply"
                   [|x6309;((let x6304 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6304 "push"
                                  [|(ArrayLike.t_to_js Ojs.float_to_js x6302)|]);
                             (match x6303 with
                              | Some x6305 ->
                                  ignore
                                    (Ojs.call x6304 "push"
                                       [|(Ojs.float_to_js x6305)|])
                              | None -> ());
                             x6304))|])
    let (slice : 'tags this -> ?start:float -> ?end_:float -> unit -> t) =
      fun (x6315 : 'tags this) ->
        fun ?start:(x6310 : float option) ->
          fun ?end_:(x6311 : float option) ->
            fun () ->
              t_of_js
                (let x6317 = this_to_js Obj.magic x6315 in
                 Ojs.call (Ojs.get_prop_ascii x6317 "slice") "apply"
                   [|x6317;((let x6312 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x6310 with
                              | Some x6314 ->
                                  ignore
                                    (Ojs.call x6312 "push"
                                       [|(Ojs.float_to_js x6314)|])
                              | None -> ());
                             (match x6311 with
                              | Some x6313 ->
                                  ignore
                                    (Ojs.call x6312 "push"
                                       [|(Ojs.float_to_js x6313)|])
                              | None -> ());
                             x6312))|])
    let (some :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x6325 : 'tags this) ->
        fun
          ~predicate:(x6318 :
                       value:float -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x6319 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x6327 = this_to_js Obj.magic x6325 in
                 Ojs.call (Ojs.get_prop_ascii x6327 "some") "apply"
                   [|x6327;((let x6320 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6320 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x6322 : Ojs.t) ->
                                          fun (x6323 : Ojs.t) ->
                                            fun (x6324 : Ojs.t) ->
                                              unknown_to_js
                                                (x6318
                                                   ~value:(Ojs.float_of_js
                                                             x6322)
                                                   ~index:(Ojs.float_of_js
                                                             x6323)
                                                   ~array:(t_of_js x6324))))|]);
                             (match x6319 with
                              | Some x6321 ->
                                  ignore
                                    (Ojs.call x6320 "push"
                                       [|(any_to_js x6321)|])
                              | None -> ());
                             x6320))|])
    let (sort :
      'tags this ->
        ?compareFn:(a:float -> b:float -> float) -> unit -> 'tags this)
      =
      fun (x6333 : 'tags this) ->
        fun ?compareFn:(x6328 : (a:float -> b:float -> float) option) ->
          fun () ->
            this_of_js Obj.magic
              (let x6335 = this_to_js Obj.magic x6333 in
               Ojs.call (Ojs.get_prop_ascii x6335 "sort") "apply"
                 [|x6335;((let x6329 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x6328 with
                            | Some x6330 ->
                                ignore
                                  (Ojs.call x6329 "push"
                                     [|(Ojs.fun_to_js 2
                                          (fun (x6331 : Ojs.t) ->
                                             fun (x6332 : Ojs.t) ->
                                               Ojs.float_to_js
                                                 (x6330
                                                    ~a:(Ojs.float_of_js x6331)
                                                    ~b:(Ojs.float_of_js x6332))))|])
                            | None -> ());
                           x6329))|])
    let (subarray : 'tags this -> ?begin_:float -> ?end_:float -> unit -> t)
      =
      fun (x6342 : 'tags this) ->
        fun ?begin_:(x6337 : float option) ->
          fun ?end_:(x6338 : float option) ->
            fun () ->
              t_of_js
                (let x6344 = this_to_js Obj.magic x6342 in
                 Ojs.call (Ojs.get_prop_ascii x6344 "subarray") "apply"
                   [|x6344;((let x6339 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x6337 with
                              | Some x6341 ->
                                  ignore
                                    (Ojs.call x6339 "push"
                                       [|(Ojs.float_to_js x6341)|])
                              | None -> ());
                             (match x6338 with
                              | Some x6340 ->
                                  ignore
                                    (Ojs.call x6339 "push"
                                       [|(Ojs.float_to_js x6340)|])
                              | None -> ());
                             x6339))|])
    let (toLocaleString : 'tags this -> string) =
      fun (x6345 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x6345) "toLocaleString" [||])
    let (toString : 'tags this -> string) =
      fun (x6347 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x6347) "toString" [||])
    let (valueOf : 'tags this -> t) =
      fun (x6349 : 'tags this) ->
        t_of_js (Ojs.call (this_to_js Obj.magic x6349) "valueOf" [||])
    let (get : 'tags this -> float -> float) =
      fun (x6351 : 'tags this) ->
        fun (x6353 : float) ->
          Ojs.float_of_js
            (Ojs.get_prop (this_to_js Obj.magic x6351)
               (Ojs.float_to_js x6353))
    let (set : 'tags this -> float -> float -> unit) =
      fun (x6354 : 'tags this) ->
        fun (x6356 : float) ->
          fun (x6357 : float) ->
            Ojs.set_prop (this_to_js Obj.magic x6354) (Ojs.float_to_js x6356)
              (Ojs.float_to_js x6357)
    let (create : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Float32Array") [||])
    let (create' : float Iterable.t -> t) =
      fun (x6358 : float Iterable.t) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Float32Array")
             [|(Iterable.t_to_js Ojs.float_to_js x6358)|])
    let (from :
      arrayLike:float Iterable.t ->
        ?mapfn:(v:float -> k:float -> float) -> ?thisArg:any -> unit -> t)
      =
      fun ~arrayLike:(x6360 : float Iterable.t) ->
        fun ?mapfn:(x6361 : (v:float -> k:float -> float) option) ->
          fun ?thisArg:(x6362 : any option) ->
            fun () ->
              t_of_js
                (let x6369 = Ojs.get_prop_ascii Ojs.global "Float32Array" in
                 Ojs.call (Ojs.get_prop_ascii x6369 "from") "apply"
                   [|x6369;((let x6363 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6363 "push"
                                  [|(Iterable.t_to_js Ojs.float_to_js x6360)|]);
                             (match x6361 with
                              | Some x6365 ->
                                  ignore
                                    (Ojs.call x6363 "push"
                                       [|(Ojs.fun_to_js 2
                                            (fun (x6366 : Ojs.t) ->
                                               fun (x6367 : Ojs.t) ->
                                                 Ojs.float_to_js
                                                   (x6365
                                                      ~v:(Ojs.float_of_js
                                                            x6366)
                                                      ~k:(Ojs.float_of_js
                                                            x6367))))|])
                              | None -> ());
                             (match x6362 with
                              | Some x6364 ->
                                  ignore
                                    (Ojs.call x6363 "push"
                                       [|(any_to_js x6364)|])
                              | None -> ());
                             x6363))|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Float32Array")
             "prototype")
    let (create'' : float -> t) =
      fun (x6370 : float) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Float32Array")
             [|(Ojs.float_to_js x6370)|])
    let (create''' :
      [ `U1 of float ArrayLike.t  | `U2 of ArrayBufferLike.t ] -> t) =
      fun (x6371 : [ `U1 of float ArrayLike.t  | `U2 of ArrayBufferLike.t ])
        ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Float32Array")
             [|((match x6371 with
                 | `U1 x6372 -> ArrayLike.t_to_js Ojs.float_to_js x6372
                 | `U2 x6374 -> ArrayBufferLike.t_to_js x6374))|])
    let (create'''' :
      buffer:ArrayBufferLike.t ->
        ?byteOffset:float -> ?length:float -> unit -> t)
      =
      fun ~buffer:(x6375 : ArrayBufferLike.t) ->
        fun ?byteOffset:(x6376 : float option) ->
          fun ?length:(x6377 : float option) ->
            fun () ->
              t_of_js
                (Ojs.new_obj_arr
                   (Ojs.get_prop_ascii Ojs.global "Float32Array")
                   (let x6378 =
                      Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                        [||] in
                    ignore
                      (Ojs.call x6378 "push"
                         [|(ArrayBufferLike.t_to_js x6375)|]);
                    (match x6376 with
                     | Some x6380 ->
                         ignore
                           (Ojs.call x6378 "push" [|(Ojs.float_to_js x6380)|])
                     | None -> ());
                    (match x6377 with
                     | Some x6379 ->
                         ignore
                           (Ojs.call x6378 "push" [|(Ojs.float_to_js x6379)|])
                     | None -> ());
                    x6378))
    let (bytes_per_element : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Float32Array")
             "BYTES_PER_ELEMENT")
    let (of_ : float list -> t) =
      fun (x6381 : float list) ->
        t_of_js
          (let x6384 = Ojs.get_prop_ascii Ojs.global "Float32Array" in
           Ojs.call (Ojs.get_prop_ascii x6384 "of") "apply"
             [|x6384;((let x6382 =
                         Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                           [||] in
                       List.iter
                         (fun (x6383 : float) ->
                            ignore
                              (Ojs.call x6382 "push"
                                 [|(Ojs.float_to_js x6383)|])) x6381;
                       x6382))|])
    let (from' : float ArrayLike.t -> t) =
      fun (x6385 : float ArrayLike.t) ->
        t_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Float32Array") "from"
             [|(ArrayLike.t_to_js Ojs.float_to_js x6385)|])
    let (from'' :
      arrayLike:'T ArrayLike.t ->
        mapfn:(v:'T -> k:float -> float) -> ?thisArg:any -> unit -> t)
      =
      fun ~arrayLike:(x6387 : 'T ArrayLike.t) ->
        fun ~mapfn:(x6388 : v:'T -> k:float -> float) ->
          fun ?thisArg:(x6389 : any option) ->
            fun () ->
              t_of_js
                (let x6395 = Ojs.get_prop_ascii Ojs.global "Float32Array" in
                 Ojs.call (Ojs.get_prop_ascii x6395 "from") "apply"
                   [|x6395;((let x6390 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6390 "push"
                                  [|(ArrayLike.t_to_js Obj.magic x6387)|]);
                             ignore
                               (Ojs.call x6390 "push"
                                  [|(Ojs.fun_to_js 2
                                       (fun (x6392 : Ojs.t) ->
                                          fun (x6393 : Ojs.t) ->
                                            Ojs.float_to_js
                                              (x6388 ~v:(Obj.magic x6392)
                                                 ~k:(Ojs.float_of_js x6393))))|]);
                             (match x6389 with
                              | Some x6391 ->
                                  ignore
                                    (Ojs.call x6390 "push"
                                       [|(any_to_js x6391)|])
                              | None -> ());
                             x6390))|])
    let cast_from = Obj.magic
  end
module FinalizationRegistry =
  struct
    type 'T t = [ `FinalizationRegistry of 'T ] intf
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun _T -> Obj.magic
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun _T -> Obj.magic
    type 'T t_1 = 'T t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 =
      fun (type __T) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x6398 : Ojs.t) -> t_of_js __T_of_js x6398
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t =
      fun (type __T) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x6396 : __T t) -> t_to_js __T_to_js x6396
    type t_0 = any t
    let rec t_0_of_js : Ojs.t -> t_0 =
      fun (x6402 : Ojs.t) -> t_of_js any_of_js x6402
    and t_0_to_js : t_0 -> Ojs.t =
      fun (x6400 : any t) -> t_to_js any_to_js x6400
    type 'T tags = [ `FinalizationRegistry of 'T ]
    type 'T tags_1 = 'T tags
    type tags_0 = any tags
    type ('tags, 'T) this =
      'tags intf constraint 'tags = [> `FinalizationRegistry of 'T ]
    let rec this_of_js :
      'tags 'T .
        (Ojs.t -> 'tags) -> (Ojs.t -> 'T) -> Ojs.t -> ('tags, 'T) this
      =
      fun (type __tags) ->
        fun (type __T) ->
          fun (__tags_of_js : Ojs.t -> __tags) ->
            fun (__T_of_js : Ojs.t -> __T) ->
              fun (x6406 : Ojs.t) -> intf_of_js __tags_of_js x6406
    and this_to_js :
      'tags 'T .
        ('tags -> Ojs.t) -> ('T -> Ojs.t) -> ('tags, 'T) this -> Ojs.t
      =
      fun (type __tags) ->
        fun (type __T) ->
          fun (__tags_to_js : __tags -> Ojs.t) ->
            fun (__T_to_js : __T -> Ojs.t) ->
              fun (x6404 : __tags intf) -> intf_to_js __tags_to_js x6404
    let (register :
      ('tags, 'T) this ->
        target:untyped_object ->
          heldValue:any -> ?unregisterToken:untyped_object -> unit -> unit)
      =
      fun (x6413 : ('tags, 'T) this) ->
        fun ~target:(x6408 : untyped_object) ->
          fun ~heldValue:(x6409 : any) ->
            fun ?unregisterToken:(x6410 : untyped_object option) ->
              fun () ->
                ignore
                  (let x6416 = this_to_js Obj.magic Obj.magic x6413 in
                   Ojs.call (Ojs.get_prop_ascii x6416 "register") "apply"
                     [|x6416;((let x6411 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x6411 "push"
                                    [|(untyped_object_to_js x6408)|]);
                               ignore
                                 (Ojs.call x6411 "push" [|(any_to_js x6409)|]);
                               (match x6410 with
                                | Some x6412 ->
                                    ignore
                                      (Ojs.call x6411 "push"
                                         [|(untyped_object_to_js x6412)|])
                                | None -> ());
                               x6411))|])
    let (unregister :
      ('tags, 'T) this -> unregisterToken:untyped_object -> unit) =
      fun (x6418 : ('tags, 'T) this) ->
        fun ~unregisterToken:(x6417 : untyped_object) ->
          ignore
            (Ojs.call (this_to_js Obj.magic Obj.magic x6418) "unregister"
               [|(untyped_object_to_js x6417)|])
    let (register' :
      ('tags, 'T) this ->
        target:untyped_object ->
          heldValue:'T -> ?unregisterToken:untyped_object -> unit -> unit)
      =
      fun (x6426 : ('tags, 'T) this) ->
        fun ~target:(x6421 : untyped_object) ->
          fun ~heldValue:(x6422 : 'T) ->
            fun ?unregisterToken:(x6423 : untyped_object option) ->
              fun () ->
                ignore
                  (let x6429 = this_to_js Obj.magic Obj.magic x6426 in
                   Ojs.call (Ojs.get_prop_ascii x6429 "register") "apply"
                     [|x6429;((let x6424 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x6424 "push"
                                    [|(untyped_object_to_js x6421)|]);
                               ignore
                                 (Ojs.call x6424 "push" [|(Obj.magic x6422)|]);
                               (match x6423 with
                                | Some x6425 ->
                                    ignore
                                      (Ojs.call x6424 "push"
                                         [|(untyped_object_to_js x6425)|])
                                | None -> ());
                               x6424))|])
    let (unregister' :
      ('tags, 'T) this -> unregisterToken:untyped_object -> unit) =
      fun (x6431 : ('tags, 'T) this) ->
        fun ~unregisterToken:(x6430 : untyped_object) ->
          ignore
            (Ojs.call (this_to_js Obj.magic Obj.magic x6431) "unregister"
               [|(untyped_object_to_js x6430)|])
    let (prototype : unit -> t_0) =
      fun () ->
        t_0_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "FinalizationRegistry")
             "prototype")
    let (create : (any -> unit) -> t_0) =
      fun (x6434 : any -> unit) ->
        t_0_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "FinalizationRegistry")
             [|(Ojs.fun_to_js 1
                  (fun (x6435 : Ojs.t) -> x6434 (any_of_js x6435)))|])
    let (prototype' : unit -> any t) =
      fun () ->
        t_of_js any_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "FinalizationRegistry")
             "prototype")
    let (create' : ('T -> unit) -> 'T t) =
      fun (x6437 : 'T -> unit) ->
        t_of_js Obj.magic
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "FinalizationRegistry")
             [|(Ojs.fun_to_js 1
                  (fun (x6438 : Ojs.t) -> x6437 (Obj.magic x6438)))|])
    let cast_from = Obj.magic
  end
module Extract =
  struct
    type ('T, 'U) t = any
    let rec t_of_js :
      'T 'U . (Ojs.t -> 'T) -> (Ojs.t -> 'U) -> Ojs.t -> ('T, 'U) t =
      fun (type __T) ->
        fun (type __U) ->
          fun (__T_of_js : Ojs.t -> __T) ->
            fun (__U_of_js : Ojs.t -> __U) ->
              fun (x6441 : Ojs.t) -> any_of_js x6441
    and t_to_js :
      'T 'U . ('T -> Ojs.t) -> ('U -> Ojs.t) -> ('T, 'U) t -> Ojs.t =
      fun (type __T) ->
        fun (type __U) ->
          fun (__T_to_js : __T -> Ojs.t) ->
            fun (__U_to_js : __U -> Ojs.t) ->
              fun (x6440 : any) -> any_to_js x6440
    type ('T, 'U) t_2 = ('T, 'U) t
    let rec t_2_of_js :
      'T 'U . (Ojs.t -> 'T) -> (Ojs.t -> 'U) -> Ojs.t -> ('T, 'U) t_2 =
      fun (type __T) ->
        fun (type __U) ->
          fun (__T_of_js : Ojs.t -> __T) ->
            fun (__U_of_js : Ojs.t -> __U) ->
              fun (x6445 : Ojs.t) -> t_of_js __T_of_js __U_of_js x6445
    and t_2_to_js :
      'T 'U . ('T -> Ojs.t) -> ('U -> Ojs.t) -> ('T, 'U) t_2 -> Ojs.t =
      fun (type __T) ->
        fun (type __U) ->
          fun (__T_to_js : __T -> Ojs.t) ->
            fun (__U_to_js : __U -> Ojs.t) ->
              fun (x6442 : (__T, __U) t) -> t_to_js __T_to_js __U_to_js x6442
  end
module EvalError =
  struct
    type t = [ `Error  | `EvalError ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x6449 : Ojs.t) -> t_of_js x6449
    and t_0_to_js : t_0 -> Ojs.t = fun (x6448 : t) -> t_to_js x6448
    type tags = [ `Error  | `EvalError ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `EvalError ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x6452 : Ojs.t) -> intf_of_js __tags_of_js x6452
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x6450 : __tags intf) -> intf_to_js __tags_to_js x6450
    let (create : ?message:string -> ?options:ErrorOptions.t -> unit -> t) =
      fun ?message:(x6454 : string option) ->
        fun ?options:(x6455 : ErrorOptions.t option) ->
          fun () ->
            t_of_js
              (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "EvalError")
                 (let x6456 =
                    Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                  (match x6454 with
                   | Some x6458 ->
                       ignore
                         (Ojs.call x6456 "push" [|(Ojs.string_to_js x6458)|])
                   | None -> ());
                  (match x6455 with
                   | Some x6457 ->
                       ignore
                         (Ojs.call x6456 "push"
                            [|(ErrorOptions.t_to_js x6457)|])
                   | None -> ());
                  x6456))
    let (invoke : ?message:string -> ?options:ErrorOptions.t -> unit -> t) =
      fun ?message:(x6459 : string option) ->
        fun ?options:(x6460 : ErrorOptions.t option) ->
          fun () ->
            t_of_js
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "EvalError") "apply"
                 [|Ojs.null;((let x6461 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              (match x6459 with
                               | Some x6463 ->
                                   ignore
                                     (Ojs.call x6461 "push"
                                        [|(Ojs.string_to_js x6463)|])
                               | None -> ());
                              (match x6460 with
                               | Some x6462 ->
                                   ignore
                                     (Ojs.call x6461 "push"
                                        [|(ErrorOptions.t_to_js x6462)|])
                               | None -> ());
                              x6461))|])
    let (create' : ?message:string -> unit -> t) =
      fun ?message:(x6464 : string option) ->
        fun () ->
          t_of_js
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "EvalError")
               (let x6465 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x6464 with
                 | Some x6466 ->
                     ignore
                       (Ojs.call x6465 "push" [|(Ojs.string_to_js x6466)|])
                 | None -> ());
                x6465))
    let (invoke' : ?message:string -> unit -> t) =
      fun ?message:(x6467 : string option) ->
        fun () ->
          t_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "EvalError") "apply"
               [|Ojs.null;((let x6468 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x6467 with
                             | Some x6469 ->
                                 ignore
                                   (Ojs.call x6468 "push"
                                      [|(Ojs.string_to_js x6469)|])
                             | None -> ());
                            x6468))|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "EvalError")
             "prototype")
    let cast_from = Obj.magic
  end
module DataView =
  struct
    type t = [ `DataView ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x6471 : Ojs.t) -> t_of_js x6471
    and t_0_to_js : t_0 -> Ojs.t = fun (x6470 : t) -> t_to_js x6470
    type tags = [ `DataView ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `DataView ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x6474 : Ojs.t) -> intf_of_js __tags_of_js x6474
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x6472 : __tags intf) -> intf_to_js __tags_to_js x6472
    let (getBigInt64 :
      'tags this -> byteOffset:float -> ?littleEndian:bool -> unit -> bigint)
      =
      fun (x6480 : 'tags this) ->
        fun ~byteOffset:(x6476 : float) ->
          fun ?littleEndian:(x6477 : bool option) ->
            fun () ->
              bigint_of_js
                (let x6482 = this_to_js Obj.magic x6480 in
                 Ojs.call (Ojs.get_prop_ascii x6482 "getBigInt64") "apply"
                   [|x6482;((let x6478 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6478 "push"
                                  [|(Ojs.float_to_js x6476)|]);
                             (match x6477 with
                              | Some x6479 ->
                                  ignore
                                    (Ojs.call x6478 "push"
                                       [|(Ojs.bool_to_js x6479)|])
                              | None -> ());
                             x6478))|])
    let (getBigUint64 :
      'tags this -> byteOffset:float -> ?littleEndian:bool -> unit -> bigint)
      =
      fun (x6487 : 'tags this) ->
        fun ~byteOffset:(x6483 : float) ->
          fun ?littleEndian:(x6484 : bool option) ->
            fun () ->
              bigint_of_js
                (let x6489 = this_to_js Obj.magic x6487 in
                 Ojs.call (Ojs.get_prop_ascii x6489 "getBigUint64") "apply"
                   [|x6489;((let x6485 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6485 "push"
                                  [|(Ojs.float_to_js x6483)|]);
                             (match x6484 with
                              | Some x6486 ->
                                  ignore
                                    (Ojs.call x6485 "push"
                                       [|(Ojs.bool_to_js x6486)|])
                              | None -> ());
                             x6485))|])
    let (setBigInt64 :
      'tags this ->
        byteOffset:float ->
          value:bigint -> ?littleEndian:bool -> unit -> unit)
      =
      fun (x6495 : 'tags this) ->
        fun ~byteOffset:(x6490 : float) ->
          fun ~value:(x6491 : bigint) ->
            fun ?littleEndian:(x6492 : bool option) ->
              fun () ->
                ignore
                  (let x6497 = this_to_js Obj.magic x6495 in
                   Ojs.call (Ojs.get_prop_ascii x6497 "setBigInt64") "apply"
                     [|x6497;((let x6493 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x6493 "push"
                                    [|(Ojs.float_to_js x6490)|]);
                               ignore
                                 (Ojs.call x6493 "push"
                                    [|(bigint_to_js x6491)|]);
                               (match x6492 with
                                | Some x6494 ->
                                    ignore
                                      (Ojs.call x6493 "push"
                                         [|(Ojs.bool_to_js x6494)|])
                                | None -> ());
                               x6493))|])
    let (setBigUint64 :
      'tags this ->
        byteOffset:float ->
          value:bigint -> ?littleEndian:bool -> unit -> unit)
      =
      fun (x6503 : 'tags this) ->
        fun ~byteOffset:(x6498 : float) ->
          fun ~value:(x6499 : bigint) ->
            fun ?littleEndian:(x6500 : bool option) ->
              fun () ->
                ignore
                  (let x6505 = this_to_js Obj.magic x6503 in
                   Ojs.call (Ojs.get_prop_ascii x6505 "setBigUint64") "apply"
                     [|x6505;((let x6501 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x6501 "push"
                                    [|(Ojs.float_to_js x6498)|]);
                               ignore
                                 (Ojs.call x6501 "push"
                                    [|(bigint_to_js x6499)|]);
                               (match x6500 with
                                | Some x6502 ->
                                    ignore
                                      (Ojs.call x6501 "push"
                                         [|(Ojs.bool_to_js x6502)|])
                                | None -> ());
                               x6501))|])
    let (get_buffer : 'tags this -> ArrayBuffer.t) =
      fun (x6506 : 'tags this) ->
        ArrayBuffer.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6506) "buffer")
    let (get_byteLength : 'tags this -> float) =
      fun (x6508 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6508) "byteLength")
    let (get_byteOffset : 'tags this -> float) =
      fun (x6510 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6510) "byteOffset")
    let (getFloat32 :
      'tags this -> byteOffset:float -> ?littleEndian:bool -> unit -> float)
      =
      fun (x6516 : 'tags this) ->
        fun ~byteOffset:(x6512 : float) ->
          fun ?littleEndian:(x6513 : bool option) ->
            fun () ->
              Ojs.float_of_js
                (let x6518 = this_to_js Obj.magic x6516 in
                 Ojs.call (Ojs.get_prop_ascii x6518 "getFloat32") "apply"
                   [|x6518;((let x6514 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6514 "push"
                                  [|(Ojs.float_to_js x6512)|]);
                             (match x6513 with
                              | Some x6515 ->
                                  ignore
                                    (Ojs.call x6514 "push"
                                       [|(Ojs.bool_to_js x6515)|])
                              | None -> ());
                             x6514))|])
    let (getFloat64 :
      'tags this -> byteOffset:float -> ?littleEndian:bool -> unit -> float)
      =
      fun (x6523 : 'tags this) ->
        fun ~byteOffset:(x6519 : float) ->
          fun ?littleEndian:(x6520 : bool option) ->
            fun () ->
              Ojs.float_of_js
                (let x6525 = this_to_js Obj.magic x6523 in
                 Ojs.call (Ojs.get_prop_ascii x6525 "getFloat64") "apply"
                   [|x6525;((let x6521 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6521 "push"
                                  [|(Ojs.float_to_js x6519)|]);
                             (match x6520 with
                              | Some x6522 ->
                                  ignore
                                    (Ojs.call x6521 "push"
                                       [|(Ojs.bool_to_js x6522)|])
                              | None -> ());
                             x6521))|])
    let (getInt8 : 'tags this -> byteOffset:float -> float) =
      fun (x6527 : 'tags this) ->
        fun ~byteOffset:(x6526 : float) ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x6527) "getInt8"
               [|(Ojs.float_to_js x6526)|])
    let (getInt16 :
      'tags this -> byteOffset:float -> ?littleEndian:bool -> unit -> float)
      =
      fun (x6533 : 'tags this) ->
        fun ~byteOffset:(x6529 : float) ->
          fun ?littleEndian:(x6530 : bool option) ->
            fun () ->
              Ojs.float_of_js
                (let x6535 = this_to_js Obj.magic x6533 in
                 Ojs.call (Ojs.get_prop_ascii x6535 "getInt16") "apply"
                   [|x6535;((let x6531 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6531 "push"
                                  [|(Ojs.float_to_js x6529)|]);
                             (match x6530 with
                              | Some x6532 ->
                                  ignore
                                    (Ojs.call x6531 "push"
                                       [|(Ojs.bool_to_js x6532)|])
                              | None -> ());
                             x6531))|])
    let (getInt32 :
      'tags this -> byteOffset:float -> ?littleEndian:bool -> unit -> float)
      =
      fun (x6540 : 'tags this) ->
        fun ~byteOffset:(x6536 : float) ->
          fun ?littleEndian:(x6537 : bool option) ->
            fun () ->
              Ojs.float_of_js
                (let x6542 = this_to_js Obj.magic x6540 in
                 Ojs.call (Ojs.get_prop_ascii x6542 "getInt32") "apply"
                   [|x6542;((let x6538 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6538 "push"
                                  [|(Ojs.float_to_js x6536)|]);
                             (match x6537 with
                              | Some x6539 ->
                                  ignore
                                    (Ojs.call x6538 "push"
                                       [|(Ojs.bool_to_js x6539)|])
                              | None -> ());
                             x6538))|])
    let (getUint8 : 'tags this -> byteOffset:float -> float) =
      fun (x6544 : 'tags this) ->
        fun ~byteOffset:(x6543 : float) ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x6544) "getUint8"
               [|(Ojs.float_to_js x6543)|])
    let (getUint16 :
      'tags this -> byteOffset:float -> ?littleEndian:bool -> unit -> float)
      =
      fun (x6550 : 'tags this) ->
        fun ~byteOffset:(x6546 : float) ->
          fun ?littleEndian:(x6547 : bool option) ->
            fun () ->
              Ojs.float_of_js
                (let x6552 = this_to_js Obj.magic x6550 in
                 Ojs.call (Ojs.get_prop_ascii x6552 "getUint16") "apply"
                   [|x6552;((let x6548 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6548 "push"
                                  [|(Ojs.float_to_js x6546)|]);
                             (match x6547 with
                              | Some x6549 ->
                                  ignore
                                    (Ojs.call x6548 "push"
                                       [|(Ojs.bool_to_js x6549)|])
                              | None -> ());
                             x6548))|])
    let (getUint32 :
      'tags this -> byteOffset:float -> ?littleEndian:bool -> unit -> float)
      =
      fun (x6557 : 'tags this) ->
        fun ~byteOffset:(x6553 : float) ->
          fun ?littleEndian:(x6554 : bool option) ->
            fun () ->
              Ojs.float_of_js
                (let x6559 = this_to_js Obj.magic x6557 in
                 Ojs.call (Ojs.get_prop_ascii x6559 "getUint32") "apply"
                   [|x6559;((let x6555 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6555 "push"
                                  [|(Ojs.float_to_js x6553)|]);
                             (match x6554 with
                              | Some x6556 ->
                                  ignore
                                    (Ojs.call x6555 "push"
                                       [|(Ojs.bool_to_js x6556)|])
                              | None -> ());
                             x6555))|])
    let (setFloat32 :
      'tags this ->
        byteOffset:float -> value:float -> ?littleEndian:bool -> unit -> unit)
      =
      fun (x6565 : 'tags this) ->
        fun ~byteOffset:(x6560 : float) ->
          fun ~value:(x6561 : float) ->
            fun ?littleEndian:(x6562 : bool option) ->
              fun () ->
                ignore
                  (let x6567 = this_to_js Obj.magic x6565 in
                   Ojs.call (Ojs.get_prop_ascii x6567 "setFloat32") "apply"
                     [|x6567;((let x6563 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x6563 "push"
                                    [|(Ojs.float_to_js x6560)|]);
                               ignore
                                 (Ojs.call x6563 "push"
                                    [|(Ojs.float_to_js x6561)|]);
                               (match x6562 with
                                | Some x6564 ->
                                    ignore
                                      (Ojs.call x6563 "push"
                                         [|(Ojs.bool_to_js x6564)|])
                                | None -> ());
                               x6563))|])
    let (setFloat64 :
      'tags this ->
        byteOffset:float -> value:float -> ?littleEndian:bool -> unit -> unit)
      =
      fun (x6573 : 'tags this) ->
        fun ~byteOffset:(x6568 : float) ->
          fun ~value:(x6569 : float) ->
            fun ?littleEndian:(x6570 : bool option) ->
              fun () ->
                ignore
                  (let x6575 = this_to_js Obj.magic x6573 in
                   Ojs.call (Ojs.get_prop_ascii x6575 "setFloat64") "apply"
                     [|x6575;((let x6571 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x6571 "push"
                                    [|(Ojs.float_to_js x6568)|]);
                               ignore
                                 (Ojs.call x6571 "push"
                                    [|(Ojs.float_to_js x6569)|]);
                               (match x6570 with
                                | Some x6572 ->
                                    ignore
                                      (Ojs.call x6571 "push"
                                         [|(Ojs.bool_to_js x6572)|])
                                | None -> ());
                               x6571))|])
    let (setInt8 : 'tags this -> byteOffset:float -> value:float -> unit) =
      fun (x6578 : 'tags this) ->
        fun ~byteOffset:(x6576 : float) ->
          fun ~value:(x6577 : float) ->
            ignore
              (Ojs.call (this_to_js Obj.magic x6578) "setInt8"
                 [|(Ojs.float_to_js x6576);(Ojs.float_to_js x6577)|])
    let (setInt16 :
      'tags this ->
        byteOffset:float -> value:float -> ?littleEndian:bool -> unit -> unit)
      =
      fun (x6585 : 'tags this) ->
        fun ~byteOffset:(x6580 : float) ->
          fun ~value:(x6581 : float) ->
            fun ?littleEndian:(x6582 : bool option) ->
              fun () ->
                ignore
                  (let x6587 = this_to_js Obj.magic x6585 in
                   Ojs.call (Ojs.get_prop_ascii x6587 "setInt16") "apply"
                     [|x6587;((let x6583 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x6583 "push"
                                    [|(Ojs.float_to_js x6580)|]);
                               ignore
                                 (Ojs.call x6583 "push"
                                    [|(Ojs.float_to_js x6581)|]);
                               (match x6582 with
                                | Some x6584 ->
                                    ignore
                                      (Ojs.call x6583 "push"
                                         [|(Ojs.bool_to_js x6584)|])
                                | None -> ());
                               x6583))|])
    let (setInt32 :
      'tags this ->
        byteOffset:float -> value:float -> ?littleEndian:bool -> unit -> unit)
      =
      fun (x6593 : 'tags this) ->
        fun ~byteOffset:(x6588 : float) ->
          fun ~value:(x6589 : float) ->
            fun ?littleEndian:(x6590 : bool option) ->
              fun () ->
                ignore
                  (let x6595 = this_to_js Obj.magic x6593 in
                   Ojs.call (Ojs.get_prop_ascii x6595 "setInt32") "apply"
                     [|x6595;((let x6591 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x6591 "push"
                                    [|(Ojs.float_to_js x6588)|]);
                               ignore
                                 (Ojs.call x6591 "push"
                                    [|(Ojs.float_to_js x6589)|]);
                               (match x6590 with
                                | Some x6592 ->
                                    ignore
                                      (Ojs.call x6591 "push"
                                         [|(Ojs.bool_to_js x6592)|])
                                | None -> ());
                               x6591))|])
    let (setUint8 : 'tags this -> byteOffset:float -> value:float -> unit) =
      fun (x6598 : 'tags this) ->
        fun ~byteOffset:(x6596 : float) ->
          fun ~value:(x6597 : float) ->
            ignore
              (Ojs.call (this_to_js Obj.magic x6598) "setUint8"
                 [|(Ojs.float_to_js x6596);(Ojs.float_to_js x6597)|])
    let (setUint16 :
      'tags this ->
        byteOffset:float -> value:float -> ?littleEndian:bool -> unit -> unit)
      =
      fun (x6605 : 'tags this) ->
        fun ~byteOffset:(x6600 : float) ->
          fun ~value:(x6601 : float) ->
            fun ?littleEndian:(x6602 : bool option) ->
              fun () ->
                ignore
                  (let x6607 = this_to_js Obj.magic x6605 in
                   Ojs.call (Ojs.get_prop_ascii x6607 "setUint16") "apply"
                     [|x6607;((let x6603 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x6603 "push"
                                    [|(Ojs.float_to_js x6600)|]);
                               ignore
                                 (Ojs.call x6603 "push"
                                    [|(Ojs.float_to_js x6601)|]);
                               (match x6602 with
                                | Some x6604 ->
                                    ignore
                                      (Ojs.call x6603 "push"
                                         [|(Ojs.bool_to_js x6604)|])
                                | None -> ());
                               x6603))|])
    let (setUint32 :
      'tags this ->
        byteOffset:float -> value:float -> ?littleEndian:bool -> unit -> unit)
      =
      fun (x6613 : 'tags this) ->
        fun ~byteOffset:(x6608 : float) ->
          fun ~value:(x6609 : float) ->
            fun ?littleEndian:(x6610 : bool option) ->
              fun () ->
                ignore
                  (let x6615 = this_to_js Obj.magic x6613 in
                   Ojs.call (Ojs.get_prop_ascii x6615 "setUint32") "apply"
                     [|x6615;((let x6611 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x6611 "push"
                                    [|(Ojs.float_to_js x6608)|]);
                               ignore
                                 (Ojs.call x6611 "push"
                                    [|(Ojs.float_to_js x6609)|]);
                               (match x6610 with
                                | Some x6612 ->
                                    ignore
                                      (Ojs.call x6611 "push"
                                         [|(Ojs.bool_to_js x6612)|])
                                | None -> ());
                               x6611))|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "DataView")
             "prototype")
    let (create :
      buffer:ArrayBufferLike.t ->
        ?byteOffset:float -> ?byteLength:float -> unit -> t)
      =
      fun ~buffer:(x6616 : ArrayBufferLike.t) ->
        fun ?byteOffset:(x6617 : float option) ->
          fun ?byteLength:(x6618 : float option) ->
            fun () ->
              t_of_js
                (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "DataView")
                   (let x6619 =
                      Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                        [||] in
                    ignore
                      (Ojs.call x6619 "push"
                         [|(ArrayBufferLike.t_to_js x6616)|]);
                    (match x6617 with
                     | Some x6621 ->
                         ignore
                           (Ojs.call x6619 "push" [|(Ojs.float_to_js x6621)|])
                     | None -> ());
                    (match x6618 with
                     | Some x6620 ->
                         ignore
                           (Ojs.call x6619 "push" [|(Ojs.float_to_js x6620)|])
                     | None -> ());
                    x6619))
    let cast_from = Obj.magic
  end
module ConstructorParameters =
  struct
    module AnonymousInterface8 =
      struct
        type t = Ojs.t
        let rec t_of_js : Ojs.t -> t = fun (x6623 : Ojs.t) -> x6623
        and t_to_js : t -> Ojs.t = fun (x6622 : Ojs.t) -> x6622
        let (create : t -> args:any list -> any) =
          fun (x6627 : t) ->
            fun ~args:(x6624 : any list) ->
              any_of_js
                (Ojs.new_obj_arr (t_to_js x6627)
                   (let x6625 =
                      Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                        [||] in
                    List.iter
                      (fun (x6626 : any) ->
                         ignore (Ojs.call x6625 "push" [|(any_to_js x6626)|]))
                      x6624;
                    x6625))
      end
    type 'T t = any
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun (type __T) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x6629 : Ojs.t) -> any_of_js x6629
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t =
      fun (type __T) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x6628 : any) -> any_to_js x6628
    type 'T t_1 = 'T t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 =
      fun (type __T) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x6632 : Ojs.t) -> t_of_js __T_of_js x6632
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t =
      fun (type __T) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x6630 : __T t) -> t_to_js __T_to_js x6630
  end
module ClassDecorator =
  struct
    type t = [ `ClassDecorator ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x6635 : Ojs.t) -> t_of_js x6635
    and t_0_to_js : t_0 -> Ojs.t = fun (x6634 : t) -> t_to_js x6634
    type tags = [ `ClassDecorator ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `ClassDecorator ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x6638 : Ojs.t) -> intf_of_js __tags_of_js x6638
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x6636 : __tags intf) -> intf_to_js __tags_to_js x6636
    let (apply :
      'tags this -> target:'TFunction -> ('TFunction, unit) union2) =
      fun (x6641 : 'tags this) ->
        fun ~target:(x6640 : 'TFunction) ->
          union2_of_js Obj.magic Ojs.unit_of_js
            (Ojs.apply (this_to_js Obj.magic x6641) [|(Obj.magic x6640)|])
    let cast_from = Obj.magic
  end
module Capitalize =
  struct
    type 'S t = Ojs.t
    let rec t_of_js : 'S . (Ojs.t -> 'S) -> Ojs.t -> 'S t =
      fun (type __S) ->
        fun (__S_of_js : Ojs.t -> __S) -> fun (x6646 : Ojs.t) -> x6646
    and t_to_js : 'S . ('S -> Ojs.t) -> 'S t -> Ojs.t =
      fun (type __S) ->
        fun (__S_to_js : __S -> Ojs.t) -> fun (x6645 : Ojs.t) -> x6645
    type 'S t_1 = 'S t
    let rec t_1_of_js : 'S . (Ojs.t -> 'S) -> Ojs.t -> 'S t_1 =
      fun (type __S) ->
        fun (__S_of_js : Ojs.t -> __S) ->
          fun (x6649 : Ojs.t) -> t_of_js __S_of_js x6649
    and t_1_to_js : 'S . ('S -> Ojs.t) -> 'S t_1 -> Ojs.t =
      fun (type __S) ->
        fun (__S_to_js : __S -> Ojs.t) ->
          fun (x6647 : __S t) -> t_to_js __S_to_js x6647
  end
module ThisParameterType =
  struct
    type 'T t = any
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun (type __T) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x6652 : Ojs.t) -> any_of_js x6652
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t =
      fun (type __T) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x6651 : any) -> any_to_js x6651
    type 'T t_1 = 'T t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 =
      fun (type __T) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x6655 : Ojs.t) -> t_of_js __T_of_js x6655
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t =
      fun (type __T) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x6653 : __T t) -> t_to_js __T_to_js x6653
  end
module OmitThisParameter =
  struct
    type 'T t = any
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun (type __T) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x6658 : Ojs.t) -> any_of_js x6658
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t =
      fun (type __T) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x6657 : any) -> any_to_js x6657
    type 'T t_1 = 'T t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 =
      fun (type __T) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x6661 : Ojs.t) -> t_of_js __T_of_js x6661
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t =
      fun (type __T) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x6659 : __T t) -> t_to_js __T_to_js x6659
  end
module CallableFunction =
  struct
    type t = [ `CallableFunction  | `Function  | `Function ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x6664 : Ojs.t) -> t_of_js x6664
    and t_0_to_js : t_0 -> Ojs.t = fun (x6663 : t) -> t_to_js x6663
    type tags = [ `CallableFunction  | `Function  | `Function ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `CallableFunction ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x6667 : Ojs.t) -> intf_of_js __tags_of_js x6667
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x6665 : __tags intf) -> intf_to_js __tags_to_js x6665
    let (apply_ : 'tags this -> this:('T -> 'R) -> thisArg:'T -> 'R) =
      fun (x6672 : 'tags this) ->
        fun ~this:(x6669 : 'T -> 'R) ->
          fun ~thisArg:(x6671 : 'T) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic x6672) "apply"
                 [|(Ojs.fun_to_js 1
                      (fun (x6670 : Ojs.t) ->
                         Obj.magic (x6669 (Obj.magic x6670))));(Obj.magic
                                                                  x6671)|])
    let (apply_' :
      'tags this ->
        this:(this:'T -> args:any list -> 'R) -> thisArg:'T -> args:'A -> 'R)
      =
      fun (x6679 : 'tags this) ->
        fun ~this:(x6674 : this:'T -> args:any list -> 'R) ->
          fun ~thisArg:(x6677 : 'T) ->
            fun ~args:(x6678 : 'A) ->
              Obj.magic
                (Ojs.call (this_to_js Obj.magic x6679) "apply"
                   [|(Ojs.fun_to_js_args
                        (fun (x6675 : _) ->
                           Obj.magic
                             (x6674 ~this:(Obj.magic (Ojs.array_get x6675 0))
                                ~args:(Ojs.list_of_js_from any_of_js x6675 1))));(
                     Obj.magic x6677);(Obj.magic x6678)|])
    let (call :
      'tags this ->
        this:(this:'T -> args:any list -> 'R) ->
          thisArg:'T -> args:any list -> 'R)
      =
      fun (x6688 : 'tags this) ->
        fun ~this:(x6681 : this:'T -> args:any list -> 'R) ->
          fun ~thisArg:(x6682 : 'T) ->
            fun ~args:(x6683 : any list) ->
              Obj.magic
                (let x6690 = this_to_js Obj.magic x6688 in
                 Ojs.call (Ojs.get_prop_ascii x6690 "call") "apply"
                   [|x6690;((let x6684 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6684 "push"
                                  [|(Ojs.fun_to_js_args
                                       (fun (x6686 : _) ->
                                          Obj.magic
                                            (x6681
                                               ~this:(Obj.magic
                                                        (Ojs.array_get x6686
                                                           0))
                                               ~args:(Ojs.list_of_js_from
                                                        any_of_js x6686 1))))|]);
                             ignore
                               (Ojs.call x6684 "push" [|(Obj.magic x6682)|]);
                             List.iter
                               (fun (x6685 : any) ->
                                  ignore
                                    (Ojs.call x6684 "push"
                                       [|(any_to_js x6685)|])) x6683;
                             x6684))|])
    let (bind :
      'tags this ->
        this:'T -> thisArg:'T ThisParameterType.t -> 'T OmitThisParameter.t)
      =
      fun (x6694 : 'tags this) ->
        fun ~this:(x6691 : 'T) ->
          fun ~thisArg:(x6692 : 'T ThisParameterType.t) ->
            OmitThisParameter.t_of_js Obj.magic
              (Ojs.call (this_to_js Obj.magic x6694) "bind"
                 [|(Obj.magic x6691);(ThisParameterType.t_to_js Obj.magic
                                        x6692)|])
    let (bind' :
      'tags this ->
        this:(this:'T -> arg0:'A0 -> args:any list -> 'R) ->
          thisArg:'T -> arg0:'A0 -> any list -> 'R)
      =
      fun (x6702 : 'tags this) ->
        fun ~this:(x6697 : this:'T -> arg0:'A0 -> args:any list -> 'R) ->
          fun ~thisArg:(x6700 : 'T) ->
            fun ~arg0:(x6701 : 'A0) ->
              fun (x6704 : any list) ->
                Obj.magic
                  (Ojs.call
                     (Ojs.call (this_to_js Obj.magic x6702) "bind"
                        [|(Ojs.fun_to_js_args
                             (fun (x6698 : _) ->
                                Obj.magic
                                  (x6697
                                     ~this:(Obj.magic (Ojs.array_get x6698 0))
                                     ~arg0:(Obj.magic (Ojs.array_get x6698 1))
                                     ~args:(Ojs.list_of_js_from any_of_js
                                              x6698 2))));(Obj.magic x6700);(
                          Obj.magic x6701)|]) "apply"
                     [|Ojs.null;((let x6705 =
                                    Ojs.new_obj
                                      (Ojs.get_prop_ascii Ojs.global "Array")
                                      [||] in
                                  List.iter
                                    (fun (x6706 : any) ->
                                       ignore
                                         (Ojs.call x6705 "push"
                                            [|(any_to_js x6706)|])) x6704;
                                  x6705))|])
    let (bind'' :
      'tags this ->
        this:(this:'T -> arg0:'A0 -> arg1:'A1 -> args:any list -> 'R) ->
          thisArg:'T -> arg0:'A0 -> arg1:'A1 -> any list -> 'R)
      =
      fun (x6713 : 'tags this) ->
        fun
          ~this:(x6707 :
                  this:'T -> arg0:'A0 -> arg1:'A1 -> args:any list -> 'R)
          ->
          fun ~thisArg:(x6710 : 'T) ->
            fun ~arg0:(x6711 : 'A0) ->
              fun ~arg1:(x6712 : 'A1) ->
                fun (x6715 : any list) ->
                  Obj.magic
                    (Ojs.call
                       (Ojs.call (this_to_js Obj.magic x6713) "bind"
                          [|(Ojs.fun_to_js_args
                               (fun (x6708 : _) ->
                                  Obj.magic
                                    (x6707
                                       ~this:(Obj.magic
                                                (Ojs.array_get x6708 0))
                                       ~arg0:(Obj.magic
                                                (Ojs.array_get x6708 1))
                                       ~arg1:(Obj.magic
                                                (Ojs.array_get x6708 2))
                                       ~args:(Ojs.list_of_js_from any_of_js
                                                x6708 3))));(Obj.magic x6710);(
                            Obj.magic x6711);(Obj.magic x6712)|]) "apply"
                       [|Ojs.null;((let x6716 =
                                      Ojs.new_obj
                                        (Ojs.get_prop_ascii Ojs.global
                                           "Array") [||] in
                                    List.iter
                                      (fun (x6717 : any) ->
                                         ignore
                                           (Ojs.call x6716 "push"
                                              [|(any_to_js x6717)|])) x6715;
                                    x6716))|])
    let (bind''' :
      'tags this ->
        this:(this:'T ->
                arg0:'A0 -> arg1:'A1 -> arg2:'A2 -> args:any list -> 'R)
          -> thisArg:'T -> arg0:'A0 -> arg1:'A1 -> arg2:'A2 -> any list -> 'R)
      =
      fun (x6725 : 'tags this) ->
        fun
          ~this:(x6718 :
                  this:'T ->
                    arg0:'A0 -> arg1:'A1 -> arg2:'A2 -> args:any list -> 'R)
          ->
          fun ~thisArg:(x6721 : 'T) ->
            fun ~arg0:(x6722 : 'A0) ->
              fun ~arg1:(x6723 : 'A1) ->
                fun ~arg2:(x6724 : 'A2) ->
                  fun (x6727 : any list) ->
                    Obj.magic
                      (Ojs.call
                         (Ojs.call (this_to_js Obj.magic x6725) "bind"
                            [|(Ojs.fun_to_js_args
                                 (fun (x6719 : _) ->
                                    Obj.magic
                                      (x6718
                                         ~this:(Obj.magic
                                                  (Ojs.array_get x6719 0))
                                         ~arg0:(Obj.magic
                                                  (Ojs.array_get x6719 1))
                                         ~arg1:(Obj.magic
                                                  (Ojs.array_get x6719 2))
                                         ~arg2:(Obj.magic
                                                  (Ojs.array_get x6719 3))
                                         ~args:(Ojs.list_of_js_from any_of_js
                                                  x6719 4))));(Obj.magic
                                                                 x6721);(
                              Obj.magic x6722);(Obj.magic x6723);(Obj.magic
                                                                    x6724)|])
                         "apply"
                         [|Ojs.null;((let x6728 =
                                        Ojs.new_obj
                                          (Ojs.get_prop_ascii Ojs.global
                                             "Array") [||] in
                                      List.iter
                                        (fun (x6729 : any) ->
                                           ignore
                                             (Ojs.call x6728 "push"
                                                [|(any_to_js x6729)|])) x6727;
                                      x6728))|])
    let (bind'''' :
      'tags this ->
        this:(this:'T ->
                arg0:'A0 ->
                  arg1:'A1 -> arg2:'A2 -> arg3:'A3 -> args:any list -> 'R)
          ->
          thisArg:'T ->
            arg0:'A0 -> arg1:'A1 -> arg2:'A2 -> arg3:'A3 -> any list -> 'R)
      =
      fun (x6738 : 'tags this) ->
        fun
          ~this:(x6730 :
                  this:'T ->
                    arg0:'A0 ->
                      arg1:'A1 -> arg2:'A2 -> arg3:'A3 -> args:any list -> 'R)
          ->
          fun ~thisArg:(x6733 : 'T) ->
            fun ~arg0:(x6734 : 'A0) ->
              fun ~arg1:(x6735 : 'A1) ->
                fun ~arg2:(x6736 : 'A2) ->
                  fun ~arg3:(x6737 : 'A3) ->
                    fun (x6740 : any list) ->
                      Obj.magic
                        (Ojs.call
                           (Ojs.call (this_to_js Obj.magic x6738) "bind"
                              [|(Ojs.fun_to_js_args
                                   (fun (x6731 : _) ->
                                      Obj.magic
                                        (x6730
                                           ~this:(Obj.magic
                                                    (Ojs.array_get x6731 0))
                                           ~arg0:(Obj.magic
                                                    (Ojs.array_get x6731 1))
                                           ~arg1:(Obj.magic
                                                    (Ojs.array_get x6731 2))
                                           ~arg2:(Obj.magic
                                                    (Ojs.array_get x6731 3))
                                           ~arg3:(Obj.magic
                                                    (Ojs.array_get x6731 4))
                                           ~args:(Ojs.list_of_js_from
                                                    any_of_js x6731 5))));(
                                Obj.magic x6733);(Obj.magic x6734);(Obj.magic
                                                                    x6735);(
                                Obj.magic x6736);(Obj.magic x6737)|]) "apply"
                           [|Ojs.null;((let x6741 =
                                          Ojs.new_obj
                                            (Ojs.get_prop_ascii Ojs.global
                                               "Array") [||] in
                                        List.iter
                                          (fun (x6742 : any) ->
                                             ignore
                                               (Ojs.call x6741 "push"
                                                  [|(any_to_js x6742)|]))
                                          x6740;
                                        x6741))|])
    let (bind''''' :
      'tags this ->
        this:(this:'T -> args:'AX list -> 'R) ->
          thisArg:'T -> args:'AX list -> 'AX list -> 'R)
      =
      fun (x6750 : 'tags this) ->
        fun ~this:(x6743 : this:'T -> args:'AX list -> 'R) ->
          fun ~thisArg:(x6744 : 'T) ->
            fun ~args:(x6745 : 'AX list) ->
              fun (x6753 : 'AX list) ->
                Obj.magic
                  (Ojs.call
                     (let x6752 = this_to_js Obj.magic x6750 in
                      Ojs.call (Ojs.get_prop_ascii x6752 "bind") "apply"
                        [|x6752;((let x6746 =
                                    Ojs.new_obj
                                      (Ojs.get_prop_ascii Ojs.global "Array")
                                      [||] in
                                  ignore
                                    (Ojs.call x6746 "push"
                                       [|(Ojs.fun_to_js_args
                                            (fun (x6748 : _) ->
                                               Obj.magic
                                                 (x6743
                                                    ~this:(Obj.magic
                                                             (Ojs.array_get
                                                                x6748 0))
                                                    ~args:(Ojs.list_of_js_from
                                                             Obj.magic x6748
                                                             1))))|]);
                                  ignore
                                    (Ojs.call x6746 "push"
                                       [|(Obj.magic x6744)|]);
                                  List.iter
                                    (fun (x6747 : 'AX) ->
                                       ignore
                                         (Ojs.call x6746 "push"
                                            [|(Obj.magic x6747)|])) x6745;
                                  x6746))|]) "apply"
                     [|Ojs.null;((let x6754 =
                                    Ojs.new_obj
                                      (Ojs.get_prop_ascii Ojs.global "Array")
                                      [||] in
                                  List.iter
                                    (fun (x6755 : 'AX) ->
                                       ignore
                                         (Ojs.call x6754 "push"
                                            [|(Obj.magic x6755)|])) x6753;
                                  x6754))|])
    let cast_from = Obj.magic
  end
module Boolean =
  struct
    type t = [ `Boolean ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x6757 : Ojs.t) -> t_of_js x6757
    and t_0_to_js : t_0 -> Ojs.t = fun (x6756 : t) -> t_to_js x6756
    type tags = [ `Boolean ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `Boolean ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x6760 : Ojs.t) -> intf_of_js __tags_of_js x6760
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x6758 : __tags intf) -> intf_to_js __tags_to_js x6758
    let (valueOf : 'tags this -> bool) =
      fun (x6762 : 'tags this) ->
        Ojs.bool_of_js (Ojs.call (this_to_js Obj.magic x6762) "valueOf" [||])
    let (create : ?value:any -> unit -> t) =
      fun ?value:(x6764 : any option) ->
        fun () ->
          t_of_js
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "Boolean")
               (let x6765 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x6764 with
                 | Some x6766 ->
                     ignore (Ojs.call x6765 "push" [|(any_to_js x6766)|])
                 | None -> ());
                x6765))
    let (invoke : ?value:'T -> unit -> bool) =
      fun ?value:(x6767 : 'T option) ->
        fun () ->
          Ojs.bool_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "Boolean") "apply"
               [|Ojs.null;((let x6768 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x6767 with
                             | Some x6769 ->
                                 ignore
                                   (Ojs.call x6768 "push"
                                      [|(Obj.magic x6769)|])
                             | None -> ());
                            x6768))|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Boolean")
             "prototype")
    let cast_from = Obj.magic
    let (of_ml : bool -> t) =
      fun (x6770 : bool) -> t_of_js (Ojs.bool_to_js x6770)
    let (to_ml : t -> bool) =
      fun (x6771 : t) ->
        Ojs.bool_of_js (Ojs.call (t_to_js x6771) "valueOf" [||])
  end
module BigIntToLocaleStringOptions =
  struct
    type t = [ `BigIntToLocaleStringOptions ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x6773 : Ojs.t) -> t_of_js x6773
    and t_0_to_js : t_0 -> Ojs.t = fun (x6772 : t) -> t_to_js x6772
    type tags = [ `BigIntToLocaleStringOptions ]
    type tags_0 = tags
    type 'tags this =
      'tags intf constraint 'tags = [> `BigIntToLocaleStringOptions ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x6776 : Ojs.t) -> intf_of_js __tags_of_js x6776
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x6774 : __tags intf) -> intf_to_js __tags_to_js x6774
    let (get_localeMatcher : 'tags this -> string option) =
      fun (x6778 : 'tags this) ->
        Ojs.option_of_js Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6778) "localeMatcher")
    let (set_localeMatcher : 'tags this -> string -> unit) =
      fun (x6781 : 'tags this) ->
        fun (x6782 : string) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x6781) "localeMatcher"
            (Ojs.string_to_js x6782)
    let (get_style : 'tags this -> string option) =
      fun (x6784 : 'tags this) ->
        Ojs.option_of_js Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6784) "style")
    let (set_style : 'tags this -> string -> unit) =
      fun (x6787 : 'tags this) ->
        fun (x6788 : string) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x6787) "style"
            (Ojs.string_to_js x6788)
    let (get_numberingSystem : 'tags this -> string option) =
      fun (x6790 : 'tags this) ->
        Ojs.option_of_js Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6790) "numberingSystem")
    let (set_numberingSystem : 'tags this -> string -> unit) =
      fun (x6793 : 'tags this) ->
        fun (x6794 : string) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x6793) "numberingSystem"
            (Ojs.string_to_js x6794)
    let (get_unit : 'tags this -> string option) =
      fun (x6796 : 'tags this) ->
        Ojs.option_of_js Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6796) "unit")
    let (set_unit : 'tags this -> string -> unit) =
      fun (x6799 : 'tags this) ->
        fun (x6800 : string) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x6799) "unit"
            (Ojs.string_to_js x6800)
    let (get_unitDisplay : 'tags this -> string option) =
      fun (x6802 : 'tags this) ->
        Ojs.option_of_js Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6802) "unitDisplay")
    let (set_unitDisplay : 'tags this -> string -> unit) =
      fun (x6805 : 'tags this) ->
        fun (x6806 : string) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x6805) "unitDisplay"
            (Ojs.string_to_js x6806)
    let (get_currency : 'tags this -> string option) =
      fun (x6808 : 'tags this) ->
        Ojs.option_of_js Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6808) "currency")
    let (set_currency : 'tags this -> string -> unit) =
      fun (x6811 : 'tags this) ->
        fun (x6812 : string) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x6811) "currency"
            (Ojs.string_to_js x6812)
    let (get_currencyDisplay : 'tags this -> string option) =
      fun (x6814 : 'tags this) ->
        Ojs.option_of_js Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6814) "currencyDisplay")
    let (set_currencyDisplay : 'tags this -> string -> unit) =
      fun (x6817 : 'tags this) ->
        fun (x6818 : string) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x6817) "currencyDisplay"
            (Ojs.string_to_js x6818)
    let (get_useGrouping : 'tags this -> bool option) =
      fun (x6820 : 'tags this) ->
        Ojs.option_of_js Ojs.bool_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6820) "useGrouping")
    let (set_useGrouping : 'tags this -> bool -> unit) =
      fun (x6823 : 'tags this) ->
        fun (x6824 : bool) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x6823) "useGrouping"
            (Ojs.bool_to_js x6824)
    let (get_minimumIntegerDigits :
      'tags this ->
        [ `L_n_1  | `L_n_10  | `L_n_11  | `L_n_12  | `L_n_13  | `L_n_14 
        | `L_n_15  | `L_n_16  | `L_n_17  | `L_n_18  | `L_n_19  | `L_n_2 
        | `L_n_20  | `L_n_21  | `L_n_3  | `L_n_4  | `L_n_5  | `L_n_6 
        | `L_n_7  | `L_n_8  | `L_n_9 ] option)
      =
      fun (x6826 : 'tags this) ->
        Ojs.option_of_js
          (fun (x6828 : Ojs.t) ->
             let x6829 = x6828 in
             match Ojs.int_of_js x6829 with
             | 1 -> `L_n_1
             | 10 -> `L_n_10
             | 11 -> `L_n_11
             | 12 -> `L_n_12
             | 13 -> `L_n_13
             | 14 -> `L_n_14
             | 15 -> `L_n_15
             | 16 -> `L_n_16
             | 17 -> `L_n_17
             | 18 -> `L_n_18
             | 19 -> `L_n_19
             | 2 -> `L_n_2
             | 20 -> `L_n_20
             | 21 -> `L_n_21
             | 3 -> `L_n_3
             | 4 -> `L_n_4
             | 5 -> `L_n_5
             | 6 -> `L_n_6
             | 7 -> `L_n_7
             | 8 -> `L_n_8
             | 9 -> `L_n_9
             | _ -> assert false)
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6826)
             "minimumIntegerDigits")
    let (set_minimumIntegerDigits :
      'tags this ->
        [ `U1 of [ `L_n_1 ]  | `U2 of [ `L_n_2 ]  | `U3 of [ `L_n_3 ] 
        | `U4 of [ `L_n_4 ]  | `U5 of [ `L_n_5 ]  | `U6 of [ `L_n_6 ] 
        | `U7 of [ `L_n_7 ]  | `U8 of [ `L_n_8 ]  | `U9 of [ `L_n_9 ] 
        | `U10 of [ `L_n_10 ]  | `U11 of [ `L_n_11 ]  | `U12 of [ `L_n_12 ] 
        | `U13 of [ `L_n_13 ]  | `U14 of [ `L_n_14 ]  | `U15 of [ `L_n_15 ] 
        | `U16 of [ `L_n_16 ]  | `U17 of [ `L_n_17 ]  | `U18 of [ `L_n_18 ] 
        | `U19 of [ `L_n_19 ]  | `U20 of [ `L_n_20 ]  | `U21 of [ `L_n_21 ] ]
          -> unit)
      =
      fun (x6830 : 'tags this) ->
        fun
          (x6831 :
            [ `U1 of [ `L_n_1 ]  | `U2 of [ `L_n_2 ]  | `U3 of [ `L_n_3 ] 
            | `U4 of [ `L_n_4 ]  | `U5 of [ `L_n_5 ]  | `U6 of [ `L_n_6 ] 
            | `U7 of [ `L_n_7 ]  | `U8 of [ `L_n_8 ]  | `U9 of [ `L_n_9 ] 
            | `U10 of [ `L_n_10 ]  | `U11 of [ `L_n_11 ] 
            | `U12 of [ `L_n_12 ]  | `U13 of [ `L_n_13 ] 
            | `U14 of [ `L_n_14 ]  | `U15 of [ `L_n_15 ] 
            | `U16 of [ `L_n_16 ]  | `U17 of [ `L_n_17 ] 
            | `U18 of [ `L_n_18 ]  | `U19 of [ `L_n_19 ] 
            | `U20 of [ `L_n_20 ]  | `U21 of [ `L_n_21 ] ])
          ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x6830)
            "minimumIntegerDigits"
            (match x6831 with
             | `U1 x6832 -> (match x6832 with | `L_n_1 -> Ojs.int_to_js 1)
             | `U2 x6833 -> (match x6833 with | `L_n_2 -> Ojs.int_to_js 2)
             | `U3 x6834 -> (match x6834 with | `L_n_3 -> Ojs.int_to_js 3)
             | `U4 x6835 -> (match x6835 with | `L_n_4 -> Ojs.int_to_js 4)
             | `U5 x6836 -> (match x6836 with | `L_n_5 -> Ojs.int_to_js 5)
             | `U6 x6837 -> (match x6837 with | `L_n_6 -> Ojs.int_to_js 6)
             | `U7 x6838 -> (match x6838 with | `L_n_7 -> Ojs.int_to_js 7)
             | `U8 x6839 -> (match x6839 with | `L_n_8 -> Ojs.int_to_js 8)
             | `U9 x6840 -> (match x6840 with | `L_n_9 -> Ojs.int_to_js 9)
             | `U10 x6841 -> (match x6841 with | `L_n_10 -> Ojs.int_to_js 10)
             | `U11 x6842 -> (match x6842 with | `L_n_11 -> Ojs.int_to_js 11)
             | `U12 x6843 -> (match x6843 with | `L_n_12 -> Ojs.int_to_js 12)
             | `U13 x6844 -> (match x6844 with | `L_n_13 -> Ojs.int_to_js 13)
             | `U14 x6845 -> (match x6845 with | `L_n_14 -> Ojs.int_to_js 14)
             | `U15 x6846 -> (match x6846 with | `L_n_15 -> Ojs.int_to_js 15)
             | `U16 x6847 -> (match x6847 with | `L_n_16 -> Ojs.int_to_js 16)
             | `U17 x6848 -> (match x6848 with | `L_n_17 -> Ojs.int_to_js 17)
             | `U18 x6849 -> (match x6849 with | `L_n_18 -> Ojs.int_to_js 18)
             | `U19 x6850 -> (match x6850 with | `L_n_19 -> Ojs.int_to_js 19)
             | `U20 x6851 -> (match x6851 with | `L_n_20 -> Ojs.int_to_js 20)
             | `U21 x6852 -> (match x6852 with | `L_n_21 -> Ojs.int_to_js 21))
    let (get_minimumFractionDigits :
      'tags this ->
        [ `L_n_0  | `L_n_1  | `L_n_10  | `L_n_11  | `L_n_12  | `L_n_13 
        | `L_n_14  | `L_n_15  | `L_n_16  | `L_n_17  | `L_n_18  | `L_n_19 
        | `L_n_2  | `L_n_20  | `L_n_3  | `L_n_4  | `L_n_5  | `L_n_6 
        | `L_n_7  | `L_n_8  | `L_n_9 ] option)
      =
      fun (x6854 : 'tags this) ->
        Ojs.option_of_js
          (fun (x6856 : Ojs.t) ->
             let x6857 = x6856 in
             match Ojs.int_of_js x6857 with
             | 0 -> `L_n_0
             | 1 -> `L_n_1
             | 10 -> `L_n_10
             | 11 -> `L_n_11
             | 12 -> `L_n_12
             | 13 -> `L_n_13
             | 14 -> `L_n_14
             | 15 -> `L_n_15
             | 16 -> `L_n_16
             | 17 -> `L_n_17
             | 18 -> `L_n_18
             | 19 -> `L_n_19
             | 2 -> `L_n_2
             | 20 -> `L_n_20
             | 3 -> `L_n_3
             | 4 -> `L_n_4
             | 5 -> `L_n_5
             | 6 -> `L_n_6
             | 7 -> `L_n_7
             | 8 -> `L_n_8
             | 9 -> `L_n_9
             | _ -> assert false)
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6854)
             "minimumFractionDigits")
    let (set_minimumFractionDigits :
      'tags this ->
        [ `U1 of [ `L_n_0 ]  | `U2 of [ `L_n_1 ]  | `U3 of [ `L_n_2 ] 
        | `U4 of [ `L_n_3 ]  | `U5 of [ `L_n_4 ]  | `U6 of [ `L_n_5 ] 
        | `U7 of [ `L_n_6 ]  | `U8 of [ `L_n_7 ]  | `U9 of [ `L_n_8 ] 
        | `U10 of [ `L_n_9 ]  | `U11 of [ `L_n_10 ]  | `U12 of [ `L_n_11 ] 
        | `U13 of [ `L_n_12 ]  | `U14 of [ `L_n_13 ]  | `U15 of [ `L_n_14 ] 
        | `U16 of [ `L_n_15 ]  | `U17 of [ `L_n_16 ]  | `U18 of [ `L_n_17 ] 
        | `U19 of [ `L_n_18 ]  | `U20 of [ `L_n_19 ]  | `U21 of [ `L_n_20 ] ]
          -> unit)
      =
      fun (x6858 : 'tags this) ->
        fun
          (x6859 :
            [ `U1 of [ `L_n_0 ]  | `U2 of [ `L_n_1 ]  | `U3 of [ `L_n_2 ] 
            | `U4 of [ `L_n_3 ]  | `U5 of [ `L_n_4 ]  | `U6 of [ `L_n_5 ] 
            | `U7 of [ `L_n_6 ]  | `U8 of [ `L_n_7 ]  | `U9 of [ `L_n_8 ] 
            | `U10 of [ `L_n_9 ]  | `U11 of [ `L_n_10 ] 
            | `U12 of [ `L_n_11 ]  | `U13 of [ `L_n_12 ] 
            | `U14 of [ `L_n_13 ]  | `U15 of [ `L_n_14 ] 
            | `U16 of [ `L_n_15 ]  | `U17 of [ `L_n_16 ] 
            | `U18 of [ `L_n_17 ]  | `U19 of [ `L_n_18 ] 
            | `U20 of [ `L_n_19 ]  | `U21 of [ `L_n_20 ] ])
          ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x6858)
            "minimumFractionDigits"
            (match x6859 with
             | `U1 x6860 -> (match x6860 with | `L_n_0 -> Ojs.int_to_js 0)
             | `U2 x6861 -> (match x6861 with | `L_n_1 -> Ojs.int_to_js 1)
             | `U3 x6862 -> (match x6862 with | `L_n_2 -> Ojs.int_to_js 2)
             | `U4 x6863 -> (match x6863 with | `L_n_3 -> Ojs.int_to_js 3)
             | `U5 x6864 -> (match x6864 with | `L_n_4 -> Ojs.int_to_js 4)
             | `U6 x6865 -> (match x6865 with | `L_n_5 -> Ojs.int_to_js 5)
             | `U7 x6866 -> (match x6866 with | `L_n_6 -> Ojs.int_to_js 6)
             | `U8 x6867 -> (match x6867 with | `L_n_7 -> Ojs.int_to_js 7)
             | `U9 x6868 -> (match x6868 with | `L_n_8 -> Ojs.int_to_js 8)
             | `U10 x6869 -> (match x6869 with | `L_n_9 -> Ojs.int_to_js 9)
             | `U11 x6870 -> (match x6870 with | `L_n_10 -> Ojs.int_to_js 10)
             | `U12 x6871 -> (match x6871 with | `L_n_11 -> Ojs.int_to_js 11)
             | `U13 x6872 -> (match x6872 with | `L_n_12 -> Ojs.int_to_js 12)
             | `U14 x6873 -> (match x6873 with | `L_n_13 -> Ojs.int_to_js 13)
             | `U15 x6874 -> (match x6874 with | `L_n_14 -> Ojs.int_to_js 14)
             | `U16 x6875 -> (match x6875 with | `L_n_15 -> Ojs.int_to_js 15)
             | `U17 x6876 -> (match x6876 with | `L_n_16 -> Ojs.int_to_js 16)
             | `U18 x6877 -> (match x6877 with | `L_n_17 -> Ojs.int_to_js 17)
             | `U19 x6878 -> (match x6878 with | `L_n_18 -> Ojs.int_to_js 18)
             | `U20 x6879 -> (match x6879 with | `L_n_19 -> Ojs.int_to_js 19)
             | `U21 x6880 -> (match x6880 with | `L_n_20 -> Ojs.int_to_js 20))
    let (get_maximumFractionDigits :
      'tags this ->
        [ `L_n_0  | `L_n_1  | `L_n_10  | `L_n_11  | `L_n_12  | `L_n_13 
        | `L_n_14  | `L_n_15  | `L_n_16  | `L_n_17  | `L_n_18  | `L_n_19 
        | `L_n_2  | `L_n_20  | `L_n_3  | `L_n_4  | `L_n_5  | `L_n_6 
        | `L_n_7  | `L_n_8  | `L_n_9 ] option)
      =
      fun (x6882 : 'tags this) ->
        Ojs.option_of_js
          (fun (x6884 : Ojs.t) ->
             let x6885 = x6884 in
             match Ojs.int_of_js x6885 with
             | 0 -> `L_n_0
             | 1 -> `L_n_1
             | 10 -> `L_n_10
             | 11 -> `L_n_11
             | 12 -> `L_n_12
             | 13 -> `L_n_13
             | 14 -> `L_n_14
             | 15 -> `L_n_15
             | 16 -> `L_n_16
             | 17 -> `L_n_17
             | 18 -> `L_n_18
             | 19 -> `L_n_19
             | 2 -> `L_n_2
             | 20 -> `L_n_20
             | 3 -> `L_n_3
             | 4 -> `L_n_4
             | 5 -> `L_n_5
             | 6 -> `L_n_6
             | 7 -> `L_n_7
             | 8 -> `L_n_8
             | 9 -> `L_n_9
             | _ -> assert false)
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6882)
             "maximumFractionDigits")
    let (set_maximumFractionDigits :
      'tags this ->
        [ `U1 of [ `L_n_0 ]  | `U2 of [ `L_n_1 ]  | `U3 of [ `L_n_2 ] 
        | `U4 of [ `L_n_3 ]  | `U5 of [ `L_n_4 ]  | `U6 of [ `L_n_5 ] 
        | `U7 of [ `L_n_6 ]  | `U8 of [ `L_n_7 ]  | `U9 of [ `L_n_8 ] 
        | `U10 of [ `L_n_9 ]  | `U11 of [ `L_n_10 ]  | `U12 of [ `L_n_11 ] 
        | `U13 of [ `L_n_12 ]  | `U14 of [ `L_n_13 ]  | `U15 of [ `L_n_14 ] 
        | `U16 of [ `L_n_15 ]  | `U17 of [ `L_n_16 ]  | `U18 of [ `L_n_17 ] 
        | `U19 of [ `L_n_18 ]  | `U20 of [ `L_n_19 ]  | `U21 of [ `L_n_20 ] ]
          -> unit)
      =
      fun (x6886 : 'tags this) ->
        fun
          (x6887 :
            [ `U1 of [ `L_n_0 ]  | `U2 of [ `L_n_1 ]  | `U3 of [ `L_n_2 ] 
            | `U4 of [ `L_n_3 ]  | `U5 of [ `L_n_4 ]  | `U6 of [ `L_n_5 ] 
            | `U7 of [ `L_n_6 ]  | `U8 of [ `L_n_7 ]  | `U9 of [ `L_n_8 ] 
            | `U10 of [ `L_n_9 ]  | `U11 of [ `L_n_10 ] 
            | `U12 of [ `L_n_11 ]  | `U13 of [ `L_n_12 ] 
            | `U14 of [ `L_n_13 ]  | `U15 of [ `L_n_14 ] 
            | `U16 of [ `L_n_15 ]  | `U17 of [ `L_n_16 ] 
            | `U18 of [ `L_n_17 ]  | `U19 of [ `L_n_18 ] 
            | `U20 of [ `L_n_19 ]  | `U21 of [ `L_n_20 ] ])
          ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x6886)
            "maximumFractionDigits"
            (match x6887 with
             | `U1 x6888 -> (match x6888 with | `L_n_0 -> Ojs.int_to_js 0)
             | `U2 x6889 -> (match x6889 with | `L_n_1 -> Ojs.int_to_js 1)
             | `U3 x6890 -> (match x6890 with | `L_n_2 -> Ojs.int_to_js 2)
             | `U4 x6891 -> (match x6891 with | `L_n_3 -> Ojs.int_to_js 3)
             | `U5 x6892 -> (match x6892 with | `L_n_4 -> Ojs.int_to_js 4)
             | `U6 x6893 -> (match x6893 with | `L_n_5 -> Ojs.int_to_js 5)
             | `U7 x6894 -> (match x6894 with | `L_n_6 -> Ojs.int_to_js 6)
             | `U8 x6895 -> (match x6895 with | `L_n_7 -> Ojs.int_to_js 7)
             | `U9 x6896 -> (match x6896 with | `L_n_8 -> Ojs.int_to_js 8)
             | `U10 x6897 -> (match x6897 with | `L_n_9 -> Ojs.int_to_js 9)
             | `U11 x6898 -> (match x6898 with | `L_n_10 -> Ojs.int_to_js 10)
             | `U12 x6899 -> (match x6899 with | `L_n_11 -> Ojs.int_to_js 11)
             | `U13 x6900 -> (match x6900 with | `L_n_12 -> Ojs.int_to_js 12)
             | `U14 x6901 -> (match x6901 with | `L_n_13 -> Ojs.int_to_js 13)
             | `U15 x6902 -> (match x6902 with | `L_n_14 -> Ojs.int_to_js 14)
             | `U16 x6903 -> (match x6903 with | `L_n_15 -> Ojs.int_to_js 15)
             | `U17 x6904 -> (match x6904 with | `L_n_16 -> Ojs.int_to_js 16)
             | `U18 x6905 -> (match x6905 with | `L_n_17 -> Ojs.int_to_js 17)
             | `U19 x6906 -> (match x6906 with | `L_n_18 -> Ojs.int_to_js 18)
             | `U20 x6907 -> (match x6907 with | `L_n_19 -> Ojs.int_to_js 19)
             | `U21 x6908 -> (match x6908 with | `L_n_20 -> Ojs.int_to_js 20))
    let (get_minimumSignificantDigits :
      'tags this ->
        [ `L_n_1  | `L_n_10  | `L_n_11  | `L_n_12  | `L_n_13  | `L_n_14 
        | `L_n_15  | `L_n_16  | `L_n_17  | `L_n_18  | `L_n_19  | `L_n_2 
        | `L_n_20  | `L_n_21  | `L_n_3  | `L_n_4  | `L_n_5  | `L_n_6 
        | `L_n_7  | `L_n_8  | `L_n_9 ] option)
      =
      fun (x6910 : 'tags this) ->
        Ojs.option_of_js
          (fun (x6912 : Ojs.t) ->
             let x6913 = x6912 in
             match Ojs.int_of_js x6913 with
             | 1 -> `L_n_1
             | 10 -> `L_n_10
             | 11 -> `L_n_11
             | 12 -> `L_n_12
             | 13 -> `L_n_13
             | 14 -> `L_n_14
             | 15 -> `L_n_15
             | 16 -> `L_n_16
             | 17 -> `L_n_17
             | 18 -> `L_n_18
             | 19 -> `L_n_19
             | 2 -> `L_n_2
             | 20 -> `L_n_20
             | 21 -> `L_n_21
             | 3 -> `L_n_3
             | 4 -> `L_n_4
             | 5 -> `L_n_5
             | 6 -> `L_n_6
             | 7 -> `L_n_7
             | 8 -> `L_n_8
             | 9 -> `L_n_9
             | _ -> assert false)
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6910)
             "minimumSignificantDigits")
    let (set_minimumSignificantDigits :
      'tags this ->
        [ `U1 of [ `L_n_1 ]  | `U2 of [ `L_n_2 ]  | `U3 of [ `L_n_3 ] 
        | `U4 of [ `L_n_4 ]  | `U5 of [ `L_n_5 ]  | `U6 of [ `L_n_6 ] 
        | `U7 of [ `L_n_7 ]  | `U8 of [ `L_n_8 ]  | `U9 of [ `L_n_9 ] 
        | `U10 of [ `L_n_10 ]  | `U11 of [ `L_n_11 ]  | `U12 of [ `L_n_12 ] 
        | `U13 of [ `L_n_13 ]  | `U14 of [ `L_n_14 ]  | `U15 of [ `L_n_15 ] 
        | `U16 of [ `L_n_16 ]  | `U17 of [ `L_n_17 ]  | `U18 of [ `L_n_18 ] 
        | `U19 of [ `L_n_19 ]  | `U20 of [ `L_n_20 ]  | `U21 of [ `L_n_21 ] ]
          -> unit)
      =
      fun (x6914 : 'tags this) ->
        fun
          (x6915 :
            [ `U1 of [ `L_n_1 ]  | `U2 of [ `L_n_2 ]  | `U3 of [ `L_n_3 ] 
            | `U4 of [ `L_n_4 ]  | `U5 of [ `L_n_5 ]  | `U6 of [ `L_n_6 ] 
            | `U7 of [ `L_n_7 ]  | `U8 of [ `L_n_8 ]  | `U9 of [ `L_n_9 ] 
            | `U10 of [ `L_n_10 ]  | `U11 of [ `L_n_11 ] 
            | `U12 of [ `L_n_12 ]  | `U13 of [ `L_n_13 ] 
            | `U14 of [ `L_n_14 ]  | `U15 of [ `L_n_15 ] 
            | `U16 of [ `L_n_16 ]  | `U17 of [ `L_n_17 ] 
            | `U18 of [ `L_n_18 ]  | `U19 of [ `L_n_19 ] 
            | `U20 of [ `L_n_20 ]  | `U21 of [ `L_n_21 ] ])
          ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x6914)
            "minimumSignificantDigits"
            (match x6915 with
             | `U1 x6916 -> (match x6916 with | `L_n_1 -> Ojs.int_to_js 1)
             | `U2 x6917 -> (match x6917 with | `L_n_2 -> Ojs.int_to_js 2)
             | `U3 x6918 -> (match x6918 with | `L_n_3 -> Ojs.int_to_js 3)
             | `U4 x6919 -> (match x6919 with | `L_n_4 -> Ojs.int_to_js 4)
             | `U5 x6920 -> (match x6920 with | `L_n_5 -> Ojs.int_to_js 5)
             | `U6 x6921 -> (match x6921 with | `L_n_6 -> Ojs.int_to_js 6)
             | `U7 x6922 -> (match x6922 with | `L_n_7 -> Ojs.int_to_js 7)
             | `U8 x6923 -> (match x6923 with | `L_n_8 -> Ojs.int_to_js 8)
             | `U9 x6924 -> (match x6924 with | `L_n_9 -> Ojs.int_to_js 9)
             | `U10 x6925 -> (match x6925 with | `L_n_10 -> Ojs.int_to_js 10)
             | `U11 x6926 -> (match x6926 with | `L_n_11 -> Ojs.int_to_js 11)
             | `U12 x6927 -> (match x6927 with | `L_n_12 -> Ojs.int_to_js 12)
             | `U13 x6928 -> (match x6928 with | `L_n_13 -> Ojs.int_to_js 13)
             | `U14 x6929 -> (match x6929 with | `L_n_14 -> Ojs.int_to_js 14)
             | `U15 x6930 -> (match x6930 with | `L_n_15 -> Ojs.int_to_js 15)
             | `U16 x6931 -> (match x6931 with | `L_n_16 -> Ojs.int_to_js 16)
             | `U17 x6932 -> (match x6932 with | `L_n_17 -> Ojs.int_to_js 17)
             | `U18 x6933 -> (match x6933 with | `L_n_18 -> Ojs.int_to_js 18)
             | `U19 x6934 -> (match x6934 with | `L_n_19 -> Ojs.int_to_js 19)
             | `U20 x6935 -> (match x6935 with | `L_n_20 -> Ojs.int_to_js 20)
             | `U21 x6936 -> (match x6936 with | `L_n_21 -> Ojs.int_to_js 21))
    let (get_maximumSignificantDigits :
      'tags this ->
        [ `L_n_1  | `L_n_10  | `L_n_11  | `L_n_12  | `L_n_13  | `L_n_14 
        | `L_n_15  | `L_n_16  | `L_n_17  | `L_n_18  | `L_n_19  | `L_n_2 
        | `L_n_20  | `L_n_21  | `L_n_3  | `L_n_4  | `L_n_5  | `L_n_6 
        | `L_n_7  | `L_n_8  | `L_n_9 ] option)
      =
      fun (x6938 : 'tags this) ->
        Ojs.option_of_js
          (fun (x6940 : Ojs.t) ->
             let x6941 = x6940 in
             match Ojs.int_of_js x6941 with
             | 1 -> `L_n_1
             | 10 -> `L_n_10
             | 11 -> `L_n_11
             | 12 -> `L_n_12
             | 13 -> `L_n_13
             | 14 -> `L_n_14
             | 15 -> `L_n_15
             | 16 -> `L_n_16
             | 17 -> `L_n_17
             | 18 -> `L_n_18
             | 19 -> `L_n_19
             | 2 -> `L_n_2
             | 20 -> `L_n_20
             | 21 -> `L_n_21
             | 3 -> `L_n_3
             | 4 -> `L_n_4
             | 5 -> `L_n_5
             | 6 -> `L_n_6
             | 7 -> `L_n_7
             | 8 -> `L_n_8
             | 9 -> `L_n_9
             | _ -> assert false)
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6938)
             "maximumSignificantDigits")
    let (set_maximumSignificantDigits :
      'tags this ->
        [ `U1 of [ `L_n_1 ]  | `U2 of [ `L_n_2 ]  | `U3 of [ `L_n_3 ] 
        | `U4 of [ `L_n_4 ]  | `U5 of [ `L_n_5 ]  | `U6 of [ `L_n_6 ] 
        | `U7 of [ `L_n_7 ]  | `U8 of [ `L_n_8 ]  | `U9 of [ `L_n_9 ] 
        | `U10 of [ `L_n_10 ]  | `U11 of [ `L_n_11 ]  | `U12 of [ `L_n_12 ] 
        | `U13 of [ `L_n_13 ]  | `U14 of [ `L_n_14 ]  | `U15 of [ `L_n_15 ] 
        | `U16 of [ `L_n_16 ]  | `U17 of [ `L_n_17 ]  | `U18 of [ `L_n_18 ] 
        | `U19 of [ `L_n_19 ]  | `U20 of [ `L_n_20 ]  | `U21 of [ `L_n_21 ] ]
          -> unit)
      =
      fun (x6942 : 'tags this) ->
        fun
          (x6943 :
            [ `U1 of [ `L_n_1 ]  | `U2 of [ `L_n_2 ]  | `U3 of [ `L_n_3 ] 
            | `U4 of [ `L_n_4 ]  | `U5 of [ `L_n_5 ]  | `U6 of [ `L_n_6 ] 
            | `U7 of [ `L_n_7 ]  | `U8 of [ `L_n_8 ]  | `U9 of [ `L_n_9 ] 
            | `U10 of [ `L_n_10 ]  | `U11 of [ `L_n_11 ] 
            | `U12 of [ `L_n_12 ]  | `U13 of [ `L_n_13 ] 
            | `U14 of [ `L_n_14 ]  | `U15 of [ `L_n_15 ] 
            | `U16 of [ `L_n_16 ]  | `U17 of [ `L_n_17 ] 
            | `U18 of [ `L_n_18 ]  | `U19 of [ `L_n_19 ] 
            | `U20 of [ `L_n_20 ]  | `U21 of [ `L_n_21 ] ])
          ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x6942)
            "maximumSignificantDigits"
            (match x6943 with
             | `U1 x6944 -> (match x6944 with | `L_n_1 -> Ojs.int_to_js 1)
             | `U2 x6945 -> (match x6945 with | `L_n_2 -> Ojs.int_to_js 2)
             | `U3 x6946 -> (match x6946 with | `L_n_3 -> Ojs.int_to_js 3)
             | `U4 x6947 -> (match x6947 with | `L_n_4 -> Ojs.int_to_js 4)
             | `U5 x6948 -> (match x6948 with | `L_n_5 -> Ojs.int_to_js 5)
             | `U6 x6949 -> (match x6949 with | `L_n_6 -> Ojs.int_to_js 6)
             | `U7 x6950 -> (match x6950 with | `L_n_7 -> Ojs.int_to_js 7)
             | `U8 x6951 -> (match x6951 with | `L_n_8 -> Ojs.int_to_js 8)
             | `U9 x6952 -> (match x6952 with | `L_n_9 -> Ojs.int_to_js 9)
             | `U10 x6953 -> (match x6953 with | `L_n_10 -> Ojs.int_to_js 10)
             | `U11 x6954 -> (match x6954 with | `L_n_11 -> Ojs.int_to_js 11)
             | `U12 x6955 -> (match x6955 with | `L_n_12 -> Ojs.int_to_js 12)
             | `U13 x6956 -> (match x6956 with | `L_n_13 -> Ojs.int_to_js 13)
             | `U14 x6957 -> (match x6957 with | `L_n_14 -> Ojs.int_to_js 14)
             | `U15 x6958 -> (match x6958 with | `L_n_15 -> Ojs.int_to_js 15)
             | `U16 x6959 -> (match x6959 with | `L_n_16 -> Ojs.int_to_js 16)
             | `U17 x6960 -> (match x6960 with | `L_n_17 -> Ojs.int_to_js 17)
             | `U18 x6961 -> (match x6961 with | `L_n_18 -> Ojs.int_to_js 18)
             | `U19 x6962 -> (match x6962 with | `L_n_19 -> Ojs.int_to_js 19)
             | `U20 x6963 -> (match x6963 with | `L_n_20 -> Ojs.int_to_js 20)
             | `U21 x6964 -> (match x6964 with | `L_n_21 -> Ojs.int_to_js 21))
    let (get_notation : 'tags this -> string option) =
      fun (x6966 : 'tags this) ->
        Ojs.option_of_js Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6966) "notation")
    let (set_notation : 'tags this -> string -> unit) =
      fun (x6969 : 'tags this) ->
        fun (x6970 : string) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x6969) "notation"
            (Ojs.string_to_js x6970)
    let (get_compactDisplay : 'tags this -> string option) =
      fun (x6972 : 'tags this) ->
        Ojs.option_of_js Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6972) "compactDisplay")
    let (set_compactDisplay : 'tags this -> string -> unit) =
      fun (x6975 : 'tags this) ->
        fun (x6976 : string) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x6975) "compactDisplay"
            (Ojs.string_to_js x6976)
    let (create :
      ?localeMatcher:string ->
        ?style:string ->
          ?numberingSystem:string ->
            ?unit:string ->
              ?unitDisplay:string ->
                ?currency:string ->
                  ?currencyDisplay:string ->
                    ?useGrouping:bool ->
                      ?minimumIntegerDigits:[ `L_n_1  | `L_n_10  | `L_n_11 
                                            | `L_n_12  | `L_n_13  | `L_n_14 
                                            | `L_n_15  | `L_n_16  | `L_n_17 
                                            | `L_n_18  | `L_n_19  | `L_n_2 
                                            | `L_n_20  | `L_n_21  | `L_n_3 
                                            | `L_n_4  | `L_n_5  | `L_n_6 
                                            | `L_n_7  | `L_n_8  | `L_n_9 ]
                        ->
                        ?minimumFractionDigits:[ `L_n_0  | `L_n_1  | 
                                                 `L_n_10 
                                               | `L_n_11  | `L_n_12 
                                               | `L_n_13  | `L_n_14 
                                               | `L_n_15  | `L_n_16 
                                               | `L_n_17  | `L_n_18 
                                               | `L_n_19  | `L_n_2 
                                               | `L_n_20  | `L_n_3  | 
                                                 `L_n_4 
                                               | `L_n_5  | `L_n_6  | 
                                                 `L_n_7 
                                               | `L_n_8  | `L_n_9 ]
                          ->
                          ?maximumFractionDigits:[ `L_n_0  | `L_n_1 
                                                 | `L_n_10  | `L_n_11 
                                                 | `L_n_12  | `L_n_13 
                                                 | `L_n_14  | `L_n_15 
                                                 | `L_n_16  | `L_n_17 
                                                 | `L_n_18  | `L_n_19 
                                                 | `L_n_2  | `L_n_20 
                                                 | `L_n_3  | `L_n_4 
                                                 | `L_n_5  | `L_n_6 
                                                 | `L_n_7  | `L_n_8 
                                                 | `L_n_9 ]
                            ->
                            ?minimumSignificantDigits:[ `L_n_1  | `L_n_10 
                                                      | `L_n_11  | `L_n_12 
                                                      | `L_n_13  | `L_n_14 
                                                      | `L_n_15  | `L_n_16 
                                                      | `L_n_17  | `L_n_18 
                                                      | `L_n_19  | `L_n_2 
                                                      | `L_n_20  | `L_n_21 
                                                      | `L_n_3  | `L_n_4 
                                                      | `L_n_5  | `L_n_6 
                                                      | `L_n_7  | `L_n_8 
                                                      | `L_n_9 ]
                              ->
                              ?maximumSignificantDigits:[ `L_n_1  | `L_n_10 
                                                        | `L_n_11  | 
                                                          `L_n_12 
                                                        | `L_n_13  | 
                                                          `L_n_14 
                                                        | `L_n_15  | 
                                                          `L_n_16 
                                                        | `L_n_17  | 
                                                          `L_n_18 
                                                        | `L_n_19  | 
                                                          `L_n_2 
                                                        | `L_n_20  | 
                                                          `L_n_21 
                                                        | `L_n_3  | `L_n_4 
                                                        | `L_n_5  | `L_n_6 
                                                        | `L_n_7  | `L_n_8 
                                                        | `L_n_9 ]
                                ->
                                ?notation:string ->
                                  ?compactDisplay:string -> unit -> t)
      =
      fun ?localeMatcher:(x6978 : string option) ->
        fun ?style:(x6979 : string option) ->
          fun ?numberingSystem:(x6980 : string option) ->
            fun ?unit:(x6981 : string option) ->
              fun ?unitDisplay:(x6982 : string option) ->
                fun ?currency:(x6983 : string option) ->
                  fun ?currencyDisplay:(x6984 : string option) ->
                    fun ?useGrouping:(x6985 : bool option) ->
                      fun
                        ?minimumIntegerDigits:(x6986 :
                                                [ `L_n_1  | `L_n_10 
                                                | `L_n_11  | `L_n_12 
                                                | `L_n_13  | `L_n_14 
                                                | `L_n_15  | `L_n_16 
                                                | `L_n_17  | `L_n_18 
                                                | `L_n_19  | `L_n_2 
                                                | `L_n_20  | `L_n_21 
                                                | `L_n_3  | `L_n_4  | 
                                                  `L_n_5 
                                                | `L_n_6  | `L_n_7  | 
                                                  `L_n_8 
                                                | `L_n_9 ] option)
                        ->
                        fun
                          ?minimumFractionDigits:(x6987 :
                                                   [ `L_n_0  | `L_n_1 
                                                   | `L_n_10  | `L_n_11 
                                                   | `L_n_12  | `L_n_13 
                                                   | `L_n_14  | `L_n_15 
                                                   | `L_n_16  | `L_n_17 
                                                   | `L_n_18  | `L_n_19 
                                                   | `L_n_2  | `L_n_20 
                                                   | `L_n_3  | `L_n_4 
                                                   | `L_n_5  | `L_n_6 
                                                   | `L_n_7  | `L_n_8 
                                                   | `L_n_9 ] option)
                          ->
                          fun
                            ?maximumFractionDigits:(x6988 :
                                                     [ `L_n_0  | `L_n_1 
                                                     | `L_n_10  | `L_n_11 
                                                     | `L_n_12  | `L_n_13 
                                                     | `L_n_14  | `L_n_15 
                                                     | `L_n_16  | `L_n_17 
                                                     | `L_n_18  | `L_n_19 
                                                     | `L_n_2  | `L_n_20 
                                                     | `L_n_3  | `L_n_4 
                                                     | `L_n_5  | `L_n_6 
                                                     | `L_n_7  | `L_n_8 
                                                     | `L_n_9 ] option)
                            ->
                            fun
                              ?minimumSignificantDigits:(x6989 :
                                                          [ `L_n_1 
                                                          | `L_n_10 
                                                          | `L_n_11 
                                                          | `L_n_12 
                                                          | `L_n_13 
                                                          | `L_n_14 
                                                          | `L_n_15 
                                                          | `L_n_16 
                                                          | `L_n_17 
                                                          | `L_n_18 
                                                          | `L_n_19 
                                                          | `L_n_2 
                                                          | `L_n_20 
                                                          | `L_n_21 
                                                          | `L_n_3  | 
                                                            `L_n_4 
                                                          | `L_n_5  | 
                                                            `L_n_6 
                                                          | `L_n_7  | 
                                                            `L_n_8 
                                                          | `L_n_9 ] option)
                              ->
                              fun
                                ?maximumSignificantDigits:(x6990 :
                                                            [ `L_n_1 
                                                            | `L_n_10 
                                                            | `L_n_11 
                                                            | `L_n_12 
                                                            | `L_n_13 
                                                            | `L_n_14 
                                                            | `L_n_15 
                                                            | `L_n_16 
                                                            | `L_n_17 
                                                            | `L_n_18 
                                                            | `L_n_19 
                                                            | `L_n_2 
                                                            | `L_n_20 
                                                            | `L_n_21 
                                                            | `L_n_3 
                                                            | `L_n_4 
                                                            | `L_n_5 
                                                            | `L_n_6 
                                                            | `L_n_7 
                                                            | `L_n_8 
                                                            | `L_n_9 ] option)
                                ->
                                fun ?notation:(x6991 : string option) ->
                                  fun ?compactDisplay:(x6992 : string option)
                                    ->
                                    fun () ->
                                      let x6993 = Ojs.empty_obj () in
                                      (match x6978 with
                                       | Some x7008 ->
                                           Ojs.set_prop_ascii x6993
                                             "localeMatcher"
                                             (Ojs.string_to_js x7008)
                                       | None -> ());
                                      (match x6979 with
                                       | Some x7007 ->
                                           Ojs.set_prop_ascii x6993 "style"
                                             (Ojs.string_to_js x7007)
                                       | None -> ());
                                      (match x6980 with
                                       | Some x7006 ->
                                           Ojs.set_prop_ascii x6993
                                             "numberingSystem"
                                             (Ojs.string_to_js x7006)
                                       | None -> ());
                                      (match x6981 with
                                       | Some x7005 ->
                                           Ojs.set_prop_ascii x6993 "unit"
                                             (Ojs.string_to_js x7005)
                                       | None -> ());
                                      (match x6982 with
                                       | Some x7004 ->
                                           Ojs.set_prop_ascii x6993
                                             "unitDisplay"
                                             (Ojs.string_to_js x7004)
                                       | None -> ());
                                      (match x6983 with
                                       | Some x7003 ->
                                           Ojs.set_prop_ascii x6993
                                             "currency"
                                             (Ojs.string_to_js x7003)
                                       | None -> ());
                                      (match x6984 with
                                       | Some x7002 ->
                                           Ojs.set_prop_ascii x6993
                                             "currencyDisplay"
                                             (Ojs.string_to_js x7002)
                                       | None -> ());
                                      (match x6985 with
                                       | Some x7001 ->
                                           Ojs.set_prop_ascii x6993
                                             "useGrouping"
                                             (Ojs.bool_to_js x7001)
                                       | None -> ());
                                      (match x6986 with
                                       | Some x7000 ->
                                           Ojs.set_prop_ascii x6993
                                             "minimumIntegerDigits"
                                             (match x7000 with
                                              | `L_n_1 -> Ojs.int_to_js 1
                                              | `L_n_10 -> Ojs.int_to_js 10
                                              | `L_n_11 -> Ojs.int_to_js 11
                                              | `L_n_12 -> Ojs.int_to_js 12
                                              | `L_n_13 -> Ojs.int_to_js 13
                                              | `L_n_14 -> Ojs.int_to_js 14
                                              | `L_n_15 -> Ojs.int_to_js 15
                                              | `L_n_16 -> Ojs.int_to_js 16
                                              | `L_n_17 -> Ojs.int_to_js 17
                                              | `L_n_18 -> Ojs.int_to_js 18
                                              | `L_n_19 -> Ojs.int_to_js 19
                                              | `L_n_2 -> Ojs.int_to_js 2
                                              | `L_n_20 -> Ojs.int_to_js 20
                                              | `L_n_21 -> Ojs.int_to_js 21
                                              | `L_n_3 -> Ojs.int_to_js 3
                                              | `L_n_4 -> Ojs.int_to_js 4
                                              | `L_n_5 -> Ojs.int_to_js 5
                                              | `L_n_6 -> Ojs.int_to_js 6
                                              | `L_n_7 -> Ojs.int_to_js 7
                                              | `L_n_8 -> Ojs.int_to_js 8
                                              | `L_n_9 -> Ojs.int_to_js 9)
                                       | None -> ());
                                      (match x6987 with
                                       | Some x6999 ->
                                           Ojs.set_prop_ascii x6993
                                             "minimumFractionDigits"
                                             (match x6999 with
                                              | `L_n_0 -> Ojs.int_to_js 0
                                              | `L_n_1 -> Ojs.int_to_js 1
                                              | `L_n_10 -> Ojs.int_to_js 10
                                              | `L_n_11 -> Ojs.int_to_js 11
                                              | `L_n_12 -> Ojs.int_to_js 12
                                              | `L_n_13 -> Ojs.int_to_js 13
                                              | `L_n_14 -> Ojs.int_to_js 14
                                              | `L_n_15 -> Ojs.int_to_js 15
                                              | `L_n_16 -> Ojs.int_to_js 16
                                              | `L_n_17 -> Ojs.int_to_js 17
                                              | `L_n_18 -> Ojs.int_to_js 18
                                              | `L_n_19 -> Ojs.int_to_js 19
                                              | `L_n_2 -> Ojs.int_to_js 2
                                              | `L_n_20 -> Ojs.int_to_js 20
                                              | `L_n_3 -> Ojs.int_to_js 3
                                              | `L_n_4 -> Ojs.int_to_js 4
                                              | `L_n_5 -> Ojs.int_to_js 5
                                              | `L_n_6 -> Ojs.int_to_js 6
                                              | `L_n_7 -> Ojs.int_to_js 7
                                              | `L_n_8 -> Ojs.int_to_js 8
                                              | `L_n_9 -> Ojs.int_to_js 9)
                                       | None -> ());
                                      (match x6988 with
                                       | Some x6998 ->
                                           Ojs.set_prop_ascii x6993
                                             "maximumFractionDigits"
                                             (match x6998 with
                                              | `L_n_0 -> Ojs.int_to_js 0
                                              | `L_n_1 -> Ojs.int_to_js 1
                                              | `L_n_10 -> Ojs.int_to_js 10
                                              | `L_n_11 -> Ojs.int_to_js 11
                                              | `L_n_12 -> Ojs.int_to_js 12
                                              | `L_n_13 -> Ojs.int_to_js 13
                                              | `L_n_14 -> Ojs.int_to_js 14
                                              | `L_n_15 -> Ojs.int_to_js 15
                                              | `L_n_16 -> Ojs.int_to_js 16
                                              | `L_n_17 -> Ojs.int_to_js 17
                                              | `L_n_18 -> Ojs.int_to_js 18
                                              | `L_n_19 -> Ojs.int_to_js 19
                                              | `L_n_2 -> Ojs.int_to_js 2
                                              | `L_n_20 -> Ojs.int_to_js 20
                                              | `L_n_3 -> Ojs.int_to_js 3
                                              | `L_n_4 -> Ojs.int_to_js 4
                                              | `L_n_5 -> Ojs.int_to_js 5
                                              | `L_n_6 -> Ojs.int_to_js 6
                                              | `L_n_7 -> Ojs.int_to_js 7
                                              | `L_n_8 -> Ojs.int_to_js 8
                                              | `L_n_9 -> Ojs.int_to_js 9)
                                       | None -> ());
                                      (match x6989 with
                                       | Some x6997 ->
                                           Ojs.set_prop_ascii x6993
                                             "minimumSignificantDigits"
                                             (match x6997 with
                                              | `L_n_1 -> Ojs.int_to_js 1
                                              | `L_n_10 -> Ojs.int_to_js 10
                                              | `L_n_11 -> Ojs.int_to_js 11
                                              | `L_n_12 -> Ojs.int_to_js 12
                                              | `L_n_13 -> Ojs.int_to_js 13
                                              | `L_n_14 -> Ojs.int_to_js 14
                                              | `L_n_15 -> Ojs.int_to_js 15
                                              | `L_n_16 -> Ojs.int_to_js 16
                                              | `L_n_17 -> Ojs.int_to_js 17
                                              | `L_n_18 -> Ojs.int_to_js 18
                                              | `L_n_19 -> Ojs.int_to_js 19
                                              | `L_n_2 -> Ojs.int_to_js 2
                                              | `L_n_20 -> Ojs.int_to_js 20
                                              | `L_n_21 -> Ojs.int_to_js 21
                                              | `L_n_3 -> Ojs.int_to_js 3
                                              | `L_n_4 -> Ojs.int_to_js 4
                                              | `L_n_5 -> Ojs.int_to_js 5
                                              | `L_n_6 -> Ojs.int_to_js 6
                                              | `L_n_7 -> Ojs.int_to_js 7
                                              | `L_n_8 -> Ojs.int_to_js 8
                                              | `L_n_9 -> Ojs.int_to_js 9)
                                       | None -> ());
                                      (match x6990 with
                                       | Some x6996 ->
                                           Ojs.set_prop_ascii x6993
                                             "maximumSignificantDigits"
                                             (match x6996 with
                                              | `L_n_1 -> Ojs.int_to_js 1
                                              | `L_n_10 -> Ojs.int_to_js 10
                                              | `L_n_11 -> Ojs.int_to_js 11
                                              | `L_n_12 -> Ojs.int_to_js 12
                                              | `L_n_13 -> Ojs.int_to_js 13
                                              | `L_n_14 -> Ojs.int_to_js 14
                                              | `L_n_15 -> Ojs.int_to_js 15
                                              | `L_n_16 -> Ojs.int_to_js 16
                                              | `L_n_17 -> Ojs.int_to_js 17
                                              | `L_n_18 -> Ojs.int_to_js 18
                                              | `L_n_19 -> Ojs.int_to_js 19
                                              | `L_n_2 -> Ojs.int_to_js 2
                                              | `L_n_20 -> Ojs.int_to_js 20
                                              | `L_n_21 -> Ojs.int_to_js 21
                                              | `L_n_3 -> Ojs.int_to_js 3
                                              | `L_n_4 -> Ojs.int_to_js 4
                                              | `L_n_5 -> Ojs.int_to_js 5
                                              | `L_n_6 -> Ojs.int_to_js 6
                                              | `L_n_7 -> Ojs.int_to_js 7
                                              | `L_n_8 -> Ojs.int_to_js 8
                                              | `L_n_9 -> Ojs.int_to_js 9)
                                       | None -> ());
                                      (match x6991 with
                                       | Some x6995 ->
                                           Ojs.set_prop_ascii x6993
                                             "notation"
                                             (Ojs.string_to_js x6995)
                                       | None -> ());
                                      (match x6992 with
                                       | Some x6994 ->
                                           Ojs.set_prop_ascii x6993
                                             "compactDisplay"
                                             (Ojs.string_to_js x6994)
                                       | None -> ());
                                      t_of_js x6993
    let cast_from = Obj.magic
  end
module BigInt =
  struct
    type t = [ `BigInt ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x7010 : Ojs.t) -> t_of_js x7010
    and t_0_to_js : t_0 -> Ojs.t = fun (x7009 : t) -> t_to_js x7009
    type tags = [ `BigInt ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `BigInt ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x7013 : Ojs.t) -> intf_of_js __tags_of_js x7013
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x7011 : __tags intf) -> intf_to_js __tags_to_js x7011
    let (toString : 'tags this -> ?radix:float -> unit -> string) =
      fun (x7018 : 'tags this) ->
        fun ?radix:(x7015 : float option) ->
          fun () ->
            Ojs.string_of_js
              (let x7020 = this_to_js Obj.magic x7018 in
               Ojs.call (Ojs.get_prop_ascii x7020 "toString") "apply"
                 [|x7020;((let x7016 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x7015 with
                            | Some x7017 ->
                                ignore
                                  (Ojs.call x7016 "push"
                                     [|(Ojs.float_to_js x7017)|])
                            | None -> ());
                           x7016))|])
    let (toLocaleString :
      'tags this ->
        ?locales:string ->
          ?options:BigIntToLocaleStringOptions.t -> unit -> string)
      =
      fun (x7026 : 'tags this) ->
        fun ?locales:(x7021 : string option) ->
          fun ?options:(x7022 : BigIntToLocaleStringOptions.t option) ->
            fun () ->
              Ojs.string_of_js
                (let x7028 = this_to_js Obj.magic x7026 in
                 Ojs.call (Ojs.get_prop_ascii x7028 "toLocaleString") "apply"
                   [|x7028;((let x7023 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x7021 with
                              | Some x7025 ->
                                  ignore
                                    (Ojs.call x7023 "push"
                                       [|(Ojs.string_to_js x7025)|])
                              | None -> ());
                             (match x7022 with
                              | Some x7024 ->
                                  ignore
                                    (Ojs.call x7023 "push"
                                       [|(BigIntToLocaleStringOptions.t_to_js
                                            x7024)|])
                              | None -> ());
                             x7023))|])
    let (valueOf : 'tags this -> bigint) =
      fun (x7029 : 'tags this) ->
        bigint_of_js (Ojs.call (this_to_js Obj.magic x7029) "valueOf" [||])
    let (invoke :
      [ `U1 of bigint  | `U2 of bool  | `U3 of float  | `U4 of string ] ->
        bigint)
      =
      fun
        (x7031 :
          [ `U1 of bigint  | `U2 of bool  | `U3 of float  | `U4 of string ])
        ->
        bigint_of_js
          (Ojs.apply (Ojs.get_prop_ascii Ojs.global "BigInt")
             [|((match x7031 with
                 | `U1 x7032 -> bigint_to_js x7032
                 | `U2 x7033 -> Ojs.bool_to_js x7033
                 | `U3 x7034 -> Ojs.float_to_js x7034
                 | `U4 x7035 -> Ojs.string_to_js x7035))|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "BigInt")
             "prototype")
    let (asIntN : bits:float -> int:bigint -> bigint) =
      fun ~bits:(x7036 : float) ->
        fun ~int:(x7037 : bigint) ->
          bigint_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "BigInt") "asIntN"
               [|(Ojs.float_to_js x7036);(bigint_to_js x7037)|])
    let (asUintN : bits:float -> int:bigint -> bigint) =
      fun ~bits:(x7038 : float) ->
        fun ~int:(x7039 : bigint) ->
          bigint_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "BigInt") "asUintN"
               [|(Ojs.float_to_js x7038);(bigint_to_js x7039)|])
    let cast_from = Obj.magic
  end
module Uint8Array =
  struct
    type t =
      [ `Uint8Array  | float ArrayLike.tags_1
      | float IterableIterator.tags_1] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x7041 : Ojs.t) -> t_of_js x7041
    and t_0_to_js : t_0 -> Ojs.t = fun (x7040 : t) -> t_to_js x7040
    type tags =
      [ `Uint8Array  | float ArrayLike.tags_1
      | float IterableIterator.tags_1]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `Uint8Array ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x7044 : Ojs.t) -> intf_of_js __tags_of_js x7044
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x7042 : __tags intf) -> intf_to_js __tags_to_js x7042
    let (at : 'tags this -> index:float -> float option) =
      fun (x7047 : 'tags this) ->
        fun ~index:(x7046 : float) ->
          Ojs.option_of_js Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x7047) "at"
               [|(Ojs.float_to_js x7046)|])
    let (includes :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> bool)
      =
      fun (x7054 : 'tags this) ->
        fun ~searchElement:(x7050 : float) ->
          fun ?fromIndex:(x7051 : float option) ->
            fun () ->
              Ojs.bool_of_js
                (let x7056 = this_to_js Obj.magic x7054 in
                 Ojs.call (Ojs.get_prop_ascii x7056 "includes") "apply"
                   [|x7056;((let x7052 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7052 "push"
                                  [|(Ojs.float_to_js x7050)|]);
                             (match x7051 with
                              | Some x7053 ->
                                  ignore
                                    (Ojs.call x7052 "push"
                                       [|(Ojs.float_to_js x7053)|])
                              | None -> ());
                             x7052))|])
    let (entries : 'tags this -> (float * float) IterableIterator.t) =
      fun (x7057 : 'tags this) ->
        IterableIterator.t_of_js
          (fun (x7059 : Ojs.t) ->
             let x7060 = x7059 in
             ((Ojs.float_of_js (Ojs.array_get x7060 0)),
               (Ojs.float_of_js (Ojs.array_get x7060 1))))
          (Ojs.call (this_to_js Obj.magic x7057) "entries" [||])
    let (keys : 'tags this -> float IterableIterator.t) =
      fun (x7061 : 'tags this) ->
        IterableIterator.t_of_js Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x7061) "keys" [||])
    let (values : 'tags this -> float IterableIterator.t) =
      fun (x7064 : 'tags this) ->
        IterableIterator.t_of_js Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x7064) "values" [||])
    let (get_BYTES_PER_ELEMENT : 'tags this -> float) =
      fun (x7067 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x7067)
             "BYTES_PER_ELEMENT")
    let (get_buffer : 'tags this -> ArrayBufferLike.t) =
      fun (x7069 : 'tags this) ->
        ArrayBufferLike.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x7069) "buffer")
    let (get_byteLength : 'tags this -> float) =
      fun (x7071 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x7071) "byteLength")
    let (get_byteOffset : 'tags this -> float) =
      fun (x7073 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x7073) "byteOffset")
    let (copyWithin :
      'tags this ->
        target:float -> start:float -> ?end_:float -> unit -> 'tags this)
      =
      fun (x7080 : 'tags this) ->
        fun ~target:(x7075 : float) ->
          fun ~start:(x7076 : float) ->
            fun ?end_:(x7077 : float option) ->
              fun () ->
                this_of_js Obj.magic
                  (let x7082 = this_to_js Obj.magic x7080 in
                   Ojs.call (Ojs.get_prop_ascii x7082 "copyWithin") "apply"
                     [|x7082;((let x7078 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x7078 "push"
                                    [|(Ojs.float_to_js x7075)|]);
                               ignore
                                 (Ojs.call x7078 "push"
                                    [|(Ojs.float_to_js x7076)|]);
                               (match x7077 with
                                | Some x7079 ->
                                    ignore
                                      (Ojs.call x7078 "push"
                                         [|(Ojs.float_to_js x7079)|])
                                | None -> ());
                               x7078))|])
    let (every :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x7091 : 'tags this) ->
        fun
          ~predicate:(x7084 :
                       value:float -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x7085 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x7093 = this_to_js Obj.magic x7091 in
                 Ojs.call (Ojs.get_prop_ascii x7093 "every") "apply"
                   [|x7093;((let x7086 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7086 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x7088 : Ojs.t) ->
                                          fun (x7089 : Ojs.t) ->
                                            fun (x7090 : Ojs.t) ->
                                              unknown_to_js
                                                (x7084
                                                   ~value:(Ojs.float_of_js
                                                             x7088)
                                                   ~index:(Ojs.float_of_js
                                                             x7089)
                                                   ~array:(t_of_js x7090))))|]);
                             (match x7085 with
                              | Some x7087 ->
                                  ignore
                                    (Ojs.call x7086 "push"
                                       [|(any_to_js x7087)|])
                              | None -> ());
                             x7086))|])
    let (fill :
      'tags this ->
        value:float -> ?start:float -> ?end_:float -> unit -> 'tags this)
      =
      fun (x7100 : 'tags this) ->
        fun ~value:(x7094 : float) ->
          fun ?start:(x7095 : float option) ->
            fun ?end_:(x7096 : float option) ->
              fun () ->
                this_of_js Obj.magic
                  (let x7102 = this_to_js Obj.magic x7100 in
                   Ojs.call (Ojs.get_prop_ascii x7102 "fill") "apply"
                     [|x7102;((let x7097 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x7097 "push"
                                    [|(Ojs.float_to_js x7094)|]);
                               (match x7095 with
                                | Some x7099 ->
                                    ignore
                                      (Ojs.call x7097 "push"
                                         [|(Ojs.float_to_js x7099)|])
                                | None -> ());
                               (match x7096 with
                                | Some x7098 ->
                                    ignore
                                      (Ojs.call x7097 "push"
                                         [|(Ojs.float_to_js x7098)|])
                                | None -> ());
                               x7097))|])
    let (filter :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> any) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x7111 : 'tags this) ->
        fun ~predicate:(x7104 : value:float -> index:float -> array:t -> any)
          ->
          fun ?thisArg:(x7105 : any option) ->
            fun () ->
              t_of_js
                (let x7113 = this_to_js Obj.magic x7111 in
                 Ojs.call (Ojs.get_prop_ascii x7113 "filter") "apply"
                   [|x7113;((let x7106 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7106 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x7108 : Ojs.t) ->
                                          fun (x7109 : Ojs.t) ->
                                            fun (x7110 : Ojs.t) ->
                                              any_to_js
                                                (x7104
                                                   ~value:(Ojs.float_of_js
                                                             x7108)
                                                   ~index:(Ojs.float_of_js
                                                             x7109)
                                                   ~array:(t_of_js x7110))))|]);
                             (match x7105 with
                              | Some x7107 ->
                                  ignore
                                    (Ojs.call x7106 "push"
                                       [|(any_to_js x7107)|])
                              | None -> ());
                             x7106))|])
    let (find :
      'tags this ->
        predicate:(value:float -> index:float -> obj:t -> bool) ->
          ?thisArg:any -> unit -> float option)
      =
      fun (x7121 : 'tags this) ->
        fun ~predicate:(x7114 : value:float -> index:float -> obj:t -> bool)
          ->
          fun ?thisArg:(x7115 : any option) ->
            fun () ->
              Ojs.option_of_js Ojs.float_of_js
                (let x7123 = this_to_js Obj.magic x7121 in
                 Ojs.call (Ojs.get_prop_ascii x7123 "find") "apply"
                   [|x7123;((let x7116 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7116 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x7118 : Ojs.t) ->
                                          fun (x7119 : Ojs.t) ->
                                            fun (x7120 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x7114
                                                   ~value:(Ojs.float_of_js
                                                             x7118)
                                                   ~index:(Ojs.float_of_js
                                                             x7119)
                                                   ~obj:(t_of_js x7120))))|]);
                             (match x7115 with
                              | Some x7117 ->
                                  ignore
                                    (Ojs.call x7116 "push"
                                       [|(any_to_js x7117)|])
                              | None -> ());
                             x7116))|])
    let (findIndex :
      'tags this ->
        predicate:(value:float -> index:float -> obj:t -> bool) ->
          ?thisArg:any -> unit -> float)
      =
      fun (x7132 : 'tags this) ->
        fun ~predicate:(x7125 : value:float -> index:float -> obj:t -> bool)
          ->
          fun ?thisArg:(x7126 : any option) ->
            fun () ->
              Ojs.float_of_js
                (let x7134 = this_to_js Obj.magic x7132 in
                 Ojs.call (Ojs.get_prop_ascii x7134 "findIndex") "apply"
                   [|x7134;((let x7127 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7127 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x7129 : Ojs.t) ->
                                          fun (x7130 : Ojs.t) ->
                                            fun (x7131 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x7125
                                                   ~value:(Ojs.float_of_js
                                                             x7129)
                                                   ~index:(Ojs.float_of_js
                                                             x7130)
                                                   ~obj:(t_of_js x7131))))|]);
                             (match x7126 with
                              | Some x7128 ->
                                  ignore
                                    (Ojs.call x7127 "push"
                                       [|(any_to_js x7128)|])
                              | None -> ());
                             x7127))|])
    let (forEach :
      'tags this ->
        callbackfn:(value:float -> index:float -> array:t -> unit) ->
          ?thisArg:any -> unit -> unit)
      =
      fun (x7142 : 'tags this) ->
        fun
          ~callbackfn:(x7135 : value:float -> index:float -> array:t -> unit)
          ->
          fun ?thisArg:(x7136 : any option) ->
            fun () ->
              ignore
                (let x7144 = this_to_js Obj.magic x7142 in
                 Ojs.call (Ojs.get_prop_ascii x7144 "forEach") "apply"
                   [|x7144;((let x7137 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7137 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x7139 : Ojs.t) ->
                                          fun (x7140 : Ojs.t) ->
                                            fun (x7141 : Ojs.t) ->
                                              x7135
                                                ~value:(Ojs.float_of_js x7139)
                                                ~index:(Ojs.float_of_js x7140)
                                                ~array:(t_of_js x7141)))|]);
                             (match x7136 with
                              | Some x7138 ->
                                  ignore
                                    (Ojs.call x7137 "push"
                                       [|(any_to_js x7138)|])
                              | None -> ());
                             x7137))|])
    let (indexOf :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> float)
      =
      fun (x7149 : 'tags this) ->
        fun ~searchElement:(x7145 : float) ->
          fun ?fromIndex:(x7146 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x7151 = this_to_js Obj.magic x7149 in
                 Ojs.call (Ojs.get_prop_ascii x7151 "indexOf") "apply"
                   [|x7151;((let x7147 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7147 "push"
                                  [|(Ojs.float_to_js x7145)|]);
                             (match x7146 with
                              | Some x7148 ->
                                  ignore
                                    (Ojs.call x7147 "push"
                                       [|(Ojs.float_to_js x7148)|])
                              | None -> ());
                             x7147))|])
    let (join : 'tags this -> ?separator:string -> unit -> string) =
      fun (x7155 : 'tags this) ->
        fun ?separator:(x7152 : string option) ->
          fun () ->
            Ojs.string_of_js
              (let x7157 = this_to_js Obj.magic x7155 in
               Ojs.call (Ojs.get_prop_ascii x7157 "join") "apply"
                 [|x7157;((let x7153 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x7152 with
                            | Some x7154 ->
                                ignore
                                  (Ojs.call x7153 "push"
                                     [|(Ojs.string_to_js x7154)|])
                            | None -> ());
                           x7153))|])
    let (lastIndexOf :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> float)
      =
      fun (x7162 : 'tags this) ->
        fun ~searchElement:(x7158 : float) ->
          fun ?fromIndex:(x7159 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x7164 = this_to_js Obj.magic x7162 in
                 Ojs.call (Ojs.get_prop_ascii x7164 "lastIndexOf") "apply"
                   [|x7164;((let x7160 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7160 "push"
                                  [|(Ojs.float_to_js x7158)|]);
                             (match x7159 with
                              | Some x7161 ->
                                  ignore
                                    (Ojs.call x7160 "push"
                                       [|(Ojs.float_to_js x7161)|])
                              | None -> ());
                             x7160))|])
    let (get_length : 'tags this -> float) =
      fun (x7165 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x7165) "length")
    let (map :
      'tags this ->
        callbackfn:(value:float -> index:float -> array:t -> float) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x7174 : 'tags this) ->
        fun
          ~callbackfn:(x7167 :
                        value:float -> index:float -> array:t -> float)
          ->
          fun ?thisArg:(x7168 : any option) ->
            fun () ->
              t_of_js
                (let x7176 = this_to_js Obj.magic x7174 in
                 Ojs.call (Ojs.get_prop_ascii x7176 "map") "apply"
                   [|x7176;((let x7169 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7169 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x7171 : Ojs.t) ->
                                          fun (x7172 : Ojs.t) ->
                                            fun (x7173 : Ojs.t) ->
                                              Ojs.float_to_js
                                                (x7167
                                                   ~value:(Ojs.float_of_js
                                                             x7171)
                                                   ~index:(Ojs.float_of_js
                                                             x7172)
                                                   ~array:(t_of_js x7173))))|]);
                             (match x7168 with
                              | Some x7170 ->
                                  ignore
                                    (Ojs.call x7169 "push"
                                       [|(any_to_js x7170)|])
                              | None -> ());
                             x7169))|])
    let (reduce :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> float)
      =
      fun (x7182 : 'tags this) ->
        fun
          ~callbackfn:(x7177 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x7182) "reduce"
               [|(Ojs.fun_to_js 4
                    (fun (x7178 : Ojs.t) ->
                       fun (x7179 : Ojs.t) ->
                         fun (x7180 : Ojs.t) ->
                           fun (x7181 : Ojs.t) ->
                             Ojs.float_to_js
                               (x7177 ~previousValue:(Ojs.float_of_js x7178)
                                  ~currentValue:(Ojs.float_of_js x7179)
                                  ~currentIndex:(Ojs.float_of_js x7180)
                                  ~array:(t_of_js x7181))))|])
    let (reduce' :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> initialValue:float -> float)
      =
      fun (x7190 : 'tags this) ->
        fun
          ~callbackfn:(x7184 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          fun ~initialValue:(x7189 : float) ->
            Ojs.float_of_js
              (Ojs.call (this_to_js Obj.magic x7190) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x7185 : Ojs.t) ->
                         fun (x7186 : Ojs.t) ->
                           fun (x7187 : Ojs.t) ->
                             fun (x7188 : Ojs.t) ->
                               Ojs.float_to_js
                                 (x7184
                                    ~previousValue:(Ojs.float_of_js x7185)
                                    ~currentValue:(Ojs.float_of_js x7186)
                                    ~currentIndex:(Ojs.float_of_js x7187)
                                    ~array:(t_of_js x7188))));(Ojs.float_to_js
                                                                 x7189)|])
    let (reduce'' :
      'tags this ->
        callbackfn:(previousValue:'U ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x7198 : 'tags this) ->
        fun
          ~callbackfn:(x7192 :
                        previousValue:'U ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x7197 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic x7198) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x7193 : Ojs.t) ->
                         fun (x7194 : Ojs.t) ->
                           fun (x7195 : Ojs.t) ->
                             fun (x7196 : Ojs.t) ->
                               Obj.magic
                                 (x7192 ~previousValue:(Obj.magic x7193)
                                    ~currentValue:(Ojs.float_of_js x7194)
                                    ~currentIndex:(Ojs.float_of_js x7195)
                                    ~array:(t_of_js x7196))));(Obj.magic
                                                                 x7197)|])
    let (reduceRight :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> float)
      =
      fun (x7205 : 'tags this) ->
        fun
          ~callbackfn:(x7200 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x7205) "reduceRight"
               [|(Ojs.fun_to_js 4
                    (fun (x7201 : Ojs.t) ->
                       fun (x7202 : Ojs.t) ->
                         fun (x7203 : Ojs.t) ->
                           fun (x7204 : Ojs.t) ->
                             Ojs.float_to_js
                               (x7200 ~previousValue:(Ojs.float_of_js x7201)
                                  ~currentValue:(Ojs.float_of_js x7202)
                                  ~currentIndex:(Ojs.float_of_js x7203)
                                  ~array:(t_of_js x7204))))|])
    let (reduceRight' :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> initialValue:float -> float)
      =
      fun (x7213 : 'tags this) ->
        fun
          ~callbackfn:(x7207 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          fun ~initialValue:(x7212 : float) ->
            Ojs.float_of_js
              (Ojs.call (this_to_js Obj.magic x7213) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x7208 : Ojs.t) ->
                         fun (x7209 : Ojs.t) ->
                           fun (x7210 : Ojs.t) ->
                             fun (x7211 : Ojs.t) ->
                               Ojs.float_to_js
                                 (x7207
                                    ~previousValue:(Ojs.float_of_js x7208)
                                    ~currentValue:(Ojs.float_of_js x7209)
                                    ~currentIndex:(Ojs.float_of_js x7210)
                                    ~array:(t_of_js x7211))));(Ojs.float_to_js
                                                                 x7212)|])
    let (reduceRight'' :
      'tags this ->
        callbackfn:(previousValue:'U ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x7221 : 'tags this) ->
        fun
          ~callbackfn:(x7215 :
                        previousValue:'U ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x7220 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic x7221) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x7216 : Ojs.t) ->
                         fun (x7217 : Ojs.t) ->
                           fun (x7218 : Ojs.t) ->
                             fun (x7219 : Ojs.t) ->
                               Obj.magic
                                 (x7215 ~previousValue:(Obj.magic x7216)
                                    ~currentValue:(Ojs.float_of_js x7217)
                                    ~currentIndex:(Ojs.float_of_js x7218)
                                    ~array:(t_of_js x7219))));(Obj.magic
                                                                 x7220)|])
    let (reverse : 'tags this -> t) =
      fun (x7223 : 'tags this) ->
        t_of_js (Ojs.call (this_to_js Obj.magic x7223) "reverse" [||])
    let (set_ :
      'tags this -> array:float ArrayLike.t -> ?offset:float -> unit -> unit)
      =
      fun (x7230 : 'tags this) ->
        fun ~array:(x7225 : float ArrayLike.t) ->
          fun ?offset:(x7226 : float option) ->
            fun () ->
              ignore
                (let x7232 = this_to_js Obj.magic x7230 in
                 Ojs.call (Ojs.get_prop_ascii x7232 "set") "apply"
                   [|x7232;((let x7227 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7227 "push"
                                  [|(ArrayLike.t_to_js Ojs.float_to_js x7225)|]);
                             (match x7226 with
                              | Some x7228 ->
                                  ignore
                                    (Ojs.call x7227 "push"
                                       [|(Ojs.float_to_js x7228)|])
                              | None -> ());
                             x7227))|])
    let (slice : 'tags this -> ?start:float -> ?end_:float -> unit -> t) =
      fun (x7238 : 'tags this) ->
        fun ?start:(x7233 : float option) ->
          fun ?end_:(x7234 : float option) ->
            fun () ->
              t_of_js
                (let x7240 = this_to_js Obj.magic x7238 in
                 Ojs.call (Ojs.get_prop_ascii x7240 "slice") "apply"
                   [|x7240;((let x7235 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x7233 with
                              | Some x7237 ->
                                  ignore
                                    (Ojs.call x7235 "push"
                                       [|(Ojs.float_to_js x7237)|])
                              | None -> ());
                             (match x7234 with
                              | Some x7236 ->
                                  ignore
                                    (Ojs.call x7235 "push"
                                       [|(Ojs.float_to_js x7236)|])
                              | None -> ());
                             x7235))|])
    let (some :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x7248 : 'tags this) ->
        fun
          ~predicate:(x7241 :
                       value:float -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x7242 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x7250 = this_to_js Obj.magic x7248 in
                 Ojs.call (Ojs.get_prop_ascii x7250 "some") "apply"
                   [|x7250;((let x7243 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7243 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x7245 : Ojs.t) ->
                                          fun (x7246 : Ojs.t) ->
                                            fun (x7247 : Ojs.t) ->
                                              unknown_to_js
                                                (x7241
                                                   ~value:(Ojs.float_of_js
                                                             x7245)
                                                   ~index:(Ojs.float_of_js
                                                             x7246)
                                                   ~array:(t_of_js x7247))))|]);
                             (match x7242 with
                              | Some x7244 ->
                                  ignore
                                    (Ojs.call x7243 "push"
                                       [|(any_to_js x7244)|])
                              | None -> ());
                             x7243))|])
    let (sort :
      'tags this ->
        ?compareFn:(a:float -> b:float -> float) -> unit -> 'tags this)
      =
      fun (x7256 : 'tags this) ->
        fun ?compareFn:(x7251 : (a:float -> b:float -> float) option) ->
          fun () ->
            this_of_js Obj.magic
              (let x7258 = this_to_js Obj.magic x7256 in
               Ojs.call (Ojs.get_prop_ascii x7258 "sort") "apply"
                 [|x7258;((let x7252 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x7251 with
                            | Some x7253 ->
                                ignore
                                  (Ojs.call x7252 "push"
                                     [|(Ojs.fun_to_js 2
                                          (fun (x7254 : Ojs.t) ->
                                             fun (x7255 : Ojs.t) ->
                                               Ojs.float_to_js
                                                 (x7253
                                                    ~a:(Ojs.float_of_js x7254)
                                                    ~b:(Ojs.float_of_js x7255))))|])
                            | None -> ());
                           x7252))|])
    let (subarray : 'tags this -> ?begin_:float -> ?end_:float -> unit -> t)
      =
      fun (x7265 : 'tags this) ->
        fun ?begin_:(x7260 : float option) ->
          fun ?end_:(x7261 : float option) ->
            fun () ->
              t_of_js
                (let x7267 = this_to_js Obj.magic x7265 in
                 Ojs.call (Ojs.get_prop_ascii x7267 "subarray") "apply"
                   [|x7267;((let x7262 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x7260 with
                              | Some x7264 ->
                                  ignore
                                    (Ojs.call x7262 "push"
                                       [|(Ojs.float_to_js x7264)|])
                              | None -> ());
                             (match x7261 with
                              | Some x7263 ->
                                  ignore
                                    (Ojs.call x7262 "push"
                                       [|(Ojs.float_to_js x7263)|])
                              | None -> ());
                             x7262))|])
    let (toLocaleString : 'tags this -> string) =
      fun (x7268 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x7268) "toLocaleString" [||])
    let (toString : 'tags this -> string) =
      fun (x7270 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x7270) "toString" [||])
    let (valueOf : 'tags this -> t) =
      fun (x7272 : 'tags this) ->
        t_of_js (Ojs.call (this_to_js Obj.magic x7272) "valueOf" [||])
    let (get : 'tags this -> float -> float) =
      fun (x7274 : 'tags this) ->
        fun (x7276 : float) ->
          Ojs.float_of_js
            (Ojs.get_prop (this_to_js Obj.magic x7274)
               (Ojs.float_to_js x7276))
    let (set : 'tags this -> float -> float -> unit) =
      fun (x7277 : 'tags this) ->
        fun (x7279 : float) ->
          fun (x7280 : float) ->
            Ojs.set_prop (this_to_js Obj.magic x7277) (Ojs.float_to_js x7279)
              (Ojs.float_to_js x7280)
    let (create : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Uint8Array") [||])
    let (create' : float Iterable.t -> t) =
      fun (x7281 : float Iterable.t) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Uint8Array")
             [|(Iterable.t_to_js Ojs.float_to_js x7281)|])
    let (from :
      arrayLike:float Iterable.t ->
        ?mapfn:(v:float -> k:float -> float) -> ?thisArg:any -> unit -> t)
      =
      fun ~arrayLike:(x7283 : float Iterable.t) ->
        fun ?mapfn:(x7284 : (v:float -> k:float -> float) option) ->
          fun ?thisArg:(x7285 : any option) ->
            fun () ->
              t_of_js
                (let x7292 = Ojs.get_prop_ascii Ojs.global "Uint8Array" in
                 Ojs.call (Ojs.get_prop_ascii x7292 "from") "apply"
                   [|x7292;((let x7286 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7286 "push"
                                  [|(Iterable.t_to_js Ojs.float_to_js x7283)|]);
                             (match x7284 with
                              | Some x7288 ->
                                  ignore
                                    (Ojs.call x7286 "push"
                                       [|(Ojs.fun_to_js 2
                                            (fun (x7289 : Ojs.t) ->
                                               fun (x7290 : Ojs.t) ->
                                                 Ojs.float_to_js
                                                   (x7288
                                                      ~v:(Ojs.float_of_js
                                                            x7289)
                                                      ~k:(Ojs.float_of_js
                                                            x7290))))|])
                              | None -> ());
                             (match x7285 with
                              | Some x7287 ->
                                  ignore
                                    (Ojs.call x7286 "push"
                                       [|(any_to_js x7287)|])
                              | None -> ());
                             x7286))|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Uint8Array")
             "prototype")
    let (create'' : float -> t) =
      fun (x7293 : float) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Uint8Array")
             [|(Ojs.float_to_js x7293)|])
    let (create''' :
      [ `U1 of float ArrayLike.t  | `U2 of ArrayBufferLike.t ] -> t) =
      fun (x7294 : [ `U1 of float ArrayLike.t  | `U2 of ArrayBufferLike.t ])
        ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Uint8Array")
             [|((match x7294 with
                 | `U1 x7295 -> ArrayLike.t_to_js Ojs.float_to_js x7295
                 | `U2 x7297 -> ArrayBufferLike.t_to_js x7297))|])
    let (create'''' :
      buffer:ArrayBufferLike.t ->
        ?byteOffset:float -> ?length:float -> unit -> t)
      =
      fun ~buffer:(x7298 : ArrayBufferLike.t) ->
        fun ?byteOffset:(x7299 : float option) ->
          fun ?length:(x7300 : float option) ->
            fun () ->
              t_of_js
                (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "Uint8Array")
                   (let x7301 =
                      Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                        [||] in
                    ignore
                      (Ojs.call x7301 "push"
                         [|(ArrayBufferLike.t_to_js x7298)|]);
                    (match x7299 with
                     | Some x7303 ->
                         ignore
                           (Ojs.call x7301 "push" [|(Ojs.float_to_js x7303)|])
                     | None -> ());
                    (match x7300 with
                     | Some x7302 ->
                         ignore
                           (Ojs.call x7301 "push" [|(Ojs.float_to_js x7302)|])
                     | None -> ());
                    x7301))
    let (bytes_per_element : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Uint8Array")
             "BYTES_PER_ELEMENT")
    let (of_ : float list -> t) =
      fun (x7304 : float list) ->
        t_of_js
          (let x7307 = Ojs.get_prop_ascii Ojs.global "Uint8Array" in
           Ojs.call (Ojs.get_prop_ascii x7307 "of") "apply"
             [|x7307;((let x7305 =
                         Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                           [||] in
                       List.iter
                         (fun (x7306 : float) ->
                            ignore
                              (Ojs.call x7305 "push"
                                 [|(Ojs.float_to_js x7306)|])) x7304;
                       x7305))|])
    let (from' : float ArrayLike.t -> t) =
      fun (x7308 : float ArrayLike.t) ->
        t_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Uint8Array") "from"
             [|(ArrayLike.t_to_js Ojs.float_to_js x7308)|])
    let (from'' :
      arrayLike:'T ArrayLike.t ->
        mapfn:(v:'T -> k:float -> float) -> ?thisArg:any -> unit -> t)
      =
      fun ~arrayLike:(x7310 : 'T ArrayLike.t) ->
        fun ~mapfn:(x7311 : v:'T -> k:float -> float) ->
          fun ?thisArg:(x7312 : any option) ->
            fun () ->
              t_of_js
                (let x7318 = Ojs.get_prop_ascii Ojs.global "Uint8Array" in
                 Ojs.call (Ojs.get_prop_ascii x7318 "from") "apply"
                   [|x7318;((let x7313 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7313 "push"
                                  [|(ArrayLike.t_to_js Obj.magic x7310)|]);
                             ignore
                               (Ojs.call x7313 "push"
                                  [|(Ojs.fun_to_js 2
                                       (fun (x7315 : Ojs.t) ->
                                          fun (x7316 : Ojs.t) ->
                                            Ojs.float_to_js
                                              (x7311 ~v:(Obj.magic x7315)
                                                 ~k:(Ojs.float_of_js x7316))))|]);
                             (match x7312 with
                              | Some x7314 ->
                                  ignore
                                    (Ojs.call x7313 "push"
                                       [|(any_to_js x7314)|])
                              | None -> ());
                             x7313))|])
    let cast_from = Obj.magic
  end
module Uint32Array =
  struct
    type t =
      [ `Uint32Array  | float ArrayLike.tags_1
      | float IterableIterator.tags_1] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x7320 : Ojs.t) -> t_of_js x7320
    and t_0_to_js : t_0 -> Ojs.t = fun (x7319 : t) -> t_to_js x7319
    type tags =
      [ `Uint32Array  | float ArrayLike.tags_1
      | float IterableIterator.tags_1]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `Uint32Array ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x7323 : Ojs.t) -> intf_of_js __tags_of_js x7323
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x7321 : __tags intf) -> intf_to_js __tags_to_js x7321
    let (at : 'tags this -> index:float -> float option) =
      fun (x7326 : 'tags this) ->
        fun ~index:(x7325 : float) ->
          Ojs.option_of_js Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x7326) "at"
               [|(Ojs.float_to_js x7325)|])
    let (includes :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> bool)
      =
      fun (x7333 : 'tags this) ->
        fun ~searchElement:(x7329 : float) ->
          fun ?fromIndex:(x7330 : float option) ->
            fun () ->
              Ojs.bool_of_js
                (let x7335 = this_to_js Obj.magic x7333 in
                 Ojs.call (Ojs.get_prop_ascii x7335 "includes") "apply"
                   [|x7335;((let x7331 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7331 "push"
                                  [|(Ojs.float_to_js x7329)|]);
                             (match x7330 with
                              | Some x7332 ->
                                  ignore
                                    (Ojs.call x7331 "push"
                                       [|(Ojs.float_to_js x7332)|])
                              | None -> ());
                             x7331))|])
    let (entries : 'tags this -> (float * float) IterableIterator.t) =
      fun (x7336 : 'tags this) ->
        IterableIterator.t_of_js
          (fun (x7338 : Ojs.t) ->
             let x7339 = x7338 in
             ((Ojs.float_of_js (Ojs.array_get x7339 0)),
               (Ojs.float_of_js (Ojs.array_get x7339 1))))
          (Ojs.call (this_to_js Obj.magic x7336) "entries" [||])
    let (keys : 'tags this -> float IterableIterator.t) =
      fun (x7340 : 'tags this) ->
        IterableIterator.t_of_js Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x7340) "keys" [||])
    let (values : 'tags this -> float IterableIterator.t) =
      fun (x7343 : 'tags this) ->
        IterableIterator.t_of_js Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x7343) "values" [||])
    let (get_BYTES_PER_ELEMENT : 'tags this -> float) =
      fun (x7346 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x7346)
             "BYTES_PER_ELEMENT")
    let (get_buffer : 'tags this -> ArrayBufferLike.t) =
      fun (x7348 : 'tags this) ->
        ArrayBufferLike.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x7348) "buffer")
    let (get_byteLength : 'tags this -> float) =
      fun (x7350 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x7350) "byteLength")
    let (get_byteOffset : 'tags this -> float) =
      fun (x7352 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x7352) "byteOffset")
    let (copyWithin :
      'tags this ->
        target:float -> start:float -> ?end_:float -> unit -> 'tags this)
      =
      fun (x7359 : 'tags this) ->
        fun ~target:(x7354 : float) ->
          fun ~start:(x7355 : float) ->
            fun ?end_:(x7356 : float option) ->
              fun () ->
                this_of_js Obj.magic
                  (let x7361 = this_to_js Obj.magic x7359 in
                   Ojs.call (Ojs.get_prop_ascii x7361 "copyWithin") "apply"
                     [|x7361;((let x7357 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x7357 "push"
                                    [|(Ojs.float_to_js x7354)|]);
                               ignore
                                 (Ojs.call x7357 "push"
                                    [|(Ojs.float_to_js x7355)|]);
                               (match x7356 with
                                | Some x7358 ->
                                    ignore
                                      (Ojs.call x7357 "push"
                                         [|(Ojs.float_to_js x7358)|])
                                | None -> ());
                               x7357))|])
    let (every :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x7370 : 'tags this) ->
        fun
          ~predicate:(x7363 :
                       value:float -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x7364 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x7372 = this_to_js Obj.magic x7370 in
                 Ojs.call (Ojs.get_prop_ascii x7372 "every") "apply"
                   [|x7372;((let x7365 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7365 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x7367 : Ojs.t) ->
                                          fun (x7368 : Ojs.t) ->
                                            fun (x7369 : Ojs.t) ->
                                              unknown_to_js
                                                (x7363
                                                   ~value:(Ojs.float_of_js
                                                             x7367)
                                                   ~index:(Ojs.float_of_js
                                                             x7368)
                                                   ~array:(t_of_js x7369))))|]);
                             (match x7364 with
                              | Some x7366 ->
                                  ignore
                                    (Ojs.call x7365 "push"
                                       [|(any_to_js x7366)|])
                              | None -> ());
                             x7365))|])
    let (fill :
      'tags this ->
        value:float -> ?start:float -> ?end_:float -> unit -> 'tags this)
      =
      fun (x7379 : 'tags this) ->
        fun ~value:(x7373 : float) ->
          fun ?start:(x7374 : float option) ->
            fun ?end_:(x7375 : float option) ->
              fun () ->
                this_of_js Obj.magic
                  (let x7381 = this_to_js Obj.magic x7379 in
                   Ojs.call (Ojs.get_prop_ascii x7381 "fill") "apply"
                     [|x7381;((let x7376 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x7376 "push"
                                    [|(Ojs.float_to_js x7373)|]);
                               (match x7374 with
                                | Some x7378 ->
                                    ignore
                                      (Ojs.call x7376 "push"
                                         [|(Ojs.float_to_js x7378)|])
                                | None -> ());
                               (match x7375 with
                                | Some x7377 ->
                                    ignore
                                      (Ojs.call x7376 "push"
                                         [|(Ojs.float_to_js x7377)|])
                                | None -> ());
                               x7376))|])
    let (filter :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> any) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x7390 : 'tags this) ->
        fun ~predicate:(x7383 : value:float -> index:float -> array:t -> any)
          ->
          fun ?thisArg:(x7384 : any option) ->
            fun () ->
              t_of_js
                (let x7392 = this_to_js Obj.magic x7390 in
                 Ojs.call (Ojs.get_prop_ascii x7392 "filter") "apply"
                   [|x7392;((let x7385 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7385 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x7387 : Ojs.t) ->
                                          fun (x7388 : Ojs.t) ->
                                            fun (x7389 : Ojs.t) ->
                                              any_to_js
                                                (x7383
                                                   ~value:(Ojs.float_of_js
                                                             x7387)
                                                   ~index:(Ojs.float_of_js
                                                             x7388)
                                                   ~array:(t_of_js x7389))))|]);
                             (match x7384 with
                              | Some x7386 ->
                                  ignore
                                    (Ojs.call x7385 "push"
                                       [|(any_to_js x7386)|])
                              | None -> ());
                             x7385))|])
    let (find :
      'tags this ->
        predicate:(value:float -> index:float -> obj:t -> bool) ->
          ?thisArg:any -> unit -> float option)
      =
      fun (x7400 : 'tags this) ->
        fun ~predicate:(x7393 : value:float -> index:float -> obj:t -> bool)
          ->
          fun ?thisArg:(x7394 : any option) ->
            fun () ->
              Ojs.option_of_js Ojs.float_of_js
                (let x7402 = this_to_js Obj.magic x7400 in
                 Ojs.call (Ojs.get_prop_ascii x7402 "find") "apply"
                   [|x7402;((let x7395 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7395 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x7397 : Ojs.t) ->
                                          fun (x7398 : Ojs.t) ->
                                            fun (x7399 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x7393
                                                   ~value:(Ojs.float_of_js
                                                             x7397)
                                                   ~index:(Ojs.float_of_js
                                                             x7398)
                                                   ~obj:(t_of_js x7399))))|]);
                             (match x7394 with
                              | Some x7396 ->
                                  ignore
                                    (Ojs.call x7395 "push"
                                       [|(any_to_js x7396)|])
                              | None -> ());
                             x7395))|])
    let (findIndex :
      'tags this ->
        predicate:(value:float -> index:float -> obj:t -> bool) ->
          ?thisArg:any -> unit -> float)
      =
      fun (x7411 : 'tags this) ->
        fun ~predicate:(x7404 : value:float -> index:float -> obj:t -> bool)
          ->
          fun ?thisArg:(x7405 : any option) ->
            fun () ->
              Ojs.float_of_js
                (let x7413 = this_to_js Obj.magic x7411 in
                 Ojs.call (Ojs.get_prop_ascii x7413 "findIndex") "apply"
                   [|x7413;((let x7406 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7406 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x7408 : Ojs.t) ->
                                          fun (x7409 : Ojs.t) ->
                                            fun (x7410 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x7404
                                                   ~value:(Ojs.float_of_js
                                                             x7408)
                                                   ~index:(Ojs.float_of_js
                                                             x7409)
                                                   ~obj:(t_of_js x7410))))|]);
                             (match x7405 with
                              | Some x7407 ->
                                  ignore
                                    (Ojs.call x7406 "push"
                                       [|(any_to_js x7407)|])
                              | None -> ());
                             x7406))|])
    let (forEach :
      'tags this ->
        callbackfn:(value:float -> index:float -> array:t -> unit) ->
          ?thisArg:any -> unit -> unit)
      =
      fun (x7421 : 'tags this) ->
        fun
          ~callbackfn:(x7414 : value:float -> index:float -> array:t -> unit)
          ->
          fun ?thisArg:(x7415 : any option) ->
            fun () ->
              ignore
                (let x7423 = this_to_js Obj.magic x7421 in
                 Ojs.call (Ojs.get_prop_ascii x7423 "forEach") "apply"
                   [|x7423;((let x7416 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7416 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x7418 : Ojs.t) ->
                                          fun (x7419 : Ojs.t) ->
                                            fun (x7420 : Ojs.t) ->
                                              x7414
                                                ~value:(Ojs.float_of_js x7418)
                                                ~index:(Ojs.float_of_js x7419)
                                                ~array:(t_of_js x7420)))|]);
                             (match x7415 with
                              | Some x7417 ->
                                  ignore
                                    (Ojs.call x7416 "push"
                                       [|(any_to_js x7417)|])
                              | None -> ());
                             x7416))|])
    let (indexOf :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> float)
      =
      fun (x7428 : 'tags this) ->
        fun ~searchElement:(x7424 : float) ->
          fun ?fromIndex:(x7425 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x7430 = this_to_js Obj.magic x7428 in
                 Ojs.call (Ojs.get_prop_ascii x7430 "indexOf") "apply"
                   [|x7430;((let x7426 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7426 "push"
                                  [|(Ojs.float_to_js x7424)|]);
                             (match x7425 with
                              | Some x7427 ->
                                  ignore
                                    (Ojs.call x7426 "push"
                                       [|(Ojs.float_to_js x7427)|])
                              | None -> ());
                             x7426))|])
    let (join : 'tags this -> ?separator:string -> unit -> string) =
      fun (x7434 : 'tags this) ->
        fun ?separator:(x7431 : string option) ->
          fun () ->
            Ojs.string_of_js
              (let x7436 = this_to_js Obj.magic x7434 in
               Ojs.call (Ojs.get_prop_ascii x7436 "join") "apply"
                 [|x7436;((let x7432 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x7431 with
                            | Some x7433 ->
                                ignore
                                  (Ojs.call x7432 "push"
                                     [|(Ojs.string_to_js x7433)|])
                            | None -> ());
                           x7432))|])
    let (lastIndexOf :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> float)
      =
      fun (x7441 : 'tags this) ->
        fun ~searchElement:(x7437 : float) ->
          fun ?fromIndex:(x7438 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x7443 = this_to_js Obj.magic x7441 in
                 Ojs.call (Ojs.get_prop_ascii x7443 "lastIndexOf") "apply"
                   [|x7443;((let x7439 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7439 "push"
                                  [|(Ojs.float_to_js x7437)|]);
                             (match x7438 with
                              | Some x7440 ->
                                  ignore
                                    (Ojs.call x7439 "push"
                                       [|(Ojs.float_to_js x7440)|])
                              | None -> ());
                             x7439))|])
    let (get_length : 'tags this -> float) =
      fun (x7444 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x7444) "length")
    let (map :
      'tags this ->
        callbackfn:(value:float -> index:float -> array:t -> float) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x7453 : 'tags this) ->
        fun
          ~callbackfn:(x7446 :
                        value:float -> index:float -> array:t -> float)
          ->
          fun ?thisArg:(x7447 : any option) ->
            fun () ->
              t_of_js
                (let x7455 = this_to_js Obj.magic x7453 in
                 Ojs.call (Ojs.get_prop_ascii x7455 "map") "apply"
                   [|x7455;((let x7448 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7448 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x7450 : Ojs.t) ->
                                          fun (x7451 : Ojs.t) ->
                                            fun (x7452 : Ojs.t) ->
                                              Ojs.float_to_js
                                                (x7446
                                                   ~value:(Ojs.float_of_js
                                                             x7450)
                                                   ~index:(Ojs.float_of_js
                                                             x7451)
                                                   ~array:(t_of_js x7452))))|]);
                             (match x7447 with
                              | Some x7449 ->
                                  ignore
                                    (Ojs.call x7448 "push"
                                       [|(any_to_js x7449)|])
                              | None -> ());
                             x7448))|])
    let (reduce :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> float)
      =
      fun (x7461 : 'tags this) ->
        fun
          ~callbackfn:(x7456 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x7461) "reduce"
               [|(Ojs.fun_to_js 4
                    (fun (x7457 : Ojs.t) ->
                       fun (x7458 : Ojs.t) ->
                         fun (x7459 : Ojs.t) ->
                           fun (x7460 : Ojs.t) ->
                             Ojs.float_to_js
                               (x7456 ~previousValue:(Ojs.float_of_js x7457)
                                  ~currentValue:(Ojs.float_of_js x7458)
                                  ~currentIndex:(Ojs.float_of_js x7459)
                                  ~array:(t_of_js x7460))))|])
    let (reduce' :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> initialValue:float -> float)
      =
      fun (x7469 : 'tags this) ->
        fun
          ~callbackfn:(x7463 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          fun ~initialValue:(x7468 : float) ->
            Ojs.float_of_js
              (Ojs.call (this_to_js Obj.magic x7469) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x7464 : Ojs.t) ->
                         fun (x7465 : Ojs.t) ->
                           fun (x7466 : Ojs.t) ->
                             fun (x7467 : Ojs.t) ->
                               Ojs.float_to_js
                                 (x7463
                                    ~previousValue:(Ojs.float_of_js x7464)
                                    ~currentValue:(Ojs.float_of_js x7465)
                                    ~currentIndex:(Ojs.float_of_js x7466)
                                    ~array:(t_of_js x7467))));(Ojs.float_to_js
                                                                 x7468)|])
    let (reduce'' :
      'tags this ->
        callbackfn:(previousValue:'U ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x7477 : 'tags this) ->
        fun
          ~callbackfn:(x7471 :
                        previousValue:'U ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x7476 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic x7477) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x7472 : Ojs.t) ->
                         fun (x7473 : Ojs.t) ->
                           fun (x7474 : Ojs.t) ->
                             fun (x7475 : Ojs.t) ->
                               Obj.magic
                                 (x7471 ~previousValue:(Obj.magic x7472)
                                    ~currentValue:(Ojs.float_of_js x7473)
                                    ~currentIndex:(Ojs.float_of_js x7474)
                                    ~array:(t_of_js x7475))));(Obj.magic
                                                                 x7476)|])
    let (reduceRight :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> float)
      =
      fun (x7484 : 'tags this) ->
        fun
          ~callbackfn:(x7479 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x7484) "reduceRight"
               [|(Ojs.fun_to_js 4
                    (fun (x7480 : Ojs.t) ->
                       fun (x7481 : Ojs.t) ->
                         fun (x7482 : Ojs.t) ->
                           fun (x7483 : Ojs.t) ->
                             Ojs.float_to_js
                               (x7479 ~previousValue:(Ojs.float_of_js x7480)
                                  ~currentValue:(Ojs.float_of_js x7481)
                                  ~currentIndex:(Ojs.float_of_js x7482)
                                  ~array:(t_of_js x7483))))|])
    let (reduceRight' :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> initialValue:float -> float)
      =
      fun (x7492 : 'tags this) ->
        fun
          ~callbackfn:(x7486 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          fun ~initialValue:(x7491 : float) ->
            Ojs.float_of_js
              (Ojs.call (this_to_js Obj.magic x7492) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x7487 : Ojs.t) ->
                         fun (x7488 : Ojs.t) ->
                           fun (x7489 : Ojs.t) ->
                             fun (x7490 : Ojs.t) ->
                               Ojs.float_to_js
                                 (x7486
                                    ~previousValue:(Ojs.float_of_js x7487)
                                    ~currentValue:(Ojs.float_of_js x7488)
                                    ~currentIndex:(Ojs.float_of_js x7489)
                                    ~array:(t_of_js x7490))));(Ojs.float_to_js
                                                                 x7491)|])
    let (reduceRight'' :
      'tags this ->
        callbackfn:(previousValue:'U ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x7500 : 'tags this) ->
        fun
          ~callbackfn:(x7494 :
                        previousValue:'U ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x7499 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic x7500) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x7495 : Ojs.t) ->
                         fun (x7496 : Ojs.t) ->
                           fun (x7497 : Ojs.t) ->
                             fun (x7498 : Ojs.t) ->
                               Obj.magic
                                 (x7494 ~previousValue:(Obj.magic x7495)
                                    ~currentValue:(Ojs.float_of_js x7496)
                                    ~currentIndex:(Ojs.float_of_js x7497)
                                    ~array:(t_of_js x7498))));(Obj.magic
                                                                 x7499)|])
    let (reverse : 'tags this -> t) =
      fun (x7502 : 'tags this) ->
        t_of_js (Ojs.call (this_to_js Obj.magic x7502) "reverse" [||])
    let (set_ :
      'tags this -> array:float ArrayLike.t -> ?offset:float -> unit -> unit)
      =
      fun (x7509 : 'tags this) ->
        fun ~array:(x7504 : float ArrayLike.t) ->
          fun ?offset:(x7505 : float option) ->
            fun () ->
              ignore
                (let x7511 = this_to_js Obj.magic x7509 in
                 Ojs.call (Ojs.get_prop_ascii x7511 "set") "apply"
                   [|x7511;((let x7506 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7506 "push"
                                  [|(ArrayLike.t_to_js Ojs.float_to_js x7504)|]);
                             (match x7505 with
                              | Some x7507 ->
                                  ignore
                                    (Ojs.call x7506 "push"
                                       [|(Ojs.float_to_js x7507)|])
                              | None -> ());
                             x7506))|])
    let (slice : 'tags this -> ?start:float -> ?end_:float -> unit -> t) =
      fun (x7517 : 'tags this) ->
        fun ?start:(x7512 : float option) ->
          fun ?end_:(x7513 : float option) ->
            fun () ->
              t_of_js
                (let x7519 = this_to_js Obj.magic x7517 in
                 Ojs.call (Ojs.get_prop_ascii x7519 "slice") "apply"
                   [|x7519;((let x7514 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x7512 with
                              | Some x7516 ->
                                  ignore
                                    (Ojs.call x7514 "push"
                                       [|(Ojs.float_to_js x7516)|])
                              | None -> ());
                             (match x7513 with
                              | Some x7515 ->
                                  ignore
                                    (Ojs.call x7514 "push"
                                       [|(Ojs.float_to_js x7515)|])
                              | None -> ());
                             x7514))|])
    let (some :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x7527 : 'tags this) ->
        fun
          ~predicate:(x7520 :
                       value:float -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x7521 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x7529 = this_to_js Obj.magic x7527 in
                 Ojs.call (Ojs.get_prop_ascii x7529 "some") "apply"
                   [|x7529;((let x7522 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7522 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x7524 : Ojs.t) ->
                                          fun (x7525 : Ojs.t) ->
                                            fun (x7526 : Ojs.t) ->
                                              unknown_to_js
                                                (x7520
                                                   ~value:(Ojs.float_of_js
                                                             x7524)
                                                   ~index:(Ojs.float_of_js
                                                             x7525)
                                                   ~array:(t_of_js x7526))))|]);
                             (match x7521 with
                              | Some x7523 ->
                                  ignore
                                    (Ojs.call x7522 "push"
                                       [|(any_to_js x7523)|])
                              | None -> ());
                             x7522))|])
    let (sort :
      'tags this ->
        ?compareFn:(a:float -> b:float -> float) -> unit -> 'tags this)
      =
      fun (x7535 : 'tags this) ->
        fun ?compareFn:(x7530 : (a:float -> b:float -> float) option) ->
          fun () ->
            this_of_js Obj.magic
              (let x7537 = this_to_js Obj.magic x7535 in
               Ojs.call (Ojs.get_prop_ascii x7537 "sort") "apply"
                 [|x7537;((let x7531 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x7530 with
                            | Some x7532 ->
                                ignore
                                  (Ojs.call x7531 "push"
                                     [|(Ojs.fun_to_js 2
                                          (fun (x7533 : Ojs.t) ->
                                             fun (x7534 : Ojs.t) ->
                                               Ojs.float_to_js
                                                 (x7532
                                                    ~a:(Ojs.float_of_js x7533)
                                                    ~b:(Ojs.float_of_js x7534))))|])
                            | None -> ());
                           x7531))|])
    let (subarray : 'tags this -> ?begin_:float -> ?end_:float -> unit -> t)
      =
      fun (x7544 : 'tags this) ->
        fun ?begin_:(x7539 : float option) ->
          fun ?end_:(x7540 : float option) ->
            fun () ->
              t_of_js
                (let x7546 = this_to_js Obj.magic x7544 in
                 Ojs.call (Ojs.get_prop_ascii x7546 "subarray") "apply"
                   [|x7546;((let x7541 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x7539 with
                              | Some x7543 ->
                                  ignore
                                    (Ojs.call x7541 "push"
                                       [|(Ojs.float_to_js x7543)|])
                              | None -> ());
                             (match x7540 with
                              | Some x7542 ->
                                  ignore
                                    (Ojs.call x7541 "push"
                                       [|(Ojs.float_to_js x7542)|])
                              | None -> ());
                             x7541))|])
    let (toLocaleString : 'tags this -> string) =
      fun (x7547 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x7547) "toLocaleString" [||])
    let (toString : 'tags this -> string) =
      fun (x7549 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x7549) "toString" [||])
    let (valueOf : 'tags this -> t) =
      fun (x7551 : 'tags this) ->
        t_of_js (Ojs.call (this_to_js Obj.magic x7551) "valueOf" [||])
    let (get : 'tags this -> float -> float) =
      fun (x7553 : 'tags this) ->
        fun (x7555 : float) ->
          Ojs.float_of_js
            (Ojs.get_prop (this_to_js Obj.magic x7553)
               (Ojs.float_to_js x7555))
    let (set : 'tags this -> float -> float -> unit) =
      fun (x7556 : 'tags this) ->
        fun (x7558 : float) ->
          fun (x7559 : float) ->
            Ojs.set_prop (this_to_js Obj.magic x7556) (Ojs.float_to_js x7558)
              (Ojs.float_to_js x7559)
    let (create : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Uint32Array") [||])
    let (create' : float Iterable.t -> t) =
      fun (x7560 : float Iterable.t) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Uint32Array")
             [|(Iterable.t_to_js Ojs.float_to_js x7560)|])
    let (from :
      arrayLike:float Iterable.t ->
        ?mapfn:(v:float -> k:float -> float) -> ?thisArg:any -> unit -> t)
      =
      fun ~arrayLike:(x7562 : float Iterable.t) ->
        fun ?mapfn:(x7563 : (v:float -> k:float -> float) option) ->
          fun ?thisArg:(x7564 : any option) ->
            fun () ->
              t_of_js
                (let x7571 = Ojs.get_prop_ascii Ojs.global "Uint32Array" in
                 Ojs.call (Ojs.get_prop_ascii x7571 "from") "apply"
                   [|x7571;((let x7565 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7565 "push"
                                  [|(Iterable.t_to_js Ojs.float_to_js x7562)|]);
                             (match x7563 with
                              | Some x7567 ->
                                  ignore
                                    (Ojs.call x7565 "push"
                                       [|(Ojs.fun_to_js 2
                                            (fun (x7568 : Ojs.t) ->
                                               fun (x7569 : Ojs.t) ->
                                                 Ojs.float_to_js
                                                   (x7567
                                                      ~v:(Ojs.float_of_js
                                                            x7568)
                                                      ~k:(Ojs.float_of_js
                                                            x7569))))|])
                              | None -> ());
                             (match x7564 with
                              | Some x7566 ->
                                  ignore
                                    (Ojs.call x7565 "push"
                                       [|(any_to_js x7566)|])
                              | None -> ());
                             x7565))|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Uint32Array")
             "prototype")
    let (create'' : float -> t) =
      fun (x7572 : float) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Uint32Array")
             [|(Ojs.float_to_js x7572)|])
    let (create''' :
      [ `U1 of float ArrayLike.t  | `U2 of ArrayBufferLike.t ] -> t) =
      fun (x7573 : [ `U1 of float ArrayLike.t  | `U2 of ArrayBufferLike.t ])
        ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Uint32Array")
             [|((match x7573 with
                 | `U1 x7574 -> ArrayLike.t_to_js Ojs.float_to_js x7574
                 | `U2 x7576 -> ArrayBufferLike.t_to_js x7576))|])
    let (create'''' :
      buffer:ArrayBufferLike.t ->
        ?byteOffset:float -> ?length:float -> unit -> t)
      =
      fun ~buffer:(x7577 : ArrayBufferLike.t) ->
        fun ?byteOffset:(x7578 : float option) ->
          fun ?length:(x7579 : float option) ->
            fun () ->
              t_of_js
                (Ojs.new_obj_arr
                   (Ojs.get_prop_ascii Ojs.global "Uint32Array")
                   (let x7580 =
                      Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                        [||] in
                    ignore
                      (Ojs.call x7580 "push"
                         [|(ArrayBufferLike.t_to_js x7577)|]);
                    (match x7578 with
                     | Some x7582 ->
                         ignore
                           (Ojs.call x7580 "push" [|(Ojs.float_to_js x7582)|])
                     | None -> ());
                    (match x7579 with
                     | Some x7581 ->
                         ignore
                           (Ojs.call x7580 "push" [|(Ojs.float_to_js x7581)|])
                     | None -> ());
                    x7580))
    let (bytes_per_element : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Uint32Array")
             "BYTES_PER_ELEMENT")
    let (of_ : float list -> t) =
      fun (x7583 : float list) ->
        t_of_js
          (let x7586 = Ojs.get_prop_ascii Ojs.global "Uint32Array" in
           Ojs.call (Ojs.get_prop_ascii x7586 "of") "apply"
             [|x7586;((let x7584 =
                         Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                           [||] in
                       List.iter
                         (fun (x7585 : float) ->
                            ignore
                              (Ojs.call x7584 "push"
                                 [|(Ojs.float_to_js x7585)|])) x7583;
                       x7584))|])
    let (from' : float ArrayLike.t -> t) =
      fun (x7587 : float ArrayLike.t) ->
        t_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Uint32Array") "from"
             [|(ArrayLike.t_to_js Ojs.float_to_js x7587)|])
    let (from'' :
      arrayLike:'T ArrayLike.t ->
        mapfn:(v:'T -> k:float -> float) -> ?thisArg:any -> unit -> t)
      =
      fun ~arrayLike:(x7589 : 'T ArrayLike.t) ->
        fun ~mapfn:(x7590 : v:'T -> k:float -> float) ->
          fun ?thisArg:(x7591 : any option) ->
            fun () ->
              t_of_js
                (let x7597 = Ojs.get_prop_ascii Ojs.global "Uint32Array" in
                 Ojs.call (Ojs.get_prop_ascii x7597 "from") "apply"
                   [|x7597;((let x7592 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7592 "push"
                                  [|(ArrayLike.t_to_js Obj.magic x7589)|]);
                             ignore
                               (Ojs.call x7592 "push"
                                  [|(Ojs.fun_to_js 2
                                       (fun (x7594 : Ojs.t) ->
                                          fun (x7595 : Ojs.t) ->
                                            Ojs.float_to_js
                                              (x7590 ~v:(Obj.magic x7594)
                                                 ~k:(Ojs.float_of_js x7595))))|]);
                             (match x7591 with
                              | Some x7593 ->
                                  ignore
                                    (Ojs.call x7592 "push"
                                       [|(any_to_js x7593)|])
                              | None -> ());
                             x7592))|])
    let cast_from = Obj.magic
  end
module Uint16Array =
  struct
    type t =
      [ `Uint16Array  | float ArrayLike.tags_1
      | float IterableIterator.tags_1] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x7599 : Ojs.t) -> t_of_js x7599
    and t_0_to_js : t_0 -> Ojs.t = fun (x7598 : t) -> t_to_js x7598
    type tags =
      [ `Uint16Array  | float ArrayLike.tags_1
      | float IterableIterator.tags_1]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `Uint16Array ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x7602 : Ojs.t) -> intf_of_js __tags_of_js x7602
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x7600 : __tags intf) -> intf_to_js __tags_to_js x7600
    let (at : 'tags this -> index:float -> float option) =
      fun (x7605 : 'tags this) ->
        fun ~index:(x7604 : float) ->
          Ojs.option_of_js Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x7605) "at"
               [|(Ojs.float_to_js x7604)|])
    let (includes :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> bool)
      =
      fun (x7612 : 'tags this) ->
        fun ~searchElement:(x7608 : float) ->
          fun ?fromIndex:(x7609 : float option) ->
            fun () ->
              Ojs.bool_of_js
                (let x7614 = this_to_js Obj.magic x7612 in
                 Ojs.call (Ojs.get_prop_ascii x7614 "includes") "apply"
                   [|x7614;((let x7610 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7610 "push"
                                  [|(Ojs.float_to_js x7608)|]);
                             (match x7609 with
                              | Some x7611 ->
                                  ignore
                                    (Ojs.call x7610 "push"
                                       [|(Ojs.float_to_js x7611)|])
                              | None -> ());
                             x7610))|])
    let (entries : 'tags this -> (float * float) IterableIterator.t) =
      fun (x7615 : 'tags this) ->
        IterableIterator.t_of_js
          (fun (x7617 : Ojs.t) ->
             let x7618 = x7617 in
             ((Ojs.float_of_js (Ojs.array_get x7618 0)),
               (Ojs.float_of_js (Ojs.array_get x7618 1))))
          (Ojs.call (this_to_js Obj.magic x7615) "entries" [||])
    let (keys : 'tags this -> float IterableIterator.t) =
      fun (x7619 : 'tags this) ->
        IterableIterator.t_of_js Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x7619) "keys" [||])
    let (values : 'tags this -> float IterableIterator.t) =
      fun (x7622 : 'tags this) ->
        IterableIterator.t_of_js Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x7622) "values" [||])
    let (get_BYTES_PER_ELEMENT : 'tags this -> float) =
      fun (x7625 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x7625)
             "BYTES_PER_ELEMENT")
    let (get_buffer : 'tags this -> ArrayBufferLike.t) =
      fun (x7627 : 'tags this) ->
        ArrayBufferLike.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x7627) "buffer")
    let (get_byteLength : 'tags this -> float) =
      fun (x7629 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x7629) "byteLength")
    let (get_byteOffset : 'tags this -> float) =
      fun (x7631 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x7631) "byteOffset")
    let (copyWithin :
      'tags this ->
        target:float -> start:float -> ?end_:float -> unit -> 'tags this)
      =
      fun (x7638 : 'tags this) ->
        fun ~target:(x7633 : float) ->
          fun ~start:(x7634 : float) ->
            fun ?end_:(x7635 : float option) ->
              fun () ->
                this_of_js Obj.magic
                  (let x7640 = this_to_js Obj.magic x7638 in
                   Ojs.call (Ojs.get_prop_ascii x7640 "copyWithin") "apply"
                     [|x7640;((let x7636 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x7636 "push"
                                    [|(Ojs.float_to_js x7633)|]);
                               ignore
                                 (Ojs.call x7636 "push"
                                    [|(Ojs.float_to_js x7634)|]);
                               (match x7635 with
                                | Some x7637 ->
                                    ignore
                                      (Ojs.call x7636 "push"
                                         [|(Ojs.float_to_js x7637)|])
                                | None -> ());
                               x7636))|])
    let (every :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x7649 : 'tags this) ->
        fun
          ~predicate:(x7642 :
                       value:float -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x7643 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x7651 = this_to_js Obj.magic x7649 in
                 Ojs.call (Ojs.get_prop_ascii x7651 "every") "apply"
                   [|x7651;((let x7644 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7644 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x7646 : Ojs.t) ->
                                          fun (x7647 : Ojs.t) ->
                                            fun (x7648 : Ojs.t) ->
                                              unknown_to_js
                                                (x7642
                                                   ~value:(Ojs.float_of_js
                                                             x7646)
                                                   ~index:(Ojs.float_of_js
                                                             x7647)
                                                   ~array:(t_of_js x7648))))|]);
                             (match x7643 with
                              | Some x7645 ->
                                  ignore
                                    (Ojs.call x7644 "push"
                                       [|(any_to_js x7645)|])
                              | None -> ());
                             x7644))|])
    let (fill :
      'tags this ->
        value:float -> ?start:float -> ?end_:float -> unit -> 'tags this)
      =
      fun (x7658 : 'tags this) ->
        fun ~value:(x7652 : float) ->
          fun ?start:(x7653 : float option) ->
            fun ?end_:(x7654 : float option) ->
              fun () ->
                this_of_js Obj.magic
                  (let x7660 = this_to_js Obj.magic x7658 in
                   Ojs.call (Ojs.get_prop_ascii x7660 "fill") "apply"
                     [|x7660;((let x7655 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x7655 "push"
                                    [|(Ojs.float_to_js x7652)|]);
                               (match x7653 with
                                | Some x7657 ->
                                    ignore
                                      (Ojs.call x7655 "push"
                                         [|(Ojs.float_to_js x7657)|])
                                | None -> ());
                               (match x7654 with
                                | Some x7656 ->
                                    ignore
                                      (Ojs.call x7655 "push"
                                         [|(Ojs.float_to_js x7656)|])
                                | None -> ());
                               x7655))|])
    let (filter :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> any) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x7669 : 'tags this) ->
        fun ~predicate:(x7662 : value:float -> index:float -> array:t -> any)
          ->
          fun ?thisArg:(x7663 : any option) ->
            fun () ->
              t_of_js
                (let x7671 = this_to_js Obj.magic x7669 in
                 Ojs.call (Ojs.get_prop_ascii x7671 "filter") "apply"
                   [|x7671;((let x7664 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7664 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x7666 : Ojs.t) ->
                                          fun (x7667 : Ojs.t) ->
                                            fun (x7668 : Ojs.t) ->
                                              any_to_js
                                                (x7662
                                                   ~value:(Ojs.float_of_js
                                                             x7666)
                                                   ~index:(Ojs.float_of_js
                                                             x7667)
                                                   ~array:(t_of_js x7668))))|]);
                             (match x7663 with
                              | Some x7665 ->
                                  ignore
                                    (Ojs.call x7664 "push"
                                       [|(any_to_js x7665)|])
                              | None -> ());
                             x7664))|])
    let (find :
      'tags this ->
        predicate:(value:float -> index:float -> obj:t -> bool) ->
          ?thisArg:any -> unit -> float option)
      =
      fun (x7679 : 'tags this) ->
        fun ~predicate:(x7672 : value:float -> index:float -> obj:t -> bool)
          ->
          fun ?thisArg:(x7673 : any option) ->
            fun () ->
              Ojs.option_of_js Ojs.float_of_js
                (let x7681 = this_to_js Obj.magic x7679 in
                 Ojs.call (Ojs.get_prop_ascii x7681 "find") "apply"
                   [|x7681;((let x7674 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7674 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x7676 : Ojs.t) ->
                                          fun (x7677 : Ojs.t) ->
                                            fun (x7678 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x7672
                                                   ~value:(Ojs.float_of_js
                                                             x7676)
                                                   ~index:(Ojs.float_of_js
                                                             x7677)
                                                   ~obj:(t_of_js x7678))))|]);
                             (match x7673 with
                              | Some x7675 ->
                                  ignore
                                    (Ojs.call x7674 "push"
                                       [|(any_to_js x7675)|])
                              | None -> ());
                             x7674))|])
    let (findIndex :
      'tags this ->
        predicate:(value:float -> index:float -> obj:t -> bool) ->
          ?thisArg:any -> unit -> float)
      =
      fun (x7690 : 'tags this) ->
        fun ~predicate:(x7683 : value:float -> index:float -> obj:t -> bool)
          ->
          fun ?thisArg:(x7684 : any option) ->
            fun () ->
              Ojs.float_of_js
                (let x7692 = this_to_js Obj.magic x7690 in
                 Ojs.call (Ojs.get_prop_ascii x7692 "findIndex") "apply"
                   [|x7692;((let x7685 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7685 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x7687 : Ojs.t) ->
                                          fun (x7688 : Ojs.t) ->
                                            fun (x7689 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x7683
                                                   ~value:(Ojs.float_of_js
                                                             x7687)
                                                   ~index:(Ojs.float_of_js
                                                             x7688)
                                                   ~obj:(t_of_js x7689))))|]);
                             (match x7684 with
                              | Some x7686 ->
                                  ignore
                                    (Ojs.call x7685 "push"
                                       [|(any_to_js x7686)|])
                              | None -> ());
                             x7685))|])
    let (forEach :
      'tags this ->
        callbackfn:(value:float -> index:float -> array:t -> unit) ->
          ?thisArg:any -> unit -> unit)
      =
      fun (x7700 : 'tags this) ->
        fun
          ~callbackfn:(x7693 : value:float -> index:float -> array:t -> unit)
          ->
          fun ?thisArg:(x7694 : any option) ->
            fun () ->
              ignore
                (let x7702 = this_to_js Obj.magic x7700 in
                 Ojs.call (Ojs.get_prop_ascii x7702 "forEach") "apply"
                   [|x7702;((let x7695 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7695 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x7697 : Ojs.t) ->
                                          fun (x7698 : Ojs.t) ->
                                            fun (x7699 : Ojs.t) ->
                                              x7693
                                                ~value:(Ojs.float_of_js x7697)
                                                ~index:(Ojs.float_of_js x7698)
                                                ~array:(t_of_js x7699)))|]);
                             (match x7694 with
                              | Some x7696 ->
                                  ignore
                                    (Ojs.call x7695 "push"
                                       [|(any_to_js x7696)|])
                              | None -> ());
                             x7695))|])
    let (indexOf :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> float)
      =
      fun (x7707 : 'tags this) ->
        fun ~searchElement:(x7703 : float) ->
          fun ?fromIndex:(x7704 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x7709 = this_to_js Obj.magic x7707 in
                 Ojs.call (Ojs.get_prop_ascii x7709 "indexOf") "apply"
                   [|x7709;((let x7705 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7705 "push"
                                  [|(Ojs.float_to_js x7703)|]);
                             (match x7704 with
                              | Some x7706 ->
                                  ignore
                                    (Ojs.call x7705 "push"
                                       [|(Ojs.float_to_js x7706)|])
                              | None -> ());
                             x7705))|])
    let (join : 'tags this -> ?separator:string -> unit -> string) =
      fun (x7713 : 'tags this) ->
        fun ?separator:(x7710 : string option) ->
          fun () ->
            Ojs.string_of_js
              (let x7715 = this_to_js Obj.magic x7713 in
               Ojs.call (Ojs.get_prop_ascii x7715 "join") "apply"
                 [|x7715;((let x7711 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x7710 with
                            | Some x7712 ->
                                ignore
                                  (Ojs.call x7711 "push"
                                     [|(Ojs.string_to_js x7712)|])
                            | None -> ());
                           x7711))|])
    let (lastIndexOf :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> float)
      =
      fun (x7720 : 'tags this) ->
        fun ~searchElement:(x7716 : float) ->
          fun ?fromIndex:(x7717 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x7722 = this_to_js Obj.magic x7720 in
                 Ojs.call (Ojs.get_prop_ascii x7722 "lastIndexOf") "apply"
                   [|x7722;((let x7718 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7718 "push"
                                  [|(Ojs.float_to_js x7716)|]);
                             (match x7717 with
                              | Some x7719 ->
                                  ignore
                                    (Ojs.call x7718 "push"
                                       [|(Ojs.float_to_js x7719)|])
                              | None -> ());
                             x7718))|])
    let (get_length : 'tags this -> float) =
      fun (x7723 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x7723) "length")
    let (map :
      'tags this ->
        callbackfn:(value:float -> index:float -> array:t -> float) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x7732 : 'tags this) ->
        fun
          ~callbackfn:(x7725 :
                        value:float -> index:float -> array:t -> float)
          ->
          fun ?thisArg:(x7726 : any option) ->
            fun () ->
              t_of_js
                (let x7734 = this_to_js Obj.magic x7732 in
                 Ojs.call (Ojs.get_prop_ascii x7734 "map") "apply"
                   [|x7734;((let x7727 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7727 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x7729 : Ojs.t) ->
                                          fun (x7730 : Ojs.t) ->
                                            fun (x7731 : Ojs.t) ->
                                              Ojs.float_to_js
                                                (x7725
                                                   ~value:(Ojs.float_of_js
                                                             x7729)
                                                   ~index:(Ojs.float_of_js
                                                             x7730)
                                                   ~array:(t_of_js x7731))))|]);
                             (match x7726 with
                              | Some x7728 ->
                                  ignore
                                    (Ojs.call x7727 "push"
                                       [|(any_to_js x7728)|])
                              | None -> ());
                             x7727))|])
    let (reduce :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> float)
      =
      fun (x7740 : 'tags this) ->
        fun
          ~callbackfn:(x7735 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x7740) "reduce"
               [|(Ojs.fun_to_js 4
                    (fun (x7736 : Ojs.t) ->
                       fun (x7737 : Ojs.t) ->
                         fun (x7738 : Ojs.t) ->
                           fun (x7739 : Ojs.t) ->
                             Ojs.float_to_js
                               (x7735 ~previousValue:(Ojs.float_of_js x7736)
                                  ~currentValue:(Ojs.float_of_js x7737)
                                  ~currentIndex:(Ojs.float_of_js x7738)
                                  ~array:(t_of_js x7739))))|])
    let (reduce' :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> initialValue:float -> float)
      =
      fun (x7748 : 'tags this) ->
        fun
          ~callbackfn:(x7742 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          fun ~initialValue:(x7747 : float) ->
            Ojs.float_of_js
              (Ojs.call (this_to_js Obj.magic x7748) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x7743 : Ojs.t) ->
                         fun (x7744 : Ojs.t) ->
                           fun (x7745 : Ojs.t) ->
                             fun (x7746 : Ojs.t) ->
                               Ojs.float_to_js
                                 (x7742
                                    ~previousValue:(Ojs.float_of_js x7743)
                                    ~currentValue:(Ojs.float_of_js x7744)
                                    ~currentIndex:(Ojs.float_of_js x7745)
                                    ~array:(t_of_js x7746))));(Ojs.float_to_js
                                                                 x7747)|])
    let (reduce'' :
      'tags this ->
        callbackfn:(previousValue:'U ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x7756 : 'tags this) ->
        fun
          ~callbackfn:(x7750 :
                        previousValue:'U ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x7755 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic x7756) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x7751 : Ojs.t) ->
                         fun (x7752 : Ojs.t) ->
                           fun (x7753 : Ojs.t) ->
                             fun (x7754 : Ojs.t) ->
                               Obj.magic
                                 (x7750 ~previousValue:(Obj.magic x7751)
                                    ~currentValue:(Ojs.float_of_js x7752)
                                    ~currentIndex:(Ojs.float_of_js x7753)
                                    ~array:(t_of_js x7754))));(Obj.magic
                                                                 x7755)|])
    let (reduceRight :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> float)
      =
      fun (x7763 : 'tags this) ->
        fun
          ~callbackfn:(x7758 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x7763) "reduceRight"
               [|(Ojs.fun_to_js 4
                    (fun (x7759 : Ojs.t) ->
                       fun (x7760 : Ojs.t) ->
                         fun (x7761 : Ojs.t) ->
                           fun (x7762 : Ojs.t) ->
                             Ojs.float_to_js
                               (x7758 ~previousValue:(Ojs.float_of_js x7759)
                                  ~currentValue:(Ojs.float_of_js x7760)
                                  ~currentIndex:(Ojs.float_of_js x7761)
                                  ~array:(t_of_js x7762))))|])
    let (reduceRight' :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> initialValue:float -> float)
      =
      fun (x7771 : 'tags this) ->
        fun
          ~callbackfn:(x7765 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          fun ~initialValue:(x7770 : float) ->
            Ojs.float_of_js
              (Ojs.call (this_to_js Obj.magic x7771) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x7766 : Ojs.t) ->
                         fun (x7767 : Ojs.t) ->
                           fun (x7768 : Ojs.t) ->
                             fun (x7769 : Ojs.t) ->
                               Ojs.float_to_js
                                 (x7765
                                    ~previousValue:(Ojs.float_of_js x7766)
                                    ~currentValue:(Ojs.float_of_js x7767)
                                    ~currentIndex:(Ojs.float_of_js x7768)
                                    ~array:(t_of_js x7769))));(Ojs.float_to_js
                                                                 x7770)|])
    let (reduceRight'' :
      'tags this ->
        callbackfn:(previousValue:'U ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x7779 : 'tags this) ->
        fun
          ~callbackfn:(x7773 :
                        previousValue:'U ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x7778 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic x7779) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x7774 : Ojs.t) ->
                         fun (x7775 : Ojs.t) ->
                           fun (x7776 : Ojs.t) ->
                             fun (x7777 : Ojs.t) ->
                               Obj.magic
                                 (x7773 ~previousValue:(Obj.magic x7774)
                                    ~currentValue:(Ojs.float_of_js x7775)
                                    ~currentIndex:(Ojs.float_of_js x7776)
                                    ~array:(t_of_js x7777))));(Obj.magic
                                                                 x7778)|])
    let (reverse : 'tags this -> t) =
      fun (x7781 : 'tags this) ->
        t_of_js (Ojs.call (this_to_js Obj.magic x7781) "reverse" [||])
    let (set_ :
      'tags this -> array:float ArrayLike.t -> ?offset:float -> unit -> unit)
      =
      fun (x7788 : 'tags this) ->
        fun ~array:(x7783 : float ArrayLike.t) ->
          fun ?offset:(x7784 : float option) ->
            fun () ->
              ignore
                (let x7790 = this_to_js Obj.magic x7788 in
                 Ojs.call (Ojs.get_prop_ascii x7790 "set") "apply"
                   [|x7790;((let x7785 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7785 "push"
                                  [|(ArrayLike.t_to_js Ojs.float_to_js x7783)|]);
                             (match x7784 with
                              | Some x7786 ->
                                  ignore
                                    (Ojs.call x7785 "push"
                                       [|(Ojs.float_to_js x7786)|])
                              | None -> ());
                             x7785))|])
    let (slice : 'tags this -> ?start:float -> ?end_:float -> unit -> t) =
      fun (x7796 : 'tags this) ->
        fun ?start:(x7791 : float option) ->
          fun ?end_:(x7792 : float option) ->
            fun () ->
              t_of_js
                (let x7798 = this_to_js Obj.magic x7796 in
                 Ojs.call (Ojs.get_prop_ascii x7798 "slice") "apply"
                   [|x7798;((let x7793 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x7791 with
                              | Some x7795 ->
                                  ignore
                                    (Ojs.call x7793 "push"
                                       [|(Ojs.float_to_js x7795)|])
                              | None -> ());
                             (match x7792 with
                              | Some x7794 ->
                                  ignore
                                    (Ojs.call x7793 "push"
                                       [|(Ojs.float_to_js x7794)|])
                              | None -> ());
                             x7793))|])
    let (some :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x7806 : 'tags this) ->
        fun
          ~predicate:(x7799 :
                       value:float -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x7800 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x7808 = this_to_js Obj.magic x7806 in
                 Ojs.call (Ojs.get_prop_ascii x7808 "some") "apply"
                   [|x7808;((let x7801 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7801 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x7803 : Ojs.t) ->
                                          fun (x7804 : Ojs.t) ->
                                            fun (x7805 : Ojs.t) ->
                                              unknown_to_js
                                                (x7799
                                                   ~value:(Ojs.float_of_js
                                                             x7803)
                                                   ~index:(Ojs.float_of_js
                                                             x7804)
                                                   ~array:(t_of_js x7805))))|]);
                             (match x7800 with
                              | Some x7802 ->
                                  ignore
                                    (Ojs.call x7801 "push"
                                       [|(any_to_js x7802)|])
                              | None -> ());
                             x7801))|])
    let (sort :
      'tags this ->
        ?compareFn:(a:float -> b:float -> float) -> unit -> 'tags this)
      =
      fun (x7814 : 'tags this) ->
        fun ?compareFn:(x7809 : (a:float -> b:float -> float) option) ->
          fun () ->
            this_of_js Obj.magic
              (let x7816 = this_to_js Obj.magic x7814 in
               Ojs.call (Ojs.get_prop_ascii x7816 "sort") "apply"
                 [|x7816;((let x7810 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x7809 with
                            | Some x7811 ->
                                ignore
                                  (Ojs.call x7810 "push"
                                     [|(Ojs.fun_to_js 2
                                          (fun (x7812 : Ojs.t) ->
                                             fun (x7813 : Ojs.t) ->
                                               Ojs.float_to_js
                                                 (x7811
                                                    ~a:(Ojs.float_of_js x7812)
                                                    ~b:(Ojs.float_of_js x7813))))|])
                            | None -> ());
                           x7810))|])
    let (subarray : 'tags this -> ?begin_:float -> ?end_:float -> unit -> t)
      =
      fun (x7823 : 'tags this) ->
        fun ?begin_:(x7818 : float option) ->
          fun ?end_:(x7819 : float option) ->
            fun () ->
              t_of_js
                (let x7825 = this_to_js Obj.magic x7823 in
                 Ojs.call (Ojs.get_prop_ascii x7825 "subarray") "apply"
                   [|x7825;((let x7820 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x7818 with
                              | Some x7822 ->
                                  ignore
                                    (Ojs.call x7820 "push"
                                       [|(Ojs.float_to_js x7822)|])
                              | None -> ());
                             (match x7819 with
                              | Some x7821 ->
                                  ignore
                                    (Ojs.call x7820 "push"
                                       [|(Ojs.float_to_js x7821)|])
                              | None -> ());
                             x7820))|])
    let (toLocaleString : 'tags this -> string) =
      fun (x7826 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x7826) "toLocaleString" [||])
    let (toString : 'tags this -> string) =
      fun (x7828 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x7828) "toString" [||])
    let (valueOf : 'tags this -> t) =
      fun (x7830 : 'tags this) ->
        t_of_js (Ojs.call (this_to_js Obj.magic x7830) "valueOf" [||])
    let (get : 'tags this -> float -> float) =
      fun (x7832 : 'tags this) ->
        fun (x7834 : float) ->
          Ojs.float_of_js
            (Ojs.get_prop (this_to_js Obj.magic x7832)
               (Ojs.float_to_js x7834))
    let (set : 'tags this -> float -> float -> unit) =
      fun (x7835 : 'tags this) ->
        fun (x7837 : float) ->
          fun (x7838 : float) ->
            Ojs.set_prop (this_to_js Obj.magic x7835) (Ojs.float_to_js x7837)
              (Ojs.float_to_js x7838)
    let (create : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Uint16Array") [||])
    let (create' : float Iterable.t -> t) =
      fun (x7839 : float Iterable.t) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Uint16Array")
             [|(Iterable.t_to_js Ojs.float_to_js x7839)|])
    let (from :
      arrayLike:float Iterable.t ->
        ?mapfn:(v:float -> k:float -> float) -> ?thisArg:any -> unit -> t)
      =
      fun ~arrayLike:(x7841 : float Iterable.t) ->
        fun ?mapfn:(x7842 : (v:float -> k:float -> float) option) ->
          fun ?thisArg:(x7843 : any option) ->
            fun () ->
              t_of_js
                (let x7850 = Ojs.get_prop_ascii Ojs.global "Uint16Array" in
                 Ojs.call (Ojs.get_prop_ascii x7850 "from") "apply"
                   [|x7850;((let x7844 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7844 "push"
                                  [|(Iterable.t_to_js Ojs.float_to_js x7841)|]);
                             (match x7842 with
                              | Some x7846 ->
                                  ignore
                                    (Ojs.call x7844 "push"
                                       [|(Ojs.fun_to_js 2
                                            (fun (x7847 : Ojs.t) ->
                                               fun (x7848 : Ojs.t) ->
                                                 Ojs.float_to_js
                                                   (x7846
                                                      ~v:(Ojs.float_of_js
                                                            x7847)
                                                      ~k:(Ojs.float_of_js
                                                            x7848))))|])
                              | None -> ());
                             (match x7843 with
                              | Some x7845 ->
                                  ignore
                                    (Ojs.call x7844 "push"
                                       [|(any_to_js x7845)|])
                              | None -> ());
                             x7844))|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Uint16Array")
             "prototype")
    let (create'' : float -> t) =
      fun (x7851 : float) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Uint16Array")
             [|(Ojs.float_to_js x7851)|])
    let (create''' :
      [ `U1 of float ArrayLike.t  | `U2 of ArrayBufferLike.t ] -> t) =
      fun (x7852 : [ `U1 of float ArrayLike.t  | `U2 of ArrayBufferLike.t ])
        ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Uint16Array")
             [|((match x7852 with
                 | `U1 x7853 -> ArrayLike.t_to_js Ojs.float_to_js x7853
                 | `U2 x7855 -> ArrayBufferLike.t_to_js x7855))|])
    let (create'''' :
      buffer:ArrayBufferLike.t ->
        ?byteOffset:float -> ?length:float -> unit -> t)
      =
      fun ~buffer:(x7856 : ArrayBufferLike.t) ->
        fun ?byteOffset:(x7857 : float option) ->
          fun ?length:(x7858 : float option) ->
            fun () ->
              t_of_js
                (Ojs.new_obj_arr
                   (Ojs.get_prop_ascii Ojs.global "Uint16Array")
                   (let x7859 =
                      Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                        [||] in
                    ignore
                      (Ojs.call x7859 "push"
                         [|(ArrayBufferLike.t_to_js x7856)|]);
                    (match x7857 with
                     | Some x7861 ->
                         ignore
                           (Ojs.call x7859 "push" [|(Ojs.float_to_js x7861)|])
                     | None -> ());
                    (match x7858 with
                     | Some x7860 ->
                         ignore
                           (Ojs.call x7859 "push" [|(Ojs.float_to_js x7860)|])
                     | None -> ());
                    x7859))
    let (bytes_per_element : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Uint16Array")
             "BYTES_PER_ELEMENT")
    let (of_ : float list -> t) =
      fun (x7862 : float list) ->
        t_of_js
          (let x7865 = Ojs.get_prop_ascii Ojs.global "Uint16Array" in
           Ojs.call (Ojs.get_prop_ascii x7865 "of") "apply"
             [|x7865;((let x7863 =
                         Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                           [||] in
                       List.iter
                         (fun (x7864 : float) ->
                            ignore
                              (Ojs.call x7863 "push"
                                 [|(Ojs.float_to_js x7864)|])) x7862;
                       x7863))|])
    let (from' : float ArrayLike.t -> t) =
      fun (x7866 : float ArrayLike.t) ->
        t_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Uint16Array") "from"
             [|(ArrayLike.t_to_js Ojs.float_to_js x7866)|])
    let (from'' :
      arrayLike:'T ArrayLike.t ->
        mapfn:(v:'T -> k:float -> float) -> ?thisArg:any -> unit -> t)
      =
      fun ~arrayLike:(x7868 : 'T ArrayLike.t) ->
        fun ~mapfn:(x7869 : v:'T -> k:float -> float) ->
          fun ?thisArg:(x7870 : any option) ->
            fun () ->
              t_of_js
                (let x7876 = Ojs.get_prop_ascii Ojs.global "Uint16Array" in
                 Ojs.call (Ojs.get_prop_ascii x7876 "from") "apply"
                   [|x7876;((let x7871 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7871 "push"
                                  [|(ArrayLike.t_to_js Obj.magic x7868)|]);
                             ignore
                               (Ojs.call x7871 "push"
                                  [|(Ojs.fun_to_js 2
                                       (fun (x7873 : Ojs.t) ->
                                          fun (x7874 : Ojs.t) ->
                                            Ojs.float_to_js
                                              (x7869 ~v:(Obj.magic x7873)
                                                 ~k:(Ojs.float_of_js x7874))))|]);
                             (match x7870 with
                              | Some x7872 ->
                                  ignore
                                    (Ojs.call x7871 "push"
                                       [|(any_to_js x7872)|])
                              | None -> ());
                             x7871))|])
    let cast_from = Obj.magic
  end
module Int8Array =
  struct
    type t =
      [ `Int8Array  | float ArrayLike.tags_1 | float IterableIterator.tags_1]
        intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x7878 : Ojs.t) -> t_of_js x7878
    and t_0_to_js : t_0 -> Ojs.t = fun (x7877 : t) -> t_to_js x7877
    type tags =
      [ `Int8Array  | float ArrayLike.tags_1 | float IterableIterator.tags_1]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `Int8Array ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x7881 : Ojs.t) -> intf_of_js __tags_of_js x7881
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x7879 : __tags intf) -> intf_to_js __tags_to_js x7879
    let (at : 'tags this -> index:float -> float option) =
      fun (x7884 : 'tags this) ->
        fun ~index:(x7883 : float) ->
          Ojs.option_of_js Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x7884) "at"
               [|(Ojs.float_to_js x7883)|])
    let (includes :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> bool)
      =
      fun (x7891 : 'tags this) ->
        fun ~searchElement:(x7887 : float) ->
          fun ?fromIndex:(x7888 : float option) ->
            fun () ->
              Ojs.bool_of_js
                (let x7893 = this_to_js Obj.magic x7891 in
                 Ojs.call (Ojs.get_prop_ascii x7893 "includes") "apply"
                   [|x7893;((let x7889 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7889 "push"
                                  [|(Ojs.float_to_js x7887)|]);
                             (match x7888 with
                              | Some x7890 ->
                                  ignore
                                    (Ojs.call x7889 "push"
                                       [|(Ojs.float_to_js x7890)|])
                              | None -> ());
                             x7889))|])
    let (entries : 'tags this -> (float * float) IterableIterator.t) =
      fun (x7894 : 'tags this) ->
        IterableIterator.t_of_js
          (fun (x7896 : Ojs.t) ->
             let x7897 = x7896 in
             ((Ojs.float_of_js (Ojs.array_get x7897 0)),
               (Ojs.float_of_js (Ojs.array_get x7897 1))))
          (Ojs.call (this_to_js Obj.magic x7894) "entries" [||])
    let (keys : 'tags this -> float IterableIterator.t) =
      fun (x7898 : 'tags this) ->
        IterableIterator.t_of_js Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x7898) "keys" [||])
    let (values : 'tags this -> float IterableIterator.t) =
      fun (x7901 : 'tags this) ->
        IterableIterator.t_of_js Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x7901) "values" [||])
    let (get_BYTES_PER_ELEMENT : 'tags this -> float) =
      fun (x7904 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x7904)
             "BYTES_PER_ELEMENT")
    let (get_buffer : 'tags this -> ArrayBufferLike.t) =
      fun (x7906 : 'tags this) ->
        ArrayBufferLike.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x7906) "buffer")
    let (get_byteLength : 'tags this -> float) =
      fun (x7908 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x7908) "byteLength")
    let (get_byteOffset : 'tags this -> float) =
      fun (x7910 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x7910) "byteOffset")
    let (copyWithin :
      'tags this ->
        target:float -> start:float -> ?end_:float -> unit -> 'tags this)
      =
      fun (x7917 : 'tags this) ->
        fun ~target:(x7912 : float) ->
          fun ~start:(x7913 : float) ->
            fun ?end_:(x7914 : float option) ->
              fun () ->
                this_of_js Obj.magic
                  (let x7919 = this_to_js Obj.magic x7917 in
                   Ojs.call (Ojs.get_prop_ascii x7919 "copyWithin") "apply"
                     [|x7919;((let x7915 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x7915 "push"
                                    [|(Ojs.float_to_js x7912)|]);
                               ignore
                                 (Ojs.call x7915 "push"
                                    [|(Ojs.float_to_js x7913)|]);
                               (match x7914 with
                                | Some x7916 ->
                                    ignore
                                      (Ojs.call x7915 "push"
                                         [|(Ojs.float_to_js x7916)|])
                                | None -> ());
                               x7915))|])
    let (every :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x7928 : 'tags this) ->
        fun
          ~predicate:(x7921 :
                       value:float -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x7922 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x7930 = this_to_js Obj.magic x7928 in
                 Ojs.call (Ojs.get_prop_ascii x7930 "every") "apply"
                   [|x7930;((let x7923 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7923 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x7925 : Ojs.t) ->
                                          fun (x7926 : Ojs.t) ->
                                            fun (x7927 : Ojs.t) ->
                                              unknown_to_js
                                                (x7921
                                                   ~value:(Ojs.float_of_js
                                                             x7925)
                                                   ~index:(Ojs.float_of_js
                                                             x7926)
                                                   ~array:(t_of_js x7927))))|]);
                             (match x7922 with
                              | Some x7924 ->
                                  ignore
                                    (Ojs.call x7923 "push"
                                       [|(any_to_js x7924)|])
                              | None -> ());
                             x7923))|])
    let (fill :
      'tags this ->
        value:float -> ?start:float -> ?end_:float -> unit -> 'tags this)
      =
      fun (x7937 : 'tags this) ->
        fun ~value:(x7931 : float) ->
          fun ?start:(x7932 : float option) ->
            fun ?end_:(x7933 : float option) ->
              fun () ->
                this_of_js Obj.magic
                  (let x7939 = this_to_js Obj.magic x7937 in
                   Ojs.call (Ojs.get_prop_ascii x7939 "fill") "apply"
                     [|x7939;((let x7934 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x7934 "push"
                                    [|(Ojs.float_to_js x7931)|]);
                               (match x7932 with
                                | Some x7936 ->
                                    ignore
                                      (Ojs.call x7934 "push"
                                         [|(Ojs.float_to_js x7936)|])
                                | None -> ());
                               (match x7933 with
                                | Some x7935 ->
                                    ignore
                                      (Ojs.call x7934 "push"
                                         [|(Ojs.float_to_js x7935)|])
                                | None -> ());
                               x7934))|])
    let (filter :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> any) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x7948 : 'tags this) ->
        fun ~predicate:(x7941 : value:float -> index:float -> array:t -> any)
          ->
          fun ?thisArg:(x7942 : any option) ->
            fun () ->
              t_of_js
                (let x7950 = this_to_js Obj.magic x7948 in
                 Ojs.call (Ojs.get_prop_ascii x7950 "filter") "apply"
                   [|x7950;((let x7943 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7943 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x7945 : Ojs.t) ->
                                          fun (x7946 : Ojs.t) ->
                                            fun (x7947 : Ojs.t) ->
                                              any_to_js
                                                (x7941
                                                   ~value:(Ojs.float_of_js
                                                             x7945)
                                                   ~index:(Ojs.float_of_js
                                                             x7946)
                                                   ~array:(t_of_js x7947))))|]);
                             (match x7942 with
                              | Some x7944 ->
                                  ignore
                                    (Ojs.call x7943 "push"
                                       [|(any_to_js x7944)|])
                              | None -> ());
                             x7943))|])
    let (find :
      'tags this ->
        predicate:(value:float -> index:float -> obj:t -> bool) ->
          ?thisArg:any -> unit -> float option)
      =
      fun (x7958 : 'tags this) ->
        fun ~predicate:(x7951 : value:float -> index:float -> obj:t -> bool)
          ->
          fun ?thisArg:(x7952 : any option) ->
            fun () ->
              Ojs.option_of_js Ojs.float_of_js
                (let x7960 = this_to_js Obj.magic x7958 in
                 Ojs.call (Ojs.get_prop_ascii x7960 "find") "apply"
                   [|x7960;((let x7953 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7953 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x7955 : Ojs.t) ->
                                          fun (x7956 : Ojs.t) ->
                                            fun (x7957 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x7951
                                                   ~value:(Ojs.float_of_js
                                                             x7955)
                                                   ~index:(Ojs.float_of_js
                                                             x7956)
                                                   ~obj:(t_of_js x7957))))|]);
                             (match x7952 with
                              | Some x7954 ->
                                  ignore
                                    (Ojs.call x7953 "push"
                                       [|(any_to_js x7954)|])
                              | None -> ());
                             x7953))|])
    let (findIndex :
      'tags this ->
        predicate:(value:float -> index:float -> obj:t -> bool) ->
          ?thisArg:any -> unit -> float)
      =
      fun (x7969 : 'tags this) ->
        fun ~predicate:(x7962 : value:float -> index:float -> obj:t -> bool)
          ->
          fun ?thisArg:(x7963 : any option) ->
            fun () ->
              Ojs.float_of_js
                (let x7971 = this_to_js Obj.magic x7969 in
                 Ojs.call (Ojs.get_prop_ascii x7971 "findIndex") "apply"
                   [|x7971;((let x7964 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7964 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x7966 : Ojs.t) ->
                                          fun (x7967 : Ojs.t) ->
                                            fun (x7968 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x7962
                                                   ~value:(Ojs.float_of_js
                                                             x7966)
                                                   ~index:(Ojs.float_of_js
                                                             x7967)
                                                   ~obj:(t_of_js x7968))))|]);
                             (match x7963 with
                              | Some x7965 ->
                                  ignore
                                    (Ojs.call x7964 "push"
                                       [|(any_to_js x7965)|])
                              | None -> ());
                             x7964))|])
    let (forEach :
      'tags this ->
        callbackfn:(value:float -> index:float -> array:t -> unit) ->
          ?thisArg:any -> unit -> unit)
      =
      fun (x7979 : 'tags this) ->
        fun
          ~callbackfn:(x7972 : value:float -> index:float -> array:t -> unit)
          ->
          fun ?thisArg:(x7973 : any option) ->
            fun () ->
              ignore
                (let x7981 = this_to_js Obj.magic x7979 in
                 Ojs.call (Ojs.get_prop_ascii x7981 "forEach") "apply"
                   [|x7981;((let x7974 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7974 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x7976 : Ojs.t) ->
                                          fun (x7977 : Ojs.t) ->
                                            fun (x7978 : Ojs.t) ->
                                              x7972
                                                ~value:(Ojs.float_of_js x7976)
                                                ~index:(Ojs.float_of_js x7977)
                                                ~array:(t_of_js x7978)))|]);
                             (match x7973 with
                              | Some x7975 ->
                                  ignore
                                    (Ojs.call x7974 "push"
                                       [|(any_to_js x7975)|])
                              | None -> ());
                             x7974))|])
    let (indexOf :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> float)
      =
      fun (x7986 : 'tags this) ->
        fun ~searchElement:(x7982 : float) ->
          fun ?fromIndex:(x7983 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x7988 = this_to_js Obj.magic x7986 in
                 Ojs.call (Ojs.get_prop_ascii x7988 "indexOf") "apply"
                   [|x7988;((let x7984 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7984 "push"
                                  [|(Ojs.float_to_js x7982)|]);
                             (match x7983 with
                              | Some x7985 ->
                                  ignore
                                    (Ojs.call x7984 "push"
                                       [|(Ojs.float_to_js x7985)|])
                              | None -> ());
                             x7984))|])
    let (join : 'tags this -> ?separator:string -> unit -> string) =
      fun (x7992 : 'tags this) ->
        fun ?separator:(x7989 : string option) ->
          fun () ->
            Ojs.string_of_js
              (let x7994 = this_to_js Obj.magic x7992 in
               Ojs.call (Ojs.get_prop_ascii x7994 "join") "apply"
                 [|x7994;((let x7990 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x7989 with
                            | Some x7991 ->
                                ignore
                                  (Ojs.call x7990 "push"
                                     [|(Ojs.string_to_js x7991)|])
                            | None -> ());
                           x7990))|])
    let (lastIndexOf :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> float)
      =
      fun (x7999 : 'tags this) ->
        fun ~searchElement:(x7995 : float) ->
          fun ?fromIndex:(x7996 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x8001 = this_to_js Obj.magic x7999 in
                 Ojs.call (Ojs.get_prop_ascii x8001 "lastIndexOf") "apply"
                   [|x8001;((let x7997 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7997 "push"
                                  [|(Ojs.float_to_js x7995)|]);
                             (match x7996 with
                              | Some x7998 ->
                                  ignore
                                    (Ojs.call x7997 "push"
                                       [|(Ojs.float_to_js x7998)|])
                              | None -> ());
                             x7997))|])
    let (get_length : 'tags this -> float) =
      fun (x8002 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x8002) "length")
    let (map :
      'tags this ->
        callbackfn:(value:float -> index:float -> array:t -> float) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x8011 : 'tags this) ->
        fun
          ~callbackfn:(x8004 :
                        value:float -> index:float -> array:t -> float)
          ->
          fun ?thisArg:(x8005 : any option) ->
            fun () ->
              t_of_js
                (let x8013 = this_to_js Obj.magic x8011 in
                 Ojs.call (Ojs.get_prop_ascii x8013 "map") "apply"
                   [|x8013;((let x8006 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8006 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x8008 : Ojs.t) ->
                                          fun (x8009 : Ojs.t) ->
                                            fun (x8010 : Ojs.t) ->
                                              Ojs.float_to_js
                                                (x8004
                                                   ~value:(Ojs.float_of_js
                                                             x8008)
                                                   ~index:(Ojs.float_of_js
                                                             x8009)
                                                   ~array:(t_of_js x8010))))|]);
                             (match x8005 with
                              | Some x8007 ->
                                  ignore
                                    (Ojs.call x8006 "push"
                                       [|(any_to_js x8007)|])
                              | None -> ());
                             x8006))|])
    let (reduce :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> float)
      =
      fun (x8019 : 'tags this) ->
        fun
          ~callbackfn:(x8014 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x8019) "reduce"
               [|(Ojs.fun_to_js 4
                    (fun (x8015 : Ojs.t) ->
                       fun (x8016 : Ojs.t) ->
                         fun (x8017 : Ojs.t) ->
                           fun (x8018 : Ojs.t) ->
                             Ojs.float_to_js
                               (x8014 ~previousValue:(Ojs.float_of_js x8015)
                                  ~currentValue:(Ojs.float_of_js x8016)
                                  ~currentIndex:(Ojs.float_of_js x8017)
                                  ~array:(t_of_js x8018))))|])
    let (reduce' :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> initialValue:float -> float)
      =
      fun (x8027 : 'tags this) ->
        fun
          ~callbackfn:(x8021 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          fun ~initialValue:(x8026 : float) ->
            Ojs.float_of_js
              (Ojs.call (this_to_js Obj.magic x8027) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x8022 : Ojs.t) ->
                         fun (x8023 : Ojs.t) ->
                           fun (x8024 : Ojs.t) ->
                             fun (x8025 : Ojs.t) ->
                               Ojs.float_to_js
                                 (x8021
                                    ~previousValue:(Ojs.float_of_js x8022)
                                    ~currentValue:(Ojs.float_of_js x8023)
                                    ~currentIndex:(Ojs.float_of_js x8024)
                                    ~array:(t_of_js x8025))));(Ojs.float_to_js
                                                                 x8026)|])
    let (reduce'' :
      'tags this ->
        callbackfn:(previousValue:'U ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x8035 : 'tags this) ->
        fun
          ~callbackfn:(x8029 :
                        previousValue:'U ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x8034 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic x8035) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x8030 : Ojs.t) ->
                         fun (x8031 : Ojs.t) ->
                           fun (x8032 : Ojs.t) ->
                             fun (x8033 : Ojs.t) ->
                               Obj.magic
                                 (x8029 ~previousValue:(Obj.magic x8030)
                                    ~currentValue:(Ojs.float_of_js x8031)
                                    ~currentIndex:(Ojs.float_of_js x8032)
                                    ~array:(t_of_js x8033))));(Obj.magic
                                                                 x8034)|])
    let (reduceRight :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> float)
      =
      fun (x8042 : 'tags this) ->
        fun
          ~callbackfn:(x8037 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x8042) "reduceRight"
               [|(Ojs.fun_to_js 4
                    (fun (x8038 : Ojs.t) ->
                       fun (x8039 : Ojs.t) ->
                         fun (x8040 : Ojs.t) ->
                           fun (x8041 : Ojs.t) ->
                             Ojs.float_to_js
                               (x8037 ~previousValue:(Ojs.float_of_js x8038)
                                  ~currentValue:(Ojs.float_of_js x8039)
                                  ~currentIndex:(Ojs.float_of_js x8040)
                                  ~array:(t_of_js x8041))))|])
    let (reduceRight' :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> initialValue:float -> float)
      =
      fun (x8050 : 'tags this) ->
        fun
          ~callbackfn:(x8044 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          fun ~initialValue:(x8049 : float) ->
            Ojs.float_of_js
              (Ojs.call (this_to_js Obj.magic x8050) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x8045 : Ojs.t) ->
                         fun (x8046 : Ojs.t) ->
                           fun (x8047 : Ojs.t) ->
                             fun (x8048 : Ojs.t) ->
                               Ojs.float_to_js
                                 (x8044
                                    ~previousValue:(Ojs.float_of_js x8045)
                                    ~currentValue:(Ojs.float_of_js x8046)
                                    ~currentIndex:(Ojs.float_of_js x8047)
                                    ~array:(t_of_js x8048))));(Ojs.float_to_js
                                                                 x8049)|])
    let (reduceRight'' :
      'tags this ->
        callbackfn:(previousValue:'U ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x8058 : 'tags this) ->
        fun
          ~callbackfn:(x8052 :
                        previousValue:'U ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x8057 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic x8058) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x8053 : Ojs.t) ->
                         fun (x8054 : Ojs.t) ->
                           fun (x8055 : Ojs.t) ->
                             fun (x8056 : Ojs.t) ->
                               Obj.magic
                                 (x8052 ~previousValue:(Obj.magic x8053)
                                    ~currentValue:(Ojs.float_of_js x8054)
                                    ~currentIndex:(Ojs.float_of_js x8055)
                                    ~array:(t_of_js x8056))));(Obj.magic
                                                                 x8057)|])
    let (reverse : 'tags this -> t) =
      fun (x8060 : 'tags this) ->
        t_of_js (Ojs.call (this_to_js Obj.magic x8060) "reverse" [||])
    let (set_ :
      'tags this -> array:float ArrayLike.t -> ?offset:float -> unit -> unit)
      =
      fun (x8067 : 'tags this) ->
        fun ~array:(x8062 : float ArrayLike.t) ->
          fun ?offset:(x8063 : float option) ->
            fun () ->
              ignore
                (let x8069 = this_to_js Obj.magic x8067 in
                 Ojs.call (Ojs.get_prop_ascii x8069 "set") "apply"
                   [|x8069;((let x8064 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8064 "push"
                                  [|(ArrayLike.t_to_js Ojs.float_to_js x8062)|]);
                             (match x8063 with
                              | Some x8065 ->
                                  ignore
                                    (Ojs.call x8064 "push"
                                       [|(Ojs.float_to_js x8065)|])
                              | None -> ());
                             x8064))|])
    let (slice : 'tags this -> ?start:float -> ?end_:float -> unit -> t) =
      fun (x8075 : 'tags this) ->
        fun ?start:(x8070 : float option) ->
          fun ?end_:(x8071 : float option) ->
            fun () ->
              t_of_js
                (let x8077 = this_to_js Obj.magic x8075 in
                 Ojs.call (Ojs.get_prop_ascii x8077 "slice") "apply"
                   [|x8077;((let x8072 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x8070 with
                              | Some x8074 ->
                                  ignore
                                    (Ojs.call x8072 "push"
                                       [|(Ojs.float_to_js x8074)|])
                              | None -> ());
                             (match x8071 with
                              | Some x8073 ->
                                  ignore
                                    (Ojs.call x8072 "push"
                                       [|(Ojs.float_to_js x8073)|])
                              | None -> ());
                             x8072))|])
    let (some :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x8085 : 'tags this) ->
        fun
          ~predicate:(x8078 :
                       value:float -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x8079 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x8087 = this_to_js Obj.magic x8085 in
                 Ojs.call (Ojs.get_prop_ascii x8087 "some") "apply"
                   [|x8087;((let x8080 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8080 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x8082 : Ojs.t) ->
                                          fun (x8083 : Ojs.t) ->
                                            fun (x8084 : Ojs.t) ->
                                              unknown_to_js
                                                (x8078
                                                   ~value:(Ojs.float_of_js
                                                             x8082)
                                                   ~index:(Ojs.float_of_js
                                                             x8083)
                                                   ~array:(t_of_js x8084))))|]);
                             (match x8079 with
                              | Some x8081 ->
                                  ignore
                                    (Ojs.call x8080 "push"
                                       [|(any_to_js x8081)|])
                              | None -> ());
                             x8080))|])
    let (sort :
      'tags this ->
        ?compareFn:(a:float -> b:float -> float) -> unit -> 'tags this)
      =
      fun (x8093 : 'tags this) ->
        fun ?compareFn:(x8088 : (a:float -> b:float -> float) option) ->
          fun () ->
            this_of_js Obj.magic
              (let x8095 = this_to_js Obj.magic x8093 in
               Ojs.call (Ojs.get_prop_ascii x8095 "sort") "apply"
                 [|x8095;((let x8089 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x8088 with
                            | Some x8090 ->
                                ignore
                                  (Ojs.call x8089 "push"
                                     [|(Ojs.fun_to_js 2
                                          (fun (x8091 : Ojs.t) ->
                                             fun (x8092 : Ojs.t) ->
                                               Ojs.float_to_js
                                                 (x8090
                                                    ~a:(Ojs.float_of_js x8091)
                                                    ~b:(Ojs.float_of_js x8092))))|])
                            | None -> ());
                           x8089))|])
    let (subarray : 'tags this -> ?begin_:float -> ?end_:float -> unit -> t)
      =
      fun (x8102 : 'tags this) ->
        fun ?begin_:(x8097 : float option) ->
          fun ?end_:(x8098 : float option) ->
            fun () ->
              t_of_js
                (let x8104 = this_to_js Obj.magic x8102 in
                 Ojs.call (Ojs.get_prop_ascii x8104 "subarray") "apply"
                   [|x8104;((let x8099 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x8097 with
                              | Some x8101 ->
                                  ignore
                                    (Ojs.call x8099 "push"
                                       [|(Ojs.float_to_js x8101)|])
                              | None -> ());
                             (match x8098 with
                              | Some x8100 ->
                                  ignore
                                    (Ojs.call x8099 "push"
                                       [|(Ojs.float_to_js x8100)|])
                              | None -> ());
                             x8099))|])
    let (toLocaleString : 'tags this -> string) =
      fun (x8105 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x8105) "toLocaleString" [||])
    let (toString : 'tags this -> string) =
      fun (x8107 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x8107) "toString" [||])
    let (valueOf : 'tags this -> t) =
      fun (x8109 : 'tags this) ->
        t_of_js (Ojs.call (this_to_js Obj.magic x8109) "valueOf" [||])
    let (get : 'tags this -> float -> float) =
      fun (x8111 : 'tags this) ->
        fun (x8113 : float) ->
          Ojs.float_of_js
            (Ojs.get_prop (this_to_js Obj.magic x8111)
               (Ojs.float_to_js x8113))
    let (set : 'tags this -> float -> float -> unit) =
      fun (x8114 : 'tags this) ->
        fun (x8116 : float) ->
          fun (x8117 : float) ->
            Ojs.set_prop (this_to_js Obj.magic x8114) (Ojs.float_to_js x8116)
              (Ojs.float_to_js x8117)
    let (create : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Int8Array") [||])
    let (create' : float Iterable.t -> t) =
      fun (x8118 : float Iterable.t) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Int8Array")
             [|(Iterable.t_to_js Ojs.float_to_js x8118)|])
    let (from :
      arrayLike:float Iterable.t ->
        ?mapfn:(v:float -> k:float -> float) -> ?thisArg:any -> unit -> t)
      =
      fun ~arrayLike:(x8120 : float Iterable.t) ->
        fun ?mapfn:(x8121 : (v:float -> k:float -> float) option) ->
          fun ?thisArg:(x8122 : any option) ->
            fun () ->
              t_of_js
                (let x8129 = Ojs.get_prop_ascii Ojs.global "Int8Array" in
                 Ojs.call (Ojs.get_prop_ascii x8129 "from") "apply"
                   [|x8129;((let x8123 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8123 "push"
                                  [|(Iterable.t_to_js Ojs.float_to_js x8120)|]);
                             (match x8121 with
                              | Some x8125 ->
                                  ignore
                                    (Ojs.call x8123 "push"
                                       [|(Ojs.fun_to_js 2
                                            (fun (x8126 : Ojs.t) ->
                                               fun (x8127 : Ojs.t) ->
                                                 Ojs.float_to_js
                                                   (x8125
                                                      ~v:(Ojs.float_of_js
                                                            x8126)
                                                      ~k:(Ojs.float_of_js
                                                            x8127))))|])
                              | None -> ());
                             (match x8122 with
                              | Some x8124 ->
                                  ignore
                                    (Ojs.call x8123 "push"
                                       [|(any_to_js x8124)|])
                              | None -> ());
                             x8123))|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Int8Array")
             "prototype")
    let (create'' : float -> t) =
      fun (x8130 : float) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Int8Array")
             [|(Ojs.float_to_js x8130)|])
    let (create''' :
      [ `U1 of float ArrayLike.t  | `U2 of ArrayBufferLike.t ] -> t) =
      fun (x8131 : [ `U1 of float ArrayLike.t  | `U2 of ArrayBufferLike.t ])
        ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Int8Array")
             [|((match x8131 with
                 | `U1 x8132 -> ArrayLike.t_to_js Ojs.float_to_js x8132
                 | `U2 x8134 -> ArrayBufferLike.t_to_js x8134))|])
    let (create'''' :
      buffer:ArrayBufferLike.t ->
        ?byteOffset:float -> ?length:float -> unit -> t)
      =
      fun ~buffer:(x8135 : ArrayBufferLike.t) ->
        fun ?byteOffset:(x8136 : float option) ->
          fun ?length:(x8137 : float option) ->
            fun () ->
              t_of_js
                (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "Int8Array")
                   (let x8138 =
                      Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                        [||] in
                    ignore
                      (Ojs.call x8138 "push"
                         [|(ArrayBufferLike.t_to_js x8135)|]);
                    (match x8136 with
                     | Some x8140 ->
                         ignore
                           (Ojs.call x8138 "push" [|(Ojs.float_to_js x8140)|])
                     | None -> ());
                    (match x8137 with
                     | Some x8139 ->
                         ignore
                           (Ojs.call x8138 "push" [|(Ojs.float_to_js x8139)|])
                     | None -> ());
                    x8138))
    let (bytes_per_element : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Int8Array")
             "BYTES_PER_ELEMENT")
    let (of_ : float list -> t) =
      fun (x8141 : float list) ->
        t_of_js
          (let x8144 = Ojs.get_prop_ascii Ojs.global "Int8Array" in
           Ojs.call (Ojs.get_prop_ascii x8144 "of") "apply"
             [|x8144;((let x8142 =
                         Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                           [||] in
                       List.iter
                         (fun (x8143 : float) ->
                            ignore
                              (Ojs.call x8142 "push"
                                 [|(Ojs.float_to_js x8143)|])) x8141;
                       x8142))|])
    let (from' : float ArrayLike.t -> t) =
      fun (x8145 : float ArrayLike.t) ->
        t_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Int8Array") "from"
             [|(ArrayLike.t_to_js Ojs.float_to_js x8145)|])
    let (from'' :
      arrayLike:'T ArrayLike.t ->
        mapfn:(v:'T -> k:float -> float) -> ?thisArg:any -> unit -> t)
      =
      fun ~arrayLike:(x8147 : 'T ArrayLike.t) ->
        fun ~mapfn:(x8148 : v:'T -> k:float -> float) ->
          fun ?thisArg:(x8149 : any option) ->
            fun () ->
              t_of_js
                (let x8155 = Ojs.get_prop_ascii Ojs.global "Int8Array" in
                 Ojs.call (Ojs.get_prop_ascii x8155 "from") "apply"
                   [|x8155;((let x8150 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8150 "push"
                                  [|(ArrayLike.t_to_js Obj.magic x8147)|]);
                             ignore
                               (Ojs.call x8150 "push"
                                  [|(Ojs.fun_to_js 2
                                       (fun (x8152 : Ojs.t) ->
                                          fun (x8153 : Ojs.t) ->
                                            Ojs.float_to_js
                                              (x8148 ~v:(Obj.magic x8152)
                                                 ~k:(Ojs.float_of_js x8153))))|]);
                             (match x8149 with
                              | Some x8151 ->
                                  ignore
                                    (Ojs.call x8150 "push"
                                       [|(any_to_js x8151)|])
                              | None -> ());
                             x8150))|])
    let cast_from = Obj.magic
  end
module Int32Array =
  struct
    type t =
      [ `Int32Array  | float ArrayLike.tags_1
      | float IterableIterator.tags_1] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x8157 : Ojs.t) -> t_of_js x8157
    and t_0_to_js : t_0 -> Ojs.t = fun (x8156 : t) -> t_to_js x8156
    type tags =
      [ `Int32Array  | float ArrayLike.tags_1
      | float IterableIterator.tags_1]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `Int32Array ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x8160 : Ojs.t) -> intf_of_js __tags_of_js x8160
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x8158 : __tags intf) -> intf_to_js __tags_to_js x8158
    let (at : 'tags this -> index:float -> float option) =
      fun (x8163 : 'tags this) ->
        fun ~index:(x8162 : float) ->
          Ojs.option_of_js Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x8163) "at"
               [|(Ojs.float_to_js x8162)|])
    let (includes :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> bool)
      =
      fun (x8170 : 'tags this) ->
        fun ~searchElement:(x8166 : float) ->
          fun ?fromIndex:(x8167 : float option) ->
            fun () ->
              Ojs.bool_of_js
                (let x8172 = this_to_js Obj.magic x8170 in
                 Ojs.call (Ojs.get_prop_ascii x8172 "includes") "apply"
                   [|x8172;((let x8168 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8168 "push"
                                  [|(Ojs.float_to_js x8166)|]);
                             (match x8167 with
                              | Some x8169 ->
                                  ignore
                                    (Ojs.call x8168 "push"
                                       [|(Ojs.float_to_js x8169)|])
                              | None -> ());
                             x8168))|])
    let (entries : 'tags this -> (float * float) IterableIterator.t) =
      fun (x8173 : 'tags this) ->
        IterableIterator.t_of_js
          (fun (x8175 : Ojs.t) ->
             let x8176 = x8175 in
             ((Ojs.float_of_js (Ojs.array_get x8176 0)),
               (Ojs.float_of_js (Ojs.array_get x8176 1))))
          (Ojs.call (this_to_js Obj.magic x8173) "entries" [||])
    let (keys : 'tags this -> float IterableIterator.t) =
      fun (x8177 : 'tags this) ->
        IterableIterator.t_of_js Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x8177) "keys" [||])
    let (values : 'tags this -> float IterableIterator.t) =
      fun (x8180 : 'tags this) ->
        IterableIterator.t_of_js Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x8180) "values" [||])
    let (get_BYTES_PER_ELEMENT : 'tags this -> float) =
      fun (x8183 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x8183)
             "BYTES_PER_ELEMENT")
    let (get_buffer : 'tags this -> ArrayBufferLike.t) =
      fun (x8185 : 'tags this) ->
        ArrayBufferLike.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x8185) "buffer")
    let (get_byteLength : 'tags this -> float) =
      fun (x8187 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x8187) "byteLength")
    let (get_byteOffset : 'tags this -> float) =
      fun (x8189 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x8189) "byteOffset")
    let (copyWithin :
      'tags this ->
        target:float -> start:float -> ?end_:float -> unit -> 'tags this)
      =
      fun (x8196 : 'tags this) ->
        fun ~target:(x8191 : float) ->
          fun ~start:(x8192 : float) ->
            fun ?end_:(x8193 : float option) ->
              fun () ->
                this_of_js Obj.magic
                  (let x8198 = this_to_js Obj.magic x8196 in
                   Ojs.call (Ojs.get_prop_ascii x8198 "copyWithin") "apply"
                     [|x8198;((let x8194 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x8194 "push"
                                    [|(Ojs.float_to_js x8191)|]);
                               ignore
                                 (Ojs.call x8194 "push"
                                    [|(Ojs.float_to_js x8192)|]);
                               (match x8193 with
                                | Some x8195 ->
                                    ignore
                                      (Ojs.call x8194 "push"
                                         [|(Ojs.float_to_js x8195)|])
                                | None -> ());
                               x8194))|])
    let (every :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x8207 : 'tags this) ->
        fun
          ~predicate:(x8200 :
                       value:float -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x8201 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x8209 = this_to_js Obj.magic x8207 in
                 Ojs.call (Ojs.get_prop_ascii x8209 "every") "apply"
                   [|x8209;((let x8202 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8202 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x8204 : Ojs.t) ->
                                          fun (x8205 : Ojs.t) ->
                                            fun (x8206 : Ojs.t) ->
                                              unknown_to_js
                                                (x8200
                                                   ~value:(Ojs.float_of_js
                                                             x8204)
                                                   ~index:(Ojs.float_of_js
                                                             x8205)
                                                   ~array:(t_of_js x8206))))|]);
                             (match x8201 with
                              | Some x8203 ->
                                  ignore
                                    (Ojs.call x8202 "push"
                                       [|(any_to_js x8203)|])
                              | None -> ());
                             x8202))|])
    let (fill :
      'tags this ->
        value:float -> ?start:float -> ?end_:float -> unit -> 'tags this)
      =
      fun (x8216 : 'tags this) ->
        fun ~value:(x8210 : float) ->
          fun ?start:(x8211 : float option) ->
            fun ?end_:(x8212 : float option) ->
              fun () ->
                this_of_js Obj.magic
                  (let x8218 = this_to_js Obj.magic x8216 in
                   Ojs.call (Ojs.get_prop_ascii x8218 "fill") "apply"
                     [|x8218;((let x8213 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x8213 "push"
                                    [|(Ojs.float_to_js x8210)|]);
                               (match x8211 with
                                | Some x8215 ->
                                    ignore
                                      (Ojs.call x8213 "push"
                                         [|(Ojs.float_to_js x8215)|])
                                | None -> ());
                               (match x8212 with
                                | Some x8214 ->
                                    ignore
                                      (Ojs.call x8213 "push"
                                         [|(Ojs.float_to_js x8214)|])
                                | None -> ());
                               x8213))|])
    let (filter :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> any) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x8227 : 'tags this) ->
        fun ~predicate:(x8220 : value:float -> index:float -> array:t -> any)
          ->
          fun ?thisArg:(x8221 : any option) ->
            fun () ->
              t_of_js
                (let x8229 = this_to_js Obj.magic x8227 in
                 Ojs.call (Ojs.get_prop_ascii x8229 "filter") "apply"
                   [|x8229;((let x8222 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8222 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x8224 : Ojs.t) ->
                                          fun (x8225 : Ojs.t) ->
                                            fun (x8226 : Ojs.t) ->
                                              any_to_js
                                                (x8220
                                                   ~value:(Ojs.float_of_js
                                                             x8224)
                                                   ~index:(Ojs.float_of_js
                                                             x8225)
                                                   ~array:(t_of_js x8226))))|]);
                             (match x8221 with
                              | Some x8223 ->
                                  ignore
                                    (Ojs.call x8222 "push"
                                       [|(any_to_js x8223)|])
                              | None -> ());
                             x8222))|])
    let (find :
      'tags this ->
        predicate:(value:float -> index:float -> obj:t -> bool) ->
          ?thisArg:any -> unit -> float option)
      =
      fun (x8237 : 'tags this) ->
        fun ~predicate:(x8230 : value:float -> index:float -> obj:t -> bool)
          ->
          fun ?thisArg:(x8231 : any option) ->
            fun () ->
              Ojs.option_of_js Ojs.float_of_js
                (let x8239 = this_to_js Obj.magic x8237 in
                 Ojs.call (Ojs.get_prop_ascii x8239 "find") "apply"
                   [|x8239;((let x8232 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8232 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x8234 : Ojs.t) ->
                                          fun (x8235 : Ojs.t) ->
                                            fun (x8236 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x8230
                                                   ~value:(Ojs.float_of_js
                                                             x8234)
                                                   ~index:(Ojs.float_of_js
                                                             x8235)
                                                   ~obj:(t_of_js x8236))))|]);
                             (match x8231 with
                              | Some x8233 ->
                                  ignore
                                    (Ojs.call x8232 "push"
                                       [|(any_to_js x8233)|])
                              | None -> ());
                             x8232))|])
    let (findIndex :
      'tags this ->
        predicate:(value:float -> index:float -> obj:t -> bool) ->
          ?thisArg:any -> unit -> float)
      =
      fun (x8248 : 'tags this) ->
        fun ~predicate:(x8241 : value:float -> index:float -> obj:t -> bool)
          ->
          fun ?thisArg:(x8242 : any option) ->
            fun () ->
              Ojs.float_of_js
                (let x8250 = this_to_js Obj.magic x8248 in
                 Ojs.call (Ojs.get_prop_ascii x8250 "findIndex") "apply"
                   [|x8250;((let x8243 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8243 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x8245 : Ojs.t) ->
                                          fun (x8246 : Ojs.t) ->
                                            fun (x8247 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x8241
                                                   ~value:(Ojs.float_of_js
                                                             x8245)
                                                   ~index:(Ojs.float_of_js
                                                             x8246)
                                                   ~obj:(t_of_js x8247))))|]);
                             (match x8242 with
                              | Some x8244 ->
                                  ignore
                                    (Ojs.call x8243 "push"
                                       [|(any_to_js x8244)|])
                              | None -> ());
                             x8243))|])
    let (forEach :
      'tags this ->
        callbackfn:(value:float -> index:float -> array:t -> unit) ->
          ?thisArg:any -> unit -> unit)
      =
      fun (x8258 : 'tags this) ->
        fun
          ~callbackfn:(x8251 : value:float -> index:float -> array:t -> unit)
          ->
          fun ?thisArg:(x8252 : any option) ->
            fun () ->
              ignore
                (let x8260 = this_to_js Obj.magic x8258 in
                 Ojs.call (Ojs.get_prop_ascii x8260 "forEach") "apply"
                   [|x8260;((let x8253 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8253 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x8255 : Ojs.t) ->
                                          fun (x8256 : Ojs.t) ->
                                            fun (x8257 : Ojs.t) ->
                                              x8251
                                                ~value:(Ojs.float_of_js x8255)
                                                ~index:(Ojs.float_of_js x8256)
                                                ~array:(t_of_js x8257)))|]);
                             (match x8252 with
                              | Some x8254 ->
                                  ignore
                                    (Ojs.call x8253 "push"
                                       [|(any_to_js x8254)|])
                              | None -> ());
                             x8253))|])
    let (indexOf :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> float)
      =
      fun (x8265 : 'tags this) ->
        fun ~searchElement:(x8261 : float) ->
          fun ?fromIndex:(x8262 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x8267 = this_to_js Obj.magic x8265 in
                 Ojs.call (Ojs.get_prop_ascii x8267 "indexOf") "apply"
                   [|x8267;((let x8263 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8263 "push"
                                  [|(Ojs.float_to_js x8261)|]);
                             (match x8262 with
                              | Some x8264 ->
                                  ignore
                                    (Ojs.call x8263 "push"
                                       [|(Ojs.float_to_js x8264)|])
                              | None -> ());
                             x8263))|])
    let (join : 'tags this -> ?separator:string -> unit -> string) =
      fun (x8271 : 'tags this) ->
        fun ?separator:(x8268 : string option) ->
          fun () ->
            Ojs.string_of_js
              (let x8273 = this_to_js Obj.magic x8271 in
               Ojs.call (Ojs.get_prop_ascii x8273 "join") "apply"
                 [|x8273;((let x8269 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x8268 with
                            | Some x8270 ->
                                ignore
                                  (Ojs.call x8269 "push"
                                     [|(Ojs.string_to_js x8270)|])
                            | None -> ());
                           x8269))|])
    let (lastIndexOf :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> float)
      =
      fun (x8278 : 'tags this) ->
        fun ~searchElement:(x8274 : float) ->
          fun ?fromIndex:(x8275 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x8280 = this_to_js Obj.magic x8278 in
                 Ojs.call (Ojs.get_prop_ascii x8280 "lastIndexOf") "apply"
                   [|x8280;((let x8276 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8276 "push"
                                  [|(Ojs.float_to_js x8274)|]);
                             (match x8275 with
                              | Some x8277 ->
                                  ignore
                                    (Ojs.call x8276 "push"
                                       [|(Ojs.float_to_js x8277)|])
                              | None -> ());
                             x8276))|])
    let (get_length : 'tags this -> float) =
      fun (x8281 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x8281) "length")
    let (map :
      'tags this ->
        callbackfn:(value:float -> index:float -> array:t -> float) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x8290 : 'tags this) ->
        fun
          ~callbackfn:(x8283 :
                        value:float -> index:float -> array:t -> float)
          ->
          fun ?thisArg:(x8284 : any option) ->
            fun () ->
              t_of_js
                (let x8292 = this_to_js Obj.magic x8290 in
                 Ojs.call (Ojs.get_prop_ascii x8292 "map") "apply"
                   [|x8292;((let x8285 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8285 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x8287 : Ojs.t) ->
                                          fun (x8288 : Ojs.t) ->
                                            fun (x8289 : Ojs.t) ->
                                              Ojs.float_to_js
                                                (x8283
                                                   ~value:(Ojs.float_of_js
                                                             x8287)
                                                   ~index:(Ojs.float_of_js
                                                             x8288)
                                                   ~array:(t_of_js x8289))))|]);
                             (match x8284 with
                              | Some x8286 ->
                                  ignore
                                    (Ojs.call x8285 "push"
                                       [|(any_to_js x8286)|])
                              | None -> ());
                             x8285))|])
    let (reduce :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> float)
      =
      fun (x8298 : 'tags this) ->
        fun
          ~callbackfn:(x8293 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x8298) "reduce"
               [|(Ojs.fun_to_js 4
                    (fun (x8294 : Ojs.t) ->
                       fun (x8295 : Ojs.t) ->
                         fun (x8296 : Ojs.t) ->
                           fun (x8297 : Ojs.t) ->
                             Ojs.float_to_js
                               (x8293 ~previousValue:(Ojs.float_of_js x8294)
                                  ~currentValue:(Ojs.float_of_js x8295)
                                  ~currentIndex:(Ojs.float_of_js x8296)
                                  ~array:(t_of_js x8297))))|])
    let (reduce' :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> initialValue:float -> float)
      =
      fun (x8306 : 'tags this) ->
        fun
          ~callbackfn:(x8300 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          fun ~initialValue:(x8305 : float) ->
            Ojs.float_of_js
              (Ojs.call (this_to_js Obj.magic x8306) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x8301 : Ojs.t) ->
                         fun (x8302 : Ojs.t) ->
                           fun (x8303 : Ojs.t) ->
                             fun (x8304 : Ojs.t) ->
                               Ojs.float_to_js
                                 (x8300
                                    ~previousValue:(Ojs.float_of_js x8301)
                                    ~currentValue:(Ojs.float_of_js x8302)
                                    ~currentIndex:(Ojs.float_of_js x8303)
                                    ~array:(t_of_js x8304))));(Ojs.float_to_js
                                                                 x8305)|])
    let (reduce'' :
      'tags this ->
        callbackfn:(previousValue:'U ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x8314 : 'tags this) ->
        fun
          ~callbackfn:(x8308 :
                        previousValue:'U ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x8313 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic x8314) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x8309 : Ojs.t) ->
                         fun (x8310 : Ojs.t) ->
                           fun (x8311 : Ojs.t) ->
                             fun (x8312 : Ojs.t) ->
                               Obj.magic
                                 (x8308 ~previousValue:(Obj.magic x8309)
                                    ~currentValue:(Ojs.float_of_js x8310)
                                    ~currentIndex:(Ojs.float_of_js x8311)
                                    ~array:(t_of_js x8312))));(Obj.magic
                                                                 x8313)|])
    let (reduceRight :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> float)
      =
      fun (x8321 : 'tags this) ->
        fun
          ~callbackfn:(x8316 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x8321) "reduceRight"
               [|(Ojs.fun_to_js 4
                    (fun (x8317 : Ojs.t) ->
                       fun (x8318 : Ojs.t) ->
                         fun (x8319 : Ojs.t) ->
                           fun (x8320 : Ojs.t) ->
                             Ojs.float_to_js
                               (x8316 ~previousValue:(Ojs.float_of_js x8317)
                                  ~currentValue:(Ojs.float_of_js x8318)
                                  ~currentIndex:(Ojs.float_of_js x8319)
                                  ~array:(t_of_js x8320))))|])
    let (reduceRight' :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> initialValue:float -> float)
      =
      fun (x8329 : 'tags this) ->
        fun
          ~callbackfn:(x8323 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          fun ~initialValue:(x8328 : float) ->
            Ojs.float_of_js
              (Ojs.call (this_to_js Obj.magic x8329) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x8324 : Ojs.t) ->
                         fun (x8325 : Ojs.t) ->
                           fun (x8326 : Ojs.t) ->
                             fun (x8327 : Ojs.t) ->
                               Ojs.float_to_js
                                 (x8323
                                    ~previousValue:(Ojs.float_of_js x8324)
                                    ~currentValue:(Ojs.float_of_js x8325)
                                    ~currentIndex:(Ojs.float_of_js x8326)
                                    ~array:(t_of_js x8327))));(Ojs.float_to_js
                                                                 x8328)|])
    let (reduceRight'' :
      'tags this ->
        callbackfn:(previousValue:'U ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x8337 : 'tags this) ->
        fun
          ~callbackfn:(x8331 :
                        previousValue:'U ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x8336 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic x8337) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x8332 : Ojs.t) ->
                         fun (x8333 : Ojs.t) ->
                           fun (x8334 : Ojs.t) ->
                             fun (x8335 : Ojs.t) ->
                               Obj.magic
                                 (x8331 ~previousValue:(Obj.magic x8332)
                                    ~currentValue:(Ojs.float_of_js x8333)
                                    ~currentIndex:(Ojs.float_of_js x8334)
                                    ~array:(t_of_js x8335))));(Obj.magic
                                                                 x8336)|])
    let (reverse : 'tags this -> t) =
      fun (x8339 : 'tags this) ->
        t_of_js (Ojs.call (this_to_js Obj.magic x8339) "reverse" [||])
    let (set_ :
      'tags this -> array:float ArrayLike.t -> ?offset:float -> unit -> unit)
      =
      fun (x8346 : 'tags this) ->
        fun ~array:(x8341 : float ArrayLike.t) ->
          fun ?offset:(x8342 : float option) ->
            fun () ->
              ignore
                (let x8348 = this_to_js Obj.magic x8346 in
                 Ojs.call (Ojs.get_prop_ascii x8348 "set") "apply"
                   [|x8348;((let x8343 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8343 "push"
                                  [|(ArrayLike.t_to_js Ojs.float_to_js x8341)|]);
                             (match x8342 with
                              | Some x8344 ->
                                  ignore
                                    (Ojs.call x8343 "push"
                                       [|(Ojs.float_to_js x8344)|])
                              | None -> ());
                             x8343))|])
    let (slice : 'tags this -> ?start:float -> ?end_:float -> unit -> t) =
      fun (x8354 : 'tags this) ->
        fun ?start:(x8349 : float option) ->
          fun ?end_:(x8350 : float option) ->
            fun () ->
              t_of_js
                (let x8356 = this_to_js Obj.magic x8354 in
                 Ojs.call (Ojs.get_prop_ascii x8356 "slice") "apply"
                   [|x8356;((let x8351 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x8349 with
                              | Some x8353 ->
                                  ignore
                                    (Ojs.call x8351 "push"
                                       [|(Ojs.float_to_js x8353)|])
                              | None -> ());
                             (match x8350 with
                              | Some x8352 ->
                                  ignore
                                    (Ojs.call x8351 "push"
                                       [|(Ojs.float_to_js x8352)|])
                              | None -> ());
                             x8351))|])
    let (some :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x8364 : 'tags this) ->
        fun
          ~predicate:(x8357 :
                       value:float -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x8358 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x8366 = this_to_js Obj.magic x8364 in
                 Ojs.call (Ojs.get_prop_ascii x8366 "some") "apply"
                   [|x8366;((let x8359 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8359 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x8361 : Ojs.t) ->
                                          fun (x8362 : Ojs.t) ->
                                            fun (x8363 : Ojs.t) ->
                                              unknown_to_js
                                                (x8357
                                                   ~value:(Ojs.float_of_js
                                                             x8361)
                                                   ~index:(Ojs.float_of_js
                                                             x8362)
                                                   ~array:(t_of_js x8363))))|]);
                             (match x8358 with
                              | Some x8360 ->
                                  ignore
                                    (Ojs.call x8359 "push"
                                       [|(any_to_js x8360)|])
                              | None -> ());
                             x8359))|])
    let (sort :
      'tags this ->
        ?compareFn:(a:float -> b:float -> float) -> unit -> 'tags this)
      =
      fun (x8372 : 'tags this) ->
        fun ?compareFn:(x8367 : (a:float -> b:float -> float) option) ->
          fun () ->
            this_of_js Obj.magic
              (let x8374 = this_to_js Obj.magic x8372 in
               Ojs.call (Ojs.get_prop_ascii x8374 "sort") "apply"
                 [|x8374;((let x8368 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x8367 with
                            | Some x8369 ->
                                ignore
                                  (Ojs.call x8368 "push"
                                     [|(Ojs.fun_to_js 2
                                          (fun (x8370 : Ojs.t) ->
                                             fun (x8371 : Ojs.t) ->
                                               Ojs.float_to_js
                                                 (x8369
                                                    ~a:(Ojs.float_of_js x8370)
                                                    ~b:(Ojs.float_of_js x8371))))|])
                            | None -> ());
                           x8368))|])
    let (subarray : 'tags this -> ?begin_:float -> ?end_:float -> unit -> t)
      =
      fun (x8381 : 'tags this) ->
        fun ?begin_:(x8376 : float option) ->
          fun ?end_:(x8377 : float option) ->
            fun () ->
              t_of_js
                (let x8383 = this_to_js Obj.magic x8381 in
                 Ojs.call (Ojs.get_prop_ascii x8383 "subarray") "apply"
                   [|x8383;((let x8378 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x8376 with
                              | Some x8380 ->
                                  ignore
                                    (Ojs.call x8378 "push"
                                       [|(Ojs.float_to_js x8380)|])
                              | None -> ());
                             (match x8377 with
                              | Some x8379 ->
                                  ignore
                                    (Ojs.call x8378 "push"
                                       [|(Ojs.float_to_js x8379)|])
                              | None -> ());
                             x8378))|])
    let (toLocaleString : 'tags this -> string) =
      fun (x8384 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x8384) "toLocaleString" [||])
    let (toString : 'tags this -> string) =
      fun (x8386 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x8386) "toString" [||])
    let (valueOf : 'tags this -> t) =
      fun (x8388 : 'tags this) ->
        t_of_js (Ojs.call (this_to_js Obj.magic x8388) "valueOf" [||])
    let (get : 'tags this -> float -> float) =
      fun (x8390 : 'tags this) ->
        fun (x8392 : float) ->
          Ojs.float_of_js
            (Ojs.get_prop (this_to_js Obj.magic x8390)
               (Ojs.float_to_js x8392))
    let (set : 'tags this -> float -> float -> unit) =
      fun (x8393 : 'tags this) ->
        fun (x8395 : float) ->
          fun (x8396 : float) ->
            Ojs.set_prop (this_to_js Obj.magic x8393) (Ojs.float_to_js x8395)
              (Ojs.float_to_js x8396)
    let (create : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Int32Array") [||])
    let (create' : float Iterable.t -> t) =
      fun (x8397 : float Iterable.t) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Int32Array")
             [|(Iterable.t_to_js Ojs.float_to_js x8397)|])
    let (from :
      arrayLike:float Iterable.t ->
        ?mapfn:(v:float -> k:float -> float) -> ?thisArg:any -> unit -> t)
      =
      fun ~arrayLike:(x8399 : float Iterable.t) ->
        fun ?mapfn:(x8400 : (v:float -> k:float -> float) option) ->
          fun ?thisArg:(x8401 : any option) ->
            fun () ->
              t_of_js
                (let x8408 = Ojs.get_prop_ascii Ojs.global "Int32Array" in
                 Ojs.call (Ojs.get_prop_ascii x8408 "from") "apply"
                   [|x8408;((let x8402 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8402 "push"
                                  [|(Iterable.t_to_js Ojs.float_to_js x8399)|]);
                             (match x8400 with
                              | Some x8404 ->
                                  ignore
                                    (Ojs.call x8402 "push"
                                       [|(Ojs.fun_to_js 2
                                            (fun (x8405 : Ojs.t) ->
                                               fun (x8406 : Ojs.t) ->
                                                 Ojs.float_to_js
                                                   (x8404
                                                      ~v:(Ojs.float_of_js
                                                            x8405)
                                                      ~k:(Ojs.float_of_js
                                                            x8406))))|])
                              | None -> ());
                             (match x8401 with
                              | Some x8403 ->
                                  ignore
                                    (Ojs.call x8402 "push"
                                       [|(any_to_js x8403)|])
                              | None -> ());
                             x8402))|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Int32Array")
             "prototype")
    let (create'' : float -> t) =
      fun (x8409 : float) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Int32Array")
             [|(Ojs.float_to_js x8409)|])
    let (create''' :
      [ `U1 of float ArrayLike.t  | `U2 of ArrayBufferLike.t ] -> t) =
      fun (x8410 : [ `U1 of float ArrayLike.t  | `U2 of ArrayBufferLike.t ])
        ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Int32Array")
             [|((match x8410 with
                 | `U1 x8411 -> ArrayLike.t_to_js Ojs.float_to_js x8411
                 | `U2 x8413 -> ArrayBufferLike.t_to_js x8413))|])
    let (create'''' :
      buffer:ArrayBufferLike.t ->
        ?byteOffset:float -> ?length:float -> unit -> t)
      =
      fun ~buffer:(x8414 : ArrayBufferLike.t) ->
        fun ?byteOffset:(x8415 : float option) ->
          fun ?length:(x8416 : float option) ->
            fun () ->
              t_of_js
                (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "Int32Array")
                   (let x8417 =
                      Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                        [||] in
                    ignore
                      (Ojs.call x8417 "push"
                         [|(ArrayBufferLike.t_to_js x8414)|]);
                    (match x8415 with
                     | Some x8419 ->
                         ignore
                           (Ojs.call x8417 "push" [|(Ojs.float_to_js x8419)|])
                     | None -> ());
                    (match x8416 with
                     | Some x8418 ->
                         ignore
                           (Ojs.call x8417 "push" [|(Ojs.float_to_js x8418)|])
                     | None -> ());
                    x8417))
    let (bytes_per_element : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Int32Array")
             "BYTES_PER_ELEMENT")
    let (of_ : float list -> t) =
      fun (x8420 : float list) ->
        t_of_js
          (let x8423 = Ojs.get_prop_ascii Ojs.global "Int32Array" in
           Ojs.call (Ojs.get_prop_ascii x8423 "of") "apply"
             [|x8423;((let x8421 =
                         Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                           [||] in
                       List.iter
                         (fun (x8422 : float) ->
                            ignore
                              (Ojs.call x8421 "push"
                                 [|(Ojs.float_to_js x8422)|])) x8420;
                       x8421))|])
    let (from' : float ArrayLike.t -> t) =
      fun (x8424 : float ArrayLike.t) ->
        t_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Int32Array") "from"
             [|(ArrayLike.t_to_js Ojs.float_to_js x8424)|])
    let (from'' :
      arrayLike:'T ArrayLike.t ->
        mapfn:(v:'T -> k:float -> float) -> ?thisArg:any -> unit -> t)
      =
      fun ~arrayLike:(x8426 : 'T ArrayLike.t) ->
        fun ~mapfn:(x8427 : v:'T -> k:float -> float) ->
          fun ?thisArg:(x8428 : any option) ->
            fun () ->
              t_of_js
                (let x8434 = Ojs.get_prop_ascii Ojs.global "Int32Array" in
                 Ojs.call (Ojs.get_prop_ascii x8434 "from") "apply"
                   [|x8434;((let x8429 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8429 "push"
                                  [|(ArrayLike.t_to_js Obj.magic x8426)|]);
                             ignore
                               (Ojs.call x8429 "push"
                                  [|(Ojs.fun_to_js 2
                                       (fun (x8431 : Ojs.t) ->
                                          fun (x8432 : Ojs.t) ->
                                            Ojs.float_to_js
                                              (x8427 ~v:(Obj.magic x8431)
                                                 ~k:(Ojs.float_of_js x8432))))|]);
                             (match x8428 with
                              | Some x8430 ->
                                  ignore
                                    (Ojs.call x8429 "push"
                                       [|(any_to_js x8430)|])
                              | None -> ());
                             x8429))|])
    let cast_from = Obj.magic
  end
module Int16Array =
  struct
    type t =
      [ `Int16Array  | float ArrayLike.tags_1
      | float IterableIterator.tags_1] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x8436 : Ojs.t) -> t_of_js x8436
    and t_0_to_js : t_0 -> Ojs.t = fun (x8435 : t) -> t_to_js x8435
    type tags =
      [ `Int16Array  | float ArrayLike.tags_1
      | float IterableIterator.tags_1]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `Int16Array ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x8439 : Ojs.t) -> intf_of_js __tags_of_js x8439
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x8437 : __tags intf) -> intf_to_js __tags_to_js x8437
    let (at : 'tags this -> index:float -> float option) =
      fun (x8442 : 'tags this) ->
        fun ~index:(x8441 : float) ->
          Ojs.option_of_js Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x8442) "at"
               [|(Ojs.float_to_js x8441)|])
    let (includes :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> bool)
      =
      fun (x8449 : 'tags this) ->
        fun ~searchElement:(x8445 : float) ->
          fun ?fromIndex:(x8446 : float option) ->
            fun () ->
              Ojs.bool_of_js
                (let x8451 = this_to_js Obj.magic x8449 in
                 Ojs.call (Ojs.get_prop_ascii x8451 "includes") "apply"
                   [|x8451;((let x8447 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8447 "push"
                                  [|(Ojs.float_to_js x8445)|]);
                             (match x8446 with
                              | Some x8448 ->
                                  ignore
                                    (Ojs.call x8447 "push"
                                       [|(Ojs.float_to_js x8448)|])
                              | None -> ());
                             x8447))|])
    let (entries : 'tags this -> (float * float) IterableIterator.t) =
      fun (x8452 : 'tags this) ->
        IterableIterator.t_of_js
          (fun (x8454 : Ojs.t) ->
             let x8455 = x8454 in
             ((Ojs.float_of_js (Ojs.array_get x8455 0)),
               (Ojs.float_of_js (Ojs.array_get x8455 1))))
          (Ojs.call (this_to_js Obj.magic x8452) "entries" [||])
    let (keys : 'tags this -> float IterableIterator.t) =
      fun (x8456 : 'tags this) ->
        IterableIterator.t_of_js Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x8456) "keys" [||])
    let (values : 'tags this -> float IterableIterator.t) =
      fun (x8459 : 'tags this) ->
        IterableIterator.t_of_js Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x8459) "values" [||])
    let (get_BYTES_PER_ELEMENT : 'tags this -> float) =
      fun (x8462 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x8462)
             "BYTES_PER_ELEMENT")
    let (get_buffer : 'tags this -> ArrayBufferLike.t) =
      fun (x8464 : 'tags this) ->
        ArrayBufferLike.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x8464) "buffer")
    let (get_byteLength : 'tags this -> float) =
      fun (x8466 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x8466) "byteLength")
    let (get_byteOffset : 'tags this -> float) =
      fun (x8468 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x8468) "byteOffset")
    let (copyWithin :
      'tags this ->
        target:float -> start:float -> ?end_:float -> unit -> 'tags this)
      =
      fun (x8475 : 'tags this) ->
        fun ~target:(x8470 : float) ->
          fun ~start:(x8471 : float) ->
            fun ?end_:(x8472 : float option) ->
              fun () ->
                this_of_js Obj.magic
                  (let x8477 = this_to_js Obj.magic x8475 in
                   Ojs.call (Ojs.get_prop_ascii x8477 "copyWithin") "apply"
                     [|x8477;((let x8473 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x8473 "push"
                                    [|(Ojs.float_to_js x8470)|]);
                               ignore
                                 (Ojs.call x8473 "push"
                                    [|(Ojs.float_to_js x8471)|]);
                               (match x8472 with
                                | Some x8474 ->
                                    ignore
                                      (Ojs.call x8473 "push"
                                         [|(Ojs.float_to_js x8474)|])
                                | None -> ());
                               x8473))|])
    let (every :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x8486 : 'tags this) ->
        fun
          ~predicate:(x8479 :
                       value:float -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x8480 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x8488 = this_to_js Obj.magic x8486 in
                 Ojs.call (Ojs.get_prop_ascii x8488 "every") "apply"
                   [|x8488;((let x8481 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8481 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x8483 : Ojs.t) ->
                                          fun (x8484 : Ojs.t) ->
                                            fun (x8485 : Ojs.t) ->
                                              unknown_to_js
                                                (x8479
                                                   ~value:(Ojs.float_of_js
                                                             x8483)
                                                   ~index:(Ojs.float_of_js
                                                             x8484)
                                                   ~array:(t_of_js x8485))))|]);
                             (match x8480 with
                              | Some x8482 ->
                                  ignore
                                    (Ojs.call x8481 "push"
                                       [|(any_to_js x8482)|])
                              | None -> ());
                             x8481))|])
    let (fill :
      'tags this ->
        value:float -> ?start:float -> ?end_:float -> unit -> 'tags this)
      =
      fun (x8495 : 'tags this) ->
        fun ~value:(x8489 : float) ->
          fun ?start:(x8490 : float option) ->
            fun ?end_:(x8491 : float option) ->
              fun () ->
                this_of_js Obj.magic
                  (let x8497 = this_to_js Obj.magic x8495 in
                   Ojs.call (Ojs.get_prop_ascii x8497 "fill") "apply"
                     [|x8497;((let x8492 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x8492 "push"
                                    [|(Ojs.float_to_js x8489)|]);
                               (match x8490 with
                                | Some x8494 ->
                                    ignore
                                      (Ojs.call x8492 "push"
                                         [|(Ojs.float_to_js x8494)|])
                                | None -> ());
                               (match x8491 with
                                | Some x8493 ->
                                    ignore
                                      (Ojs.call x8492 "push"
                                         [|(Ojs.float_to_js x8493)|])
                                | None -> ());
                               x8492))|])
    let (filter :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> any) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x8506 : 'tags this) ->
        fun ~predicate:(x8499 : value:float -> index:float -> array:t -> any)
          ->
          fun ?thisArg:(x8500 : any option) ->
            fun () ->
              t_of_js
                (let x8508 = this_to_js Obj.magic x8506 in
                 Ojs.call (Ojs.get_prop_ascii x8508 "filter") "apply"
                   [|x8508;((let x8501 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8501 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x8503 : Ojs.t) ->
                                          fun (x8504 : Ojs.t) ->
                                            fun (x8505 : Ojs.t) ->
                                              any_to_js
                                                (x8499
                                                   ~value:(Ojs.float_of_js
                                                             x8503)
                                                   ~index:(Ojs.float_of_js
                                                             x8504)
                                                   ~array:(t_of_js x8505))))|]);
                             (match x8500 with
                              | Some x8502 ->
                                  ignore
                                    (Ojs.call x8501 "push"
                                       [|(any_to_js x8502)|])
                              | None -> ());
                             x8501))|])
    let (find :
      'tags this ->
        predicate:(value:float -> index:float -> obj:t -> bool) ->
          ?thisArg:any -> unit -> float option)
      =
      fun (x8516 : 'tags this) ->
        fun ~predicate:(x8509 : value:float -> index:float -> obj:t -> bool)
          ->
          fun ?thisArg:(x8510 : any option) ->
            fun () ->
              Ojs.option_of_js Ojs.float_of_js
                (let x8518 = this_to_js Obj.magic x8516 in
                 Ojs.call (Ojs.get_prop_ascii x8518 "find") "apply"
                   [|x8518;((let x8511 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8511 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x8513 : Ojs.t) ->
                                          fun (x8514 : Ojs.t) ->
                                            fun (x8515 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x8509
                                                   ~value:(Ojs.float_of_js
                                                             x8513)
                                                   ~index:(Ojs.float_of_js
                                                             x8514)
                                                   ~obj:(t_of_js x8515))))|]);
                             (match x8510 with
                              | Some x8512 ->
                                  ignore
                                    (Ojs.call x8511 "push"
                                       [|(any_to_js x8512)|])
                              | None -> ());
                             x8511))|])
    let (findIndex :
      'tags this ->
        predicate:(value:float -> index:float -> obj:t -> bool) ->
          ?thisArg:any -> unit -> float)
      =
      fun (x8527 : 'tags this) ->
        fun ~predicate:(x8520 : value:float -> index:float -> obj:t -> bool)
          ->
          fun ?thisArg:(x8521 : any option) ->
            fun () ->
              Ojs.float_of_js
                (let x8529 = this_to_js Obj.magic x8527 in
                 Ojs.call (Ojs.get_prop_ascii x8529 "findIndex") "apply"
                   [|x8529;((let x8522 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8522 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x8524 : Ojs.t) ->
                                          fun (x8525 : Ojs.t) ->
                                            fun (x8526 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x8520
                                                   ~value:(Ojs.float_of_js
                                                             x8524)
                                                   ~index:(Ojs.float_of_js
                                                             x8525)
                                                   ~obj:(t_of_js x8526))))|]);
                             (match x8521 with
                              | Some x8523 ->
                                  ignore
                                    (Ojs.call x8522 "push"
                                       [|(any_to_js x8523)|])
                              | None -> ());
                             x8522))|])
    let (forEach :
      'tags this ->
        callbackfn:(value:float -> index:float -> array:t -> unit) ->
          ?thisArg:any -> unit -> unit)
      =
      fun (x8537 : 'tags this) ->
        fun
          ~callbackfn:(x8530 : value:float -> index:float -> array:t -> unit)
          ->
          fun ?thisArg:(x8531 : any option) ->
            fun () ->
              ignore
                (let x8539 = this_to_js Obj.magic x8537 in
                 Ojs.call (Ojs.get_prop_ascii x8539 "forEach") "apply"
                   [|x8539;((let x8532 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8532 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x8534 : Ojs.t) ->
                                          fun (x8535 : Ojs.t) ->
                                            fun (x8536 : Ojs.t) ->
                                              x8530
                                                ~value:(Ojs.float_of_js x8534)
                                                ~index:(Ojs.float_of_js x8535)
                                                ~array:(t_of_js x8536)))|]);
                             (match x8531 with
                              | Some x8533 ->
                                  ignore
                                    (Ojs.call x8532 "push"
                                       [|(any_to_js x8533)|])
                              | None -> ());
                             x8532))|])
    let (indexOf :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> float)
      =
      fun (x8544 : 'tags this) ->
        fun ~searchElement:(x8540 : float) ->
          fun ?fromIndex:(x8541 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x8546 = this_to_js Obj.magic x8544 in
                 Ojs.call (Ojs.get_prop_ascii x8546 "indexOf") "apply"
                   [|x8546;((let x8542 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8542 "push"
                                  [|(Ojs.float_to_js x8540)|]);
                             (match x8541 with
                              | Some x8543 ->
                                  ignore
                                    (Ojs.call x8542 "push"
                                       [|(Ojs.float_to_js x8543)|])
                              | None -> ());
                             x8542))|])
    let (join : 'tags this -> ?separator:string -> unit -> string) =
      fun (x8550 : 'tags this) ->
        fun ?separator:(x8547 : string option) ->
          fun () ->
            Ojs.string_of_js
              (let x8552 = this_to_js Obj.magic x8550 in
               Ojs.call (Ojs.get_prop_ascii x8552 "join") "apply"
                 [|x8552;((let x8548 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x8547 with
                            | Some x8549 ->
                                ignore
                                  (Ojs.call x8548 "push"
                                     [|(Ojs.string_to_js x8549)|])
                            | None -> ());
                           x8548))|])
    let (lastIndexOf :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> float)
      =
      fun (x8557 : 'tags this) ->
        fun ~searchElement:(x8553 : float) ->
          fun ?fromIndex:(x8554 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x8559 = this_to_js Obj.magic x8557 in
                 Ojs.call (Ojs.get_prop_ascii x8559 "lastIndexOf") "apply"
                   [|x8559;((let x8555 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8555 "push"
                                  [|(Ojs.float_to_js x8553)|]);
                             (match x8554 with
                              | Some x8556 ->
                                  ignore
                                    (Ojs.call x8555 "push"
                                       [|(Ojs.float_to_js x8556)|])
                              | None -> ());
                             x8555))|])
    let (get_length : 'tags this -> float) =
      fun (x8560 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x8560) "length")
    let (map :
      'tags this ->
        callbackfn:(value:float -> index:float -> array:t -> float) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x8569 : 'tags this) ->
        fun
          ~callbackfn:(x8562 :
                        value:float -> index:float -> array:t -> float)
          ->
          fun ?thisArg:(x8563 : any option) ->
            fun () ->
              t_of_js
                (let x8571 = this_to_js Obj.magic x8569 in
                 Ojs.call (Ojs.get_prop_ascii x8571 "map") "apply"
                   [|x8571;((let x8564 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8564 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x8566 : Ojs.t) ->
                                          fun (x8567 : Ojs.t) ->
                                            fun (x8568 : Ojs.t) ->
                                              Ojs.float_to_js
                                                (x8562
                                                   ~value:(Ojs.float_of_js
                                                             x8566)
                                                   ~index:(Ojs.float_of_js
                                                             x8567)
                                                   ~array:(t_of_js x8568))))|]);
                             (match x8563 with
                              | Some x8565 ->
                                  ignore
                                    (Ojs.call x8564 "push"
                                       [|(any_to_js x8565)|])
                              | None -> ());
                             x8564))|])
    let (reduce :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> float)
      =
      fun (x8577 : 'tags this) ->
        fun
          ~callbackfn:(x8572 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x8577) "reduce"
               [|(Ojs.fun_to_js 4
                    (fun (x8573 : Ojs.t) ->
                       fun (x8574 : Ojs.t) ->
                         fun (x8575 : Ojs.t) ->
                           fun (x8576 : Ojs.t) ->
                             Ojs.float_to_js
                               (x8572 ~previousValue:(Ojs.float_of_js x8573)
                                  ~currentValue:(Ojs.float_of_js x8574)
                                  ~currentIndex:(Ojs.float_of_js x8575)
                                  ~array:(t_of_js x8576))))|])
    let (reduce' :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> initialValue:float -> float)
      =
      fun (x8585 : 'tags this) ->
        fun
          ~callbackfn:(x8579 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          fun ~initialValue:(x8584 : float) ->
            Ojs.float_of_js
              (Ojs.call (this_to_js Obj.magic x8585) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x8580 : Ojs.t) ->
                         fun (x8581 : Ojs.t) ->
                           fun (x8582 : Ojs.t) ->
                             fun (x8583 : Ojs.t) ->
                               Ojs.float_to_js
                                 (x8579
                                    ~previousValue:(Ojs.float_of_js x8580)
                                    ~currentValue:(Ojs.float_of_js x8581)
                                    ~currentIndex:(Ojs.float_of_js x8582)
                                    ~array:(t_of_js x8583))));(Ojs.float_to_js
                                                                 x8584)|])
    let (reduce'' :
      'tags this ->
        callbackfn:(previousValue:'U ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x8593 : 'tags this) ->
        fun
          ~callbackfn:(x8587 :
                        previousValue:'U ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x8592 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic x8593) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x8588 : Ojs.t) ->
                         fun (x8589 : Ojs.t) ->
                           fun (x8590 : Ojs.t) ->
                             fun (x8591 : Ojs.t) ->
                               Obj.magic
                                 (x8587 ~previousValue:(Obj.magic x8588)
                                    ~currentValue:(Ojs.float_of_js x8589)
                                    ~currentIndex:(Ojs.float_of_js x8590)
                                    ~array:(t_of_js x8591))));(Obj.magic
                                                                 x8592)|])
    let (reduceRight :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> float)
      =
      fun (x8600 : 'tags this) ->
        fun
          ~callbackfn:(x8595 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x8600) "reduceRight"
               [|(Ojs.fun_to_js 4
                    (fun (x8596 : Ojs.t) ->
                       fun (x8597 : Ojs.t) ->
                         fun (x8598 : Ojs.t) ->
                           fun (x8599 : Ojs.t) ->
                             Ojs.float_to_js
                               (x8595 ~previousValue:(Ojs.float_of_js x8596)
                                  ~currentValue:(Ojs.float_of_js x8597)
                                  ~currentIndex:(Ojs.float_of_js x8598)
                                  ~array:(t_of_js x8599))))|])
    let (reduceRight' :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> initialValue:float -> float)
      =
      fun (x8608 : 'tags this) ->
        fun
          ~callbackfn:(x8602 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          fun ~initialValue:(x8607 : float) ->
            Ojs.float_of_js
              (Ojs.call (this_to_js Obj.magic x8608) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x8603 : Ojs.t) ->
                         fun (x8604 : Ojs.t) ->
                           fun (x8605 : Ojs.t) ->
                             fun (x8606 : Ojs.t) ->
                               Ojs.float_to_js
                                 (x8602
                                    ~previousValue:(Ojs.float_of_js x8603)
                                    ~currentValue:(Ojs.float_of_js x8604)
                                    ~currentIndex:(Ojs.float_of_js x8605)
                                    ~array:(t_of_js x8606))));(Ojs.float_to_js
                                                                 x8607)|])
    let (reduceRight'' :
      'tags this ->
        callbackfn:(previousValue:'U ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x8616 : 'tags this) ->
        fun
          ~callbackfn:(x8610 :
                        previousValue:'U ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x8615 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic x8616) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x8611 : Ojs.t) ->
                         fun (x8612 : Ojs.t) ->
                           fun (x8613 : Ojs.t) ->
                             fun (x8614 : Ojs.t) ->
                               Obj.magic
                                 (x8610 ~previousValue:(Obj.magic x8611)
                                    ~currentValue:(Ojs.float_of_js x8612)
                                    ~currentIndex:(Ojs.float_of_js x8613)
                                    ~array:(t_of_js x8614))));(Obj.magic
                                                                 x8615)|])
    let (reverse : 'tags this -> t) =
      fun (x8618 : 'tags this) ->
        t_of_js (Ojs.call (this_to_js Obj.magic x8618) "reverse" [||])
    let (set_ :
      'tags this -> array:float ArrayLike.t -> ?offset:float -> unit -> unit)
      =
      fun (x8625 : 'tags this) ->
        fun ~array:(x8620 : float ArrayLike.t) ->
          fun ?offset:(x8621 : float option) ->
            fun () ->
              ignore
                (let x8627 = this_to_js Obj.magic x8625 in
                 Ojs.call (Ojs.get_prop_ascii x8627 "set") "apply"
                   [|x8627;((let x8622 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8622 "push"
                                  [|(ArrayLike.t_to_js Ojs.float_to_js x8620)|]);
                             (match x8621 with
                              | Some x8623 ->
                                  ignore
                                    (Ojs.call x8622 "push"
                                       [|(Ojs.float_to_js x8623)|])
                              | None -> ());
                             x8622))|])
    let (slice : 'tags this -> ?start:float -> ?end_:float -> unit -> t) =
      fun (x8633 : 'tags this) ->
        fun ?start:(x8628 : float option) ->
          fun ?end_:(x8629 : float option) ->
            fun () ->
              t_of_js
                (let x8635 = this_to_js Obj.magic x8633 in
                 Ojs.call (Ojs.get_prop_ascii x8635 "slice") "apply"
                   [|x8635;((let x8630 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x8628 with
                              | Some x8632 ->
                                  ignore
                                    (Ojs.call x8630 "push"
                                       [|(Ojs.float_to_js x8632)|])
                              | None -> ());
                             (match x8629 with
                              | Some x8631 ->
                                  ignore
                                    (Ojs.call x8630 "push"
                                       [|(Ojs.float_to_js x8631)|])
                              | None -> ());
                             x8630))|])
    let (some :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x8643 : 'tags this) ->
        fun
          ~predicate:(x8636 :
                       value:float -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x8637 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x8645 = this_to_js Obj.magic x8643 in
                 Ojs.call (Ojs.get_prop_ascii x8645 "some") "apply"
                   [|x8645;((let x8638 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8638 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x8640 : Ojs.t) ->
                                          fun (x8641 : Ojs.t) ->
                                            fun (x8642 : Ojs.t) ->
                                              unknown_to_js
                                                (x8636
                                                   ~value:(Ojs.float_of_js
                                                             x8640)
                                                   ~index:(Ojs.float_of_js
                                                             x8641)
                                                   ~array:(t_of_js x8642))))|]);
                             (match x8637 with
                              | Some x8639 ->
                                  ignore
                                    (Ojs.call x8638 "push"
                                       [|(any_to_js x8639)|])
                              | None -> ());
                             x8638))|])
    let (sort :
      'tags this ->
        ?compareFn:(a:float -> b:float -> float) -> unit -> 'tags this)
      =
      fun (x8651 : 'tags this) ->
        fun ?compareFn:(x8646 : (a:float -> b:float -> float) option) ->
          fun () ->
            this_of_js Obj.magic
              (let x8653 = this_to_js Obj.magic x8651 in
               Ojs.call (Ojs.get_prop_ascii x8653 "sort") "apply"
                 [|x8653;((let x8647 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x8646 with
                            | Some x8648 ->
                                ignore
                                  (Ojs.call x8647 "push"
                                     [|(Ojs.fun_to_js 2
                                          (fun (x8649 : Ojs.t) ->
                                             fun (x8650 : Ojs.t) ->
                                               Ojs.float_to_js
                                                 (x8648
                                                    ~a:(Ojs.float_of_js x8649)
                                                    ~b:(Ojs.float_of_js x8650))))|])
                            | None -> ());
                           x8647))|])
    let (subarray : 'tags this -> ?begin_:float -> ?end_:float -> unit -> t)
      =
      fun (x8660 : 'tags this) ->
        fun ?begin_:(x8655 : float option) ->
          fun ?end_:(x8656 : float option) ->
            fun () ->
              t_of_js
                (let x8662 = this_to_js Obj.magic x8660 in
                 Ojs.call (Ojs.get_prop_ascii x8662 "subarray") "apply"
                   [|x8662;((let x8657 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x8655 with
                              | Some x8659 ->
                                  ignore
                                    (Ojs.call x8657 "push"
                                       [|(Ojs.float_to_js x8659)|])
                              | None -> ());
                             (match x8656 with
                              | Some x8658 ->
                                  ignore
                                    (Ojs.call x8657 "push"
                                       [|(Ojs.float_to_js x8658)|])
                              | None -> ());
                             x8657))|])
    let (toLocaleString : 'tags this -> string) =
      fun (x8663 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x8663) "toLocaleString" [||])
    let (toString : 'tags this -> string) =
      fun (x8665 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x8665) "toString" [||])
    let (valueOf : 'tags this -> t) =
      fun (x8667 : 'tags this) ->
        t_of_js (Ojs.call (this_to_js Obj.magic x8667) "valueOf" [||])
    let (get : 'tags this -> float -> float) =
      fun (x8669 : 'tags this) ->
        fun (x8671 : float) ->
          Ojs.float_of_js
            (Ojs.get_prop (this_to_js Obj.magic x8669)
               (Ojs.float_to_js x8671))
    let (set : 'tags this -> float -> float -> unit) =
      fun (x8672 : 'tags this) ->
        fun (x8674 : float) ->
          fun (x8675 : float) ->
            Ojs.set_prop (this_to_js Obj.magic x8672) (Ojs.float_to_js x8674)
              (Ojs.float_to_js x8675)
    let (create : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Int16Array") [||])
    let (create' : float Iterable.t -> t) =
      fun (x8676 : float Iterable.t) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Int16Array")
             [|(Iterable.t_to_js Ojs.float_to_js x8676)|])
    let (from :
      arrayLike:float Iterable.t ->
        ?mapfn:(v:float -> k:float -> float) -> ?thisArg:any -> unit -> t)
      =
      fun ~arrayLike:(x8678 : float Iterable.t) ->
        fun ?mapfn:(x8679 : (v:float -> k:float -> float) option) ->
          fun ?thisArg:(x8680 : any option) ->
            fun () ->
              t_of_js
                (let x8687 = Ojs.get_prop_ascii Ojs.global "Int16Array" in
                 Ojs.call (Ojs.get_prop_ascii x8687 "from") "apply"
                   [|x8687;((let x8681 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8681 "push"
                                  [|(Iterable.t_to_js Ojs.float_to_js x8678)|]);
                             (match x8679 with
                              | Some x8683 ->
                                  ignore
                                    (Ojs.call x8681 "push"
                                       [|(Ojs.fun_to_js 2
                                            (fun (x8684 : Ojs.t) ->
                                               fun (x8685 : Ojs.t) ->
                                                 Ojs.float_to_js
                                                   (x8683
                                                      ~v:(Ojs.float_of_js
                                                            x8684)
                                                      ~k:(Ojs.float_of_js
                                                            x8685))))|])
                              | None -> ());
                             (match x8680 with
                              | Some x8682 ->
                                  ignore
                                    (Ojs.call x8681 "push"
                                       [|(any_to_js x8682)|])
                              | None -> ());
                             x8681))|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Int16Array")
             "prototype")
    let (create'' : float -> t) =
      fun (x8688 : float) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Int16Array")
             [|(Ojs.float_to_js x8688)|])
    let (create''' :
      [ `U1 of float ArrayLike.t  | `U2 of ArrayBufferLike.t ] -> t) =
      fun (x8689 : [ `U1 of float ArrayLike.t  | `U2 of ArrayBufferLike.t ])
        ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Int16Array")
             [|((match x8689 with
                 | `U1 x8690 -> ArrayLike.t_to_js Ojs.float_to_js x8690
                 | `U2 x8692 -> ArrayBufferLike.t_to_js x8692))|])
    let (create'''' :
      buffer:ArrayBufferLike.t ->
        ?byteOffset:float -> ?length:float -> unit -> t)
      =
      fun ~buffer:(x8693 : ArrayBufferLike.t) ->
        fun ?byteOffset:(x8694 : float option) ->
          fun ?length:(x8695 : float option) ->
            fun () ->
              t_of_js
                (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "Int16Array")
                   (let x8696 =
                      Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                        [||] in
                    ignore
                      (Ojs.call x8696 "push"
                         [|(ArrayBufferLike.t_to_js x8693)|]);
                    (match x8694 with
                     | Some x8698 ->
                         ignore
                           (Ojs.call x8696 "push" [|(Ojs.float_to_js x8698)|])
                     | None -> ());
                    (match x8695 with
                     | Some x8697 ->
                         ignore
                           (Ojs.call x8696 "push" [|(Ojs.float_to_js x8697)|])
                     | None -> ());
                    x8696))
    let (bytes_per_element : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Int16Array")
             "BYTES_PER_ELEMENT")
    let (of_ : float list -> t) =
      fun (x8699 : float list) ->
        t_of_js
          (let x8702 = Ojs.get_prop_ascii Ojs.global "Int16Array" in
           Ojs.call (Ojs.get_prop_ascii x8702 "of") "apply"
             [|x8702;((let x8700 =
                         Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                           [||] in
                       List.iter
                         (fun (x8701 : float) ->
                            ignore
                              (Ojs.call x8700 "push"
                                 [|(Ojs.float_to_js x8701)|])) x8699;
                       x8700))|])
    let (from' : float ArrayLike.t -> t) =
      fun (x8703 : float ArrayLike.t) ->
        t_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Int16Array") "from"
             [|(ArrayLike.t_to_js Ojs.float_to_js x8703)|])
    let (from'' :
      arrayLike:'T ArrayLike.t ->
        mapfn:(v:'T -> k:float -> float) -> ?thisArg:any -> unit -> t)
      =
      fun ~arrayLike:(x8705 : 'T ArrayLike.t) ->
        fun ~mapfn:(x8706 : v:'T -> k:float -> float) ->
          fun ?thisArg:(x8707 : any option) ->
            fun () ->
              t_of_js
                (let x8713 = Ojs.get_prop_ascii Ojs.global "Int16Array" in
                 Ojs.call (Ojs.get_prop_ascii x8713 "from") "apply"
                   [|x8713;((let x8708 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8708 "push"
                                  [|(ArrayLike.t_to_js Obj.magic x8705)|]);
                             ignore
                               (Ojs.call x8708 "push"
                                  [|(Ojs.fun_to_js 2
                                       (fun (x8710 : Ojs.t) ->
                                          fun (x8711 : Ojs.t) ->
                                            Ojs.float_to_js
                                              (x8706 ~v:(Obj.magic x8710)
                                                 ~k:(Ojs.float_of_js x8711))))|]);
                             (match x8707 with
                              | Some x8709 ->
                                  ignore
                                    (Ojs.call x8708 "push"
                                       [|(any_to_js x8709)|])
                              | None -> ());
                             x8708))|])
    let cast_from = Obj.magic
  end
module BigUint64Array =
  struct
    type t =
      [ `BigUint64Array  | bigint ArrayLike.tags_1
      | bigint IterableIterator.tags_1] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x8715 : Ojs.t) -> t_of_js x8715
    and t_0_to_js : t_0 -> Ojs.t = fun (x8714 : t) -> t_to_js x8714
    type tags =
      [ `BigUint64Array  | bigint ArrayLike.tags_1
      | bigint IterableIterator.tags_1]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `BigUint64Array ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x8718 : Ojs.t) -> intf_of_js __tags_of_js x8718
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x8716 : __tags intf) -> intf_to_js __tags_to_js x8716
    let (at : 'tags this -> index:float -> bigint option) =
      fun (x8721 : 'tags this) ->
        fun ~index:(x8720 : float) ->
          Ojs.option_of_js bigint_of_js
            (Ojs.call (this_to_js Obj.magic x8721) "at"
               [|(Ojs.float_to_js x8720)|])
    let (get_BYTES_PER_ELEMENT : 'tags this -> float) =
      fun (x8724 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x8724)
             "BYTES_PER_ELEMENT")
    let (get_buffer : 'tags this -> ArrayBufferLike.t) =
      fun (x8726 : 'tags this) ->
        ArrayBufferLike.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x8726) "buffer")
    let (get_byteLength : 'tags this -> float) =
      fun (x8728 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x8728) "byteLength")
    let (get_byteOffset : 'tags this -> float) =
      fun (x8730 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x8730) "byteOffset")
    let (copyWithin :
      'tags this ->
        target:float -> start:float -> ?end_:float -> unit -> 'tags this)
      =
      fun (x8737 : 'tags this) ->
        fun ~target:(x8732 : float) ->
          fun ~start:(x8733 : float) ->
            fun ?end_:(x8734 : float option) ->
              fun () ->
                this_of_js Obj.magic
                  (let x8739 = this_to_js Obj.magic x8737 in
                   Ojs.call (Ojs.get_prop_ascii x8739 "copyWithin") "apply"
                     [|x8739;((let x8735 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x8735 "push"
                                    [|(Ojs.float_to_js x8732)|]);
                               ignore
                                 (Ojs.call x8735 "push"
                                    [|(Ojs.float_to_js x8733)|]);
                               (match x8734 with
                                | Some x8736 ->
                                    ignore
                                      (Ojs.call x8735 "push"
                                         [|(Ojs.float_to_js x8736)|])
                                | None -> ());
                               x8735))|])
    let (entries : 'tags this -> (float * bigint) IterableIterator.t) =
      fun (x8741 : 'tags this) ->
        IterableIterator.t_of_js
          (fun (x8743 : Ojs.t) ->
             let x8744 = x8743 in
             ((Ojs.float_of_js (Ojs.array_get x8744 0)),
               (bigint_of_js (Ojs.array_get x8744 1))))
          (Ojs.call (this_to_js Obj.magic x8741) "entries" [||])
    let (every :
      'tags this ->
        predicate:(value:bigint -> index:float -> array:t -> bool) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x8752 : 'tags this) ->
        fun
          ~predicate:(x8745 : value:bigint -> index:float -> array:t -> bool)
          ->
          fun ?thisArg:(x8746 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x8754 = this_to_js Obj.magic x8752 in
                 Ojs.call (Ojs.get_prop_ascii x8754 "every") "apply"
                   [|x8754;((let x8747 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8747 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x8749 : Ojs.t) ->
                                          fun (x8750 : Ojs.t) ->
                                            fun (x8751 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x8745
                                                   ~value:(bigint_of_js x8749)
                                                   ~index:(Ojs.float_of_js
                                                             x8750)
                                                   ~array:(t_of_js x8751))))|]);
                             (match x8746 with
                              | Some x8748 ->
                                  ignore
                                    (Ojs.call x8747 "push"
                                       [|(any_to_js x8748)|])
                              | None -> ());
                             x8747))|])
    let (fill :
      'tags this ->
        value:bigint -> ?start:float -> ?end_:float -> unit -> 'tags this)
      =
      fun (x8761 : 'tags this) ->
        fun ~value:(x8755 : bigint) ->
          fun ?start:(x8756 : float option) ->
            fun ?end_:(x8757 : float option) ->
              fun () ->
                this_of_js Obj.magic
                  (let x8763 = this_to_js Obj.magic x8761 in
                   Ojs.call (Ojs.get_prop_ascii x8763 "fill") "apply"
                     [|x8763;((let x8758 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x8758 "push"
                                    [|(bigint_to_js x8755)|]);
                               (match x8756 with
                                | Some x8760 ->
                                    ignore
                                      (Ojs.call x8758 "push"
                                         [|(Ojs.float_to_js x8760)|])
                                | None -> ());
                               (match x8757 with
                                | Some x8759 ->
                                    ignore
                                      (Ojs.call x8758 "push"
                                         [|(Ojs.float_to_js x8759)|])
                                | None -> ());
                               x8758))|])
    let (filter :
      'tags this ->
        predicate:(value:bigint -> index:float -> array:t -> any) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x8772 : 'tags this) ->
        fun
          ~predicate:(x8765 : value:bigint -> index:float -> array:t -> any)
          ->
          fun ?thisArg:(x8766 : any option) ->
            fun () ->
              t_of_js
                (let x8774 = this_to_js Obj.magic x8772 in
                 Ojs.call (Ojs.get_prop_ascii x8774 "filter") "apply"
                   [|x8774;((let x8767 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8767 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x8769 : Ojs.t) ->
                                          fun (x8770 : Ojs.t) ->
                                            fun (x8771 : Ojs.t) ->
                                              any_to_js
                                                (x8765
                                                   ~value:(bigint_of_js x8769)
                                                   ~index:(Ojs.float_of_js
                                                             x8770)
                                                   ~array:(t_of_js x8771))))|]);
                             (match x8766 with
                              | Some x8768 ->
                                  ignore
                                    (Ojs.call x8767 "push"
                                       [|(any_to_js x8768)|])
                              | None -> ());
                             x8767))|])
    let (find :
      'tags this ->
        predicate:(value:bigint -> index:float -> array:t -> bool) ->
          ?thisArg:any -> unit -> bigint option)
      =
      fun (x8782 : 'tags this) ->
        fun
          ~predicate:(x8775 : value:bigint -> index:float -> array:t -> bool)
          ->
          fun ?thisArg:(x8776 : any option) ->
            fun () ->
              Ojs.option_of_js bigint_of_js
                (let x8784 = this_to_js Obj.magic x8782 in
                 Ojs.call (Ojs.get_prop_ascii x8784 "find") "apply"
                   [|x8784;((let x8777 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8777 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x8779 : Ojs.t) ->
                                          fun (x8780 : Ojs.t) ->
                                            fun (x8781 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x8775
                                                   ~value:(bigint_of_js x8779)
                                                   ~index:(Ojs.float_of_js
                                                             x8780)
                                                   ~array:(t_of_js x8781))))|]);
                             (match x8776 with
                              | Some x8778 ->
                                  ignore
                                    (Ojs.call x8777 "push"
                                       [|(any_to_js x8778)|])
                              | None -> ());
                             x8777))|])
    let (findIndex :
      'tags this ->
        predicate:(value:bigint -> index:float -> array:t -> bool) ->
          ?thisArg:any -> unit -> float)
      =
      fun (x8793 : 'tags this) ->
        fun
          ~predicate:(x8786 : value:bigint -> index:float -> array:t -> bool)
          ->
          fun ?thisArg:(x8787 : any option) ->
            fun () ->
              Ojs.float_of_js
                (let x8795 = this_to_js Obj.magic x8793 in
                 Ojs.call (Ojs.get_prop_ascii x8795 "findIndex") "apply"
                   [|x8795;((let x8788 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8788 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x8790 : Ojs.t) ->
                                          fun (x8791 : Ojs.t) ->
                                            fun (x8792 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x8786
                                                   ~value:(bigint_of_js x8790)
                                                   ~index:(Ojs.float_of_js
                                                             x8791)
                                                   ~array:(t_of_js x8792))))|]);
                             (match x8787 with
                              | Some x8789 ->
                                  ignore
                                    (Ojs.call x8788 "push"
                                       [|(any_to_js x8789)|])
                              | None -> ());
                             x8788))|])
    let (forEach :
      'tags this ->
        callbackfn:(value:bigint -> index:float -> array:t -> unit) ->
          ?thisArg:any -> unit -> unit)
      =
      fun (x8803 : 'tags this) ->
        fun
          ~callbackfn:(x8796 :
                        value:bigint -> index:float -> array:t -> unit)
          ->
          fun ?thisArg:(x8797 : any option) ->
            fun () ->
              ignore
                (let x8805 = this_to_js Obj.magic x8803 in
                 Ojs.call (Ojs.get_prop_ascii x8805 "forEach") "apply"
                   [|x8805;((let x8798 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8798 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x8800 : Ojs.t) ->
                                          fun (x8801 : Ojs.t) ->
                                            fun (x8802 : Ojs.t) ->
                                              x8796
                                                ~value:(bigint_of_js x8800)
                                                ~index:(Ojs.float_of_js x8801)
                                                ~array:(t_of_js x8802)))|]);
                             (match x8797 with
                              | Some x8799 ->
                                  ignore
                                    (Ojs.call x8798 "push"
                                       [|(any_to_js x8799)|])
                              | None -> ());
                             x8798))|])
    let (includes :
      'tags this -> searchElement:bigint -> ?fromIndex:float -> unit -> bool)
      =
      fun (x8810 : 'tags this) ->
        fun ~searchElement:(x8806 : bigint) ->
          fun ?fromIndex:(x8807 : float option) ->
            fun () ->
              Ojs.bool_of_js
                (let x8812 = this_to_js Obj.magic x8810 in
                 Ojs.call (Ojs.get_prop_ascii x8812 "includes") "apply"
                   [|x8812;((let x8808 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8808 "push"
                                  [|(bigint_to_js x8806)|]);
                             (match x8807 with
                              | Some x8809 ->
                                  ignore
                                    (Ojs.call x8808 "push"
                                       [|(Ojs.float_to_js x8809)|])
                              | None -> ());
                             x8808))|])
    let (indexOf :
      'tags this -> searchElement:bigint -> ?fromIndex:float -> unit -> float)
      =
      fun (x8817 : 'tags this) ->
        fun ~searchElement:(x8813 : bigint) ->
          fun ?fromIndex:(x8814 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x8819 = this_to_js Obj.magic x8817 in
                 Ojs.call (Ojs.get_prop_ascii x8819 "indexOf") "apply"
                   [|x8819;((let x8815 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8815 "push"
                                  [|(bigint_to_js x8813)|]);
                             (match x8814 with
                              | Some x8816 ->
                                  ignore
                                    (Ojs.call x8815 "push"
                                       [|(Ojs.float_to_js x8816)|])
                              | None -> ());
                             x8815))|])
    let (join : 'tags this -> ?separator:string -> unit -> string) =
      fun (x8823 : 'tags this) ->
        fun ?separator:(x8820 : string option) ->
          fun () ->
            Ojs.string_of_js
              (let x8825 = this_to_js Obj.magic x8823 in
               Ojs.call (Ojs.get_prop_ascii x8825 "join") "apply"
                 [|x8825;((let x8821 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x8820 with
                            | Some x8822 ->
                                ignore
                                  (Ojs.call x8821 "push"
                                     [|(Ojs.string_to_js x8822)|])
                            | None -> ());
                           x8821))|])
    let (keys : 'tags this -> float IterableIterator.t) =
      fun (x8826 : 'tags this) ->
        IterableIterator.t_of_js Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x8826) "keys" [||])
    let (lastIndexOf :
      'tags this -> searchElement:bigint -> ?fromIndex:float -> unit -> float)
      =
      fun (x8833 : 'tags this) ->
        fun ~searchElement:(x8829 : bigint) ->
          fun ?fromIndex:(x8830 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x8835 = this_to_js Obj.magic x8833 in
                 Ojs.call (Ojs.get_prop_ascii x8835 "lastIndexOf") "apply"
                   [|x8835;((let x8831 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8831 "push"
                                  [|(bigint_to_js x8829)|]);
                             (match x8830 with
                              | Some x8832 ->
                                  ignore
                                    (Ojs.call x8831 "push"
                                       [|(Ojs.float_to_js x8832)|])
                              | None -> ());
                             x8831))|])
    let (get_length : 'tags this -> float) =
      fun (x8836 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x8836) "length")
    let (map :
      'tags this ->
        callbackfn:(value:bigint -> index:float -> array:t -> bigint) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x8845 : 'tags this) ->
        fun
          ~callbackfn:(x8838 :
                        value:bigint -> index:float -> array:t -> bigint)
          ->
          fun ?thisArg:(x8839 : any option) ->
            fun () ->
              t_of_js
                (let x8847 = this_to_js Obj.magic x8845 in
                 Ojs.call (Ojs.get_prop_ascii x8847 "map") "apply"
                   [|x8847;((let x8840 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8840 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x8842 : Ojs.t) ->
                                          fun (x8843 : Ojs.t) ->
                                            fun (x8844 : Ojs.t) ->
                                              bigint_to_js
                                                (x8838
                                                   ~value:(bigint_of_js x8842)
                                                   ~index:(Ojs.float_of_js
                                                             x8843)
                                                   ~array:(t_of_js x8844))))|]);
                             (match x8839 with
                              | Some x8841 ->
                                  ignore
                                    (Ojs.call x8840 "push"
                                       [|(any_to_js x8841)|])
                              | None -> ());
                             x8840))|])
    let (reduce :
      'tags this ->
        callbackfn:(previousValue:bigint ->
                      currentValue:bigint ->
                        currentIndex:float -> array:t -> bigint)
          -> bigint)
      =
      fun (x8853 : 'tags this) ->
        fun
          ~callbackfn:(x8848 :
                        previousValue:bigint ->
                          currentValue:bigint ->
                            currentIndex:float -> array:t -> bigint)
          ->
          bigint_of_js
            (Ojs.call (this_to_js Obj.magic x8853) "reduce"
               [|(Ojs.fun_to_js 4
                    (fun (x8849 : Ojs.t) ->
                       fun (x8850 : Ojs.t) ->
                         fun (x8851 : Ojs.t) ->
                           fun (x8852 : Ojs.t) ->
                             bigint_to_js
                               (x8848 ~previousValue:(bigint_of_js x8849)
                                  ~currentValue:(bigint_of_js x8850)
                                  ~currentIndex:(Ojs.float_of_js x8851)
                                  ~array:(t_of_js x8852))))|])
    let (reduce' :
      'tags this ->
        callbackfn:(previousValue:'U ->
                      currentValue:bigint ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x8861 : 'tags this) ->
        fun
          ~callbackfn:(x8855 :
                        previousValue:'U ->
                          currentValue:bigint ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x8860 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic x8861) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x8856 : Ojs.t) ->
                         fun (x8857 : Ojs.t) ->
                           fun (x8858 : Ojs.t) ->
                             fun (x8859 : Ojs.t) ->
                               Obj.magic
                                 (x8855 ~previousValue:(Obj.magic x8856)
                                    ~currentValue:(bigint_of_js x8857)
                                    ~currentIndex:(Ojs.float_of_js x8858)
                                    ~array:(t_of_js x8859))));(Obj.magic
                                                                 x8860)|])
    let (reduceRight :
      'tags this ->
        callbackfn:(previousValue:bigint ->
                      currentValue:bigint ->
                        currentIndex:float -> array:t -> bigint)
          -> bigint)
      =
      fun (x8868 : 'tags this) ->
        fun
          ~callbackfn:(x8863 :
                        previousValue:bigint ->
                          currentValue:bigint ->
                            currentIndex:float -> array:t -> bigint)
          ->
          bigint_of_js
            (Ojs.call (this_to_js Obj.magic x8868) "reduceRight"
               [|(Ojs.fun_to_js 4
                    (fun (x8864 : Ojs.t) ->
                       fun (x8865 : Ojs.t) ->
                         fun (x8866 : Ojs.t) ->
                           fun (x8867 : Ojs.t) ->
                             bigint_to_js
                               (x8863 ~previousValue:(bigint_of_js x8864)
                                  ~currentValue:(bigint_of_js x8865)
                                  ~currentIndex:(Ojs.float_of_js x8866)
                                  ~array:(t_of_js x8867))))|])
    let (reduceRight' :
      'tags this ->
        callbackfn:(previousValue:'U ->
                      currentValue:bigint ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x8876 : 'tags this) ->
        fun
          ~callbackfn:(x8870 :
                        previousValue:'U ->
                          currentValue:bigint ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x8875 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic x8876) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x8871 : Ojs.t) ->
                         fun (x8872 : Ojs.t) ->
                           fun (x8873 : Ojs.t) ->
                             fun (x8874 : Ojs.t) ->
                               Obj.magic
                                 (x8870 ~previousValue:(Obj.magic x8871)
                                    ~currentValue:(bigint_of_js x8872)
                                    ~currentIndex:(Ojs.float_of_js x8873)
                                    ~array:(t_of_js x8874))));(Obj.magic
                                                                 x8875)|])
    let (reverse : 'tags this -> 'tags this) =
      fun (x8878 : 'tags this) ->
        this_of_js Obj.magic
          (Ojs.call (this_to_js Obj.magic x8878) "reverse" [||])
    let (set_ :
      'tags this -> array:bigint ArrayLike.t -> ?offset:float -> unit -> unit)
      =
      fun (x8886 : 'tags this) ->
        fun ~array:(x8881 : bigint ArrayLike.t) ->
          fun ?offset:(x8882 : float option) ->
            fun () ->
              ignore
                (let x8888 = this_to_js Obj.magic x8886 in
                 Ojs.call (Ojs.get_prop_ascii x8888 "set") "apply"
                   [|x8888;((let x8883 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8883 "push"
                                  [|(ArrayLike.t_to_js bigint_to_js x8881)|]);
                             (match x8882 with
                              | Some x8884 ->
                                  ignore
                                    (Ojs.call x8883 "push"
                                       [|(Ojs.float_to_js x8884)|])
                              | None -> ());
                             x8883))|])
    let (slice : 'tags this -> ?start:float -> ?end_:float -> unit -> t) =
      fun (x8894 : 'tags this) ->
        fun ?start:(x8889 : float option) ->
          fun ?end_:(x8890 : float option) ->
            fun () ->
              t_of_js
                (let x8896 = this_to_js Obj.magic x8894 in
                 Ojs.call (Ojs.get_prop_ascii x8896 "slice") "apply"
                   [|x8896;((let x8891 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x8889 with
                              | Some x8893 ->
                                  ignore
                                    (Ojs.call x8891 "push"
                                       [|(Ojs.float_to_js x8893)|])
                              | None -> ());
                             (match x8890 with
                              | Some x8892 ->
                                  ignore
                                    (Ojs.call x8891 "push"
                                       [|(Ojs.float_to_js x8892)|])
                              | None -> ());
                             x8891))|])
    let (some :
      'tags this ->
        predicate:(value:bigint -> index:float -> array:t -> bool) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x8904 : 'tags this) ->
        fun
          ~predicate:(x8897 : value:bigint -> index:float -> array:t -> bool)
          ->
          fun ?thisArg:(x8898 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x8906 = this_to_js Obj.magic x8904 in
                 Ojs.call (Ojs.get_prop_ascii x8906 "some") "apply"
                   [|x8906;((let x8899 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8899 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x8901 : Ojs.t) ->
                                          fun (x8902 : Ojs.t) ->
                                            fun (x8903 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x8897
                                                   ~value:(bigint_of_js x8901)
                                                   ~index:(Ojs.float_of_js
                                                             x8902)
                                                   ~array:(t_of_js x8903))))|]);
                             (match x8898 with
                              | Some x8900 ->
                                  ignore
                                    (Ojs.call x8899 "push"
                                       [|(any_to_js x8900)|])
                              | None -> ());
                             x8899))|])
    let (sort :
      'tags this ->
        ?compareFn:(a:bigint -> b:bigint -> [ `U1 of float  | `U2 of bigint ])
          -> unit -> 'tags this)
      =
      fun (x8914 : 'tags this) ->
        fun
          ?compareFn:(x8907 :
                       (a:bigint ->
                          b:bigint -> [ `U1 of float  | `U2 of bigint ])
                         option)
          ->
          fun () ->
            this_of_js Obj.magic
              (let x8916 = this_to_js Obj.magic x8914 in
               Ojs.call (Ojs.get_prop_ascii x8916 "sort") "apply"
                 [|x8916;((let x8908 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x8907 with
                            | Some x8909 ->
                                ignore
                                  (Ojs.call x8908 "push"
                                     [|(Ojs.fun_to_js 2
                                          (fun (x8910 : Ojs.t) ->
                                             fun (x8911 : Ojs.t) ->
                                               match x8909
                                                       ~a:(bigint_of_js x8910)
                                                       ~b:(bigint_of_js x8911)
                                               with
                                               | `U1 x8912 ->
                                                   Ojs.float_to_js x8912
                                               | `U2 x8913 ->
                                                   bigint_to_js x8913))|])
                            | None -> ());
                           x8908))|])
    let (subarray : 'tags this -> ?begin_:float -> ?end_:float -> unit -> t)
      =
      fun (x8923 : 'tags this) ->
        fun ?begin_:(x8918 : float option) ->
          fun ?end_:(x8919 : float option) ->
            fun () ->
              t_of_js
                (let x8925 = this_to_js Obj.magic x8923 in
                 Ojs.call (Ojs.get_prop_ascii x8925 "subarray") "apply"
                   [|x8925;((let x8920 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x8918 with
                              | Some x8922 ->
                                  ignore
                                    (Ojs.call x8920 "push"
                                       [|(Ojs.float_to_js x8922)|])
                              | None -> ());
                             (match x8919 with
                              | Some x8921 ->
                                  ignore
                                    (Ojs.call x8920 "push"
                                       [|(Ojs.float_to_js x8921)|])
                              | None -> ());
                             x8920))|])
    let (toLocaleString : 'tags this -> string) =
      fun (x8926 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x8926) "toLocaleString" [||])
    let (toString : 'tags this -> string) =
      fun (x8928 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x8928) "toString" [||])
    let (valueOf : 'tags this -> t) =
      fun (x8930 : 'tags this) ->
        t_of_js (Ojs.call (this_to_js Obj.magic x8930) "valueOf" [||])
    let (values : 'tags this -> bigint IterableIterator.t) =
      fun (x8932 : 'tags this) ->
        IterableIterator.t_of_js bigint_of_js
          (Ojs.call (this_to_js Obj.magic x8932) "values" [||])
    let (get : 'tags this -> float -> bigint) =
      fun (x8935 : 'tags this) ->
        fun (x8937 : float) ->
          bigint_of_js
            (Ojs.get_prop (this_to_js Obj.magic x8935)
               (Ojs.float_to_js x8937))
    let (set : 'tags this -> float -> bigint -> unit) =
      fun (x8938 : 'tags this) ->
        fun (x8940 : float) ->
          fun (x8941 : bigint) ->
            Ojs.set_prop (this_to_js Obj.magic x8938) (Ojs.float_to_js x8940)
              (bigint_to_js x8941)
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "BigUint64Array") "prototype")
    let (create : ?length:float -> unit -> t) =
      fun ?length:(x8942 : float option) ->
        fun () ->
          t_of_js
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "BigUint64Array")
               (let x8943 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x8942 with
                 | Some x8944 ->
                     ignore
                       (Ojs.call x8943 "push" [|(Ojs.float_to_js x8944)|])
                 | None -> ());
                x8943))
    let (create' : bigint Iterable.t -> t) =
      fun (x8945 : bigint Iterable.t) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "BigUint64Array")
             [|(Iterable.t_to_js bigint_to_js x8945)|])
    let (create'' :
      buffer:ArrayBufferLike.t ->
        ?byteOffset:float -> ?length:float -> unit -> t)
      =
      fun ~buffer:(x8947 : ArrayBufferLike.t) ->
        fun ?byteOffset:(x8948 : float option) ->
          fun ?length:(x8949 : float option) ->
            fun () ->
              t_of_js
                (Ojs.new_obj_arr
                   (Ojs.get_prop_ascii Ojs.global "BigUint64Array")
                   (let x8950 =
                      Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                        [||] in
                    ignore
                      (Ojs.call x8950 "push"
                         [|(ArrayBufferLike.t_to_js x8947)|]);
                    (match x8948 with
                     | Some x8952 ->
                         ignore
                           (Ojs.call x8950 "push" [|(Ojs.float_to_js x8952)|])
                     | None -> ());
                    (match x8949 with
                     | Some x8951 ->
                         ignore
                           (Ojs.call x8950 "push" [|(Ojs.float_to_js x8951)|])
                     | None -> ());
                    x8950))
    let (bytes_per_element : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "BigUint64Array")
             "BYTES_PER_ELEMENT")
    let (of_ : bigint list -> t) =
      fun (x8953 : bigint list) ->
        t_of_js
          (let x8956 = Ojs.get_prop_ascii Ojs.global "BigUint64Array" in
           Ojs.call (Ojs.get_prop_ascii x8956 "of") "apply"
             [|x8956;((let x8954 =
                         Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                           [||] in
                       List.iter
                         (fun (x8955 : bigint) ->
                            ignore
                              (Ojs.call x8954 "push" [|(bigint_to_js x8955)|]))
                         x8953;
                       x8954))|])
    let (from : bigint ArrayLike.t -> t) =
      fun (x8957 : bigint ArrayLike.t) ->
        t_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "BigUint64Array") "from"
             [|(ArrayLike.t_to_js bigint_to_js x8957)|])
    let (from' :
      arrayLike:'U ArrayLike.t ->
        mapfn:(v:'U -> k:float -> bigint) -> ?thisArg:any -> unit -> t)
      =
      fun ~arrayLike:(x8959 : 'U ArrayLike.t) ->
        fun ~mapfn:(x8960 : v:'U -> k:float -> bigint) ->
          fun ?thisArg:(x8961 : any option) ->
            fun () ->
              t_of_js
                (let x8967 = Ojs.get_prop_ascii Ojs.global "BigUint64Array" in
                 Ojs.call (Ojs.get_prop_ascii x8967 "from") "apply"
                   [|x8967;((let x8962 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8962 "push"
                                  [|(ArrayLike.t_to_js Obj.magic x8959)|]);
                             ignore
                               (Ojs.call x8962 "push"
                                  [|(Ojs.fun_to_js 2
                                       (fun (x8964 : Ojs.t) ->
                                          fun (x8965 : Ojs.t) ->
                                            bigint_to_js
                                              (x8960 ~v:(Obj.magic x8964)
                                                 ~k:(Ojs.float_of_js x8965))))|]);
                             (match x8961 with
                              | Some x8963 ->
                                  ignore
                                    (Ojs.call x8962 "push"
                                       [|(any_to_js x8963)|])
                              | None -> ());
                             x8962))|])
    let cast_from = Obj.magic
  end
module BigInt64Array =
  struct
    type t =
      [ `BigInt64Array  | bigint ArrayLike.tags_1
      | bigint IterableIterator.tags_1] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x8969 : Ojs.t) -> t_of_js x8969
    and t_0_to_js : t_0 -> Ojs.t = fun (x8968 : t) -> t_to_js x8968
    type tags =
      [ `BigInt64Array  | bigint ArrayLike.tags_1
      | bigint IterableIterator.tags_1]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `BigInt64Array ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x8972 : Ojs.t) -> intf_of_js __tags_of_js x8972
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x8970 : __tags intf) -> intf_to_js __tags_to_js x8970
    let (at : 'tags this -> index:float -> bigint option) =
      fun (x8975 : 'tags this) ->
        fun ~index:(x8974 : float) ->
          Ojs.option_of_js bigint_of_js
            (Ojs.call (this_to_js Obj.magic x8975) "at"
               [|(Ojs.float_to_js x8974)|])
    let (get_BYTES_PER_ELEMENT : 'tags this -> float) =
      fun (x8978 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x8978)
             "BYTES_PER_ELEMENT")
    let (get_buffer : 'tags this -> ArrayBufferLike.t) =
      fun (x8980 : 'tags this) ->
        ArrayBufferLike.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x8980) "buffer")
    let (get_byteLength : 'tags this -> float) =
      fun (x8982 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x8982) "byteLength")
    let (get_byteOffset : 'tags this -> float) =
      fun (x8984 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x8984) "byteOffset")
    let (copyWithin :
      'tags this ->
        target:float -> start:float -> ?end_:float -> unit -> 'tags this)
      =
      fun (x8991 : 'tags this) ->
        fun ~target:(x8986 : float) ->
          fun ~start:(x8987 : float) ->
            fun ?end_:(x8988 : float option) ->
              fun () ->
                this_of_js Obj.magic
                  (let x8993 = this_to_js Obj.magic x8991 in
                   Ojs.call (Ojs.get_prop_ascii x8993 "copyWithin") "apply"
                     [|x8993;((let x8989 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x8989 "push"
                                    [|(Ojs.float_to_js x8986)|]);
                               ignore
                                 (Ojs.call x8989 "push"
                                    [|(Ojs.float_to_js x8987)|]);
                               (match x8988 with
                                | Some x8990 ->
                                    ignore
                                      (Ojs.call x8989 "push"
                                         [|(Ojs.float_to_js x8990)|])
                                | None -> ());
                               x8989))|])
    let (entries : 'tags this -> (float * bigint) IterableIterator.t) =
      fun (x8995 : 'tags this) ->
        IterableIterator.t_of_js
          (fun (x8997 : Ojs.t) ->
             let x8998 = x8997 in
             ((Ojs.float_of_js (Ojs.array_get x8998 0)),
               (bigint_of_js (Ojs.array_get x8998 1))))
          (Ojs.call (this_to_js Obj.magic x8995) "entries" [||])
    let (every :
      'tags this ->
        predicate:(value:bigint -> index:float -> array:t -> bool) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x9006 : 'tags this) ->
        fun
          ~predicate:(x8999 : value:bigint -> index:float -> array:t -> bool)
          ->
          fun ?thisArg:(x9000 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x9008 = this_to_js Obj.magic x9006 in
                 Ojs.call (Ojs.get_prop_ascii x9008 "every") "apply"
                   [|x9008;((let x9001 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x9001 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x9003 : Ojs.t) ->
                                          fun (x9004 : Ojs.t) ->
                                            fun (x9005 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x8999
                                                   ~value:(bigint_of_js x9003)
                                                   ~index:(Ojs.float_of_js
                                                             x9004)
                                                   ~array:(t_of_js x9005))))|]);
                             (match x9000 with
                              | Some x9002 ->
                                  ignore
                                    (Ojs.call x9001 "push"
                                       [|(any_to_js x9002)|])
                              | None -> ());
                             x9001))|])
    let (fill :
      'tags this ->
        value:bigint -> ?start:float -> ?end_:float -> unit -> 'tags this)
      =
      fun (x9015 : 'tags this) ->
        fun ~value:(x9009 : bigint) ->
          fun ?start:(x9010 : float option) ->
            fun ?end_:(x9011 : float option) ->
              fun () ->
                this_of_js Obj.magic
                  (let x9017 = this_to_js Obj.magic x9015 in
                   Ojs.call (Ojs.get_prop_ascii x9017 "fill") "apply"
                     [|x9017;((let x9012 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x9012 "push"
                                    [|(bigint_to_js x9009)|]);
                               (match x9010 with
                                | Some x9014 ->
                                    ignore
                                      (Ojs.call x9012 "push"
                                         [|(Ojs.float_to_js x9014)|])
                                | None -> ());
                               (match x9011 with
                                | Some x9013 ->
                                    ignore
                                      (Ojs.call x9012 "push"
                                         [|(Ojs.float_to_js x9013)|])
                                | None -> ());
                               x9012))|])
    let (filter :
      'tags this ->
        predicate:(value:bigint -> index:float -> array:t -> any) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x9026 : 'tags this) ->
        fun
          ~predicate:(x9019 : value:bigint -> index:float -> array:t -> any)
          ->
          fun ?thisArg:(x9020 : any option) ->
            fun () ->
              t_of_js
                (let x9028 = this_to_js Obj.magic x9026 in
                 Ojs.call (Ojs.get_prop_ascii x9028 "filter") "apply"
                   [|x9028;((let x9021 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x9021 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x9023 : Ojs.t) ->
                                          fun (x9024 : Ojs.t) ->
                                            fun (x9025 : Ojs.t) ->
                                              any_to_js
                                                (x9019
                                                   ~value:(bigint_of_js x9023)
                                                   ~index:(Ojs.float_of_js
                                                             x9024)
                                                   ~array:(t_of_js x9025))))|]);
                             (match x9020 with
                              | Some x9022 ->
                                  ignore
                                    (Ojs.call x9021 "push"
                                       [|(any_to_js x9022)|])
                              | None -> ());
                             x9021))|])
    let (find :
      'tags this ->
        predicate:(value:bigint -> index:float -> array:t -> bool) ->
          ?thisArg:any -> unit -> bigint option)
      =
      fun (x9036 : 'tags this) ->
        fun
          ~predicate:(x9029 : value:bigint -> index:float -> array:t -> bool)
          ->
          fun ?thisArg:(x9030 : any option) ->
            fun () ->
              Ojs.option_of_js bigint_of_js
                (let x9038 = this_to_js Obj.magic x9036 in
                 Ojs.call (Ojs.get_prop_ascii x9038 "find") "apply"
                   [|x9038;((let x9031 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x9031 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x9033 : Ojs.t) ->
                                          fun (x9034 : Ojs.t) ->
                                            fun (x9035 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x9029
                                                   ~value:(bigint_of_js x9033)
                                                   ~index:(Ojs.float_of_js
                                                             x9034)
                                                   ~array:(t_of_js x9035))))|]);
                             (match x9030 with
                              | Some x9032 ->
                                  ignore
                                    (Ojs.call x9031 "push"
                                       [|(any_to_js x9032)|])
                              | None -> ());
                             x9031))|])
    let (findIndex :
      'tags this ->
        predicate:(value:bigint -> index:float -> array:t -> bool) ->
          ?thisArg:any -> unit -> float)
      =
      fun (x9047 : 'tags this) ->
        fun
          ~predicate:(x9040 : value:bigint -> index:float -> array:t -> bool)
          ->
          fun ?thisArg:(x9041 : any option) ->
            fun () ->
              Ojs.float_of_js
                (let x9049 = this_to_js Obj.magic x9047 in
                 Ojs.call (Ojs.get_prop_ascii x9049 "findIndex") "apply"
                   [|x9049;((let x9042 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x9042 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x9044 : Ojs.t) ->
                                          fun (x9045 : Ojs.t) ->
                                            fun (x9046 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x9040
                                                   ~value:(bigint_of_js x9044)
                                                   ~index:(Ojs.float_of_js
                                                             x9045)
                                                   ~array:(t_of_js x9046))))|]);
                             (match x9041 with
                              | Some x9043 ->
                                  ignore
                                    (Ojs.call x9042 "push"
                                       [|(any_to_js x9043)|])
                              | None -> ());
                             x9042))|])
    let (forEach :
      'tags this ->
        callbackfn:(value:bigint -> index:float -> array:t -> unit) ->
          ?thisArg:any -> unit -> unit)
      =
      fun (x9057 : 'tags this) ->
        fun
          ~callbackfn:(x9050 :
                        value:bigint -> index:float -> array:t -> unit)
          ->
          fun ?thisArg:(x9051 : any option) ->
            fun () ->
              ignore
                (let x9059 = this_to_js Obj.magic x9057 in
                 Ojs.call (Ojs.get_prop_ascii x9059 "forEach") "apply"
                   [|x9059;((let x9052 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x9052 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x9054 : Ojs.t) ->
                                          fun (x9055 : Ojs.t) ->
                                            fun (x9056 : Ojs.t) ->
                                              x9050
                                                ~value:(bigint_of_js x9054)
                                                ~index:(Ojs.float_of_js x9055)
                                                ~array:(t_of_js x9056)))|]);
                             (match x9051 with
                              | Some x9053 ->
                                  ignore
                                    (Ojs.call x9052 "push"
                                       [|(any_to_js x9053)|])
                              | None -> ());
                             x9052))|])
    let (includes :
      'tags this -> searchElement:bigint -> ?fromIndex:float -> unit -> bool)
      =
      fun (x9064 : 'tags this) ->
        fun ~searchElement:(x9060 : bigint) ->
          fun ?fromIndex:(x9061 : float option) ->
            fun () ->
              Ojs.bool_of_js
                (let x9066 = this_to_js Obj.magic x9064 in
                 Ojs.call (Ojs.get_prop_ascii x9066 "includes") "apply"
                   [|x9066;((let x9062 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x9062 "push"
                                  [|(bigint_to_js x9060)|]);
                             (match x9061 with
                              | Some x9063 ->
                                  ignore
                                    (Ojs.call x9062 "push"
                                       [|(Ojs.float_to_js x9063)|])
                              | None -> ());
                             x9062))|])
    let (indexOf :
      'tags this -> searchElement:bigint -> ?fromIndex:float -> unit -> float)
      =
      fun (x9071 : 'tags this) ->
        fun ~searchElement:(x9067 : bigint) ->
          fun ?fromIndex:(x9068 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x9073 = this_to_js Obj.magic x9071 in
                 Ojs.call (Ojs.get_prop_ascii x9073 "indexOf") "apply"
                   [|x9073;((let x9069 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x9069 "push"
                                  [|(bigint_to_js x9067)|]);
                             (match x9068 with
                              | Some x9070 ->
                                  ignore
                                    (Ojs.call x9069 "push"
                                       [|(Ojs.float_to_js x9070)|])
                              | None -> ());
                             x9069))|])
    let (join : 'tags this -> ?separator:string -> unit -> string) =
      fun (x9077 : 'tags this) ->
        fun ?separator:(x9074 : string option) ->
          fun () ->
            Ojs.string_of_js
              (let x9079 = this_to_js Obj.magic x9077 in
               Ojs.call (Ojs.get_prop_ascii x9079 "join") "apply"
                 [|x9079;((let x9075 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x9074 with
                            | Some x9076 ->
                                ignore
                                  (Ojs.call x9075 "push"
                                     [|(Ojs.string_to_js x9076)|])
                            | None -> ());
                           x9075))|])
    let (keys : 'tags this -> float IterableIterator.t) =
      fun (x9080 : 'tags this) ->
        IterableIterator.t_of_js Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x9080) "keys" [||])
    let (lastIndexOf :
      'tags this -> searchElement:bigint -> ?fromIndex:float -> unit -> float)
      =
      fun (x9087 : 'tags this) ->
        fun ~searchElement:(x9083 : bigint) ->
          fun ?fromIndex:(x9084 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x9089 = this_to_js Obj.magic x9087 in
                 Ojs.call (Ojs.get_prop_ascii x9089 "lastIndexOf") "apply"
                   [|x9089;((let x9085 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x9085 "push"
                                  [|(bigint_to_js x9083)|]);
                             (match x9084 with
                              | Some x9086 ->
                                  ignore
                                    (Ojs.call x9085 "push"
                                       [|(Ojs.float_to_js x9086)|])
                              | None -> ());
                             x9085))|])
    let (get_length : 'tags this -> float) =
      fun (x9090 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x9090) "length")
    let (map :
      'tags this ->
        callbackfn:(value:bigint -> index:float -> array:t -> bigint) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x9099 : 'tags this) ->
        fun
          ~callbackfn:(x9092 :
                        value:bigint -> index:float -> array:t -> bigint)
          ->
          fun ?thisArg:(x9093 : any option) ->
            fun () ->
              t_of_js
                (let x9101 = this_to_js Obj.magic x9099 in
                 Ojs.call (Ojs.get_prop_ascii x9101 "map") "apply"
                   [|x9101;((let x9094 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x9094 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x9096 : Ojs.t) ->
                                          fun (x9097 : Ojs.t) ->
                                            fun (x9098 : Ojs.t) ->
                                              bigint_to_js
                                                (x9092
                                                   ~value:(bigint_of_js x9096)
                                                   ~index:(Ojs.float_of_js
                                                             x9097)
                                                   ~array:(t_of_js x9098))))|]);
                             (match x9093 with
                              | Some x9095 ->
                                  ignore
                                    (Ojs.call x9094 "push"
                                       [|(any_to_js x9095)|])
                              | None -> ());
                             x9094))|])
    let (reduce :
      'tags this ->
        callbackfn:(previousValue:bigint ->
                      currentValue:bigint ->
                        currentIndex:float -> array:t -> bigint)
          -> bigint)
      =
      fun (x9107 : 'tags this) ->
        fun
          ~callbackfn:(x9102 :
                        previousValue:bigint ->
                          currentValue:bigint ->
                            currentIndex:float -> array:t -> bigint)
          ->
          bigint_of_js
            (Ojs.call (this_to_js Obj.magic x9107) "reduce"
               [|(Ojs.fun_to_js 4
                    (fun (x9103 : Ojs.t) ->
                       fun (x9104 : Ojs.t) ->
                         fun (x9105 : Ojs.t) ->
                           fun (x9106 : Ojs.t) ->
                             bigint_to_js
                               (x9102 ~previousValue:(bigint_of_js x9103)
                                  ~currentValue:(bigint_of_js x9104)
                                  ~currentIndex:(Ojs.float_of_js x9105)
                                  ~array:(t_of_js x9106))))|])
    let (reduce' :
      'tags this ->
        callbackfn:(previousValue:'U ->
                      currentValue:bigint ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x9115 : 'tags this) ->
        fun
          ~callbackfn:(x9109 :
                        previousValue:'U ->
                          currentValue:bigint ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x9114 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic x9115) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x9110 : Ojs.t) ->
                         fun (x9111 : Ojs.t) ->
                           fun (x9112 : Ojs.t) ->
                             fun (x9113 : Ojs.t) ->
                               Obj.magic
                                 (x9109 ~previousValue:(Obj.magic x9110)
                                    ~currentValue:(bigint_of_js x9111)
                                    ~currentIndex:(Ojs.float_of_js x9112)
                                    ~array:(t_of_js x9113))));(Obj.magic
                                                                 x9114)|])
    let (reduceRight :
      'tags this ->
        callbackfn:(previousValue:bigint ->
                      currentValue:bigint ->
                        currentIndex:float -> array:t -> bigint)
          -> bigint)
      =
      fun (x9122 : 'tags this) ->
        fun
          ~callbackfn:(x9117 :
                        previousValue:bigint ->
                          currentValue:bigint ->
                            currentIndex:float -> array:t -> bigint)
          ->
          bigint_of_js
            (Ojs.call (this_to_js Obj.magic x9122) "reduceRight"
               [|(Ojs.fun_to_js 4
                    (fun (x9118 : Ojs.t) ->
                       fun (x9119 : Ojs.t) ->
                         fun (x9120 : Ojs.t) ->
                           fun (x9121 : Ojs.t) ->
                             bigint_to_js
                               (x9117 ~previousValue:(bigint_of_js x9118)
                                  ~currentValue:(bigint_of_js x9119)
                                  ~currentIndex:(Ojs.float_of_js x9120)
                                  ~array:(t_of_js x9121))))|])
    let (reduceRight' :
      'tags this ->
        callbackfn:(previousValue:'U ->
                      currentValue:bigint ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x9130 : 'tags this) ->
        fun
          ~callbackfn:(x9124 :
                        previousValue:'U ->
                          currentValue:bigint ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x9129 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic x9130) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x9125 : Ojs.t) ->
                         fun (x9126 : Ojs.t) ->
                           fun (x9127 : Ojs.t) ->
                             fun (x9128 : Ojs.t) ->
                               Obj.magic
                                 (x9124 ~previousValue:(Obj.magic x9125)
                                    ~currentValue:(bigint_of_js x9126)
                                    ~currentIndex:(Ojs.float_of_js x9127)
                                    ~array:(t_of_js x9128))));(Obj.magic
                                                                 x9129)|])
    let (reverse : 'tags this -> 'tags this) =
      fun (x9132 : 'tags this) ->
        this_of_js Obj.magic
          (Ojs.call (this_to_js Obj.magic x9132) "reverse" [||])
    let (set_ :
      'tags this -> array:bigint ArrayLike.t -> ?offset:float -> unit -> unit)
      =
      fun (x9140 : 'tags this) ->
        fun ~array:(x9135 : bigint ArrayLike.t) ->
          fun ?offset:(x9136 : float option) ->
            fun () ->
              ignore
                (let x9142 = this_to_js Obj.magic x9140 in
                 Ojs.call (Ojs.get_prop_ascii x9142 "set") "apply"
                   [|x9142;((let x9137 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x9137 "push"
                                  [|(ArrayLike.t_to_js bigint_to_js x9135)|]);
                             (match x9136 with
                              | Some x9138 ->
                                  ignore
                                    (Ojs.call x9137 "push"
                                       [|(Ojs.float_to_js x9138)|])
                              | None -> ());
                             x9137))|])
    let (slice : 'tags this -> ?start:float -> ?end_:float -> unit -> t) =
      fun (x9148 : 'tags this) ->
        fun ?start:(x9143 : float option) ->
          fun ?end_:(x9144 : float option) ->
            fun () ->
              t_of_js
                (let x9150 = this_to_js Obj.magic x9148 in
                 Ojs.call (Ojs.get_prop_ascii x9150 "slice") "apply"
                   [|x9150;((let x9145 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x9143 with
                              | Some x9147 ->
                                  ignore
                                    (Ojs.call x9145 "push"
                                       [|(Ojs.float_to_js x9147)|])
                              | None -> ());
                             (match x9144 with
                              | Some x9146 ->
                                  ignore
                                    (Ojs.call x9145 "push"
                                       [|(Ojs.float_to_js x9146)|])
                              | None -> ());
                             x9145))|])
    let (some :
      'tags this ->
        predicate:(value:bigint -> index:float -> array:t -> bool) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x9158 : 'tags this) ->
        fun
          ~predicate:(x9151 : value:bigint -> index:float -> array:t -> bool)
          ->
          fun ?thisArg:(x9152 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x9160 = this_to_js Obj.magic x9158 in
                 Ojs.call (Ojs.get_prop_ascii x9160 "some") "apply"
                   [|x9160;((let x9153 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x9153 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x9155 : Ojs.t) ->
                                          fun (x9156 : Ojs.t) ->
                                            fun (x9157 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x9151
                                                   ~value:(bigint_of_js x9155)
                                                   ~index:(Ojs.float_of_js
                                                             x9156)
                                                   ~array:(t_of_js x9157))))|]);
                             (match x9152 with
                              | Some x9154 ->
                                  ignore
                                    (Ojs.call x9153 "push"
                                       [|(any_to_js x9154)|])
                              | None -> ());
                             x9153))|])
    let (sort :
      'tags this ->
        ?compareFn:(a:bigint -> b:bigint -> [ `U1 of float  | `U2 of bigint ])
          -> unit -> 'tags this)
      =
      fun (x9168 : 'tags this) ->
        fun
          ?compareFn:(x9161 :
                       (a:bigint ->
                          b:bigint -> [ `U1 of float  | `U2 of bigint ])
                         option)
          ->
          fun () ->
            this_of_js Obj.magic
              (let x9170 = this_to_js Obj.magic x9168 in
               Ojs.call (Ojs.get_prop_ascii x9170 "sort") "apply"
                 [|x9170;((let x9162 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x9161 with
                            | Some x9163 ->
                                ignore
                                  (Ojs.call x9162 "push"
                                     [|(Ojs.fun_to_js 2
                                          (fun (x9164 : Ojs.t) ->
                                             fun (x9165 : Ojs.t) ->
                                               match x9163
                                                       ~a:(bigint_of_js x9164)
                                                       ~b:(bigint_of_js x9165)
                                               with
                                               | `U1 x9166 ->
                                                   Ojs.float_to_js x9166
                                               | `U2 x9167 ->
                                                   bigint_to_js x9167))|])
                            | None -> ());
                           x9162))|])
    let (subarray : 'tags this -> ?begin_:float -> ?end_:float -> unit -> t)
      =
      fun (x9177 : 'tags this) ->
        fun ?begin_:(x9172 : float option) ->
          fun ?end_:(x9173 : float option) ->
            fun () ->
              t_of_js
                (let x9179 = this_to_js Obj.magic x9177 in
                 Ojs.call (Ojs.get_prop_ascii x9179 "subarray") "apply"
                   [|x9179;((let x9174 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x9172 with
                              | Some x9176 ->
                                  ignore
                                    (Ojs.call x9174 "push"
                                       [|(Ojs.float_to_js x9176)|])
                              | None -> ());
                             (match x9173 with
                              | Some x9175 ->
                                  ignore
                                    (Ojs.call x9174 "push"
                                       [|(Ojs.float_to_js x9175)|])
                              | None -> ());
                             x9174))|])
    let (toLocaleString : 'tags this -> string) =
      fun (x9180 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x9180) "toLocaleString" [||])
    let (toString : 'tags this -> string) =
      fun (x9182 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x9182) "toString" [||])
    let (valueOf : 'tags this -> t) =
      fun (x9184 : 'tags this) ->
        t_of_js (Ojs.call (this_to_js Obj.magic x9184) "valueOf" [||])
    let (values : 'tags this -> bigint IterableIterator.t) =
      fun (x9186 : 'tags this) ->
        IterableIterator.t_of_js bigint_of_js
          (Ojs.call (this_to_js Obj.magic x9186) "values" [||])
    let (get : 'tags this -> float -> bigint) =
      fun (x9189 : 'tags this) ->
        fun (x9191 : float) ->
          bigint_of_js
            (Ojs.get_prop (this_to_js Obj.magic x9189)
               (Ojs.float_to_js x9191))
    let (set : 'tags this -> float -> bigint -> unit) =
      fun (x9192 : 'tags this) ->
        fun (x9194 : float) ->
          fun (x9195 : bigint) ->
            Ojs.set_prop (this_to_js Obj.magic x9192) (Ojs.float_to_js x9194)
              (bigint_to_js x9195)
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "BigInt64Array")
             "prototype")
    let (create : ?length:float -> unit -> t) =
      fun ?length:(x9196 : float option) ->
        fun () ->
          t_of_js
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "BigInt64Array")
               (let x9197 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x9196 with
                 | Some x9198 ->
                     ignore
                       (Ojs.call x9197 "push" [|(Ojs.float_to_js x9198)|])
                 | None -> ());
                x9197))
    let (create' : bigint Iterable.t -> t) =
      fun (x9199 : bigint Iterable.t) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "BigInt64Array")
             [|(Iterable.t_to_js bigint_to_js x9199)|])
    let (create'' :
      buffer:ArrayBufferLike.t ->
        ?byteOffset:float -> ?length:float -> unit -> t)
      =
      fun ~buffer:(x9201 : ArrayBufferLike.t) ->
        fun ?byteOffset:(x9202 : float option) ->
          fun ?length:(x9203 : float option) ->
            fun () ->
              t_of_js
                (Ojs.new_obj_arr
                   (Ojs.get_prop_ascii Ojs.global "BigInt64Array")
                   (let x9204 =
                      Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                        [||] in
                    ignore
                      (Ojs.call x9204 "push"
                         [|(ArrayBufferLike.t_to_js x9201)|]);
                    (match x9202 with
                     | Some x9206 ->
                         ignore
                           (Ojs.call x9204 "push" [|(Ojs.float_to_js x9206)|])
                     | None -> ());
                    (match x9203 with
                     | Some x9205 ->
                         ignore
                           (Ojs.call x9204 "push" [|(Ojs.float_to_js x9205)|])
                     | None -> ());
                    x9204))
    let (bytes_per_element : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "BigInt64Array")
             "BYTES_PER_ELEMENT")
    let (of_ : bigint list -> t) =
      fun (x9207 : bigint list) ->
        t_of_js
          (let x9210 = Ojs.get_prop_ascii Ojs.global "BigInt64Array" in
           Ojs.call (Ojs.get_prop_ascii x9210 "of") "apply"
             [|x9210;((let x9208 =
                         Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                           [||] in
                       List.iter
                         (fun (x9209 : bigint) ->
                            ignore
                              (Ojs.call x9208 "push" [|(bigint_to_js x9209)|]))
                         x9207;
                       x9208))|])
    let (from : bigint ArrayLike.t -> t) =
      fun (x9211 : bigint ArrayLike.t) ->
        t_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "BigInt64Array") "from"
             [|(ArrayLike.t_to_js bigint_to_js x9211)|])
    let (from' :
      arrayLike:'U ArrayLike.t ->
        mapfn:(v:'U -> k:float -> bigint) -> ?thisArg:any -> unit -> t)
      =
      fun ~arrayLike:(x9213 : 'U ArrayLike.t) ->
        fun ~mapfn:(x9214 : v:'U -> k:float -> bigint) ->
          fun ?thisArg:(x9215 : any option) ->
            fun () ->
              t_of_js
                (let x9221 = Ojs.get_prop_ascii Ojs.global "BigInt64Array" in
                 Ojs.call (Ojs.get_prop_ascii x9221 "from") "apply"
                   [|x9221;((let x9216 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x9216 "push"
                                  [|(ArrayLike.t_to_js Obj.magic x9213)|]);
                             ignore
                               (Ojs.call x9216 "push"
                                  [|(Ojs.fun_to_js 2
                                       (fun (x9218 : Ojs.t) ->
                                          fun (x9219 : Ojs.t) ->
                                            bigint_to_js
                                              (x9214 ~v:(Obj.magic x9218)
                                                 ~k:(Ojs.float_of_js x9219))))|]);
                             (match x9215 with
                              | Some x9217 ->
                                  ignore
                                    (Ojs.call x9216 "push"
                                       [|(any_to_js x9217)|])
                              | None -> ());
                             x9216))|])
    let cast_from = Obj.magic
  end
module Atomics =
  struct
    let (add :
      typedArray:[ `U1 of BigInt64Array.t  | `U2 of BigUint64Array.t ] ->
        index:float -> value:bigint -> bigint)
      =
      fun
        ~typedArray:(x9222 :
                      [ `U1 of BigInt64Array.t  | `U2 of BigUint64Array.t ])
        ->
        fun ~index:(x9225 : float) ->
          fun ~value:(x9226 : bigint) ->
            bigint_of_js
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "Atomics") "add"
                 [|((match x9222 with
                     | `U1 x9223 -> BigInt64Array.t_to_js x9223
                     | `U2 x9224 -> BigUint64Array.t_to_js x9224));(Ojs.float_to_js
                                                                    x9225);(
                   bigint_to_js x9226)|])
    let (and_ :
      typedArray:[ `U1 of BigInt64Array.t  | `U2 of BigUint64Array.t ] ->
        index:float -> value:bigint -> bigint)
      =
      fun
        ~typedArray:(x9227 :
                      [ `U1 of BigInt64Array.t  | `U2 of BigUint64Array.t ])
        ->
        fun ~index:(x9230 : float) ->
          fun ~value:(x9231 : bigint) ->
            bigint_of_js
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "Atomics") "and"
                 [|((match x9227 with
                     | `U1 x9228 -> BigInt64Array.t_to_js x9228
                     | `U2 x9229 -> BigUint64Array.t_to_js x9229));(Ojs.float_to_js
                                                                    x9230);(
                   bigint_to_js x9231)|])
    let (compareExchange :
      typedArray:[ `U1 of BigInt64Array.t  | `U2 of BigUint64Array.t ] ->
        index:float ->
          expectedValue:bigint -> replacementValue:bigint -> bigint)
      =
      fun
        ~typedArray:(x9232 :
                      [ `U1 of BigInt64Array.t  | `U2 of BigUint64Array.t ])
        ->
        fun ~index:(x9235 : float) ->
          fun ~expectedValue:(x9236 : bigint) ->
            fun ~replacementValue:(x9237 : bigint) ->
              bigint_of_js
                (Ojs.call (Ojs.get_prop_ascii Ojs.global "Atomics")
                   "compareExchange"
                   [|((match x9232 with
                       | `U1 x9233 -> BigInt64Array.t_to_js x9233
                       | `U2 x9234 -> BigUint64Array.t_to_js x9234));(
                     Ojs.float_to_js x9235);(bigint_to_js x9236);(bigint_to_js
                                                                    x9237)|])
    let (exchange :
      typedArray:[ `U1 of BigInt64Array.t  | `U2 of BigUint64Array.t ] ->
        index:float -> value:bigint -> bigint)
      =
      fun
        ~typedArray:(x9238 :
                      [ `U1 of BigInt64Array.t  | `U2 of BigUint64Array.t ])
        ->
        fun ~index:(x9241 : float) ->
          fun ~value:(x9242 : bigint) ->
            bigint_of_js
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "Atomics") "exchange"
                 [|((match x9238 with
                     | `U1 x9239 -> BigInt64Array.t_to_js x9239
                     | `U2 x9240 -> BigUint64Array.t_to_js x9240));(Ojs.float_to_js
                                                                    x9241);(
                   bigint_to_js x9242)|])
    let (load :
      typedArray:[ `U1 of BigInt64Array.t  | `U2 of BigUint64Array.t ] ->
        index:float -> bigint)
      =
      fun
        ~typedArray:(x9243 :
                      [ `U1 of BigInt64Array.t  | `U2 of BigUint64Array.t ])
        ->
        fun ~index:(x9246 : float) ->
          bigint_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "Atomics") "load"
               [|((match x9243 with
                   | `U1 x9244 -> BigInt64Array.t_to_js x9244
                   | `U2 x9245 -> BigUint64Array.t_to_js x9245));(Ojs.float_to_js
                                                                    x9246)|])
    let (or_ :
      typedArray:[ `U1 of BigInt64Array.t  | `U2 of BigUint64Array.t ] ->
        index:float -> value:bigint -> bigint)
      =
      fun
        ~typedArray:(x9247 :
                      [ `U1 of BigInt64Array.t  | `U2 of BigUint64Array.t ])
        ->
        fun ~index:(x9250 : float) ->
          fun ~value:(x9251 : bigint) ->
            bigint_of_js
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "Atomics") "or"
                 [|((match x9247 with
                     | `U1 x9248 -> BigInt64Array.t_to_js x9248
                     | `U2 x9249 -> BigUint64Array.t_to_js x9249));(Ojs.float_to_js
                                                                    x9250);(
                   bigint_to_js x9251)|])
    let (store :
      typedArray:[ `U1 of BigInt64Array.t  | `U2 of BigUint64Array.t ] ->
        index:float -> value:bigint -> bigint)
      =
      fun
        ~typedArray:(x9252 :
                      [ `U1 of BigInt64Array.t  | `U2 of BigUint64Array.t ])
        ->
        fun ~index:(x9255 : float) ->
          fun ~value:(x9256 : bigint) ->
            bigint_of_js
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "Atomics") "store"
                 [|((match x9252 with
                     | `U1 x9253 -> BigInt64Array.t_to_js x9253
                     | `U2 x9254 -> BigUint64Array.t_to_js x9254));(Ojs.float_to_js
                                                                    x9255);(
                   bigint_to_js x9256)|])
    let (sub :
      typedArray:[ `U1 of BigInt64Array.t  | `U2 of BigUint64Array.t ] ->
        index:float -> value:bigint -> bigint)
      =
      fun
        ~typedArray:(x9257 :
                      [ `U1 of BigInt64Array.t  | `U2 of BigUint64Array.t ])
        ->
        fun ~index:(x9260 : float) ->
          fun ~value:(x9261 : bigint) ->
            bigint_of_js
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "Atomics") "sub"
                 [|((match x9257 with
                     | `U1 x9258 -> BigInt64Array.t_to_js x9258
                     | `U2 x9259 -> BigUint64Array.t_to_js x9259));(Ojs.float_to_js
                                                                    x9260);(
                   bigint_to_js x9261)|])
    let (wait :
      typedArray:BigInt64Array.t ->
        index:float ->
          value:bigint ->
            ?timeout:float ->
              unit -> [ `L_s71_not_equal  | `L_s74_ok  | `L_s94_timed_out ])
      =
      fun ~typedArray:(x9262 : BigInt64Array.t) ->
        fun ~index:(x9263 : float) ->
          fun ~value:(x9264 : bigint) ->
            fun ?timeout:(x9265 : float option) ->
              fun () ->
                let x9269 =
                  let x9268 = Ojs.get_prop_ascii Ojs.global "Atomics" in
                  Ojs.call (Ojs.get_prop_ascii x9268 "wait") "apply"
                    [|x9268;((let x9266 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x9266 "push"
                                   [|(BigInt64Array.t_to_js x9262)|]);
                              ignore
                                (Ojs.call x9266 "push"
                                   [|(Ojs.float_to_js x9263)|]);
                              ignore
                                (Ojs.call x9266 "push"
                                   [|(bigint_to_js x9264)|]);
                              (match x9265 with
                               | Some x9267 ->
                                   ignore
                                     (Ojs.call x9266 "push"
                                        [|(Ojs.float_to_js x9267)|])
                               | None -> ());
                              x9266))|] in
                match Ojs.string_of_js x9269 with
                | "not-equal" -> `L_s71_not_equal
                | "ok" -> `L_s74_ok
                | "timed-out" -> `L_s94_timed_out
                | _ -> assert false
    let (notify :
      typedArray:BigInt64Array.t ->
        index:float -> ?count:float -> unit -> float)
      =
      fun ~typedArray:(x9270 : BigInt64Array.t) ->
        fun ~index:(x9271 : float) ->
          fun ?count:(x9272 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x9275 = Ojs.get_prop_ascii Ojs.global "Atomics" in
                 Ojs.call (Ojs.get_prop_ascii x9275 "notify") "apply"
                   [|x9275;((let x9273 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x9273 "push"
                                  [|(BigInt64Array.t_to_js x9270)|]);
                             ignore
                               (Ojs.call x9273 "push"
                                  [|(Ojs.float_to_js x9271)|]);
                             (match x9272 with
                              | Some x9274 ->
                                  ignore
                                    (Ojs.call x9273 "push"
                                       [|(Ojs.float_to_js x9274)|])
                              | None -> ());
                             x9273))|])
    let (xor :
      typedArray:[ `U1 of BigInt64Array.t  | `U2 of BigUint64Array.t ] ->
        index:float -> value:bigint -> bigint)
      =
      fun
        ~typedArray:(x9276 :
                      [ `U1 of BigInt64Array.t  | `U2 of BigUint64Array.t ])
        ->
        fun ~index:(x9279 : float) ->
          fun ~value:(x9280 : bigint) ->
            bigint_of_js
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "Atomics") "xor"
                 [|((match x9276 with
                     | `U1 x9277 -> BigInt64Array.t_to_js x9277
                     | `U2 x9278 -> BigUint64Array.t_to_js x9278));(Ojs.float_to_js
                                                                    x9279);(
                   bigint_to_js x9280)|])
    let (add' :
      typedArray:[ `U1 of Int8Array.t  | `U2 of Uint8Array.t 
                 | `U3 of Int16Array.t  | `U4 of Uint16Array.t 
                 | `U5 of Int32Array.t  | `U6 of Uint32Array.t ]
        -> index:float -> value:float -> float)
      =
      fun
        ~typedArray:(x9281 :
                      [ `U1 of Int8Array.t  | `U2 of Uint8Array.t 
                      | `U3 of Int16Array.t  | `U4 of Uint16Array.t 
                      | `U5 of Int32Array.t  | `U6 of Uint32Array.t ])
        ->
        fun ~index:(x9288 : float) ->
          fun ~value:(x9289 : float) ->
            Ojs.float_of_js
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "Atomics") "add"
                 [|((match x9281 with
                     | `U1 x9282 -> Int8Array.t_to_js x9282
                     | `U2 x9283 -> Uint8Array.t_to_js x9283
                     | `U3 x9284 -> Int16Array.t_to_js x9284
                     | `U4 x9285 -> Uint16Array.t_to_js x9285
                     | `U5 x9286 -> Int32Array.t_to_js x9286
                     | `U6 x9287 -> Uint32Array.t_to_js x9287));(Ojs.float_to_js
                                                                   x9288);(
                   Ojs.float_to_js x9289)|])
    let (and_' :
      typedArray:[ `U1 of Int8Array.t  | `U2 of Uint8Array.t 
                 | `U3 of Int16Array.t  | `U4 of Uint16Array.t 
                 | `U5 of Int32Array.t  | `U6 of Uint32Array.t ]
        -> index:float -> value:float -> float)
      =
      fun
        ~typedArray:(x9290 :
                      [ `U1 of Int8Array.t  | `U2 of Uint8Array.t 
                      | `U3 of Int16Array.t  | `U4 of Uint16Array.t 
                      | `U5 of Int32Array.t  | `U6 of Uint32Array.t ])
        ->
        fun ~index:(x9297 : float) ->
          fun ~value:(x9298 : float) ->
            Ojs.float_of_js
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "Atomics") "and"
                 [|((match x9290 with
                     | `U1 x9291 -> Int8Array.t_to_js x9291
                     | `U2 x9292 -> Uint8Array.t_to_js x9292
                     | `U3 x9293 -> Int16Array.t_to_js x9293
                     | `U4 x9294 -> Uint16Array.t_to_js x9294
                     | `U5 x9295 -> Int32Array.t_to_js x9295
                     | `U6 x9296 -> Uint32Array.t_to_js x9296));(Ojs.float_to_js
                                                                   x9297);(
                   Ojs.float_to_js x9298)|])
    let (compareExchange' :
      typedArray:[ `U1 of Int8Array.t  | `U2 of Uint8Array.t 
                 | `U3 of Int16Array.t  | `U4 of Uint16Array.t 
                 | `U5 of Int32Array.t  | `U6 of Uint32Array.t ]
        ->
        index:float -> expectedValue:float -> replacementValue:float -> float)
      =
      fun
        ~typedArray:(x9299 :
                      [ `U1 of Int8Array.t  | `U2 of Uint8Array.t 
                      | `U3 of Int16Array.t  | `U4 of Uint16Array.t 
                      | `U5 of Int32Array.t  | `U6 of Uint32Array.t ])
        ->
        fun ~index:(x9306 : float) ->
          fun ~expectedValue:(x9307 : float) ->
            fun ~replacementValue:(x9308 : float) ->
              Ojs.float_of_js
                (Ojs.call (Ojs.get_prop_ascii Ojs.global "Atomics")
                   "compareExchange"
                   [|((match x9299 with
                       | `U1 x9300 -> Int8Array.t_to_js x9300
                       | `U2 x9301 -> Uint8Array.t_to_js x9301
                       | `U3 x9302 -> Int16Array.t_to_js x9302
                       | `U4 x9303 -> Uint16Array.t_to_js x9303
                       | `U5 x9304 -> Int32Array.t_to_js x9304
                       | `U6 x9305 -> Uint32Array.t_to_js x9305));(Ojs.float_to_js
                                                                    x9306);(
                     Ojs.float_to_js x9307);(Ojs.float_to_js x9308)|])
    let (exchange' :
      typedArray:[ `U1 of Int8Array.t  | `U2 of Uint8Array.t 
                 | `U3 of Int16Array.t  | `U4 of Uint16Array.t 
                 | `U5 of Int32Array.t  | `U6 of Uint32Array.t ]
        -> index:float -> value:float -> float)
      =
      fun
        ~typedArray:(x9309 :
                      [ `U1 of Int8Array.t  | `U2 of Uint8Array.t 
                      | `U3 of Int16Array.t  | `U4 of Uint16Array.t 
                      | `U5 of Int32Array.t  | `U6 of Uint32Array.t ])
        ->
        fun ~index:(x9316 : float) ->
          fun ~value:(x9317 : float) ->
            Ojs.float_of_js
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "Atomics") "exchange"
                 [|((match x9309 with
                     | `U1 x9310 -> Int8Array.t_to_js x9310
                     | `U2 x9311 -> Uint8Array.t_to_js x9311
                     | `U3 x9312 -> Int16Array.t_to_js x9312
                     | `U4 x9313 -> Uint16Array.t_to_js x9313
                     | `U5 x9314 -> Int32Array.t_to_js x9314
                     | `U6 x9315 -> Uint32Array.t_to_js x9315));(Ojs.float_to_js
                                                                   x9316);(
                   Ojs.float_to_js x9317)|])
    let (isLockFree : float -> bool) =
      fun (x9318 : float) ->
        Ojs.bool_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Atomics") "isLockFree"
             [|(Ojs.float_to_js x9318)|])
    let (load' :
      typedArray:[ `U1 of Int8Array.t  | `U2 of Uint8Array.t 
                 | `U3 of Int16Array.t  | `U4 of Uint16Array.t 
                 | `U5 of Int32Array.t  | `U6 of Uint32Array.t ]
        -> index:float -> float)
      =
      fun
        ~typedArray:(x9319 :
                      [ `U1 of Int8Array.t  | `U2 of Uint8Array.t 
                      | `U3 of Int16Array.t  | `U4 of Uint16Array.t 
                      | `U5 of Int32Array.t  | `U6 of Uint32Array.t ])
        ->
        fun ~index:(x9326 : float) ->
          Ojs.float_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "Atomics") "load"
               [|((match x9319 with
                   | `U1 x9320 -> Int8Array.t_to_js x9320
                   | `U2 x9321 -> Uint8Array.t_to_js x9321
                   | `U3 x9322 -> Int16Array.t_to_js x9322
                   | `U4 x9323 -> Uint16Array.t_to_js x9323
                   | `U5 x9324 -> Int32Array.t_to_js x9324
                   | `U6 x9325 -> Uint32Array.t_to_js x9325));(Ojs.float_to_js
                                                                 x9326)|])
    let (or_' :
      typedArray:[ `U1 of Int8Array.t  | `U2 of Uint8Array.t 
                 | `U3 of Int16Array.t  | `U4 of Uint16Array.t 
                 | `U5 of Int32Array.t  | `U6 of Uint32Array.t ]
        -> index:float -> value:float -> float)
      =
      fun
        ~typedArray:(x9327 :
                      [ `U1 of Int8Array.t  | `U2 of Uint8Array.t 
                      | `U3 of Int16Array.t  | `U4 of Uint16Array.t 
                      | `U5 of Int32Array.t  | `U6 of Uint32Array.t ])
        ->
        fun ~index:(x9334 : float) ->
          fun ~value:(x9335 : float) ->
            Ojs.float_of_js
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "Atomics") "or"
                 [|((match x9327 with
                     | `U1 x9328 -> Int8Array.t_to_js x9328
                     | `U2 x9329 -> Uint8Array.t_to_js x9329
                     | `U3 x9330 -> Int16Array.t_to_js x9330
                     | `U4 x9331 -> Uint16Array.t_to_js x9331
                     | `U5 x9332 -> Int32Array.t_to_js x9332
                     | `U6 x9333 -> Uint32Array.t_to_js x9333));(Ojs.float_to_js
                                                                   x9334);(
                   Ojs.float_to_js x9335)|])
    let (store' :
      typedArray:[ `U1 of Int8Array.t  | `U2 of Uint8Array.t 
                 | `U3 of Int16Array.t  | `U4 of Uint16Array.t 
                 | `U5 of Int32Array.t  | `U6 of Uint32Array.t ]
        -> index:float -> value:float -> float)
      =
      fun
        ~typedArray:(x9336 :
                      [ `U1 of Int8Array.t  | `U2 of Uint8Array.t 
                      | `U3 of Int16Array.t  | `U4 of Uint16Array.t 
                      | `U5 of Int32Array.t  | `U6 of Uint32Array.t ])
        ->
        fun ~index:(x9343 : float) ->
          fun ~value:(x9344 : float) ->
            Ojs.float_of_js
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "Atomics") "store"
                 [|((match x9336 with
                     | `U1 x9337 -> Int8Array.t_to_js x9337
                     | `U2 x9338 -> Uint8Array.t_to_js x9338
                     | `U3 x9339 -> Int16Array.t_to_js x9339
                     | `U4 x9340 -> Uint16Array.t_to_js x9340
                     | `U5 x9341 -> Int32Array.t_to_js x9341
                     | `U6 x9342 -> Uint32Array.t_to_js x9342));(Ojs.float_to_js
                                                                   x9343);(
                   Ojs.float_to_js x9344)|])
    let (sub' :
      typedArray:[ `U1 of Int8Array.t  | `U2 of Uint8Array.t 
                 | `U3 of Int16Array.t  | `U4 of Uint16Array.t 
                 | `U5 of Int32Array.t  | `U6 of Uint32Array.t ]
        -> index:float -> value:float -> float)
      =
      fun
        ~typedArray:(x9345 :
                      [ `U1 of Int8Array.t  | `U2 of Uint8Array.t 
                      | `U3 of Int16Array.t  | `U4 of Uint16Array.t 
                      | `U5 of Int32Array.t  | `U6 of Uint32Array.t ])
        ->
        fun ~index:(x9352 : float) ->
          fun ~value:(x9353 : float) ->
            Ojs.float_of_js
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "Atomics") "sub"
                 [|((match x9345 with
                     | `U1 x9346 -> Int8Array.t_to_js x9346
                     | `U2 x9347 -> Uint8Array.t_to_js x9347
                     | `U3 x9348 -> Int16Array.t_to_js x9348
                     | `U4 x9349 -> Uint16Array.t_to_js x9349
                     | `U5 x9350 -> Int32Array.t_to_js x9350
                     | `U6 x9351 -> Uint32Array.t_to_js x9351));(Ojs.float_to_js
                                                                   x9352);(
                   Ojs.float_to_js x9353)|])
    let (wait' :
      typedArray:Int32Array.t ->
        index:float ->
          value:float ->
            ?timeout:float ->
              unit -> [ `L_s71_not_equal  | `L_s74_ok  | `L_s94_timed_out ])
      =
      fun ~typedArray:(x9354 : Int32Array.t) ->
        fun ~index:(x9355 : float) ->
          fun ~value:(x9356 : float) ->
            fun ?timeout:(x9357 : float option) ->
              fun () ->
                let x9361 =
                  let x9360 = Ojs.get_prop_ascii Ojs.global "Atomics" in
                  Ojs.call (Ojs.get_prop_ascii x9360 "wait") "apply"
                    [|x9360;((let x9358 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x9358 "push"
                                   [|(Int32Array.t_to_js x9354)|]);
                              ignore
                                (Ojs.call x9358 "push"
                                   [|(Ojs.float_to_js x9355)|]);
                              ignore
                                (Ojs.call x9358 "push"
                                   [|(Ojs.float_to_js x9356)|]);
                              (match x9357 with
                               | Some x9359 ->
                                   ignore
                                     (Ojs.call x9358 "push"
                                        [|(Ojs.float_to_js x9359)|])
                               | None -> ());
                              x9358))|] in
                match Ojs.string_of_js x9361 with
                | "not-equal" -> `L_s71_not_equal
                | "ok" -> `L_s74_ok
                | "timed-out" -> `L_s94_timed_out
                | _ -> assert false
    let (notify' :
      typedArray:Int32Array.t -> index:float -> ?count:float -> unit -> float)
      =
      fun ~typedArray:(x9362 : Int32Array.t) ->
        fun ~index:(x9363 : float) ->
          fun ?count:(x9364 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x9367 = Ojs.get_prop_ascii Ojs.global "Atomics" in
                 Ojs.call (Ojs.get_prop_ascii x9367 "notify") "apply"
                   [|x9367;((let x9365 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x9365 "push"
                                  [|(Int32Array.t_to_js x9362)|]);
                             ignore
                               (Ojs.call x9365 "push"
                                  [|(Ojs.float_to_js x9363)|]);
                             (match x9364 with
                              | Some x9366 ->
                                  ignore
                                    (Ojs.call x9365 "push"
                                       [|(Ojs.float_to_js x9366)|])
                              | None -> ());
                             x9365))|])
    let (xor' :
      typedArray:[ `U1 of Int8Array.t  | `U2 of Uint8Array.t 
                 | `U3 of Int16Array.t  | `U4 of Uint16Array.t 
                 | `U5 of Int32Array.t  | `U6 of Uint32Array.t ]
        -> index:float -> value:float -> float)
      =
      fun
        ~typedArray:(x9368 :
                      [ `U1 of Int8Array.t  | `U2 of Uint8Array.t 
                      | `U3 of Int16Array.t  | `U4 of Uint16Array.t 
                      | `U5 of Int32Array.t  | `U6 of Uint32Array.t ])
        ->
        fun ~index:(x9375 : float) ->
          fun ~value:(x9376 : float) ->
            Ojs.float_of_js
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "Atomics") "xor"
                 [|((match x9368 with
                     | `U1 x9369 -> Int8Array.t_to_js x9369
                     | `U2 x9370 -> Uint8Array.t_to_js x9370
                     | `U3 x9371 -> Int16Array.t_to_js x9371
                     | `U4 x9372 -> Uint16Array.t_to_js x9372
                     | `U5 x9373 -> Int32Array.t_to_js x9373
                     | `U6 x9374 -> Uint32Array.t_to_js x9374));(Ojs.float_to_js
                                                                   x9375);(
                   Ojs.float_to_js x9376)|])
  end
module PromiseRejectedResult =
  struct
    type t = [ `PromiseRejectedResult ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x9378 : Ojs.t) -> t_of_js x9378
    and t_0_to_js : t_0 -> Ojs.t = fun (x9377 : t) -> t_to_js x9377
    type tags = [ `PromiseRejectedResult ]
    type tags_0 = tags
    type 'tags this =
      'tags intf constraint 'tags = [> `PromiseRejectedResult ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x9381 : Ojs.t) -> intf_of_js __tags_of_js x9381
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x9379 : __tags intf) -> intf_to_js __tags_to_js x9379
    let (get_status : 'tags this -> [ `L_s84_rejected ]) =
      fun (x9383 : 'tags this) ->
        let x9385 = Ojs.get_prop_ascii (this_to_js Obj.magic x9383) "status" in
        match Ojs.string_of_js x9385 with
        | "rejected" -> `L_s84_rejected
        | _ -> assert false
    let (set_status : 'tags this -> [ `L_s84_rejected ] -> unit) =
      fun (x9386 : 'tags this) ->
        fun (x9387 : [ `L_s84_rejected ]) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x9386) "status"
            (match x9387 with
             | `L_s84_rejected -> Ojs.string_to_js "rejected")
    let (get_reason : 'tags this -> any) =
      fun (x9389 : 'tags this) ->
        any_of_js (Ojs.get_prop_ascii (this_to_js Obj.magic x9389) "reason")
    let (set_reason : 'tags this -> any -> unit) =
      fun (x9391 : 'tags this) ->
        fun (x9392 : any) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x9391) "reason"
            (any_to_js x9392)
    let (create : status:[ `L_s84_rejected ] -> reason:any -> unit -> t) =
      fun ~status:(x9394 : [ `L_s84_rejected ]) ->
        fun ~reason:(x9395 : any) ->
          fun () ->
            let x9396 = Ojs.empty_obj () in
            Ojs.set_prop_ascii x9396 "status"
              (match x9394 with
               | `L_s84_rejected -> Ojs.string_to_js "rejected");
            Ojs.set_prop_ascii x9396 "reason" (any_to_js x9395);
            t_of_js x9396
    let cast_from = Obj.magic
  end
module PromiseFulfilledResult =
  struct
    type 'T t = [ `PromiseFulfilledResult of 'T ] intf
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun _T -> Obj.magic
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun _T -> Obj.magic
    type 'T t_1 = 'T t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 =
      fun (type __T) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x9399 : Ojs.t) -> t_of_js __T_of_js x9399
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t =
      fun (type __T) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x9397 : __T t) -> t_to_js __T_to_js x9397
    type 'T tags = [ `PromiseFulfilledResult of 'T ]
    type 'T tags_1 = 'T tags
    type ('tags, 'T) this =
      'tags intf constraint 'tags = [> `PromiseFulfilledResult of 'T ]
    let rec this_of_js :
      'tags 'T .
        (Ojs.t -> 'tags) -> (Ojs.t -> 'T) -> Ojs.t -> ('tags, 'T) this
      =
      fun (type __tags) ->
        fun (type __T) ->
          fun (__tags_of_js : Ojs.t -> __tags) ->
            fun (__T_of_js : Ojs.t -> __T) ->
              fun (x9403 : Ojs.t) -> intf_of_js __tags_of_js x9403
    and this_to_js :
      'tags 'T .
        ('tags -> Ojs.t) -> ('T -> Ojs.t) -> ('tags, 'T) this -> Ojs.t
      =
      fun (type __tags) ->
        fun (type __T) ->
          fun (__tags_to_js : __tags -> Ojs.t) ->
            fun (__T_to_js : __T -> Ojs.t) ->
              fun (x9401 : __tags intf) -> intf_to_js __tags_to_js x9401
    let (get_status : ('tags, 'T) this -> [ `L_s43_fulfilled ]) =
      fun (x9405 : ('tags, 'T) this) ->
        let x9408 =
          Ojs.get_prop_ascii (this_to_js Obj.magic Obj.magic x9405) "status" in
        match Ojs.string_of_js x9408 with
        | "fulfilled" -> `L_s43_fulfilled
        | _ -> assert false
    let (set_status : ('tags, 'T) this -> [ `L_s43_fulfilled ] -> unit) =
      fun (x9409 : ('tags, 'T) this) ->
        fun (x9410 : [ `L_s43_fulfilled ]) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic Obj.magic x9409) "status"
            (match x9410 with
             | `L_s43_fulfilled -> Ojs.string_to_js "fulfilled")
    let (get_value : ('tags, 'T) this -> 'T) =
      fun (x9413 : ('tags, 'T) this) ->
        Obj.magic
          (Ojs.get_prop_ascii (this_to_js Obj.magic Obj.magic x9413) "value")
    let (set_value : ('tags, 'T) this -> 'T -> unit) =
      fun (x9416 : ('tags, 'T) this) ->
        fun (x9417 : 'T) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic Obj.magic x9416) "value"
            (Obj.magic x9417)
    let (create : status:[ `L_s43_fulfilled ] -> value:'T -> unit -> 'T t) =
      fun ~status:(x9420 : [ `L_s43_fulfilled ]) ->
        fun ~value:(x9421 : 'T) ->
          fun () ->
            let x9422 = Ojs.empty_obj () in
            Ojs.set_prop_ascii x9422 "status"
              (match x9420 with
               | `L_s43_fulfilled -> Ojs.string_to_js "fulfilled");
            Ojs.set_prop_ascii x9422 "value" (Obj.magic x9421);
            t_of_js Obj.magic x9422
    let cast_from = Obj.magic
  end
module PromiseSettledResult =
  struct
    type 'T t =
      [ `U_s43_fulfilled of 'T PromiseFulfilledResult.t 
      | `U_s84_rejected of PromiseRejectedResult.t ]
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun (type __T) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x9428 : Ojs.t) ->
            let x9429 = x9428 in
            match Ojs.string_of_js (Ojs.get_prop_ascii x9429 "status") with
            | "fulfilled" ->
                `U_s43_fulfilled
                  (PromiseFulfilledResult.t_of_js __T_of_js x9429)
            | "rejected" ->
                `U_s84_rejected (PromiseRejectedResult.t_of_js x9429)
            | _ -> assert false
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t =
      fun (type __T) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun
            (x9424 :
              [ `U_s43_fulfilled of __T PromiseFulfilledResult.t 
              | `U_s84_rejected of PromiseRejectedResult.t ])
            ->
            match x9424 with
            | `U_s43_fulfilled x9425 ->
                PromiseFulfilledResult.t_to_js __T_to_js x9425
            | `U_s84_rejected x9427 -> PromiseRejectedResult.t_to_js x9427
    type 'T t_1 = 'T t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 =
      fun (type __T) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x9433 : Ojs.t) -> t_of_js __T_of_js x9433
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t =
      fun (type __T) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x9431 : __T t) -> t_to_js __T_to_js x9431
  end
module Awaited =
  struct
    type 'T t = any
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun (type __T) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x9436 : Ojs.t) -> any_of_js x9436
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t =
      fun (type __T) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x9435 : any) -> any_to_js x9435
    type 'T t_1 = 'T t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 =
      fun (type __T) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x9439 : Ojs.t) -> t_of_js __T_of_js x9439
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t =
      fun (type __T) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x9437 : __T t) -> t_to_js __T_to_js x9437
  end
module Promise =
  struct
    type 'T t = [ `Promise of 'T  | 'T PromiseLike.tags_1] intf
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun _T -> Obj.magic
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun _T -> Obj.magic
    type 'T t_1 = 'T t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 =
      fun (type __T) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x9443 : Ojs.t) -> t_of_js __T_of_js x9443
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t =
      fun (type __T) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x9441 : __T t) -> t_to_js __T_to_js x9441
    type 'T tags = [ `Promise of 'T  | 'T PromiseLike.tags_1]
    type 'T tags_1 = 'T tags
    type ('tags, 'T) this = 'tags intf constraint 'tags = [> `Promise of 'T ]
    let rec this_of_js :
      'tags 'T .
        (Ojs.t -> 'tags) -> (Ojs.t -> 'T) -> Ojs.t -> ('tags, 'T) this
      =
      fun (type __tags) ->
        fun (type __T) ->
          fun (__tags_of_js : Ojs.t -> __tags) ->
            fun (__T_of_js : Ojs.t -> __T) ->
              fun (x9447 : Ojs.t) -> intf_of_js __tags_of_js x9447
    and this_to_js :
      'tags 'T .
        ('tags -> Ojs.t) -> ('T -> Ojs.t) -> ('tags, 'T) this -> Ojs.t
      =
      fun (type __tags) ->
        fun (type __T) ->
          fun (__tags_to_js : __tags -> Ojs.t) ->
            fun (__T_to_js : __T -> Ojs.t) ->
              fun (x9445 : __tags intf) -> intf_to_js __tags_to_js x9445
    let (finally :
      ('tags, 'T) this ->
        ?onfinally:[ `Null  | `Undefined of undefined 
                   | `U1 of unit -> unit ]
          -> unit -> 'T t)
      =
      fun (x9454 : ('tags, 'T) this) ->
        fun
          ?onfinally:(x9449 :
                       [ `Null  | `Undefined of undefined 
                       | `U1 of unit -> unit ] option)
          ->
          fun () ->
            t_of_js Obj.magic
              (let x9457 = this_to_js Obj.magic Obj.magic x9454 in
               Ojs.call (Ojs.get_prop_ascii x9457 "finally") "apply"
                 [|x9457;((let x9450 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x9449 with
                            | Some x9451 ->
                                ignore
                                  (Ojs.call x9450 "push"
                                     [|((match x9451 with
                                         | `Null -> Ojs.null
                                         | `Undefined x9452 ->
                                             undefined_to_js x9452
                                         | `U1 x9453 ->
                                             Ojs.fun_to_js 1
                                               (fun _ -> x9453 ())))|])
                            | None -> ());
                           x9450))|])
    let (then_ :
      ('tags, 'T) this ->
        ?onfulfilled:[ `Null  | `Undefined of undefined 
                     | `U1 of
                         'T ->
                           [ `U1 of 'TResult1 
                           | `U2 of 'TResult1 PromiseLike.t ]
                         ]
          ->
          ?onrejected:[ `Null  | `Undefined of undefined 
                      | `U1 of
                          any ->
                            [ `U1 of 'TResult2 
                            | `U2 of 'TResult2 PromiseLike.t ]
                          ]
            -> unit -> ('TResult1, 'TResult2) union2 t)
      =
      fun (x9476 : ('tags, 'T) this) ->
        fun
          ?onfulfilled:(x9459 :
                         [ `Null  | `Undefined of undefined 
                         | `U1 of
                             'T ->
                               [ `U1 of 'TResult1 
                               | `U2 of 'TResult1 PromiseLike.t ]
                             ]
                           option)
          ->
          fun
            ?onrejected:(x9460 :
                          [ `Null  | `Undefined of undefined 
                          | `U1 of
                              any ->
                                [ `U1 of 'TResult2 
                                | `U2 of 'TResult2 PromiseLike.t ]
                              ]
                            option)
            ->
            fun () ->
              t_of_js
                (fun (x9480 : Ojs.t) ->
                   union2_of_js Obj.magic Obj.magic x9480)
                (let x9479 = this_to_js Obj.magic Obj.magic x9476 in
                 Ojs.call (Ojs.get_prop_ascii x9479 "then") "apply"
                   [|x9479;((let x9461 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x9459 with
                              | Some x9469 ->
                                  ignore
                                    (Ojs.call x9461 "push"
                                       [|((match x9469 with
                                           | `Null -> Ojs.null
                                           | `Undefined x9470 ->
                                               undefined_to_js x9470
                                           | `U1 x9471 ->
                                               Ojs.fun_to_js 1
                                                 (fun (x9472 : Ojs.t) ->
                                                    match x9471
                                                            (Obj.magic x9472)
                                                    with
                                                    | `U1 x9473 ->
                                                        Obj.magic x9473
                                                    | `U2 x9474 ->
                                                        PromiseLike.t_to_js
                                                          Obj.magic x9474)))|])
                              | None -> ());
                             (match x9460 with
                              | Some x9462 ->
                                  ignore
                                    (Ojs.call x9461 "push"
                                       [|((match x9462 with
                                           | `Null -> Ojs.null
                                           | `Undefined x9463 ->
                                               undefined_to_js x9463
                                           | `U1 x9464 ->
                                               Ojs.fun_to_js 1
                                                 (fun (x9465 : Ojs.t) ->
                                                    match x9464
                                                            (any_of_js x9465)
                                                    with
                                                    | `U1 x9466 ->
                                                        Obj.magic x9466
                                                    | `U2 x9467 ->
                                                        PromiseLike.t_to_js
                                                          Obj.magic x9467)))|])
                              | None -> ());
                             x9461))|])
    let (catch :
      ('tags, 'T) this ->
        ?onrejected:[ `Null  | `Undefined of undefined 
                    | `U1 of
                        any ->
                          [ `U1 of 'TResult 
                          | `U2 of 'TResult PromiseLike.t ]
                        ]
          -> unit -> ('T, 'TResult) union2 t)
      =
      fun (x9492 : ('tags, 'T) this) ->
        fun
          ?onrejected:(x9483 :
                        [ `Null  | `Undefined of undefined 
                        | `U1 of
                            any ->
                              [ `U1 of 'TResult 
                              | `U2 of 'TResult PromiseLike.t ]
                            ]
                          option)
          ->
          fun () ->
            t_of_js
              (fun (x9496 : Ojs.t) -> union2_of_js Obj.magic Obj.magic x9496)
              (let x9495 = this_to_js Obj.magic Obj.magic x9492 in
               Ojs.call (Ojs.get_prop_ascii x9495 "catch") "apply"
                 [|x9495;((let x9484 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x9483 with
                            | Some x9485 ->
                                ignore
                                  (Ojs.call x9484 "push"
                                     [|((match x9485 with
                                         | `Null -> Ojs.null
                                         | `Undefined x9486 ->
                                             undefined_to_js x9486
                                         | `U1 x9487 ->
                                             Ojs.fun_to_js 1
                                               (fun (x9488 : Ojs.t) ->
                                                  match x9487
                                                          (any_of_js x9488)
                                                  with
                                                  | `U1 x9489 ->
                                                      Obj.magic x9489
                                                  | `U2 x9490 ->
                                                      PromiseLike.t_to_js
                                                        Obj.magic x9490)))|])
                            | None -> ());
                           x9484))|])
    let (any :
      [ `U1 of [ `U1 of 'T  | `U2 of 'T PromiseLike.t ] list 
      | `U2 of [ `U1 of 'T  | `U2 of 'T PromiseLike.t ] Iterable.t ] -> 
        'T t)
      =
      fun
        (x9499 :
          [ `U1 of [ `U1 of 'T  | `U2 of 'T PromiseLike.t ] list 
          | `U2 of [ `U1 of 'T  | `U2 of 'T PromiseLike.t ] Iterable.t ])
        ->
        t_of_js Obj.magic
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Promise") "any"
             [|((match x9499 with
                 | `U1 x9500 ->
                     Ojs.list_to_js
                       (fun
                          (x9501 : [ `U1 of 'T  | `U2 of 'T PromiseLike.t ])
                          ->
                          match x9501 with
                          | `U1 x9502 -> Obj.magic x9502
                          | `U2 x9503 -> PromiseLike.t_to_js Obj.magic x9503)
                       x9500
                 | `U2 x9505 ->
                     Iterable.t_to_js
                       (fun
                          (x9506 : [ `U1 of 'T  | `U2 of 'T PromiseLike.t ])
                          ->
                          match x9506 with
                          | `U1 x9507 -> Obj.magic x9507
                          | `U2 x9508 -> PromiseLike.t_to_js Obj.magic x9508)
                       x9505))|])
    let (allSettled : 'T -> any t) =
      fun (x9511 : 'T) ->
        t_of_js any_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Promise") "allSettled"
             [|(Obj.magic x9511)|])
    let (allSettled' :
      [ `U1 of 'T  | `U2 of 'T PromiseLike.t ] Iterable.t ->
        'T Awaited.t PromiseSettledResult.t list t)
      =
      fun (x9513 : [ `U1 of 'T  | `U2 of 'T PromiseLike.t ] Iterable.t) ->
        t_of_js
          (fun (x9518 : Ojs.t) ->
             Ojs.list_of_js
               (fun (x9519 : Ojs.t) ->
                  PromiseSettledResult.t_of_js
                    (fun (x9520 : Ojs.t) -> Awaited.t_of_js Obj.magic x9520)
                    x9519) x9518)
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Promise") "allSettled"
             [|(Iterable.t_to_js
                  (fun (x9514 : [ `U1 of 'T  | `U2 of 'T PromiseLike.t ]) ->
                     match x9514 with
                     | `U1 x9515 -> Obj.magic x9515
                     | `U2 x9516 -> PromiseLike.t_to_js Obj.magic x9516)
                  x9513)|])
    let (any' : 'T -> any Awaited.t t) =
      fun (x9522 : 'T) ->
        t_of_js (fun (x9523 : Ojs.t) -> Awaited.t_of_js any_of_js x9523)
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Promise") "any"
             [|(Obj.magic x9522)|])
    let (any'' :
      [ `U1 of 'T  | `U2 of 'T PromiseLike.t ] Iterable.t -> 'T Awaited.t t)
      =
      fun (x9525 : [ `U1 of 'T  | `U2 of 'T PromiseLike.t ] Iterable.t) ->
        t_of_js (fun (x9530 : Ojs.t) -> Awaited.t_of_js Obj.magic x9530)
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Promise") "any"
             [|(Iterable.t_to_js
                  (fun (x9526 : [ `U1 of 'T  | `U2 of 'T PromiseLike.t ]) ->
                     match x9526 with
                     | `U1 x9527 -> Obj.magic x9527
                     | `U2 x9528 -> PromiseLike.t_to_js Obj.magic x9528)
                  x9525)|])
    let (prototype : unit -> any t) =
      fun () ->
        t_of_js any_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Promise")
             "prototype")
    let (create :
      (resolve:([ `U1 of 'T  | `U2 of 'T PromiseLike.t ] -> unit) ->
         reject:(?reason:any -> unit -> unit) -> unit)
        -> 'T t)
      =
      fun
        (x9533 :
          resolve:([ `U1 of 'T  | `U2 of 'T PromiseLike.t ] -> unit) ->
            reject:(?reason:any -> unit -> unit) -> unit)
        ->
        t_of_js Obj.magic
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Promise")
             [|(Ojs.fun_to_js 2
                  (fun (x9534 : Ojs.t) ->
                     fun (x9539 : Ojs.t) ->
                       x9533
                         ~resolve:(fun
                                     (x9535 :
                                       [ `U1 of 'T 
                                       | `U2 of 'T PromiseLike.t ])
                                     ->
                                     ignore
                                       (Ojs.apply x9534
                                          [|((match x9535 with
                                              | `U1 x9536 -> Obj.magic x9536
                                              | `U2 x9537 ->
                                                  PromiseLike.t_to_js
                                                    Obj.magic x9537))|]))
                         ~reject:(fun ?reason:(x9540 : any option) ->
                                    fun () ->
                                      ignore
                                        (Ojs.call x9539 "apply"
                                           [|Ojs.null;((let x9541 =
                                                          Ojs.new_obj
                                                            (Ojs.get_prop_ascii
                                                               Ojs.global
                                                               "Array") 
                                                            [||] in
                                                        (match x9540 with
                                                         | Some x9542 ->
                                                             ignore
                                                               (Ojs.call
                                                                  x9541
                                                                  "push"
                                                                  [|(
                                                                    any_to_js
                                                                    x9542)|])
                                                         | None -> ());
                                                        x9541))|]))))|])
    let (all : 'T -> any t) =
      fun (x9544 : 'T) ->
        t_of_js any_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Promise") "all"
             [|(Obj.magic x9544)|])
    let (race : 'T -> any Awaited.t t) =
      fun (x9546 : 'T) ->
        t_of_js (fun (x9547 : Ojs.t) -> Awaited.t_of_js any_of_js x9547)
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Promise") "race"
             [|(Obj.magic x9546)|])
    let (reject : ?reason:any -> unit -> 'T t) =
      fun ?reason:(x9549 : any option) ->
        fun () ->
          t_of_js Obj.magic
            (let x9552 = Ojs.get_prop_ascii Ojs.global "Promise" in
             Ojs.call (Ojs.get_prop_ascii x9552 "reject") "apply"
               [|x9552;((let x9550 =
                           Ojs.new_obj
                             (Ojs.get_prop_ascii Ojs.global "Array") 
                             [||] in
                         (match x9549 with
                          | Some x9551 ->
                              ignore
                                (Ojs.call x9550 "push" [|(any_to_js x9551)|])
                          | None -> ());
                         x9550))|])
    let (resolve : unit -> unit t) =
      fun () ->
        t_of_js Ojs.unit_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Promise") "resolve" [||])
    let (resolve' : [ `U1 of 'T  | `U2 of 'T PromiseLike.t ] -> 'T t) =
      fun (x9555 : [ `U1 of 'T  | `U2 of 'T PromiseLike.t ]) ->
        t_of_js Obj.magic
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Promise") "resolve"
             [|((match x9555 with
                 | `U1 x9556 -> Obj.magic x9556
                 | `U2 x9557 -> PromiseLike.t_to_js Obj.magic x9557))|])
    let (all' :
      [ `U1 of 'T  | `U2 of 'T PromiseLike.t ] Iterable.t ->
        'T Awaited.t list t)
      =
      fun (x9560 : [ `U1 of 'T  | `U2 of 'T PromiseLike.t ] Iterable.t) ->
        t_of_js
          (fun (x9565 : Ojs.t) ->
             Ojs.list_of_js
               (fun (x9566 : Ojs.t) -> Awaited.t_of_js Obj.magic x9566) x9565)
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Promise") "all"
             [|(Iterable.t_to_js
                  (fun (x9561 : [ `U1 of 'T  | `U2 of 'T PromiseLike.t ]) ->
                     match x9561 with
                     | `U1 x9562 -> Obj.magic x9562
                     | `U2 x9563 -> PromiseLike.t_to_js Obj.magic x9563)
                  x9560)|])
    let (race' :
      [ `U1 of 'T  | `U2 of 'T PromiseLike.t ] Iterable.t -> 'T Awaited.t t)
      =
      fun (x9568 : [ `U1 of 'T  | `U2 of 'T PromiseLike.t ] Iterable.t) ->
        t_of_js (fun (x9573 : Ojs.t) -> Awaited.t_of_js Obj.magic x9573)
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Promise") "race"
             [|(Iterable.t_to_js
                  (fun (x9569 : [ `U1 of 'T  | `U2 of 'T PromiseLike.t ]) ->
                     match x9569 with
                     | `U1 x9570 -> Obj.magic x9570
                     | `U2 x9571 -> PromiseLike.t_to_js Obj.magic x9571)
                  x9568)|])
    let cast_from = Obj.magic
  end
module AsyncIterator =
  struct
    type ('T, 'TReturn, 'TNext) t =
      [ `AsyncIterator of ('T * 'TReturn * 'TNext) ] intf
    let rec t_of_js :
      'T 'TReturn 'TNext .
        (Ojs.t -> 'T) ->
          (Ojs.t -> 'TReturn) ->
            (Ojs.t -> 'TNext) -> Ojs.t -> ('T, 'TReturn, 'TNext) t
      = fun _T -> fun _TReturn -> fun _TNext -> Obj.magic
    and t_to_js :
      'T 'TReturn 'TNext .
        ('T -> Ojs.t) ->
          ('TReturn -> Ojs.t) ->
            ('TNext -> Ojs.t) -> ('T, 'TReturn, 'TNext) t -> Ojs.t
      = fun _T -> fun _TReturn -> fun _TNext -> Obj.magic
    type ('T, 'TReturn, 'TNext) t_3 = ('T, 'TReturn, 'TNext) t
    let rec t_3_of_js :
      'T 'TReturn 'TNext .
        (Ojs.t -> 'T) ->
          (Ojs.t -> 'TReturn) ->
            (Ojs.t -> 'TNext) -> Ojs.t -> ('T, 'TReturn, 'TNext) t_3
      =
      fun (type __T) ->
        fun (type __TReturn) ->
          fun (type __TNext) ->
            fun (__T_of_js : Ojs.t -> __T) ->
              fun (__TReturn_of_js : Ojs.t -> __TReturn) ->
                fun (__TNext_of_js : Ojs.t -> __TNext) ->
                  fun (x9579 : Ojs.t) ->
                    t_of_js __T_of_js __TReturn_of_js __TNext_of_js x9579
    and t_3_to_js :
      'T 'TReturn 'TNext .
        ('T -> Ojs.t) ->
          ('TReturn -> Ojs.t) ->
            ('TNext -> Ojs.t) -> ('T, 'TReturn, 'TNext) t_3 -> Ojs.t
      =
      fun (type __T) ->
        fun (type __TReturn) ->
          fun (type __TNext) ->
            fun (__T_to_js : __T -> Ojs.t) ->
              fun (__TReturn_to_js : __TReturn -> Ojs.t) ->
                fun (__TNext_to_js : __TNext -> Ojs.t) ->
                  fun (x9575 : (__T, __TReturn, __TNext) t) ->
                    t_to_js __T_to_js __TReturn_to_js __TNext_to_js x9575
    type ('T, 'TReturn) t_2 = ('T, 'TReturn, undefined) t
    let rec t_2_of_js :
      'T 'TReturn .
        (Ojs.t -> 'T) -> (Ojs.t -> 'TReturn) -> Ojs.t -> ('T, 'TReturn) t_2
      =
      fun (type __T) ->
        fun (type __TReturn) ->
          fun (__T_of_js : Ojs.t -> __T) ->
            fun (__TReturn_of_js : Ojs.t -> __TReturn) ->
              fun (x9587 : Ojs.t) ->
                t_of_js __T_of_js __TReturn_of_js undefined_of_js x9587
    and t_2_to_js :
      'T 'TReturn .
        ('T -> Ojs.t) -> ('TReturn -> Ojs.t) -> ('T, 'TReturn) t_2 -> Ojs.t
      =
      fun (type __T) ->
        fun (type __TReturn) ->
          fun (__T_to_js : __T -> Ojs.t) ->
            fun (__TReturn_to_js : __TReturn -> Ojs.t) ->
              fun (x9583 : (__T, __TReturn, undefined) t) ->
                t_to_js __T_to_js __TReturn_to_js undefined_to_js x9583
    type 'T t_1 = ('T, any, undefined) t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 =
      fun (type __T) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x9595 : Ojs.t) ->
            t_of_js __T_of_js any_of_js undefined_of_js x9595
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t =
      fun (type __T) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x9591 : (__T, any, undefined) t) ->
            t_to_js __T_to_js any_to_js undefined_to_js x9591
    type ('T, 'TReturn, 'TNext) tags =
      [ `AsyncIterator of ('T * 'TReturn * 'TNext) ]
    type ('T, 'TReturn, 'TNext) tags_3 = ('T, 'TReturn, 'TNext) tags
    type ('T, 'TReturn) tags_2 = ('T, 'TReturn, undefined) tags
    type 'T tags_1 = ('T, any, undefined) tags
    type ('tags, 'T, 'TReturn, 'TNext) this =
      'tags intf constraint 'tags =
                  [> `AsyncIterator of ('T * 'TReturn * 'TNext) ]
    let rec this_of_js :
      'tags 'T 'TReturn 'TNext .
        (Ojs.t -> 'tags) ->
          (Ojs.t -> 'T) ->
            (Ojs.t -> 'TReturn) ->
              (Ojs.t -> 'TNext) ->
                Ojs.t -> ('tags, 'T, 'TReturn, 'TNext) this
      =
      fun (type __tags) ->
        fun (type __T) ->
          fun (type __TReturn) ->
            fun (type __TNext) ->
              fun (__tags_of_js : Ojs.t -> __tags) ->
                fun (__T_of_js : Ojs.t -> __T) ->
                  fun (__TReturn_of_js : Ojs.t -> __TReturn) ->
                    fun (__TNext_of_js : Ojs.t -> __TNext) ->
                      fun (x9601 : Ojs.t) -> intf_of_js __tags_of_js x9601
    and this_to_js :
      'tags 'T 'TReturn 'TNext .
        ('tags -> Ojs.t) ->
          ('T -> Ojs.t) ->
            ('TReturn -> Ojs.t) ->
              ('TNext -> Ojs.t) ->
                ('tags, 'T, 'TReturn, 'TNext) this -> Ojs.t
      =
      fun (type __tags) ->
        fun (type __T) ->
          fun (type __TReturn) ->
            fun (type __TNext) ->
              fun (__tags_to_js : __tags -> Ojs.t) ->
                fun (__T_to_js : __T -> Ojs.t) ->
                  fun (__TReturn_to_js : __TReturn -> Ojs.t) ->
                    fun (__TNext_to_js : __TNext -> Ojs.t) ->
                      fun (x9599 : __tags intf) ->
                        intf_to_js __tags_to_js x9599
    let (next :
      ('tags, 'T, 'TReturn, 'TNext) this ->
        args:any list -> ('T, 'TReturn) IteratorResult.t Promise.t)
      =
      fun (x9606 : ('tags, 'T, 'TReturn, 'TNext) this) ->
        fun ~args:(x9603 : any list) ->
          Promise.t_of_js
            (fun (x9612 : Ojs.t) ->
               IteratorResult.t_of_js Obj.magic Obj.magic x9612)
            (let x9611 =
               this_to_js Obj.magic Obj.magic Obj.magic Obj.magic x9606 in
             Ojs.call (Ojs.get_prop_ascii x9611 "next") "apply"
               [|x9611;((let x9604 =
                           Ojs.new_obj
                             (Ojs.get_prop_ascii Ojs.global "Array") 
                             [||] in
                         List.iter
                           (fun (x9605 : any) ->
                              ignore
                                (Ojs.call x9604 "push" [|(any_to_js x9605)|]))
                           x9603;
                         x9604))|])
    let (return :
      ('tags, 'T, 'TReturn, 'TNext) this ->
        ?value:[ `U1 of 'TReturn  | `U2 of 'TReturn PromiseLike.t ] ->
          unit -> ('T, 'TReturn) IteratorResult.t Promise.t)
      =
      fun (x9621 : ('tags, 'T, 'TReturn, 'TNext) this) ->
        fun
          ?value:(x9615 :
                   [ `U1 of 'TReturn  | `U2 of 'TReturn PromiseLike.t ]
                     option)
          ->
          fun () ->
            Promise.t_of_js
              (fun (x9627 : Ojs.t) ->
                 IteratorResult.t_of_js Obj.magic Obj.magic x9627)
              (let x9626 =
                 this_to_js Obj.magic Obj.magic Obj.magic Obj.magic x9621 in
               Ojs.call (Ojs.get_prop_ascii x9626 "return") "apply"
                 [|x9626;((let x9616 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x9615 with
                            | Some x9617 ->
                                ignore
                                  (Ojs.call x9616 "push"
                                     [|((match x9617 with
                                         | `U1 x9618 -> Obj.magic x9618
                                         | `U2 x9619 ->
                                             PromiseLike.t_to_js Obj.magic
                                               x9619))|])
                            | None -> ());
                           x9616))|])
    let (throw :
      ('tags, 'T, 'TReturn, 'TNext) this ->
        ?e:any -> unit -> ('T, 'TReturn) IteratorResult.t Promise.t)
      =
      fun (x9633 : ('tags, 'T, 'TReturn, 'TNext) this) ->
        fun ?e:(x9630 : any option) ->
          fun () ->
            Promise.t_of_js
              (fun (x9639 : Ojs.t) ->
                 IteratorResult.t_of_js Obj.magic Obj.magic x9639)
              (let x9638 =
                 this_to_js Obj.magic Obj.magic Obj.magic Obj.magic x9633 in
               Ojs.call (Ojs.get_prop_ascii x9638 "throw") "apply"
                 [|x9638;((let x9631 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x9630 with
                            | Some x9632 ->
                                ignore
                                  (Ojs.call x9631 "push"
                                     [|(any_to_js x9632)|])
                            | None -> ());
                           x9631))|])
    let cast_from = Obj.magic
  end
module AsyncIterableIterator =
  struct
    type 'T t =
      [ `AsyncIterableIterator of 'T 
      | `AsyncIterator of ('T * any * undefined) ] intf
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun _T -> Obj.magic
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun _T -> Obj.magic
    type 'T t_1 = 'T t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 =
      fun (type __T) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x9644 : Ojs.t) -> t_of_js __T_of_js x9644
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t =
      fun (type __T) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x9642 : __T t) -> t_to_js __T_to_js x9642
    type 'T tags =
      [ `AsyncIterableIterator of 'T 
      | `AsyncIterator of ('T * any * undefined) ]
    type 'T tags_1 = 'T tags
    type ('tags, 'T) this =
      'tags intf constraint 'tags = [> `AsyncIterableIterator of 'T ]
    let rec this_of_js :
      'tags 'T .
        (Ojs.t -> 'tags) -> (Ojs.t -> 'T) -> Ojs.t -> ('tags, 'T) this
      =
      fun (type __tags) ->
        fun (type __T) ->
          fun (__tags_of_js : Ojs.t -> __tags) ->
            fun (__T_of_js : Ojs.t -> __T) ->
              fun (x9648 : Ojs.t) -> intf_of_js __tags_of_js x9648
    and this_to_js :
      'tags 'T .
        ('tags -> Ojs.t) -> ('T -> Ojs.t) -> ('tags, 'T) this -> Ojs.t
      =
      fun (type __tags) ->
        fun (type __T) ->
          fun (__tags_to_js : __tags -> Ojs.t) ->
            fun (__T_to_js : __T -> Ojs.t) ->
              fun (x9646 : __tags intf) -> intf_to_js __tags_to_js x9646
    let cast_from = Obj.magic
  end
module AsyncIterable =
  struct
    type 'T t = [ `AsyncIterable of 'T ] intf
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun _T -> Obj.magic
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun _T -> Obj.magic
    type 'T t_1 = 'T t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 =
      fun (type __T) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x9652 : Ojs.t) -> t_of_js __T_of_js x9652
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t =
      fun (type __T) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x9650 : __T t) -> t_to_js __T_to_js x9650
    type 'T tags = [ `AsyncIterable of 'T ]
    type 'T tags_1 = 'T tags
    type ('tags, 'T) this =
      'tags intf constraint 'tags = [> `AsyncIterable of 'T ]
    let rec this_of_js :
      'tags 'T .
        (Ojs.t -> 'tags) -> (Ojs.t -> 'T) -> Ojs.t -> ('tags, 'T) this
      =
      fun (type __tags) ->
        fun (type __T) ->
          fun (__tags_of_js : Ojs.t -> __tags) ->
            fun (__T_of_js : Ojs.t -> __T) ->
              fun (x9656 : Ojs.t) -> intf_of_js __tags_of_js x9656
    and this_to_js :
      'tags 'T .
        ('tags -> Ojs.t) -> ('T -> Ojs.t) -> ('tags, 'T) this -> Ojs.t
      =
      fun (type __tags) ->
        fun (type __T) ->
          fun (__tags_to_js : __tags -> Ojs.t) ->
            fun (__T_to_js : __T -> Ojs.t) ->
              fun (x9654 : __tags intf) -> intf_to_js __tags_to_js x9654
    let cast_from = Obj.magic
  end
module AsyncGenerator =
  struct
    type ('T, 'TReturn, 'TNext) t =
      [ `AsyncGenerator of ('T * 'TReturn * 'TNext) 
      | `AsyncIterator of ('T * 'TReturn * 'TNext) ] intf
    let rec t_of_js :
      'T 'TReturn 'TNext .
        (Ojs.t -> 'T) ->
          (Ojs.t -> 'TReturn) ->
            (Ojs.t -> 'TNext) -> Ojs.t -> ('T, 'TReturn, 'TNext) t
      = fun _T -> fun _TReturn -> fun _TNext -> Obj.magic
    and t_to_js :
      'T 'TReturn 'TNext .
        ('T -> Ojs.t) ->
          ('TReturn -> Ojs.t) ->
            ('TNext -> Ojs.t) -> ('T, 'TReturn, 'TNext) t -> Ojs.t
      = fun _T -> fun _TReturn -> fun _TNext -> Obj.magic
    type ('T, 'TReturn, 'TNext) t_3 = ('T, 'TReturn, 'TNext) t
    let rec t_3_of_js :
      'T 'TReturn 'TNext .
        (Ojs.t -> 'T) ->
          (Ojs.t -> 'TReturn) ->
            (Ojs.t -> 'TNext) -> Ojs.t -> ('T, 'TReturn, 'TNext) t_3
      =
      fun (type __T) ->
        fun (type __TReturn) ->
          fun (type __TNext) ->
            fun (__T_of_js : Ojs.t -> __T) ->
              fun (__TReturn_of_js : Ojs.t -> __TReturn) ->
                fun (__TNext_of_js : Ojs.t -> __TNext) ->
                  fun (x9662 : Ojs.t) ->
                    t_of_js __T_of_js __TReturn_of_js __TNext_of_js x9662
    and t_3_to_js :
      'T 'TReturn 'TNext .
        ('T -> Ojs.t) ->
          ('TReturn -> Ojs.t) ->
            ('TNext -> Ojs.t) -> ('T, 'TReturn, 'TNext) t_3 -> Ojs.t
      =
      fun (type __T) ->
        fun (type __TReturn) ->
          fun (type __TNext) ->
            fun (__T_to_js : __T -> Ojs.t) ->
              fun (__TReturn_to_js : __TReturn -> Ojs.t) ->
                fun (__TNext_to_js : __TNext -> Ojs.t) ->
                  fun (x9658 : (__T, __TReturn, __TNext) t) ->
                    t_to_js __T_to_js __TReturn_to_js __TNext_to_js x9658
    type ('T, 'TReturn) t_2 = ('T, 'TReturn, unknown) t
    let rec t_2_of_js :
      'T 'TReturn .
        (Ojs.t -> 'T) -> (Ojs.t -> 'TReturn) -> Ojs.t -> ('T, 'TReturn) t_2
      =
      fun (type __T) ->
        fun (type __TReturn) ->
          fun (__T_of_js : Ojs.t -> __T) ->
            fun (__TReturn_of_js : Ojs.t -> __TReturn) ->
              fun (x9670 : Ojs.t) ->
                t_of_js __T_of_js __TReturn_of_js unknown_of_js x9670
    and t_2_to_js :
      'T 'TReturn .
        ('T -> Ojs.t) -> ('TReturn -> Ojs.t) -> ('T, 'TReturn) t_2 -> Ojs.t
      =
      fun (type __T) ->
        fun (type __TReturn) ->
          fun (__T_to_js : __T -> Ojs.t) ->
            fun (__TReturn_to_js : __TReturn -> Ojs.t) ->
              fun (x9666 : (__T, __TReturn, unknown) t) ->
                t_to_js __T_to_js __TReturn_to_js unknown_to_js x9666
    type 'T t_1 = ('T, any, unknown) t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 =
      fun (type __T) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x9678 : Ojs.t) ->
            t_of_js __T_of_js any_of_js unknown_of_js x9678
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t =
      fun (type __T) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x9674 : (__T, any, unknown) t) ->
            t_to_js __T_to_js any_to_js unknown_to_js x9674
    type t_0 = (unknown, any, unknown) t
    let rec t_0_of_js : Ojs.t -> t_0 =
      fun (x9686 : Ojs.t) ->
        t_of_js unknown_of_js any_of_js unknown_of_js x9686
    and t_0_to_js : t_0 -> Ojs.t =
      fun (x9682 : (unknown, any, unknown) t) ->
        t_to_js unknown_to_js any_to_js unknown_to_js x9682
    type ('T, 'TReturn, 'TNext) tags =
      [ `AsyncGenerator of ('T * 'TReturn * 'TNext) 
      | `AsyncIterator of ('T * 'TReturn * 'TNext) ]
    type ('T, 'TReturn, 'TNext) tags_3 = ('T, 'TReturn, 'TNext) tags
    type ('T, 'TReturn) tags_2 = ('T, 'TReturn, unknown) tags
    type 'T tags_1 = ('T, any, unknown) tags
    type tags_0 = (unknown, any, unknown) tags
    type ('tags, 'T, 'TReturn, 'TNext) this =
      'tags intf constraint 'tags =
                  [> `AsyncGenerator of ('T * 'TReturn * 'TNext) ]
    let rec this_of_js :
      'tags 'T 'TReturn 'TNext .
        (Ojs.t -> 'tags) ->
          (Ojs.t -> 'T) ->
            (Ojs.t -> 'TReturn) ->
              (Ojs.t -> 'TNext) ->
                Ojs.t -> ('tags, 'T, 'TReturn, 'TNext) this
      =
      fun (type __tags) ->
        fun (type __T) ->
          fun (type __TReturn) ->
            fun (type __TNext) ->
              fun (__tags_of_js : Ojs.t -> __tags) ->
                fun (__T_of_js : Ojs.t -> __T) ->
                  fun (__TReturn_of_js : Ojs.t -> __TReturn) ->
                    fun (__TNext_of_js : Ojs.t -> __TNext) ->
                      fun (x9692 : Ojs.t) -> intf_of_js __tags_of_js x9692
    and this_to_js :
      'tags 'T 'TReturn 'TNext .
        ('tags -> Ojs.t) ->
          ('T -> Ojs.t) ->
            ('TReturn -> Ojs.t) ->
              ('TNext -> Ojs.t) ->
                ('tags, 'T, 'TReturn, 'TNext) this -> Ojs.t
      =
      fun (type __tags) ->
        fun (type __T) ->
          fun (type __TReturn) ->
            fun (type __TNext) ->
              fun (__tags_to_js : __tags -> Ojs.t) ->
                fun (__T_to_js : __T -> Ojs.t) ->
                  fun (__TReturn_to_js : __TReturn -> Ojs.t) ->
                    fun (__TNext_to_js : __TNext -> Ojs.t) ->
                      fun (x9690 : __tags intf) ->
                        intf_to_js __tags_to_js x9690
    let (next :
      ('tags, 'T, 'TReturn, 'TNext) this ->
        args:any list -> ('T, 'TReturn) IteratorResult.t Promise.t)
      =
      fun (x9697 : ('tags, 'T, 'TReturn, 'TNext) this) ->
        fun ~args:(x9694 : any list) ->
          Promise.t_of_js
            (fun (x9703 : Ojs.t) ->
               IteratorResult.t_of_js Obj.magic Obj.magic x9703)
            (let x9702 =
               this_to_js Obj.magic Obj.magic Obj.magic Obj.magic x9697 in
             Ojs.call (Ojs.get_prop_ascii x9702 "next") "apply"
               [|x9702;((let x9695 =
                           Ojs.new_obj
                             (Ojs.get_prop_ascii Ojs.global "Array") 
                             [||] in
                         List.iter
                           (fun (x9696 : any) ->
                              ignore
                                (Ojs.call x9695 "push" [|(any_to_js x9696)|]))
                           x9694;
                         x9695))|])
    let (return :
      ('tags, 'T, 'TReturn, 'TNext) this ->
        value:[ `U1 of 'TReturn  | `U2 of 'TReturn PromiseLike.t ] ->
          ('T, 'TReturn) IteratorResult.t Promise.t)
      =
      fun (x9710 : ('tags, 'T, 'TReturn, 'TNext) this) ->
        fun
          ~value:(x9706 :
                   [ `U1 of 'TReturn  | `U2 of 'TReturn PromiseLike.t ])
          ->
          Promise.t_of_js
            (fun (x9715 : Ojs.t) ->
               IteratorResult.t_of_js Obj.magic Obj.magic x9715)
            (Ojs.call
               (this_to_js Obj.magic Obj.magic Obj.magic Obj.magic x9710)
               "return"
               [|((match x9706 with
                   | `U1 x9707 -> Obj.magic x9707
                   | `U2 x9708 -> PromiseLike.t_to_js Obj.magic x9708))|])
    let (throw :
      ('tags, 'T, 'TReturn, 'TNext) this ->
        e:any -> ('T, 'TReturn) IteratorResult.t Promise.t)
      =
      fun (x9719 : ('tags, 'T, 'TReturn, 'TNext) this) ->
        fun ~e:(x9718 : any) ->
          Promise.t_of_js
            (fun (x9724 : Ojs.t) ->
               IteratorResult.t_of_js Obj.magic Obj.magic x9724)
            (Ojs.call
               (this_to_js Obj.magic Obj.magic Obj.magic Obj.magic x9719)
               "throw" [|(any_to_js x9718)|])
    let cast_from = Obj.magic
  end
module AsyncGeneratorFunction =
  struct
    type t = [ `AsyncGeneratorFunction ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x9728 : Ojs.t) -> t_of_js x9728
    and t_0_to_js : t_0 -> Ojs.t = fun (x9727 : t) -> t_to_js x9727
    type tags = [ `AsyncGeneratorFunction ]
    type tags_0 = tags
    type 'tags this =
      'tags intf constraint 'tags = [> `AsyncGeneratorFunction ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x9731 : Ojs.t) -> intf_of_js __tags_of_js x9731
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x9729 : __tags intf) -> intf_to_js __tags_to_js x9729
    let (create : 'tags this -> args:any list -> AsyncGenerator.t_0) =
      fun (x9736 : 'tags this) ->
        fun ~args:(x9733 : any list) ->
          AsyncGenerator.t_0_of_js
            (Ojs.new_obj_arr (this_to_js Obj.magic x9736)
               (let x9734 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                List.iter
                  (fun (x9735 : any) ->
                     ignore (Ojs.call x9734 "push" [|(any_to_js x9735)|]))
                  x9733;
                x9734))
    let (apply : 'tags this -> args:any list -> AsyncGenerator.t_0) =
      fun (x9741 : 'tags this) ->
        fun ~args:(x9738 : any list) ->
          AsyncGenerator.t_0_of_js
            (Ojs.call (this_to_js Obj.magic x9741) "apply"
               [|Ojs.null;((let x9739 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            List.iter
                              (fun (x9740 : any) ->
                                 ignore
                                   (Ojs.call x9739 "push"
                                      [|(any_to_js x9740)|])) x9738;
                            x9739))|])
    let (get_length : 'tags this -> float) =
      fun (x9743 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x9743) "length")
    let (get_name : 'tags this -> string) =
      fun (x9745 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x9745) "name")
    let (get_prototype : 'tags this -> AsyncGenerator.t_0) =
      fun (x9747 : 'tags this) ->
        AsyncGenerator.t_0_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x9747) "prototype")
    let cast_from = Obj.magic
  end
module AsyncGeneratorFunctionConstructor =
  struct
    type t = [ `AsyncGeneratorFunctionConstructor ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x9750 : Ojs.t) -> t_of_js x9750
    and t_0_to_js : t_0 -> Ojs.t = fun (x9749 : t) -> t_to_js x9749
    type tags = [ `AsyncGeneratorFunctionConstructor ]
    type tags_0 = tags
    type 'tags this =
      'tags intf constraint 'tags = [> `AsyncGeneratorFunctionConstructor ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x9753 : Ojs.t) -> intf_of_js __tags_of_js x9753
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x9751 : __tags intf) -> intf_to_js __tags_to_js x9751
    let (create : 'tags this -> args:string list -> AsyncGeneratorFunction.t)
      =
      fun (x9758 : 'tags this) ->
        fun ~args:(x9755 : string list) ->
          AsyncGeneratorFunction.t_of_js
            (Ojs.new_obj_arr (this_to_js Obj.magic x9758)
               (let x9756 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                List.iter
                  (fun (x9757 : string) ->
                     ignore
                       (Ojs.call x9756 "push" [|(Ojs.string_to_js x9757)|]))
                  x9755;
                x9756))
    let (apply : 'tags this -> args:string list -> AsyncGeneratorFunction.t)
      =
      fun (x9763 : 'tags this) ->
        fun ~args:(x9760 : string list) ->
          AsyncGeneratorFunction.t_of_js
            (Ojs.call (this_to_js Obj.magic x9763) "apply"
               [|Ojs.null;((let x9761 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            List.iter
                              (fun (x9762 : string) ->
                                 ignore
                                   (Ojs.call x9761 "push"
                                      [|(Ojs.string_to_js x9762)|])) x9760;
                            x9761))|])
    let (get_length : 'tags this -> float) =
      fun (x9765 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x9765) "length")
    let (get_name : 'tags this -> string) =
      fun (x9767 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x9767) "name")
    let (get_prototype : 'tags this -> AsyncGeneratorFunction.t) =
      fun (x9769 : 'tags this) ->
        AsyncGeneratorFunction.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x9769) "prototype")
    let cast_from = Obj.magic
  end
module ArrayBufferView =
  struct
    type t = [ `ArrayBufferView ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x9772 : Ojs.t) -> t_of_js x9772
    and t_0_to_js : t_0 -> Ojs.t = fun (x9771 : t) -> t_to_js x9771
    type tags = [ `ArrayBufferView ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `ArrayBufferView ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x9775 : Ojs.t) -> intf_of_js __tags_of_js x9775
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x9773 : __tags intf) -> intf_to_js __tags_to_js x9773
    let (get_buffer : 'tags this -> ArrayBufferLike.t) =
      fun (x9777 : 'tags this) ->
        ArrayBufferLike.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x9777) "buffer")
    let (set_buffer : 'tags this -> ArrayBufferLike.t -> unit) =
      fun (x9779 : 'tags this) ->
        fun (x9780 : ArrayBufferLike.t) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x9779) "buffer"
            (ArrayBufferLike.t_to_js x9780)
    let (get_byteLength : 'tags this -> float) =
      fun (x9782 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x9782) "byteLength")
    let (set_byteLength : 'tags this -> float -> unit) =
      fun (x9784 : 'tags this) ->
        fun (x9785 : float) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x9784) "byteLength"
            (Ojs.float_to_js x9785)
    let (get_byteOffset : 'tags this -> float) =
      fun (x9787 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x9787) "byteOffset")
    let (set_byteOffset : 'tags this -> float -> unit) =
      fun (x9789 : 'tags this) ->
        fun (x9790 : float) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x9789) "byteOffset"
            (Ojs.float_to_js x9790)
    let (create :
      buffer:ArrayBufferLike.t ->
        byteLength:float -> byteOffset:float -> unit -> t)
      =
      fun ~buffer:(x9792 : ArrayBufferLike.t) ->
        fun ~byteLength:(x9793 : float) ->
          fun ~byteOffset:(x9794 : float) ->
            fun () ->
              let x9795 = Ojs.empty_obj () in
              Ojs.set_prop_ascii x9795 "buffer"
                (ArrayBufferLike.t_to_js x9792);
              Ojs.set_prop_ascii x9795 "byteLength" (Ojs.float_to_js x9793);
              Ojs.set_prop_ascii x9795 "byteOffset" (Ojs.float_to_js x9794);
              t_of_js x9795
    let cast_from = Obj.magic
  end
module ArrayBufferTypes =
  struct
    type t = [ `ArrayBufferTypes ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x9797 : Ojs.t) -> t_of_js x9797
    and t_0_to_js : t_0 -> Ojs.t = fun (x9796 : t) -> t_to_js x9796
    type tags = [ `ArrayBufferTypes ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `ArrayBufferTypes ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x9800 : Ojs.t) -> intf_of_js __tags_of_js x9800
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x9798 : __tags intf) -> intf_to_js __tags_to_js x9798
    let (get_SharedArrayBuffer : 'tags this -> SharedArrayBuffer.t) =
      fun (x9802 : 'tags this) ->
        SharedArrayBuffer.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x9802)
             "SharedArrayBuffer")
    let (set_SharedArrayBuffer : 'tags this -> SharedArrayBuffer.t -> unit) =
      fun (x9804 : 'tags this) ->
        fun (x9805 : SharedArrayBuffer.t) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x9804) "SharedArrayBuffer"
            (SharedArrayBuffer.t_to_js x9805)
    let (get_ArrayBuffer : 'tags this -> ArrayBuffer.t) =
      fun (x9807 : 'tags this) ->
        ArrayBuffer.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x9807) "ArrayBuffer")
    let (set_ArrayBuffer : 'tags this -> ArrayBuffer.t -> unit) =
      fun (x9809 : 'tags this) ->
        fun (x9810 : ArrayBuffer.t) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x9809) "ArrayBuffer"
            (ArrayBuffer.t_to_js x9810)
    let (create :
      sharedArrayBuffer:SharedArrayBuffer.t ->
        arrayBuffer:ArrayBuffer.t -> unit -> t)
      =
      fun ~sharedArrayBuffer:(x9812 : SharedArrayBuffer.t) ->
        fun ~arrayBuffer:(x9813 : ArrayBuffer.t) ->
          fun () ->
            let x9814 = Ojs.empty_obj () in
            Ojs.set_prop_ascii x9814 "SharedArrayBuffer"
              (SharedArrayBuffer.t_to_js x9812);
            Ojs.set_prop_ascii x9814 "ArrayBuffer"
              (ArrayBuffer.t_to_js x9813);
            t_of_js x9814
    let cast_from = Obj.magic
  end
module AggregateError =
  struct
    type t = [ `AggregateError  | `Error ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x9816 : Ojs.t) -> t_of_js x9816
    and t_0_to_js : t_0 -> Ojs.t = fun (x9815 : t) -> t_to_js x9815
    type tags = [ `AggregateError  | `Error ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `AggregateError ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x9819 : Ojs.t) -> intf_of_js __tags_of_js x9819
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x9817 : __tags intf) -> intf_to_js __tags_to_js x9817
    let (get_errors : 'tags this -> any list) =
      fun (x9821 : 'tags this) ->
        Ojs.list_of_js any_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x9821) "errors")
    let (set_errors : 'tags this -> any list -> unit) =
      fun (x9824 : 'tags this) ->
        fun (x9825 : any list) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x9824) "errors"
            (Ojs.list_to_js any_to_js x9825)
    let (get_errors' : 'tags this -> any list) =
      fun (x9828 : 'tags this) ->
        Ojs.list_of_js any_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x9828) "errors")
    let (set_errors' : 'tags this -> any list -> unit) =
      fun (x9831 : 'tags this) ->
        fun (x9832 : any list) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x9831) "errors"
            (Ojs.list_to_js any_to_js x9832)
    let (create : errors:any Iterable.t -> ?message:string -> unit -> t) =
      fun ~errors:(x9835 : any Iterable.t) ->
        fun ?message:(x9836 : string option) ->
          fun () ->
            t_of_js
              (Ojs.new_obj_arr
                 (Ojs.get_prop_ascii Ojs.global "AggregateError")
                 (let x9837 =
                    Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                  ignore
                    (Ojs.call x9837 "push"
                       [|(Iterable.t_to_js any_to_js x9835)|]);
                  (match x9836 with
                   | Some x9838 ->
                       ignore
                         (Ojs.call x9837 "push" [|(Ojs.string_to_js x9838)|])
                   | None -> ());
                  x9837))
    let (invoke : errors:any Iterable.t -> ?message:string -> unit -> t) =
      fun ~errors:(x9840 : any Iterable.t) ->
        fun ?message:(x9841 : string option) ->
          fun () ->
            t_of_js
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "AggregateError")
                 "apply"
                 [|Ojs.null;((let x9842 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x9842 "push"
                                   [|(Iterable.t_to_js any_to_js x9840)|]);
                              (match x9841 with
                               | Some x9843 ->
                                   ignore
                                     (Ojs.call x9842 "push"
                                        [|(Ojs.string_to_js x9843)|])
                               | None -> ());
                              x9842))|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "AggregateError") "prototype")
    let (create' :
      errors:any Iterable.t ->
        ?message:string -> ?options:ErrorOptions.t -> unit -> t)
      =
      fun ~errors:(x9845 : any Iterable.t) ->
        fun ?message:(x9846 : string option) ->
          fun ?options:(x9847 : ErrorOptions.t option) ->
            fun () ->
              t_of_js
                (Ojs.new_obj_arr
                   (Ojs.get_prop_ascii Ojs.global "AggregateError")
                   (let x9848 =
                      Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                        [||] in
                    ignore
                      (Ojs.call x9848 "push"
                         [|(Iterable.t_to_js any_to_js x9845)|]);
                    (match x9846 with
                     | Some x9850 ->
                         ignore
                           (Ojs.call x9848 "push"
                              [|(Ojs.string_to_js x9850)|])
                     | None -> ());
                    (match x9847 with
                     | Some x9849 ->
                         ignore
                           (Ojs.call x9848 "push"
                              [|(ErrorOptions.t_to_js x9849)|])
                     | None -> ());
                    x9848))
    let (invoke' :
      errors:any Iterable.t ->
        ?message:string -> ?options:ErrorOptions.t -> unit -> t)
      =
      fun ~errors:(x9852 : any Iterable.t) ->
        fun ?message:(x9853 : string option) ->
          fun ?options:(x9854 : ErrorOptions.t option) ->
            fun () ->
              t_of_js
                (Ojs.call (Ojs.get_prop_ascii Ojs.global "AggregateError")
                   "apply"
                   [|Ojs.null;((let x9855 =
                                  Ojs.new_obj
                                    (Ojs.get_prop_ascii Ojs.global "Array")
                                    [||] in
                                ignore
                                  (Ojs.call x9855 "push"
                                     [|(Iterable.t_to_js any_to_js x9852)|]);
                                (match x9853 with
                                 | Some x9857 ->
                                     ignore
                                       (Ojs.call x9855 "push"
                                          [|(Ojs.string_to_js x9857)|])
                                 | None -> ());
                                (match x9854 with
                                 | Some x9856 ->
                                     ignore
                                       (Ojs.call x9855 "push"
                                          [|(ErrorOptions.t_to_js x9856)|])
                                 | None -> ());
                                x9855))|])
    let (create'' : errors:any Iterable.t -> ?message:string -> unit -> t) =
      fun ~errors:(x9859 : any Iterable.t) ->
        fun ?message:(x9860 : string option) ->
          fun () ->
            t_of_js
              (Ojs.new_obj_arr
                 (Ojs.get_prop_ascii Ojs.global "AggregateError")
                 (let x9861 =
                    Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                  ignore
                    (Ojs.call x9861 "push"
                       [|(Iterable.t_to_js any_to_js x9859)|]);
                  (match x9860 with
                   | Some x9862 ->
                       ignore
                         (Ojs.call x9861 "push" [|(Ojs.string_to_js x9862)|])
                   | None -> ());
                  x9861))
    let (invoke'' : errors:any Iterable.t -> ?message:string -> unit -> t) =
      fun ~errors:(x9864 : any Iterable.t) ->
        fun ?message:(x9865 : string option) ->
          fun () ->
            t_of_js
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "AggregateError")
                 "apply"
                 [|Ojs.null;((let x9866 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x9866 "push"
                                   [|(Iterable.t_to_js any_to_js x9864)|]);
                              (match x9865 with
                               | Some x9867 ->
                                   ignore
                                     (Ojs.call x9866 "push"
                                        [|(Ojs.string_to_js x9867)|])
                               | None -> ());
                              x9866))|])
    let (prototype' : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "AggregateError") "prototype")
    let (create''' : errors:any list -> errors:any list -> unit -> t) =
      fun ~errors:(x9869 : any list) ->
        fun ~errors:(x9870 : any list) ->
          fun () ->
            let x9871 = Ojs.empty_obj () in
            Ojs.set_prop_ascii x9871 "errors"
              (Ojs.list_to_js any_to_js x9869);
            Ojs.set_prop_ascii x9871 "errors"
              (Ojs.list_to_js any_to_js x9870);
            t_of_js x9871
    let cast_from = Obj.magic
  end
module ReadonlyArray_Make(T:Ojs.T) =
  struct
    type 'T parent = 'T ReadonlyArray.t
    let rec parent_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T parent =
      fun (type __T) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x9876 : Ojs.t) -> ReadonlyArray.t_of_js __T_of_js x9876
    and parent_to_js : 'T . ('T -> Ojs.t) -> 'T parent -> Ojs.t =
      fun (type __T) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x9874 : __T ReadonlyArray.t) ->
            ReadonlyArray.t_to_js __T_to_js x9874
    type t = T.t parent
    let rec t_of_js : Ojs.t -> t =
      fun (x9880 : Ojs.t) -> parent_of_js T.t_of_js x9880
    and t_to_js : t -> Ojs.t =
      fun (x9878 : T.t parent) -> parent_to_js T.t_to_js x9878
    let (at : t -> index:float -> T.t option) =
      fun (x9883 : t) ->
        fun ~index:(x9882 : float) ->
          Ojs.option_of_js T.t_of_js
            (Ojs.call (t_to_js x9883) "at" [|(Ojs.float_to_js x9882)|])
    let (flatMap :
      t ->
        callback:(this:'This ->
                    value:T.t ->
                      index:float ->
                        array:T.t list -> [ `U1 of 'U  | `U2 of 'U parent ])
          -> ?thisArg:'This -> unit -> 'U list)
      =
      fun (x9897 : t) ->
        fun
          ~callback:(x9885 :
                      this:'This ->
                        value:T.t ->
                          index:float ->
                            array:T.t list ->
                              [ `U1 of 'U  | `U2 of 'U parent ])
          ->
          fun ?thisArg:(x9886 : 'This option) ->
            fun () ->
              Ojs.list_of_js Obj.magic
                (let x9898 = t_to_js x9897 in
                 Ojs.call (Ojs.get_prop_ascii x9898 "flatMap") "apply"
                   [|x9898;((let x9887 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x9887 "push"
                                  [|(Ojs.fun_to_js 4
                                       (fun (x9889 : Ojs.t) ->
                                          fun (x9890 : Ojs.t) ->
                                            fun (x9891 : Ojs.t) ->
                                              fun (x9892 : Ojs.t) ->
                                                match x9885
                                                        ~this:(Obj.magic
                                                                 x9889)
                                                        ~value:(T.t_of_js
                                                                  x9890)
                                                        ~index:(Ojs.float_of_js
                                                                  x9891)
                                                        ~array:(Ojs.list_of_js
                                                                  T.t_of_js
                                                                  x9892)
                                                with
                                                | `U1 x9894 ->
                                                    Obj.magic x9894
                                                | `U2 x9895 ->
                                                    parent_to_js Obj.magic
                                                      x9895))|]);
                             (match x9886 with
                              | Some x9888 ->
                                  ignore
                                    (Ojs.call x9887 "push"
                                       [|(Obj.magic x9888)|])
                              | None -> ());
                             x9887))|])
    let (flat :
      t -> this:'A -> ?depth:'D -> unit -> ('A, 'D) FlatArray.t list) =
      fun (x9904 : t) ->
        fun ~this:(x9900 : 'A) ->
          fun ?depth:(x9901 : 'D option) ->
            fun () ->
              Ojs.list_of_js
                (fun (x9906 : Ojs.t) ->
                   FlatArray.t_of_js Obj.magic Obj.magic x9906)
                (let x9905 = t_to_js x9904 in
                 Ojs.call (Ojs.get_prop_ascii x9905 "flat") "apply"
                   [|x9905;((let x9902 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x9902 "push" [|(Obj.magic x9900)|]);
                             (match x9901 with
                              | Some x9903 ->
                                  ignore
                                    (Ojs.call x9902 "push"
                                       [|(Obj.magic x9903)|])
                              | None -> ());
                             x9902))|])
    let (includes :
      t -> searchElement:T.t -> ?fromIndex:float -> unit -> bool) =
      fun (x9913 : t) ->
        fun ~searchElement:(x9909 : T.t) ->
          fun ?fromIndex:(x9910 : float option) ->
            fun () ->
              Ojs.bool_of_js
                (let x9914 = t_to_js x9913 in
                 Ojs.call (Ojs.get_prop_ascii x9914 "includes") "apply"
                   [|x9914;((let x9911 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x9911 "push" [|(T.t_to_js x9909)|]);
                             (match x9910 with
                              | Some x9912 ->
                                  ignore
                                    (Ojs.call x9911 "push"
                                       [|(Ojs.float_to_js x9912)|])
                              | None -> ());
                             x9911))|])
    let (entries : t -> (float * T.t) IterableIterator.t) =
      fun (x9915 : t) ->
        IterableIterator.t_of_js
          (fun (x9916 : Ojs.t) ->
             let x9917 = x9916 in
             ((Ojs.float_of_js (Ojs.array_get x9917 0)),
               (T.t_of_js (Ojs.array_get x9917 1))))
          (Ojs.call (t_to_js x9915) "entries" [||])
    let (keys : t -> float IterableIterator.t) =
      fun (x9918 : t) ->
        IterableIterator.t_of_js Ojs.float_of_js
          (Ojs.call (t_to_js x9918) "keys" [||])
    let (values : t -> T.t IterableIterator.t) =
      fun (x9920 : t) ->
        IterableIterator.t_of_js T.t_of_js
          (Ojs.call (t_to_js x9920) "values" [||])
    let (find :
      t ->
        predicate:(this:unit ->
                     value:T.t -> index:float -> obj:T.t list -> bool)
          -> ?thisArg:any -> unit -> 'S option)
      =
      fun (x9931 : t) ->
        fun
          ~predicate:(x9922 :
                       this:unit ->
                         value:T.t -> index:float -> obj:T.t list -> bool)
          ->
          fun ?thisArg:(x9923 : any option) ->
            fun () ->
              Ojs.option_of_js Obj.magic
                (let x9932 = t_to_js x9931 in
                 Ojs.call (Ojs.get_prop_ascii x9932 "find") "apply"
                   [|x9932;((let x9924 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x9924 "push"
                                  [|(Ojs.fun_to_js 4
                                       (fun (x9926 : Ojs.t) ->
                                          fun (x9927 : Ojs.t) ->
                                            fun (x9928 : Ojs.t) ->
                                              fun (x9929 : Ojs.t) ->
                                                Ojs.bool_to_js
                                                  (x9922
                                                     ~this:(Ojs.unit_of_js
                                                              x9926)
                                                     ~value:(T.t_of_js x9927)
                                                     ~index:(Ojs.float_of_js
                                                               x9928)
                                                     ~obj:(Ojs.list_of_js
                                                             T.t_of_js x9929))))|]);
                             (match x9923 with
                              | Some x9925 ->
                                  ignore
                                    (Ojs.call x9924 "push"
                                       [|(any_to_js x9925)|])
                              | None -> ());
                             x9924))|])
    let (find :
      t ->
        predicate:(value:T.t -> index:float -> obj:T.t list -> unknown) ->
          ?thisArg:any -> unit -> T.t option)
      =
      fun (x9942 : t) ->
        fun
          ~predicate:(x9934 :
                       value:T.t -> index:float -> obj:T.t list -> unknown)
          ->
          fun ?thisArg:(x9935 : any option) ->
            fun () ->
              Ojs.option_of_js T.t_of_js
                (let x9943 = t_to_js x9942 in
                 Ojs.call (Ojs.get_prop_ascii x9943 "find") "apply"
                   [|x9943;((let x9936 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x9936 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x9938 : Ojs.t) ->
                                          fun (x9939 : Ojs.t) ->
                                            fun (x9940 : Ojs.t) ->
                                              unknown_to_js
                                                (x9934
                                                   ~value:(T.t_of_js x9938)
                                                   ~index:(Ojs.float_of_js
                                                             x9939)
                                                   ~obj:(Ojs.list_of_js
                                                           T.t_of_js x9940))))|]);
                             (match x9935 with
                              | Some x9937 ->
                                  ignore
                                    (Ojs.call x9936 "push"
                                       [|(any_to_js x9937)|])
                              | None -> ());
                             x9936))|])
    let (findIndex :
      t ->
        predicate:(value:T.t -> index:float -> obj:T.t list -> unknown) ->
          ?thisArg:any -> unit -> float)
      =
      fun (x9953 : t) ->
        fun
          ~predicate:(x9945 :
                       value:T.t -> index:float -> obj:T.t list -> unknown)
          ->
          fun ?thisArg:(x9946 : any option) ->
            fun () ->
              Ojs.float_of_js
                (let x9954 = t_to_js x9953 in
                 Ojs.call (Ojs.get_prop_ascii x9954 "findIndex") "apply"
                   [|x9954;((let x9947 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x9947 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x9949 : Ojs.t) ->
                                          fun (x9950 : Ojs.t) ->
                                            fun (x9951 : Ojs.t) ->
                                              unknown_to_js
                                                (x9945
                                                   ~value:(T.t_of_js x9949)
                                                   ~index:(Ojs.float_of_js
                                                             x9950)
                                                   ~obj:(Ojs.list_of_js
                                                           T.t_of_js x9951))))|]);
                             (match x9946 with
                              | Some x9948 ->
                                  ignore
                                    (Ojs.call x9947 "push"
                                       [|(any_to_js x9948)|])
                              | None -> ());
                             x9947))|])
    let (get_length : t -> float) =
      fun (x9955 : t) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x9955) "length")
    let (toString : t -> string) =
      fun (x9956 : t) ->
        Ojs.string_of_js (Ojs.call (t_to_js x9956) "toString" [||])
    let (toLocaleString : t -> string) =
      fun (x9957 : t) ->
        Ojs.string_of_js (Ojs.call (t_to_js x9957) "toLocaleString" [||])
    let (concat : t -> items:T.t ConcatArray.t list -> T.t list) =
      fun (x9962 : t) ->
        fun ~items:(x9958 : T.t ConcatArray.t list) ->
          Ojs.list_of_js T.t_of_js
            (let x9963 = t_to_js x9962 in
             Ojs.call (Ojs.get_prop_ascii x9963 "concat") "apply"
               [|x9963;((let x9959 =
                           Ojs.new_obj
                             (Ojs.get_prop_ascii Ojs.global "Array") 
                             [||] in
                         List.iter
                           (fun (x9960 : T.t ConcatArray.t) ->
                              ignore
                                (Ojs.call x9959 "push"
                                   [|(ConcatArray.t_to_js T.t_to_js x9960)|]))
                           x9958;
                         x9959))|])
    let (concat :
      t -> items:[ `U1 of T.t  | `U2 of T.t ConcatArray.t ] list -> T.t list)
      =
      fun (x9971 : t) ->
        fun ~items:(x9965 : [ `U1 of T.t  | `U2 of T.t ConcatArray.t ] list)
          ->
          Ojs.list_of_js T.t_of_js
            (let x9972 = t_to_js x9971 in
             Ojs.call (Ojs.get_prop_ascii x9972 "concat") "apply"
               [|x9972;((let x9966 =
                           Ojs.new_obj
                             (Ojs.get_prop_ascii Ojs.global "Array") 
                             [||] in
                         List.iter
                           (fun
                              (x9967 :
                                [ `U1 of T.t  | `U2 of T.t ConcatArray.t ])
                              ->
                              ignore
                                (Ojs.call x9966 "push"
                                   [|((match x9967 with
                                       | `U1 x9968 -> T.t_to_js x9968
                                       | `U2 x9969 ->
                                           ConcatArray.t_to_js T.t_to_js
                                             x9969))|])) x9965;
                         x9966))|])
    let (join : t -> ?separator:string -> unit -> string) =
      fun (x9977 : t) ->
        fun ?separator:(x9974 : string option) ->
          fun () ->
            Ojs.string_of_js
              (let x9978 = t_to_js x9977 in
               Ojs.call (Ojs.get_prop_ascii x9978 "join") "apply"
                 [|x9978;((let x9975 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x9974 with
                            | Some x9976 ->
                                ignore
                                  (Ojs.call x9975 "push"
                                     [|(Ojs.string_to_js x9976)|])
                            | None -> ());
                           x9975))|])
    let (slice : t -> ?start:float -> ?end_:float -> unit -> T.t list) =
      fun (x9984 : t) ->
        fun ?start:(x9979 : float option) ->
          fun ?end_:(x9980 : float option) ->
            fun () ->
              Ojs.list_of_js T.t_of_js
                (let x9985 = t_to_js x9984 in
                 Ojs.call (Ojs.get_prop_ascii x9985 "slice") "apply"
                   [|x9985;((let x9981 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x9979 with
                              | Some x9983 ->
                                  ignore
                                    (Ojs.call x9981 "push"
                                       [|(Ojs.float_to_js x9983)|])
                              | None -> ());
                             (match x9980 with
                              | Some x9982 ->
                                  ignore
                                    (Ojs.call x9981 "push"
                                       [|(Ojs.float_to_js x9982)|])
                              | None -> ());
                             x9981))|])
    let (indexOf :
      t -> searchElement:T.t -> ?fromIndex:float -> unit -> float) =
      fun (x9991 : t) ->
        fun ~searchElement:(x9987 : T.t) ->
          fun ?fromIndex:(x9988 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x9992 = t_to_js x9991 in
                 Ojs.call (Ojs.get_prop_ascii x9992 "indexOf") "apply"
                   [|x9992;((let x9989 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x9989 "push" [|(T.t_to_js x9987)|]);
                             (match x9988 with
                              | Some x9990 ->
                                  ignore
                                    (Ojs.call x9989 "push"
                                       [|(Ojs.float_to_js x9990)|])
                              | None -> ());
                             x9989))|])
    let (lastIndexOf :
      t -> searchElement:T.t -> ?fromIndex:float -> unit -> float) =
      fun (x9997 : t) ->
        fun ~searchElement:(x9993 : T.t) ->
          fun ?fromIndex:(x9994 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x9998 = t_to_js x9997 in
                 Ojs.call (Ojs.get_prop_ascii x9998 "lastIndexOf") "apply"
                   [|x9998;((let x9995 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x9995 "push" [|(T.t_to_js x9993)|]);
                             (match x9994 with
                              | Some x9996 ->
                                  ignore
                                    (Ojs.call x9995 "push"
                                       [|(Ojs.float_to_js x9996)|])
                              | None -> ());
                             x9995))|])
    let (every :
      t ->
        predicate:(value:T.t -> index:float -> array:T.t list -> bool) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x10007 : t) ->
        fun
          ~predicate:(x9999 :
                       value:T.t -> index:float -> array:T.t list -> bool)
          ->
          fun ?thisArg:(x10000 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x10008 = t_to_js x10007 in
                 Ojs.call (Ojs.get_prop_ascii x10008 "every") "apply"
                   [|x10008;((let x10001 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x10001 "push"
                                   [|(Ojs.fun_to_js 3
                                        (fun (x10003 : Ojs.t) ->
                                           fun (x10004 : Ojs.t) ->
                                             fun (x10005 : Ojs.t) ->
                                               Ojs.bool_to_js
                                                 (x9999
                                                    ~value:(T.t_of_js x10003)
                                                    ~index:(Ojs.float_of_js
                                                              x10004)
                                                    ~array:(Ojs.list_of_js
                                                              T.t_of_js
                                                              x10005))))|]);
                              (match x10000 with
                               | Some x10002 ->
                                   ignore
                                     (Ojs.call x10001 "push"
                                        [|(any_to_js x10002)|])
                               | None -> ());
                              x10001))|])
    let (every :
      t ->
        predicate:(value:T.t -> index:float -> array:T.t list -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x10017 : t) ->
        fun
          ~predicate:(x10009 :
                       value:T.t -> index:float -> array:T.t list -> unknown)
          ->
          fun ?thisArg:(x10010 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x10018 = t_to_js x10017 in
                 Ojs.call (Ojs.get_prop_ascii x10018 "every") "apply"
                   [|x10018;((let x10011 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x10011 "push"
                                   [|(Ojs.fun_to_js 3
                                        (fun (x10013 : Ojs.t) ->
                                           fun (x10014 : Ojs.t) ->
                                             fun (x10015 : Ojs.t) ->
                                               unknown_to_js
                                                 (x10009
                                                    ~value:(T.t_of_js x10013)
                                                    ~index:(Ojs.float_of_js
                                                              x10014)
                                                    ~array:(Ojs.list_of_js
                                                              T.t_of_js
                                                              x10015))))|]);
                              (match x10010 with
                               | Some x10012 ->
                                   ignore
                                     (Ojs.call x10011 "push"
                                        [|(any_to_js x10012)|])
                               | None -> ());
                              x10011))|])
    let (some :
      t ->
        predicate:(value:T.t -> index:float -> array:T.t list -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x10027 : t) ->
        fun
          ~predicate:(x10019 :
                       value:T.t -> index:float -> array:T.t list -> unknown)
          ->
          fun ?thisArg:(x10020 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x10028 = t_to_js x10027 in
                 Ojs.call (Ojs.get_prop_ascii x10028 "some") "apply"
                   [|x10028;((let x10021 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x10021 "push"
                                   [|(Ojs.fun_to_js 3
                                        (fun (x10023 : Ojs.t) ->
                                           fun (x10024 : Ojs.t) ->
                                             fun (x10025 : Ojs.t) ->
                                               unknown_to_js
                                                 (x10019
                                                    ~value:(T.t_of_js x10023)
                                                    ~index:(Ojs.float_of_js
                                                              x10024)
                                                    ~array:(Ojs.list_of_js
                                                              T.t_of_js
                                                              x10025))))|]);
                              (match x10020 with
                               | Some x10022 ->
                                   ignore
                                     (Ojs.call x10021 "push"
                                        [|(any_to_js x10022)|])
                               | None -> ());
                              x10021))|])
    let (forEach :
      t ->
        callbackfn:(value:T.t -> index:float -> array:T.t list -> unit) ->
          ?thisArg:any -> unit -> unit)
      =
      fun (x10037 : t) ->
        fun
          ~callbackfn:(x10029 :
                        value:T.t -> index:float -> array:T.t list -> unit)
          ->
          fun ?thisArg:(x10030 : any option) ->
            fun () ->
              ignore
                (let x10038 = t_to_js x10037 in
                 Ojs.call (Ojs.get_prop_ascii x10038 "forEach") "apply"
                   [|x10038;((let x10031 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x10031 "push"
                                   [|(Ojs.fun_to_js 3
                                        (fun (x10033 : Ojs.t) ->
                                           fun (x10034 : Ojs.t) ->
                                             fun (x10035 : Ojs.t) ->
                                               x10029
                                                 ~value:(T.t_of_js x10033)
                                                 ~index:(Ojs.float_of_js
                                                           x10034)
                                                 ~array:(Ojs.list_of_js
                                                           T.t_of_js x10035)))|]);
                              (match x10030 with
                               | Some x10032 ->
                                   ignore
                                     (Ojs.call x10031 "push"
                                        [|(any_to_js x10032)|])
                               | None -> ());
                              x10031))|])
    let (map :
      t ->
        callbackfn:(value:T.t -> index:float -> array:T.t list -> 'U) ->
          ?thisArg:any -> unit -> 'U list)
      =
      fun (x10047 : t) ->
        fun
          ~callbackfn:(x10039 :
                        value:T.t -> index:float -> array:T.t list -> 'U)
          ->
          fun ?thisArg:(x10040 : any option) ->
            fun () ->
              Ojs.list_of_js Obj.magic
                (let x10048 = t_to_js x10047 in
                 Ojs.call (Ojs.get_prop_ascii x10048 "map") "apply"
                   [|x10048;((let x10041 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x10041 "push"
                                   [|(Ojs.fun_to_js 3
                                        (fun (x10043 : Ojs.t) ->
                                           fun (x10044 : Ojs.t) ->
                                             fun (x10045 : Ojs.t) ->
                                               Obj.magic
                                                 (x10039
                                                    ~value:(T.t_of_js x10043)
                                                    ~index:(Ojs.float_of_js
                                                              x10044)
                                                    ~array:(Ojs.list_of_js
                                                              T.t_of_js
                                                              x10045))))|]);
                              (match x10040 with
                               | Some x10042 ->
                                   ignore
                                     (Ojs.call x10041 "push"
                                        [|(any_to_js x10042)|])
                               | None -> ());
                              x10041))|])
    let (filter :
      t ->
        predicate:(value:T.t -> index:float -> array:T.t list -> bool) ->
          ?thisArg:any -> unit -> 'S list)
      =
      fun (x10058 : t) ->
        fun
          ~predicate:(x10050 :
                       value:T.t -> index:float -> array:T.t list -> bool)
          ->
          fun ?thisArg:(x10051 : any option) ->
            fun () ->
              Ojs.list_of_js Obj.magic
                (let x10059 = t_to_js x10058 in
                 Ojs.call (Ojs.get_prop_ascii x10059 "filter") "apply"
                   [|x10059;((let x10052 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x10052 "push"
                                   [|(Ojs.fun_to_js 3
                                        (fun (x10054 : Ojs.t) ->
                                           fun (x10055 : Ojs.t) ->
                                             fun (x10056 : Ojs.t) ->
                                               Ojs.bool_to_js
                                                 (x10050
                                                    ~value:(T.t_of_js x10054)
                                                    ~index:(Ojs.float_of_js
                                                              x10055)
                                                    ~array:(Ojs.list_of_js
                                                              T.t_of_js
                                                              x10056))))|]);
                              (match x10051 with
                               | Some x10053 ->
                                   ignore
                                     (Ojs.call x10052 "push"
                                        [|(any_to_js x10053)|])
                               | None -> ());
                              x10052))|])
    let (filter :
      t ->
        predicate:(value:T.t -> index:float -> array:T.t list -> unknown) ->
          ?thisArg:any -> unit -> T.t list)
      =
      fun (x10069 : t) ->
        fun
          ~predicate:(x10061 :
                       value:T.t -> index:float -> array:T.t list -> unknown)
          ->
          fun ?thisArg:(x10062 : any option) ->
            fun () ->
              Ojs.list_of_js T.t_of_js
                (let x10070 = t_to_js x10069 in
                 Ojs.call (Ojs.get_prop_ascii x10070 "filter") "apply"
                   [|x10070;((let x10063 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x10063 "push"
                                   [|(Ojs.fun_to_js 3
                                        (fun (x10065 : Ojs.t) ->
                                           fun (x10066 : Ojs.t) ->
                                             fun (x10067 : Ojs.t) ->
                                               unknown_to_js
                                                 (x10061
                                                    ~value:(T.t_of_js x10065)
                                                    ~index:(Ojs.float_of_js
                                                              x10066)
                                                    ~array:(Ojs.list_of_js
                                                              T.t_of_js
                                                              x10067))))|]);
                              (match x10062 with
                               | Some x10064 ->
                                   ignore
                                     (Ojs.call x10063 "push"
                                        [|(any_to_js x10064)|])
                               | None -> ());
                              x10063))|])
    let (reduce :
      t ->
        callbackfn:(previousValue:T.t ->
                      currentValue:T.t ->
                        currentIndex:float -> array:T.t list -> T.t)
          -> T.t)
      =
      fun (x10078 : t) ->
        fun
          ~callbackfn:(x10072 :
                        previousValue:T.t ->
                          currentValue:T.t ->
                            currentIndex:float -> array:T.t list -> T.t)
          ->
          T.t_of_js
            (Ojs.call (t_to_js x10078) "reduce"
               [|(Ojs.fun_to_js 4
                    (fun (x10073 : Ojs.t) ->
                       fun (x10074 : Ojs.t) ->
                         fun (x10075 : Ojs.t) ->
                           fun (x10076 : Ojs.t) ->
                             T.t_to_js
                               (x10072 ~previousValue:(T.t_of_js x10073)
                                  ~currentValue:(T.t_of_js x10074)
                                  ~currentIndex:(Ojs.float_of_js x10075)
                                  ~array:(Ojs.list_of_js T.t_of_js x10076))))|])
    let (reduce :
      t ->
        callbackfn:(previousValue:T.t ->
                      currentValue:T.t ->
                        currentIndex:float -> array:T.t list -> T.t)
          -> initialValue:T.t -> T.t)
      =
      fun (x10086 : t) ->
        fun
          ~callbackfn:(x10079 :
                        previousValue:T.t ->
                          currentValue:T.t ->
                            currentIndex:float -> array:T.t list -> T.t)
          ->
          fun ~initialValue:(x10085 : T.t) ->
            T.t_of_js
              (Ojs.call (t_to_js x10086) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x10080 : Ojs.t) ->
                         fun (x10081 : Ojs.t) ->
                           fun (x10082 : Ojs.t) ->
                             fun (x10083 : Ojs.t) ->
                               T.t_to_js
                                 (x10079 ~previousValue:(T.t_of_js x10080)
                                    ~currentValue:(T.t_of_js x10081)
                                    ~currentIndex:(Ojs.float_of_js x10082)
                                    ~array:(Ojs.list_of_js T.t_of_js x10083))));(
                   T.t_to_js x10085)|])
    let (reduce :
      t ->
        callbackfn:(previousValue:'U ->
                      currentValue:T.t ->
                        currentIndex:float -> array:T.t list -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x10094 : t) ->
        fun
          ~callbackfn:(x10087 :
                        previousValue:'U ->
                          currentValue:T.t ->
                            currentIndex:float -> array:T.t list -> 'U)
          ->
          fun ~initialValue:(x10093 : 'U) ->
            Obj.magic
              (Ojs.call (t_to_js x10094) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x10088 : Ojs.t) ->
                         fun (x10089 : Ojs.t) ->
                           fun (x10090 : Ojs.t) ->
                             fun (x10091 : Ojs.t) ->
                               Obj.magic
                                 (x10087 ~previousValue:(Obj.magic x10088)
                                    ~currentValue:(T.t_of_js x10089)
                                    ~currentIndex:(Ojs.float_of_js x10090)
                                    ~array:(Ojs.list_of_js T.t_of_js x10091))));(
                   Obj.magic x10093)|])
    let (reduceRight :
      t ->
        callbackfn:(previousValue:T.t ->
                      currentValue:T.t ->
                        currentIndex:float -> array:T.t list -> T.t)
          -> T.t)
      =
      fun (x10101 : t) ->
        fun
          ~callbackfn:(x10095 :
                        previousValue:T.t ->
                          currentValue:T.t ->
                            currentIndex:float -> array:T.t list -> T.t)
          ->
          T.t_of_js
            (Ojs.call (t_to_js x10101) "reduceRight"
               [|(Ojs.fun_to_js 4
                    (fun (x10096 : Ojs.t) ->
                       fun (x10097 : Ojs.t) ->
                         fun (x10098 : Ojs.t) ->
                           fun (x10099 : Ojs.t) ->
                             T.t_to_js
                               (x10095 ~previousValue:(T.t_of_js x10096)
                                  ~currentValue:(T.t_of_js x10097)
                                  ~currentIndex:(Ojs.float_of_js x10098)
                                  ~array:(Ojs.list_of_js T.t_of_js x10099))))|])
    let (reduceRight :
      t ->
        callbackfn:(previousValue:T.t ->
                      currentValue:T.t ->
                        currentIndex:float -> array:T.t list -> T.t)
          -> initialValue:T.t -> T.t)
      =
      fun (x10109 : t) ->
        fun
          ~callbackfn:(x10102 :
                        previousValue:T.t ->
                          currentValue:T.t ->
                            currentIndex:float -> array:T.t list -> T.t)
          ->
          fun ~initialValue:(x10108 : T.t) ->
            T.t_of_js
              (Ojs.call (t_to_js x10109) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x10103 : Ojs.t) ->
                         fun (x10104 : Ojs.t) ->
                           fun (x10105 : Ojs.t) ->
                             fun (x10106 : Ojs.t) ->
                               T.t_to_js
                                 (x10102 ~previousValue:(T.t_of_js x10103)
                                    ~currentValue:(T.t_of_js x10104)
                                    ~currentIndex:(Ojs.float_of_js x10105)
                                    ~array:(Ojs.list_of_js T.t_of_js x10106))));(
                   T.t_to_js x10108)|])
    let (reduceRight :
      t ->
        callbackfn:(previousValue:'U ->
                      currentValue:T.t ->
                        currentIndex:float -> array:T.t list -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x10117 : t) ->
        fun
          ~callbackfn:(x10110 :
                        previousValue:'U ->
                          currentValue:T.t ->
                            currentIndex:float -> array:T.t list -> 'U)
          ->
          fun ~initialValue:(x10116 : 'U) ->
            Obj.magic
              (Ojs.call (t_to_js x10117) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x10111 : Ojs.t) ->
                         fun (x10112 : Ojs.t) ->
                           fun (x10113 : Ojs.t) ->
                             fun (x10114 : Ojs.t) ->
                               Obj.magic
                                 (x10110 ~previousValue:(Obj.magic x10111)
                                    ~currentValue:(T.t_of_js x10112)
                                    ~currentIndex:(Ojs.float_of_js x10113)
                                    ~array:(Ojs.list_of_js T.t_of_js x10114))));(
                   Obj.magic x10116)|])
    let (get : t -> float -> T.t) =
      fun (x10118 : t) ->
        fun (x10119 : float) ->
          T.t_of_js (Ojs.get_prop (t_to_js x10118) (Ojs.float_to_js x10119))
  end
module ConcatArray_Make(T:Ojs.T) =
  struct
    type 'T parent = 'T ConcatArray.t
    let rec parent_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T parent =
      fun (type __T) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x10122 : Ojs.t) -> ConcatArray.t_of_js __T_of_js x10122
    and parent_to_js : 'T . ('T -> Ojs.t) -> 'T parent -> Ojs.t =
      fun (type __T) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x10120 : __T ConcatArray.t) ->
            ConcatArray.t_to_js __T_to_js x10120
    type t = T.t parent
    let rec t_of_js : Ojs.t -> t =
      fun (x10126 : Ojs.t) -> parent_of_js T.t_of_js x10126
    and t_to_js : t -> Ojs.t =
      fun (x10124 : T.t parent) -> parent_to_js T.t_to_js x10124
    let (get_length : t -> float) =
      fun (x10128 : t) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x10128) "length")
    let (get : t -> float -> T.t) =
      fun (x10129 : t) ->
        fun (x10130 : float) ->
          T.t_of_js (Ojs.get_prop (t_to_js x10129) (Ojs.float_to_js x10130))
    let (join : t -> ?separator:string -> unit -> string) =
      fun (x10134 : t) ->
        fun ?separator:(x10131 : string option) ->
          fun () ->
            Ojs.string_of_js
              (let x10135 = t_to_js x10134 in
               Ojs.call (Ojs.get_prop_ascii x10135 "join") "apply"
                 [|x10135;((let x10132 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x10131 with
                             | Some x10133 ->
                                 ignore
                                   (Ojs.call x10132 "push"
                                      [|(Ojs.string_to_js x10133)|])
                             | None -> ());
                            x10132))|])
    let (slice : t -> ?start:float -> ?end_:float -> unit -> T.t list) =
      fun (x10141 : t) ->
        fun ?start:(x10136 : float option) ->
          fun ?end_:(x10137 : float option) ->
            fun () ->
              Ojs.list_of_js T.t_of_js
                (let x10142 = t_to_js x10141 in
                 Ojs.call (Ojs.get_prop_ascii x10142 "slice") "apply"
                   [|x10142;((let x10138 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              (match x10136 with
                               | Some x10140 ->
                                   ignore
                                     (Ojs.call x10138 "push"
                                        [|(Ojs.float_to_js x10140)|])
                               | None -> ());
                              (match x10137 with
                               | Some x10139 ->
                                   ignore
                                     (Ojs.call x10138 "push"
                                        [|(Ojs.float_to_js x10139)|])
                               | None -> ());
                              x10138))|])
  end
module Array_Make(T:Ojs.T) =
  struct
    module AnonymousInterface0 =
      struct
        type t = Ojs.t
        let rec t_of_js : Ojs.t -> t = fun (x10145 : Ojs.t) -> x10145
        and t_to_js : t -> Ojs.t = fun (x10144 : Ojs.t) -> x10144
        let (get_copyWithin : t -> bool) =
          fun (x10146 : t) ->
            Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x10146) "copyWithin")
        let (set_copyWithin : t -> bool -> unit) =
          fun (x10147 : t) ->
            fun (x10148 : bool) ->
              Ojs.set_prop_ascii (t_to_js x10147) "copyWithin"
                (Ojs.bool_to_js x10148)
        let (get_entries : t -> bool) =
          fun (x10149 : t) ->
            Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x10149) "entries")
        let (set_entries : t -> bool -> unit) =
          fun (x10150 : t) ->
            fun (x10151 : bool) ->
              Ojs.set_prop_ascii (t_to_js x10150) "entries"
                (Ojs.bool_to_js x10151)
        let (get_fill : t -> bool) =
          fun (x10152 : t) ->
            Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x10152) "fill")
        let (set_fill : t -> bool -> unit) =
          fun (x10153 : t) ->
            fun (x10154 : bool) ->
              Ojs.set_prop_ascii (t_to_js x10153) "fill"
                (Ojs.bool_to_js x10154)
        let (get_find : t -> bool) =
          fun (x10155 : t) ->
            Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x10155) "find")
        let (set_find : t -> bool -> unit) =
          fun (x10156 : t) ->
            fun (x10157 : bool) ->
              Ojs.set_prop_ascii (t_to_js x10156) "find"
                (Ojs.bool_to_js x10157)
        let (get_findIndex : t -> bool) =
          fun (x10158 : t) ->
            Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x10158) "findIndex")
        let (set_findIndex : t -> bool -> unit) =
          fun (x10159 : t) ->
            fun (x10160 : bool) ->
              Ojs.set_prop_ascii (t_to_js x10159) "findIndex"
                (Ojs.bool_to_js x10160)
        let (get_keys : t -> bool) =
          fun (x10161 : t) ->
            Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x10161) "keys")
        let (set_keys : t -> bool -> unit) =
          fun (x10162 : t) ->
            fun (x10163 : bool) ->
              Ojs.set_prop_ascii (t_to_js x10162) "keys"
                (Ojs.bool_to_js x10163)
        let (get_values : t -> bool) =
          fun (x10164 : t) ->
            Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x10164) "values")
        let (set_values : t -> bool -> unit) =
          fun (x10165 : t) ->
            fun (x10166 : bool) ->
              Ojs.set_prop_ascii (t_to_js x10165) "values"
                (Ojs.bool_to_js x10166)
        let (create :
          copyWithin:bool ->
            entries:bool ->
              fill:bool ->
                find:bool ->
                  findIndex:bool -> keys:bool -> values:bool -> unit -> t)
          =
          fun ~copyWithin:(x10167 : bool) ->
            fun ~entries:(x10168 : bool) ->
              fun ~fill:(x10169 : bool) ->
                fun ~find:(x10170 : bool) ->
                  fun ~findIndex:(x10171 : bool) ->
                    fun ~keys:(x10172 : bool) ->
                      fun ~values:(x10173 : bool) ->
                        fun () ->
                          let x10174 = Ojs.empty_obj () in
                          Ojs.set_prop_ascii x10174 "copyWithin"
                            (Ojs.bool_to_js x10167);
                          Ojs.set_prop_ascii x10174 "entries"
                            (Ojs.bool_to_js x10168);
                          Ojs.set_prop_ascii x10174 "fill"
                            (Ojs.bool_to_js x10169);
                          Ojs.set_prop_ascii x10174 "find"
                            (Ojs.bool_to_js x10170);
                          Ojs.set_prop_ascii x10174 "findIndex"
                            (Ojs.bool_to_js x10171);
                          Ojs.set_prop_ascii x10174 "keys"
                            (Ojs.bool_to_js x10172);
                          Ojs.set_prop_ascii x10174 "values"
                            (Ojs.bool_to_js x10173);
                          t_of_js x10174
      end
    type 'T parent = 'T Array.t
    let rec parent_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T parent =
      fun (type __T) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x10177 : Ojs.t) -> Array.t_of_js __T_of_js x10177
    and parent_to_js : 'T . ('T -> Ojs.t) -> 'T parent -> Ojs.t =
      fun (type __T) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x10175 : __T Array.t) -> Array.t_to_js __T_to_js x10175
    type t = T.t parent
    let rec t_of_js : Ojs.t -> t =
      fun (x10181 : Ojs.t) -> parent_of_js T.t_of_js x10181
    and t_to_js : t -> Ojs.t =
      fun (x10179 : T.t parent) -> parent_to_js T.t_to_js x10179
    let (at : t -> index:float -> T.t option) =
      fun (x10184 : t) ->
        fun ~index:(x10183 : float) ->
          Ojs.option_of_js T.t_of_js
            (Ojs.call (t_to_js x10184) "at" [|(Ojs.float_to_js x10183)|])
    let (flatMap :
      t ->
        callback:(this:'This ->
                    value:T.t ->
                      index:float ->
                        array:T.t list ->
                          [ `U1 of 'U  | `U2 of 'U ReadonlyArray.t ])
          -> ?thisArg:'This -> unit -> 'U list)
      =
      fun (x10198 : t) ->
        fun
          ~callback:(x10186 :
                      this:'This ->
                        value:T.t ->
                          index:float ->
                            array:T.t list ->
                              [ `U1 of 'U  | `U2 of 'U ReadonlyArray.t ])
          ->
          fun ?thisArg:(x10187 : 'This option) ->
            fun () ->
              Ojs.list_of_js Obj.magic
                (let x10199 = t_to_js x10198 in
                 Ojs.call (Ojs.get_prop_ascii x10199 "flatMap") "apply"
                   [|x10199;((let x10188 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x10188 "push"
                                   [|(Ojs.fun_to_js 4
                                        (fun (x10190 : Ojs.t) ->
                                           fun (x10191 : Ojs.t) ->
                                             fun (x10192 : Ojs.t) ->
                                               fun (x10193 : Ojs.t) ->
                                                 match x10186
                                                         ~this:(Obj.magic
                                                                  x10190)
                                                         ~value:(T.t_of_js
                                                                   x10191)
                                                         ~index:(Ojs.float_of_js
                                                                   x10192)
                                                         ~array:(Ojs.list_of_js
                                                                   T.t_of_js
                                                                   x10193)
                                                 with
                                                 | `U1 x10195 ->
                                                     Obj.magic x10195
                                                 | `U2 x10196 ->
                                                     ReadonlyArray.t_to_js
                                                       Obj.magic x10196))|]);
                              (match x10187 with
                               | Some x10189 ->
                                   ignore
                                     (Ojs.call x10188 "push"
                                        [|(Obj.magic x10189)|])
                               | None -> ());
                              x10188))|])
    let (flat :
      t -> this:'A -> ?depth:'D -> unit -> ('A, 'D) FlatArray.t list) =
      fun (x10205 : t) ->
        fun ~this:(x10201 : 'A) ->
          fun ?depth:(x10202 : 'D option) ->
            fun () ->
              Ojs.list_of_js
                (fun (x10207 : Ojs.t) ->
                   FlatArray.t_of_js Obj.magic Obj.magic x10207)
                (let x10206 = t_to_js x10205 in
                 Ojs.call (Ojs.get_prop_ascii x10206 "flat") "apply"
                   [|x10206;((let x10203 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x10203 "push"
                                   [|(Obj.magic x10201)|]);
                              (match x10202 with
                               | Some x10204 ->
                                   ignore
                                     (Ojs.call x10203 "push"
                                        [|(Obj.magic x10204)|])
                               | None -> ());
                              x10203))|])
    let (includes :
      t -> searchElement:T.t -> ?fromIndex:float -> unit -> bool) =
      fun (x10214 : t) ->
        fun ~searchElement:(x10210 : T.t) ->
          fun ?fromIndex:(x10211 : float option) ->
            fun () ->
              Ojs.bool_of_js
                (let x10215 = t_to_js x10214 in
                 Ojs.call (Ojs.get_prop_ascii x10215 "includes") "apply"
                   [|x10215;((let x10212 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x10212 "push"
                                   [|(T.t_to_js x10210)|]);
                              (match x10211 with
                               | Some x10213 ->
                                   ignore
                                     (Ojs.call x10212 "push"
                                        [|(Ojs.float_to_js x10213)|])
                               | None -> ());
                              x10212))|])
    let (entries : t -> (float * T.t) IterableIterator.t) =
      fun (x10216 : t) ->
        IterableIterator.t_of_js
          (fun (x10217 : Ojs.t) ->
             let x10218 = x10217 in
             ((Ojs.float_of_js (Ojs.array_get x10218 0)),
               (T.t_of_js (Ojs.array_get x10218 1))))
          (Ojs.call (t_to_js x10216) "entries" [||])
    let (keys : t -> float IterableIterator.t) =
      fun (x10219 : t) ->
        IterableIterator.t_of_js Ojs.float_of_js
          (Ojs.call (t_to_js x10219) "keys" [||])
    let (values : t -> T.t IterableIterator.t) =
      fun (x10221 : t) ->
        IterableIterator.t_of_js T.t_of_js
          (Ojs.call (t_to_js x10221) "values" [||])
    let (find :
      t ->
        predicate:(this:unit ->
                     value:T.t -> index:float -> obj:T.t list -> bool)
          -> ?thisArg:any -> unit -> 'S option)
      =
      fun (x10232 : t) ->
        fun
          ~predicate:(x10223 :
                       this:unit ->
                         value:T.t -> index:float -> obj:T.t list -> bool)
          ->
          fun ?thisArg:(x10224 : any option) ->
            fun () ->
              Ojs.option_of_js Obj.magic
                (let x10233 = t_to_js x10232 in
                 Ojs.call (Ojs.get_prop_ascii x10233 "find") "apply"
                   [|x10233;((let x10225 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x10225 "push"
                                   [|(Ojs.fun_to_js 4
                                        (fun (x10227 : Ojs.t) ->
                                           fun (x10228 : Ojs.t) ->
                                             fun (x10229 : Ojs.t) ->
                                               fun (x10230 : Ojs.t) ->
                                                 Ojs.bool_to_js
                                                   (x10223
                                                      ~this:(Ojs.unit_of_js
                                                               x10227)
                                                      ~value:(T.t_of_js
                                                                x10228)
                                                      ~index:(Ojs.float_of_js
                                                                x10229)
                                                      ~obj:(Ojs.list_of_js
                                                              T.t_of_js
                                                              x10230))))|]);
                              (match x10224 with
                               | Some x10226 ->
                                   ignore
                                     (Ojs.call x10225 "push"
                                        [|(any_to_js x10226)|])
                               | None -> ());
                              x10225))|])
    let (find :
      t ->
        predicate:(value:T.t -> index:float -> obj:T.t list -> unknown) ->
          ?thisArg:any -> unit -> T.t option)
      =
      fun (x10243 : t) ->
        fun
          ~predicate:(x10235 :
                       value:T.t -> index:float -> obj:T.t list -> unknown)
          ->
          fun ?thisArg:(x10236 : any option) ->
            fun () ->
              Ojs.option_of_js T.t_of_js
                (let x10244 = t_to_js x10243 in
                 Ojs.call (Ojs.get_prop_ascii x10244 "find") "apply"
                   [|x10244;((let x10237 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x10237 "push"
                                   [|(Ojs.fun_to_js 3
                                        (fun (x10239 : Ojs.t) ->
                                           fun (x10240 : Ojs.t) ->
                                             fun (x10241 : Ojs.t) ->
                                               unknown_to_js
                                                 (x10235
                                                    ~value:(T.t_of_js x10239)
                                                    ~index:(Ojs.float_of_js
                                                              x10240)
                                                    ~obj:(Ojs.list_of_js
                                                            T.t_of_js x10241))))|]);
                              (match x10236 with
                               | Some x10238 ->
                                   ignore
                                     (Ojs.call x10237 "push"
                                        [|(any_to_js x10238)|])
                               | None -> ());
                              x10237))|])
    let (findIndex :
      t ->
        predicate:(value:T.t -> index:float -> obj:T.t list -> unknown) ->
          ?thisArg:any -> unit -> float)
      =
      fun (x10254 : t) ->
        fun
          ~predicate:(x10246 :
                       value:T.t -> index:float -> obj:T.t list -> unknown)
          ->
          fun ?thisArg:(x10247 : any option) ->
            fun () ->
              Ojs.float_of_js
                (let x10255 = t_to_js x10254 in
                 Ojs.call (Ojs.get_prop_ascii x10255 "findIndex") "apply"
                   [|x10255;((let x10248 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x10248 "push"
                                   [|(Ojs.fun_to_js 3
                                        (fun (x10250 : Ojs.t) ->
                                           fun (x10251 : Ojs.t) ->
                                             fun (x10252 : Ojs.t) ->
                                               unknown_to_js
                                                 (x10246
                                                    ~value:(T.t_of_js x10250)
                                                    ~index:(Ojs.float_of_js
                                                              x10251)
                                                    ~obj:(Ojs.list_of_js
                                                            T.t_of_js x10252))))|]);
                              (match x10247 with
                               | Some x10249 ->
                                   ignore
                                     (Ojs.call x10248 "push"
                                        [|(any_to_js x10249)|])
                               | None -> ());
                              x10248))|])
    let (fill : t -> value:T.t -> ?start:float -> ?end_:float -> unit -> t) =
      fun (x10262 : t) ->
        fun ~value:(x10256 : T.t) ->
          fun ?start:(x10257 : float option) ->
            fun ?end_:(x10258 : float option) ->
              fun () ->
                t_of_js
                  (let x10263 = t_to_js x10262 in
                   Ojs.call (Ojs.get_prop_ascii x10263 "fill") "apply"
                     [|x10263;((let x10259 =
                                  Ojs.new_obj
                                    (Ojs.get_prop_ascii Ojs.global "Array")
                                    [||] in
                                ignore
                                  (Ojs.call x10259 "push"
                                     [|(T.t_to_js x10256)|]);
                                (match x10257 with
                                 | Some x10261 ->
                                     ignore
                                       (Ojs.call x10259 "push"
                                          [|(Ojs.float_to_js x10261)|])
                                 | None -> ());
                                (match x10258 with
                                 | Some x10260 ->
                                     ignore
                                       (Ojs.call x10259 "push"
                                          [|(Ojs.float_to_js x10260)|])
                                 | None -> ());
                                x10259))|])
    let (copyWithin :
      t -> target:float -> start:float -> ?end_:float -> unit -> t) =
      fun (x10269 : t) ->
        fun ~target:(x10264 : float) ->
          fun ~start:(x10265 : float) ->
            fun ?end_:(x10266 : float option) ->
              fun () ->
                t_of_js
                  (let x10270 = t_to_js x10269 in
                   Ojs.call (Ojs.get_prop_ascii x10270 "copyWithin") "apply"
                     [|x10270;((let x10267 =
                                  Ojs.new_obj
                                    (Ojs.get_prop_ascii Ojs.global "Array")
                                    [||] in
                                ignore
                                  (Ojs.call x10267 "push"
                                     [|(Ojs.float_to_js x10264)|]);
                                ignore
                                  (Ojs.call x10267 "push"
                                     [|(Ojs.float_to_js x10265)|]);
                                (match x10266 with
                                 | Some x10268 ->
                                     ignore
                                       (Ojs.call x10267 "push"
                                          [|(Ojs.float_to_js x10268)|])
                                 | None -> ());
                                x10267))|])
    let (get_length : t -> float) =
      fun (x10271 : t) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x10271) "length")
    let (set_length : t -> float -> unit) =
      fun (x10272 : t) ->
        fun (x10273 : float) ->
          Ojs.set_prop_ascii (t_to_js x10272) "length"
            (Ojs.float_to_js x10273)
    let (toString : t -> string) =
      fun (x10274 : t) ->
        Ojs.string_of_js (Ojs.call (t_to_js x10274) "toString" [||])
    let (toLocaleString : t -> string) =
      fun (x10275 : t) ->
        Ojs.string_of_js (Ojs.call (t_to_js x10275) "toLocaleString" [||])
    let (pop : t -> T.t option) =
      fun (x10276 : t) ->
        Ojs.option_of_js T.t_of_js (Ojs.call (t_to_js x10276) "pop" [||])
    let (push : t -> items:T.t list -> float) =
      fun (x10281 : t) ->
        fun ~items:(x10278 : T.t list) ->
          Ojs.float_of_js
            (let x10282 = t_to_js x10281 in
             Ojs.call (Ojs.get_prop_ascii x10282 "push") "apply"
               [|x10282;((let x10279 =
                            Ojs.new_obj
                              (Ojs.get_prop_ascii Ojs.global "Array") 
                              [||] in
                          List.iter
                            (fun (x10280 : T.t) ->
                               ignore
                                 (Ojs.call x10279 "push"
                                    [|(T.t_to_js x10280)|])) x10278;
                          x10279))|])
    let (concat : t -> items:T.t ConcatArray.t list -> T.t list) =
      fun (x10287 : t) ->
        fun ~items:(x10283 : T.t ConcatArray.t list) ->
          Ojs.list_of_js T.t_of_js
            (let x10288 = t_to_js x10287 in
             Ojs.call (Ojs.get_prop_ascii x10288 "concat") "apply"
               [|x10288;((let x10284 =
                            Ojs.new_obj
                              (Ojs.get_prop_ascii Ojs.global "Array") 
                              [||] in
                          List.iter
                            (fun (x10285 : T.t ConcatArray.t) ->
                               ignore
                                 (Ojs.call x10284 "push"
                                    [|(ConcatArray.t_to_js T.t_to_js x10285)|]))
                            x10283;
                          x10284))|])
    let (concat :
      t -> items:[ `U1 of T.t  | `U2 of T.t ConcatArray.t ] list -> T.t list)
      =
      fun (x10296 : t) ->
        fun ~items:(x10290 : [ `U1 of T.t  | `U2 of T.t ConcatArray.t ] list)
          ->
          Ojs.list_of_js T.t_of_js
            (let x10297 = t_to_js x10296 in
             Ojs.call (Ojs.get_prop_ascii x10297 "concat") "apply"
               [|x10297;((let x10291 =
                            Ojs.new_obj
                              (Ojs.get_prop_ascii Ojs.global "Array") 
                              [||] in
                          List.iter
                            (fun
                               (x10292 :
                                 [ `U1 of T.t  | `U2 of T.t ConcatArray.t ])
                               ->
                               ignore
                                 (Ojs.call x10291 "push"
                                    [|((match x10292 with
                                        | `U1 x10293 -> T.t_to_js x10293
                                        | `U2 x10294 ->
                                            ConcatArray.t_to_js T.t_to_js
                                              x10294))|])) x10290;
                          x10291))|])
    let (join : t -> ?separator:string -> unit -> string) =
      fun (x10302 : t) ->
        fun ?separator:(x10299 : string option) ->
          fun () ->
            Ojs.string_of_js
              (let x10303 = t_to_js x10302 in
               Ojs.call (Ojs.get_prop_ascii x10303 "join") "apply"
                 [|x10303;((let x10300 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x10299 with
                             | Some x10301 ->
                                 ignore
                                   (Ojs.call x10300 "push"
                                      [|(Ojs.string_to_js x10301)|])
                             | None -> ());
                            x10300))|])
    let (reverse : t -> T.t list) =
      fun (x10304 : t) ->
        Ojs.list_of_js T.t_of_js (Ojs.call (t_to_js x10304) "reverse" [||])
    let (shift : t -> T.t option) =
      fun (x10306 : t) ->
        Ojs.option_of_js T.t_of_js (Ojs.call (t_to_js x10306) "shift" [||])
    let (slice : t -> ?start:float -> ?end_:float -> unit -> T.t list) =
      fun (x10313 : t) ->
        fun ?start:(x10308 : float option) ->
          fun ?end_:(x10309 : float option) ->
            fun () ->
              Ojs.list_of_js T.t_of_js
                (let x10314 = t_to_js x10313 in
                 Ojs.call (Ojs.get_prop_ascii x10314 "slice") "apply"
                   [|x10314;((let x10310 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              (match x10308 with
                               | Some x10312 ->
                                   ignore
                                     (Ojs.call x10310 "push"
                                        [|(Ojs.float_to_js x10312)|])
                               | None -> ());
                              (match x10309 with
                               | Some x10311 ->
                                   ignore
                                     (Ojs.call x10310 "push"
                                        [|(Ojs.float_to_js x10311)|])
                               | None -> ());
                              x10310))|])
    let (sort : t -> ?compareFn:(a:T.t -> b:T.t -> float) -> unit -> t) =
      fun (x10321 : t) ->
        fun ?compareFn:(x10316 : (a:T.t -> b:T.t -> float) option) ->
          fun () ->
            t_of_js
              (let x10322 = t_to_js x10321 in
               Ojs.call (Ojs.get_prop_ascii x10322 "sort") "apply"
                 [|x10322;((let x10317 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x10316 with
                             | Some x10318 ->
                                 ignore
                                   (Ojs.call x10317 "push"
                                      [|(Ojs.fun_to_js 2
                                           (fun (x10319 : Ojs.t) ->
                                              fun (x10320 : Ojs.t) ->
                                                Ojs.float_to_js
                                                  (x10318
                                                     ~a:(T.t_of_js x10319)
                                                     ~b:(T.t_of_js x10320))))|])
                             | None -> ());
                            x10317))|])
    let (splice : t -> start:float -> ?deleteCount:float -> unit -> T.t list)
      =
      fun (x10327 : t) ->
        fun ~start:(x10323 : float) ->
          fun ?deleteCount:(x10324 : float option) ->
            fun () ->
              Ojs.list_of_js T.t_of_js
                (let x10328 = t_to_js x10327 in
                 Ojs.call (Ojs.get_prop_ascii x10328 "splice") "apply"
                   [|x10328;((let x10325 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x10325 "push"
                                   [|(Ojs.float_to_js x10323)|]);
                              (match x10324 with
                               | Some x10326 ->
                                   ignore
                                     (Ojs.call x10325 "push"
                                        [|(Ojs.float_to_js x10326)|])
                               | None -> ());
                              x10325))|])
    let (splice :
      t -> start:float -> deleteCount:float -> items:T.t list -> T.t list) =
      fun (x10335 : t) ->
        fun ~start:(x10330 : float) ->
          fun ~deleteCount:(x10331 : float) ->
            fun ~items:(x10332 : T.t list) ->
              Ojs.list_of_js T.t_of_js
                (let x10336 = t_to_js x10335 in
                 Ojs.call (Ojs.get_prop_ascii x10336 "splice") "apply"
                   [|x10336;((let x10333 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x10333 "push"
                                   [|(Ojs.float_to_js x10330)|]);
                              ignore
                                (Ojs.call x10333 "push"
                                   [|(Ojs.float_to_js x10331)|]);
                              List.iter
                                (fun (x10334 : T.t) ->
                                   ignore
                                     (Ojs.call x10333 "push"
                                        [|(T.t_to_js x10334)|])) x10332;
                              x10333))|])
    let (unshift : t -> items:T.t list -> float) =
      fun (x10341 : t) ->
        fun ~items:(x10338 : T.t list) ->
          Ojs.float_of_js
            (let x10342 = t_to_js x10341 in
             Ojs.call (Ojs.get_prop_ascii x10342 "unshift") "apply"
               [|x10342;((let x10339 =
                            Ojs.new_obj
                              (Ojs.get_prop_ascii Ojs.global "Array") 
                              [||] in
                          List.iter
                            (fun (x10340 : T.t) ->
                               ignore
                                 (Ojs.call x10339 "push"
                                    [|(T.t_to_js x10340)|])) x10338;
                          x10339))|])
    let (indexOf :
      t -> searchElement:T.t -> ?fromIndex:float -> unit -> float) =
      fun (x10347 : t) ->
        fun ~searchElement:(x10343 : T.t) ->
          fun ?fromIndex:(x10344 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x10348 = t_to_js x10347 in
                 Ojs.call (Ojs.get_prop_ascii x10348 "indexOf") "apply"
                   [|x10348;((let x10345 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x10345 "push"
                                   [|(T.t_to_js x10343)|]);
                              (match x10344 with
                               | Some x10346 ->
                                   ignore
                                     (Ojs.call x10345 "push"
                                        [|(Ojs.float_to_js x10346)|])
                               | None -> ());
                              x10345))|])
    let (lastIndexOf :
      t -> searchElement:T.t -> ?fromIndex:float -> unit -> float) =
      fun (x10353 : t) ->
        fun ~searchElement:(x10349 : T.t) ->
          fun ?fromIndex:(x10350 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x10354 = t_to_js x10353 in
                 Ojs.call (Ojs.get_prop_ascii x10354 "lastIndexOf") "apply"
                   [|x10354;((let x10351 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x10351 "push"
                                   [|(T.t_to_js x10349)|]);
                              (match x10350 with
                               | Some x10352 ->
                                   ignore
                                     (Ojs.call x10351 "push"
                                        [|(Ojs.float_to_js x10352)|])
                               | None -> ());
                              x10351))|])
    let (every :
      t ->
        predicate:(value:T.t -> index:float -> array:T.t list -> bool) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x10363 : t) ->
        fun
          ~predicate:(x10355 :
                       value:T.t -> index:float -> array:T.t list -> bool)
          ->
          fun ?thisArg:(x10356 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x10364 = t_to_js x10363 in
                 Ojs.call (Ojs.get_prop_ascii x10364 "every") "apply"
                   [|x10364;((let x10357 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x10357 "push"
                                   [|(Ojs.fun_to_js 3
                                        (fun (x10359 : Ojs.t) ->
                                           fun (x10360 : Ojs.t) ->
                                             fun (x10361 : Ojs.t) ->
                                               Ojs.bool_to_js
                                                 (x10355
                                                    ~value:(T.t_of_js x10359)
                                                    ~index:(Ojs.float_of_js
                                                              x10360)
                                                    ~array:(Ojs.list_of_js
                                                              T.t_of_js
                                                              x10361))))|]);
                              (match x10356 with
                               | Some x10358 ->
                                   ignore
                                     (Ojs.call x10357 "push"
                                        [|(any_to_js x10358)|])
                               | None -> ());
                              x10357))|])
    let (every :
      t ->
        predicate:(value:T.t -> index:float -> array:T.t list -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x10373 : t) ->
        fun
          ~predicate:(x10365 :
                       value:T.t -> index:float -> array:T.t list -> unknown)
          ->
          fun ?thisArg:(x10366 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x10374 = t_to_js x10373 in
                 Ojs.call (Ojs.get_prop_ascii x10374 "every") "apply"
                   [|x10374;((let x10367 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x10367 "push"
                                   [|(Ojs.fun_to_js 3
                                        (fun (x10369 : Ojs.t) ->
                                           fun (x10370 : Ojs.t) ->
                                             fun (x10371 : Ojs.t) ->
                                               unknown_to_js
                                                 (x10365
                                                    ~value:(T.t_of_js x10369)
                                                    ~index:(Ojs.float_of_js
                                                              x10370)
                                                    ~array:(Ojs.list_of_js
                                                              T.t_of_js
                                                              x10371))))|]);
                              (match x10366 with
                               | Some x10368 ->
                                   ignore
                                     (Ojs.call x10367 "push"
                                        [|(any_to_js x10368)|])
                               | None -> ());
                              x10367))|])
    let (some :
      t ->
        predicate:(value:T.t -> index:float -> array:T.t list -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x10383 : t) ->
        fun
          ~predicate:(x10375 :
                       value:T.t -> index:float -> array:T.t list -> unknown)
          ->
          fun ?thisArg:(x10376 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x10384 = t_to_js x10383 in
                 Ojs.call (Ojs.get_prop_ascii x10384 "some") "apply"
                   [|x10384;((let x10377 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x10377 "push"
                                   [|(Ojs.fun_to_js 3
                                        (fun (x10379 : Ojs.t) ->
                                           fun (x10380 : Ojs.t) ->
                                             fun (x10381 : Ojs.t) ->
                                               unknown_to_js
                                                 (x10375
                                                    ~value:(T.t_of_js x10379)
                                                    ~index:(Ojs.float_of_js
                                                              x10380)
                                                    ~array:(Ojs.list_of_js
                                                              T.t_of_js
                                                              x10381))))|]);
                              (match x10376 with
                               | Some x10378 ->
                                   ignore
                                     (Ojs.call x10377 "push"
                                        [|(any_to_js x10378)|])
                               | None -> ());
                              x10377))|])
    let (forEach :
      t ->
        callbackfn:(value:T.t -> index:float -> array:T.t list -> unit) ->
          ?thisArg:any -> unit -> unit)
      =
      fun (x10393 : t) ->
        fun
          ~callbackfn:(x10385 :
                        value:T.t -> index:float -> array:T.t list -> unit)
          ->
          fun ?thisArg:(x10386 : any option) ->
            fun () ->
              ignore
                (let x10394 = t_to_js x10393 in
                 Ojs.call (Ojs.get_prop_ascii x10394 "forEach") "apply"
                   [|x10394;((let x10387 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x10387 "push"
                                   [|(Ojs.fun_to_js 3
                                        (fun (x10389 : Ojs.t) ->
                                           fun (x10390 : Ojs.t) ->
                                             fun (x10391 : Ojs.t) ->
                                               x10385
                                                 ~value:(T.t_of_js x10389)
                                                 ~index:(Ojs.float_of_js
                                                           x10390)
                                                 ~array:(Ojs.list_of_js
                                                           T.t_of_js x10391)))|]);
                              (match x10386 with
                               | Some x10388 ->
                                   ignore
                                     (Ojs.call x10387 "push"
                                        [|(any_to_js x10388)|])
                               | None -> ());
                              x10387))|])
    let (map :
      t ->
        callbackfn:(value:T.t -> index:float -> array:T.t list -> 'U) ->
          ?thisArg:any -> unit -> 'U list)
      =
      fun (x10403 : t) ->
        fun
          ~callbackfn:(x10395 :
                        value:T.t -> index:float -> array:T.t list -> 'U)
          ->
          fun ?thisArg:(x10396 : any option) ->
            fun () ->
              Ojs.list_of_js Obj.magic
                (let x10404 = t_to_js x10403 in
                 Ojs.call (Ojs.get_prop_ascii x10404 "map") "apply"
                   [|x10404;((let x10397 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x10397 "push"
                                   [|(Ojs.fun_to_js 3
                                        (fun (x10399 : Ojs.t) ->
                                           fun (x10400 : Ojs.t) ->
                                             fun (x10401 : Ojs.t) ->
                                               Obj.magic
                                                 (x10395
                                                    ~value:(T.t_of_js x10399)
                                                    ~index:(Ojs.float_of_js
                                                              x10400)
                                                    ~array:(Ojs.list_of_js
                                                              T.t_of_js
                                                              x10401))))|]);
                              (match x10396 with
                               | Some x10398 ->
                                   ignore
                                     (Ojs.call x10397 "push"
                                        [|(any_to_js x10398)|])
                               | None -> ());
                              x10397))|])
    let (filter :
      t ->
        predicate:(value:T.t -> index:float -> array:T.t list -> bool) ->
          ?thisArg:any -> unit -> 'S list)
      =
      fun (x10414 : t) ->
        fun
          ~predicate:(x10406 :
                       value:T.t -> index:float -> array:T.t list -> bool)
          ->
          fun ?thisArg:(x10407 : any option) ->
            fun () ->
              Ojs.list_of_js Obj.magic
                (let x10415 = t_to_js x10414 in
                 Ojs.call (Ojs.get_prop_ascii x10415 "filter") "apply"
                   [|x10415;((let x10408 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x10408 "push"
                                   [|(Ojs.fun_to_js 3
                                        (fun (x10410 : Ojs.t) ->
                                           fun (x10411 : Ojs.t) ->
                                             fun (x10412 : Ojs.t) ->
                                               Ojs.bool_to_js
                                                 (x10406
                                                    ~value:(T.t_of_js x10410)
                                                    ~index:(Ojs.float_of_js
                                                              x10411)
                                                    ~array:(Ojs.list_of_js
                                                              T.t_of_js
                                                              x10412))))|]);
                              (match x10407 with
                               | Some x10409 ->
                                   ignore
                                     (Ojs.call x10408 "push"
                                        [|(any_to_js x10409)|])
                               | None -> ());
                              x10408))|])
    let (filter :
      t ->
        predicate:(value:T.t -> index:float -> array:T.t list -> unknown) ->
          ?thisArg:any -> unit -> T.t list)
      =
      fun (x10425 : t) ->
        fun
          ~predicate:(x10417 :
                       value:T.t -> index:float -> array:T.t list -> unknown)
          ->
          fun ?thisArg:(x10418 : any option) ->
            fun () ->
              Ojs.list_of_js T.t_of_js
                (let x10426 = t_to_js x10425 in
                 Ojs.call (Ojs.get_prop_ascii x10426 "filter") "apply"
                   [|x10426;((let x10419 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x10419 "push"
                                   [|(Ojs.fun_to_js 3
                                        (fun (x10421 : Ojs.t) ->
                                           fun (x10422 : Ojs.t) ->
                                             fun (x10423 : Ojs.t) ->
                                               unknown_to_js
                                                 (x10417
                                                    ~value:(T.t_of_js x10421)
                                                    ~index:(Ojs.float_of_js
                                                              x10422)
                                                    ~array:(Ojs.list_of_js
                                                              T.t_of_js
                                                              x10423))))|]);
                              (match x10418 with
                               | Some x10420 ->
                                   ignore
                                     (Ojs.call x10419 "push"
                                        [|(any_to_js x10420)|])
                               | None -> ());
                              x10419))|])
    let (reduce :
      t ->
        callbackfn:(previousValue:T.t ->
                      currentValue:T.t ->
                        currentIndex:float -> array:T.t list -> T.t)
          -> T.t)
      =
      fun (x10434 : t) ->
        fun
          ~callbackfn:(x10428 :
                        previousValue:T.t ->
                          currentValue:T.t ->
                            currentIndex:float -> array:T.t list -> T.t)
          ->
          T.t_of_js
            (Ojs.call (t_to_js x10434) "reduce"
               [|(Ojs.fun_to_js 4
                    (fun (x10429 : Ojs.t) ->
                       fun (x10430 : Ojs.t) ->
                         fun (x10431 : Ojs.t) ->
                           fun (x10432 : Ojs.t) ->
                             T.t_to_js
                               (x10428 ~previousValue:(T.t_of_js x10429)
                                  ~currentValue:(T.t_of_js x10430)
                                  ~currentIndex:(Ojs.float_of_js x10431)
                                  ~array:(Ojs.list_of_js T.t_of_js x10432))))|])
    let (reduce :
      t ->
        callbackfn:(previousValue:T.t ->
                      currentValue:T.t ->
                        currentIndex:float -> array:T.t list -> T.t)
          -> initialValue:T.t -> T.t)
      =
      fun (x10442 : t) ->
        fun
          ~callbackfn:(x10435 :
                        previousValue:T.t ->
                          currentValue:T.t ->
                            currentIndex:float -> array:T.t list -> T.t)
          ->
          fun ~initialValue:(x10441 : T.t) ->
            T.t_of_js
              (Ojs.call (t_to_js x10442) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x10436 : Ojs.t) ->
                         fun (x10437 : Ojs.t) ->
                           fun (x10438 : Ojs.t) ->
                             fun (x10439 : Ojs.t) ->
                               T.t_to_js
                                 (x10435 ~previousValue:(T.t_of_js x10436)
                                    ~currentValue:(T.t_of_js x10437)
                                    ~currentIndex:(Ojs.float_of_js x10438)
                                    ~array:(Ojs.list_of_js T.t_of_js x10439))));(
                   T.t_to_js x10441)|])
    let (reduce :
      t ->
        callbackfn:(previousValue:'U ->
                      currentValue:T.t ->
                        currentIndex:float -> array:T.t list -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x10450 : t) ->
        fun
          ~callbackfn:(x10443 :
                        previousValue:'U ->
                          currentValue:T.t ->
                            currentIndex:float -> array:T.t list -> 'U)
          ->
          fun ~initialValue:(x10449 : 'U) ->
            Obj.magic
              (Ojs.call (t_to_js x10450) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x10444 : Ojs.t) ->
                         fun (x10445 : Ojs.t) ->
                           fun (x10446 : Ojs.t) ->
                             fun (x10447 : Ojs.t) ->
                               Obj.magic
                                 (x10443 ~previousValue:(Obj.magic x10444)
                                    ~currentValue:(T.t_of_js x10445)
                                    ~currentIndex:(Ojs.float_of_js x10446)
                                    ~array:(Ojs.list_of_js T.t_of_js x10447))));(
                   Obj.magic x10449)|])
    let (reduceRight :
      t ->
        callbackfn:(previousValue:T.t ->
                      currentValue:T.t ->
                        currentIndex:float -> array:T.t list -> T.t)
          -> T.t)
      =
      fun (x10457 : t) ->
        fun
          ~callbackfn:(x10451 :
                        previousValue:T.t ->
                          currentValue:T.t ->
                            currentIndex:float -> array:T.t list -> T.t)
          ->
          T.t_of_js
            (Ojs.call (t_to_js x10457) "reduceRight"
               [|(Ojs.fun_to_js 4
                    (fun (x10452 : Ojs.t) ->
                       fun (x10453 : Ojs.t) ->
                         fun (x10454 : Ojs.t) ->
                           fun (x10455 : Ojs.t) ->
                             T.t_to_js
                               (x10451 ~previousValue:(T.t_of_js x10452)
                                  ~currentValue:(T.t_of_js x10453)
                                  ~currentIndex:(Ojs.float_of_js x10454)
                                  ~array:(Ojs.list_of_js T.t_of_js x10455))))|])
    let (reduceRight :
      t ->
        callbackfn:(previousValue:T.t ->
                      currentValue:T.t ->
                        currentIndex:float -> array:T.t list -> T.t)
          -> initialValue:T.t -> T.t)
      =
      fun (x10465 : t) ->
        fun
          ~callbackfn:(x10458 :
                        previousValue:T.t ->
                          currentValue:T.t ->
                            currentIndex:float -> array:T.t list -> T.t)
          ->
          fun ~initialValue:(x10464 : T.t) ->
            T.t_of_js
              (Ojs.call (t_to_js x10465) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x10459 : Ojs.t) ->
                         fun (x10460 : Ojs.t) ->
                           fun (x10461 : Ojs.t) ->
                             fun (x10462 : Ojs.t) ->
                               T.t_to_js
                                 (x10458 ~previousValue:(T.t_of_js x10459)
                                    ~currentValue:(T.t_of_js x10460)
                                    ~currentIndex:(Ojs.float_of_js x10461)
                                    ~array:(Ojs.list_of_js T.t_of_js x10462))));(
                   T.t_to_js x10464)|])
    let (reduceRight :
      t ->
        callbackfn:(previousValue:'U ->
                      currentValue:T.t ->
                        currentIndex:float -> array:T.t list -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x10473 : t) ->
        fun
          ~callbackfn:(x10466 :
                        previousValue:'U ->
                          currentValue:T.t ->
                            currentIndex:float -> array:T.t list -> 'U)
          ->
          fun ~initialValue:(x10472 : 'U) ->
            Obj.magic
              (Ojs.call (t_to_js x10473) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x10467 : Ojs.t) ->
                         fun (x10468 : Ojs.t) ->
                           fun (x10469 : Ojs.t) ->
                             fun (x10470 : Ojs.t) ->
                               Obj.magic
                                 (x10466 ~previousValue:(Obj.magic x10467)
                                    ~currentValue:(T.t_of_js x10468)
                                    ~currentIndex:(Ojs.float_of_js x10469)
                                    ~array:(Ojs.list_of_js T.t_of_js x10470))));(
                   Obj.magic x10472)|])
    let (get : t -> float -> T.t) =
      fun (x10474 : t) ->
        fun (x10475 : float) ->
          T.t_of_js (Ojs.get_prop (t_to_js x10474) (Ojs.float_to_js x10475))
    let (set : t -> float -> T.t -> unit) =
      fun (x10476 : t) ->
        fun (x10477 : float) ->
          fun (x10478 : T.t) ->
            Ojs.set_prop (t_to_js x10476) (Ojs.float_to_js x10477)
              (T.t_to_js x10478)
    let (from :
      [ `U1 of T.t Iterable.t  | `U2 of T.t ArrayLike.t ] -> T.t list) =
      fun (x10479 : [ `U1 of T.t Iterable.t  | `U2 of T.t ArrayLike.t ]) ->
        Ojs.list_of_js T.t_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Array") "from"
             [|((match x10479 with
                 | `U1 x10480 -> Iterable.t_to_js T.t_to_js x10480
                 | `U2 x10482 -> ArrayLike.t_to_js T.t_to_js x10482))|])
    let (from :
      iterable:[ `U1 of T.t Iterable.t  | `U2 of T.t ArrayLike.t ] ->
        mapfn:(v:T.t -> k:float -> 'U) -> ?thisArg:any -> unit -> 'U list)
      =
      fun
        ~iterable:(x10485 :
                    [ `U1 of T.t Iterable.t  | `U2 of T.t ArrayLike.t ])
        ->
        fun ~mapfn:(x10486 : v:T.t -> k:float -> 'U) ->
          fun ?thisArg:(x10487 : any option) ->
            fun () ->
              Ojs.list_of_js Obj.magic
                (let x10496 = Ojs.get_prop_ascii Ojs.global "Array" in
                 Ojs.call (Ojs.get_prop_ascii x10496 "from") "apply"
                   [|x10496;((let x10488 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x10488 "push"
                                   [|((match x10485 with
                                       | `U1 x10492 ->
                                           Iterable.t_to_js T.t_to_js x10492
                                       | `U2 x10494 ->
                                           ArrayLike.t_to_js T.t_to_js x10494))|]);
                              ignore
                                (Ojs.call x10488 "push"
                                   [|(Ojs.fun_to_js 2
                                        (fun (x10490 : Ojs.t) ->
                                           fun (x10491 : Ojs.t) ->
                                             Obj.magic
                                               (x10486 ~v:(T.t_of_js x10490)
                                                  ~k:(Ojs.float_of_js x10491))))|]);
                              (match x10487 with
                               | Some x10489 ->
                                   ignore
                                     (Ojs.call x10488 "push"
                                        [|(any_to_js x10489)|])
                               | None -> ());
                              x10488))|])
    let (from : T.t ArrayLike.t -> T.t list) =
      fun (x10498 : T.t ArrayLike.t) ->
        Ojs.list_of_js T.t_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Array") "from"
             [|(ArrayLike.t_to_js T.t_to_js x10498)|])
    let (from :
      arrayLike:T.t ArrayLike.t ->
        mapfn:(v:T.t -> k:float -> 'U) -> ?thisArg:any -> unit -> 'U list)
      =
      fun ~arrayLike:(x10501 : T.t ArrayLike.t) ->
        fun ~mapfn:(x10502 : v:T.t -> k:float -> 'U) ->
          fun ?thisArg:(x10503 : any option) ->
            fun () ->
              Ojs.list_of_js Obj.magic
                (let x10509 = Ojs.get_prop_ascii Ojs.global "Array" in
                 Ojs.call (Ojs.get_prop_ascii x10509 "from") "apply"
                   [|x10509;((let x10504 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x10504 "push"
                                   [|(ArrayLike.t_to_js T.t_to_js x10501)|]);
                              ignore
                                (Ojs.call x10504 "push"
                                   [|(Ojs.fun_to_js 2
                                        (fun (x10506 : Ojs.t) ->
                                           fun (x10507 : Ojs.t) ->
                                             Obj.magic
                                               (x10502 ~v:(T.t_of_js x10506)
                                                  ~k:(Ojs.float_of_js x10507))))|]);
                              (match x10503 with
                               | Some x10505 ->
                                   ignore
                                     (Ojs.call x10504 "push"
                                        [|(any_to_js x10505)|])
                               | None -> ());
                              x10504))|])
    let (of_ : T.t list -> T.t list) =
      fun (x10511 : T.t list) ->
        Ojs.list_of_js T.t_of_js
          (let x10514 = Ojs.get_prop_ascii Ojs.global "Array" in
           Ojs.call (Ojs.get_prop_ascii x10514 "of") "apply"
             [|x10514;((let x10512 =
                          Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                            [||] in
                        List.iter
                          (fun (x10513 : T.t) ->
                             ignore
                               (Ojs.call x10512 "push" [|(T.t_to_js x10513)|]))
                          x10511;
                        x10512))|])
    let (create : ?arrayLength:float -> unit -> any list) =
      fun ?arrayLength:(x10516 : float option) ->
        fun () ->
          Ojs.list_of_js any_of_js
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "Array")
               (let x10517 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x10516 with
                 | Some x10518 ->
                     ignore
                       (Ojs.call x10517 "push" [|(Ojs.float_to_js x10518)|])
                 | None -> ());
                x10517))
    let (create : float -> T.t list) =
      fun (x10520 : float) ->
        Ojs.list_of_js T.t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
             [|(Ojs.float_to_js x10520)|])
    let (create : T.t list -> T.t list) =
      fun (x10522 : T.t list) ->
        Ojs.list_of_js T.t_of_js
          (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "Array")
             (let x10523 =
                Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
              List.iter
                (fun (x10524 : T.t) ->
                   ignore (Ojs.call x10523 "push" [|(T.t_to_js x10524)|]))
                x10522;
              x10523))
    let (invoke : ?arrayLength:float -> unit -> any list) =
      fun ?arrayLength:(x10526 : float option) ->
        fun () ->
          Ojs.list_of_js any_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "Array") "apply"
               [|Ojs.null;((let x10527 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x10526 with
                             | Some x10528 ->
                                 ignore
                                   (Ojs.call x10527 "push"
                                      [|(Ojs.float_to_js x10528)|])
                             | None -> ());
                            x10527))|])
    let (invoke : float -> T.t list) =
      fun (x10530 : float) ->
        Ojs.list_of_js T.t_of_js
          (Ojs.apply (Ojs.get_prop_ascii Ojs.global "Array")
             [|(Ojs.float_to_js x10530)|])
    let (invoke : T.t list -> T.t list) =
      fun (x10532 : T.t list) ->
        Ojs.list_of_js T.t_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Array") "apply"
             [|Ojs.null;((let x10533 =
                            Ojs.new_obj
                              (Ojs.get_prop_ascii Ojs.global "Array") 
                              [||] in
                          List.iter
                            (fun (x10534 : T.t) ->
                               ignore
                                 (Ojs.call x10533 "push"
                                    [|(T.t_to_js x10534)|])) x10532;
                          x10533))|])
    let (isArray : any -> bool) =
      fun (x10536 : any) ->
        Ojs.bool_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Array") "isArray"
             [|(any_to_js x10536)|])
    let (prototype : unit -> any list) =
      fun () ->
        Ojs.list_of_js any_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Array")
             "prototype")
  end
module TypedPropertyDescriptor_Make(T:Ojs.T) =
  struct
    type 'T parent = 'T TypedPropertyDescriptor.t
    let rec parent_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T parent =
      fun (type __T) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x10540 : Ojs.t) ->
            TypedPropertyDescriptor.t_of_js __T_of_js x10540
    and parent_to_js : 'T . ('T -> Ojs.t) -> 'T parent -> Ojs.t =
      fun (type __T) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x10538 : __T TypedPropertyDescriptor.t) ->
            TypedPropertyDescriptor.t_to_js __T_to_js x10538
    type t = T.t parent
    let rec t_of_js : Ojs.t -> t =
      fun (x10544 : Ojs.t) -> parent_of_js T.t_of_js x10544
    and t_to_js : t -> Ojs.t =
      fun (x10542 : T.t parent) -> parent_to_js T.t_to_js x10542
    let (get_enumerable : t -> bool option) =
      fun (x10546 : t) ->
        Ojs.option_of_js Ojs.bool_of_js
          (Ojs.get_prop_ascii (t_to_js x10546) "enumerable")
    let (set_enumerable : t -> bool -> unit) =
      fun (x10548 : t) ->
        fun (x10549 : bool) ->
          Ojs.set_prop_ascii (t_to_js x10548) "enumerable"
            (Ojs.bool_to_js x10549)
    let (get_configurable : t -> bool option) =
      fun (x10550 : t) ->
        Ojs.option_of_js Ojs.bool_of_js
          (Ojs.get_prop_ascii (t_to_js x10550) "configurable")
    let (set_configurable : t -> bool -> unit) =
      fun (x10552 : t) ->
        fun (x10553 : bool) ->
          Ojs.set_prop_ascii (t_to_js x10552) "configurable"
            (Ojs.bool_to_js x10553)
    let (get_writable : t -> bool option) =
      fun (x10554 : t) ->
        Ojs.option_of_js Ojs.bool_of_js
          (Ojs.get_prop_ascii (t_to_js x10554) "writable")
    let (set_writable : t -> bool -> unit) =
      fun (x10556 : t) ->
        fun (x10557 : bool) ->
          Ojs.set_prop_ascii (t_to_js x10556) "writable"
            (Ojs.bool_to_js x10557)
    let (get_value : t -> T.t option) =
      fun (x10558 : t) ->
        Ojs.option_of_js T.t_of_js
          (Ojs.get_prop_ascii (t_to_js x10558) "value")
    let (set_value : t -> T.t -> unit) =
      fun (x10560 : t) ->
        fun (x10561 : T.t) ->
          Ojs.set_prop_ascii (t_to_js x10560) "value" (T.t_to_js x10561)
    let (get_ : t -> T.t) =
      fun (x10562 : t) -> T.t_of_js (Ojs.call (t_to_js x10562) "get" [||])
    let (set_ : t -> value:T.t -> unit) =
      fun (x10564 : t) ->
        fun ~value:(x10563 : T.t) ->
          ignore (Ojs.call (t_to_js x10564) "set" [|(T.t_to_js x10563)|])
  end
module PromiseLike_Make(T:Ojs.T) =
  struct
    type 'T parent = 'T PromiseLike.t
    let rec parent_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T parent =
      fun (type __T) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x10567 : Ojs.t) -> PromiseLike.t_of_js __T_of_js x10567
    and parent_to_js : 'T . ('T -> Ojs.t) -> 'T parent -> Ojs.t =
      fun (type __T) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x10565 : __T PromiseLike.t) ->
            PromiseLike.t_to_js __T_to_js x10565
    type t = T.t parent
    let rec t_of_js : Ojs.t -> t =
      fun (x10571 : Ojs.t) -> parent_of_js T.t_of_js x10571
    and t_to_js : t -> Ojs.t =
      fun (x10569 : T.t parent) -> parent_to_js T.t_to_js x10569
    let (then_ :
      t ->
        ?onfulfilled:[ `Null  | `Undefined of undefined 
                     | `U1 of
                         T.t ->
                           [ `U1 of 'TResult1  | `U2 of 'TResult1 parent ]
                         ]
          ->
          ?onrejected:[ `Null  | `Undefined of undefined 
                      | `U1 of
                          any ->
                            [ `U1 of 'TResult2  | `U2 of 'TResult2 parent ]
                          ]
            -> unit -> ('TResult1, 'TResult2) union2 parent)
      =
      fun (x10590 : t) ->
        fun
          ?onfulfilled:(x10573 :
                         [ `Null  | `Undefined of undefined 
                         | `U1 of
                             T.t ->
                               [ `U1 of 'TResult1 
                               | `U2 of 'TResult1 parent ]
                             ]
                           option)
          ->
          fun
            ?onrejected:(x10574 :
                          [ `Null  | `Undefined of undefined 
                          | `U1 of
                              any ->
                                [ `U1 of 'TResult2 
                                | `U2 of 'TResult2 parent ]
                              ]
                            option)
            ->
            fun () ->
              parent_of_js
                (fun (x10592 : Ojs.t) ->
                   union2_of_js Obj.magic Obj.magic x10592)
                (let x10591 = t_to_js x10590 in
                 Ojs.call (Ojs.get_prop_ascii x10591 "then") "apply"
                   [|x10591;((let x10575 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              (match x10573 with
                               | Some x10583 ->
                                   ignore
                                     (Ojs.call x10575 "push"
                                        [|((match x10583 with
                                            | `Null -> Ojs.null
                                            | `Undefined x10584 ->
                                                undefined_to_js x10584
                                            | `U1 x10585 ->
                                                Ojs.fun_to_js 1
                                                  (fun (x10586 : Ojs.t) ->
                                                     match x10585
                                                             (T.t_of_js
                                                                x10586)
                                                     with
                                                     | `U1 x10587 ->
                                                         Obj.magic x10587
                                                     | `U2 x10588 ->
                                                         parent_to_js
                                                           Obj.magic x10588)))|])
                               | None -> ());
                              (match x10574 with
                               | Some x10576 ->
                                   ignore
                                     (Ojs.call x10575 "push"
                                        [|((match x10576 with
                                            | `Null -> Ojs.null
                                            | `Undefined x10577 ->
                                                undefined_to_js x10577
                                            | `U1 x10578 ->
                                                Ojs.fun_to_js 1
                                                  (fun (x10579 : Ojs.t) ->
                                                     match x10578
                                                             (any_of_js
                                                                x10579)
                                                     with
                                                     | `U1 x10580 ->
                                                         Obj.magic x10580
                                                     | `U2 x10581 ->
                                                         parent_to_js
                                                           Obj.magic x10581)))|])
                               | None -> ());
                              x10575))|])
  end
module ArrayLike_Make(T:Ojs.T) =
  struct
    type 'T parent = 'T ArrayLike.t
    let rec parent_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T parent =
      fun (type __T) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x10597 : Ojs.t) -> ArrayLike.t_of_js __T_of_js x10597
    and parent_to_js : 'T . ('T -> Ojs.t) -> 'T parent -> Ojs.t =
      fun (type __T) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x10595 : __T ArrayLike.t) ->
            ArrayLike.t_to_js __T_to_js x10595
    type t = T.t parent
    let rec t_of_js : Ojs.t -> t =
      fun (x10601 : Ojs.t) -> parent_of_js T.t_of_js x10601
    and t_to_js : t -> Ojs.t =
      fun (x10599 : T.t parent) -> parent_to_js T.t_to_js x10599
    let (get_length : t -> float) =
      fun (x10603 : t) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x10603) "length")
    let (get : t -> float -> T.t) =
      fun (x10604 : t) ->
        fun (x10605 : float) ->
          T.t_of_js (Ojs.get_prop (t_to_js x10604) (Ojs.float_to_js x10605))
  end
module Map_Make(K:Ojs.T)(V:Ojs.T) =
  struct
    type ('K, 'V) parent = ('K, 'V) Map.t
    let rec parent_of_js :
      'K 'V . (Ojs.t -> 'K) -> (Ojs.t -> 'V) -> Ojs.t -> ('K, 'V) parent =
      fun (type __K) ->
        fun (type __V) ->
          fun (__K_of_js : Ojs.t -> __K) ->
            fun (__V_of_js : Ojs.t -> __V) ->
              fun (x10609 : Ojs.t) -> Map.t_of_js __K_of_js __V_of_js x10609
    and parent_to_js :
      'K 'V . ('K -> Ojs.t) -> ('V -> Ojs.t) -> ('K, 'V) parent -> Ojs.t =
      fun (type __K) ->
        fun (type __V) ->
          fun (__K_to_js : __K -> Ojs.t) ->
            fun (__V_to_js : __V -> Ojs.t) ->
              fun (x10606 : (__K, __V) Map.t) ->
                Map.t_to_js __K_to_js __V_to_js x10606
    type t = (K.t, V.t) parent
    let rec t_of_js : Ojs.t -> t =
      fun (x10615 : Ojs.t) -> parent_of_js K.t_of_js V.t_of_js x10615
    and t_to_js : t -> Ojs.t =
      fun (x10612 : (K.t, V.t) parent) ->
        parent_to_js K.t_to_js V.t_to_js x10612
    let (entries : t -> (K.t * V.t) IterableIterator.t) =
      fun (x10618 : t) ->
        IterableIterator.t_of_js
          (fun (x10619 : Ojs.t) ->
             let x10620 = x10619 in
             ((K.t_of_js (Ojs.array_get x10620 0)),
               (V.t_of_js (Ojs.array_get x10620 1))))
          (Ojs.call (t_to_js x10618) "entries" [||])
    let (keys : t -> K.t IterableIterator.t) =
      fun (x10621 : t) ->
        IterableIterator.t_of_js K.t_of_js
          (Ojs.call (t_to_js x10621) "keys" [||])
    let (values : t -> V.t IterableIterator.t) =
      fun (x10623 : t) ->
        IterableIterator.t_of_js V.t_of_js
          (Ojs.call (t_to_js x10623) "values" [||])
    let (clear : t -> unit) =
      fun (x10625 : t) -> ignore (Ojs.call (t_to_js x10625) "clear" [||])
    let (delete : t -> key:K.t -> bool) =
      fun (x10627 : t) ->
        fun ~key:(x10626 : K.t) ->
          Ojs.bool_of_js
            (Ojs.call (t_to_js x10627) "delete" [|(K.t_to_js x10626)|])
    let (forEach :
      t ->
        callbackfn:(value:V.t -> key:K.t -> map:t -> unit) ->
          ?thisArg:any -> unit -> unit)
      =
      fun (x10635 : t) ->
        fun ~callbackfn:(x10628 : value:V.t -> key:K.t -> map:t -> unit) ->
          fun ?thisArg:(x10629 : any option) ->
            fun () ->
              ignore
                (let x10636 = t_to_js x10635 in
                 Ojs.call (Ojs.get_prop_ascii x10636 "forEach") "apply"
                   [|x10636;((let x10630 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x10630 "push"
                                   [|(Ojs.fun_to_js 3
                                        (fun (x10632 : Ojs.t) ->
                                           fun (x10633 : Ojs.t) ->
                                             fun (x10634 : Ojs.t) ->
                                               x10628
                                                 ~value:(V.t_of_js x10632)
                                                 ~key:(K.t_of_js x10633)
                                                 ~map:(t_of_js x10634)))|]);
                              (match x10629 with
                               | Some x10631 ->
                                   ignore
                                     (Ojs.call x10630 "push"
                                        [|(any_to_js x10631)|])
                               | None -> ());
                              x10630))|])
    let (get_ : t -> key:K.t -> V.t option) =
      fun (x10638 : t) ->
        fun ~key:(x10637 : K.t) ->
          Ojs.option_of_js V.t_of_js
            (Ojs.call (t_to_js x10638) "get" [|(K.t_to_js x10637)|])
    let (has : t -> key:K.t -> bool) =
      fun (x10641 : t) ->
        fun ~key:(x10640 : K.t) ->
          Ojs.bool_of_js
            (Ojs.call (t_to_js x10641) "has" [|(K.t_to_js x10640)|])
    let (set_ : t -> key:K.t -> value:V.t -> t) =
      fun (x10644 : t) ->
        fun ~key:(x10642 : K.t) ->
          fun ~value:(x10643 : V.t) ->
            t_of_js
              (Ojs.call (t_to_js x10644) "set"
                 [|(K.t_to_js x10642);(V.t_to_js x10643)|])
    let (get_size : t -> float) =
      fun (x10645 : t) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x10645) "size")
    let (create : unit -> (any, any) parent) =
      fun () ->
        parent_of_js any_of_js any_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Map") [||])
    let (create : ?iterable:(K.t * V.t) Iterable.t option -> unit -> t) =
      fun ?iterable:(x10648 : (K.t * V.t) Iterable.t option option) ->
        fun () ->
          t_of_js
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "Map")
               (let x10649 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x10648 with
                 | Some x10650 ->
                     ignore
                       (Ojs.call x10649 "push"
                          [|(Ojs.option_to_js
                               (fun (x10651 : (K.t * V.t) Iterable.t) ->
                                  Iterable.t_to_js
                                    (fun (x10652 : (K.t * V.t)) ->
                                       let (x10653, x10654) = x10652 in
                                       let x10655 = Ojs.array_make 2 in
                                       Ojs.array_set x10655 0
                                         (K.t_to_js x10653);
                                       Ojs.array_set x10655 1
                                         (V.t_to_js x10654);
                                       x10655) x10651) x10650)|])
                 | None -> ());
                x10649))
    let (create : unit -> (any, any) parent) =
      fun () ->
        parent_of_js any_of_js any_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Map") [||])
    let (create : ?entries:(K.t * V.t) list option -> unit -> t) =
      fun ?entries:(x10658 : (K.t * V.t) list option option) ->
        fun () ->
          t_of_js
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "Map")
               (let x10659 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x10658 with
                 | Some x10660 ->
                     ignore
                       (Ojs.call x10659 "push"
                          [|(Ojs.option_to_js
                               (fun (x10661 : (K.t * V.t) list) ->
                                  Ojs.list_to_js
                                    (fun (x10662 : (K.t * V.t)) ->
                                       let (x10663, x10664) = x10662 in
                                       let x10665 = Ojs.array_make 2 in
                                       Ojs.array_set x10665 0
                                         (K.t_to_js x10663);
                                       Ojs.array_set x10665 1
                                         (V.t_to_js x10664);
                                       x10665) x10661) x10660)|])
                 | None -> ());
                x10659))
    let (prototype : unit -> (any, any) parent) =
      fun () ->
        parent_of_js any_of_js any_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Map")
             "prototype")
  end
module ReadonlyMap_Make(K:Ojs.T)(V:Ojs.T) =
  struct
    type ('K, 'V) parent = ('K, 'V) ReadonlyMap.t
    let rec parent_of_js :
      'K 'V . (Ojs.t -> 'K) -> (Ojs.t -> 'V) -> Ojs.t -> ('K, 'V) parent =
      fun (type __K) ->
        fun (type __V) ->
          fun (__K_of_js : Ojs.t -> __K) ->
            fun (__V_of_js : Ojs.t -> __V) ->
              fun (x10671 : Ojs.t) ->
                ReadonlyMap.t_of_js __K_of_js __V_of_js x10671
    and parent_to_js :
      'K 'V . ('K -> Ojs.t) -> ('V -> Ojs.t) -> ('K, 'V) parent -> Ojs.t =
      fun (type __K) ->
        fun (type __V) ->
          fun (__K_to_js : __K -> Ojs.t) ->
            fun (__V_to_js : __V -> Ojs.t) ->
              fun (x10668 : (__K, __V) ReadonlyMap.t) ->
                ReadonlyMap.t_to_js __K_to_js __V_to_js x10668
    type t = (K.t, V.t) parent
    let rec t_of_js : Ojs.t -> t =
      fun (x10677 : Ojs.t) -> parent_of_js K.t_of_js V.t_of_js x10677
    and t_to_js : t -> Ojs.t =
      fun (x10674 : (K.t, V.t) parent) ->
        parent_to_js K.t_to_js V.t_to_js x10674
    let (entries : t -> (K.t * V.t) IterableIterator.t) =
      fun (x10680 : t) ->
        IterableIterator.t_of_js
          (fun (x10681 : Ojs.t) ->
             let x10682 = x10681 in
             ((K.t_of_js (Ojs.array_get x10682 0)),
               (V.t_of_js (Ojs.array_get x10682 1))))
          (Ojs.call (t_to_js x10680) "entries" [||])
    let (keys : t -> K.t IterableIterator.t) =
      fun (x10683 : t) ->
        IterableIterator.t_of_js K.t_of_js
          (Ojs.call (t_to_js x10683) "keys" [||])
    let (values : t -> V.t IterableIterator.t) =
      fun (x10685 : t) ->
        IterableIterator.t_of_js V.t_of_js
          (Ojs.call (t_to_js x10685) "values" [||])
    let (forEach :
      t ->
        callbackfn:(value:V.t -> key:K.t -> map:t -> unit) ->
          ?thisArg:any -> unit -> unit)
      =
      fun (x10694 : t) ->
        fun ~callbackfn:(x10687 : value:V.t -> key:K.t -> map:t -> unit) ->
          fun ?thisArg:(x10688 : any option) ->
            fun () ->
              ignore
                (let x10695 = t_to_js x10694 in
                 Ojs.call (Ojs.get_prop_ascii x10695 "forEach") "apply"
                   [|x10695;((let x10689 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x10689 "push"
                                   [|(Ojs.fun_to_js 3
                                        (fun (x10691 : Ojs.t) ->
                                           fun (x10692 : Ojs.t) ->
                                             fun (x10693 : Ojs.t) ->
                                               x10687
                                                 ~value:(V.t_of_js x10691)
                                                 ~key:(K.t_of_js x10692)
                                                 ~map:(t_of_js x10693)))|]);
                              (match x10688 with
                               | Some x10690 ->
                                   ignore
                                     (Ojs.call x10689 "push"
                                        [|(any_to_js x10690)|])
                               | None -> ());
                              x10689))|])
    let (get_ : t -> key:K.t -> V.t option) =
      fun (x10697 : t) ->
        fun ~key:(x10696 : K.t) ->
          Ojs.option_of_js V.t_of_js
            (Ojs.call (t_to_js x10697) "get" [|(K.t_to_js x10696)|])
    let (has : t -> key:K.t -> bool) =
      fun (x10700 : t) ->
        fun ~key:(x10699 : K.t) ->
          Ojs.bool_of_js
            (Ojs.call (t_to_js x10700) "has" [|(K.t_to_js x10699)|])
    let (get_size : t -> float) =
      fun (x10701 : t) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x10701) "size")
  end
module WeakMap_Make(K:Ojs.T)(V:Ojs.T) =
  struct
    type ('K, 'V) parent = ('K, 'V) WeakMap.t
    let rec parent_of_js :
      'K 'V . (Ojs.t -> 'K) -> (Ojs.t -> 'V) -> Ojs.t -> ('K, 'V) parent =
      fun (type __K) ->
        fun (type __V) ->
          fun (__K_of_js : Ojs.t -> __K) ->
            fun (__V_of_js : Ojs.t -> __V) ->
              fun (x10705 : Ojs.t) ->
                WeakMap.t_of_js __K_of_js __V_of_js x10705
    and parent_to_js :
      'K 'V . ('K -> Ojs.t) -> ('V -> Ojs.t) -> ('K, 'V) parent -> Ojs.t =
      fun (type __K) ->
        fun (type __V) ->
          fun (__K_to_js : __K -> Ojs.t) ->
            fun (__V_to_js : __V -> Ojs.t) ->
              fun (x10702 : (__K, __V) WeakMap.t) ->
                WeakMap.t_to_js __K_to_js __V_to_js x10702
    type t = (K.t, V.t) parent
    let rec t_of_js : Ojs.t -> t =
      fun (x10711 : Ojs.t) -> parent_of_js K.t_of_js V.t_of_js x10711
    and t_to_js : t -> Ojs.t =
      fun (x10708 : (K.t, V.t) parent) ->
        parent_to_js K.t_to_js V.t_to_js x10708
    let (delete : t -> key:K.t -> bool) =
      fun (x10715 : t) ->
        fun ~key:(x10714 : K.t) ->
          Ojs.bool_of_js
            (Ojs.call (t_to_js x10715) "delete" [|(K.t_to_js x10714)|])
    let (get_ : t -> key:K.t -> V.t option) =
      fun (x10717 : t) ->
        fun ~key:(x10716 : K.t) ->
          Ojs.option_of_js V.t_of_js
            (Ojs.call (t_to_js x10717) "get" [|(K.t_to_js x10716)|])
    let (has : t -> key:K.t -> bool) =
      fun (x10720 : t) ->
        fun ~key:(x10719 : K.t) ->
          Ojs.bool_of_js
            (Ojs.call (t_to_js x10720) "has" [|(K.t_to_js x10719)|])
    let (set_ : t -> key:K.t -> value:V.t -> t) =
      fun (x10723 : t) ->
        fun ~key:(x10721 : K.t) ->
          fun ~value:(x10722 : V.t) ->
            t_of_js
              (Ojs.call (t_to_js x10723) "set"
                 [|(K.t_to_js x10721);(V.t_to_js x10722)|])
    let (create : (K.t * V.t) Iterable.t -> t) =
      fun (x10724 : (K.t * V.t) Iterable.t) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "WeakMap")
             [|(Iterable.t_to_js
                  (fun (x10725 : (K.t * V.t)) ->
                     let (x10726, x10727) = x10725 in
                     let x10728 = Ojs.array_make 2 in
                     Ojs.array_set x10728 0 (K.t_to_js x10726);
                     Ojs.array_set x10728 1 (V.t_to_js x10727);
                     x10728) x10724)|])
    let (create : ?entries:(K.t * V.t) list option -> unit -> t) =
      fun ?entries:(x10729 : (K.t * V.t) list option option) ->
        fun () ->
          t_of_js
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "WeakMap")
               (let x10730 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x10729 with
                 | Some x10731 ->
                     ignore
                       (Ojs.call x10730 "push"
                          [|(Ojs.option_to_js
                               (fun (x10732 : (K.t * V.t) list) ->
                                  Ojs.list_to_js
                                    (fun (x10733 : (K.t * V.t)) ->
                                       let (x10734, x10735) = x10733 in
                                       let x10736 = Ojs.array_make 2 in
                                       Ojs.array_set x10736 0
                                         (K.t_to_js x10734);
                                       Ojs.array_set x10736 1
                                         (V.t_to_js x10735);
                                       x10736) x10732) x10731)|])
                 | None -> ());
                x10730))
    let (prototype : unit -> (untyped_object, any) parent) =
      fun () ->
        parent_of_js untyped_object_of_js any_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "WeakMap")
             "prototype")
  end
module Set_Make(T:Ojs.T) =
  struct
    type 'T parent = 'T Set.t
    let rec parent_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T parent =
      fun (type __T) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x10741 : Ojs.t) -> Set.t_of_js __T_of_js x10741
    and parent_to_js : 'T . ('T -> Ojs.t) -> 'T parent -> Ojs.t =
      fun (type __T) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x10739 : __T Set.t) -> Set.t_to_js __T_to_js x10739
    type t = T.t parent
    let rec t_of_js : Ojs.t -> t =
      fun (x10745 : Ojs.t) -> parent_of_js T.t_of_js x10745
    and t_to_js : t -> Ojs.t =
      fun (x10743 : T.t parent) -> parent_to_js T.t_to_js x10743
    let (entries : t -> (T.t * T.t) IterableIterator.t) =
      fun (x10747 : t) ->
        IterableIterator.t_of_js
          (fun (x10748 : Ojs.t) ->
             let x10749 = x10748 in
             ((T.t_of_js (Ojs.array_get x10749 0)),
               (T.t_of_js (Ojs.array_get x10749 1))))
          (Ojs.call (t_to_js x10747) "entries" [||])
    let (keys : t -> T.t IterableIterator.t) =
      fun (x10750 : t) ->
        IterableIterator.t_of_js T.t_of_js
          (Ojs.call (t_to_js x10750) "keys" [||])
    let (values : t -> T.t IterableIterator.t) =
      fun (x10752 : t) ->
        IterableIterator.t_of_js T.t_of_js
          (Ojs.call (t_to_js x10752) "values" [||])
    let (add : t -> value:T.t -> t) =
      fun (x10755 : t) ->
        fun ~value:(x10754 : T.t) ->
          t_of_js (Ojs.call (t_to_js x10755) "add" [|(T.t_to_js x10754)|])
    let (clear : t -> unit) =
      fun (x10756 : t) -> ignore (Ojs.call (t_to_js x10756) "clear" [||])
    let (delete : t -> value:T.t -> bool) =
      fun (x10758 : t) ->
        fun ~value:(x10757 : T.t) ->
          Ojs.bool_of_js
            (Ojs.call (t_to_js x10758) "delete" [|(T.t_to_js x10757)|])
    let (forEach :
      t ->
        callbackfn:(value:T.t -> value2:T.t -> set_:t -> unit) ->
          ?thisArg:any -> unit -> unit)
      =
      fun (x10766 : t) ->
        fun ~callbackfn:(x10759 : value:T.t -> value2:T.t -> set_:t -> unit)
          ->
          fun ?thisArg:(x10760 : any option) ->
            fun () ->
              ignore
                (let x10767 = t_to_js x10766 in
                 Ojs.call (Ojs.get_prop_ascii x10767 "forEach") "apply"
                   [|x10767;((let x10761 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x10761 "push"
                                   [|(Ojs.fun_to_js 3
                                        (fun (x10763 : Ojs.t) ->
                                           fun (x10764 : Ojs.t) ->
                                             fun (x10765 : Ojs.t) ->
                                               x10759
                                                 ~value:(T.t_of_js x10763)
                                                 ~value2:(T.t_of_js x10764)
                                                 ~set_:(t_of_js x10765)))|]);
                              (match x10760 with
                               | Some x10762 ->
                                   ignore
                                     (Ojs.call x10761 "push"
                                        [|(any_to_js x10762)|])
                               | None -> ());
                              x10761))|])
    let (has : t -> value:T.t -> bool) =
      fun (x10769 : t) ->
        fun ~value:(x10768 : T.t) ->
          Ojs.bool_of_js
            (Ojs.call (t_to_js x10769) "has" [|(T.t_to_js x10768)|])
    let (get_size : t -> float) =
      fun (x10770 : t) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x10770) "size")
    let (create : ?iterable:T.t Iterable.t option -> unit -> t) =
      fun ?iterable:(x10771 : T.t Iterable.t option option) ->
        fun () ->
          t_of_js
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "Set")
               (let x10772 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x10771 with
                 | Some x10773 ->
                     ignore
                       (Ojs.call x10772 "push"
                          [|(Ojs.option_to_js
                               (fun (x10774 : T.t Iterable.t) ->
                                  Iterable.t_to_js T.t_to_js x10774) x10773)|])
                 | None -> ());
                x10772))
    let (create : ?values:T.t list option -> unit -> t) =
      fun ?values:(x10776 : T.t list option option) ->
        fun () ->
          t_of_js
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "Set")
               (let x10777 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x10776 with
                 | Some x10778 ->
                     ignore
                       (Ojs.call x10777 "push"
                          [|(Ojs.option_to_js
                               (fun (x10779 : T.t list) ->
                                  Ojs.list_to_js T.t_to_js x10779) x10778)|])
                 | None -> ());
                x10777))
    let (prototype : unit -> any parent) =
      fun () ->
        parent_of_js any_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Set")
             "prototype")
  end
module ReadonlySet_Make(T:Ojs.T) =
  struct
    type 'T parent = 'T ReadonlySet.t
    let rec parent_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T parent =
      fun (type __T) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x10784 : Ojs.t) -> ReadonlySet.t_of_js __T_of_js x10784
    and parent_to_js : 'T . ('T -> Ojs.t) -> 'T parent -> Ojs.t =
      fun (type __T) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x10782 : __T ReadonlySet.t) ->
            ReadonlySet.t_to_js __T_to_js x10782
    type t = T.t parent
    let rec t_of_js : Ojs.t -> t =
      fun (x10788 : Ojs.t) -> parent_of_js T.t_of_js x10788
    and t_to_js : t -> Ojs.t =
      fun (x10786 : T.t parent) -> parent_to_js T.t_to_js x10786
    let (entries : t -> (T.t * T.t) IterableIterator.t) =
      fun (x10790 : t) ->
        IterableIterator.t_of_js
          (fun (x10791 : Ojs.t) ->
             let x10792 = x10791 in
             ((T.t_of_js (Ojs.array_get x10792 0)),
               (T.t_of_js (Ojs.array_get x10792 1))))
          (Ojs.call (t_to_js x10790) "entries" [||])
    let (keys : t -> T.t IterableIterator.t) =
      fun (x10793 : t) ->
        IterableIterator.t_of_js T.t_of_js
          (Ojs.call (t_to_js x10793) "keys" [||])
    let (values : t -> T.t IterableIterator.t) =
      fun (x10795 : t) ->
        IterableIterator.t_of_js T.t_of_js
          (Ojs.call (t_to_js x10795) "values" [||])
    let (forEach :
      t ->
        callbackfn:(value:T.t -> value2:T.t -> set_:t -> unit) ->
          ?thisArg:any -> unit -> unit)
      =
      fun (x10804 : t) ->
        fun ~callbackfn:(x10797 : value:T.t -> value2:T.t -> set_:t -> unit)
          ->
          fun ?thisArg:(x10798 : any option) ->
            fun () ->
              ignore
                (let x10805 = t_to_js x10804 in
                 Ojs.call (Ojs.get_prop_ascii x10805 "forEach") "apply"
                   [|x10805;((let x10799 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x10799 "push"
                                   [|(Ojs.fun_to_js 3
                                        (fun (x10801 : Ojs.t) ->
                                           fun (x10802 : Ojs.t) ->
                                             fun (x10803 : Ojs.t) ->
                                               x10797
                                                 ~value:(T.t_of_js x10801)
                                                 ~value2:(T.t_of_js x10802)
                                                 ~set_:(t_of_js x10803)))|]);
                              (match x10798 with
                               | Some x10800 ->
                                   ignore
                                     (Ojs.call x10799 "push"
                                        [|(any_to_js x10800)|])
                               | None -> ());
                              x10799))|])
    let (has : t -> value:T.t -> bool) =
      fun (x10807 : t) ->
        fun ~value:(x10806 : T.t) ->
          Ojs.bool_of_js
            (Ojs.call (t_to_js x10807) "has" [|(T.t_to_js x10806)|])
    let (get_size : t -> float) =
      fun (x10808 : t) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x10808) "size")
  end
module WeakSet_Make(T:Ojs.T) =
  struct
    type 'T parent = 'T WeakSet.t
    let rec parent_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T parent =
      fun (type __T) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x10811 : Ojs.t) -> WeakSet.t_of_js __T_of_js x10811
    and parent_to_js : 'T . ('T -> Ojs.t) -> 'T parent -> Ojs.t =
      fun (type __T) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x10809 : __T WeakSet.t) -> WeakSet.t_to_js __T_to_js x10809
    type t = T.t parent
    let rec t_of_js : Ojs.t -> t =
      fun (x10815 : Ojs.t) -> parent_of_js T.t_of_js x10815
    and t_to_js : t -> Ojs.t =
      fun (x10813 : T.t parent) -> parent_to_js T.t_to_js x10813
    let (add : t -> value:T.t -> t) =
      fun (x10818 : t) ->
        fun ~value:(x10817 : T.t) ->
          t_of_js (Ojs.call (t_to_js x10818) "add" [|(T.t_to_js x10817)|])
    let (delete : t -> value:T.t -> bool) =
      fun (x10820 : t) ->
        fun ~value:(x10819 : T.t) ->
          Ojs.bool_of_js
            (Ojs.call (t_to_js x10820) "delete" [|(T.t_to_js x10819)|])
    let (has : t -> value:T.t -> bool) =
      fun (x10822 : t) ->
        fun ~value:(x10821 : T.t) ->
          Ojs.bool_of_js
            (Ojs.call (t_to_js x10822) "has" [|(T.t_to_js x10821)|])
    let (create : T.t Iterable.t -> t) =
      fun (x10823 : T.t Iterable.t) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "WeakSet")
             [|(Iterable.t_to_js T.t_to_js x10823)|])
    let (create : ?values:T.t list option -> unit -> t) =
      fun ?values:(x10825 : T.t list option option) ->
        fun () ->
          t_of_js
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "WeakSet")
               (let x10826 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x10825 with
                 | Some x10827 ->
                     ignore
                       (Ojs.call x10826 "push"
                          [|(Ojs.option_to_js
                               (fun (x10828 : T.t list) ->
                                  Ojs.list_to_js T.t_to_js x10828) x10827)|])
                 | None -> ());
                x10826))
    let (prototype : unit -> untyped_object parent) =
      fun () ->
        parent_of_js untyped_object_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "WeakSet")
             "prototype")
  end
module Generator_Make(T:Ojs.T)(TReturn:Ojs.T)(TNext:Ojs.T) =
  struct
    type ('T, 'TReturn, 'TNext) parent = ('T, 'TReturn, 'TNext) Generator.t
    let rec parent_of_js :
      'T 'TReturn 'TNext .
        (Ojs.t -> 'T) ->
          (Ojs.t -> 'TReturn) ->
            (Ojs.t -> 'TNext) -> Ojs.t -> ('T, 'TReturn, 'TNext) parent
      =
      fun (type __T) ->
        fun (type __TReturn) ->
          fun (type __TNext) ->
            fun (__T_of_js : Ojs.t -> __T) ->
              fun (__TReturn_of_js : Ojs.t -> __TReturn) ->
                fun (__TNext_of_js : Ojs.t -> __TNext) ->
                  fun (x10835 : Ojs.t) ->
                    Generator.t_of_js __T_of_js __TReturn_of_js __TNext_of_js
                      x10835
    and parent_to_js :
      'T 'TReturn 'TNext .
        ('T -> Ojs.t) ->
          ('TReturn -> Ojs.t) ->
            ('TNext -> Ojs.t) -> ('T, 'TReturn, 'TNext) parent -> Ojs.t
      =
      fun (type __T) ->
        fun (type __TReturn) ->
          fun (type __TNext) ->
            fun (__T_to_js : __T -> Ojs.t) ->
              fun (__TReturn_to_js : __TReturn -> Ojs.t) ->
                fun (__TNext_to_js : __TNext -> Ojs.t) ->
                  fun (x10831 : (__T, __TReturn, __TNext) Generator.t) ->
                    Generator.t_to_js __T_to_js __TReturn_to_js __TNext_to_js
                      x10831
    type t = (T.t, TReturn.t, TNext.t) parent
    let rec t_of_js : Ojs.t -> t =
      fun (x10843 : Ojs.t) ->
        parent_of_js T.t_of_js TReturn.t_of_js TNext.t_of_js x10843
    and t_to_js : t -> Ojs.t =
      fun (x10839 : (T.t, TReturn.t, TNext.t) parent) ->
        parent_to_js T.t_to_js TReturn.t_to_js TNext.t_to_js x10839
    let (next : t -> args:any list -> (T.t, TReturn.t) IteratorResult.t) =
      fun (x10850 : t) ->
        fun ~args:(x10847 : any list) ->
          IteratorResult.t_of_js T.t_of_js TReturn.t_of_js
            (let x10851 = t_to_js x10850 in
             Ojs.call (Ojs.get_prop_ascii x10851 "next") "apply"
               [|x10851;((let x10848 =
                            Ojs.new_obj
                              (Ojs.get_prop_ascii Ojs.global "Array") 
                              [||] in
                          List.iter
                            (fun (x10849 : any) ->
                               ignore
                                 (Ojs.call x10848 "push"
                                    [|(any_to_js x10849)|])) x10847;
                          x10848))|])
    let (return : t -> value:TReturn.t -> (T.t, TReturn.t) IteratorResult.t)
      =
      fun (x10855 : t) ->
        fun ~value:(x10854 : TReturn.t) ->
          IteratorResult.t_of_js T.t_of_js TReturn.t_of_js
            (Ojs.call (t_to_js x10855) "return" [|(TReturn.t_to_js x10854)|])
    let (throw : t -> e:any -> (T.t, TReturn.t) IteratorResult.t) =
      fun (x10859 : t) ->
        fun ~e:(x10858 : any) ->
          IteratorResult.t_of_js T.t_of_js TReturn.t_of_js
            (Ojs.call (t_to_js x10859) "throw" [|(any_to_js x10858)|])
  end
module IteratorYieldResult_Make(TYield:Ojs.T) =
  struct
    type 'TYield parent = 'TYield IteratorYieldResult.t
    let rec parent_of_js :
      'TYield . (Ojs.t -> 'TYield) -> Ojs.t -> 'TYield parent =
      fun (type __TYield) ->
        fun (__TYield_of_js : Ojs.t -> __TYield) ->
          fun (x10864 : Ojs.t) ->
            IteratorYieldResult.t_of_js __TYield_of_js x10864
    and parent_to_js :
      'TYield . ('TYield -> Ojs.t) -> 'TYield parent -> Ojs.t =
      fun (type __TYield) ->
        fun (__TYield_to_js : __TYield -> Ojs.t) ->
          fun (x10862 : __TYield IteratorYieldResult.t) ->
            IteratorYieldResult.t_to_js __TYield_to_js x10862
    type t = TYield.t parent
    let rec t_of_js : Ojs.t -> t =
      fun (x10868 : Ojs.t) -> parent_of_js TYield.t_of_js x10868
    and t_to_js : t -> Ojs.t =
      fun (x10866 : TYield.t parent) -> parent_to_js TYield.t_to_js x10866
    let (get_done : t -> [ `L_b_false ] option) =
      fun (x10870 : t) ->
        Ojs.option_of_js
          (fun (x10871 : Ojs.t) ->
             let x10872 = x10871 in
             match Ojs.bool_of_js x10872 with
             | false -> `L_b_false
             | _ -> assert false)
          (Ojs.get_prop_ascii (t_to_js x10870) "done")
    let (set_done : t -> [ `L_b_false ] -> unit) =
      fun (x10873 : t) ->
        fun (x10874 : [ `L_b_false ]) ->
          Ojs.set_prop_ascii (t_to_js x10873) "done"
            (match x10874 with | `L_b_false -> Ojs.bool_to_js false)
    let (get_value : t -> TYield.t) =
      fun (x10875 : t) ->
        TYield.t_of_js (Ojs.get_prop_ascii (t_to_js x10875) "value")
    let (set_value : t -> TYield.t -> unit) =
      fun (x10876 : t) ->
        fun (x10877 : TYield.t) ->
          Ojs.set_prop_ascii (t_to_js x10876) "value" (TYield.t_to_js x10877)
  end
module IteratorReturnResult_Make(TReturn:Ojs.T) =
  struct
    type 'TReturn parent = 'TReturn IteratorReturnResult.t
    let rec parent_of_js :
      'TReturn . (Ojs.t -> 'TReturn) -> Ojs.t -> 'TReturn parent =
      fun (type __TReturn) ->
        fun (__TReturn_of_js : Ojs.t -> __TReturn) ->
          fun (x10880 : Ojs.t) ->
            IteratorReturnResult.t_of_js __TReturn_of_js x10880
    and parent_to_js :
      'TReturn . ('TReturn -> Ojs.t) -> 'TReturn parent -> Ojs.t =
      fun (type __TReturn) ->
        fun (__TReturn_to_js : __TReturn -> Ojs.t) ->
          fun (x10878 : __TReturn IteratorReturnResult.t) ->
            IteratorReturnResult.t_to_js __TReturn_to_js x10878
    type t = TReturn.t parent
    let rec t_of_js : Ojs.t -> t =
      fun (x10884 : Ojs.t) -> parent_of_js TReturn.t_of_js x10884
    and t_to_js : t -> Ojs.t =
      fun (x10882 : TReturn.t parent) -> parent_to_js TReturn.t_to_js x10882
    let (get_done : t -> [ `L_b_true ]) =
      fun (x10886 : t) ->
        let x10887 = Ojs.get_prop_ascii (t_to_js x10886) "done" in
        match Ojs.bool_of_js x10887 with
        | true -> `L_b_true
        | _ -> assert false
    let (set_done : t -> [ `L_b_true ] -> unit) =
      fun (x10888 : t) ->
        fun (x10889 : [ `L_b_true ]) ->
          Ojs.set_prop_ascii (t_to_js x10888) "done"
            (match x10889 with | `L_b_true -> Ojs.bool_to_js true)
    let (get_value : t -> TReturn.t) =
      fun (x10890 : t) ->
        TReturn.t_of_js (Ojs.get_prop_ascii (t_to_js x10890) "value")
    let (set_value : t -> TReturn.t -> unit) =
      fun (x10891 : t) ->
        fun (x10892 : TReturn.t) ->
          Ojs.set_prop_ascii (t_to_js x10891) "value"
            (TReturn.t_to_js x10892)
  end
module Iterator_Make(T:Ojs.T)(TReturn:Ojs.T)(TNext:Ojs.T) =
  struct
    type ('T, 'TReturn, 'TNext) parent = ('T, 'TReturn, 'TNext) Iterator.t
    let rec parent_of_js :
      'T 'TReturn 'TNext .
        (Ojs.t -> 'T) ->
          (Ojs.t -> 'TReturn) ->
            (Ojs.t -> 'TNext) -> Ojs.t -> ('T, 'TReturn, 'TNext) parent
      =
      fun (type __T) ->
        fun (type __TReturn) ->
          fun (type __TNext) ->
            fun (__T_of_js : Ojs.t -> __T) ->
              fun (__TReturn_of_js : Ojs.t -> __TReturn) ->
                fun (__TNext_of_js : Ojs.t -> __TNext) ->
                  fun (x10897 : Ojs.t) ->
                    Iterator.t_of_js __T_of_js __TReturn_of_js __TNext_of_js
                      x10897
    and parent_to_js :
      'T 'TReturn 'TNext .
        ('T -> Ojs.t) ->
          ('TReturn -> Ojs.t) ->
            ('TNext -> Ojs.t) -> ('T, 'TReturn, 'TNext) parent -> Ojs.t
      =
      fun (type __T) ->
        fun (type __TReturn) ->
          fun (type __TNext) ->
            fun (__T_to_js : __T -> Ojs.t) ->
              fun (__TReturn_to_js : __TReturn -> Ojs.t) ->
                fun (__TNext_to_js : __TNext -> Ojs.t) ->
                  fun (x10893 : (__T, __TReturn, __TNext) Iterator.t) ->
                    Iterator.t_to_js __T_to_js __TReturn_to_js __TNext_to_js
                      x10893
    type t = (T.t, TReturn.t, TNext.t) parent
    let rec t_of_js : Ojs.t -> t =
      fun (x10905 : Ojs.t) ->
        parent_of_js T.t_of_js TReturn.t_of_js TNext.t_of_js x10905
    and t_to_js : t -> Ojs.t =
      fun (x10901 : (T.t, TReturn.t, TNext.t) parent) ->
        parent_to_js T.t_to_js TReturn.t_to_js TNext.t_to_js x10901
    let (next : t -> args:any list -> (T.t, TReturn.t) IteratorResult.t) =
      fun (x10912 : t) ->
        fun ~args:(x10909 : any list) ->
          IteratorResult.t_of_js T.t_of_js TReturn.t_of_js
            (let x10913 = t_to_js x10912 in
             Ojs.call (Ojs.get_prop_ascii x10913 "next") "apply"
               [|x10913;((let x10910 =
                            Ojs.new_obj
                              (Ojs.get_prop_ascii Ojs.global "Array") 
                              [||] in
                          List.iter
                            (fun (x10911 : any) ->
                               ignore
                                 (Ojs.call x10910 "push"
                                    [|(any_to_js x10911)|])) x10909;
                          x10910))|])
    let (return :
      t -> ?value:TReturn.t -> unit -> (T.t, TReturn.t) IteratorResult.t) =
      fun (x10919 : t) ->
        fun ?value:(x10916 : TReturn.t option) ->
          fun () ->
            IteratorResult.t_of_js T.t_of_js TReturn.t_of_js
              (let x10920 = t_to_js x10919 in
               Ojs.call (Ojs.get_prop_ascii x10920 "return") "apply"
                 [|x10920;((let x10917 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x10916 with
                             | Some x10918 ->
                                 ignore
                                   (Ojs.call x10917 "push"
                                      [|(TReturn.t_to_js x10918)|])
                             | None -> ());
                            x10917))|])
    let (throw : t -> ?e:any -> unit -> (T.t, TReturn.t) IteratorResult.t) =
      fun (x10926 : t) ->
        fun ?e:(x10923 : any option) ->
          fun () ->
            IteratorResult.t_of_js T.t_of_js TReturn.t_of_js
              (let x10927 = t_to_js x10926 in
               Ojs.call (Ojs.get_prop_ascii x10927 "throw") "apply"
                 [|x10927;((let x10924 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x10923 with
                             | Some x10925 ->
                                 ignore
                                   (Ojs.call x10924 "push"
                                      [|(any_to_js x10925)|])
                             | None -> ());
                            x10924))|])
  end
module Promise_Make(T:Ojs.T) =
  struct
    type 'T parent = 'T Promise.t
    let rec parent_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T parent =
      fun (type __T) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x10932 : Ojs.t) -> Promise.t_of_js __T_of_js x10932
    and parent_to_js : 'T . ('T -> Ojs.t) -> 'T parent -> Ojs.t =
      fun (type __T) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x10930 : __T Promise.t) -> Promise.t_to_js __T_to_js x10930
    type t = T.t parent
    let rec t_of_js : Ojs.t -> t =
      fun (x10936 : Ojs.t) -> parent_of_js T.t_of_js x10936
    and t_to_js : t -> Ojs.t =
      fun (x10934 : T.t parent) -> parent_to_js T.t_to_js x10934
    let (finally :
      t ->
        ?onfinally:[ `Null  | `Undefined of undefined 
                   | `U1 of unit -> unit ]
          -> unit -> t)
      =
      fun (x10943 : t) ->
        fun
          ?onfinally:(x10938 :
                       [ `Null  | `Undefined of undefined 
                       | `U1 of unit -> unit ] option)
          ->
          fun () ->
            t_of_js
              (let x10944 = t_to_js x10943 in
               Ojs.call (Ojs.get_prop_ascii x10944 "finally") "apply"
                 [|x10944;((let x10939 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x10938 with
                             | Some x10940 ->
                                 ignore
                                   (Ojs.call x10939 "push"
                                      [|((match x10940 with
                                          | `Null -> Ojs.null
                                          | `Undefined x10941 ->
                                              undefined_to_js x10941
                                          | `U1 x10942 ->
                                              Ojs.fun_to_js 1
                                                (fun _ -> x10942 ())))|])
                             | None -> ());
                            x10939))|])
    let (then_ :
      t ->
        ?onfulfilled:[ `Null  | `Undefined of undefined 
                     | `U1 of
                         T.t ->
                           [ `U1 of 'TResult1 
                           | `U2 of 'TResult1 PromiseLike.t ]
                         ]
          ->
          ?onrejected:[ `Null  | `Undefined of undefined 
                      | `U1 of
                          any ->
                            [ `U1 of 'TResult2 
                            | `U2 of 'TResult2 PromiseLike.t ]
                          ]
            -> unit -> ('TResult1, 'TResult2) union2 parent)
      =
      fun (x10962 : t) ->
        fun
          ?onfulfilled:(x10945 :
                         [ `Null  | `Undefined of undefined 
                         | `U1 of
                             T.t ->
                               [ `U1 of 'TResult1 
                               | `U2 of 'TResult1 PromiseLike.t ]
                             ]
                           option)
          ->
          fun
            ?onrejected:(x10946 :
                          [ `Null  | `Undefined of undefined 
                          | `U1 of
                              any ->
                                [ `U1 of 'TResult2 
                                | `U2 of 'TResult2 PromiseLike.t ]
                              ]
                            option)
            ->
            fun () ->
              parent_of_js
                (fun (x10964 : Ojs.t) ->
                   union2_of_js Obj.magic Obj.magic x10964)
                (let x10963 = t_to_js x10962 in
                 Ojs.call (Ojs.get_prop_ascii x10963 "then") "apply"
                   [|x10963;((let x10947 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              (match x10945 with
                               | Some x10955 ->
                                   ignore
                                     (Ojs.call x10947 "push"
                                        [|((match x10955 with
                                            | `Null -> Ojs.null
                                            | `Undefined x10956 ->
                                                undefined_to_js x10956
                                            | `U1 x10957 ->
                                                Ojs.fun_to_js 1
                                                  (fun (x10958 : Ojs.t) ->
                                                     match x10957
                                                             (T.t_of_js
                                                                x10958)
                                                     with
                                                     | `U1 x10959 ->
                                                         Obj.magic x10959
                                                     | `U2 x10960 ->
                                                         PromiseLike.t_to_js
                                                           Obj.magic x10960)))|])
                               | None -> ());
                              (match x10946 with
                               | Some x10948 ->
                                   ignore
                                     (Ojs.call x10947 "push"
                                        [|((match x10948 with
                                            | `Null -> Ojs.null
                                            | `Undefined x10949 ->
                                                undefined_to_js x10949
                                            | `U1 x10950 ->
                                                Ojs.fun_to_js 1
                                                  (fun (x10951 : Ojs.t) ->
                                                     match x10950
                                                             (any_of_js
                                                                x10951)
                                                     with
                                                     | `U1 x10952 ->
                                                         Obj.magic x10952
                                                     | `U2 x10953 ->
                                                         PromiseLike.t_to_js
                                                           Obj.magic x10953)))|])
                               | None -> ());
                              x10947))|])
    let (catch :
      t ->
        ?onrejected:[ `Null  | `Undefined of undefined 
                    | `U1 of
                        any ->
                          [ `U1 of 'TResult 
                          | `U2 of 'TResult PromiseLike.t ]
                        ]
          -> unit -> ('TResult, (T.t, 'TResult) union2) union2 parent)
      =
      fun (x10976 : t) ->
        fun
          ?onrejected:(x10967 :
                        [ `Null  | `Undefined of undefined 
                        | `U1 of
                            any ->
                              [ `U1 of 'TResult 
                              | `U2 of 'TResult PromiseLike.t ]
                            ]
                          option)
          ->
          fun () ->
            parent_of_js
              (fun (x10978 : Ojs.t) ->
                 union2_of_js Obj.magic
                   (fun (x10980 : Ojs.t) ->
                      union2_of_js T.t_of_js Obj.magic x10980) x10978)
              (let x10977 = t_to_js x10976 in
               Ojs.call (Ojs.get_prop_ascii x10977 "catch") "apply"
                 [|x10977;((let x10968 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x10967 with
                             | Some x10969 ->
                                 ignore
                                   (Ojs.call x10968 "push"
                                      [|((match x10969 with
                                          | `Null -> Ojs.null
                                          | `Undefined x10970 ->
                                              undefined_to_js x10970
                                          | `U1 x10971 ->
                                              Ojs.fun_to_js 1
                                                (fun (x10972 : Ojs.t) ->
                                                   match x10971
                                                           (any_of_js x10972)
                                                   with
                                                   | `U1 x10973 ->
                                                       Obj.magic x10973
                                                   | `U2 x10974 ->
                                                       PromiseLike.t_to_js
                                                         Obj.magic x10974)))|])
                             | None -> ());
                            x10968))|])
    let (any :
      [ `U1 of [ `U1 of T.t  | `U2 of T.t PromiseLike.t ] list 
      | `U2 of [ `U1 of T.t  | `U2 of T.t PromiseLike.t ] Iterable.t ] -> 
        t)
      =
      fun
        (x10983 :
          [ `U1 of [ `U1 of T.t  | `U2 of T.t PromiseLike.t ] list 
          | `U2 of [ `U1 of T.t  | `U2 of T.t PromiseLike.t ] Iterable.t ])
        ->
        t_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Promise") "any"
             [|((match x10983 with
                 | `U1 x10984 ->
                     Ojs.list_to_js
                       (fun
                          (x10985 :
                            [ `U1 of T.t  | `U2 of T.t PromiseLike.t ])
                          ->
                          match x10985 with
                          | `U1 x10986 -> T.t_to_js x10986
                          | `U2 x10987 ->
                              PromiseLike.t_to_js T.t_to_js x10987) x10984
                 | `U2 x10989 ->
                     Iterable.t_to_js
                       (fun
                          (x10990 :
                            [ `U1 of T.t  | `U2 of T.t PromiseLike.t ])
                          ->
                          match x10990 with
                          | `U1 x10991 -> T.t_to_js x10991
                          | `U2 x10992 ->
                              PromiseLike.t_to_js T.t_to_js x10992) x10989))|])
    let (allSettled : T.t -> any parent) =
      fun (x10994 : T.t) ->
        parent_of_js any_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Promise") "allSettled"
             [|(T.t_to_js x10994)|])
    let (allSettled :
      [ `U1 of T.t  | `U2 of T.t PromiseLike.t ] Iterable.t ->
        T.t Awaited.t PromiseSettledResult.t list Awaited.t
          PromiseSettledResult.t list parent)
      =
      fun (x10996 : [ `U1 of T.t  | `U2 of T.t PromiseLike.t ] Iterable.t) ->
        parent_of_js
          (fun (x11001 : Ojs.t) ->
             Ojs.list_of_js
               (fun (x11002 : Ojs.t) ->
                  PromiseSettledResult.t_of_js
                    (fun (x11003 : Ojs.t) ->
                       Awaited.t_of_js
                         (fun (x11004 : Ojs.t) ->
                            Ojs.list_of_js
                              (fun (x11005 : Ojs.t) ->
                                 PromiseSettledResult.t_of_js
                                   (fun (x11006 : Ojs.t) ->
                                      Awaited.t_of_js T.t_of_js x11006)
                                   x11005) x11004) x11003) x11002) x11001)
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Promise") "allSettled"
             [|(Iterable.t_to_js
                  (fun (x10997 : [ `U1 of T.t  | `U2 of T.t PromiseLike.t ])
                     ->
                     match x10997 with
                     | `U1 x10998 -> T.t_to_js x10998
                     | `U2 x10999 -> PromiseLike.t_to_js T.t_to_js x10999)
                  x10996)|])
    let (any : T.t -> any Awaited.t parent) =
      fun (x11008 : T.t) ->
        parent_of_js
          (fun (x11009 : Ojs.t) -> Awaited.t_of_js any_of_js x11009)
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Promise") "any"
             [|(T.t_to_js x11008)|])
    let (any :
      [ `U1 of T.t  | `U2 of T.t PromiseLike.t ] Iterable.t ->
        T.t Awaited.t Awaited.t parent)
      =
      fun (x11011 : [ `U1 of T.t  | `U2 of T.t PromiseLike.t ] Iterable.t) ->
        parent_of_js
          (fun (x11016 : Ojs.t) ->
             Awaited.t_of_js
               (fun (x11017 : Ojs.t) -> Awaited.t_of_js T.t_of_js x11017)
               x11016)
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Promise") "any"
             [|(Iterable.t_to_js
                  (fun (x11012 : [ `U1 of T.t  | `U2 of T.t PromiseLike.t ])
                     ->
                     match x11012 with
                     | `U1 x11013 -> T.t_to_js x11013
                     | `U2 x11014 -> PromiseLike.t_to_js T.t_to_js x11014)
                  x11011)|])
    let (prototype : unit -> any parent) =
      fun () ->
        parent_of_js any_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Promise")
             "prototype")
    let (create :
      (resolve:([ `U1 of T.t  | `U2 of T.t PromiseLike.t ] -> unit) ->
         reject:(?reason:any -> unit -> unit) -> unit)
        -> t)
      =
      fun
        (x11020 :
          resolve:([ `U1 of T.t  | `U2 of T.t PromiseLike.t ] -> unit) ->
            reject:(?reason:any -> unit -> unit) -> unit)
        ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Promise")
             [|(Ojs.fun_to_js 2
                  (fun (x11021 : Ojs.t) ->
                     fun (x11026 : Ojs.t) ->
                       x11020
                         ~resolve:(fun
                                     (x11022 :
                                       [ `U1 of T.t 
                                       | `U2 of T.t PromiseLike.t ])
                                     ->
                                     ignore
                                       (Ojs.apply x11021
                                          [|((match x11022 with
                                              | `U1 x11023 ->
                                                  T.t_to_js x11023
                                              | `U2 x11024 ->
                                                  PromiseLike.t_to_js
                                                    T.t_to_js x11024))|]))
                         ~reject:(fun ?reason:(x11027 : any option) ->
                                    fun () ->
                                      ignore
                                        (Ojs.call x11026 "apply"
                                           [|Ojs.null;((let x11028 =
                                                          Ojs.new_obj
                                                            (Ojs.get_prop_ascii
                                                               Ojs.global
                                                               "Array") 
                                                            [||] in
                                                        (match x11027 with
                                                         | Some x11029 ->
                                                             ignore
                                                               (Ojs.call
                                                                  x11028
                                                                  "push"
                                                                  [|(
                                                                    any_to_js
                                                                    x11029)|])
                                                         | None -> ());
                                                        x11028))|]))))|])
    let (all : T.t -> any parent) =
      fun (x11030 : T.t) ->
        parent_of_js any_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Promise") "all"
             [|(T.t_to_js x11030)|])
    let (race : T.t -> any Awaited.t parent) =
      fun (x11032 : T.t) ->
        parent_of_js
          (fun (x11033 : Ojs.t) -> Awaited.t_of_js any_of_js x11033)
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Promise") "race"
             [|(T.t_to_js x11032)|])
    let (reject : ?reason:any -> unit -> t) =
      fun ?reason:(x11035 : any option) ->
        fun () ->
          t_of_js
            (let x11038 = Ojs.get_prop_ascii Ojs.global "Promise" in
             Ojs.call (Ojs.get_prop_ascii x11038 "reject") "apply"
               [|x11038;((let x11036 =
                            Ojs.new_obj
                              (Ojs.get_prop_ascii Ojs.global "Array") 
                              [||] in
                          (match x11035 with
                           | Some x11037 ->
                               ignore
                                 (Ojs.call x11036 "push"
                                    [|(any_to_js x11037)|])
                           | None -> ());
                          x11036))|])
    let (resolve : unit -> unit parent) =
      fun () ->
        parent_of_js Ojs.unit_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Promise") "resolve" [||])
    let (resolve : [ `U1 of T.t  | `U2 of T.t PromiseLike.t ] -> t) =
      fun (x11040 : [ `U1 of T.t  | `U2 of T.t PromiseLike.t ]) ->
        t_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Promise") "resolve"
             [|((match x11040 with
                 | `U1 x11041 -> T.t_to_js x11041
                 | `U2 x11042 -> PromiseLike.t_to_js T.t_to_js x11042))|])
    let (all :
      [ `U1 of T.t  | `U2 of T.t PromiseLike.t ] Iterable.t ->
        T.t Awaited.t list Awaited.t list parent)
      =
      fun (x11044 : [ `U1 of T.t  | `U2 of T.t PromiseLike.t ] Iterable.t) ->
        parent_of_js
          (fun (x11049 : Ojs.t) ->
             Ojs.list_of_js
               (fun (x11050 : Ojs.t) ->
                  Awaited.t_of_js
                    (fun (x11051 : Ojs.t) ->
                       Ojs.list_of_js
                         (fun (x11052 : Ojs.t) ->
                            Awaited.t_of_js T.t_of_js x11052) x11051) x11050)
               x11049)
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Promise") "all"
             [|(Iterable.t_to_js
                  (fun (x11045 : [ `U1 of T.t  | `U2 of T.t PromiseLike.t ])
                     ->
                     match x11045 with
                     | `U1 x11046 -> T.t_to_js x11046
                     | `U2 x11047 -> PromiseLike.t_to_js T.t_to_js x11047)
                  x11044)|])
    let (race :
      [ `U1 of T.t  | `U2 of T.t PromiseLike.t ] Iterable.t ->
        T.t Awaited.t Awaited.t parent)
      =
      fun (x11054 : [ `U1 of T.t  | `U2 of T.t PromiseLike.t ] Iterable.t) ->
        parent_of_js
          (fun (x11059 : Ojs.t) ->
             Awaited.t_of_js
               (fun (x11060 : Ojs.t) -> Awaited.t_of_js T.t_of_js x11060)
               x11059)
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Promise") "race"
             [|(Iterable.t_to_js
                  (fun (x11055 : [ `U1 of T.t  | `U2 of T.t PromiseLike.t ])
                     ->
                     match x11055 with
                     | `U1 x11056 -> T.t_to_js x11056
                     | `U2 x11057 -> PromiseLike.t_to_js T.t_to_js x11057)
                  x11054)|])
  end
module ProxyHandler_Make(T:Ojs.T) =
  struct
    type 'T parent = 'T ProxyHandler.t
    let rec parent_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T parent =
      fun (type __T) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x11064 : Ojs.t) -> ProxyHandler.t_of_js __T_of_js x11064
    and parent_to_js : 'T . ('T -> Ojs.t) -> 'T parent -> Ojs.t =
      fun (type __T) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x11062 : __T ProxyHandler.t) ->
            ProxyHandler.t_to_js __T_to_js x11062
    type t = T.t parent
    let rec t_of_js : Ojs.t -> t =
      fun (x11068 : Ojs.t) -> parent_of_js T.t_of_js x11068
    and t_to_js : t -> Ojs.t =
      fun (x11066 : T.t parent) -> parent_to_js T.t_to_js x11066
    let (apply_ : t -> target:T.t -> thisArg:any -> argArray:any list -> any)
      =
      fun (x11074 : t) ->
        fun ~target:(x11070 : T.t) ->
          fun ~thisArg:(x11071 : any) ->
            fun ~argArray:(x11072 : any list) ->
              any_of_js
                (Ojs.call (t_to_js x11074) "apply"
                   [|(T.t_to_js x11070);(any_to_js x11071);(Ojs.list_to_js
                                                              any_to_js
                                                              x11072)|])
    let (construct :
      t ->
        target:T.t ->
          argArray:any list -> newTarget:Function.t -> untyped_object)
      =
      fun (x11079 : t) ->
        fun ~target:(x11075 : T.t) ->
          fun ~argArray:(x11076 : any list) ->
            fun ~newTarget:(x11078 : Function.t) ->
              untyped_object_of_js
                (Ojs.call (t_to_js x11079) "construct"
                   [|(T.t_to_js x11075);(Ojs.list_to_js any_to_js x11076);(
                     Function.t_to_js x11078)|])
    let (defineProperty :
      t ->
        target:T.t ->
          p:[ `U1 of string  | `U2 of symbol ] ->
            attributes:PropertyDescriptor.t -> bool)
      =
      fun (x11085 : t) ->
        fun ~target:(x11080 : T.t) ->
          fun ~p:(x11081 : [ `U1 of string  | `U2 of symbol ]) ->
            fun ~attributes:(x11084 : PropertyDescriptor.t) ->
              Ojs.bool_of_js
                (Ojs.call (t_to_js x11085) "defineProperty"
                   [|(T.t_to_js x11080);((match x11081 with
                                          | `U1 x11082 ->
                                              Ojs.string_to_js x11082
                                          | `U2 x11083 -> symbol_to_js x11083));(
                     PropertyDescriptor.t_to_js x11084)|])
    let (deleteProperty :
      t -> target:T.t -> p:[ `U1 of string  | `U2 of symbol ] -> bool) =
      fun (x11090 : t) ->
        fun ~target:(x11086 : T.t) ->
          fun ~p:(x11087 : [ `U1 of string  | `U2 of symbol ]) ->
            Ojs.bool_of_js
              (Ojs.call (t_to_js x11090) "deleteProperty"
                 [|(T.t_to_js x11086);((match x11087 with
                                        | `U1 x11088 ->
                                            Ojs.string_to_js x11088
                                        | `U2 x11089 -> symbol_to_js x11089))|])
    let (get_ :
      t ->
        target:T.t ->
          p:[ `U1 of string  | `U2 of symbol ] -> receiver:any -> any)
      =
      fun (x11096 : t) ->
        fun ~target:(x11091 : T.t) ->
          fun ~p:(x11092 : [ `U1 of string  | `U2 of symbol ]) ->
            fun ~receiver:(x11095 : any) ->
              any_of_js
                (Ojs.call (t_to_js x11096) "get"
                   [|(T.t_to_js x11091);((match x11092 with
                                          | `U1 x11093 ->
                                              Ojs.string_to_js x11093
                                          | `U2 x11094 -> symbol_to_js x11094));(
                     any_to_js x11095)|])
    let (getOwnPropertyDescriptor :
      t ->
        target:T.t ->
          p:[ `U1 of string  | `U2 of symbol ] -> PropertyDescriptor.t option)
      =
      fun (x11101 : t) ->
        fun ~target:(x11097 : T.t) ->
          fun ~p:(x11098 : [ `U1 of string  | `U2 of symbol ]) ->
            Ojs.option_of_js PropertyDescriptor.t_of_js
              (Ojs.call (t_to_js x11101) "getOwnPropertyDescriptor"
                 [|(T.t_to_js x11097);((match x11098 with
                                        | `U1 x11099 ->
                                            Ojs.string_to_js x11099
                                        | `U2 x11100 -> symbol_to_js x11100))|])
    let (getPrototypeOf : t -> target:T.t -> untyped_object option) =
      fun (x11104 : t) ->
        fun ~target:(x11103 : T.t) ->
          Ojs.option_of_js untyped_object_of_js
            (Ojs.call (t_to_js x11104) "getPrototypeOf"
               [|(T.t_to_js x11103)|])
    let (has :
      t -> target:T.t -> p:[ `U1 of string  | `U2 of symbol ] -> bool) =
      fun (x11110 : t) ->
        fun ~target:(x11106 : T.t) ->
          fun ~p:(x11107 : [ `U1 of string  | `U2 of symbol ]) ->
            Ojs.bool_of_js
              (Ojs.call (t_to_js x11110) "has"
                 [|(T.t_to_js x11106);((match x11107 with
                                        | `U1 x11108 ->
                                            Ojs.string_to_js x11108
                                        | `U2 x11109 -> symbol_to_js x11109))|])
    let (isExtensible : t -> target:T.t -> bool) =
      fun (x11112 : t) ->
        fun ~target:(x11111 : T.t) ->
          Ojs.bool_of_js
            (Ojs.call (t_to_js x11112) "isExtensible" [|(T.t_to_js x11111)|])
    let (ownKeys :
      t ->
        target:T.t ->
          [ `String of string  | `Symbol of symbol ] Primitive.t ArrayLike.t)
      =
      fun (x11114 : t) ->
        fun ~target:(x11113 : T.t) ->
          ArrayLike.t_of_js
            (fun (x11115 : Ojs.t) ->
               Primitive.t_of_js
                 (fun (x11116 : Ojs.t) ->
                    let x11117 = x11116 in
                    match Ojs.string_of_js
                            (Ojs.get_prop_ascii x11117 "dummy")
                    with
                    | "String" -> `String (Ojs.string_of_js x11117)
                    | "Symbol" -> `Symbol (symbol_of_js x11117)
                    | _ -> assert false) x11115)
            (Ojs.call (t_to_js x11114) "ownKeys" [|(T.t_to_js x11113)|])
    let (preventExtensions : t -> target:T.t -> bool) =
      fun (x11119 : t) ->
        fun ~target:(x11118 : T.t) ->
          Ojs.bool_of_js
            (Ojs.call (t_to_js x11119) "preventExtensions"
               [|(T.t_to_js x11118)|])
    let (set_ :
      t ->
        target:T.t ->
          p:[ `U1 of string  | `U2 of symbol ] ->
            value:any -> receiver:any -> bool)
      =
      fun (x11126 : t) ->
        fun ~target:(x11120 : T.t) ->
          fun ~p:(x11121 : [ `U1 of string  | `U2 of symbol ]) ->
            fun ~value:(x11124 : any) ->
              fun ~receiver:(x11125 : any) ->
                Ojs.bool_of_js
                  (Ojs.call (t_to_js x11126) "set"
                     [|(T.t_to_js x11120);((match x11121 with
                                            | `U1 x11122 ->
                                                Ojs.string_to_js x11122
                                            | `U2 x11123 ->
                                                symbol_to_js x11123));(
                       any_to_js x11124);(any_to_js x11125)|])
    let (setPrototypeOf : t -> target:T.t -> v:untyped_object option -> bool)
      =
      fun (x11130 : t) ->
        fun ~target:(x11127 : T.t) ->
          fun ~v:(x11128 : untyped_object option) ->
            Ojs.bool_of_js
              (Ojs.call (t_to_js x11130) "setPrototypeOf"
                 [|(T.t_to_js x11127);(Ojs.option_to_js untyped_object_to_js
                                         x11128)|])
  end
module AsyncGenerator_Make(T:Ojs.T)(TReturn:Ojs.T)(TNext:Ojs.T) =
  struct
    type ('T, 'TReturn, 'TNext) parent =
      ('T, 'TReturn, 'TNext) AsyncGenerator.t
    let rec parent_of_js :
      'T 'TReturn 'TNext .
        (Ojs.t -> 'T) ->
          (Ojs.t -> 'TReturn) ->
            (Ojs.t -> 'TNext) -> Ojs.t -> ('T, 'TReturn, 'TNext) parent
      =
      fun (type __T) ->
        fun (type __TReturn) ->
          fun (type __TNext) ->
            fun (__T_of_js : Ojs.t -> __T) ->
              fun (__TReturn_of_js : Ojs.t -> __TReturn) ->
                fun (__TNext_of_js : Ojs.t -> __TNext) ->
                  fun (x11135 : Ojs.t) ->
                    AsyncGenerator.t_of_js __T_of_js __TReturn_of_js
                      __TNext_of_js x11135
    and parent_to_js :
      'T 'TReturn 'TNext .
        ('T -> Ojs.t) ->
          ('TReturn -> Ojs.t) ->
            ('TNext -> Ojs.t) -> ('T, 'TReturn, 'TNext) parent -> Ojs.t
      =
      fun (type __T) ->
        fun (type __TReturn) ->
          fun (type __TNext) ->
            fun (__T_to_js : __T -> Ojs.t) ->
              fun (__TReturn_to_js : __TReturn -> Ojs.t) ->
                fun (__TNext_to_js : __TNext -> Ojs.t) ->
                  fun (x11131 : (__T, __TReturn, __TNext) AsyncGenerator.t)
                    ->
                    AsyncGenerator.t_to_js __T_to_js __TReturn_to_js
                      __TNext_to_js x11131
    type t = (T.t, TReturn.t, TNext.t) parent
    let rec t_of_js : Ojs.t -> t =
      fun (x11143 : Ojs.t) ->
        parent_of_js T.t_of_js TReturn.t_of_js TNext.t_of_js x11143
    and t_to_js : t -> Ojs.t =
      fun (x11139 : (T.t, TReturn.t, TNext.t) parent) ->
        parent_to_js T.t_to_js TReturn.t_to_js TNext.t_to_js x11139
    let (next :
      t -> args:any list -> (T.t, TReturn.t) IteratorResult.t Promise.t) =
      fun (x11150 : t) ->
        fun ~args:(x11147 : any list) ->
          Promise.t_of_js
            (fun (x11152 : Ojs.t) ->
               IteratorResult.t_of_js T.t_of_js TReturn.t_of_js x11152)
            (let x11151 = t_to_js x11150 in
             Ojs.call (Ojs.get_prop_ascii x11151 "next") "apply"
               [|x11151;((let x11148 =
                            Ojs.new_obj
                              (Ojs.get_prop_ascii Ojs.global "Array") 
                              [||] in
                          List.iter
                            (fun (x11149 : any) ->
                               ignore
                                 (Ojs.call x11148 "push"
                                    [|(any_to_js x11149)|])) x11147;
                          x11148))|])
    let (return :
      t ->
        value:[ `U1 of TReturn.t  | `U2 of TReturn.t PromiseLike.t ] ->
          (T.t, TReturn.t) IteratorResult.t Promise.t)
      =
      fun (x11159 : t) ->
        fun
          ~value:(x11155 :
                   [ `U1 of TReturn.t  | `U2 of TReturn.t PromiseLike.t ])
          ->
          Promise.t_of_js
            (fun (x11160 : Ojs.t) ->
               IteratorResult.t_of_js T.t_of_js TReturn.t_of_js x11160)
            (Ojs.call (t_to_js x11159) "return"
               [|((match x11155 with
                   | `U1 x11156 -> TReturn.t_to_js x11156
                   | `U2 x11157 -> PromiseLike.t_to_js TReturn.t_to_js x11157))|])
    let (throw : t -> e:any -> (T.t, TReturn.t) IteratorResult.t Promise.t) =
      fun (x11164 : t) ->
        fun ~e:(x11163 : any) ->
          Promise.t_of_js
            (fun (x11165 : Ojs.t) ->
               IteratorResult.t_of_js T.t_of_js TReturn.t_of_js x11165)
            (Ojs.call (t_to_js x11164) "throw" [|(any_to_js x11163)|])
  end
module AsyncIterator_Make(T:Ojs.T)(TReturn:Ojs.T)(TNext:Ojs.T) =
  struct
    type ('T, 'TReturn, 'TNext) parent =
      ('T, 'TReturn, 'TNext) AsyncIterator.t
    let rec parent_of_js :
      'T 'TReturn 'TNext .
        (Ojs.t -> 'T) ->
          (Ojs.t -> 'TReturn) ->
            (Ojs.t -> 'TNext) -> Ojs.t -> ('T, 'TReturn, 'TNext) parent
      =
      fun (type __T) ->
        fun (type __TReturn) ->
          fun (type __TNext) ->
            fun (__T_of_js : Ojs.t -> __T) ->
              fun (__TReturn_of_js : Ojs.t -> __TReturn) ->
                fun (__TNext_of_js : Ojs.t -> __TNext) ->
                  fun (x11172 : Ojs.t) ->
                    AsyncIterator.t_of_js __T_of_js __TReturn_of_js
                      __TNext_of_js x11172
    and parent_to_js :
      'T 'TReturn 'TNext .
        ('T -> Ojs.t) ->
          ('TReturn -> Ojs.t) ->
            ('TNext -> Ojs.t) -> ('T, 'TReturn, 'TNext) parent -> Ojs.t
      =
      fun (type __T) ->
        fun (type __TReturn) ->
          fun (type __TNext) ->
            fun (__T_to_js : __T -> Ojs.t) ->
              fun (__TReturn_to_js : __TReturn -> Ojs.t) ->
                fun (__TNext_to_js : __TNext -> Ojs.t) ->
                  fun (x11168 : (__T, __TReturn, __TNext) AsyncIterator.t) ->
                    AsyncIterator.t_to_js __T_to_js __TReturn_to_js
                      __TNext_to_js x11168
    type t = (T.t, TReturn.t, TNext.t) parent
    let rec t_of_js : Ojs.t -> t =
      fun (x11180 : Ojs.t) ->
        parent_of_js T.t_of_js TReturn.t_of_js TNext.t_of_js x11180
    and t_to_js : t -> Ojs.t =
      fun (x11176 : (T.t, TReturn.t, TNext.t) parent) ->
        parent_to_js T.t_to_js TReturn.t_to_js TNext.t_to_js x11176
    let (next :
      t -> args:any list -> (T.t, TReturn.t) IteratorResult.t Promise.t) =
      fun (x11187 : t) ->
        fun ~args:(x11184 : any list) ->
          Promise.t_of_js
            (fun (x11189 : Ojs.t) ->
               IteratorResult.t_of_js T.t_of_js TReturn.t_of_js x11189)
            (let x11188 = t_to_js x11187 in
             Ojs.call (Ojs.get_prop_ascii x11188 "next") "apply"
               [|x11188;((let x11185 =
                            Ojs.new_obj
                              (Ojs.get_prop_ascii Ojs.global "Array") 
                              [||] in
                          List.iter
                            (fun (x11186 : any) ->
                               ignore
                                 (Ojs.call x11185 "push"
                                    [|(any_to_js x11186)|])) x11184;
                          x11185))|])
    let (return :
      t ->
        ?value:[ `U1 of TReturn.t  | `U2 of TReturn.t PromiseLike.t ] ->
          unit -> (T.t, TReturn.t) IteratorResult.t Promise.t)
      =
      fun (x11198 : t) ->
        fun
          ?value:(x11192 :
                   [ `U1 of TReturn.t  | `U2 of TReturn.t PromiseLike.t ]
                     option)
          ->
          fun () ->
            Promise.t_of_js
              (fun (x11200 : Ojs.t) ->
                 IteratorResult.t_of_js T.t_of_js TReturn.t_of_js x11200)
              (let x11199 = t_to_js x11198 in
               Ojs.call (Ojs.get_prop_ascii x11199 "return") "apply"
                 [|x11199;((let x11193 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x11192 with
                             | Some x11194 ->
                                 ignore
                                   (Ojs.call x11193 "push"
                                      [|((match x11194 with
                                          | `U1 x11195 ->
                                              TReturn.t_to_js x11195
                                          | `U2 x11196 ->
                                              PromiseLike.t_to_js
                                                TReturn.t_to_js x11196))|])
                             | None -> ());
                            x11193))|])
    let (throw :
      t -> ?e:any -> unit -> (T.t, TReturn.t) IteratorResult.t Promise.t) =
      fun (x11206 : t) ->
        fun ?e:(x11203 : any option) ->
          fun () ->
            Promise.t_of_js
              (fun (x11208 : Ojs.t) ->
                 IteratorResult.t_of_js T.t_of_js TReturn.t_of_js x11208)
              (let x11207 = t_to_js x11206 in
               Ojs.call (Ojs.get_prop_ascii x11207 "throw") "apply"
                 [|x11207;((let x11204 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x11203 with
                             | Some x11205 ->
                                 ignore
                                   (Ojs.call x11204 "push"
                                      [|(any_to_js x11205)|])
                             | None -> ());
                            x11204))|])
  end
module WeakRef_Make(T:Ojs.T) =
  struct
    type 'T parent = 'T WeakRef.t
    let rec parent_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T parent =
      fun (type __T) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x11213 : Ojs.t) -> WeakRef.t_of_js __T_of_js x11213
    and parent_to_js : 'T . ('T -> Ojs.t) -> 'T parent -> Ojs.t =
      fun (type __T) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x11211 : __T WeakRef.t) -> WeakRef.t_to_js __T_to_js x11211
    type t = T.t parent
    let rec t_of_js : Ojs.t -> t =
      fun (x11217 : Ojs.t) -> parent_of_js T.t_of_js x11217
    and t_to_js : t -> Ojs.t =
      fun (x11215 : T.t parent) -> parent_to_js T.t_to_js x11215
    let (deref : t -> T.t option) =
      fun (x11219 : t) ->
        Ojs.option_of_js T.t_of_js (Ojs.call (t_to_js x11219) "deref" [||])
    let (deref : t -> T.t option) =
      fun (x11221 : t) ->
        Ojs.option_of_js T.t_of_js (Ojs.call (t_to_js x11221) "deref" [||])
    let (prototype : unit -> any parent) =
      fun () ->
        parent_of_js any_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "WeakRef")
             "prototype")
    let (create : ?target:T.t -> unit -> t) =
      fun ?target:(x11224 : T.t option) ->
        fun () ->
          t_of_js
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "WeakRef")
               (let x11225 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x11224 with
                 | Some x11226 ->
                     ignore (Ojs.call x11225 "push" [|(T.t_to_js x11226)|])
                 | None -> ());
                x11225))
    let (prototype : unit -> any parent) =
      fun () ->
        parent_of_js any_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "WeakRef")
             "prototype")
    let (create : T.t -> t) =
      fun (x11228 : T.t) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "WeakRef")
             [|(T.t_to_js x11228)|])
  end
module FinalizationRegistry_Make(T:Ojs.T) =
  struct
    type 'T parent = 'T FinalizationRegistry.t
    let rec parent_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T parent =
      fun (type __T) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x11231 : Ojs.t) ->
            FinalizationRegistry.t_of_js __T_of_js x11231
    and parent_to_js : 'T . ('T -> Ojs.t) -> 'T parent -> Ojs.t =
      fun (type __T) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x11229 : __T FinalizationRegistry.t) ->
            FinalizationRegistry.t_to_js __T_to_js x11229
    type t = T.t parent
    let rec t_of_js : Ojs.t -> t =
      fun (x11235 : Ojs.t) -> parent_of_js T.t_of_js x11235
    and t_to_js : t -> Ojs.t =
      fun (x11233 : T.t parent) -> parent_to_js T.t_to_js x11233
    let (register :
      t ->
        target:untyped_object ->
          heldValue:any -> ?unregisterToken:untyped_object -> unit -> unit)
      =
      fun (x11242 : t) ->
        fun ~target:(x11237 : untyped_object) ->
          fun ~heldValue:(x11238 : any) ->
            fun ?unregisterToken:(x11239 : untyped_object option) ->
              fun () ->
                ignore
                  (let x11243 = t_to_js x11242 in
                   Ojs.call (Ojs.get_prop_ascii x11243 "register") "apply"
                     [|x11243;((let x11240 =
                                  Ojs.new_obj
                                    (Ojs.get_prop_ascii Ojs.global "Array")
                                    [||] in
                                ignore
                                  (Ojs.call x11240 "push"
                                     [|(untyped_object_to_js x11237)|]);
                                ignore
                                  (Ojs.call x11240 "push"
                                     [|(any_to_js x11238)|]);
                                (match x11239 with
                                 | Some x11241 ->
                                     ignore
                                       (Ojs.call x11240 "push"
                                          [|(untyped_object_to_js x11241)|])
                                 | None -> ());
                                x11240))|])
    let (unregister : t -> unregisterToken:untyped_object -> unit) =
      fun (x11245 : t) ->
        fun ~unregisterToken:(x11244 : untyped_object) ->
          ignore
            (Ojs.call (t_to_js x11245) "unregister"
               [|(untyped_object_to_js x11244)|])
    let (register :
      t ->
        target:untyped_object ->
          heldValue:T.t -> ?unregisterToken:untyped_object -> unit -> unit)
      =
      fun (x11251 : t) ->
        fun ~target:(x11246 : untyped_object) ->
          fun ~heldValue:(x11247 : T.t) ->
            fun ?unregisterToken:(x11248 : untyped_object option) ->
              fun () ->
                ignore
                  (let x11252 = t_to_js x11251 in
                   Ojs.call (Ojs.get_prop_ascii x11252 "register") "apply"
                     [|x11252;((let x11249 =
                                  Ojs.new_obj
                                    (Ojs.get_prop_ascii Ojs.global "Array")
                                    [||] in
                                ignore
                                  (Ojs.call x11249 "push"
                                     [|(untyped_object_to_js x11246)|]);
                                ignore
                                  (Ojs.call x11249 "push"
                                     [|(T.t_to_js x11247)|]);
                                (match x11248 with
                                 | Some x11250 ->
                                     ignore
                                       (Ojs.call x11249 "push"
                                          [|(untyped_object_to_js x11250)|])
                                 | None -> ());
                                x11249))|])
    let (unregister : t -> unregisterToken:untyped_object -> unit) =
      fun (x11254 : t) ->
        fun ~unregisterToken:(x11253 : untyped_object) ->
          ignore
            (Ojs.call (t_to_js x11254) "unregister"
               [|(untyped_object_to_js x11253)|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "FinalizationRegistry")
             "prototype")
    let (create : (any -> unit) -> t) =
      fun (x11255 : any -> unit) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "FinalizationRegistry")
             [|(Ojs.fun_to_js 1
                  (fun (x11256 : Ojs.t) -> x11255 (any_of_js x11256)))|])
    let (prototype : unit -> any parent) =
      fun () ->
        parent_of_js any_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "FinalizationRegistry")
             "prototype")
    let (create : (T.t -> unit) -> t) =
      fun (x11258 : T.t -> unit) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "FinalizationRegistry")
             [|(Ojs.fun_to_js 1
                  (fun (x11259 : Ojs.t) -> x11258 (T.t_of_js x11259)))|])
  end
module PromiseFulfilledResult_Make(T:Ojs.T) =
  struct
    type 'T parent = 'T PromiseFulfilledResult.t
    let rec parent_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T parent =
      fun (type __T) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x11262 : Ojs.t) ->
            PromiseFulfilledResult.t_of_js __T_of_js x11262
    and parent_to_js : 'T . ('T -> Ojs.t) -> 'T parent -> Ojs.t =
      fun (type __T) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x11260 : __T PromiseFulfilledResult.t) ->
            PromiseFulfilledResult.t_to_js __T_to_js x11260
    type t = T.t parent
    let rec t_of_js : Ojs.t -> t =
      fun (x11266 : Ojs.t) -> parent_of_js T.t_of_js x11266
    and t_to_js : t -> Ojs.t =
      fun (x11264 : T.t parent) -> parent_to_js T.t_to_js x11264
    let (get_status : t -> [ `L_s43_fulfilled ]) =
      fun (x11268 : t) ->
        let x11269 = Ojs.get_prop_ascii (t_to_js x11268) "status" in
        match Ojs.string_of_js x11269 with
        | "fulfilled" -> `L_s43_fulfilled
        | _ -> assert false
    let (set_status : t -> [ `L_s43_fulfilled ] -> unit) =
      fun (x11270 : t) ->
        fun (x11271 : [ `L_s43_fulfilled ]) ->
          Ojs.set_prop_ascii (t_to_js x11270) "status"
            (match x11271 with
             | `L_s43_fulfilled -> Ojs.string_to_js "fulfilled")
    let (get_value : t -> T.t) =
      fun (x11272 : t) ->
        T.t_of_js (Ojs.get_prop_ascii (t_to_js x11272) "value")
    let (set_value : t -> T.t -> unit) =
      fun (x11273 : t) ->
        fun (x11274 : T.t) ->
          Ojs.set_prop_ascii (t_to_js x11273) "value" (T.t_to_js x11274)
  end
let (nan : unit -> float) =
  fun () -> Ojs.float_of_js (Ojs.get_prop_ascii Ojs.global "NaN")
let (infinity : unit -> float) =
  fun () -> Ojs.float_of_js (Ojs.get_prop_ascii Ojs.global "Infinity")
let (eval : string -> any) =
  fun (x11275 : string) ->
    any_of_js (Ojs.call Ojs.global "eval" [|(Ojs.string_to_js x11275)|])
let (parseInt : string:string -> ?radix:float -> unit -> float) =
  fun ~string:(x11276 : string) ->
    fun ?radix:(x11277 : float option) ->
      fun () ->
        Ojs.float_of_js
          (let x11280 = Ojs.global in
           Ojs.call (Ojs.get_prop_ascii x11280 "parseInt") "apply"
             [|x11280;((let x11278 =
                          Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                            [||] in
                        ignore
                          (Ojs.call x11278 "push"
                             [|(Ojs.string_to_js x11276)|]);
                        (match x11277 with
                         | Some x11279 ->
                             ignore
                               (Ojs.call x11278 "push"
                                  [|(Ojs.float_to_js x11279)|])
                         | None -> ());
                        x11278))|])
let (parseFloat : string -> float) =
  fun (x11281 : string) ->
    Ojs.float_of_js
      (Ojs.call Ojs.global "parseFloat" [|(Ojs.string_to_js x11281)|])
let (isNaN : float -> bool) =
  fun (x11282 : float) ->
    Ojs.bool_of_js (Ojs.call Ojs.global "isNaN" [|(Ojs.float_to_js x11282)|])
let (isFinite : float -> bool) =
  fun (x11283 : float) ->
    Ojs.bool_of_js
      (Ojs.call Ojs.global "isFinite" [|(Ojs.float_to_js x11283)|])
let (decodeURI : string -> string) =
  fun (x11284 : string) ->
    Ojs.string_of_js
      (Ojs.call Ojs.global "decodeURI" [|(Ojs.string_to_js x11284)|])
let (decodeURIComponent : string -> string) =
  fun (x11285 : string) ->
    Ojs.string_of_js
      (Ojs.call Ojs.global "decodeURIComponent" [|(Ojs.string_to_js x11285)|])
let (encodeURI : string -> string) =
  fun (x11286 : string) ->
    Ojs.string_of_js
      (Ojs.call Ojs.global "encodeURI" [|(Ojs.string_to_js x11286)|])
let (encodeURIComponent :
  [ `Number of float  | `String of string  | `Boolean of bool ] Primitive.t
    -> string)
  =
  fun
    (x11287 :
      [ `Number of float  | `String of string  | `Boolean of bool ]
        Primitive.t)
    ->
    Ojs.string_of_js
      (Ojs.call Ojs.global "encodeURIComponent"
         [|(Primitive.t_to_js
              (fun
                 (x11288 :
                   [ `Number of float  | `String of string 
                   | `Boolean of bool ])
                 ->
                 match x11288 with
                 | `Number x11289 -> Ojs.float_to_js x11289
                 | `String x11290 -> Ojs.string_to_js x11290
                 | `Boolean x11291 -> Ojs.bool_to_js x11291) x11287)|])
let (escape : string -> string) =
  fun (x11292 : string) ->
    Ojs.string_of_js
      (Ojs.call Ojs.global "escape" [|(Ojs.string_to_js x11292)|])
let (unescape : string -> string) =
  fun (x11293 : string) ->
    Ojs.string_of_js
      (Ojs.call Ojs.global "unescape" [|(Ojs.string_to_js x11293)|])
let (proxy : unit -> ProxyConstructor.t) =
  fun () -> ProxyConstructor.t_of_js (Ojs.get_prop_ascii Ojs.global "Proxy")
