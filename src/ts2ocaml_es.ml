[@@@js.dummy "!! This code has been generated by gen_js_api !!"]
[@@@ocaml.warning "-7-32-39"]
[@@@ocaml.warning "-7-11-32-33-39"]
open Ts2ocaml_min
module IteratorYieldResult =
  struct
    type 'TYield t = [ `IteratorYieldResult of 'TYield ] intf
    let rec t_of_js : 'TYield . (Ojs.t -> 'TYield) -> Ojs.t -> 'TYield t =
      fun _TYield -> Obj.magic
    and t_to_js : 'TYield . ('TYield -> Ojs.t) -> 'TYield t -> Ojs.t =
      fun _TYield -> Obj.magic
    type 'TYield t_1 = 'TYield t
    let rec t_1_of_js : 'TYield . (Ojs.t -> 'TYield) -> Ojs.t -> 'TYield t_1
      =
      fun (type __TYield) ->
        fun (__TYield_of_js : Ojs.t -> __TYield) ->
          fun (x3 : Ojs.t) -> t_of_js __TYield_of_js x3
    and t_1_to_js : 'TYield . ('TYield -> Ojs.t) -> 'TYield t_1 -> Ojs.t =
      fun (type __TYield) ->
        fun (__TYield_to_js : __TYield -> Ojs.t) ->
          fun (x1 : __TYield t) -> t_to_js __TYield_to_js x1
    type 'TYield tags = [ `IteratorYieldResult of 'TYield ]
    type 'TYield tags_1 = 'TYield tags
    type ('tags, 'TYield) this =
      'tags intf constraint 'tags = [> `IteratorYieldResult of 'TYield ]
    let rec this_of_js :
      'tags 'TYield .
        (Ojs.t -> 'tags) ->
          (Ojs.t -> 'TYield) -> Ojs.t -> ('tags, 'TYield) this
      =
      fun (type __tags) ->
        fun (type __TYield) ->
          fun (__tags_of_js : Ojs.t -> __tags) ->
            fun (__TYield_of_js : Ojs.t -> __TYield) ->
              fun (x7 : Ojs.t) -> intf_of_js __tags_of_js x7
    and this_to_js :
      'tags 'TYield .
        ('tags -> Ojs.t) ->
          ('TYield -> Ojs.t) -> ('tags, 'TYield) this -> Ojs.t
      =
      fun (type __tags) ->
        fun (type __TYield) ->
          fun (__tags_to_js : __tags -> Ojs.t) ->
            fun (__TYield_to_js : __TYield -> Ojs.t) ->
              fun (x5 : __tags intf) -> intf_to_js __tags_to_js x5
    let (get_done : ('tags, 'TYield) this -> [ `L_b_false ] option) =
      fun (x9 : ('tags, 'TYield) this) ->
        Ojs.option_of_js
          (fun (x12 : Ojs.t) ->
             let x13 = x12 in
             match Ojs.bool_of_js x13 with
             | false -> `L_b_false
             | _ -> assert false)
          (Ojs.get_prop_ascii (this_to_js Obj.magic Obj.magic x9) "done")
    let (set_done : ('tags, 'TYield) this -> [ `L_b_false ] -> unit) =
      fun (x14 : ('tags, 'TYield) this) ->
        fun (x15 : [ `L_b_false ]) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic Obj.magic x14) "done"
            (match x15 with | `L_b_false -> Ojs.bool_to_js false)
    let (get_value : ('tags, 'TYield) this -> 'TYield) =
      fun (x18 : ('tags, 'TYield) this) ->
        Obj.magic
          (Ojs.get_prop_ascii (this_to_js Obj.magic Obj.magic x18) "value")
    let (set_value : ('tags, 'TYield) this -> 'TYield -> unit) =
      fun (x21 : ('tags, 'TYield) this) ->
        fun (x22 : 'TYield) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic Obj.magic x21) "value"
            (Obj.magic x22)
    let (create :
      ?done_:[ `L_b_false ] -> value:'TYield -> unit -> 'TYield t) =
      fun ?done_:(x25 : [ `L_b_false ] option) ->
        fun ~value:(x26 : 'TYield) ->
          fun () ->
            let x27 = Ojs.empty_obj () in
            (match x25 with
             | Some x29 ->
                 Ojs.set_prop_ascii x27 "done"
                   (match x29 with | `L_b_false -> Ojs.bool_to_js false)
             | None -> ());
            Ojs.set_prop_ascii x27 "value" (Obj.magic x26);
            t_of_js Obj.magic x27
    let cast_from = Obj.magic
  end
module IteratorReturnResult =
  struct
    type 'TReturn t = [ `IteratorReturnResult of 'TReturn ] intf
    let rec t_of_js : 'TReturn . (Ojs.t -> 'TReturn) -> Ojs.t -> 'TReturn t =
      fun _TReturn -> Obj.magic
    and t_to_js : 'TReturn . ('TReturn -> Ojs.t) -> 'TReturn t -> Ojs.t =
      fun _TReturn -> Obj.magic
    type 'TReturn t_1 = 'TReturn t
    let rec t_1_of_js :
      'TReturn . (Ojs.t -> 'TReturn) -> Ojs.t -> 'TReturn t_1 =
      fun (type __TReturn) ->
        fun (__TReturn_of_js : Ojs.t -> __TReturn) ->
          fun (x32 : Ojs.t) -> t_of_js __TReturn_of_js x32
    and t_1_to_js : 'TReturn . ('TReturn -> Ojs.t) -> 'TReturn t_1 -> Ojs.t =
      fun (type __TReturn) ->
        fun (__TReturn_to_js : __TReturn -> Ojs.t) ->
          fun (x30 : __TReturn t) -> t_to_js __TReturn_to_js x30
    type 'TReturn tags = [ `IteratorReturnResult of 'TReturn ]
    type 'TReturn tags_1 = 'TReturn tags
    type ('tags, 'TReturn) this =
      'tags intf constraint 'tags = [> `IteratorReturnResult of 'TReturn ]
    let rec this_of_js :
      'tags 'TReturn .
        (Ojs.t -> 'tags) ->
          (Ojs.t -> 'TReturn) -> Ojs.t -> ('tags, 'TReturn) this
      =
      fun (type __tags) ->
        fun (type __TReturn) ->
          fun (__tags_of_js : Ojs.t -> __tags) ->
            fun (__TReturn_of_js : Ojs.t -> __TReturn) ->
              fun (x36 : Ojs.t) -> intf_of_js __tags_of_js x36
    and this_to_js :
      'tags 'TReturn .
        ('tags -> Ojs.t) ->
          ('TReturn -> Ojs.t) -> ('tags, 'TReturn) this -> Ojs.t
      =
      fun (type __tags) ->
        fun (type __TReturn) ->
          fun (__tags_to_js : __tags -> Ojs.t) ->
            fun (__TReturn_to_js : __TReturn -> Ojs.t) ->
              fun (x34 : __tags intf) -> intf_to_js __tags_to_js x34
    let (get_done : ('tags, 'TReturn) this -> [ `L_b_true ]) =
      fun (x38 : ('tags, 'TReturn) this) ->
        let x41 =
          Ojs.get_prop_ascii (this_to_js Obj.magic Obj.magic x38) "done" in
        match Ojs.bool_of_js x41 with | true -> `L_b_true | _ -> assert false
    let (set_done : ('tags, 'TReturn) this -> [ `L_b_true ] -> unit) =
      fun (x42 : ('tags, 'TReturn) this) ->
        fun (x43 : [ `L_b_true ]) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic Obj.magic x42) "done"
            (match x43 with | `L_b_true -> Ojs.bool_to_js true)
    let (get_value : ('tags, 'TReturn) this -> 'TReturn) =
      fun (x46 : ('tags, 'TReturn) this) ->
        Obj.magic
          (Ojs.get_prop_ascii (this_to_js Obj.magic Obj.magic x46) "value")
    let (set_value : ('tags, 'TReturn) this -> 'TReturn -> unit) =
      fun (x49 : ('tags, 'TReturn) this) ->
        fun (x50 : 'TReturn) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic Obj.magic x49) "value"
            (Obj.magic x50)
    let (create :
      done_:[ `L_b_true ] -> value:'TReturn -> unit -> 'TReturn t) =
      fun ~done_:(x53 : [ `L_b_true ]) ->
        fun ~value:(x54 : 'TReturn) ->
          fun () ->
            let x55 = Ojs.empty_obj () in
            Ojs.set_prop_ascii x55 "done"
              (match x53 with | `L_b_true -> Ojs.bool_to_js true);
            Ojs.set_prop_ascii x55 "value" (Obj.magic x54);
            t_of_js Obj.magic x55
    let cast_from = Obj.magic
  end
module IteratorResult =
  struct
    type ('T, 'TReturn) t =
      [ `U_b_false of 'T IteratorYieldResult.t 
      | `U_b_true of 'TReturn IteratorReturnResult.t ]
    let rec t_of_js :
      'T 'TReturn .
        (Ojs.t -> 'T) -> (Ojs.t -> 'TReturn) -> Ojs.t -> ('T, 'TReturn) t
      =
      fun (type __T) ->
        fun (type __TReturn) ->
          fun (__T_of_js : Ojs.t -> __T) ->
            fun (__TReturn_of_js : Ojs.t -> __TReturn) ->
              fun (x62 : Ojs.t) ->
                let x63 = x62 in
                match Ojs.bool_of_js (Ojs.get_prop_ascii x63 "done") with
                | false ->
                    `U_b_false (IteratorYieldResult.t_of_js __T_of_js x63)
                | true ->
                    `U_b_true
                      (IteratorReturnResult.t_of_js __TReturn_of_js x63)
    and t_to_js :
      'T 'TReturn .
        ('T -> Ojs.t) -> ('TReturn -> Ojs.t) -> ('T, 'TReturn) t -> Ojs.t
      =
      fun (type __T) ->
        fun (type __TReturn) ->
          fun (__T_to_js : __T -> Ojs.t) ->
            fun (__TReturn_to_js : __TReturn -> Ojs.t) ->
              fun
                (x57 :
                  [ `U_b_false of __T IteratorYieldResult.t 
                  | `U_b_true of __TReturn IteratorReturnResult.t ])
                ->
                match x57 with
                | `U_b_false x58 -> IteratorYieldResult.t_to_js __T_to_js x58
                | `U_b_true x60 ->
                    IteratorReturnResult.t_to_js __TReturn_to_js x60
    type ('T, 'TReturn) t_2 = ('T, 'TReturn) t
    let rec t_2_of_js :
      'T 'TReturn .
        (Ojs.t -> 'T) -> (Ojs.t -> 'TReturn) -> Ojs.t -> ('T, 'TReturn) t_2
      =
      fun (type __T) ->
        fun (type __TReturn) ->
          fun (__T_of_js : Ojs.t -> __T) ->
            fun (__TReturn_of_js : Ojs.t -> __TReturn) ->
              fun (x69 : Ojs.t) -> t_of_js __T_of_js __TReturn_of_js x69
    and t_2_to_js :
      'T 'TReturn .
        ('T -> Ojs.t) -> ('TReturn -> Ojs.t) -> ('T, 'TReturn) t_2 -> Ojs.t
      =
      fun (type __T) ->
        fun (type __TReturn) ->
          fun (__T_to_js : __T -> Ojs.t) ->
            fun (__TReturn_to_js : __TReturn -> Ojs.t) ->
              fun (x66 : (__T, __TReturn) t) ->
                t_to_js __T_to_js __TReturn_to_js x66
    type 'T t_1 = ('T, any) t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 =
      fun (type __T) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x75 : Ojs.t) -> t_of_js __T_of_js any_of_js x75
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t =
      fun (type __T) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x72 : (__T, any) t) -> t_to_js __T_to_js any_to_js x72
  end
module Iterator =
  struct
    type ('T, 'TReturn, 'TNext) t =
      [ `Iterator of ('T * 'TReturn * 'TNext) ] intf
    let rec t_of_js :
      'T 'TReturn 'TNext .
        (Ojs.t -> 'T) ->
          (Ojs.t -> 'TReturn) ->
            (Ojs.t -> 'TNext) -> Ojs.t -> ('T, 'TReturn, 'TNext) t
      = fun _T -> fun _TReturn -> fun _TNext -> Obj.magic
    and t_to_js :
      'T 'TReturn 'TNext .
        ('T -> Ojs.t) ->
          ('TReturn -> Ojs.t) ->
            ('TNext -> Ojs.t) -> ('T, 'TReturn, 'TNext) t -> Ojs.t
      = fun _T -> fun _TReturn -> fun _TNext -> Obj.magic
    type ('T, 'TReturn, 'TNext) t_3 = ('T, 'TReturn, 'TNext) t
    let rec t_3_of_js :
      'T 'TReturn 'TNext .
        (Ojs.t -> 'T) ->
          (Ojs.t -> 'TReturn) ->
            (Ojs.t -> 'TNext) -> Ojs.t -> ('T, 'TReturn, 'TNext) t_3
      =
      fun (type __T) ->
        fun (type __TReturn) ->
          fun (type __TNext) ->
            fun (__T_of_js : Ojs.t -> __T) ->
              fun (__TReturn_of_js : Ojs.t -> __TReturn) ->
                fun (__TNext_of_js : Ojs.t -> __TNext) ->
                  fun (x82 : Ojs.t) ->
                    t_of_js __T_of_js __TReturn_of_js __TNext_of_js x82
    and t_3_to_js :
      'T 'TReturn 'TNext .
        ('T -> Ojs.t) ->
          ('TReturn -> Ojs.t) ->
            ('TNext -> Ojs.t) -> ('T, 'TReturn, 'TNext) t_3 -> Ojs.t
      =
      fun (type __T) ->
        fun (type __TReturn) ->
          fun (type __TNext) ->
            fun (__T_to_js : __T -> Ojs.t) ->
              fun (__TReturn_to_js : __TReturn -> Ojs.t) ->
                fun (__TNext_to_js : __TNext -> Ojs.t) ->
                  fun (x78 : (__T, __TReturn, __TNext) t) ->
                    t_to_js __T_to_js __TReturn_to_js __TNext_to_js x78
    type ('T, 'TReturn) t_2 = ('T, 'TReturn, undefined) t
    let rec t_2_of_js :
      'T 'TReturn .
        (Ojs.t -> 'T) -> (Ojs.t -> 'TReturn) -> Ojs.t -> ('T, 'TReturn) t_2
      =
      fun (type __T) ->
        fun (type __TReturn) ->
          fun (__T_of_js : Ojs.t -> __T) ->
            fun (__TReturn_of_js : Ojs.t -> __TReturn) ->
              fun (x90 : Ojs.t) ->
                t_of_js __T_of_js __TReturn_of_js undefined_of_js x90
    and t_2_to_js :
      'T 'TReturn .
        ('T -> Ojs.t) -> ('TReturn -> Ojs.t) -> ('T, 'TReturn) t_2 -> Ojs.t
      =
      fun (type __T) ->
        fun (type __TReturn) ->
          fun (__T_to_js : __T -> Ojs.t) ->
            fun (__TReturn_to_js : __TReturn -> Ojs.t) ->
              fun (x86 : (__T, __TReturn, undefined) t) ->
                t_to_js __T_to_js __TReturn_to_js undefined_to_js x86
    type 'T t_1 = ('T, any, undefined) t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 =
      fun (type __T) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x98 : Ojs.t) ->
            t_of_js __T_of_js any_of_js undefined_of_js x98
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t =
      fun (type __T) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x94 : (__T, any, undefined) t) ->
            t_to_js __T_to_js any_to_js undefined_to_js x94
    type ('T, 'TReturn, 'TNext) tags =
      [ `Iterator of ('T * 'TReturn * 'TNext) ]
    type ('T, 'TReturn, 'TNext) tags_3 = ('T, 'TReturn, 'TNext) tags
    type ('T, 'TReturn) tags_2 = ('T, 'TReturn, undefined) tags
    type 'T tags_1 = ('T, any, undefined) tags
    type ('tags, 'T, 'TReturn, 'TNext) this =
      'tags intf constraint 'tags =
                  [> `Iterator of ('T * 'TReturn * 'TNext) ]
    let rec this_of_js :
      'tags 'T 'TReturn 'TNext .
        (Ojs.t -> 'tags) ->
          (Ojs.t -> 'T) ->
            (Ojs.t -> 'TReturn) ->
              (Ojs.t -> 'TNext) ->
                Ojs.t -> ('tags, 'T, 'TReturn, 'TNext) this
      =
      fun (type __tags) ->
        fun (type __T) ->
          fun (type __TReturn) ->
            fun (type __TNext) ->
              fun (__tags_of_js : Ojs.t -> __tags) ->
                fun (__T_of_js : Ojs.t -> __T) ->
                  fun (__TReturn_of_js : Ojs.t -> __TReturn) ->
                    fun (__TNext_of_js : Ojs.t -> __TNext) ->
                      fun (x104 : Ojs.t) -> intf_of_js __tags_of_js x104
    and this_to_js :
      'tags 'T 'TReturn 'TNext .
        ('tags -> Ojs.t) ->
          ('T -> Ojs.t) ->
            ('TReturn -> Ojs.t) ->
              ('TNext -> Ojs.t) ->
                ('tags, 'T, 'TReturn, 'TNext) this -> Ojs.t
      =
      fun (type __tags) ->
        fun (type __T) ->
          fun (type __TReturn) ->
            fun (type __TNext) ->
              fun (__tags_to_js : __tags -> Ojs.t) ->
                fun (__T_to_js : __T -> Ojs.t) ->
                  fun (__TReturn_to_js : __TReturn -> Ojs.t) ->
                    fun (__TNext_to_js : __TNext -> Ojs.t) ->
                      fun (x102 : __tags intf) ->
                        intf_to_js __tags_to_js x102
    let (next :
      ('tags, 'T, 'TReturn, 'TNext) this ->
        args:any list -> ('T, 'TReturn) IteratorResult.t)
      =
      fun (x109 : ('tags, 'T, 'TReturn, 'TNext) this) ->
        fun ~args:(x106 : any list) ->
          IteratorResult.t_of_js Obj.magic Obj.magic
            (let x114 =
               this_to_js Obj.magic Obj.magic Obj.magic Obj.magic x109 in
             Ojs.call (Ojs.get_prop_ascii x114 "next") "apply"
               [|x114;((let x107 =
                          Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                            [||] in
                        List.iter
                          (fun (x108 : any) ->
                             ignore
                               (Ojs.call x107 "push" [|(any_to_js x108)|]))
                          x106;
                        x107))|])
    let (return :
      ('tags, 'T, 'TReturn, 'TNext) this ->
        ?value:'TReturn -> unit -> ('T, 'TReturn) IteratorResult.t)
      =
      fun (x120 : ('tags, 'T, 'TReturn, 'TNext) this) ->
        fun ?value:(x117 : 'TReturn option) ->
          fun () ->
            IteratorResult.t_of_js Obj.magic Obj.magic
              (let x125 =
                 this_to_js Obj.magic Obj.magic Obj.magic Obj.magic x120 in
               Ojs.call (Ojs.get_prop_ascii x125 "return") "apply"
                 [|x125;((let x118 =
                            Ojs.new_obj
                              (Ojs.get_prop_ascii Ojs.global "Array") 
                              [||] in
                          (match x117 with
                           | Some x119 ->
                               ignore
                                 (Ojs.call x118 "push" [|(Obj.magic x119)|])
                           | None -> ());
                          x118))|])
    let (throw :
      ('tags, 'T, 'TReturn, 'TNext) this ->
        ?e:any -> unit -> ('T, 'TReturn) IteratorResult.t)
      =
      fun (x131 : ('tags, 'T, 'TReturn, 'TNext) this) ->
        fun ?e:(x128 : any option) ->
          fun () ->
            IteratorResult.t_of_js Obj.magic Obj.magic
              (let x136 =
                 this_to_js Obj.magic Obj.magic Obj.magic Obj.magic x131 in
               Ojs.call (Ojs.get_prop_ascii x136 "throw") "apply"
                 [|x136;((let x129 =
                            Ojs.new_obj
                              (Ojs.get_prop_ascii Ojs.global "Array") 
                              [||] in
                          (match x128 with
                           | Some x130 ->
                               ignore
                                 (Ojs.call x129 "push" [|(any_to_js x130)|])
                           | None -> ());
                          x129))|])
    let cast_from = Obj.magic
  end
module Iterable =
  struct
    type 'T t = [ `Iterable of 'T ] intf
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun _T -> Obj.magic
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun _T -> Obj.magic
    type 'T t_1 = 'T t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 =
      fun (type __T) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x141 : Ojs.t) -> t_of_js __T_of_js x141
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t =
      fun (type __T) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x139 : __T t) -> t_to_js __T_to_js x139
    type 'T tags = [ `Iterable of 'T ]
    type 'T tags_1 = 'T tags
    type ('tags, 'T) this =
      'tags intf constraint 'tags = [> `Iterable of 'T ]
    let rec this_of_js :
      'tags 'T .
        (Ojs.t -> 'tags) -> (Ojs.t -> 'T) -> Ojs.t -> ('tags, 'T) this
      =
      fun (type __tags) ->
        fun (type __T) ->
          fun (__tags_of_js : Ojs.t -> __tags) ->
            fun (__T_of_js : Ojs.t -> __T) ->
              fun (x145 : Ojs.t) -> intf_of_js __tags_of_js x145
    and this_to_js :
      'tags 'T .
        ('tags -> Ojs.t) -> ('T -> Ojs.t) -> ('tags, 'T) this -> Ojs.t
      =
      fun (type __tags) ->
        fun (type __T) ->
          fun (__tags_to_js : __tags -> Ojs.t) ->
            fun (__T_to_js : __T -> Ojs.t) ->
              fun (x143 : __tags intf) -> intf_to_js __tags_to_js x143
    let cast_from = Obj.magic
  end
module WeakSet =
  struct
    type 'T t = [ `WeakSet of 'T ] intf
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun _T -> Obj.magic
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun _T -> Obj.magic
    type 'T t_1 = 'T t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 =
      fun (type __T) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x149 : Ojs.t) -> t_of_js __T_of_js x149
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t =
      fun (type __T) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x147 : __T t) -> t_to_js __T_to_js x147
    type 'T tags = [ `WeakSet of 'T ]
    type 'T tags_1 = 'T tags
    type ('tags, 'T) this = 'tags intf constraint 'tags = [> `WeakSet of 'T ]
    let rec this_of_js :
      'tags 'T .
        (Ojs.t -> 'tags) -> (Ojs.t -> 'T) -> Ojs.t -> ('tags, 'T) this
      =
      fun (type __tags) ->
        fun (type __T) ->
          fun (__tags_of_js : Ojs.t -> __tags) ->
            fun (__T_of_js : Ojs.t -> __T) ->
              fun (x153 : Ojs.t) -> intf_of_js __tags_of_js x153
    and this_to_js :
      'tags 'T .
        ('tags -> Ojs.t) -> ('T -> Ojs.t) -> ('tags, 'T) this -> Ojs.t
      =
      fun (type __tags) ->
        fun (type __T) ->
          fun (__tags_to_js : __tags -> Ojs.t) ->
            fun (__T_to_js : __T -> Ojs.t) ->
              fun (x151 : __tags intf) -> intf_to_js __tags_to_js x151
    let (add : ('tags, 'T) this -> value:'T -> ('tags, 'T) this) =
      fun (x156 : ('tags, 'T) this) ->
        fun ~value:(x155 : 'T) ->
          this_of_js Obj.magic Obj.magic
            (Ojs.call (this_to_js Obj.magic Obj.magic x156) "add"
               [|(Obj.magic x155)|])
    let (delete : ('tags, 'T) this -> value:'T -> bool) =
      fun (x162 : ('tags, 'T) this) ->
        fun ~value:(x161 : 'T) ->
          Ojs.bool_of_js
            (Ojs.call (this_to_js Obj.magic Obj.magic x162) "delete"
               [|(Obj.magic x161)|])
    let (has : ('tags, 'T) this -> value:'T -> bool) =
      fun (x166 : ('tags, 'T) this) ->
        fun ~value:(x165 : 'T) ->
          Ojs.bool_of_js
            (Ojs.call (this_to_js Obj.magic Obj.magic x166) "has"
               [|(Obj.magic x165)|])
    let (create : 'T Iterable.t -> 'T t) =
      fun (x169 : 'T Iterable.t) ->
        t_of_js Obj.magic
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "WeakSet")
             [|(Iterable.t_to_js Obj.magic x169)|])
    let (create' : ?values:'T list option -> unit -> 'T t) =
      fun ?values:(x172 : 'T list option option) ->
        fun () ->
          t_of_js Obj.magic
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "WeakSet")
               (let x173 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x172 with
                 | Some x174 ->
                     ignore
                       (Ojs.call x173 "push"
                          [|(Ojs.option_to_js
                               (fun (x175 : 'T list) ->
                                  Ojs.list_to_js Obj.magic x175) x174)|])
                 | None -> ());
                x173))
    let (prototype : unit -> untyped_object t) =
      fun () ->
        t_of_js untyped_object_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "WeakSet")
             "prototype")
    let cast_from = Obj.magic
  end
module WeakRef =
  struct
    type 'T t = [ `WeakRef of 'T ] intf
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun _T -> Obj.magic
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun _T -> Obj.magic
    type 'T t_1 = 'T t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 =
      fun (type __T) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x181 : Ojs.t) -> t_of_js __T_of_js x181
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t =
      fun (type __T) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x179 : __T t) -> t_to_js __T_to_js x179
    type 'T tags = [ `WeakRef of 'T ]
    type 'T tags_1 = 'T tags
    type ('tags, 'T) this = 'tags intf constraint 'tags = [> `WeakRef of 'T ]
    let rec this_of_js :
      'tags 'T .
        (Ojs.t -> 'tags) -> (Ojs.t -> 'T) -> Ojs.t -> ('tags, 'T) this
      =
      fun (type __tags) ->
        fun (type __T) ->
          fun (__tags_of_js : Ojs.t -> __tags) ->
            fun (__T_of_js : Ojs.t -> __T) ->
              fun (x185 : Ojs.t) -> intf_of_js __tags_of_js x185
    and this_to_js :
      'tags 'T .
        ('tags -> Ojs.t) -> ('T -> Ojs.t) -> ('tags, 'T) this -> Ojs.t
      =
      fun (type __tags) ->
        fun (type __T) ->
          fun (__tags_to_js : __tags -> Ojs.t) ->
            fun (__T_to_js : __T -> Ojs.t) ->
              fun (x183 : __tags intf) -> intf_to_js __tags_to_js x183
    let (deref : ('tags, 'T) this -> 'T option) =
      fun (x187 : ('tags, 'T) this) ->
        Ojs.option_of_js Obj.magic
          (Ojs.call (this_to_js Obj.magic Obj.magic x187) "deref" [||])
    let (deref' : ('tags, 'T) this -> 'T option) =
      fun (x191 : ('tags, 'T) this) ->
        Ojs.option_of_js Obj.magic
          (Ojs.call (this_to_js Obj.magic Obj.magic x191) "deref" [||])
    let (prototype : unit -> any t) =
      fun () ->
        t_of_js any_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "WeakRef")
             "prototype")
    let (create : ?target:'T -> unit -> 'T t) =
      fun ?target:(x196 : 'T option) ->
        fun () ->
          t_of_js Obj.magic
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "WeakRef")
               (let x197 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x196 with
                 | Some x198 ->
                     ignore (Ojs.call x197 "push" [|(Obj.magic x198)|])
                 | None -> ());
                x197))
    let (prototype' : unit -> any t) =
      fun () ->
        t_of_js any_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "WeakRef")
             "prototype")
    let (create' : 'T -> 'T t) =
      fun (x201 : 'T) ->
        t_of_js Obj.magic
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "WeakRef")
             [|(Obj.magic x201)|])
    let cast_from = Obj.magic
  end
module WeakMap =
  struct
    type ('K, 'V) t = [ `WeakMap of ('K * 'V) ] intf
    let rec t_of_js :
      'K 'V . (Ojs.t -> 'K) -> (Ojs.t -> 'V) -> Ojs.t -> ('K, 'V) t =
      fun _K -> fun _V -> Obj.magic
    and t_to_js :
      'K 'V . ('K -> Ojs.t) -> ('V -> Ojs.t) -> ('K, 'V) t -> Ojs.t =
      fun _K -> fun _V -> Obj.magic
    type ('K, 'V) t_2 = ('K, 'V) t
    let rec t_2_of_js :
      'K 'V . (Ojs.t -> 'K) -> (Ojs.t -> 'V) -> Ojs.t -> ('K, 'V) t_2 =
      fun (type __K) ->
        fun (type __V) ->
          fun (__K_of_js : Ojs.t -> __K) ->
            fun (__V_of_js : Ojs.t -> __V) ->
              fun (x206 : Ojs.t) -> t_of_js __K_of_js __V_of_js x206
    and t_2_to_js :
      'K 'V . ('K -> Ojs.t) -> ('V -> Ojs.t) -> ('K, 'V) t_2 -> Ojs.t =
      fun (type __K) ->
        fun (type __V) ->
          fun (__K_to_js : __K -> Ojs.t) ->
            fun (__V_to_js : __V -> Ojs.t) ->
              fun (x203 : (__K, __V) t) -> t_to_js __K_to_js __V_to_js x203
    type ('K, 'V) tags = [ `WeakMap of ('K * 'V) ]
    type ('K, 'V) tags_2 = ('K, 'V) tags
    type ('tags, 'K, 'V) this =
      'tags intf constraint 'tags = [> `WeakMap of ('K * 'V) ]
    let rec this_of_js :
      'tags 'K 'V .
        (Ojs.t -> 'tags) ->
          (Ojs.t -> 'K) -> (Ojs.t -> 'V) -> Ojs.t -> ('tags, 'K, 'V) this
      =
      fun (type __tags) ->
        fun (type __K) ->
          fun (type __V) ->
            fun (__tags_of_js : Ojs.t -> __tags) ->
              fun (__K_of_js : Ojs.t -> __K) ->
                fun (__V_of_js : Ojs.t -> __V) ->
                  fun (x211 : Ojs.t) -> intf_of_js __tags_of_js x211
    and this_to_js :
      'tags 'K 'V .
        ('tags -> Ojs.t) ->
          ('K -> Ojs.t) -> ('V -> Ojs.t) -> ('tags, 'K, 'V) this -> Ojs.t
      =
      fun (type __tags) ->
        fun (type __K) ->
          fun (type __V) ->
            fun (__tags_to_js : __tags -> Ojs.t) ->
              fun (__K_to_js : __K -> Ojs.t) ->
                fun (__V_to_js : __V -> Ojs.t) ->
                  fun (x209 : __tags intf) -> intf_to_js __tags_to_js x209
    let (delete : ('tags, 'K, 'V) this -> key:'K -> bool) =
      fun (x214 : ('tags, 'K, 'V) this) ->
        fun ~key:(x213 : 'K) ->
          Ojs.bool_of_js
            (Ojs.call (this_to_js Obj.magic Obj.magic Obj.magic x214)
               "delete" [|(Obj.magic x213)|])
    let (get_ : ('tags, 'K, 'V) this -> key:'K -> 'V option) =
      fun (x219 : ('tags, 'K, 'V) this) ->
        fun ~key:(x218 : 'K) ->
          Ojs.option_of_js Obj.magic
            (Ojs.call (this_to_js Obj.magic Obj.magic Obj.magic x219) "get"
               [|(Obj.magic x218)|])
    let (has : ('tags, 'K, 'V) this -> key:'K -> bool) =
      fun (x225 : ('tags, 'K, 'V) this) ->
        fun ~key:(x224 : 'K) ->
          Ojs.bool_of_js
            (Ojs.call (this_to_js Obj.magic Obj.magic Obj.magic x225) "has"
               [|(Obj.magic x224)|])
    let (set_ :
      ('tags, 'K, 'V) this -> key:'K -> value:'V -> ('tags, 'K, 'V) this) =
      fun (x231 : ('tags, 'K, 'V) this) ->
        fun ~key:(x229 : 'K) ->
          fun ~value:(x230 : 'V) ->
            this_of_js Obj.magic Obj.magic Obj.magic
              (Ojs.call (this_to_js Obj.magic Obj.magic Obj.magic x231) "set"
                 [|(Obj.magic x229);(Obj.magic x230)|])
    let (create : ('K * 'V) Iterable.t -> ('K, 'V) t) =
      fun (x238 : ('K * 'V) Iterable.t) ->
        t_of_js Obj.magic Obj.magic
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "WeakMap")
             [|(Iterable.t_to_js
                  (fun (x239 : ('K * 'V)) ->
                     let (x240, x241) = x239 in
                     let x242 = Ojs.array_make 2 in
                     Ojs.array_set x242 0 (Obj.magic x240);
                     Ojs.array_set x242 1 (Obj.magic x241);
                     x242) x238)|])
    let (create' : ?entries:('K * 'V) list option -> unit -> ('K, 'V) t) =
      fun ?entries:(x245 : ('K * 'V) list option option) ->
        fun () ->
          t_of_js Obj.magic Obj.magic
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "WeakMap")
               (let x246 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x245 with
                 | Some x247 ->
                     ignore
                       (Ojs.call x246 "push"
                          [|(Ojs.option_to_js
                               (fun (x248 : ('K * 'V) list) ->
                                  Ojs.list_to_js
                                    (fun (x249 : ('K * 'V)) ->
                                       let (x250, x251) = x249 in
                                       let x252 = Ojs.array_make 2 in
                                       Ojs.array_set x252 0 (Obj.magic x250);
                                       Ojs.array_set x252 1 (Obj.magic x251);
                                       x252) x248) x247)|])
                 | None -> ());
                x246))
    let (prototype : unit -> (untyped_object, any) t) =
      fun () ->
        t_of_js untyped_object_of_js any_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "WeakMap")
             "prototype")
    let cast_from = Obj.magic
  end
module Uppercase =
  struct
    type 'S t = Ojs.t
    let rec t_of_js : 'S . (Ojs.t -> 'S) -> Ojs.t -> 'S t =
      fun (type __S) ->
        fun (__S_of_js : Ojs.t -> __S) -> fun (x258 : Ojs.t) -> x258
    and t_to_js : 'S . ('S -> Ojs.t) -> 'S t -> Ojs.t =
      fun (type __S) ->
        fun (__S_to_js : __S -> Ojs.t) -> fun (x257 : Ojs.t) -> x257
    type 'S t_1 = 'S t
    let rec t_1_of_js : 'S . (Ojs.t -> 'S) -> Ojs.t -> 'S t_1 =
      fun (type __S) ->
        fun (__S_of_js : Ojs.t -> __S) ->
          fun (x261 : Ojs.t) -> t_of_js __S_of_js x261
    and t_1_to_js : 'S . ('S -> Ojs.t) -> 'S t_1 -> Ojs.t =
      fun (type __S) ->
        fun (__S_to_js : __S -> Ojs.t) ->
          fun (x259 : __S t) -> t_to_js __S_to_js x259
  end
module Uncapitalize =
  struct
    type 'S t = Ojs.t
    let rec t_of_js : 'S . (Ojs.t -> 'S) -> Ojs.t -> 'S t =
      fun (type __S) ->
        fun (__S_of_js : Ojs.t -> __S) -> fun (x264 : Ojs.t) -> x264
    and t_to_js : 'S . ('S -> Ojs.t) -> 'S t -> Ojs.t =
      fun (type __S) ->
        fun (__S_to_js : __S -> Ojs.t) -> fun (x263 : Ojs.t) -> x263
    type 'S t_1 = 'S t
    let rec t_1_of_js : 'S . (Ojs.t -> 'S) -> Ojs.t -> 'S t_1 =
      fun (type __S) ->
        fun (__S_of_js : Ojs.t -> __S) ->
          fun (x267 : Ojs.t) -> t_of_js __S_of_js x267
    and t_1_to_js : 'S . ('S -> Ojs.t) -> 'S t_1 -> Ojs.t =
      fun (type __S) ->
        fun (__S_to_js : __S -> Ojs.t) ->
          fun (x265 : __S t) -> t_to_js __S_to_js x265
  end
module SharedArrayBuffer =
  struct
    type t = [ `SharedArrayBuffer ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x270 : Ojs.t) -> t_of_js x270
    and t_0_to_js : t_0 -> Ojs.t = fun (x269 : t) -> t_to_js x269
    type tags = [ `SharedArrayBuffer ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `SharedArrayBuffer ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x273 : Ojs.t) -> intf_of_js __tags_of_js x273
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x271 : __tags intf) -> intf_to_js __tags_to_js x271
    let (get_byteLength : 'tags this -> float) =
      fun (x275 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x275) "byteLength")
    let (slice : 'tags this -> begin_:float -> ?end_:float -> unit -> t) =
      fun (x281 : 'tags this) ->
        fun ~begin_:(x277 : float) ->
          fun ?end_:(x278 : float option) ->
            fun () ->
              t_of_js
                (let x283 = this_to_js Obj.magic x281 in
                 Ojs.call (Ojs.get_prop_ascii x283 "slice") "apply"
                   [|x283;((let x279 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x279 "push"
                                 [|(Ojs.float_to_js x277)|]);
                            (match x278 with
                             | Some x280 ->
                                 ignore
                                   (Ojs.call x279 "push"
                                      [|(Ojs.float_to_js x280)|])
                             | None -> ());
                            x279))|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "SharedArrayBuffer") "prototype")
    let (create : float -> t) =
      fun (x284 : float) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "SharedArrayBuffer")
             [|(Ojs.float_to_js x284)|])
    let cast_from = Obj.magic
  end
module ArrayBuffer =
  struct
    type t = [ `ArrayBuffer ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x286 : Ojs.t) -> t_of_js x286
    and t_0_to_js : t_0 -> Ojs.t = fun (x285 : t) -> t_to_js x285
    type tags = [ `ArrayBuffer ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `ArrayBuffer ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x289 : Ojs.t) -> intf_of_js __tags_of_js x289
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x287 : __tags intf) -> intf_to_js __tags_to_js x287
    let (get_byteLength : 'tags this -> float) =
      fun (x291 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x291) "byteLength")
    let (slice : 'tags this -> begin_:float -> ?end_:float -> unit -> t) =
      fun (x297 : 'tags this) ->
        fun ~begin_:(x293 : float) ->
          fun ?end_:(x294 : float option) ->
            fun () ->
              t_of_js
                (let x299 = this_to_js Obj.magic x297 in
                 Ojs.call (Ojs.get_prop_ascii x299 "slice") "apply"
                   [|x299;((let x295 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x295 "push"
                                 [|(Ojs.float_to_js x293)|]);
                            (match x294 with
                             | Some x296 ->
                                 ignore
                                   (Ojs.call x295 "push"
                                      [|(Ojs.float_to_js x296)|])
                             | None -> ());
                            x295))|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "ArrayBuffer")
             "prototype")
    let (create : float -> t) =
      fun (x300 : float) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "ArrayBuffer")
             [|(Ojs.float_to_js x300)|])
    let (isView : any -> bool) =
      fun (x301 : any) ->
        Ojs.bool_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "ArrayBuffer") "isView"
             [|(any_to_js x301)|])
    let cast_from = Obj.magic
  end
module ArrayBufferLike =
  struct
    type t = (ArrayBuffer.t, SharedArrayBuffer.t) union2
    let rec t_of_js : Ojs.t -> t =
      fun (x305 : Ojs.t) ->
        union2_of_js ArrayBuffer.t_of_js SharedArrayBuffer.t_of_js x305
    and t_to_js : t -> Ojs.t =
      fun (x302 : (ArrayBuffer.t, SharedArrayBuffer.t) union2) ->
        union2_to_js ArrayBuffer.t_to_js SharedArrayBuffer.t_to_js x302
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x309 : Ojs.t) -> t_of_js x309
    and t_0_to_js : t_0 -> Ojs.t = fun (x308 : t) -> t_to_js x308
  end
module IterableIterator =
  struct
    type 'T t =
      [ `IterableIterator of 'T  | `Iterator of ('T * any * undefined) ] intf
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun _T -> Obj.magic
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun _T -> Obj.magic
    type 'T t_1 = 'T t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 =
      fun (type __T) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x312 : Ojs.t) -> t_of_js __T_of_js x312
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t =
      fun (type __T) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x310 : __T t) -> t_to_js __T_to_js x310
    type 'T tags =
      [ `IterableIterator of 'T  | `Iterator of ('T * any * undefined) ]
    type 'T tags_1 = 'T tags
    type ('tags, 'T) this =
      'tags intf constraint 'tags = [> `IterableIterator of 'T ]
    let rec this_of_js :
      'tags 'T .
        (Ojs.t -> 'tags) -> (Ojs.t -> 'T) -> Ojs.t -> ('tags, 'T) this
      =
      fun (type __tags) ->
        fun (type __T) ->
          fun (__tags_of_js : Ojs.t -> __tags) ->
            fun (__T_of_js : Ojs.t -> __T) ->
              fun (x316 : Ojs.t) -> intf_of_js __tags_of_js x316
    and this_to_js :
      'tags 'T .
        ('tags -> Ojs.t) -> ('T -> Ojs.t) -> ('tags, 'T) this -> Ojs.t
      =
      fun (type __tags) ->
        fun (type __T) ->
          fun (__tags_to_js : __tags -> Ojs.t) ->
            fun (__T_to_js : __T -> Ojs.t) ->
              fun (x314 : __tags intf) -> intf_to_js __tags_to_js x314
    let cast_from = Obj.magic
  end
module ArrayLike =
  struct
    type 'T t = [ `ArrayLike of 'T ] intf
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun _T -> Obj.magic
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun _T -> Obj.magic
    type 'T t_1 = 'T t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 =
      fun (type __T) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x320 : Ojs.t) -> t_of_js __T_of_js x320
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t =
      fun (type __T) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x318 : __T t) -> t_to_js __T_to_js x318
    type 'T tags = [ `ArrayLike of 'T ]
    type 'T tags_1 = 'T tags
    type ('tags, 'T) this =
      'tags intf constraint 'tags = [> `ArrayLike of 'T ]
    let rec this_of_js :
      'tags 'T .
        (Ojs.t -> 'tags) -> (Ojs.t -> 'T) -> Ojs.t -> ('tags, 'T) this
      =
      fun (type __tags) ->
        fun (type __T) ->
          fun (__tags_of_js : Ojs.t -> __tags) ->
            fun (__T_of_js : Ojs.t -> __T) ->
              fun (x324 : Ojs.t) -> intf_of_js __tags_of_js x324
    and this_to_js :
      'tags 'T .
        ('tags -> Ojs.t) -> ('T -> Ojs.t) -> ('tags, 'T) this -> Ojs.t
      =
      fun (type __tags) ->
        fun (type __T) ->
          fun (__tags_to_js : __tags -> Ojs.t) ->
            fun (__T_to_js : __T -> Ojs.t) ->
              fun (x322 : __tags intf) -> intf_to_js __tags_to_js x322
    let (get_length : ('tags, 'T) this -> float) =
      fun (x326 : ('tags, 'T) this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic Obj.magic x326) "length")
    let (get : ('tags, 'T) this -> float -> 'T) =
      fun (x329 : ('tags, 'T) this) ->
        fun (x332 : float) ->
          Obj.magic
            (Ojs.get_prop (this_to_js Obj.magic Obj.magic x329)
               (Ojs.float_to_js x332))
    let cast_from = Obj.magic
    let (of_ml : 'T list -> 'T t) =
      fun (x333 : 'T list) ->
        t_of_js Obj.magic (Ojs.list_to_js Obj.magic x333)
    let (to_ml : 'T t -> 'T list) =
      fun (x336 : 'T t) -> Ojs.list_of_js Obj.magic (t_to_js Obj.magic x336)
  end
module Uint8ClampedArray =
  struct
    type t =
      [ `Uint8ClampedArray  | float ArrayLike.tags_1
      | float IterableIterator.tags_1] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x340 : Ojs.t) -> t_of_js x340
    and t_0_to_js : t_0 -> Ojs.t = fun (x339 : t) -> t_to_js x339
    type tags =
      [ `Uint8ClampedArray  | float ArrayLike.tags_1
      | float IterableIterator.tags_1]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `Uint8ClampedArray ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x343 : Ojs.t) -> intf_of_js __tags_of_js x343
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x341 : __tags intf) -> intf_to_js __tags_to_js x341
    let (at : 'tags this -> index:float -> float option) =
      fun (x346 : 'tags this) ->
        fun ~index:(x345 : float) ->
          Ojs.option_of_js Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x346) "at"
               [|(Ojs.float_to_js x345)|])
    let (includes :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> bool)
      =
      fun (x353 : 'tags this) ->
        fun ~searchElement:(x349 : float) ->
          fun ?fromIndex:(x350 : float option) ->
            fun () ->
              Ojs.bool_of_js
                (let x355 = this_to_js Obj.magic x353 in
                 Ojs.call (Ojs.get_prop_ascii x355 "includes") "apply"
                   [|x355;((let x351 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x351 "push"
                                 [|(Ojs.float_to_js x349)|]);
                            (match x350 with
                             | Some x352 ->
                                 ignore
                                   (Ojs.call x351 "push"
                                      [|(Ojs.float_to_js x352)|])
                             | None -> ());
                            x351))|])
    let (entries : 'tags this -> (float * float) IterableIterator.t) =
      fun (x356 : 'tags this) ->
        IterableIterator.t_of_js
          (fun (x358 : Ojs.t) ->
             let x359 = x358 in
             ((Ojs.float_of_js (Ojs.array_get x359 0)),
               (Ojs.float_of_js (Ojs.array_get x359 1))))
          (Ojs.call (this_to_js Obj.magic x356) "entries" [||])
    let (keys : 'tags this -> float IterableIterator.t) =
      fun (x360 : 'tags this) ->
        IterableIterator.t_of_js Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x360) "keys" [||])
    let (values : 'tags this -> float IterableIterator.t) =
      fun (x363 : 'tags this) ->
        IterableIterator.t_of_js Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x363) "values" [||])
    let (get_BYTES_PER_ELEMENT : 'tags this -> float) =
      fun (x366 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x366) "BYTES_PER_ELEMENT")
    let (get_buffer : 'tags this -> ArrayBufferLike.t) =
      fun (x368 : 'tags this) ->
        ArrayBufferLike.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x368) "buffer")
    let (get_byteLength : 'tags this -> float) =
      fun (x370 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x370) "byteLength")
    let (get_byteOffset : 'tags this -> float) =
      fun (x372 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x372) "byteOffset")
    let (copyWithin :
      'tags this ->
        target:float -> start:float -> ?end_:float -> unit -> 'tags this)
      =
      fun (x379 : 'tags this) ->
        fun ~target:(x374 : float) ->
          fun ~start:(x375 : float) ->
            fun ?end_:(x376 : float option) ->
              fun () ->
                this_of_js Obj.magic
                  (let x381 = this_to_js Obj.magic x379 in
                   Ojs.call (Ojs.get_prop_ascii x381 "copyWithin") "apply"
                     [|x381;((let x377 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x377 "push"
                                   [|(Ojs.float_to_js x374)|]);
                              ignore
                                (Ojs.call x377 "push"
                                   [|(Ojs.float_to_js x375)|]);
                              (match x376 with
                               | Some x378 ->
                                   ignore
                                     (Ojs.call x377 "push"
                                        [|(Ojs.float_to_js x378)|])
                               | None -> ());
                              x377))|])
    let (every :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x390 : 'tags this) ->
        fun
          ~predicate:(x383 :
                       value:float -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x384 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x392 = this_to_js Obj.magic x390 in
                 Ojs.call (Ojs.get_prop_ascii x392 "every") "apply"
                   [|x392;((let x385 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x385 "push"
                                 [|(Ojs.fun_to_js 3
                                      (fun (x387 : Ojs.t) ->
                                         fun (x388 : Ojs.t) ->
                                           fun (x389 : Ojs.t) ->
                                             unknown_to_js
                                               (x383
                                                  ~value:(Ojs.float_of_js
                                                            x387)
                                                  ~index:(Ojs.float_of_js
                                                            x388)
                                                  ~array:(t_of_js x389))))|]);
                            (match x384 with
                             | Some x386 ->
                                 ignore
                                   (Ojs.call x385 "push" [|(any_to_js x386)|])
                             | None -> ());
                            x385))|])
    let (fill :
      'tags this ->
        value:float -> ?start:float -> ?end_:float -> unit -> 'tags this)
      =
      fun (x399 : 'tags this) ->
        fun ~value:(x393 : float) ->
          fun ?start:(x394 : float option) ->
            fun ?end_:(x395 : float option) ->
              fun () ->
                this_of_js Obj.magic
                  (let x401 = this_to_js Obj.magic x399 in
                   Ojs.call (Ojs.get_prop_ascii x401 "fill") "apply"
                     [|x401;((let x396 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x396 "push"
                                   [|(Ojs.float_to_js x393)|]);
                              (match x394 with
                               | Some x398 ->
                                   ignore
                                     (Ojs.call x396 "push"
                                        [|(Ojs.float_to_js x398)|])
                               | None -> ());
                              (match x395 with
                               | Some x397 ->
                                   ignore
                                     (Ojs.call x396 "push"
                                        [|(Ojs.float_to_js x397)|])
                               | None -> ());
                              x396))|])
    let (filter :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> any) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x410 : 'tags this) ->
        fun ~predicate:(x403 : value:float -> index:float -> array:t -> any)
          ->
          fun ?thisArg:(x404 : any option) ->
            fun () ->
              t_of_js
                (let x412 = this_to_js Obj.magic x410 in
                 Ojs.call (Ojs.get_prop_ascii x412 "filter") "apply"
                   [|x412;((let x405 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x405 "push"
                                 [|(Ojs.fun_to_js 3
                                      (fun (x407 : Ojs.t) ->
                                         fun (x408 : Ojs.t) ->
                                           fun (x409 : Ojs.t) ->
                                             any_to_js
                                               (x403
                                                  ~value:(Ojs.float_of_js
                                                            x407)
                                                  ~index:(Ojs.float_of_js
                                                            x408)
                                                  ~array:(t_of_js x409))))|]);
                            (match x404 with
                             | Some x406 ->
                                 ignore
                                   (Ojs.call x405 "push" [|(any_to_js x406)|])
                             | None -> ());
                            x405))|])
    let (find :
      'tags this ->
        predicate:(value:float -> index:float -> obj:t -> bool) ->
          ?thisArg:any -> unit -> float option)
      =
      fun (x420 : 'tags this) ->
        fun ~predicate:(x413 : value:float -> index:float -> obj:t -> bool)
          ->
          fun ?thisArg:(x414 : any option) ->
            fun () ->
              Ojs.option_of_js Ojs.float_of_js
                (let x422 = this_to_js Obj.magic x420 in
                 Ojs.call (Ojs.get_prop_ascii x422 "find") "apply"
                   [|x422;((let x415 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x415 "push"
                                 [|(Ojs.fun_to_js 3
                                      (fun (x417 : Ojs.t) ->
                                         fun (x418 : Ojs.t) ->
                                           fun (x419 : Ojs.t) ->
                                             Ojs.bool_to_js
                                               (x413
                                                  ~value:(Ojs.float_of_js
                                                            x417)
                                                  ~index:(Ojs.float_of_js
                                                            x418)
                                                  ~obj:(t_of_js x419))))|]);
                            (match x414 with
                             | Some x416 ->
                                 ignore
                                   (Ojs.call x415 "push" [|(any_to_js x416)|])
                             | None -> ());
                            x415))|])
    let (findIndex :
      'tags this ->
        predicate:(value:float -> index:float -> obj:t -> bool) ->
          ?thisArg:any -> unit -> float)
      =
      fun (x431 : 'tags this) ->
        fun ~predicate:(x424 : value:float -> index:float -> obj:t -> bool)
          ->
          fun ?thisArg:(x425 : any option) ->
            fun () ->
              Ojs.float_of_js
                (let x433 = this_to_js Obj.magic x431 in
                 Ojs.call (Ojs.get_prop_ascii x433 "findIndex") "apply"
                   [|x433;((let x426 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x426 "push"
                                 [|(Ojs.fun_to_js 3
                                      (fun (x428 : Ojs.t) ->
                                         fun (x429 : Ojs.t) ->
                                           fun (x430 : Ojs.t) ->
                                             Ojs.bool_to_js
                                               (x424
                                                  ~value:(Ojs.float_of_js
                                                            x428)
                                                  ~index:(Ojs.float_of_js
                                                            x429)
                                                  ~obj:(t_of_js x430))))|]);
                            (match x425 with
                             | Some x427 ->
                                 ignore
                                   (Ojs.call x426 "push" [|(any_to_js x427)|])
                             | None -> ());
                            x426))|])
    let (forEach :
      'tags this ->
        callbackfn:(value:float -> index:float -> array:t -> unit) ->
          ?thisArg:any -> unit -> unit)
      =
      fun (x441 : 'tags this) ->
        fun
          ~callbackfn:(x434 : value:float -> index:float -> array:t -> unit)
          ->
          fun ?thisArg:(x435 : any option) ->
            fun () ->
              ignore
                (let x443 = this_to_js Obj.magic x441 in
                 Ojs.call (Ojs.get_prop_ascii x443 "forEach") "apply"
                   [|x443;((let x436 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x436 "push"
                                 [|(Ojs.fun_to_js 3
                                      (fun (x438 : Ojs.t) ->
                                         fun (x439 : Ojs.t) ->
                                           fun (x440 : Ojs.t) ->
                                             x434
                                               ~value:(Ojs.float_of_js x438)
                                               ~index:(Ojs.float_of_js x439)
                                               ~array:(t_of_js x440)))|]);
                            (match x435 with
                             | Some x437 ->
                                 ignore
                                   (Ojs.call x436 "push" [|(any_to_js x437)|])
                             | None -> ());
                            x436))|])
    let (indexOf :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> float)
      =
      fun (x448 : 'tags this) ->
        fun ~searchElement:(x444 : float) ->
          fun ?fromIndex:(x445 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x450 = this_to_js Obj.magic x448 in
                 Ojs.call (Ojs.get_prop_ascii x450 "indexOf") "apply"
                   [|x450;((let x446 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x446 "push"
                                 [|(Ojs.float_to_js x444)|]);
                            (match x445 with
                             | Some x447 ->
                                 ignore
                                   (Ojs.call x446 "push"
                                      [|(Ojs.float_to_js x447)|])
                             | None -> ());
                            x446))|])
    let (join : 'tags this -> ?separator:string -> unit -> string) =
      fun (x454 : 'tags this) ->
        fun ?separator:(x451 : string option) ->
          fun () ->
            Ojs.string_of_js
              (let x456 = this_to_js Obj.magic x454 in
               Ojs.call (Ojs.get_prop_ascii x456 "join") "apply"
                 [|x456;((let x452 =
                            Ojs.new_obj
                              (Ojs.get_prop_ascii Ojs.global "Array") 
                              [||] in
                          (match x451 with
                           | Some x453 ->
                               ignore
                                 (Ojs.call x452 "push"
                                    [|(Ojs.string_to_js x453)|])
                           | None -> ());
                          x452))|])
    let (lastIndexOf :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> float)
      =
      fun (x461 : 'tags this) ->
        fun ~searchElement:(x457 : float) ->
          fun ?fromIndex:(x458 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x463 = this_to_js Obj.magic x461 in
                 Ojs.call (Ojs.get_prop_ascii x463 "lastIndexOf") "apply"
                   [|x463;((let x459 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x459 "push"
                                 [|(Ojs.float_to_js x457)|]);
                            (match x458 with
                             | Some x460 ->
                                 ignore
                                   (Ojs.call x459 "push"
                                      [|(Ojs.float_to_js x460)|])
                             | None -> ());
                            x459))|])
    let (get_length : 'tags this -> float) =
      fun (x464 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x464) "length")
    let (map :
      'tags this ->
        callbackfn:(value:float -> index:float -> array:t -> float) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x473 : 'tags this) ->
        fun
          ~callbackfn:(x466 : value:float -> index:float -> array:t -> float)
          ->
          fun ?thisArg:(x467 : any option) ->
            fun () ->
              t_of_js
                (let x475 = this_to_js Obj.magic x473 in
                 Ojs.call (Ojs.get_prop_ascii x475 "map") "apply"
                   [|x475;((let x468 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x468 "push"
                                 [|(Ojs.fun_to_js 3
                                      (fun (x470 : Ojs.t) ->
                                         fun (x471 : Ojs.t) ->
                                           fun (x472 : Ojs.t) ->
                                             Ojs.float_to_js
                                               (x466
                                                  ~value:(Ojs.float_of_js
                                                            x470)
                                                  ~index:(Ojs.float_of_js
                                                            x471)
                                                  ~array:(t_of_js x472))))|]);
                            (match x467 with
                             | Some x469 ->
                                 ignore
                                   (Ojs.call x468 "push" [|(any_to_js x469)|])
                             | None -> ());
                            x468))|])
    let (reduce :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> float)
      =
      fun (x481 : 'tags this) ->
        fun
          ~callbackfn:(x476 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x481) "reduce"
               [|(Ojs.fun_to_js 4
                    (fun (x477 : Ojs.t) ->
                       fun (x478 : Ojs.t) ->
                         fun (x479 : Ojs.t) ->
                           fun (x480 : Ojs.t) ->
                             Ojs.float_to_js
                               (x476 ~previousValue:(Ojs.float_of_js x477)
                                  ~currentValue:(Ojs.float_of_js x478)
                                  ~currentIndex:(Ojs.float_of_js x479)
                                  ~array:(t_of_js x480))))|])
    let (reduce' :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> initialValue:float -> float)
      =
      fun (x489 : 'tags this) ->
        fun
          ~callbackfn:(x483 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          fun ~initialValue:(x488 : float) ->
            Ojs.float_of_js
              (Ojs.call (this_to_js Obj.magic x489) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x484 : Ojs.t) ->
                         fun (x485 : Ojs.t) ->
                           fun (x486 : Ojs.t) ->
                             fun (x487 : Ojs.t) ->
                               Ojs.float_to_js
                                 (x483 ~previousValue:(Ojs.float_of_js x484)
                                    ~currentValue:(Ojs.float_of_js x485)
                                    ~currentIndex:(Ojs.float_of_js x486)
                                    ~array:(t_of_js x487))));(Ojs.float_to_js
                                                                x488)|])
    let (reduce'' :
      'tags this ->
        callbackfn:(previousValue:'U ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x497 : 'tags this) ->
        fun
          ~callbackfn:(x491 :
                        previousValue:'U ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x496 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic x497) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x492 : Ojs.t) ->
                         fun (x493 : Ojs.t) ->
                           fun (x494 : Ojs.t) ->
                             fun (x495 : Ojs.t) ->
                               Obj.magic
                                 (x491 ~previousValue:(Obj.magic x492)
                                    ~currentValue:(Ojs.float_of_js x493)
                                    ~currentIndex:(Ojs.float_of_js x494)
                                    ~array:(t_of_js x495))));(Obj.magic x496)|])
    let (reduceRight :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> float)
      =
      fun (x504 : 'tags this) ->
        fun
          ~callbackfn:(x499 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x504) "reduceRight"
               [|(Ojs.fun_to_js 4
                    (fun (x500 : Ojs.t) ->
                       fun (x501 : Ojs.t) ->
                         fun (x502 : Ojs.t) ->
                           fun (x503 : Ojs.t) ->
                             Ojs.float_to_js
                               (x499 ~previousValue:(Ojs.float_of_js x500)
                                  ~currentValue:(Ojs.float_of_js x501)
                                  ~currentIndex:(Ojs.float_of_js x502)
                                  ~array:(t_of_js x503))))|])
    let (reduceRight' :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> initialValue:float -> float)
      =
      fun (x512 : 'tags this) ->
        fun
          ~callbackfn:(x506 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          fun ~initialValue:(x511 : float) ->
            Ojs.float_of_js
              (Ojs.call (this_to_js Obj.magic x512) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x507 : Ojs.t) ->
                         fun (x508 : Ojs.t) ->
                           fun (x509 : Ojs.t) ->
                             fun (x510 : Ojs.t) ->
                               Ojs.float_to_js
                                 (x506 ~previousValue:(Ojs.float_of_js x507)
                                    ~currentValue:(Ojs.float_of_js x508)
                                    ~currentIndex:(Ojs.float_of_js x509)
                                    ~array:(t_of_js x510))));(Ojs.float_to_js
                                                                x511)|])
    let (reduceRight'' :
      'tags this ->
        callbackfn:(previousValue:'U ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x520 : 'tags this) ->
        fun
          ~callbackfn:(x514 :
                        previousValue:'U ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x519 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic x520) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x515 : Ojs.t) ->
                         fun (x516 : Ojs.t) ->
                           fun (x517 : Ojs.t) ->
                             fun (x518 : Ojs.t) ->
                               Obj.magic
                                 (x514 ~previousValue:(Obj.magic x515)
                                    ~currentValue:(Ojs.float_of_js x516)
                                    ~currentIndex:(Ojs.float_of_js x517)
                                    ~array:(t_of_js x518))));(Obj.magic x519)|])
    let (reverse : 'tags this -> t) =
      fun (x522 : 'tags this) ->
        t_of_js (Ojs.call (this_to_js Obj.magic x522) "reverse" [||])
    let (set_ :
      'tags this -> array:float ArrayLike.t -> ?offset:float -> unit -> unit)
      =
      fun (x529 : 'tags this) ->
        fun ~array:(x524 : float ArrayLike.t) ->
          fun ?offset:(x525 : float option) ->
            fun () ->
              ignore
                (let x531 = this_to_js Obj.magic x529 in
                 Ojs.call (Ojs.get_prop_ascii x531 "set") "apply"
                   [|x531;((let x526 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x526 "push"
                                 [|(ArrayLike.t_to_js Ojs.float_to_js x524)|]);
                            (match x525 with
                             | Some x527 ->
                                 ignore
                                   (Ojs.call x526 "push"
                                      [|(Ojs.float_to_js x527)|])
                             | None -> ());
                            x526))|])
    let (slice : 'tags this -> ?start:float -> ?end_:float -> unit -> t) =
      fun (x537 : 'tags this) ->
        fun ?start:(x532 : float option) ->
          fun ?end_:(x533 : float option) ->
            fun () ->
              t_of_js
                (let x539 = this_to_js Obj.magic x537 in
                 Ojs.call (Ojs.get_prop_ascii x539 "slice") "apply"
                   [|x539;((let x534 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x532 with
                             | Some x536 ->
                                 ignore
                                   (Ojs.call x534 "push"
                                      [|(Ojs.float_to_js x536)|])
                             | None -> ());
                            (match x533 with
                             | Some x535 ->
                                 ignore
                                   (Ojs.call x534 "push"
                                      [|(Ojs.float_to_js x535)|])
                             | None -> ());
                            x534))|])
    let (some :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x547 : 'tags this) ->
        fun
          ~predicate:(x540 :
                       value:float -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x541 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x549 = this_to_js Obj.magic x547 in
                 Ojs.call (Ojs.get_prop_ascii x549 "some") "apply"
                   [|x549;((let x542 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x542 "push"
                                 [|(Ojs.fun_to_js 3
                                      (fun (x544 : Ojs.t) ->
                                         fun (x545 : Ojs.t) ->
                                           fun (x546 : Ojs.t) ->
                                             unknown_to_js
                                               (x540
                                                  ~value:(Ojs.float_of_js
                                                            x544)
                                                  ~index:(Ojs.float_of_js
                                                            x545)
                                                  ~array:(t_of_js x546))))|]);
                            (match x541 with
                             | Some x543 ->
                                 ignore
                                   (Ojs.call x542 "push" [|(any_to_js x543)|])
                             | None -> ());
                            x542))|])
    let (sort :
      'tags this ->
        ?compareFn:(a:float -> b:float -> float) -> unit -> 'tags this)
      =
      fun (x555 : 'tags this) ->
        fun ?compareFn:(x550 : (a:float -> b:float -> float) option) ->
          fun () ->
            this_of_js Obj.magic
              (let x557 = this_to_js Obj.magic x555 in
               Ojs.call (Ojs.get_prop_ascii x557 "sort") "apply"
                 [|x557;((let x551 =
                            Ojs.new_obj
                              (Ojs.get_prop_ascii Ojs.global "Array") 
                              [||] in
                          (match x550 with
                           | Some x552 ->
                               ignore
                                 (Ojs.call x551 "push"
                                    [|(Ojs.fun_to_js 2
                                         (fun (x553 : Ojs.t) ->
                                            fun (x554 : Ojs.t) ->
                                              Ojs.float_to_js
                                                (x552
                                                   ~a:(Ojs.float_of_js x553)
                                                   ~b:(Ojs.float_of_js x554))))|])
                           | None -> ());
                          x551))|])
    let (subarray : 'tags this -> ?begin_:float -> ?end_:float -> unit -> t)
      =
      fun (x564 : 'tags this) ->
        fun ?begin_:(x559 : float option) ->
          fun ?end_:(x560 : float option) ->
            fun () ->
              t_of_js
                (let x566 = this_to_js Obj.magic x564 in
                 Ojs.call (Ojs.get_prop_ascii x566 "subarray") "apply"
                   [|x566;((let x561 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x559 with
                             | Some x563 ->
                                 ignore
                                   (Ojs.call x561 "push"
                                      [|(Ojs.float_to_js x563)|])
                             | None -> ());
                            (match x560 with
                             | Some x562 ->
                                 ignore
                                   (Ojs.call x561 "push"
                                      [|(Ojs.float_to_js x562)|])
                             | None -> ());
                            x561))|])
    let (toLocaleString : 'tags this -> string) =
      fun (x567 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x567) "toLocaleString" [||])
    let (toString : 'tags this -> string) =
      fun (x569 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x569) "toString" [||])
    let (valueOf : 'tags this -> t) =
      fun (x571 : 'tags this) ->
        t_of_js (Ojs.call (this_to_js Obj.magic x571) "valueOf" [||])
    let (get : 'tags this -> float -> float) =
      fun (x573 : 'tags this) ->
        fun (x575 : float) ->
          Ojs.float_of_js
            (Ojs.get_prop (this_to_js Obj.magic x573) (Ojs.float_to_js x575))
    let (set : 'tags this -> float -> float -> unit) =
      fun (x576 : 'tags this) ->
        fun (x578 : float) ->
          fun (x579 : float) ->
            Ojs.set_prop (this_to_js Obj.magic x576) (Ojs.float_to_js x578)
              (Ojs.float_to_js x579)
    let (create : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Uint8ClampedArray")
             [||])
    let (create' : float Iterable.t -> t) =
      fun (x580 : float Iterable.t) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Uint8ClampedArray")
             [|(Iterable.t_to_js Ojs.float_to_js x580)|])
    let (from :
      arrayLike:float Iterable.t ->
        ?mapfn:(v:float -> k:float -> float) -> ?thisArg:any -> unit -> t)
      =
      fun ~arrayLike:(x582 : float Iterable.t) ->
        fun ?mapfn:(x583 : (v:float -> k:float -> float) option) ->
          fun ?thisArg:(x584 : any option) ->
            fun () ->
              t_of_js
                (let x591 = Ojs.get_prop_ascii Ojs.global "Uint8ClampedArray" in
                 Ojs.call (Ojs.get_prop_ascii x591 "from") "apply"
                   [|x591;((let x585 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x585 "push"
                                 [|(Iterable.t_to_js Ojs.float_to_js x582)|]);
                            (match x583 with
                             | Some x587 ->
                                 ignore
                                   (Ojs.call x585 "push"
                                      [|(Ojs.fun_to_js 2
                                           (fun (x588 : Ojs.t) ->
                                              fun (x589 : Ojs.t) ->
                                                Ojs.float_to_js
                                                  (x587
                                                     ~v:(Ojs.float_of_js x588)
                                                     ~k:(Ojs.float_of_js x589))))|])
                             | None -> ());
                            (match x584 with
                             | Some x586 ->
                                 ignore
                                   (Ojs.call x585 "push" [|(any_to_js x586)|])
                             | None -> ());
                            x585))|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "Uint8ClampedArray") "prototype")
    let (create'' : float -> t) =
      fun (x592 : float) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Uint8ClampedArray")
             [|(Ojs.float_to_js x592)|])
    let (create''' :
      [ `U1 of float ArrayLike.t  | `U2 of ArrayBufferLike.t ] -> t) =
      fun (x593 : [ `U1 of float ArrayLike.t  | `U2 of ArrayBufferLike.t ])
        ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Uint8ClampedArray")
             [|((match x593 with
                 | `U1 x594 -> ArrayLike.t_to_js Ojs.float_to_js x594
                 | `U2 x596 -> ArrayBufferLike.t_to_js x596))|])
    let (create'''' :
      buffer:ArrayBufferLike.t ->
        ?byteOffset:float -> ?length:float -> unit -> t)
      =
      fun ~buffer:(x597 : ArrayBufferLike.t) ->
        fun ?byteOffset:(x598 : float option) ->
          fun ?length:(x599 : float option) ->
            fun () ->
              t_of_js
                (Ojs.new_obj_arr
                   (Ojs.get_prop_ascii Ojs.global "Uint8ClampedArray")
                   (let x600 =
                      Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                        [||] in
                    ignore
                      (Ojs.call x600 "push"
                         [|(ArrayBufferLike.t_to_js x597)|]);
                    (match x598 with
                     | Some x602 ->
                         ignore
                           (Ojs.call x600 "push" [|(Ojs.float_to_js x602)|])
                     | None -> ());
                    (match x599 with
                     | Some x601 ->
                         ignore
                           (Ojs.call x600 "push" [|(Ojs.float_to_js x601)|])
                     | None -> ());
                    x600))
    let (bytes_per_element : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "Uint8ClampedArray")
             "BYTES_PER_ELEMENT")
    let (of_ : float list -> t) =
      fun (x603 : float list) ->
        t_of_js
          (let x606 = Ojs.get_prop_ascii Ojs.global "Uint8ClampedArray" in
           Ojs.call (Ojs.get_prop_ascii x606 "of") "apply"
             [|x606;((let x604 =
                        Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                          [||] in
                      List.iter
                        (fun (x605 : float) ->
                           ignore
                             (Ojs.call x604 "push" [|(Ojs.float_to_js x605)|]))
                        x603;
                      x604))|])
    let (from' : float ArrayLike.t -> t) =
      fun (x607 : float ArrayLike.t) ->
        t_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Uint8ClampedArray")
             "from" [|(ArrayLike.t_to_js Ojs.float_to_js x607)|])
    let (from'' :
      arrayLike:'T ArrayLike.t ->
        mapfn:(v:'T -> k:float -> float) -> ?thisArg:any -> unit -> t)
      =
      fun ~arrayLike:(x609 : 'T ArrayLike.t) ->
        fun ~mapfn:(x610 : v:'T -> k:float -> float) ->
          fun ?thisArg:(x611 : any option) ->
            fun () ->
              t_of_js
                (let x617 = Ojs.get_prop_ascii Ojs.global "Uint8ClampedArray" in
                 Ojs.call (Ojs.get_prop_ascii x617 "from") "apply"
                   [|x617;((let x612 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x612 "push"
                                 [|(ArrayLike.t_to_js Obj.magic x609)|]);
                            ignore
                              (Ojs.call x612 "push"
                                 [|(Ojs.fun_to_js 2
                                      (fun (x614 : Ojs.t) ->
                                         fun (x615 : Ojs.t) ->
                                           Ojs.float_to_js
                                             (x610 ~v:(Obj.magic x614)
                                                ~k:(Ojs.float_of_js x615))))|]);
                            (match x611 with
                             | Some x613 ->
                                 ignore
                                   (Ojs.call x612 "push" [|(any_to_js x613)|])
                             | None -> ());
                            x612))|])
    let cast_from = Obj.magic
  end
module rec
  Error:sig
          type t = [ `Error ] intf
          type t_0 = t
          [@@@js.stop ]
          type tags = [ `Error ]
          type tags_0 = tags
          [@@@js.start ]
          [@@@js.implem type tags = [ `Error ]
            type tags_0 = tags]
          type 'tags this = 'tags intf constraint 'tags = [> `Error ]
          val t_to_js : t -> Ojs.t
          val t_of_js : Ojs.t -> t
          val t_0_to_js : t_0 -> Ojs.t
          val t_0_of_js : Ojs.t -> t_0
          val get_cause : 'tags this -> t option
          val set_cause : 'tags this -> t -> unit
          val get_name : 'tags this -> string
          val set_name : 'tags this -> string -> unit
          val get_message : 'tags this -> string
          val set_message : 'tags this -> string -> unit
          val get_stack : 'tags this -> string option
          val set_stack : 'tags this -> string -> unit
          val create :
            ?message:string -> ?options:ErrorOptions.t -> unit -> t
          val invoke :
            ?message:string -> ?options:ErrorOptions.t -> unit -> t
          val create' : ?message:string -> unit -> t
          val invoke' : ?message:string -> unit -> t
          val prototype : unit -> t
          val create'' :
            ?cause:t ->
              name:string -> message:string -> ?stack:string -> unit -> t
          val cast_from : 'tags this -> t
        end =
  struct
    type t = [ `Error ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x619 : Ojs.t) -> t_of_js x619
    and t_0_to_js : t_0 -> Ojs.t = fun (x618 : t) -> t_to_js x618
    type tags = [ `Error ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `Error ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x622 : Ojs.t) -> intf_of_js __tags_of_js x622
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x620 : __tags intf) -> intf_to_js __tags_to_js x620
    let (get_cause : 'tags this -> t option) =
      fun (x624 : 'tags this) ->
        Ojs.option_of_js t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x624) "cause")
    let (set_cause : 'tags this -> t -> unit) =
      fun (x627 : 'tags this) ->
        fun (x628 : t) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x627) "cause"
            (t_to_js x628)
    let (get_name : 'tags this -> string) =
      fun (x630 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x630) "name")
    let (set_name : 'tags this -> string -> unit) =
      fun (x632 : 'tags this) ->
        fun (x633 : string) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x632) "name"
            (Ojs.string_to_js x633)
    let (get_message : 'tags this -> string) =
      fun (x635 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x635) "message")
    let (set_message : 'tags this -> string -> unit) =
      fun (x637 : 'tags this) ->
        fun (x638 : string) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x637) "message"
            (Ojs.string_to_js x638)
    let (get_stack : 'tags this -> string option) =
      fun (x640 : 'tags this) ->
        Ojs.option_of_js Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x640) "stack")
    let (set_stack : 'tags this -> string -> unit) =
      fun (x643 : 'tags this) ->
        fun (x644 : string) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x643) "stack"
            (Ojs.string_to_js x644)
    let (create : ?message:string -> ?options:ErrorOptions.t -> unit -> t) =
      fun ?message:(x646 : string option) ->
        fun ?options:(x647 : ErrorOptions.t option) ->
          fun () ->
            t_of_js
              (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "Error")
                 (let x648 =
                    Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                  (match x646 with
                   | Some x650 ->
                       ignore
                         (Ojs.call x648 "push" [|(Ojs.string_to_js x650)|])
                   | None -> ());
                  (match x647 with
                   | Some x649 ->
                       ignore
                         (Ojs.call x648 "push"
                            [|(ErrorOptions.t_to_js x649)|])
                   | None -> ());
                  x648))
    let (invoke : ?message:string -> ?options:ErrorOptions.t -> unit -> t) =
      fun ?message:(x651 : string option) ->
        fun ?options:(x652 : ErrorOptions.t option) ->
          fun () ->
            t_of_js
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "Error") "apply"
                 [|Ojs.null;((let x653 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              (match x651 with
                               | Some x655 ->
                                   ignore
                                     (Ojs.call x653 "push"
                                        [|(Ojs.string_to_js x655)|])
                               | None -> ());
                              (match x652 with
                               | Some x654 ->
                                   ignore
                                     (Ojs.call x653 "push"
                                        [|(ErrorOptions.t_to_js x654)|])
                               | None -> ());
                              x653))|])
    let (create' : ?message:string -> unit -> t) =
      fun ?message:(x656 : string option) ->
        fun () ->
          t_of_js
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "Error")
               (let x657 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x656 with
                 | Some x658 ->
                     ignore
                       (Ojs.call x657 "push" [|(Ojs.string_to_js x658)|])
                 | None -> ());
                x657))
    let (invoke' : ?message:string -> unit -> t) =
      fun ?message:(x659 : string option) ->
        fun () ->
          t_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "Error") "apply"
               [|Ojs.null;((let x660 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x659 with
                             | Some x661 ->
                                 ignore
                                   (Ojs.call x660 "push"
                                      [|(Ojs.string_to_js x661)|])
                             | None -> ());
                            x660))|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Error")
             "prototype")
    let (create'' :
      ?cause:t -> name:string -> message:string -> ?stack:string -> unit -> t)
      =
      fun ?cause:(x662 : t option) ->
        fun ~name:(x663 : string) ->
          fun ~message:(x664 : string) ->
            fun ?stack:(x665 : string option) ->
              fun () ->
                let x666 = Ojs.empty_obj () in
                (match x662 with
                 | Some x668 ->
                     Ojs.set_prop_ascii x666 "cause" (t_to_js x668)
                 | None -> ());
                Ojs.set_prop_ascii x666 "name" (Ojs.string_to_js x663);
                Ojs.set_prop_ascii x666 "message" (Ojs.string_to_js x664);
                (match x665 with
                 | Some x667 ->
                     Ojs.set_prop_ascii x666 "stack" (Ojs.string_to_js x667)
                 | None -> ());
                t_of_js x666
    let cast_from = Obj.magic
  end
 and
  ErrorOptions:sig
                 type t = [ `ErrorOptions ] intf
                 type t_0 = t
                 [@@@js.stop ]
                 type tags = [ `ErrorOptions ]
                 type tags_0 = tags
                 [@@@js.start ]
                 [@@@js.implem
                   type tags = [ `ErrorOptions ]
                   type tags_0 = tags]
                 type 'tags this =
                   'tags intf constraint 'tags = [> `ErrorOptions ]
                 val t_to_js : t -> Ojs.t
                 val t_of_js : Ojs.t -> t
                 val t_0_to_js : t_0 -> Ojs.t
                 val t_0_of_js : Ojs.t -> t_0
                 val get_cause : 'tags this -> Error.t option
                 val set_cause : 'tags this -> Error.t -> unit
                 val create : ?cause:Error.t -> unit -> t
                 val cast_from : 'tags this -> t
               end =
  struct
    type t = [ `ErrorOptions ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x670 : Ojs.t) -> t_of_js x670
    and t_0_to_js : t_0 -> Ojs.t = fun (x669 : t) -> t_to_js x669
    type tags = [ `ErrorOptions ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `ErrorOptions ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x673 : Ojs.t) -> intf_of_js __tags_of_js x673
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x671 : __tags intf) -> intf_to_js __tags_to_js x671
    let (get_cause : 'tags this -> Error.t option) =
      fun (x675 : 'tags this) ->
        Ojs.option_of_js Error.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x675) "cause")
    let (set_cause : 'tags this -> Error.t -> unit) =
      fun (x678 : 'tags this) ->
        fun (x679 : Error.t) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x678) "cause"
            (Error.t_to_js x679)
    let (create : ?cause:Error.t -> unit -> t) =
      fun ?cause:(x681 : Error.t option) ->
        fun () ->
          let x682 = Ojs.empty_obj () in
          (match x681 with
           | Some x683 ->
               Ojs.set_prop_ascii x682 "cause" (Error.t_to_js x683)
           | None -> ());
          t_of_js x682
    let cast_from = Obj.magic
  end
module URIError =
  struct
    type t = [ `Error  | `URIError ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x685 : Ojs.t) -> t_of_js x685
    and t_0_to_js : t_0 -> Ojs.t = fun (x684 : t) -> t_to_js x684
    type tags = [ `Error  | `URIError ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `URIError ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x688 : Ojs.t) -> intf_of_js __tags_of_js x688
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x686 : __tags intf) -> intf_to_js __tags_to_js x686
    let (create : ?message:string -> ?options:ErrorOptions.t -> unit -> t) =
      fun ?message:(x690 : string option) ->
        fun ?options:(x691 : ErrorOptions.t option) ->
          fun () ->
            t_of_js
              (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "URIError")
                 (let x692 =
                    Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                  (match x690 with
                   | Some x694 ->
                       ignore
                         (Ojs.call x692 "push" [|(Ojs.string_to_js x694)|])
                   | None -> ());
                  (match x691 with
                   | Some x693 ->
                       ignore
                         (Ojs.call x692 "push"
                            [|(ErrorOptions.t_to_js x693)|])
                   | None -> ());
                  x692))
    let (invoke : ?message:string -> ?options:ErrorOptions.t -> unit -> t) =
      fun ?message:(x695 : string option) ->
        fun ?options:(x696 : ErrorOptions.t option) ->
          fun () ->
            t_of_js
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "URIError") "apply"
                 [|Ojs.null;((let x697 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              (match x695 with
                               | Some x699 ->
                                   ignore
                                     (Ojs.call x697 "push"
                                        [|(Ojs.string_to_js x699)|])
                               | None -> ());
                              (match x696 with
                               | Some x698 ->
                                   ignore
                                     (Ojs.call x697 "push"
                                        [|(ErrorOptions.t_to_js x698)|])
                               | None -> ());
                              x697))|])
    let (create' : ?message:string -> unit -> t) =
      fun ?message:(x700 : string option) ->
        fun () ->
          t_of_js
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "URIError")
               (let x701 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x700 with
                 | Some x702 ->
                     ignore
                       (Ojs.call x701 "push" [|(Ojs.string_to_js x702)|])
                 | None -> ());
                x701))
    let (invoke' : ?message:string -> unit -> t) =
      fun ?message:(x703 : string option) ->
        fun () ->
          t_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "URIError") "apply"
               [|Ojs.null;((let x704 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x703 with
                             | Some x705 ->
                                 ignore
                                   (Ojs.call x704 "push"
                                      [|(Ojs.string_to_js x705)|])
                             | None -> ());
                            x704))|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "URIError")
             "prototype")
    let cast_from = Obj.magic
  end
module TypeError =
  struct
    type t = [ `Error  | `TypeError ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x707 : Ojs.t) -> t_of_js x707
    and t_0_to_js : t_0 -> Ojs.t = fun (x706 : t) -> t_to_js x706
    type tags = [ `Error  | `TypeError ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `TypeError ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x710 : Ojs.t) -> intf_of_js __tags_of_js x710
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x708 : __tags intf) -> intf_to_js __tags_to_js x708
    let (create : ?message:string -> ?options:ErrorOptions.t -> unit -> t) =
      fun ?message:(x712 : string option) ->
        fun ?options:(x713 : ErrorOptions.t option) ->
          fun () ->
            t_of_js
              (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "TypeError")
                 (let x714 =
                    Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                  (match x712 with
                   | Some x716 ->
                       ignore
                         (Ojs.call x714 "push" [|(Ojs.string_to_js x716)|])
                   | None -> ());
                  (match x713 with
                   | Some x715 ->
                       ignore
                         (Ojs.call x714 "push"
                            [|(ErrorOptions.t_to_js x715)|])
                   | None -> ());
                  x714))
    let (invoke : ?message:string -> ?options:ErrorOptions.t -> unit -> t) =
      fun ?message:(x717 : string option) ->
        fun ?options:(x718 : ErrorOptions.t option) ->
          fun () ->
            t_of_js
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "TypeError") "apply"
                 [|Ojs.null;((let x719 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              (match x717 with
                               | Some x721 ->
                                   ignore
                                     (Ojs.call x719 "push"
                                        [|(Ojs.string_to_js x721)|])
                               | None -> ());
                              (match x718 with
                               | Some x720 ->
                                   ignore
                                     (Ojs.call x719 "push"
                                        [|(ErrorOptions.t_to_js x720)|])
                               | None -> ());
                              x719))|])
    let (create' : ?message:string -> unit -> t) =
      fun ?message:(x722 : string option) ->
        fun () ->
          t_of_js
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "TypeError")
               (let x723 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x722 with
                 | Some x724 ->
                     ignore
                       (Ojs.call x723 "push" [|(Ojs.string_to_js x724)|])
                 | None -> ());
                x723))
    let (invoke' : ?message:string -> unit -> t) =
      fun ?message:(x725 : string option) ->
        fun () ->
          t_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "TypeError") "apply"
               [|Ojs.null;((let x726 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x725 with
                             | Some x727 ->
                                 ignore
                                   (Ojs.call x726 "push"
                                      [|(Ojs.string_to_js x727)|])
                             | None -> ());
                            x726))|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "TypeError")
             "prototype")
    let cast_from = Obj.magic
  end
module FlatArray =
  struct
    type ('Arr, 'Depth) t = any
    let rec t_of_js :
      'Arr 'Depth .
        (Ojs.t -> 'Arr) -> (Ojs.t -> 'Depth) -> Ojs.t -> ('Arr, 'Depth) t
      =
      fun (type __Arr) ->
        fun (type __Depth) ->
          fun (__Arr_of_js : Ojs.t -> __Arr) ->
            fun (__Depth_of_js : Ojs.t -> __Depth) ->
              fun (x729 : Ojs.t) -> any_of_js x729
    and t_to_js :
      'Arr 'Depth .
        ('Arr -> Ojs.t) -> ('Depth -> Ojs.t) -> ('Arr, 'Depth) t -> Ojs.t
      =
      fun (type __Arr) ->
        fun (type __Depth) ->
          fun (__Arr_to_js : __Arr -> Ojs.t) ->
            fun (__Depth_to_js : __Depth -> Ojs.t) ->
              fun (x728 : any) -> any_to_js x728
    type ('Arr, 'Depth) t_2 = ('Arr, 'Depth) t
    let rec t_2_of_js :
      'Arr 'Depth .
        (Ojs.t -> 'Arr) -> (Ojs.t -> 'Depth) -> Ojs.t -> ('Arr, 'Depth) t_2
      =
      fun (type __Arr) ->
        fun (type __Depth) ->
          fun (__Arr_of_js : Ojs.t -> __Arr) ->
            fun (__Depth_of_js : Ojs.t -> __Depth) ->
              fun (x733 : Ojs.t) -> t_of_js __Arr_of_js __Depth_of_js x733
    and t_2_to_js :
      'Arr 'Depth .
        ('Arr -> Ojs.t) -> ('Depth -> Ojs.t) -> ('Arr, 'Depth) t_2 -> Ojs.t
      =
      fun (type __Arr) ->
        fun (type __Depth) ->
          fun (__Arr_to_js : __Arr -> Ojs.t) ->
            fun (__Depth_to_js : __Depth -> Ojs.t) ->
              fun (x730 : (__Arr, __Depth) t) ->
                t_to_js __Arr_to_js __Depth_to_js x730
  end
module ConcatArray =
  struct
    type 'T t = [ `ConcatArray of 'T  | 'T ArrayLike.tags_1] intf
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun _T -> Obj.magic
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun _T -> Obj.magic
    type 'T t_1 = 'T t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 =
      fun (type __T) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x738 : Ojs.t) -> t_of_js __T_of_js x738
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t =
      fun (type __T) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x736 : __T t) -> t_to_js __T_to_js x736
    type 'T tags = [ `ConcatArray of 'T  | 'T ArrayLike.tags_1]
    type 'T tags_1 = 'T tags
    type ('tags, 'T) this =
      'tags intf constraint 'tags = [> `ConcatArray of 'T ]
    let rec this_of_js :
      'tags 'T .
        (Ojs.t -> 'tags) -> (Ojs.t -> 'T) -> Ojs.t -> ('tags, 'T) this
      =
      fun (type __tags) ->
        fun (type __T) ->
          fun (__tags_of_js : Ojs.t -> __tags) ->
            fun (__T_of_js : Ojs.t -> __T) ->
              fun (x742 : Ojs.t) -> intf_of_js __tags_of_js x742
    and this_to_js :
      'tags 'T .
        ('tags -> Ojs.t) -> ('T -> Ojs.t) -> ('tags, 'T) this -> Ojs.t
      =
      fun (type __tags) ->
        fun (type __T) ->
          fun (__tags_to_js : __tags -> Ojs.t) ->
            fun (__T_to_js : __T -> Ojs.t) ->
              fun (x740 : __tags intf) -> intf_to_js __tags_to_js x740
    let (get_length : ('tags, 'T) this -> float) =
      fun (x744 : ('tags, 'T) this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic Obj.magic x744) "length")
    let (get : ('tags, 'T) this -> float -> 'T) =
      fun (x747 : ('tags, 'T) this) ->
        fun (x750 : float) ->
          Obj.magic
            (Ojs.get_prop (this_to_js Obj.magic Obj.magic x747)
               (Ojs.float_to_js x750))
    let (join : ('tags, 'T) this -> ?separator:string -> unit -> string) =
      fun (x754 : ('tags, 'T) this) ->
        fun ?separator:(x751 : string option) ->
          fun () ->
            Ojs.string_of_js
              (let x757 = this_to_js Obj.magic Obj.magic x754 in
               Ojs.call (Ojs.get_prop_ascii x757 "join") "apply"
                 [|x757;((let x752 =
                            Ojs.new_obj
                              (Ojs.get_prop_ascii Ojs.global "Array") 
                              [||] in
                          (match x751 with
                           | Some x753 ->
                               ignore
                                 (Ojs.call x752 "push"
                                    [|(Ojs.string_to_js x753)|])
                           | None -> ());
                          x752))|])
    let (slice :
      ('tags, 'T) this -> ?start:float -> ?end_:float -> unit -> 'T list) =
      fun (x763 : ('tags, 'T) this) ->
        fun ?start:(x758 : float option) ->
          fun ?end_:(x759 : float option) ->
            fun () ->
              Ojs.list_of_js Obj.magic
                (let x766 = this_to_js Obj.magic Obj.magic x763 in
                 Ojs.call (Ojs.get_prop_ascii x766 "slice") "apply"
                   [|x766;((let x760 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x758 with
                             | Some x762 ->
                                 ignore
                                   (Ojs.call x760 "push"
                                      [|(Ojs.float_to_js x762)|])
                             | None -> ());
                            (match x759 with
                             | Some x761 ->
                                 ignore
                                   (Ojs.call x760 "push"
                                      [|(Ojs.float_to_js x761)|])
                             | None -> ());
                            x760))|])
    let cast_from = Obj.magic
  end
module ReadonlyArray =
  struct
    type 'T t =
      [ `ReadonlyArray of 'T  | 'T ArrayLike.tags_1
      | 'T IterableIterator.tags_1] intf
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun _T -> Obj.magic
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun _T -> Obj.magic
    type 'T t_1 = 'T t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 =
      fun (type __T) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x770 : Ojs.t) -> t_of_js __T_of_js x770
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t =
      fun (type __T) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x768 : __T t) -> t_to_js __T_to_js x768
    type 'T tags =
      [ `ReadonlyArray of 'T  | 'T ArrayLike.tags_1
      | 'T IterableIterator.tags_1]
    type 'T tags_1 = 'T tags
    type ('tags, 'T) this =
      'tags intf constraint 'tags = [> `ReadonlyArray of 'T ]
    let rec this_of_js :
      'tags 'T .
        (Ojs.t -> 'tags) -> (Ojs.t -> 'T) -> Ojs.t -> ('tags, 'T) this
      =
      fun (type __tags) ->
        fun (type __T) ->
          fun (__tags_of_js : Ojs.t -> __tags) ->
            fun (__T_of_js : Ojs.t -> __T) ->
              fun (x774 : Ojs.t) -> intf_of_js __tags_of_js x774
    and this_to_js :
      'tags 'T .
        ('tags -> Ojs.t) -> ('T -> Ojs.t) -> ('tags, 'T) this -> Ojs.t
      =
      fun (type __tags) ->
        fun (type __T) ->
          fun (__tags_to_js : __tags -> Ojs.t) ->
            fun (__T_to_js : __T -> Ojs.t) ->
              fun (x772 : __tags intf) -> intf_to_js __tags_to_js x772
    let (at : ('tags, 'T) this -> index:float -> 'T option) =
      fun (x777 : ('tags, 'T) this) ->
        fun ~index:(x776 : float) ->
          Ojs.option_of_js Obj.magic
            (Ojs.call (this_to_js Obj.magic Obj.magic x777) "at"
               [|(Ojs.float_to_js x776)|])
    let (flatMap :
      ('tags, 'T) this ->
        callback:(this:'This ->
                    value:'T ->
                      index:float ->
                        array:'T list -> [ `U1 of 'U  | `U2 of 'U t ])
          -> ?thisArg:'This -> unit -> 'U list)
      =
      fun (x793 : ('tags, 'T) this) ->
        fun
          ~callback:(x781 :
                      this:'This ->
                        value:'T ->
                          index:float ->
                            array:'T list -> [ `U1 of 'U  | `U2 of 'U t ])
          ->
          fun ?thisArg:(x782 : 'This option) ->
            fun () ->
              Ojs.list_of_js Obj.magic
                (let x796 = this_to_js Obj.magic Obj.magic x793 in
                 Ojs.call (Ojs.get_prop_ascii x796 "flatMap") "apply"
                   [|x796;((let x783 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x783 "push"
                                 [|(Ojs.fun_to_js 4
                                      (fun (x785 : Ojs.t) ->
                                         fun (x786 : Ojs.t) ->
                                           fun (x787 : Ojs.t) ->
                                             fun (x788 : Ojs.t) ->
                                               match x781
                                                       ~this:(Obj.magic x785)
                                                       ~value:(Obj.magic x786)
                                                       ~index:(Ojs.float_of_js
                                                                 x787)
                                                       ~array:(Ojs.list_of_js
                                                                 Obj.magic
                                                                 x788)
                                               with
                                               | `U1 x790 -> Obj.magic x790
                                               | `U2 x791 ->
                                                   t_to_js Obj.magic x791))|]);
                            (match x782 with
                             | Some x784 ->
                                 ignore
                                   (Ojs.call x783 "push" [|(Obj.magic x784)|])
                             | None -> ());
                            x783))|])
    let (flat :
      ('tags, 'T) this ->
        this:'A -> ?depth:'D -> unit -> ('A, 'D) FlatArray.t list)
      =
      fun (x802 : ('tags, 'T) this) ->
        fun ~this:(x798 : 'A) ->
          fun ?depth:(x799 : 'D option) ->
            fun () ->
              Ojs.list_of_js
                (fun (x806 : Ojs.t) ->
                   FlatArray.t_of_js Obj.magic Obj.magic x806)
                (let x805 = this_to_js Obj.magic Obj.magic x802 in
                 Ojs.call (Ojs.get_prop_ascii x805 "flat") "apply"
                   [|x805;((let x800 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x800 "push" [|(Obj.magic x798)|]);
                            (match x799 with
                             | Some x801 ->
                                 ignore
                                   (Ojs.call x800 "push" [|(Obj.magic x801)|])
                             | None -> ());
                            x800))|])
    let (includes :
      ('tags, 'T) this ->
        searchElement:'T -> ?fromIndex:float -> unit -> bool)
      =
      fun (x813 : ('tags, 'T) this) ->
        fun ~searchElement:(x809 : 'T) ->
          fun ?fromIndex:(x810 : float option) ->
            fun () ->
              Ojs.bool_of_js
                (let x816 = this_to_js Obj.magic Obj.magic x813 in
                 Ojs.call (Ojs.get_prop_ascii x816 "includes") "apply"
                   [|x816;((let x811 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x811 "push" [|(Obj.magic x809)|]);
                            (match x810 with
                             | Some x812 ->
                                 ignore
                                   (Ojs.call x811 "push"
                                      [|(Ojs.float_to_js x812)|])
                             | None -> ());
                            x811))|])
    let (entries : ('tags, 'T) this -> (float * 'T) IterableIterator.t) =
      fun (x817 : ('tags, 'T) this) ->
        IterableIterator.t_of_js
          (fun (x820 : Ojs.t) ->
             let x821 = x820 in
             ((Ojs.float_of_js (Ojs.array_get x821 0)),
               (Obj.magic (Ojs.array_get x821 1))))
          (Ojs.call (this_to_js Obj.magic Obj.magic x817) "entries" [||])
    let (keys : ('tags, 'T) this -> float IterableIterator.t) =
      fun (x822 : ('tags, 'T) this) ->
        IterableIterator.t_of_js Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic Obj.magic x822) "keys" [||])
    let (values : ('tags, 'T) this -> 'T IterableIterator.t) =
      fun (x826 : ('tags, 'T) this) ->
        IterableIterator.t_of_js Obj.magic
          (Ojs.call (this_to_js Obj.magic Obj.magic x826) "values" [||])
    let (find :
      ('tags, 'T) this ->
        predicate:(this:unit ->
                     value:'T -> index:float -> obj:'T list -> bool)
          -> ?thisArg:any -> unit -> 'S option)
      =
      fun (x839 : ('tags, 'T) this) ->
        fun
          ~predicate:(x830 :
                       this:unit ->
                         value:'T -> index:float -> obj:'T list -> bool)
          ->
          fun ?thisArg:(x831 : any option) ->
            fun () ->
              Ojs.option_of_js Obj.magic
                (let x842 = this_to_js Obj.magic Obj.magic x839 in
                 Ojs.call (Ojs.get_prop_ascii x842 "find") "apply"
                   [|x842;((let x832 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x832 "push"
                                 [|(Ojs.fun_to_js 4
                                      (fun (x834 : Ojs.t) ->
                                         fun (x835 : Ojs.t) ->
                                           fun (x836 : Ojs.t) ->
                                             fun (x837 : Ojs.t) ->
                                               Ojs.bool_to_js
                                                 (x830
                                                    ~this:(Ojs.unit_of_js
                                                             x834)
                                                    ~value:(Obj.magic x835)
                                                    ~index:(Ojs.float_of_js
                                                              x836)
                                                    ~obj:(Ojs.list_of_js
                                                            Obj.magic x837))))|]);
                            (match x831 with
                             | Some x833 ->
                                 ignore
                                   (Ojs.call x832 "push" [|(any_to_js x833)|])
                             | None -> ());
                            x832))|])
    let (find' :
      ('tags, 'T) this ->
        predicate:(value:'T -> index:float -> obj:'T list -> unknown) ->
          ?thisArg:any -> unit -> 'T option)
      =
      fun (x852 : ('tags, 'T) this) ->
        fun
          ~predicate:(x844 :
                       value:'T -> index:float -> obj:'T list -> unknown)
          ->
          fun ?thisArg:(x845 : any option) ->
            fun () ->
              Ojs.option_of_js Obj.magic
                (let x855 = this_to_js Obj.magic Obj.magic x852 in
                 Ojs.call (Ojs.get_prop_ascii x855 "find") "apply"
                   [|x855;((let x846 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x846 "push"
                                 [|(Ojs.fun_to_js 3
                                      (fun (x848 : Ojs.t) ->
                                         fun (x849 : Ojs.t) ->
                                           fun (x850 : Ojs.t) ->
                                             unknown_to_js
                                               (x844 ~value:(Obj.magic x848)
                                                  ~index:(Ojs.float_of_js
                                                            x849)
                                                  ~obj:(Ojs.list_of_js
                                                          Obj.magic x850))))|]);
                            (match x845 with
                             | Some x847 ->
                                 ignore
                                   (Ojs.call x846 "push" [|(any_to_js x847)|])
                             | None -> ());
                            x846))|])
    let (findIndex :
      ('tags, 'T) this ->
        predicate:(value:'T -> index:float -> obj:'T list -> unknown) ->
          ?thisArg:any -> unit -> float)
      =
      fun (x865 : ('tags, 'T) this) ->
        fun
          ~predicate:(x857 :
                       value:'T -> index:float -> obj:'T list -> unknown)
          ->
          fun ?thisArg:(x858 : any option) ->
            fun () ->
              Ojs.float_of_js
                (let x868 = this_to_js Obj.magic Obj.magic x865 in
                 Ojs.call (Ojs.get_prop_ascii x868 "findIndex") "apply"
                   [|x868;((let x859 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x859 "push"
                                 [|(Ojs.fun_to_js 3
                                      (fun (x861 : Ojs.t) ->
                                         fun (x862 : Ojs.t) ->
                                           fun (x863 : Ojs.t) ->
                                             unknown_to_js
                                               (x857 ~value:(Obj.magic x861)
                                                  ~index:(Ojs.float_of_js
                                                            x862)
                                                  ~obj:(Ojs.list_of_js
                                                          Obj.magic x863))))|]);
                            (match x858 with
                             | Some x860 ->
                                 ignore
                                   (Ojs.call x859 "push" [|(any_to_js x860)|])
                             | None -> ());
                            x859))|])
    let (get_length : ('tags, 'T) this -> float) =
      fun (x869 : ('tags, 'T) this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic Obj.magic x869) "length")
    let (toString : ('tags, 'T) this -> string) =
      fun (x872 : ('tags, 'T) this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic Obj.magic x872) "toString" [||])
    let (toLocaleString : ('tags, 'T) this -> string) =
      fun (x875 : ('tags, 'T) this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic Obj.magic x875) "toLocaleString"
             [||])
    let (concat : ('tags, 'T) this -> items:'T ConcatArray.t list -> 'T list)
      =
      fun (x882 : ('tags, 'T) this) ->
        fun ~items:(x878 : 'T ConcatArray.t list) ->
          Ojs.list_of_js Obj.magic
            (let x885 = this_to_js Obj.magic Obj.magic x882 in
             Ojs.call (Ojs.get_prop_ascii x885 "concat") "apply"
               [|x885;((let x879 =
                          Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                            [||] in
                        List.iter
                          (fun (x880 : 'T ConcatArray.t) ->
                             ignore
                               (Ojs.call x879 "push"
                                  [|(ConcatArray.t_to_js Obj.magic x880)|]))
                          x878;
                        x879))|])
    let (concat' :
      ('tags, 'T) this ->
        items:[ `U1 of 'T  | `U2 of 'T ConcatArray.t ] list -> 'T list)
      =
      fun (x893 : ('tags, 'T) this) ->
        fun ~items:(x887 : [ `U1 of 'T  | `U2 of 'T ConcatArray.t ] list) ->
          Ojs.list_of_js Obj.magic
            (let x896 = this_to_js Obj.magic Obj.magic x893 in
             Ojs.call (Ojs.get_prop_ascii x896 "concat") "apply"
               [|x896;((let x888 =
                          Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                            [||] in
                        List.iter
                          (fun
                             (x889 :
                               [ `U1 of 'T  | `U2 of 'T ConcatArray.t ])
                             ->
                             ignore
                               (Ojs.call x888 "push"
                                  [|((match x889 with
                                      | `U1 x890 -> Obj.magic x890
                                      | `U2 x891 ->
                                          ConcatArray.t_to_js Obj.magic x891))|]))
                          x887;
                        x888))|])
    let (join : ('tags, 'T) this -> ?separator:string -> unit -> string) =
      fun (x901 : ('tags, 'T) this) ->
        fun ?separator:(x898 : string option) ->
          fun () ->
            Ojs.string_of_js
              (let x904 = this_to_js Obj.magic Obj.magic x901 in
               Ojs.call (Ojs.get_prop_ascii x904 "join") "apply"
                 [|x904;((let x899 =
                            Ojs.new_obj
                              (Ojs.get_prop_ascii Ojs.global "Array") 
                              [||] in
                          (match x898 with
                           | Some x900 ->
                               ignore
                                 (Ojs.call x899 "push"
                                    [|(Ojs.string_to_js x900)|])
                           | None -> ());
                          x899))|])
    let (slice :
      ('tags, 'T) this -> ?start:float -> ?end_:float -> unit -> 'T list) =
      fun (x910 : ('tags, 'T) this) ->
        fun ?start:(x905 : float option) ->
          fun ?end_:(x906 : float option) ->
            fun () ->
              Ojs.list_of_js Obj.magic
                (let x913 = this_to_js Obj.magic Obj.magic x910 in
                 Ojs.call (Ojs.get_prop_ascii x913 "slice") "apply"
                   [|x913;((let x907 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x905 with
                             | Some x909 ->
                                 ignore
                                   (Ojs.call x907 "push"
                                      [|(Ojs.float_to_js x909)|])
                             | None -> ());
                            (match x906 with
                             | Some x908 ->
                                 ignore
                                   (Ojs.call x907 "push"
                                      [|(Ojs.float_to_js x908)|])
                             | None -> ());
                            x907))|])
    let (indexOf :
      ('tags, 'T) this ->
        searchElement:'T -> ?fromIndex:float -> unit -> float)
      =
      fun (x919 : ('tags, 'T) this) ->
        fun ~searchElement:(x915 : 'T) ->
          fun ?fromIndex:(x916 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x922 = this_to_js Obj.magic Obj.magic x919 in
                 Ojs.call (Ojs.get_prop_ascii x922 "indexOf") "apply"
                   [|x922;((let x917 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x917 "push" [|(Obj.magic x915)|]);
                            (match x916 with
                             | Some x918 ->
                                 ignore
                                   (Ojs.call x917 "push"
                                      [|(Ojs.float_to_js x918)|])
                             | None -> ());
                            x917))|])
    let (lastIndexOf :
      ('tags, 'T) this ->
        searchElement:'T -> ?fromIndex:float -> unit -> float)
      =
      fun (x927 : ('tags, 'T) this) ->
        fun ~searchElement:(x923 : 'T) ->
          fun ?fromIndex:(x924 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x930 = this_to_js Obj.magic Obj.magic x927 in
                 Ojs.call (Ojs.get_prop_ascii x930 "lastIndexOf") "apply"
                   [|x930;((let x925 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x925 "push" [|(Obj.magic x923)|]);
                            (match x924 with
                             | Some x926 ->
                                 ignore
                                   (Ojs.call x925 "push"
                                      [|(Ojs.float_to_js x926)|])
                             | None -> ());
                            x925))|])
    let (every :
      ('tags, 'T) this ->
        predicate:(value:'T -> index:float -> array:'T list -> bool) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x939 : ('tags, 'T) this) ->
        fun
          ~predicate:(x931 :
                       value:'T -> index:float -> array:'T list -> bool)
          ->
          fun ?thisArg:(x932 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x942 = this_to_js Obj.magic Obj.magic x939 in
                 Ojs.call (Ojs.get_prop_ascii x942 "every") "apply"
                   [|x942;((let x933 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x933 "push"
                                 [|(Ojs.fun_to_js 3
                                      (fun (x935 : Ojs.t) ->
                                         fun (x936 : Ojs.t) ->
                                           fun (x937 : Ojs.t) ->
                                             Ojs.bool_to_js
                                               (x931 ~value:(Obj.magic x935)
                                                  ~index:(Ojs.float_of_js
                                                            x936)
                                                  ~array:(Ojs.list_of_js
                                                            Obj.magic x937))))|]);
                            (match x932 with
                             | Some x934 ->
                                 ignore
                                   (Ojs.call x933 "push" [|(any_to_js x934)|])
                             | None -> ());
                            x933))|])
    let (every' :
      ('tags, 'T) this ->
        predicate:(value:'T -> index:float -> array:'T list -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x951 : ('tags, 'T) this) ->
        fun
          ~predicate:(x943 :
                       value:'T -> index:float -> array:'T list -> unknown)
          ->
          fun ?thisArg:(x944 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x954 = this_to_js Obj.magic Obj.magic x951 in
                 Ojs.call (Ojs.get_prop_ascii x954 "every") "apply"
                   [|x954;((let x945 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x945 "push"
                                 [|(Ojs.fun_to_js 3
                                      (fun (x947 : Ojs.t) ->
                                         fun (x948 : Ojs.t) ->
                                           fun (x949 : Ojs.t) ->
                                             unknown_to_js
                                               (x943 ~value:(Obj.magic x947)
                                                  ~index:(Ojs.float_of_js
                                                            x948)
                                                  ~array:(Ojs.list_of_js
                                                            Obj.magic x949))))|]);
                            (match x944 with
                             | Some x946 ->
                                 ignore
                                   (Ojs.call x945 "push" [|(any_to_js x946)|])
                             | None -> ());
                            x945))|])
    let (some :
      ('tags, 'T) this ->
        predicate:(value:'T -> index:float -> array:'T list -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x963 : ('tags, 'T) this) ->
        fun
          ~predicate:(x955 :
                       value:'T -> index:float -> array:'T list -> unknown)
          ->
          fun ?thisArg:(x956 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x966 = this_to_js Obj.magic Obj.magic x963 in
                 Ojs.call (Ojs.get_prop_ascii x966 "some") "apply"
                   [|x966;((let x957 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x957 "push"
                                 [|(Ojs.fun_to_js 3
                                      (fun (x959 : Ojs.t) ->
                                         fun (x960 : Ojs.t) ->
                                           fun (x961 : Ojs.t) ->
                                             unknown_to_js
                                               (x955 ~value:(Obj.magic x959)
                                                  ~index:(Ojs.float_of_js
                                                            x960)
                                                  ~array:(Ojs.list_of_js
                                                            Obj.magic x961))))|]);
                            (match x956 with
                             | Some x958 ->
                                 ignore
                                   (Ojs.call x957 "push" [|(any_to_js x958)|])
                             | None -> ());
                            x957))|])
    let (forEach :
      ('tags, 'T) this ->
        callbackfn:(value:'T -> index:float -> array:'T list -> unit) ->
          ?thisArg:any -> unit -> unit)
      =
      fun (x975 : ('tags, 'T) this) ->
        fun
          ~callbackfn:(x967 :
                        value:'T -> index:float -> array:'T list -> unit)
          ->
          fun ?thisArg:(x968 : any option) ->
            fun () ->
              ignore
                (let x978 = this_to_js Obj.magic Obj.magic x975 in
                 Ojs.call (Ojs.get_prop_ascii x978 "forEach") "apply"
                   [|x978;((let x969 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x969 "push"
                                 [|(Ojs.fun_to_js 3
                                      (fun (x971 : Ojs.t) ->
                                         fun (x972 : Ojs.t) ->
                                           fun (x973 : Ojs.t) ->
                                             x967 ~value:(Obj.magic x971)
                                               ~index:(Ojs.float_of_js x972)
                                               ~array:(Ojs.list_of_js
                                                         Obj.magic x973)))|]);
                            (match x968 with
                             | Some x970 ->
                                 ignore
                                   (Ojs.call x969 "push" [|(any_to_js x970)|])
                             | None -> ());
                            x969))|])
    let (map :
      ('tags, 'T) this ->
        callbackfn:(value:'T -> index:float -> array:'T list -> 'U) ->
          ?thisArg:any -> unit -> 'U list)
      =
      fun (x987 : ('tags, 'T) this) ->
        fun
          ~callbackfn:(x979 : value:'T -> index:float -> array:'T list -> 'U)
          ->
          fun ?thisArg:(x980 : any option) ->
            fun () ->
              Ojs.list_of_js Obj.magic
                (let x990 = this_to_js Obj.magic Obj.magic x987 in
                 Ojs.call (Ojs.get_prop_ascii x990 "map") "apply"
                   [|x990;((let x981 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x981 "push"
                                 [|(Ojs.fun_to_js 3
                                      (fun (x983 : Ojs.t) ->
                                         fun (x984 : Ojs.t) ->
                                           fun (x985 : Ojs.t) ->
                                             Obj.magic
                                               (x979 ~value:(Obj.magic x983)
                                                  ~index:(Ojs.float_of_js
                                                            x984)
                                                  ~array:(Ojs.list_of_js
                                                            Obj.magic x985))))|]);
                            (match x980 with
                             | Some x982 ->
                                 ignore
                                   (Ojs.call x981 "push" [|(any_to_js x982)|])
                             | None -> ());
                            x981))|])
    let (filter :
      ('tags, 'T) this ->
        predicate:(value:'T -> index:float -> array:'T list -> bool) ->
          ?thisArg:any -> unit -> 'S list)
      =
      fun (x1000 : ('tags, 'T) this) ->
        fun
          ~predicate:(x992 :
                       value:'T -> index:float -> array:'T list -> bool)
          ->
          fun ?thisArg:(x993 : any option) ->
            fun () ->
              Ojs.list_of_js Obj.magic
                (let x1003 = this_to_js Obj.magic Obj.magic x1000 in
                 Ojs.call (Ojs.get_prop_ascii x1003 "filter") "apply"
                   [|x1003;((let x994 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x994 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x996 : Ojs.t) ->
                                          fun (x997 : Ojs.t) ->
                                            fun (x998 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x992 ~value:(Obj.magic x996)
                                                   ~index:(Ojs.float_of_js
                                                             x997)
                                                   ~array:(Ojs.list_of_js
                                                             Obj.magic x998))))|]);
                             (match x993 with
                              | Some x995 ->
                                  ignore
                                    (Ojs.call x994 "push"
                                       [|(any_to_js x995)|])
                              | None -> ());
                             x994))|])
    let (filter' :
      ('tags, 'T) this ->
        predicate:(value:'T -> index:float -> array:'T list -> unknown) ->
          ?thisArg:any -> unit -> 'T list)
      =
      fun (x1013 : ('tags, 'T) this) ->
        fun
          ~predicate:(x1005 :
                       value:'T -> index:float -> array:'T list -> unknown)
          ->
          fun ?thisArg:(x1006 : any option) ->
            fun () ->
              Ojs.list_of_js Obj.magic
                (let x1016 = this_to_js Obj.magic Obj.magic x1013 in
                 Ojs.call (Ojs.get_prop_ascii x1016 "filter") "apply"
                   [|x1016;((let x1007 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1007 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x1009 : Ojs.t) ->
                                          fun (x1010 : Ojs.t) ->
                                            fun (x1011 : Ojs.t) ->
                                              unknown_to_js
                                                (x1005
                                                   ~value:(Obj.magic x1009)
                                                   ~index:(Ojs.float_of_js
                                                             x1010)
                                                   ~array:(Ojs.list_of_js
                                                             Obj.magic x1011))))|]);
                             (match x1006 with
                              | Some x1008 ->
                                  ignore
                                    (Ojs.call x1007 "push"
                                       [|(any_to_js x1008)|])
                              | None -> ());
                             x1007))|])
    let (reduce :
      ('tags, 'T) this ->
        callbackfn:(previousValue:'T ->
                      currentValue:'T ->
                        currentIndex:float -> array:'T list -> 'T)
          -> 'T)
      =
      fun (x1024 : ('tags, 'T) this) ->
        fun
          ~callbackfn:(x1018 :
                        previousValue:'T ->
                          currentValue:'T ->
                            currentIndex:float -> array:'T list -> 'T)
          ->
          Obj.magic
            (Ojs.call (this_to_js Obj.magic Obj.magic x1024) "reduce"
               [|(Ojs.fun_to_js 4
                    (fun (x1019 : Ojs.t) ->
                       fun (x1020 : Ojs.t) ->
                         fun (x1021 : Ojs.t) ->
                           fun (x1022 : Ojs.t) ->
                             Obj.magic
                               (x1018 ~previousValue:(Obj.magic x1019)
                                  ~currentValue:(Obj.magic x1020)
                                  ~currentIndex:(Ojs.float_of_js x1021)
                                  ~array:(Ojs.list_of_js Obj.magic x1022))))|])
    let (reduce' :
      ('tags, 'T) this ->
        callbackfn:(previousValue:'T ->
                      currentValue:'T ->
                        currentIndex:float -> array:'T list -> 'T)
          -> initialValue:'T -> 'T)
      =
      fun (x1034 : ('tags, 'T) this) ->
        fun
          ~callbackfn:(x1027 :
                        previousValue:'T ->
                          currentValue:'T ->
                            currentIndex:float -> array:'T list -> 'T)
          ->
          fun ~initialValue:(x1033 : 'T) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic Obj.magic x1034) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x1028 : Ojs.t) ->
                         fun (x1029 : Ojs.t) ->
                           fun (x1030 : Ojs.t) ->
                             fun (x1031 : Ojs.t) ->
                               Obj.magic
                                 (x1027 ~previousValue:(Obj.magic x1028)
                                    ~currentValue:(Obj.magic x1029)
                                    ~currentIndex:(Ojs.float_of_js x1030)
                                    ~array:(Ojs.list_of_js Obj.magic x1031))));(
                   Obj.magic x1033)|])
    let (reduce'' :
      ('tags, 'T) this ->
        callbackfn:(previousValue:'U ->
                      currentValue:'T ->
                        currentIndex:float -> array:'T list -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x1044 : ('tags, 'T) this) ->
        fun
          ~callbackfn:(x1037 :
                        previousValue:'U ->
                          currentValue:'T ->
                            currentIndex:float -> array:'T list -> 'U)
          ->
          fun ~initialValue:(x1043 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic Obj.magic x1044) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x1038 : Ojs.t) ->
                         fun (x1039 : Ojs.t) ->
                           fun (x1040 : Ojs.t) ->
                             fun (x1041 : Ojs.t) ->
                               Obj.magic
                                 (x1037 ~previousValue:(Obj.magic x1038)
                                    ~currentValue:(Obj.magic x1039)
                                    ~currentIndex:(Ojs.float_of_js x1040)
                                    ~array:(Ojs.list_of_js Obj.magic x1041))));(
                   Obj.magic x1043)|])
    let (reduceRight :
      ('tags, 'T) this ->
        callbackfn:(previousValue:'T ->
                      currentValue:'T ->
                        currentIndex:float -> array:'T list -> 'T)
          -> 'T)
      =
      fun (x1053 : ('tags, 'T) this) ->
        fun
          ~callbackfn:(x1047 :
                        previousValue:'T ->
                          currentValue:'T ->
                            currentIndex:float -> array:'T list -> 'T)
          ->
          Obj.magic
            (Ojs.call (this_to_js Obj.magic Obj.magic x1053) "reduceRight"
               [|(Ojs.fun_to_js 4
                    (fun (x1048 : Ojs.t) ->
                       fun (x1049 : Ojs.t) ->
                         fun (x1050 : Ojs.t) ->
                           fun (x1051 : Ojs.t) ->
                             Obj.magic
                               (x1047 ~previousValue:(Obj.magic x1048)
                                  ~currentValue:(Obj.magic x1049)
                                  ~currentIndex:(Ojs.float_of_js x1050)
                                  ~array:(Ojs.list_of_js Obj.magic x1051))))|])
    let (reduceRight' :
      ('tags, 'T) this ->
        callbackfn:(previousValue:'T ->
                      currentValue:'T ->
                        currentIndex:float -> array:'T list -> 'T)
          -> initialValue:'T -> 'T)
      =
      fun (x1063 : ('tags, 'T) this) ->
        fun
          ~callbackfn:(x1056 :
                        previousValue:'T ->
                          currentValue:'T ->
                            currentIndex:float -> array:'T list -> 'T)
          ->
          fun ~initialValue:(x1062 : 'T) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic Obj.magic x1063) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x1057 : Ojs.t) ->
                         fun (x1058 : Ojs.t) ->
                           fun (x1059 : Ojs.t) ->
                             fun (x1060 : Ojs.t) ->
                               Obj.magic
                                 (x1056 ~previousValue:(Obj.magic x1057)
                                    ~currentValue:(Obj.magic x1058)
                                    ~currentIndex:(Ojs.float_of_js x1059)
                                    ~array:(Ojs.list_of_js Obj.magic x1060))));(
                   Obj.magic x1062)|])
    let (reduceRight'' :
      ('tags, 'T) this ->
        callbackfn:(previousValue:'U ->
                      currentValue:'T ->
                        currentIndex:float -> array:'T list -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x1073 : ('tags, 'T) this) ->
        fun
          ~callbackfn:(x1066 :
                        previousValue:'U ->
                          currentValue:'T ->
                            currentIndex:float -> array:'T list -> 'U)
          ->
          fun ~initialValue:(x1072 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic Obj.magic x1073) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x1067 : Ojs.t) ->
                         fun (x1068 : Ojs.t) ->
                           fun (x1069 : Ojs.t) ->
                             fun (x1070 : Ojs.t) ->
                               Obj.magic
                                 (x1066 ~previousValue:(Obj.magic x1067)
                                    ~currentValue:(Obj.magic x1068)
                                    ~currentIndex:(Ojs.float_of_js x1069)
                                    ~array:(Ojs.list_of_js Obj.magic x1070))));(
                   Obj.magic x1072)|])
    let (get : ('tags, 'T) this -> float -> 'T) =
      fun (x1076 : ('tags, 'T) this) ->
        fun (x1079 : float) ->
          Obj.magic
            (Ojs.get_prop (this_to_js Obj.magic Obj.magic x1076)
               (Ojs.float_to_js x1079))
    let cast_from = Obj.magic
    let (of_ml : 'T list -> 'T t) =
      fun (x1080 : 'T list) ->
        t_of_js Obj.magic (Ojs.list_to_js Obj.magic x1080)
    let (to_ml : 'T t -> 'T list) =
      fun (x1083 : 'T t) ->
        Ojs.list_of_js Obj.magic (t_to_js Obj.magic x1083)
  end
module TemplateStringsArray =
  struct
    type t =
      [ `ReadonlyArray of string  | `ReadonlyArray of string 
      | `TemplateStringsArray  | string ArrayLike.tags_1
      | string IterableIterator.tags_1] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x1087 : Ojs.t) -> t_of_js x1087
    and t_0_to_js : t_0 -> Ojs.t = fun (x1086 : t) -> t_to_js x1086
    type tags =
      [ `ReadonlyArray of string  | `ReadonlyArray of string 
      | `TemplateStringsArray  | string ArrayLike.tags_1
      | string IterableIterator.tags_1]
    type tags_0 = tags
    type 'tags this =
      'tags intf constraint 'tags = [> `TemplateStringsArray ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x1090 : Ojs.t) -> intf_of_js __tags_of_js x1090
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x1088 : __tags intf) -> intf_to_js __tags_to_js x1088
    let (get_raw : 'tags this -> string list) =
      fun (x1092 : 'tags this) ->
        Ojs.list_of_js Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x1092) "raw")
    let (create : raw:string list -> unit -> t) =
      fun ~raw:(x1095 : string list) ->
        fun () ->
          let x1096 = Ojs.empty_obj () in
          Ojs.set_prop_ascii x1096 "raw"
            (Ojs.list_to_js Ojs.string_to_js x1095);
          t_of_js x1096
    let cast_from = Obj.magic
  end
module SyntaxError =
  struct
    type t = [ `Error  | `SyntaxError ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x1099 : Ojs.t) -> t_of_js x1099
    and t_0_to_js : t_0 -> Ojs.t = fun (x1098 : t) -> t_to_js x1098
    type tags = [ `Error  | `SyntaxError ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `SyntaxError ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x1102 : Ojs.t) -> intf_of_js __tags_of_js x1102
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x1100 : __tags intf) -> intf_to_js __tags_to_js x1100
    let (create : ?message:string -> ?options:ErrorOptions.t -> unit -> t) =
      fun ?message:(x1104 : string option) ->
        fun ?options:(x1105 : ErrorOptions.t option) ->
          fun () ->
            t_of_js
              (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "SyntaxError")
                 (let x1106 =
                    Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                  (match x1104 with
                   | Some x1108 ->
                       ignore
                         (Ojs.call x1106 "push" [|(Ojs.string_to_js x1108)|])
                   | None -> ());
                  (match x1105 with
                   | Some x1107 ->
                       ignore
                         (Ojs.call x1106 "push"
                            [|(ErrorOptions.t_to_js x1107)|])
                   | None -> ());
                  x1106))
    let (invoke : ?message:string -> ?options:ErrorOptions.t -> unit -> t) =
      fun ?message:(x1109 : string option) ->
        fun ?options:(x1110 : ErrorOptions.t option) ->
          fun () ->
            t_of_js
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "SyntaxError") "apply"
                 [|Ojs.null;((let x1111 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              (match x1109 with
                               | Some x1113 ->
                                   ignore
                                     (Ojs.call x1111 "push"
                                        [|(Ojs.string_to_js x1113)|])
                               | None -> ());
                              (match x1110 with
                               | Some x1112 ->
                                   ignore
                                     (Ojs.call x1111 "push"
                                        [|(ErrorOptions.t_to_js x1112)|])
                               | None -> ());
                              x1111))|])
    let (create' : ?message:string -> unit -> t) =
      fun ?message:(x1114 : string option) ->
        fun () ->
          t_of_js
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "SyntaxError")
               (let x1115 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x1114 with
                 | Some x1116 ->
                     ignore
                       (Ojs.call x1115 "push" [|(Ojs.string_to_js x1116)|])
                 | None -> ());
                x1115))
    let (invoke' : ?message:string -> unit -> t) =
      fun ?message:(x1117 : string option) ->
        fun () ->
          t_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "SyntaxError") "apply"
               [|Ojs.null;((let x1118 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x1117 with
                             | Some x1119 ->
                                 ignore
                                   (Ojs.call x1118 "push"
                                      [|(Ojs.string_to_js x1119)|])
                             | None -> ());
                            x1118))|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "SyntaxError")
             "prototype")
    let cast_from = Obj.magic
  end
module Symbol =
  struct
    type t = [ `Symbol ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x1121 : Ojs.t) -> t_of_js x1121
    and t_0_to_js : t_0 -> Ojs.t = fun (x1120 : t) -> t_to_js x1120
    type tags = [ `Symbol ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `Symbol ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x1124 : Ojs.t) -> intf_of_js __tags_of_js x1124
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x1122 : __tags intf) -> intf_to_js __tags_to_js x1122
    let (get_description : 'tags this -> string option) =
      fun (x1126 : 'tags this) ->
        Ojs.option_of_js Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x1126) "description")
    let (toString : 'tags this -> string) =
      fun (x1129 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x1129) "toString" [||])
    let (valueOf : 'tags this -> symbol) =
      fun (x1131 : 'tags this) ->
        symbol_of_js (Ojs.call (this_to_js Obj.magic x1131) "valueOf" [||])
    let (matchAll : unit -> symbol) =
      fun () ->
        symbol_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Symbol")
             "matchAll")
    let (asyncIterator : unit -> symbol) =
      fun () ->
        symbol_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Symbol")
             "asyncIterator")
    let (hasInstance : unit -> symbol) =
      fun () ->
        symbol_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Symbol")
             "hasInstance")
    let (isConcatSpreadable : unit -> symbol) =
      fun () ->
        symbol_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Symbol")
             "isConcatSpreadable")
    let (match_ : unit -> symbol) =
      fun () ->
        symbol_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Symbol")
             "match")
    let (replace : unit -> symbol) =
      fun () ->
        symbol_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Symbol")
             "replace")
    let (search : unit -> symbol) =
      fun () ->
        symbol_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Symbol")
             "search")
    let (species : unit -> symbol) =
      fun () ->
        symbol_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Symbol")
             "species")
    let (split : unit -> symbol) =
      fun () ->
        symbol_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Symbol")
             "split")
    let (toPrimitive : unit -> symbol) =
      fun () ->
        symbol_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Symbol")
             "toPrimitive")
    let (toStringTag : unit -> symbol) =
      fun () ->
        symbol_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Symbol")
             "toStringTag")
    let (unscopables : unit -> symbol) =
      fun () ->
        symbol_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Symbol")
             "unscopables")
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Symbol")
             "prototype")
    let (invoke :
      ?description:[ `U1 of string  | `U2 of float ] -> unit -> symbol) =
      fun ?description:(x1133 : [ `U1 of string  | `U2 of float ] option) ->
        fun () ->
          symbol_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "Symbol") "apply"
               [|Ojs.null;((let x1134 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x1133 with
                             | Some x1135 ->
                                 ignore
                                   (Ojs.call x1134 "push"
                                      [|((match x1135 with
                                          | `U1 x1136 ->
                                              Ojs.string_to_js x1136
                                          | `U2 x1137 ->
                                              Ojs.float_to_js x1137))|])
                             | None -> ());
                            x1134))|])
    let (for_ : string -> symbol) =
      fun (x1138 : string) ->
        symbol_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Symbol") "for"
             [|(Ojs.string_to_js x1138)|])
    let (keyFor : symbol -> string option) =
      fun (x1139 : symbol) ->
        Ojs.option_of_js Ojs.string_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Symbol") "keyFor"
             [|(symbol_to_js x1139)|])
    let (iterator : unit -> symbol) =
      fun () ->
        symbol_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Symbol")
             "iterator")
    let cast_from = Obj.magic
  end
module Array =
  struct
    module AnonymousInterface0 =
      struct
        type t = Ojs.t
        let rec t_of_js : Ojs.t -> t = fun (x1142 : Ojs.t) -> x1142
        and t_to_js : t -> Ojs.t = fun (x1141 : Ojs.t) -> x1141
        let (get_copyWithin : t -> bool) =
          fun (x1143 : t) ->
            Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x1143) "copyWithin")
        let (set_copyWithin : t -> bool -> unit) =
          fun (x1144 : t) ->
            fun (x1145 : bool) ->
              Ojs.set_prop_ascii (t_to_js x1144) "copyWithin"
                (Ojs.bool_to_js x1145)
        let (get_entries : t -> bool) =
          fun (x1146 : t) ->
            Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x1146) "entries")
        let (set_entries : t -> bool -> unit) =
          fun (x1147 : t) ->
            fun (x1148 : bool) ->
              Ojs.set_prop_ascii (t_to_js x1147) "entries"
                (Ojs.bool_to_js x1148)
        let (get_fill : t -> bool) =
          fun (x1149 : t) ->
            Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x1149) "fill")
        let (set_fill : t -> bool -> unit) =
          fun (x1150 : t) ->
            fun (x1151 : bool) ->
              Ojs.set_prop_ascii (t_to_js x1150) "fill"
                (Ojs.bool_to_js x1151)
        let (get_find : t -> bool) =
          fun (x1152 : t) ->
            Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x1152) "find")
        let (set_find : t -> bool -> unit) =
          fun (x1153 : t) ->
            fun (x1154 : bool) ->
              Ojs.set_prop_ascii (t_to_js x1153) "find"
                (Ojs.bool_to_js x1154)
        let (get_findIndex : t -> bool) =
          fun (x1155 : t) ->
            Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x1155) "findIndex")
        let (set_findIndex : t -> bool -> unit) =
          fun (x1156 : t) ->
            fun (x1157 : bool) ->
              Ojs.set_prop_ascii (t_to_js x1156) "findIndex"
                (Ojs.bool_to_js x1157)
        let (get_keys : t -> bool) =
          fun (x1158 : t) ->
            Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x1158) "keys")
        let (set_keys : t -> bool -> unit) =
          fun (x1159 : t) ->
            fun (x1160 : bool) ->
              Ojs.set_prop_ascii (t_to_js x1159) "keys"
                (Ojs.bool_to_js x1160)
        let (get_values : t -> bool) =
          fun (x1161 : t) ->
            Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x1161) "values")
        let (set_values : t -> bool -> unit) =
          fun (x1162 : t) ->
            fun (x1163 : bool) ->
              Ojs.set_prop_ascii (t_to_js x1162) "values"
                (Ojs.bool_to_js x1163)
        let (create :
          copyWithin:bool ->
            entries:bool ->
              fill:bool ->
                find:bool ->
                  findIndex:bool -> keys:bool -> values:bool -> unit -> t)
          =
          fun ~copyWithin:(x1164 : bool) ->
            fun ~entries:(x1165 : bool) ->
              fun ~fill:(x1166 : bool) ->
                fun ~find:(x1167 : bool) ->
                  fun ~findIndex:(x1168 : bool) ->
                    fun ~keys:(x1169 : bool) ->
                      fun ~values:(x1170 : bool) ->
                        fun () ->
                          let x1171 = Ojs.empty_obj () in
                          Ojs.set_prop_ascii x1171 "copyWithin"
                            (Ojs.bool_to_js x1164);
                          Ojs.set_prop_ascii x1171 "entries"
                            (Ojs.bool_to_js x1165);
                          Ojs.set_prop_ascii x1171 "fill"
                            (Ojs.bool_to_js x1166);
                          Ojs.set_prop_ascii x1171 "find"
                            (Ojs.bool_to_js x1167);
                          Ojs.set_prop_ascii x1171 "findIndex"
                            (Ojs.bool_to_js x1168);
                          Ojs.set_prop_ascii x1171 "keys"
                            (Ojs.bool_to_js x1169);
                          Ojs.set_prop_ascii x1171 "values"
                            (Ojs.bool_to_js x1170);
                          t_of_js x1171
      end
    type 'T t =
      [ `Array of 'T  | 'T ArrayLike.tags_1 | 'T IterableIterator.tags_1]
        intf
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun _T -> Obj.magic
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun _T -> Obj.magic
    type 'T t_1 = 'T t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 =
      fun (type __T) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x1174 : Ojs.t) -> t_of_js __T_of_js x1174
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t =
      fun (type __T) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x1172 : __T t) -> t_to_js __T_to_js x1172
    type 'T tags =
      [ `Array of 'T  | 'T ArrayLike.tags_1 | 'T IterableIterator.tags_1]
    type 'T tags_1 = 'T tags
    type ('tags, 'T) this = 'tags intf constraint 'tags = [> `Array of 'T ]
    let rec this_of_js :
      'tags 'T .
        (Ojs.t -> 'tags) -> (Ojs.t -> 'T) -> Ojs.t -> ('tags, 'T) this
      =
      fun (type __tags) ->
        fun (type __T) ->
          fun (__tags_of_js : Ojs.t -> __tags) ->
            fun (__T_of_js : Ojs.t -> __T) ->
              fun (x1178 : Ojs.t) -> intf_of_js __tags_of_js x1178
    and this_to_js :
      'tags 'T .
        ('tags -> Ojs.t) -> ('T -> Ojs.t) -> ('tags, 'T) this -> Ojs.t
      =
      fun (type __tags) ->
        fun (type __T) ->
          fun (__tags_to_js : __tags -> Ojs.t) ->
            fun (__T_to_js : __T -> Ojs.t) ->
              fun (x1176 : __tags intf) -> intf_to_js __tags_to_js x1176
    let (at : ('tags, 'T) this -> index:float -> 'T option) =
      fun (x1181 : ('tags, 'T) this) ->
        fun ~index:(x1180 : float) ->
          Ojs.option_of_js Obj.magic
            (Ojs.call (this_to_js Obj.magic Obj.magic x1181) "at"
               [|(Ojs.float_to_js x1180)|])
    let (flatMap :
      ('tags, 'T) this ->
        callback:(this:'This ->
                    value:'T ->
                      index:float ->
                        array:'T list ->
                          [ `U1 of 'U  | `U2 of 'U ReadonlyArray.t ])
          -> ?thisArg:'This -> unit -> 'U list)
      =
      fun (x1197 : ('tags, 'T) this) ->
        fun
          ~callback:(x1185 :
                      this:'This ->
                        value:'T ->
                          index:float ->
                            array:'T list ->
                              [ `U1 of 'U  | `U2 of 'U ReadonlyArray.t ])
          ->
          fun ?thisArg:(x1186 : 'This option) ->
            fun () ->
              Ojs.list_of_js Obj.magic
                (let x1200 = this_to_js Obj.magic Obj.magic x1197 in
                 Ojs.call (Ojs.get_prop_ascii x1200 "flatMap") "apply"
                   [|x1200;((let x1187 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1187 "push"
                                  [|(Ojs.fun_to_js 4
                                       (fun (x1189 : Ojs.t) ->
                                          fun (x1190 : Ojs.t) ->
                                            fun (x1191 : Ojs.t) ->
                                              fun (x1192 : Ojs.t) ->
                                                match x1185
                                                        ~this:(Obj.magic
                                                                 x1189)
                                                        ~value:(Obj.magic
                                                                  x1190)
                                                        ~index:(Ojs.float_of_js
                                                                  x1191)
                                                        ~array:(Ojs.list_of_js
                                                                  Obj.magic
                                                                  x1192)
                                                with
                                                | `U1 x1194 ->
                                                    Obj.magic x1194
                                                | `U2 x1195 ->
                                                    ReadonlyArray.t_to_js
                                                      Obj.magic x1195))|]);
                             (match x1186 with
                              | Some x1188 ->
                                  ignore
                                    (Ojs.call x1187 "push"
                                       [|(Obj.magic x1188)|])
                              | None -> ());
                             x1187))|])
    let (flat :
      ('tags, 'T) this ->
        this:'A -> ?depth:'D -> unit -> ('A, 'D) FlatArray.t list)
      =
      fun (x1206 : ('tags, 'T) this) ->
        fun ~this:(x1202 : 'A) ->
          fun ?depth:(x1203 : 'D option) ->
            fun () ->
              Ojs.list_of_js
                (fun (x1210 : Ojs.t) ->
                   FlatArray.t_of_js Obj.magic Obj.magic x1210)
                (let x1209 = this_to_js Obj.magic Obj.magic x1206 in
                 Ojs.call (Ojs.get_prop_ascii x1209 "flat") "apply"
                   [|x1209;((let x1204 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1204 "push" [|(Obj.magic x1202)|]);
                             (match x1203 with
                              | Some x1205 ->
                                  ignore
                                    (Ojs.call x1204 "push"
                                       [|(Obj.magic x1205)|])
                              | None -> ());
                             x1204))|])
    let (includes :
      ('tags, 'T) this ->
        searchElement:'T -> ?fromIndex:float -> unit -> bool)
      =
      fun (x1217 : ('tags, 'T) this) ->
        fun ~searchElement:(x1213 : 'T) ->
          fun ?fromIndex:(x1214 : float option) ->
            fun () ->
              Ojs.bool_of_js
                (let x1220 = this_to_js Obj.magic Obj.magic x1217 in
                 Ojs.call (Ojs.get_prop_ascii x1220 "includes") "apply"
                   [|x1220;((let x1215 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1215 "push" [|(Obj.magic x1213)|]);
                             (match x1214 with
                              | Some x1216 ->
                                  ignore
                                    (Ojs.call x1215 "push"
                                       [|(Ojs.float_to_js x1216)|])
                              | None -> ());
                             x1215))|])
    let (entries : ('tags, 'T) this -> (float * 'T) IterableIterator.t) =
      fun (x1221 : ('tags, 'T) this) ->
        IterableIterator.t_of_js
          (fun (x1224 : Ojs.t) ->
             let x1225 = x1224 in
             ((Ojs.float_of_js (Ojs.array_get x1225 0)),
               (Obj.magic (Ojs.array_get x1225 1))))
          (Ojs.call (this_to_js Obj.magic Obj.magic x1221) "entries" [||])
    let (keys : ('tags, 'T) this -> float IterableIterator.t) =
      fun (x1226 : ('tags, 'T) this) ->
        IterableIterator.t_of_js Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic Obj.magic x1226) "keys" [||])
    let (values : ('tags, 'T) this -> 'T IterableIterator.t) =
      fun (x1230 : ('tags, 'T) this) ->
        IterableIterator.t_of_js Obj.magic
          (Ojs.call (this_to_js Obj.magic Obj.magic x1230) "values" [||])
    let (find :
      ('tags, 'T) this ->
        predicate:(this:unit ->
                     value:'T -> index:float -> obj:'T list -> bool)
          -> ?thisArg:any -> unit -> 'S option)
      =
      fun (x1243 : ('tags, 'T) this) ->
        fun
          ~predicate:(x1234 :
                       this:unit ->
                         value:'T -> index:float -> obj:'T list -> bool)
          ->
          fun ?thisArg:(x1235 : any option) ->
            fun () ->
              Ojs.option_of_js Obj.magic
                (let x1246 = this_to_js Obj.magic Obj.magic x1243 in
                 Ojs.call (Ojs.get_prop_ascii x1246 "find") "apply"
                   [|x1246;((let x1236 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1236 "push"
                                  [|(Ojs.fun_to_js 4
                                       (fun (x1238 : Ojs.t) ->
                                          fun (x1239 : Ojs.t) ->
                                            fun (x1240 : Ojs.t) ->
                                              fun (x1241 : Ojs.t) ->
                                                Ojs.bool_to_js
                                                  (x1234
                                                     ~this:(Ojs.unit_of_js
                                                              x1238)
                                                     ~value:(Obj.magic x1239)
                                                     ~index:(Ojs.float_of_js
                                                               x1240)
                                                     ~obj:(Ojs.list_of_js
                                                             Obj.magic x1241))))|]);
                             (match x1235 with
                              | Some x1237 ->
                                  ignore
                                    (Ojs.call x1236 "push"
                                       [|(any_to_js x1237)|])
                              | None -> ());
                             x1236))|])
    let (find' :
      ('tags, 'T) this ->
        predicate:(value:'T -> index:float -> obj:'T list -> unknown) ->
          ?thisArg:any -> unit -> 'T option)
      =
      fun (x1256 : ('tags, 'T) this) ->
        fun
          ~predicate:(x1248 :
                       value:'T -> index:float -> obj:'T list -> unknown)
          ->
          fun ?thisArg:(x1249 : any option) ->
            fun () ->
              Ojs.option_of_js Obj.magic
                (let x1259 = this_to_js Obj.magic Obj.magic x1256 in
                 Ojs.call (Ojs.get_prop_ascii x1259 "find") "apply"
                   [|x1259;((let x1250 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1250 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x1252 : Ojs.t) ->
                                          fun (x1253 : Ojs.t) ->
                                            fun (x1254 : Ojs.t) ->
                                              unknown_to_js
                                                (x1248
                                                   ~value:(Obj.magic x1252)
                                                   ~index:(Ojs.float_of_js
                                                             x1253)
                                                   ~obj:(Ojs.list_of_js
                                                           Obj.magic x1254))))|]);
                             (match x1249 with
                              | Some x1251 ->
                                  ignore
                                    (Ojs.call x1250 "push"
                                       [|(any_to_js x1251)|])
                              | None -> ());
                             x1250))|])
    let (findIndex :
      ('tags, 'T) this ->
        predicate:(value:'T -> index:float -> obj:'T list -> unknown) ->
          ?thisArg:any -> unit -> float)
      =
      fun (x1269 : ('tags, 'T) this) ->
        fun
          ~predicate:(x1261 :
                       value:'T -> index:float -> obj:'T list -> unknown)
          ->
          fun ?thisArg:(x1262 : any option) ->
            fun () ->
              Ojs.float_of_js
                (let x1272 = this_to_js Obj.magic Obj.magic x1269 in
                 Ojs.call (Ojs.get_prop_ascii x1272 "findIndex") "apply"
                   [|x1272;((let x1263 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1263 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x1265 : Ojs.t) ->
                                          fun (x1266 : Ojs.t) ->
                                            fun (x1267 : Ojs.t) ->
                                              unknown_to_js
                                                (x1261
                                                   ~value:(Obj.magic x1265)
                                                   ~index:(Ojs.float_of_js
                                                             x1266)
                                                   ~obj:(Ojs.list_of_js
                                                           Obj.magic x1267))))|]);
                             (match x1262 with
                              | Some x1264 ->
                                  ignore
                                    (Ojs.call x1263 "push"
                                       [|(any_to_js x1264)|])
                              | None -> ());
                             x1263))|])
    let (fill :
      ('tags, 'T) this ->
        value:'T -> ?start:float -> ?end_:float -> unit -> ('tags, 'T) this)
      =
      fun (x1279 : ('tags, 'T) this) ->
        fun ~value:(x1273 : 'T) ->
          fun ?start:(x1274 : float option) ->
            fun ?end_:(x1275 : float option) ->
              fun () ->
                this_of_js Obj.magic Obj.magic
                  (let x1282 = this_to_js Obj.magic Obj.magic x1279 in
                   Ojs.call (Ojs.get_prop_ascii x1282 "fill") "apply"
                     [|x1282;((let x1276 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x1276 "push" [|(Obj.magic x1273)|]);
                               (match x1274 with
                                | Some x1278 ->
                                    ignore
                                      (Ojs.call x1276 "push"
                                         [|(Ojs.float_to_js x1278)|])
                                | None -> ());
                               (match x1275 with
                                | Some x1277 ->
                                    ignore
                                      (Ojs.call x1276 "push"
                                         [|(Ojs.float_to_js x1277)|])
                                | None -> ());
                               x1276))|])
    let (copyWithin :
      ('tags, 'T) this ->
        target:float ->
          start:float -> ?end_:float -> unit -> ('tags, 'T) this)
      =
      fun (x1290 : ('tags, 'T) this) ->
        fun ~target:(x1285 : float) ->
          fun ~start:(x1286 : float) ->
            fun ?end_:(x1287 : float option) ->
              fun () ->
                this_of_js Obj.magic Obj.magic
                  (let x1293 = this_to_js Obj.magic Obj.magic x1290 in
                   Ojs.call (Ojs.get_prop_ascii x1293 "copyWithin") "apply"
                     [|x1293;((let x1288 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x1288 "push"
                                    [|(Ojs.float_to_js x1285)|]);
                               ignore
                                 (Ojs.call x1288 "push"
                                    [|(Ojs.float_to_js x1286)|]);
                               (match x1287 with
                                | Some x1289 ->
                                    ignore
                                      (Ojs.call x1288 "push"
                                         [|(Ojs.float_to_js x1289)|])
                                | None -> ());
                               x1288))|])
    let (get_length : ('tags, 'T) this -> float) =
      fun (x1296 : ('tags, 'T) this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic Obj.magic x1296) "length")
    let (set_length : ('tags, 'T) this -> float -> unit) =
      fun (x1299 : ('tags, 'T) this) ->
        fun (x1300 : float) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic Obj.magic x1299) "length"
            (Ojs.float_to_js x1300)
    let (toString : ('tags, 'T) this -> string) =
      fun (x1303 : ('tags, 'T) this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic Obj.magic x1303) "toString" [||])
    let (toLocaleString : ('tags, 'T) this -> string) =
      fun (x1306 : ('tags, 'T) this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic Obj.magic x1306) "toLocaleString"
             [||])
    let (pop : ('tags, 'T) this -> 'T option) =
      fun (x1309 : ('tags, 'T) this) ->
        Ojs.option_of_js Obj.magic
          (Ojs.call (this_to_js Obj.magic Obj.magic x1309) "pop" [||])
    let (push : ('tags, 'T) this -> items:'T list -> float) =
      fun (x1316 : ('tags, 'T) this) ->
        fun ~items:(x1313 : 'T list) ->
          Ojs.float_of_js
            (let x1319 = this_to_js Obj.magic Obj.magic x1316 in
             Ojs.call (Ojs.get_prop_ascii x1319 "push") "apply"
               [|x1319;((let x1314 =
                           Ojs.new_obj
                             (Ojs.get_prop_ascii Ojs.global "Array") 
                             [||] in
                         List.iter
                           (fun (x1315 : 'T) ->
                              ignore
                                (Ojs.call x1314 "push" [|(Obj.magic x1315)|]))
                           x1313;
                         x1314))|])
    let (concat : ('tags, 'T) this -> items:'T ConcatArray.t list -> 'T list)
      =
      fun (x1324 : ('tags, 'T) this) ->
        fun ~items:(x1320 : 'T ConcatArray.t list) ->
          Ojs.list_of_js Obj.magic
            (let x1327 = this_to_js Obj.magic Obj.magic x1324 in
             Ojs.call (Ojs.get_prop_ascii x1327 "concat") "apply"
               [|x1327;((let x1321 =
                           Ojs.new_obj
                             (Ojs.get_prop_ascii Ojs.global "Array") 
                             [||] in
                         List.iter
                           (fun (x1322 : 'T ConcatArray.t) ->
                              ignore
                                (Ojs.call x1321 "push"
                                   [|(ConcatArray.t_to_js Obj.magic x1322)|]))
                           x1320;
                         x1321))|])
    let (concat' :
      ('tags, 'T) this ->
        items:[ `U1 of 'T  | `U2 of 'T ConcatArray.t ] list -> 'T list)
      =
      fun (x1335 : ('tags, 'T) this) ->
        fun ~items:(x1329 : [ `U1 of 'T  | `U2 of 'T ConcatArray.t ] list) ->
          Ojs.list_of_js Obj.magic
            (let x1338 = this_to_js Obj.magic Obj.magic x1335 in
             Ojs.call (Ojs.get_prop_ascii x1338 "concat") "apply"
               [|x1338;((let x1330 =
                           Ojs.new_obj
                             (Ojs.get_prop_ascii Ojs.global "Array") 
                             [||] in
                         List.iter
                           (fun
                              (x1331 :
                                [ `U1 of 'T  | `U2 of 'T ConcatArray.t ])
                              ->
                              ignore
                                (Ojs.call x1330 "push"
                                   [|((match x1331 with
                                       | `U1 x1332 -> Obj.magic x1332
                                       | `U2 x1333 ->
                                           ConcatArray.t_to_js Obj.magic
                                             x1333))|])) x1329;
                         x1330))|])
    let (join : ('tags, 'T) this -> ?separator:string -> unit -> string) =
      fun (x1343 : ('tags, 'T) this) ->
        fun ?separator:(x1340 : string option) ->
          fun () ->
            Ojs.string_of_js
              (let x1346 = this_to_js Obj.magic Obj.magic x1343 in
               Ojs.call (Ojs.get_prop_ascii x1346 "join") "apply"
                 [|x1346;((let x1341 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x1340 with
                            | Some x1342 ->
                                ignore
                                  (Ojs.call x1341 "push"
                                     [|(Ojs.string_to_js x1342)|])
                            | None -> ());
                           x1341))|])
    let (reverse : ('tags, 'T) this -> 'T list) =
      fun (x1347 : ('tags, 'T) this) ->
        Ojs.list_of_js Obj.magic
          (Ojs.call (this_to_js Obj.magic Obj.magic x1347) "reverse" [||])
    let (shift : ('tags, 'T) this -> 'T option) =
      fun (x1351 : ('tags, 'T) this) ->
        Ojs.option_of_js Obj.magic
          (Ojs.call (this_to_js Obj.magic Obj.magic x1351) "shift" [||])
    let (slice :
      ('tags, 'T) this -> ?start:float -> ?end_:float -> unit -> 'T list) =
      fun (x1360 : ('tags, 'T) this) ->
        fun ?start:(x1355 : float option) ->
          fun ?end_:(x1356 : float option) ->
            fun () ->
              Ojs.list_of_js Obj.magic
                (let x1363 = this_to_js Obj.magic Obj.magic x1360 in
                 Ojs.call (Ojs.get_prop_ascii x1363 "slice") "apply"
                   [|x1363;((let x1357 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x1355 with
                              | Some x1359 ->
                                  ignore
                                    (Ojs.call x1357 "push"
                                       [|(Ojs.float_to_js x1359)|])
                              | None -> ());
                             (match x1356 with
                              | Some x1358 ->
                                  ignore
                                    (Ojs.call x1357 "push"
                                       [|(Ojs.float_to_js x1358)|])
                              | None -> ());
                             x1357))|])
    let (sort :
      ('tags, 'T) this ->
        ?compareFn:(a:'T -> b:'T -> float) -> unit -> ('tags, 'T) this)
      =
      fun (x1370 : ('tags, 'T) this) ->
        fun ?compareFn:(x1365 : (a:'T -> b:'T -> float) option) ->
          fun () ->
            this_of_js Obj.magic Obj.magic
              (let x1373 = this_to_js Obj.magic Obj.magic x1370 in
               Ojs.call (Ojs.get_prop_ascii x1373 "sort") "apply"
                 [|x1373;((let x1366 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x1365 with
                            | Some x1367 ->
                                ignore
                                  (Ojs.call x1366 "push"
                                     [|(Ojs.fun_to_js 2
                                          (fun (x1368 : Ojs.t) ->
                                             fun (x1369 : Ojs.t) ->
                                               Ojs.float_to_js
                                                 (x1367 ~a:(Obj.magic x1368)
                                                    ~b:(Obj.magic x1369))))|])
                            | None -> ());
                           x1366))|])
    let (splice :
      ('tags, 'T) this ->
        start:float -> ?deleteCount:float -> unit -> 'T list)
      =
      fun (x1380 : ('tags, 'T) this) ->
        fun ~start:(x1376 : float) ->
          fun ?deleteCount:(x1377 : float option) ->
            fun () ->
              Ojs.list_of_js Obj.magic
                (let x1383 = this_to_js Obj.magic Obj.magic x1380 in
                 Ojs.call (Ojs.get_prop_ascii x1383 "splice") "apply"
                   [|x1383;((let x1378 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1378 "push"
                                  [|(Ojs.float_to_js x1376)|]);
                             (match x1377 with
                              | Some x1379 ->
                                  ignore
                                    (Ojs.call x1378 "push"
                                       [|(Ojs.float_to_js x1379)|])
                              | None -> ());
                             x1378))|])
    let (splice' :
      ('tags, 'T) this ->
        start:float -> deleteCount:float -> items:'T list -> 'T list)
      =
      fun (x1390 : ('tags, 'T) this) ->
        fun ~start:(x1385 : float) ->
          fun ~deleteCount:(x1386 : float) ->
            fun ~items:(x1387 : 'T list) ->
              Ojs.list_of_js Obj.magic
                (let x1393 = this_to_js Obj.magic Obj.magic x1390 in
                 Ojs.call (Ojs.get_prop_ascii x1393 "splice") "apply"
                   [|x1393;((let x1388 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1388 "push"
                                  [|(Ojs.float_to_js x1385)|]);
                             ignore
                               (Ojs.call x1388 "push"
                                  [|(Ojs.float_to_js x1386)|]);
                             List.iter
                               (fun (x1389 : 'T) ->
                                  ignore
                                    (Ojs.call x1388 "push"
                                       [|(Obj.magic x1389)|])) x1387;
                             x1388))|])
    let (unshift : ('tags, 'T) this -> items:'T list -> float) =
      fun (x1398 : ('tags, 'T) this) ->
        fun ~items:(x1395 : 'T list) ->
          Ojs.float_of_js
            (let x1401 = this_to_js Obj.magic Obj.magic x1398 in
             Ojs.call (Ojs.get_prop_ascii x1401 "unshift") "apply"
               [|x1401;((let x1396 =
                           Ojs.new_obj
                             (Ojs.get_prop_ascii Ojs.global "Array") 
                             [||] in
                         List.iter
                           (fun (x1397 : 'T) ->
                              ignore
                                (Ojs.call x1396 "push" [|(Obj.magic x1397)|]))
                           x1395;
                         x1396))|])
    let (indexOf :
      ('tags, 'T) this ->
        searchElement:'T -> ?fromIndex:float -> unit -> float)
      =
      fun (x1406 : ('tags, 'T) this) ->
        fun ~searchElement:(x1402 : 'T) ->
          fun ?fromIndex:(x1403 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x1409 = this_to_js Obj.magic Obj.magic x1406 in
                 Ojs.call (Ojs.get_prop_ascii x1409 "indexOf") "apply"
                   [|x1409;((let x1404 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1404 "push" [|(Obj.magic x1402)|]);
                             (match x1403 with
                              | Some x1405 ->
                                  ignore
                                    (Ojs.call x1404 "push"
                                       [|(Ojs.float_to_js x1405)|])
                              | None -> ());
                             x1404))|])
    let (lastIndexOf :
      ('tags, 'T) this ->
        searchElement:'T -> ?fromIndex:float -> unit -> float)
      =
      fun (x1414 : ('tags, 'T) this) ->
        fun ~searchElement:(x1410 : 'T) ->
          fun ?fromIndex:(x1411 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x1417 = this_to_js Obj.magic Obj.magic x1414 in
                 Ojs.call (Ojs.get_prop_ascii x1417 "lastIndexOf") "apply"
                   [|x1417;((let x1412 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1412 "push" [|(Obj.magic x1410)|]);
                             (match x1411 with
                              | Some x1413 ->
                                  ignore
                                    (Ojs.call x1412 "push"
                                       [|(Ojs.float_to_js x1413)|])
                              | None -> ());
                             x1412))|])
    let (every :
      ('tags, 'T) this ->
        predicate:(value:'T -> index:float -> array:'T list -> bool) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x1426 : ('tags, 'T) this) ->
        fun
          ~predicate:(x1418 :
                       value:'T -> index:float -> array:'T list -> bool)
          ->
          fun ?thisArg:(x1419 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x1429 = this_to_js Obj.magic Obj.magic x1426 in
                 Ojs.call (Ojs.get_prop_ascii x1429 "every") "apply"
                   [|x1429;((let x1420 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1420 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x1422 : Ojs.t) ->
                                          fun (x1423 : Ojs.t) ->
                                            fun (x1424 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x1418
                                                   ~value:(Obj.magic x1422)
                                                   ~index:(Ojs.float_of_js
                                                             x1423)
                                                   ~array:(Ojs.list_of_js
                                                             Obj.magic x1424))))|]);
                             (match x1419 with
                              | Some x1421 ->
                                  ignore
                                    (Ojs.call x1420 "push"
                                       [|(any_to_js x1421)|])
                              | None -> ());
                             x1420))|])
    let (every' :
      ('tags, 'T) this ->
        predicate:(value:'T -> index:float -> array:'T list -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x1438 : ('tags, 'T) this) ->
        fun
          ~predicate:(x1430 :
                       value:'T -> index:float -> array:'T list -> unknown)
          ->
          fun ?thisArg:(x1431 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x1441 = this_to_js Obj.magic Obj.magic x1438 in
                 Ojs.call (Ojs.get_prop_ascii x1441 "every") "apply"
                   [|x1441;((let x1432 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1432 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x1434 : Ojs.t) ->
                                          fun (x1435 : Ojs.t) ->
                                            fun (x1436 : Ojs.t) ->
                                              unknown_to_js
                                                (x1430
                                                   ~value:(Obj.magic x1434)
                                                   ~index:(Ojs.float_of_js
                                                             x1435)
                                                   ~array:(Ojs.list_of_js
                                                             Obj.magic x1436))))|]);
                             (match x1431 with
                              | Some x1433 ->
                                  ignore
                                    (Ojs.call x1432 "push"
                                       [|(any_to_js x1433)|])
                              | None -> ());
                             x1432))|])
    let (some :
      ('tags, 'T) this ->
        predicate:(value:'T -> index:float -> array:'T list -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x1450 : ('tags, 'T) this) ->
        fun
          ~predicate:(x1442 :
                       value:'T -> index:float -> array:'T list -> unknown)
          ->
          fun ?thisArg:(x1443 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x1453 = this_to_js Obj.magic Obj.magic x1450 in
                 Ojs.call (Ojs.get_prop_ascii x1453 "some") "apply"
                   [|x1453;((let x1444 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1444 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x1446 : Ojs.t) ->
                                          fun (x1447 : Ojs.t) ->
                                            fun (x1448 : Ojs.t) ->
                                              unknown_to_js
                                                (x1442
                                                   ~value:(Obj.magic x1446)
                                                   ~index:(Ojs.float_of_js
                                                             x1447)
                                                   ~array:(Ojs.list_of_js
                                                             Obj.magic x1448))))|]);
                             (match x1443 with
                              | Some x1445 ->
                                  ignore
                                    (Ojs.call x1444 "push"
                                       [|(any_to_js x1445)|])
                              | None -> ());
                             x1444))|])
    let (forEach :
      ('tags, 'T) this ->
        callbackfn:(value:'T -> index:float -> array:'T list -> unit) ->
          ?thisArg:any -> unit -> unit)
      =
      fun (x1462 : ('tags, 'T) this) ->
        fun
          ~callbackfn:(x1454 :
                        value:'T -> index:float -> array:'T list -> unit)
          ->
          fun ?thisArg:(x1455 : any option) ->
            fun () ->
              ignore
                (let x1465 = this_to_js Obj.magic Obj.magic x1462 in
                 Ojs.call (Ojs.get_prop_ascii x1465 "forEach") "apply"
                   [|x1465;((let x1456 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1456 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x1458 : Ojs.t) ->
                                          fun (x1459 : Ojs.t) ->
                                            fun (x1460 : Ojs.t) ->
                                              x1454 ~value:(Obj.magic x1458)
                                                ~index:(Ojs.float_of_js x1459)
                                                ~array:(Ojs.list_of_js
                                                          Obj.magic x1460)))|]);
                             (match x1455 with
                              | Some x1457 ->
                                  ignore
                                    (Ojs.call x1456 "push"
                                       [|(any_to_js x1457)|])
                              | None -> ());
                             x1456))|])
    let (map :
      ('tags, 'T) this ->
        callbackfn:(value:'T -> index:float -> array:'T list -> 'U) ->
          ?thisArg:any -> unit -> 'U list)
      =
      fun (x1474 : ('tags, 'T) this) ->
        fun
          ~callbackfn:(x1466 :
                        value:'T -> index:float -> array:'T list -> 'U)
          ->
          fun ?thisArg:(x1467 : any option) ->
            fun () ->
              Ojs.list_of_js Obj.magic
                (let x1477 = this_to_js Obj.magic Obj.magic x1474 in
                 Ojs.call (Ojs.get_prop_ascii x1477 "map") "apply"
                   [|x1477;((let x1468 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1468 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x1470 : Ojs.t) ->
                                          fun (x1471 : Ojs.t) ->
                                            fun (x1472 : Ojs.t) ->
                                              Obj.magic
                                                (x1466
                                                   ~value:(Obj.magic x1470)
                                                   ~index:(Ojs.float_of_js
                                                             x1471)
                                                   ~array:(Ojs.list_of_js
                                                             Obj.magic x1472))))|]);
                             (match x1467 with
                              | Some x1469 ->
                                  ignore
                                    (Ojs.call x1468 "push"
                                       [|(any_to_js x1469)|])
                              | None -> ());
                             x1468))|])
    let (filter :
      ('tags, 'T) this ->
        predicate:(value:'T -> index:float -> array:'T list -> bool) ->
          ?thisArg:any -> unit -> 'S list)
      =
      fun (x1487 : ('tags, 'T) this) ->
        fun
          ~predicate:(x1479 :
                       value:'T -> index:float -> array:'T list -> bool)
          ->
          fun ?thisArg:(x1480 : any option) ->
            fun () ->
              Ojs.list_of_js Obj.magic
                (let x1490 = this_to_js Obj.magic Obj.magic x1487 in
                 Ojs.call (Ojs.get_prop_ascii x1490 "filter") "apply"
                   [|x1490;((let x1481 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1481 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x1483 : Ojs.t) ->
                                          fun (x1484 : Ojs.t) ->
                                            fun (x1485 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x1479
                                                   ~value:(Obj.magic x1483)
                                                   ~index:(Ojs.float_of_js
                                                             x1484)
                                                   ~array:(Ojs.list_of_js
                                                             Obj.magic x1485))))|]);
                             (match x1480 with
                              | Some x1482 ->
                                  ignore
                                    (Ojs.call x1481 "push"
                                       [|(any_to_js x1482)|])
                              | None -> ());
                             x1481))|])
    let (filter' :
      ('tags, 'T) this ->
        predicate:(value:'T -> index:float -> array:'T list -> unknown) ->
          ?thisArg:any -> unit -> 'T list)
      =
      fun (x1500 : ('tags, 'T) this) ->
        fun
          ~predicate:(x1492 :
                       value:'T -> index:float -> array:'T list -> unknown)
          ->
          fun ?thisArg:(x1493 : any option) ->
            fun () ->
              Ojs.list_of_js Obj.magic
                (let x1503 = this_to_js Obj.magic Obj.magic x1500 in
                 Ojs.call (Ojs.get_prop_ascii x1503 "filter") "apply"
                   [|x1503;((let x1494 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1494 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x1496 : Ojs.t) ->
                                          fun (x1497 : Ojs.t) ->
                                            fun (x1498 : Ojs.t) ->
                                              unknown_to_js
                                                (x1492
                                                   ~value:(Obj.magic x1496)
                                                   ~index:(Ojs.float_of_js
                                                             x1497)
                                                   ~array:(Ojs.list_of_js
                                                             Obj.magic x1498))))|]);
                             (match x1493 with
                              | Some x1495 ->
                                  ignore
                                    (Ojs.call x1494 "push"
                                       [|(any_to_js x1495)|])
                              | None -> ());
                             x1494))|])
    let (reduce :
      ('tags, 'T) this ->
        callbackfn:(previousValue:'T ->
                      currentValue:'T ->
                        currentIndex:float -> array:'T list -> 'T)
          -> 'T)
      =
      fun (x1511 : ('tags, 'T) this) ->
        fun
          ~callbackfn:(x1505 :
                        previousValue:'T ->
                          currentValue:'T ->
                            currentIndex:float -> array:'T list -> 'T)
          ->
          Obj.magic
            (Ojs.call (this_to_js Obj.magic Obj.magic x1511) "reduce"
               [|(Ojs.fun_to_js 4
                    (fun (x1506 : Ojs.t) ->
                       fun (x1507 : Ojs.t) ->
                         fun (x1508 : Ojs.t) ->
                           fun (x1509 : Ojs.t) ->
                             Obj.magic
                               (x1505 ~previousValue:(Obj.magic x1506)
                                  ~currentValue:(Obj.magic x1507)
                                  ~currentIndex:(Ojs.float_of_js x1508)
                                  ~array:(Ojs.list_of_js Obj.magic x1509))))|])
    let (reduce' :
      ('tags, 'T) this ->
        callbackfn:(previousValue:'T ->
                      currentValue:'T ->
                        currentIndex:float -> array:'T list -> 'T)
          -> initialValue:'T -> 'T)
      =
      fun (x1521 : ('tags, 'T) this) ->
        fun
          ~callbackfn:(x1514 :
                        previousValue:'T ->
                          currentValue:'T ->
                            currentIndex:float -> array:'T list -> 'T)
          ->
          fun ~initialValue:(x1520 : 'T) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic Obj.magic x1521) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x1515 : Ojs.t) ->
                         fun (x1516 : Ojs.t) ->
                           fun (x1517 : Ojs.t) ->
                             fun (x1518 : Ojs.t) ->
                               Obj.magic
                                 (x1514 ~previousValue:(Obj.magic x1515)
                                    ~currentValue:(Obj.magic x1516)
                                    ~currentIndex:(Ojs.float_of_js x1517)
                                    ~array:(Ojs.list_of_js Obj.magic x1518))));(
                   Obj.magic x1520)|])
    let (reduce'' :
      ('tags, 'T) this ->
        callbackfn:(previousValue:'U ->
                      currentValue:'T ->
                        currentIndex:float -> array:'T list -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x1531 : ('tags, 'T) this) ->
        fun
          ~callbackfn:(x1524 :
                        previousValue:'U ->
                          currentValue:'T ->
                            currentIndex:float -> array:'T list -> 'U)
          ->
          fun ~initialValue:(x1530 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic Obj.magic x1531) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x1525 : Ojs.t) ->
                         fun (x1526 : Ojs.t) ->
                           fun (x1527 : Ojs.t) ->
                             fun (x1528 : Ojs.t) ->
                               Obj.magic
                                 (x1524 ~previousValue:(Obj.magic x1525)
                                    ~currentValue:(Obj.magic x1526)
                                    ~currentIndex:(Ojs.float_of_js x1527)
                                    ~array:(Ojs.list_of_js Obj.magic x1528))));(
                   Obj.magic x1530)|])
    let (reduceRight :
      ('tags, 'T) this ->
        callbackfn:(previousValue:'T ->
                      currentValue:'T ->
                        currentIndex:float -> array:'T list -> 'T)
          -> 'T)
      =
      fun (x1540 : ('tags, 'T) this) ->
        fun
          ~callbackfn:(x1534 :
                        previousValue:'T ->
                          currentValue:'T ->
                            currentIndex:float -> array:'T list -> 'T)
          ->
          Obj.magic
            (Ojs.call (this_to_js Obj.magic Obj.magic x1540) "reduceRight"
               [|(Ojs.fun_to_js 4
                    (fun (x1535 : Ojs.t) ->
                       fun (x1536 : Ojs.t) ->
                         fun (x1537 : Ojs.t) ->
                           fun (x1538 : Ojs.t) ->
                             Obj.magic
                               (x1534 ~previousValue:(Obj.magic x1535)
                                  ~currentValue:(Obj.magic x1536)
                                  ~currentIndex:(Ojs.float_of_js x1537)
                                  ~array:(Ojs.list_of_js Obj.magic x1538))))|])
    let (reduceRight' :
      ('tags, 'T) this ->
        callbackfn:(previousValue:'T ->
                      currentValue:'T ->
                        currentIndex:float -> array:'T list -> 'T)
          -> initialValue:'T -> 'T)
      =
      fun (x1550 : ('tags, 'T) this) ->
        fun
          ~callbackfn:(x1543 :
                        previousValue:'T ->
                          currentValue:'T ->
                            currentIndex:float -> array:'T list -> 'T)
          ->
          fun ~initialValue:(x1549 : 'T) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic Obj.magic x1550) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x1544 : Ojs.t) ->
                         fun (x1545 : Ojs.t) ->
                           fun (x1546 : Ojs.t) ->
                             fun (x1547 : Ojs.t) ->
                               Obj.magic
                                 (x1543 ~previousValue:(Obj.magic x1544)
                                    ~currentValue:(Obj.magic x1545)
                                    ~currentIndex:(Ojs.float_of_js x1546)
                                    ~array:(Ojs.list_of_js Obj.magic x1547))));(
                   Obj.magic x1549)|])
    let (reduceRight'' :
      ('tags, 'T) this ->
        callbackfn:(previousValue:'U ->
                      currentValue:'T ->
                        currentIndex:float -> array:'T list -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x1560 : ('tags, 'T) this) ->
        fun
          ~callbackfn:(x1553 :
                        previousValue:'U ->
                          currentValue:'T ->
                            currentIndex:float -> array:'T list -> 'U)
          ->
          fun ~initialValue:(x1559 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic Obj.magic x1560) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x1554 : Ojs.t) ->
                         fun (x1555 : Ojs.t) ->
                           fun (x1556 : Ojs.t) ->
                             fun (x1557 : Ojs.t) ->
                               Obj.magic
                                 (x1553 ~previousValue:(Obj.magic x1554)
                                    ~currentValue:(Obj.magic x1555)
                                    ~currentIndex:(Ojs.float_of_js x1556)
                                    ~array:(Ojs.list_of_js Obj.magic x1557))));(
                   Obj.magic x1559)|])
    let (get : ('tags, 'T) this -> float -> 'T) =
      fun (x1563 : ('tags, 'T) this) ->
        fun (x1566 : float) ->
          Obj.magic
            (Ojs.get_prop (this_to_js Obj.magic Obj.magic x1563)
               (Ojs.float_to_js x1566))
    let (set : ('tags, 'T) this -> float -> 'T -> unit) =
      fun (x1567 : ('tags, 'T) this) ->
        fun (x1570 : float) ->
          fun (x1571 : 'T) ->
            Ojs.set_prop (this_to_js Obj.magic Obj.magic x1567)
              (Ojs.float_to_js x1570) (Obj.magic x1571)
    let (from : [ `U1 of 'T Iterable.t  | `U2 of 'T ArrayLike.t ] -> 'T list)
      =
      fun (x1572 : [ `U1 of 'T Iterable.t  | `U2 of 'T ArrayLike.t ]) ->
        Ojs.list_of_js Obj.magic
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Array") "from"
             [|((match x1572 with
                 | `U1 x1573 -> Iterable.t_to_js Obj.magic x1573
                 | `U2 x1575 -> ArrayLike.t_to_js Obj.magic x1575))|])
    let (from' :
      iterable:[ `U1 of 'T Iterable.t  | `U2 of 'T ArrayLike.t ] ->
        mapfn:(v:'T -> k:float -> 'U) -> ?thisArg:any -> unit -> 'U list)
      =
      fun
        ~iterable:(x1578 : [ `U1 of 'T Iterable.t  | `U2 of 'T ArrayLike.t ])
        ->
        fun ~mapfn:(x1579 : v:'T -> k:float -> 'U) ->
          fun ?thisArg:(x1580 : any option) ->
            fun () ->
              Ojs.list_of_js Obj.magic
                (let x1589 = Ojs.get_prop_ascii Ojs.global "Array" in
                 Ojs.call (Ojs.get_prop_ascii x1589 "from") "apply"
                   [|x1589;((let x1581 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1581 "push"
                                  [|((match x1578 with
                                      | `U1 x1585 ->
                                          Iterable.t_to_js Obj.magic x1585
                                      | `U2 x1587 ->
                                          ArrayLike.t_to_js Obj.magic x1587))|]);
                             ignore
                               (Ojs.call x1581 "push"
                                  [|(Ojs.fun_to_js 2
                                       (fun (x1583 : Ojs.t) ->
                                          fun (x1584 : Ojs.t) ->
                                            Obj.magic
                                              (x1579 ~v:(Obj.magic x1583)
                                                 ~k:(Ojs.float_of_js x1584))))|]);
                             (match x1580 with
                              | Some x1582 ->
                                  ignore
                                    (Ojs.call x1581 "push"
                                       [|(any_to_js x1582)|])
                              | None -> ());
                             x1581))|])
    let (from'' : 'T ArrayLike.t -> 'T list) =
      fun (x1591 : 'T ArrayLike.t) ->
        Ojs.list_of_js Obj.magic
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Array") "from"
             [|(ArrayLike.t_to_js Obj.magic x1591)|])
    let (from''' :
      arrayLike:'T ArrayLike.t ->
        mapfn:(v:'T -> k:float -> 'U) -> ?thisArg:any -> unit -> 'U list)
      =
      fun ~arrayLike:(x1594 : 'T ArrayLike.t) ->
        fun ~mapfn:(x1595 : v:'T -> k:float -> 'U) ->
          fun ?thisArg:(x1596 : any option) ->
            fun () ->
              Ojs.list_of_js Obj.magic
                (let x1602 = Ojs.get_prop_ascii Ojs.global "Array" in
                 Ojs.call (Ojs.get_prop_ascii x1602 "from") "apply"
                   [|x1602;((let x1597 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1597 "push"
                                  [|(ArrayLike.t_to_js Obj.magic x1594)|]);
                             ignore
                               (Ojs.call x1597 "push"
                                  [|(Ojs.fun_to_js 2
                                       (fun (x1599 : Ojs.t) ->
                                          fun (x1600 : Ojs.t) ->
                                            Obj.magic
                                              (x1595 ~v:(Obj.magic x1599)
                                                 ~k:(Ojs.float_of_js x1600))))|]);
                             (match x1596 with
                              | Some x1598 ->
                                  ignore
                                    (Ojs.call x1597 "push"
                                       [|(any_to_js x1598)|])
                              | None -> ());
                             x1597))|])
    let (of_ : 'T list -> 'T list) =
      fun (x1604 : 'T list) ->
        Ojs.list_of_js Obj.magic
          (let x1607 = Ojs.get_prop_ascii Ojs.global "Array" in
           Ojs.call (Ojs.get_prop_ascii x1607 "of") "apply"
             [|x1607;((let x1605 =
                         Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                           [||] in
                       List.iter
                         (fun (x1606 : 'T) ->
                            ignore
                              (Ojs.call x1605 "push" [|(Obj.magic x1606)|]))
                         x1604;
                       x1605))|])
    let (create : ?arrayLength:float -> unit -> any list) =
      fun ?arrayLength:(x1609 : float option) ->
        fun () ->
          Ojs.list_of_js any_of_js
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "Array")
               (let x1610 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x1609 with
                 | Some x1611 ->
                     ignore
                       (Ojs.call x1610 "push" [|(Ojs.float_to_js x1611)|])
                 | None -> ());
                x1610))
    let (create' : float -> 'T list) =
      fun (x1613 : float) ->
        Ojs.list_of_js Obj.magic
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
             [|(Ojs.float_to_js x1613)|])
    let (create'' : 'T list -> 'T list) =
      fun (x1615 : 'T list) ->
        Ojs.list_of_js Obj.magic
          (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "Array")
             (let x1616 =
                Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
              List.iter
                (fun (x1617 : 'T) ->
                   ignore (Ojs.call x1616 "push" [|(Obj.magic x1617)|]))
                x1615;
              x1616))
    let (invoke : ?arrayLength:float -> unit -> any list) =
      fun ?arrayLength:(x1619 : float option) ->
        fun () ->
          Ojs.list_of_js any_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "Array") "apply"
               [|Ojs.null;((let x1620 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x1619 with
                             | Some x1621 ->
                                 ignore
                                   (Ojs.call x1620 "push"
                                      [|(Ojs.float_to_js x1621)|])
                             | None -> ());
                            x1620))|])
    let (invoke' : float -> 'T list) =
      fun (x1623 : float) ->
        Ojs.list_of_js Obj.magic
          (Ojs.apply (Ojs.get_prop_ascii Ojs.global "Array")
             [|(Ojs.float_to_js x1623)|])
    let (invoke'' : 'T list -> 'T list) =
      fun (x1625 : 'T list) ->
        Ojs.list_of_js Obj.magic
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Array") "apply"
             [|Ojs.null;((let x1626 =
                            Ojs.new_obj
                              (Ojs.get_prop_ascii Ojs.global "Array") 
                              [||] in
                          List.iter
                            (fun (x1627 : 'T) ->
                               ignore
                                 (Ojs.call x1626 "push" [|(Obj.magic x1627)|]))
                            x1625;
                          x1626))|])
    let (isArray : any -> bool) =
      fun (x1629 : any) ->
        Ojs.bool_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Array") "isArray"
             [|(any_to_js x1629)|])
    let (prototype : unit -> any list) =
      fun () ->
        Ojs.list_of_js any_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Array")
             "prototype")
    let cast_from = Obj.magic
    let (of_ml : 'T list -> 'T t) =
      fun (x1631 : 'T list) ->
        t_of_js Obj.magic (Ojs.list_to_js Obj.magic x1631)
    let (to_ml : 'T t -> 'T list) =
      fun (x1634 : 'T t) ->
        Ojs.list_of_js Obj.magic (t_to_js Obj.magic x1634)
  end
module RegExpMatchArray =
  struct
    module AnonymousInterface16 =
      struct
        type t = Ojs.t
        let rec t_of_js : Ojs.t -> t = fun (x1638 : Ojs.t) -> x1638
        and t_to_js : t -> Ojs.t = fun (x1637 : Ojs.t) -> x1637
        let (get : t -> string -> string) =
          fun (x1639 : t) ->
            fun (x1640 : string) ->
              Ojs.string_of_js
                (Ojs.get_prop (t_to_js x1639) (Ojs.string_to_js x1640))
        let (set : t -> string -> string -> unit) =
          fun (x1641 : t) ->
            fun (x1642 : string) ->
              fun (x1643 : string) ->
                Ojs.set_prop (t_to_js x1641) (Ojs.string_to_js x1642)
                  (Ojs.string_to_js x1643)
      end
    type t =
      [ `Array of string  | `Array of string  | `RegExpMatchArray 
      | string ArrayLike.tags_1 | string IterableIterator.tags_1] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x1645 : Ojs.t) -> t_of_js x1645
    and t_0_to_js : t_0 -> Ojs.t = fun (x1644 : t) -> t_to_js x1644
    type tags =
      [ `Array of string  | `Array of string  | `RegExpMatchArray 
      | string ArrayLike.tags_1 | string IterableIterator.tags_1]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `RegExpMatchArray ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x1648 : Ojs.t) -> intf_of_js __tags_of_js x1648
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x1646 : __tags intf) -> intf_to_js __tags_to_js x1646
    let (get_groups : 'tags this -> AnonymousInterface16.t option) =
      fun (x1650 : 'tags this) ->
        Ojs.option_of_js AnonymousInterface16.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x1650) "groups")
    let (set_groups : 'tags this -> AnonymousInterface16.t -> unit) =
      fun (x1653 : 'tags this) ->
        fun (x1654 : AnonymousInterface16.t) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x1653) "groups"
            (AnonymousInterface16.t_to_js x1654)
    let (get_index : 'tags this -> float option) =
      fun (x1656 : 'tags this) ->
        Ojs.option_of_js Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x1656) "index")
    let (set_index : 'tags this -> float -> unit) =
      fun (x1659 : 'tags this) ->
        fun (x1660 : float) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x1659) "index"
            (Ojs.float_to_js x1660)
    let (get_input : 'tags this -> string option) =
      fun (x1662 : 'tags this) ->
        Ojs.option_of_js Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x1662) "input")
    let (set_input : 'tags this -> string -> unit) =
      fun (x1665 : 'tags this) ->
        fun (x1666 : string) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x1665) "input"
            (Ojs.string_to_js x1666)
    let (create :
      ?groups:AnonymousInterface16.t ->
        ?index:float -> ?input:string -> unit -> t)
      =
      fun ?groups:(x1668 : AnonymousInterface16.t option) ->
        fun ?index:(x1669 : float option) ->
          fun ?input:(x1670 : string option) ->
            fun () ->
              let x1671 = Ojs.empty_obj () in
              (match x1668 with
               | Some x1674 ->
                   Ojs.set_prop_ascii x1671 "groups"
                     (AnonymousInterface16.t_to_js x1674)
               | None -> ());
              (match x1669 with
               | Some x1673 ->
                   Ojs.set_prop_ascii x1671 "index" (Ojs.float_to_js x1673)
               | None -> ());
              (match x1670 with
               | Some x1672 ->
                   Ojs.set_prop_ascii x1671 "input" (Ojs.string_to_js x1672)
               | None -> ());
              t_of_js x1671
    let cast_from = Obj.magic
  end
module RegExpExecArray =
  struct
    module AnonymousInterface16 =
      struct
        type t = Ojs.t
        let rec t_of_js : Ojs.t -> t = fun (x1676 : Ojs.t) -> x1676
        and t_to_js : t -> Ojs.t = fun (x1675 : Ojs.t) -> x1675
        let (get : t -> string -> string) =
          fun (x1677 : t) ->
            fun (x1678 : string) ->
              Ojs.string_of_js
                (Ojs.get_prop (t_to_js x1677) (Ojs.string_to_js x1678))
        let (set : t -> string -> string -> unit) =
          fun (x1679 : t) ->
            fun (x1680 : string) ->
              fun (x1681 : string) ->
                Ojs.set_prop (t_to_js x1679) (Ojs.string_to_js x1680)
                  (Ojs.string_to_js x1681)
      end
    type t =
      [ `Array of string  | `Array of string  | `RegExpExecArray 
      | string ArrayLike.tags_1 | string IterableIterator.tags_1] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x1683 : Ojs.t) -> t_of_js x1683
    and t_0_to_js : t_0 -> Ojs.t = fun (x1682 : t) -> t_to_js x1682
    type tags =
      [ `Array of string  | `Array of string  | `RegExpExecArray 
      | string ArrayLike.tags_1 | string IterableIterator.tags_1]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `RegExpExecArray ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x1686 : Ojs.t) -> intf_of_js __tags_of_js x1686
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x1684 : __tags intf) -> intf_to_js __tags_to_js x1684
    let (get_groups : 'tags this -> AnonymousInterface16.t option) =
      fun (x1688 : 'tags this) ->
        Ojs.option_of_js AnonymousInterface16.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x1688) "groups")
    let (set_groups : 'tags this -> AnonymousInterface16.t -> unit) =
      fun (x1691 : 'tags this) ->
        fun (x1692 : AnonymousInterface16.t) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x1691) "groups"
            (AnonymousInterface16.t_to_js x1692)
    let (get_index : 'tags this -> float) =
      fun (x1694 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x1694) "index")
    let (set_index : 'tags this -> float -> unit) =
      fun (x1696 : 'tags this) ->
        fun (x1697 : float) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x1696) "index"
            (Ojs.float_to_js x1697)
    let (get_input : 'tags this -> string) =
      fun (x1699 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x1699) "input")
    let (set_input : 'tags this -> string -> unit) =
      fun (x1701 : 'tags this) ->
        fun (x1702 : string) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x1701) "input"
            (Ojs.string_to_js x1702)
    let (create :
      ?groups:AnonymousInterface16.t ->
        index:float -> input:string -> unit -> t)
      =
      fun ?groups:(x1704 : AnonymousInterface16.t option) ->
        fun ~index:(x1705 : float) ->
          fun ~input:(x1706 : string) ->
            fun () ->
              let x1707 = Ojs.empty_obj () in
              (match x1704 with
               | Some x1708 ->
                   Ojs.set_prop_ascii x1707 "groups"
                     (AnonymousInterface16.t_to_js x1708)
               | None -> ());
              Ojs.set_prop_ascii x1707 "index" (Ojs.float_to_js x1705);
              Ojs.set_prop_ascii x1707 "input" (Ojs.string_to_js x1706);
              t_of_js x1707
    let cast_from = Obj.magic
  end
module RegExp =
  struct
    type t = [ `RegExp ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x1710 : Ojs.t) -> t_of_js x1710
    and t_0_to_js : t_0 -> Ojs.t = fun (x1709 : t) -> t_to_js x1709
    type tags = [ `RegExp ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `RegExp ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x1713 : Ojs.t) -> intf_of_js __tags_of_js x1713
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x1711 : __tags intf) -> intf_to_js __tags_to_js x1711
    let (get_dotAll : 'tags this -> bool) =
      fun (x1715 : 'tags this) ->
        Ojs.bool_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x1715) "dotAll")
    let (get_flags : 'tags this -> string) =
      fun (x1717 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x1717) "flags")
    let (get_sticky : 'tags this -> bool) =
      fun (x1719 : 'tags this) ->
        Ojs.bool_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x1719) "sticky")
    let (get_unicode : 'tags this -> bool) =
      fun (x1721 : 'tags this) ->
        Ojs.bool_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x1721) "unicode")
    let (exec : 'tags this -> string:string -> RegExpExecArray.t option) =
      fun (x1724 : 'tags this) ->
        fun ~string:(x1723 : string) ->
          Ojs.option_of_js RegExpExecArray.t_of_js
            (Ojs.call (this_to_js Obj.magic x1724) "exec"
               [|(Ojs.string_to_js x1723)|])
    let (test : 'tags this -> string:string -> bool) =
      fun (x1728 : 'tags this) ->
        fun ~string:(x1727 : string) ->
          Ojs.bool_of_js
            (Ojs.call (this_to_js Obj.magic x1728) "test"
               [|(Ojs.string_to_js x1727)|])
    let (get_source : 'tags this -> string) =
      fun (x1730 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x1730) "source")
    let (get_global : 'tags this -> bool) =
      fun (x1732 : 'tags this) ->
        Ojs.bool_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x1732) "global")
    let (get_ignoreCase : 'tags this -> bool) =
      fun (x1734 : 'tags this) ->
        Ojs.bool_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x1734) "ignoreCase")
    let (get_multiline : 'tags this -> bool) =
      fun (x1736 : 'tags this) ->
        Ojs.bool_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x1736) "multiline")
    let (get_lastIndex : 'tags this -> float) =
      fun (x1738 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x1738) "lastIndex")
    let (set_lastIndex : 'tags this -> float -> unit) =
      fun (x1740 : 'tags this) ->
        fun (x1741 : float) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x1740) "lastIndex"
            (Ojs.float_to_js x1741)
    let (compile :
      'tags this -> pattern:string -> ?flags:string -> unit -> 'tags this) =
      fun (x1747 : 'tags this) ->
        fun ~pattern:(x1743 : string) ->
          fun ?flags:(x1744 : string option) ->
            fun () ->
              this_of_js Obj.magic
                (let x1749 = this_to_js Obj.magic x1747 in
                 Ojs.call (Ojs.get_prop_ascii x1749 "compile") "apply"
                   [|x1749;((let x1745 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1745 "push"
                                  [|(Ojs.string_to_js x1743)|]);
                             (match x1744 with
                              | Some x1746 ->
                                  ignore
                                    (Ojs.call x1745 "push"
                                       [|(Ojs.string_to_js x1746)|])
                              | None -> ());
                             x1745))|])
    let (create :
      pattern:[ `U1 of t  | `U2 of string ] -> ?flags:string -> unit -> t) =
      fun ~pattern:(x1751 : [ `U1 of t  | `U2 of string ]) ->
        fun ?flags:(x1752 : string option) ->
          fun () ->
            t_of_js
              (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "RegExp")
                 (let x1753 =
                    Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                  ignore
                    (Ojs.call x1753 "push"
                       [|((match x1751 with
                           | `U1 x1755 -> t_to_js x1755
                           | `U2 x1756 -> Ojs.string_to_js x1756))|]);
                  (match x1752 with
                   | Some x1754 ->
                       ignore
                         (Ojs.call x1753 "push" [|(Ojs.string_to_js x1754)|])
                   | None -> ());
                  x1753))
    let (invoke :
      pattern:[ `U1 of t  | `U2 of string ] -> ?flags:string -> unit -> t) =
      fun ~pattern:(x1757 : [ `U1 of t  | `U2 of string ]) ->
        fun ?flags:(x1758 : string option) ->
          fun () ->
            t_of_js
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "RegExp") "apply"
                 [|Ojs.null;((let x1759 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x1759 "push"
                                   [|((match x1757 with
                                       | `U1 x1761 -> t_to_js x1761
                                       | `U2 x1762 -> Ojs.string_to_js x1762))|]);
                              (match x1758 with
                               | Some x1760 ->
                                   ignore
                                     (Ojs.call x1759 "push"
                                        [|(Ojs.string_to_js x1760)|])
                               | None -> ());
                              x1759))|])
    let (create' : [ `U1 of t  | `U2 of string ] -> t) =
      fun (x1763 : [ `U1 of t  | `U2 of string ]) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "RegExp")
             [|((match x1763 with
                 | `U1 x1764 -> t_to_js x1764
                 | `U2 x1765 -> Ojs.string_to_js x1765))|])
    let (create'' : pattern:string -> ?flags:string -> unit -> t) =
      fun ~pattern:(x1766 : string) ->
        fun ?flags:(x1767 : string option) ->
          fun () ->
            t_of_js
              (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "RegExp")
                 (let x1768 =
                    Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                  ignore (Ojs.call x1768 "push" [|(Ojs.string_to_js x1766)|]);
                  (match x1767 with
                   | Some x1769 ->
                       ignore
                         (Ojs.call x1768 "push" [|(Ojs.string_to_js x1769)|])
                   | None -> ());
                  x1768))
    let (invoke' : [ `U1 of t  | `U2 of string ] -> t) =
      fun (x1770 : [ `U1 of t  | `U2 of string ]) ->
        t_of_js
          (Ojs.apply (Ojs.get_prop_ascii Ojs.global "RegExp")
             [|((match x1770 with
                 | `U1 x1771 -> t_to_js x1771
                 | `U2 x1772 -> Ojs.string_to_js x1772))|])
    let (invoke'' : pattern:string -> ?flags:string -> unit -> t) =
      fun ~pattern:(x1773 : string) ->
        fun ?flags:(x1774 : string option) ->
          fun () ->
            t_of_js
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "RegExp") "apply"
                 [|Ojs.null;((let x1775 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x1775 "push"
                                   [|(Ojs.string_to_js x1773)|]);
                              (match x1774 with
                               | Some x1776 ->
                                   ignore
                                     (Ojs.call x1775 "push"
                                        [|(Ojs.string_to_js x1776)|])
                               | None -> ());
                              x1775))|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "RegExp")
             "prototype")
    let (_1 : unit -> string) =
      fun () ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "RegExp") "$1")
    let (_2 : unit -> string) =
      fun () ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "RegExp") "$2")
    let (_3 : unit -> string) =
      fun () ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "RegExp") "$3")
    let (_4 : unit -> string) =
      fun () ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "RegExp") "$4")
    let (_5 : unit -> string) =
      fun () ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "RegExp") "$5")
    let (_6 : unit -> string) =
      fun () ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "RegExp") "$6")
    let (_7 : unit -> string) =
      fun () ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "RegExp") "$7")
    let (_8 : unit -> string) =
      fun () ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "RegExp") "$8")
    let (_9 : unit -> string) =
      fun () ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "RegExp") "$9")
    let (input : unit -> string) =
      fun () ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "RegExp")
             "input")
    let (__ : unit -> string) =
      fun () ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "RegExp") "$_")
    let (lastMatch : unit -> string) =
      fun () ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "RegExp")
             "lastMatch")
    let (__' : unit -> string) =
      fun () ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "RegExp") "$&")
    let (lastParen : unit -> string) =
      fun () ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "RegExp")
             "lastParen")
    let (__'' : unit -> string) =
      fun () ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "RegExp") "$+")
    let (leftContext : unit -> string) =
      fun () ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "RegExp")
             "leftContext")
    let (__''' : unit -> string) =
      fun () ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "RegExp") "$`")
    let (rightContext : unit -> string) =
      fun () ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "RegExp")
             "rightContext")
    let (__'''' : unit -> string) =
      fun () ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "RegExp") "$'")
    let cast_from = Obj.magic
  end
module Partial =
  struct
    type 'T t = any
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun (type __T) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x1778 : Ojs.t) -> any_of_js x1778
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t =
      fun (type __T) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x1777 : any) -> any_to_js x1777
    type 'T t_1 = 'T t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 =
      fun (type __T) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x1781 : Ojs.t) -> t_of_js __T_of_js x1781
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t =
      fun (type __T) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x1779 : __T t) -> t_to_js __T_to_js x1779
  end
module rec
  Date:sig
         type t = [ `Date ] intf
         type t_0 = t
         [@@@js.stop ]
         type tags = [ `Date ]
         type tags_0 = tags
         [@@@js.start ]
         [@@@js.implem type tags = [ `Date ]
           type tags_0 = tags]
         type 'tags this = 'tags intf constraint 'tags = [> `Date ]
         val t_to_js : t -> Ojs.t
         val t_of_js : Ojs.t -> t
         val t_0_to_js : t_0 -> Ojs.t
         val t_0_of_js : Ojs.t -> t_0
         val toLocaleString :
           'tags this ->
             ?locales:[ `U1 of string  | `U2 of string list ] ->
               ?options:Intl.DateTimeFormatOptions.t -> unit -> string
         val toLocaleDateString :
           'tags this ->
             ?locales:[ `U1 of string  | `U2 of string list ] ->
               ?options:Intl.DateTimeFormatOptions.t -> unit -> string
         val toLocaleTimeString :
           'tags this ->
             ?locales:[ `U1 of string  | `U2 of string list ] ->
               ?options:Intl.DateTimeFormatOptions.t -> unit -> string
         val toString : 'tags this -> string
         val toDateString : 'tags this -> string
         val toTimeString : 'tags this -> string
         val toLocaleString' : 'tags this -> string
         val toLocaleDateString' : 'tags this -> string
         val toLocaleTimeString' : 'tags this -> string
         val valueOf : 'tags this -> float
         val getTime : 'tags this -> float
         val getFullYear : 'tags this -> float
         val getUTCFullYear : 'tags this -> float
         val getMonth : 'tags this -> float
         val getUTCMonth : 'tags this -> float
         val getDate : 'tags this -> float
         val getUTCDate : 'tags this -> float
         val getDay : 'tags this -> float
         val getUTCDay : 'tags this -> float
         val getHours : 'tags this -> float
         val getUTCHours : 'tags this -> float
         val getMinutes : 'tags this -> float
         val getUTCMinutes : 'tags this -> float
         val getSeconds : 'tags this -> float
         val getUTCSeconds : 'tags this -> float
         val getMilliseconds : 'tags this -> float
         val getUTCMilliseconds : 'tags this -> float
         val getTimezoneOffset : 'tags this -> float
         val setTime : 'tags this -> time:float -> float
         val setMilliseconds : 'tags this -> ms:float -> float
         val setUTCMilliseconds : 'tags this -> ms:float -> float
         val setSeconds :
           'tags this -> sec:float -> ?ms:float -> unit -> float
         val setUTCSeconds :
           'tags this -> sec:float -> ?ms:float -> unit -> float
         val setMinutes :
           'tags this ->
             min:float -> ?sec:float -> ?ms:float -> unit -> float
         val setUTCMinutes :
           'tags this ->
             min:float -> ?sec:float -> ?ms:float -> unit -> float
         val setHours :
           'tags this ->
             hours:float ->
               ?min:float -> ?sec:float -> ?ms:float -> unit -> float
         val setUTCHours :
           'tags this ->
             hours:float ->
               ?min:float -> ?sec:float -> ?ms:float -> unit -> float
         val setDate : 'tags this -> date:float -> float
         val setUTCDate : 'tags this -> date:float -> float
         val setMonth :
           'tags this -> month:float -> ?date:float -> unit -> float
         val setUTCMonth :
           'tags this -> month:float -> ?date:float -> unit -> float
         val setFullYear :
           'tags this ->
             year:float -> ?month:float -> ?date:float -> unit -> float
         val setUTCFullYear :
           'tags this ->
             year:float -> ?month:float -> ?date:float -> unit -> float
         val toUTCString : 'tags this -> string
         val toISOString : 'tags this -> string
         val toJSON : 'tags this -> ?key:any -> unit -> string
         val create : [ `U1 of float  | `U2 of string  | `U3 of t ] -> t
         val create' : unit -> t
         val create'' : [ `U1 of float  | `U2 of string ] -> t
         val create''' :
           year:float ->
             month:float ->
               ?date:float ->
                 ?hours:float ->
                   ?minutes:float -> ?seconds:float -> ?ms:float -> unit -> t
         val invoke : unit -> string
         val prototype : unit -> t
         val parse : string -> float
         val utc :
           year:float ->
             month:float ->
               ?date:float ->
                 ?hours:float ->
                   ?minutes:float ->
                     ?seconds:float -> ?ms:float -> unit -> float
         val now : unit -> float
         val cast_from : 'tags this -> t
       end =
  struct
    type t = [ `Date ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x1784 : Ojs.t) -> t_of_js x1784
    and t_0_to_js : t_0 -> Ojs.t = fun (x1783 : t) -> t_to_js x1783
    type tags = [ `Date ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `Date ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x1787 : Ojs.t) -> intf_of_js __tags_of_js x1787
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x1785 : __tags intf) -> intf_to_js __tags_to_js x1785
    let (toLocaleString :
      'tags this ->
        ?locales:[ `U1 of string  | `U2 of string list ] ->
          ?options:Intl.DateTimeFormatOptions.t -> unit -> string)
      =
      fun (x1797 : 'tags this) ->
        fun ?locales:(x1789 : [ `U1 of string  | `U2 of string list ] option)
          ->
          fun ?options:(x1790 : Intl.DateTimeFormatOptions.t option) ->
            fun () ->
              Ojs.string_of_js
                (let x1799 = this_to_js Obj.magic x1797 in
                 Ojs.call (Ojs.get_prop_ascii x1799 "toLocaleString") "apply"
                   [|x1799;((let x1791 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x1789 with
                              | Some x1793 ->
                                  ignore
                                    (Ojs.call x1791 "push"
                                       [|((match x1793 with
                                           | `U1 x1794 ->
                                               Ojs.string_to_js x1794
                                           | `U2 x1795 ->
                                               Ojs.list_to_js
                                                 Ojs.string_to_js x1795))|])
                              | None -> ());
                             (match x1790 with
                              | Some x1792 ->
                                  ignore
                                    (Ojs.call x1791 "push"
                                       [|(Intl.DateTimeFormatOptions.t_to_js
                                            x1792)|])
                              | None -> ());
                             x1791))|])
    let (toLocaleDateString :
      'tags this ->
        ?locales:[ `U1 of string  | `U2 of string list ] ->
          ?options:Intl.DateTimeFormatOptions.t -> unit -> string)
      =
      fun (x1808 : 'tags this) ->
        fun ?locales:(x1800 : [ `U1 of string  | `U2 of string list ] option)
          ->
          fun ?options:(x1801 : Intl.DateTimeFormatOptions.t option) ->
            fun () ->
              Ojs.string_of_js
                (let x1810 = this_to_js Obj.magic x1808 in
                 Ojs.call (Ojs.get_prop_ascii x1810 "toLocaleDateString")
                   "apply"
                   [|x1810;((let x1802 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x1800 with
                              | Some x1804 ->
                                  ignore
                                    (Ojs.call x1802 "push"
                                       [|((match x1804 with
                                           | `U1 x1805 ->
                                               Ojs.string_to_js x1805
                                           | `U2 x1806 ->
                                               Ojs.list_to_js
                                                 Ojs.string_to_js x1806))|])
                              | None -> ());
                             (match x1801 with
                              | Some x1803 ->
                                  ignore
                                    (Ojs.call x1802 "push"
                                       [|(Intl.DateTimeFormatOptions.t_to_js
                                            x1803)|])
                              | None -> ());
                             x1802))|])
    let (toLocaleTimeString :
      'tags this ->
        ?locales:[ `U1 of string  | `U2 of string list ] ->
          ?options:Intl.DateTimeFormatOptions.t -> unit -> string)
      =
      fun (x1819 : 'tags this) ->
        fun ?locales:(x1811 : [ `U1 of string  | `U2 of string list ] option)
          ->
          fun ?options:(x1812 : Intl.DateTimeFormatOptions.t option) ->
            fun () ->
              Ojs.string_of_js
                (let x1821 = this_to_js Obj.magic x1819 in
                 Ojs.call (Ojs.get_prop_ascii x1821 "toLocaleTimeString")
                   "apply"
                   [|x1821;((let x1813 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x1811 with
                              | Some x1815 ->
                                  ignore
                                    (Ojs.call x1813 "push"
                                       [|((match x1815 with
                                           | `U1 x1816 ->
                                               Ojs.string_to_js x1816
                                           | `U2 x1817 ->
                                               Ojs.list_to_js
                                                 Ojs.string_to_js x1817))|])
                              | None -> ());
                             (match x1812 with
                              | Some x1814 ->
                                  ignore
                                    (Ojs.call x1813 "push"
                                       [|(Intl.DateTimeFormatOptions.t_to_js
                                            x1814)|])
                              | None -> ());
                             x1813))|])
    let (toString : 'tags this -> string) =
      fun (x1822 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x1822) "toString" [||])
    let (toDateString : 'tags this -> string) =
      fun (x1824 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x1824) "toDateString" [||])
    let (toTimeString : 'tags this -> string) =
      fun (x1826 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x1826) "toTimeString" [||])
    let (toLocaleString' : 'tags this -> string) =
      fun (x1828 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x1828) "toLocaleString" [||])
    let (toLocaleDateString' : 'tags this -> string) =
      fun (x1830 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x1830) "toLocaleDateString" [||])
    let (toLocaleTimeString' : 'tags this -> string) =
      fun (x1832 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x1832) "toLocaleTimeString" [||])
    let (valueOf : 'tags this -> float) =
      fun (x1834 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x1834) "valueOf" [||])
    let (getTime : 'tags this -> float) =
      fun (x1836 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x1836) "getTime" [||])
    let (getFullYear : 'tags this -> float) =
      fun (x1838 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x1838) "getFullYear" [||])
    let (getUTCFullYear : 'tags this -> float) =
      fun (x1840 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x1840) "getUTCFullYear" [||])
    let (getMonth : 'tags this -> float) =
      fun (x1842 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x1842) "getMonth" [||])
    let (getUTCMonth : 'tags this -> float) =
      fun (x1844 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x1844) "getUTCMonth" [||])
    let (getDate : 'tags this -> float) =
      fun (x1846 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x1846) "getDate" [||])
    let (getUTCDate : 'tags this -> float) =
      fun (x1848 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x1848) "getUTCDate" [||])
    let (getDay : 'tags this -> float) =
      fun (x1850 : 'tags this) ->
        Ojs.float_of_js (Ojs.call (this_to_js Obj.magic x1850) "getDay" [||])
    let (getUTCDay : 'tags this -> float) =
      fun (x1852 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x1852) "getUTCDay" [||])
    let (getHours : 'tags this -> float) =
      fun (x1854 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x1854) "getHours" [||])
    let (getUTCHours : 'tags this -> float) =
      fun (x1856 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x1856) "getUTCHours" [||])
    let (getMinutes : 'tags this -> float) =
      fun (x1858 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x1858) "getMinutes" [||])
    let (getUTCMinutes : 'tags this -> float) =
      fun (x1860 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x1860) "getUTCMinutes" [||])
    let (getSeconds : 'tags this -> float) =
      fun (x1862 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x1862) "getSeconds" [||])
    let (getUTCSeconds : 'tags this -> float) =
      fun (x1864 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x1864) "getUTCSeconds" [||])
    let (getMilliseconds : 'tags this -> float) =
      fun (x1866 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x1866) "getMilliseconds" [||])
    let (getUTCMilliseconds : 'tags this -> float) =
      fun (x1868 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x1868) "getUTCMilliseconds" [||])
    let (getTimezoneOffset : 'tags this -> float) =
      fun (x1870 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x1870) "getTimezoneOffset" [||])
    let (setTime : 'tags this -> time:float -> float) =
      fun (x1873 : 'tags this) ->
        fun ~time:(x1872 : float) ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x1873) "setTime"
               [|(Ojs.float_to_js x1872)|])
    let (setMilliseconds : 'tags this -> ms:float -> float) =
      fun (x1876 : 'tags this) ->
        fun ~ms:(x1875 : float) ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x1876) "setMilliseconds"
               [|(Ojs.float_to_js x1875)|])
    let (setUTCMilliseconds : 'tags this -> ms:float -> float) =
      fun (x1879 : 'tags this) ->
        fun ~ms:(x1878 : float) ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x1879) "setUTCMilliseconds"
               [|(Ojs.float_to_js x1878)|])
    let (setSeconds : 'tags this -> sec:float -> ?ms:float -> unit -> float)
      =
      fun (x1885 : 'tags this) ->
        fun ~sec:(x1881 : float) ->
          fun ?ms:(x1882 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x1887 = this_to_js Obj.magic x1885 in
                 Ojs.call (Ojs.get_prop_ascii x1887 "setSeconds") "apply"
                   [|x1887;((let x1883 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1883 "push"
                                  [|(Ojs.float_to_js x1881)|]);
                             (match x1882 with
                              | Some x1884 ->
                                  ignore
                                    (Ojs.call x1883 "push"
                                       [|(Ojs.float_to_js x1884)|])
                              | None -> ());
                             x1883))|])
    let (setUTCSeconds :
      'tags this -> sec:float -> ?ms:float -> unit -> float) =
      fun (x1892 : 'tags this) ->
        fun ~sec:(x1888 : float) ->
          fun ?ms:(x1889 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x1894 = this_to_js Obj.magic x1892 in
                 Ojs.call (Ojs.get_prop_ascii x1894 "setUTCSeconds") "apply"
                   [|x1894;((let x1890 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1890 "push"
                                  [|(Ojs.float_to_js x1888)|]);
                             (match x1889 with
                              | Some x1891 ->
                                  ignore
                                    (Ojs.call x1890 "push"
                                       [|(Ojs.float_to_js x1891)|])
                              | None -> ());
                             x1890))|])
    let (setMinutes :
      'tags this -> min:float -> ?sec:float -> ?ms:float -> unit -> float) =
      fun (x1901 : 'tags this) ->
        fun ~min:(x1895 : float) ->
          fun ?sec:(x1896 : float option) ->
            fun ?ms:(x1897 : float option) ->
              fun () ->
                Ojs.float_of_js
                  (let x1903 = this_to_js Obj.magic x1901 in
                   Ojs.call (Ojs.get_prop_ascii x1903 "setMinutes") "apply"
                     [|x1903;((let x1898 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x1898 "push"
                                    [|(Ojs.float_to_js x1895)|]);
                               (match x1896 with
                                | Some x1900 ->
                                    ignore
                                      (Ojs.call x1898 "push"
                                         [|(Ojs.float_to_js x1900)|])
                                | None -> ());
                               (match x1897 with
                                | Some x1899 ->
                                    ignore
                                      (Ojs.call x1898 "push"
                                         [|(Ojs.float_to_js x1899)|])
                                | None -> ());
                               x1898))|])
    let (setUTCMinutes :
      'tags this -> min:float -> ?sec:float -> ?ms:float -> unit -> float) =
      fun (x1910 : 'tags this) ->
        fun ~min:(x1904 : float) ->
          fun ?sec:(x1905 : float option) ->
            fun ?ms:(x1906 : float option) ->
              fun () ->
                Ojs.float_of_js
                  (let x1912 = this_to_js Obj.magic x1910 in
                   Ojs.call (Ojs.get_prop_ascii x1912 "setUTCMinutes")
                     "apply"
                     [|x1912;((let x1907 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x1907 "push"
                                    [|(Ojs.float_to_js x1904)|]);
                               (match x1905 with
                                | Some x1909 ->
                                    ignore
                                      (Ojs.call x1907 "push"
                                         [|(Ojs.float_to_js x1909)|])
                                | None -> ());
                               (match x1906 with
                                | Some x1908 ->
                                    ignore
                                      (Ojs.call x1907 "push"
                                         [|(Ojs.float_to_js x1908)|])
                                | None -> ());
                               x1907))|])
    let (setHours :
      'tags this ->
        hours:float -> ?min:float -> ?sec:float -> ?ms:float -> unit -> float)
      =
      fun (x1921 : 'tags this) ->
        fun ~hours:(x1913 : float) ->
          fun ?min:(x1914 : float option) ->
            fun ?sec:(x1915 : float option) ->
              fun ?ms:(x1916 : float option) ->
                fun () ->
                  Ojs.float_of_js
                    (let x1923 = this_to_js Obj.magic x1921 in
                     Ojs.call (Ojs.get_prop_ascii x1923 "setHours") "apply"
                       [|x1923;((let x1917 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x1917 "push"
                                      [|(Ojs.float_to_js x1913)|]);
                                 (match x1914 with
                                  | Some x1920 ->
                                      ignore
                                        (Ojs.call x1917 "push"
                                           [|(Ojs.float_to_js x1920)|])
                                  | None -> ());
                                 (match x1915 with
                                  | Some x1919 ->
                                      ignore
                                        (Ojs.call x1917 "push"
                                           [|(Ojs.float_to_js x1919)|])
                                  | None -> ());
                                 (match x1916 with
                                  | Some x1918 ->
                                      ignore
                                        (Ojs.call x1917 "push"
                                           [|(Ojs.float_to_js x1918)|])
                                  | None -> ());
                                 x1917))|])
    let (setUTCHours :
      'tags this ->
        hours:float -> ?min:float -> ?sec:float -> ?ms:float -> unit -> float)
      =
      fun (x1932 : 'tags this) ->
        fun ~hours:(x1924 : float) ->
          fun ?min:(x1925 : float option) ->
            fun ?sec:(x1926 : float option) ->
              fun ?ms:(x1927 : float option) ->
                fun () ->
                  Ojs.float_of_js
                    (let x1934 = this_to_js Obj.magic x1932 in
                     Ojs.call (Ojs.get_prop_ascii x1934 "setUTCHours")
                       "apply"
                       [|x1934;((let x1928 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x1928 "push"
                                      [|(Ojs.float_to_js x1924)|]);
                                 (match x1925 with
                                  | Some x1931 ->
                                      ignore
                                        (Ojs.call x1928 "push"
                                           [|(Ojs.float_to_js x1931)|])
                                  | None -> ());
                                 (match x1926 with
                                  | Some x1930 ->
                                      ignore
                                        (Ojs.call x1928 "push"
                                           [|(Ojs.float_to_js x1930)|])
                                  | None -> ());
                                 (match x1927 with
                                  | Some x1929 ->
                                      ignore
                                        (Ojs.call x1928 "push"
                                           [|(Ojs.float_to_js x1929)|])
                                  | None -> ());
                                 x1928))|])
    let (setDate : 'tags this -> date:float -> float) =
      fun (x1936 : 'tags this) ->
        fun ~date:(x1935 : float) ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x1936) "setDate"
               [|(Ojs.float_to_js x1935)|])
    let (setUTCDate : 'tags this -> date:float -> float) =
      fun (x1939 : 'tags this) ->
        fun ~date:(x1938 : float) ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x1939) "setUTCDate"
               [|(Ojs.float_to_js x1938)|])
    let (setMonth :
      'tags this -> month:float -> ?date:float -> unit -> float) =
      fun (x1945 : 'tags this) ->
        fun ~month:(x1941 : float) ->
          fun ?date:(x1942 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x1947 = this_to_js Obj.magic x1945 in
                 Ojs.call (Ojs.get_prop_ascii x1947 "setMonth") "apply"
                   [|x1947;((let x1943 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1943 "push"
                                  [|(Ojs.float_to_js x1941)|]);
                             (match x1942 with
                              | Some x1944 ->
                                  ignore
                                    (Ojs.call x1943 "push"
                                       [|(Ojs.float_to_js x1944)|])
                              | None -> ());
                             x1943))|])
    let (setUTCMonth :
      'tags this -> month:float -> ?date:float -> unit -> float) =
      fun (x1952 : 'tags this) ->
        fun ~month:(x1948 : float) ->
          fun ?date:(x1949 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x1954 = this_to_js Obj.magic x1952 in
                 Ojs.call (Ojs.get_prop_ascii x1954 "setUTCMonth") "apply"
                   [|x1954;((let x1950 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1950 "push"
                                  [|(Ojs.float_to_js x1948)|]);
                             (match x1949 with
                              | Some x1951 ->
                                  ignore
                                    (Ojs.call x1950 "push"
                                       [|(Ojs.float_to_js x1951)|])
                              | None -> ());
                             x1950))|])
    let (setFullYear :
      'tags this ->
        year:float -> ?month:float -> ?date:float -> unit -> float)
      =
      fun (x1961 : 'tags this) ->
        fun ~year:(x1955 : float) ->
          fun ?month:(x1956 : float option) ->
            fun ?date:(x1957 : float option) ->
              fun () ->
                Ojs.float_of_js
                  (let x1963 = this_to_js Obj.magic x1961 in
                   Ojs.call (Ojs.get_prop_ascii x1963 "setFullYear") "apply"
                     [|x1963;((let x1958 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x1958 "push"
                                    [|(Ojs.float_to_js x1955)|]);
                               (match x1956 with
                                | Some x1960 ->
                                    ignore
                                      (Ojs.call x1958 "push"
                                         [|(Ojs.float_to_js x1960)|])
                                | None -> ());
                               (match x1957 with
                                | Some x1959 ->
                                    ignore
                                      (Ojs.call x1958 "push"
                                         [|(Ojs.float_to_js x1959)|])
                                | None -> ());
                               x1958))|])
    let (setUTCFullYear :
      'tags this ->
        year:float -> ?month:float -> ?date:float -> unit -> float)
      =
      fun (x1970 : 'tags this) ->
        fun ~year:(x1964 : float) ->
          fun ?month:(x1965 : float option) ->
            fun ?date:(x1966 : float option) ->
              fun () ->
                Ojs.float_of_js
                  (let x1972 = this_to_js Obj.magic x1970 in
                   Ojs.call (Ojs.get_prop_ascii x1972 "setUTCFullYear")
                     "apply"
                     [|x1972;((let x1967 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x1967 "push"
                                    [|(Ojs.float_to_js x1964)|]);
                               (match x1965 with
                                | Some x1969 ->
                                    ignore
                                      (Ojs.call x1967 "push"
                                         [|(Ojs.float_to_js x1969)|])
                                | None -> ());
                               (match x1966 with
                                | Some x1968 ->
                                    ignore
                                      (Ojs.call x1967 "push"
                                         [|(Ojs.float_to_js x1968)|])
                                | None -> ());
                               x1967))|])
    let (toUTCString : 'tags this -> string) =
      fun (x1973 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x1973) "toUTCString" [||])
    let (toISOString : 'tags this -> string) =
      fun (x1975 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x1975) "toISOString" [||])
    let (toJSON : 'tags this -> ?key:any -> unit -> string) =
      fun (x1980 : 'tags this) ->
        fun ?key:(x1977 : any option) ->
          fun () ->
            Ojs.string_of_js
              (let x1982 = this_to_js Obj.magic x1980 in
               Ojs.call (Ojs.get_prop_ascii x1982 "toJSON") "apply"
                 [|x1982;((let x1978 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x1977 with
                            | Some x1979 ->
                                ignore
                                  (Ojs.call x1978 "push"
                                     [|(any_to_js x1979)|])
                            | None -> ());
                           x1978))|])
    let (create : [ `U1 of float  | `U2 of string  | `U3 of t ] -> t) =
      fun (x1983 : [ `U1 of float  | `U2 of string  | `U3 of t ]) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Date")
             [|((match x1983 with
                 | `U1 x1984 -> Ojs.float_to_js x1984
                 | `U2 x1985 -> Ojs.string_to_js x1985
                 | `U3 x1986 -> t_to_js x1986))|])
    let (create' : unit -> t) =
      fun () ->
        t_of_js (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Date") [||])
    let (create'' : [ `U1 of float  | `U2 of string ] -> t) =
      fun (x1987 : [ `U1 of float  | `U2 of string ]) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Date")
             [|((match x1987 with
                 | `U1 x1988 -> Ojs.float_to_js x1988
                 | `U2 x1989 -> Ojs.string_to_js x1989))|])
    let (create''' :
      year:float ->
        month:float ->
          ?date:float ->
            ?hours:float ->
              ?minutes:float -> ?seconds:float -> ?ms:float -> unit -> t)
      =
      fun ~year:(x1990 : float) ->
        fun ~month:(x1991 : float) ->
          fun ?date:(x1992 : float option) ->
            fun ?hours:(x1993 : float option) ->
              fun ?minutes:(x1994 : float option) ->
                fun ?seconds:(x1995 : float option) ->
                  fun ?ms:(x1996 : float option) ->
                    fun () ->
                      t_of_js
                        (Ojs.new_obj_arr
                           (Ojs.get_prop_ascii Ojs.global "Date")
                           (let x1997 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x1997 "push"
                                 [|(Ojs.float_to_js x1990)|]);
                            ignore
                              (Ojs.call x1997 "push"
                                 [|(Ojs.float_to_js x1991)|]);
                            (match x1992 with
                             | Some x2002 ->
                                 ignore
                                   (Ojs.call x1997 "push"
                                      [|(Ojs.float_to_js x2002)|])
                             | None -> ());
                            (match x1993 with
                             | Some x2001 ->
                                 ignore
                                   (Ojs.call x1997 "push"
                                      [|(Ojs.float_to_js x2001)|])
                             | None -> ());
                            (match x1994 with
                             | Some x2000 ->
                                 ignore
                                   (Ojs.call x1997 "push"
                                      [|(Ojs.float_to_js x2000)|])
                             | None -> ());
                            (match x1995 with
                             | Some x1999 ->
                                 ignore
                                   (Ojs.call x1997 "push"
                                      [|(Ojs.float_to_js x1999)|])
                             | None -> ());
                            (match x1996 with
                             | Some x1998 ->
                                 ignore
                                   (Ojs.call x1997 "push"
                                      [|(Ojs.float_to_js x1998)|])
                             | None -> ());
                            x1997))
    let (invoke : unit -> string) =
      fun () ->
        Ojs.string_of_js
          (Ojs.apply (Ojs.get_prop_ascii Ojs.global "Date") [||])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Date")
             "prototype")
    let (parse : string -> float) =
      fun (x2003 : string) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Date") "parse"
             [|(Ojs.string_to_js x2003)|])
    let (utc :
      year:float ->
        month:float ->
          ?date:float ->
            ?hours:float ->
              ?minutes:float -> ?seconds:float -> ?ms:float -> unit -> float)
      =
      fun ~year:(x2004 : float) ->
        fun ~month:(x2005 : float) ->
          fun ?date:(x2006 : float option) ->
            fun ?hours:(x2007 : float option) ->
              fun ?minutes:(x2008 : float option) ->
                fun ?seconds:(x2009 : float option) ->
                  fun ?ms:(x2010 : float option) ->
                    fun () ->
                      Ojs.float_of_js
                        (let x2017 = Ojs.get_prop_ascii Ojs.global "Date" in
                         Ojs.call (Ojs.get_prop_ascii x2017 "UTC") "apply"
                           [|x2017;((let x2011 =
                                       Ojs.new_obj
                                         (Ojs.get_prop_ascii Ojs.global
                                            "Array") [||] in
                                     ignore
                                       (Ojs.call x2011 "push"
                                          [|(Ojs.float_to_js x2004)|]);
                                     ignore
                                       (Ojs.call x2011 "push"
                                          [|(Ojs.float_to_js x2005)|]);
                                     (match x2006 with
                                      | Some x2016 ->
                                          ignore
                                            (Ojs.call x2011 "push"
                                               [|(Ojs.float_to_js x2016)|])
                                      | None -> ());
                                     (match x2007 with
                                      | Some x2015 ->
                                          ignore
                                            (Ojs.call x2011 "push"
                                               [|(Ojs.float_to_js x2015)|])
                                      | None -> ());
                                     (match x2008 with
                                      | Some x2014 ->
                                          ignore
                                            (Ojs.call x2011 "push"
                                               [|(Ojs.float_to_js x2014)|])
                                      | None -> ());
                                     (match x2009 with
                                      | Some x2013 ->
                                          ignore
                                            (Ojs.call x2011 "push"
                                               [|(Ojs.float_to_js x2013)|])
                                      | None -> ());
                                     (match x2010 with
                                      | Some x2012 ->
                                          ignore
                                            (Ojs.call x2011 "push"
                                               [|(Ojs.float_to_js x2012)|])
                                      | None -> ());
                                     x2011))|])
    let (now : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Date") "now" [||])
    let cast_from = Obj.magic
  end
 and
  Intl:sig
         module RelativeTimeFormatNumeric :
         sig
           type t = [ `L_s21_always  | `L_s22_auto ]
           type t_0 = t
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val t_0_to_js : t_0 -> Ojs.t
           val t_0_of_js : Ojs.t -> t_0
         end
         module UnicodeBCP47LocaleIdentifier :
         sig
           type t = string
           type t_0 = t
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val t_0_to_js : t_0 -> Ojs.t
           val t_0_of_js : Ojs.t -> t_0
         end
         module RelativeTimeFormatStyle :
         sig
           type t = [ `L_s56_long  | `L_s68_narrow  | `L_s89_short ]
           type t_0 = t
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val t_0_to_js : t_0 -> Ojs.t
           val t_0_of_js : Ojs.t -> t_0
         end
         module ResolvedRelativeTimeFormatOptions :
         sig
           type t = [ `Intl_ResolvedRelativeTimeFormatOptions ] intf
           type t_0 = t
           [@@@js.stop ]
           type tags = [ `Intl_ResolvedRelativeTimeFormatOptions ]
           type tags_0 = tags
           [@@@js.start ]
           [@@@js.implem
             type tags = [ `Intl_ResolvedRelativeTimeFormatOptions ]
             type tags_0 = tags]
           type 'tags this =
             'tags intf constraint 'tags =
                         [> `Intl_ResolvedRelativeTimeFormatOptions ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val t_0_to_js : t_0 -> Ojs.t
           val t_0_of_js : Ojs.t -> t_0
           val get_locale : 'tags this -> UnicodeBCP47LocaleIdentifier.t
           val set_locale :
             'tags this -> UnicodeBCP47LocaleIdentifier.t -> unit
           val get_style : 'tags this -> RelativeTimeFormatStyle.t
           val set_style : 'tags this -> RelativeTimeFormatStyle.t -> unit
           val get_numeric : 'tags this -> RelativeTimeFormatNumeric.t
           val set_numeric :
             'tags this -> RelativeTimeFormatNumeric.t -> unit
           val get_numberingSystem : 'tags this -> string
           val set_numberingSystem : 'tags this -> string -> unit
           val create :
             locale:UnicodeBCP47LocaleIdentifier.t ->
               style:RelativeTimeFormatStyle.t ->
                 numeric:RelativeTimeFormatNumeric.t ->
                   numberingSystem:string -> unit -> t
           val cast_from : 'tags this -> t
         end
         module RelativeTimeFormatUnit :
         sig
           type t =
             [ `L_s101_weeks  | `L_s102_year  | `L_s103_years  | `L_s29_day 
             | `L_s31_days  | `L_s50_hour  | `L_s51_hours  | `L_s62_minute 
             | `L_s63_minutes  | `L_s64_month  | `L_s65_months 
             | `L_s81_quarter  | `L_s82_quarters  | `L_s87_second 
             | `L_s88_seconds  | `L_s99_week ]
           type t_0 = t
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val t_0_to_js : t_0 -> Ojs.t
           val t_0_of_js : Ojs.t -> t_0
         end
         module RelativeTimeFormatPart :
         sig
           type t = [ `Intl_RelativeTimeFormatPart ] intf
           type t_0 = t
           [@@@js.stop ]
           type tags = [ `Intl_RelativeTimeFormatPart ]
           type tags_0 = tags
           [@@@js.start ]
           [@@@js.implem
             type tags = [ `Intl_RelativeTimeFormatPart ]
             type tags_0 = tags]
           type 'tags this =
             'tags intf constraint 'tags = [> `Intl_RelativeTimeFormatPart ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val t_0_to_js : t_0 -> Ojs.t
           val t_0_of_js : Ojs.t -> t_0
           val get_type : 'tags this -> string
           val set_type : 'tags this -> string -> unit
           val get_value : 'tags this -> string
           val set_value : 'tags this -> string -> unit
           val get_unit : 'tags this -> RelativeTimeFormatUnit.t option
           val set_unit : 'tags this -> RelativeTimeFormatUnit.t -> unit
           val create :
             type_:string ->
               value:string -> ?unit:RelativeTimeFormatUnit.t -> unit -> t
           val cast_from : 'tags this -> t
         end
         module RelativeTimeFormatLocaleMatcher :
         sig
           type t = [ `L_s24_best_fit  | `L_s57_lookup ]
           type t_0 = t
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val t_0_to_js : t_0 -> Ojs.t
           val t_0_of_js : Ojs.t -> t_0
         end
         module RelativeTimeFormatOptions :
         sig
           type t = [ `Intl_RelativeTimeFormatOptions ] intf
           type t_0 = t
           [@@@js.stop ]
           type tags = [ `Intl_RelativeTimeFormatOptions ]
           type tags_0 = tags
           [@@@js.start ]
           [@@@js.implem
             type tags = [ `Intl_RelativeTimeFormatOptions ]
             type tags_0 = tags]
           type 'tags this =
             'tags intf constraint 'tags =
                         [> `Intl_RelativeTimeFormatOptions ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val t_0_to_js : t_0 -> Ojs.t
           val t_0_of_js : Ojs.t -> t_0
           val get_localeMatcher :
             'tags this -> RelativeTimeFormatLocaleMatcher.t option
           val set_localeMatcher :
             'tags this -> RelativeTimeFormatLocaleMatcher.t -> unit
           val get_numeric : 'tags this -> RelativeTimeFormatNumeric.t option
           val set_numeric :
             'tags this -> RelativeTimeFormatNumeric.t -> unit
           val get_style : 'tags this -> RelativeTimeFormatStyle.t option
           val set_style : 'tags this -> RelativeTimeFormatStyle.t -> unit
           val create :
             ?localeMatcher:RelativeTimeFormatLocaleMatcher.t ->
               ?numeric:RelativeTimeFormatNumeric.t ->
                 ?style:RelativeTimeFormatStyle.t -> unit -> t
           val cast_from : 'tags this -> t
         end
         module RelativeTimeFormat :
         sig
           type t = [ `Intl_RelativeTimeFormat ] intf
           type t_0 = t
           [@@@js.stop ]
           type tags = [ `Intl_RelativeTimeFormat ]
           type tags_0 = tags
           [@@@js.start ]
           [@@@js.implem
             type tags = [ `Intl_RelativeTimeFormat ]
             type tags_0 = tags]
           type 'tags this =
             'tags intf constraint 'tags = [> `Intl_RelativeTimeFormat ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val t_0_to_js : t_0 -> Ojs.t
           val t_0_of_js : Ojs.t -> t_0
           val format :
             'tags this ->
               value:float -> unit:RelativeTimeFormatUnit.t -> string
           val formatToParts :
             'tags this ->
               value:float ->
                 unit:RelativeTimeFormatUnit.t ->
                   RelativeTimeFormatPart.t list
           val resolvedOptions :
             'tags this -> ResolvedRelativeTimeFormatOptions.t
           val cast_from : 'tags this -> t
           val create :
             ?locales:[ `U1 of UnicodeBCP47LocaleIdentifier.t 
                      | `U2 of UnicodeBCP47LocaleIdentifier.t list ]
               -> ?options:RelativeTimeFormatOptions.t -> unit -> t
           val supportedLocalesOf :
             ?locales:[ `U1 of UnicodeBCP47LocaleIdentifier.t 
                      | `U2 of UnicodeBCP47LocaleIdentifier.t list ]
               ->
               ?options:RelativeTimeFormatOptions.t ->
                 unit -> UnicodeBCP47LocaleIdentifier.t list
         end
         module PluralRuleType :
         sig
           type t = [ `L_s25_cardinal  | `L_s76_ordinal ]
           type t_0 = t
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val t_0_to_js : t_0 -> Ojs.t
           val t_0_of_js : Ojs.t -> t_0
         end
         module LDMLPluralRule :
         sig
           type t =
             [ `L_s104_zero  | `L_s41_few  | `L_s59_many  | `L_s75_one 
             | `L_s77_other  | `L_s95_two ]
           type t_0 = t
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val t_0_to_js : t_0 -> Ojs.t
           val t_0_of_js : Ojs.t -> t_0
         end
         module ResolvedPluralRulesOptions :
         sig
           type t = [ `Intl_ResolvedPluralRulesOptions ] intf
           type t_0 = t
           [@@@js.stop ]
           type tags = [ `Intl_ResolvedPluralRulesOptions ]
           type tags_0 = tags
           [@@@js.start ]
           [@@@js.implem
             type tags = [ `Intl_ResolvedPluralRulesOptions ]
             type tags_0 = tags]
           type 'tags this =
             'tags intf constraint 'tags =
                         [> `Intl_ResolvedPluralRulesOptions ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val t_0_to_js : t_0 -> Ojs.t
           val t_0_of_js : Ojs.t -> t_0
           val get_locale : 'tags this -> string
           val set_locale : 'tags this -> string -> unit
           val get_pluralCategories : 'tags this -> LDMLPluralRule.t list
           val set_pluralCategories :
             'tags this -> LDMLPluralRule.t list -> unit
           val get_type : 'tags this -> PluralRuleType.t
           val set_type : 'tags this -> PluralRuleType.t -> unit
           val get_minimumIntegerDigits : 'tags this -> float
           val set_minimumIntegerDigits : 'tags this -> float -> unit
           val get_minimumFractionDigits : 'tags this -> float
           val set_minimumFractionDigits : 'tags this -> float -> unit
           val get_maximumFractionDigits : 'tags this -> float
           val set_maximumFractionDigits : 'tags this -> float -> unit
           val get_minimumSignificantDigits : 'tags this -> float option
           val set_minimumSignificantDigits : 'tags this -> float -> unit
           val get_maximumSignificantDigits : 'tags this -> float option
           val set_maximumSignificantDigits : 'tags this -> float -> unit
           val create :
             locale:string ->
               pluralCategories:LDMLPluralRule.t list ->
                 type_:PluralRuleType.t ->
                   minimumIntegerDigits:float ->
                     minimumFractionDigits:float ->
                       maximumFractionDigits:float ->
                         ?minimumSignificantDigits:float ->
                           ?maximumSignificantDigits:float -> unit -> t
           val cast_from : 'tags this -> t
         end
         module PluralRulesOptions :
         sig
           type t = [ `Intl_PluralRulesOptions ] intf
           type t_0 = t
           [@@@js.stop ]
           type tags = [ `Intl_PluralRulesOptions ]
           type tags_0 = tags
           [@@@js.start ]
           [@@@js.implem
             type tags = [ `Intl_PluralRulesOptions ]
             type tags_0 = tags]
           type 'tags this =
             'tags intf constraint 'tags = [> `Intl_PluralRulesOptions ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val t_0_to_js : t_0 -> Ojs.t
           val t_0_of_js : Ojs.t -> t_0
           val get_localeMatcher :
             'tags this -> [ `L_s24_best_fit  | `L_s57_lookup ] option
           val set_localeMatcher :
             'tags this ->
               [ `Undefined of undefined  | `U1 of [ `L_s57_lookup ] 
               | `U2 of [ `L_s24_best_fit ] ] -> unit
           val get_type : 'tags this -> PluralRuleType.t option
           val set_type :
             'tags this ->
               [ `Undefined of undefined  | `U1 of PluralRuleType.t ] -> unit
           val get_minimumIntegerDigits : 'tags this -> float option
           val set_minimumIntegerDigits :
             'tags this ->
               [ `Undefined of undefined  | `U1 of float ] -> unit
           val get_minimumFractionDigits : 'tags this -> float option
           val set_minimumFractionDigits :
             'tags this ->
               [ `Undefined of undefined  | `U1 of float ] -> unit
           val get_maximumFractionDigits : 'tags this -> float option
           val set_maximumFractionDigits :
             'tags this ->
               [ `Undefined of undefined  | `U1 of float ] -> unit
           val get_minimumSignificantDigits : 'tags this -> float option
           val set_minimumSignificantDigits :
             'tags this ->
               [ `Undefined of undefined  | `U1 of float ] -> unit
           val get_maximumSignificantDigits : 'tags this -> float option
           val set_maximumSignificantDigits :
             'tags this ->
               [ `Undefined of undefined  | `U1 of float ] -> unit
           val create :
             ?localeMatcher:[ `L_s24_best_fit  | `L_s57_lookup ] ->
               ?type_:PluralRuleType.t ->
                 ?minimumIntegerDigits:float ->
                   ?minimumFractionDigits:float ->
                     ?maximumFractionDigits:float ->
                       ?minimumSignificantDigits:float ->
                         ?maximumSignificantDigits:float -> unit -> t
           val cast_from : 'tags this -> t
         end
         module PluralRules :
         sig
           module AnonymousInterface4 :
           sig
             type t = private Ojs.t
             val t_to_js : t -> Ojs.t
             val t_of_js : Ojs.t -> t
             val get_localeMatcher :
               t -> [ `L_s24_best_fit  | `L_s57_lookup ] option
             val set_localeMatcher :
               t ->
                 [ `U1 of [ `L_s57_lookup ]  | `U2 of [ `L_s24_best_fit ] ]
                   -> unit
             val create :
               ?localeMatcher:[ `L_s24_best_fit  | `L_s57_lookup ] ->
                 unit -> t
           end
           type t = [ `Intl_PluralRules ] intf
           type t_0 = t
           [@@@js.stop ]
           type tags = [ `Intl_PluralRules ]
           type tags_0 = tags
           [@@@js.start ]
           [@@@js.implem type tags = [ `Intl_PluralRules ]
             type tags_0 = tags]
           type 'tags this =
             'tags intf constraint 'tags = [> `Intl_PluralRules ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val t_0_to_js : t_0 -> Ojs.t
           val t_0_of_js : Ojs.t -> t_0
           val resolvedOptions : 'tags this -> ResolvedPluralRulesOptions.t
           val select : 'tags this -> n:float -> LDMLPluralRule.t
           val cast_from : 'tags this -> t
           val create :
             ?locales:[ `U1 of string  | `U2 of string list ] ->
               ?options:PluralRulesOptions.t -> unit -> t
           val invoke :
             ?locales:[ `U1 of string  | `U2 of string list ] ->
               ?options:PluralRulesOptions.t -> unit -> t
           val supportedLocalesOf :
             locales:[ `U1 of string  | `U2 of string list ] ->
               ?options:AnonymousInterface4.t -> unit -> string list
         end
         module ResolvedNumberFormatOptions :
         sig
           type t = [ `Intl_ResolvedNumberFormatOptions ] intf
           type t_0 = t
           [@@@js.stop ]
           type tags = [ `Intl_ResolvedNumberFormatOptions ]
           type tags_0 = tags
           [@@@js.start ]
           [@@@js.implem
             type tags = [ `Intl_ResolvedNumberFormatOptions ]
             type tags_0 = tags]
           type 'tags this =
             'tags intf constraint 'tags =
                         [> `Intl_ResolvedNumberFormatOptions ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val t_0_to_js : t_0 -> Ojs.t
           val t_0_of_js : Ojs.t -> t_0
           val get_compactDisplay :
             'tags this -> [ `L_s56_long  | `L_s89_short ] option
           val set_compactDisplay :
             'tags this ->
               [ `U1 of [ `L_s89_short ]  | `U2 of [ `L_s56_long ] ] -> unit
           val get_notation :
             'tags this ->
               [ `L_s27_compact  | `L_s34_engineering  | `L_s85_scientific 
               | `L_s90_standard ] option
           val set_notation :
             'tags this ->
               [ `U1 of [ `L_s90_standard ]  | `U2 of [ `L_s85_scientific ] 
               | `U3 of [ `L_s34_engineering ]  | `U4 of [ `L_s27_compact ] ]
                 -> unit
           val get_signDisplay :
             'tags this ->
               [ `L_s21_always  | `L_s22_auto  | `L_s36_exceptZero 
               | `L_s69_never ] option
           val set_signDisplay :
             'tags this ->
               [ `U1 of [ `L_s22_auto ]  | `U2 of [ `L_s69_never ] 
               | `U3 of [ `L_s21_always ]  | `U4 of [ `L_s36_exceptZero ] ]
                 -> unit
           val get_unit : 'tags this -> string option
           val set_unit : 'tags this -> string -> unit
           val get_unitDisplay :
             'tags this ->
               [ `L_s56_long  | `L_s68_narrow  | `L_s89_short ] option
           val set_unitDisplay :
             'tags this ->
               [ `U1 of [ `L_s89_short ]  | `U2 of [ `L_s56_long ] 
               | `U3 of [ `L_s68_narrow ] ] -> unit
           val get_currencyDisplay : 'tags this -> string option
           val set_currencyDisplay : 'tags this -> string -> unit
           val get_currencySign : 'tags this -> string option
           val set_currencySign : 'tags this -> string -> unit
           val get_locale : 'tags this -> string
           val set_locale : 'tags this -> string -> unit
           val get_numberingSystem : 'tags this -> string
           val set_numberingSystem : 'tags this -> string -> unit
           val get_style : 'tags this -> string
           val set_style : 'tags this -> string -> unit
           val get_currency : 'tags this -> string option
           val set_currency : 'tags this -> string -> unit
           val get_minimumIntegerDigits : 'tags this -> float
           val set_minimumIntegerDigits : 'tags this -> float -> unit
           val get_minimumFractionDigits : 'tags this -> float
           val set_minimumFractionDigits : 'tags this -> float -> unit
           val get_maximumFractionDigits : 'tags this -> float
           val set_maximumFractionDigits : 'tags this -> float -> unit
           val get_minimumSignificantDigits : 'tags this -> float option
           val set_minimumSignificantDigits : 'tags this -> float -> unit
           val get_maximumSignificantDigits : 'tags this -> float option
           val set_maximumSignificantDigits : 'tags this -> float -> unit
           val get_useGrouping : 'tags this -> bool
           val set_useGrouping : 'tags this -> bool -> unit
           val create :
             ?compactDisplay:[ `L_s56_long  | `L_s89_short ] ->
               ?notation:[ `L_s27_compact  | `L_s34_engineering 
                         | `L_s85_scientific  | `L_s90_standard ]
                 ->
                 ?signDisplay:[ `L_s21_always  | `L_s22_auto 
                              | `L_s36_exceptZero  | `L_s69_never ]
                   ->
                   ?unit:string ->
                     ?unitDisplay:[ `L_s56_long  | `L_s68_narrow 
                                  | `L_s89_short ]
                       ->
                       ?currencyDisplay:string ->
                         ?currencySign:string ->
                           locale:string ->
                             numberingSystem:string ->
                               style:string ->
                                 ?currency:string ->
                                   minimumIntegerDigits:float ->
                                     minimumFractionDigits:float ->
                                       maximumFractionDigits:float ->
                                         ?minimumSignificantDigits:float ->
                                           ?maximumSignificantDigits:float ->
                                             useGrouping:bool -> unit -> t
           val cast_from : 'tags this -> t
         end
         module ES2020NumberFormatPartType :
         sig
           type t =
             [ `L_s27_compact  | `L_s37_exponentInteger 
             | `L_s38_exponentMinusSign  | `L_s39_exponentSeparator 
             | `L_s96_unit  | `L_s97_unknown ]
           type t_0 = t
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val t_0_to_js : t_0 -> Ojs.t
           val t_0_of_js : Ojs.t -> t_0
         end
         module ES2018NumberFormatPartType :
         sig
           type t =
             [ `L_s26_code  | `L_s28_currency  | `L_s32_decimal 
             | `L_s42_fraction  | `L_s45_group  | `L_s52_infinity 
             | `L_s53_integer  | `L_s55_literal  | `L_s61_minusSign 
             | `L_s66_name  | `L_s67_nan  | `L_s78_percent 
             | `L_s79_percentSign  | `L_s80_plusSign  | `L_s92_symbol ]
           type t_0 = t
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val t_0_to_js : t_0 -> Ojs.t
           val t_0_of_js : Ojs.t -> t_0
         end
         module NumberFormatPartTypes :
         sig
           type t =
             [ `L_s26_code  | `L_s27_compact  | `L_s28_currency 
             | `L_s32_decimal  | `L_s37_exponentInteger 
             | `L_s38_exponentMinusSign  | `L_s39_exponentSeparator 
             | `L_s42_fraction  | `L_s45_group  | `L_s52_infinity 
             | `L_s53_integer  | `L_s55_literal  | `L_s61_minusSign 
             | `L_s66_name  | `L_s67_nan  | `L_s78_percent 
             | `L_s79_percentSign  | `L_s80_plusSign  | `L_s92_symbol 
             | `L_s96_unit  | `L_s97_unknown ]
           type t_0 = t
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val t_0_to_js : t_0 -> Ojs.t
           val t_0_of_js : Ojs.t -> t_0
         end
         module NumberFormatPart :
         sig
           type t = [ `Intl_NumberFormatPart ] intf
           type t_0 = t
           [@@@js.stop ]
           type tags = [ `Intl_NumberFormatPart ]
           type tags_0 = tags
           [@@@js.start ]
           [@@@js.implem
             type tags = [ `Intl_NumberFormatPart ]
             type tags_0 = tags]
           type 'tags this =
             'tags intf constraint 'tags = [> `Intl_NumberFormatPart ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val t_0_to_js : t_0 -> Ojs.t
           val t_0_of_js : Ojs.t -> t_0
           val get_type : 'tags this -> NumberFormatPartTypes.t
           val set_type : 'tags this -> NumberFormatPartTypes.t -> unit
           val get_value : 'tags this -> string
           val set_value : 'tags this -> string -> unit
           val create :
             type_:NumberFormatPartTypes.t -> value:string -> unit -> t
           val cast_from : 'tags this -> t
         end
         module NumberFormatOptions :
         sig
           type t = [ `Intl_NumberFormatOptions ] intf
           type t_0 = t
           [@@@js.stop ]
           type tags = [ `Intl_NumberFormatOptions ]
           type tags_0 = tags
           [@@@js.start ]
           [@@@js.implem
             type tags = [ `Intl_NumberFormatOptions ]
             type tags_0 = tags]
           type 'tags this =
             'tags intf constraint 'tags = [> `Intl_NumberFormatOptions ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val t_0_to_js : t_0 -> Ojs.t
           val t_0_of_js : Ojs.t -> t_0
           val get_compactDisplay :
             'tags this -> [ `L_s56_long  | `L_s89_short ] option
           val set_compactDisplay :
             'tags this ->
               [ `Undefined of undefined  | `U1 of [ `L_s89_short ] 
               | `U2 of [ `L_s56_long ] ] -> unit
           val get_notation :
             'tags this ->
               [ `L_s27_compact  | `L_s34_engineering  | `L_s85_scientific 
               | `L_s90_standard ] option
           val set_notation :
             'tags this ->
               [ `Undefined of undefined  | `U1 of [ `L_s90_standard ] 
               | `U2 of [ `L_s85_scientific ] 
               | `U3 of [ `L_s34_engineering ]  | `U4 of [ `L_s27_compact ] ]
                 -> unit
           val get_signDisplay :
             'tags this ->
               [ `L_s21_always  | `L_s22_auto  | `L_s36_exceptZero 
               | `L_s69_never ] option
           val set_signDisplay :
             'tags this ->
               [ `Undefined of undefined  | `U1 of [ `L_s22_auto ] 
               | `U2 of [ `L_s69_never ]  | `U3 of [ `L_s21_always ] 
               | `U4 of [ `L_s36_exceptZero ] ] -> unit
           val get_unit : 'tags this -> string option
           val set_unit :
             'tags this ->
               [ `Undefined of undefined  | `U1 of string ] -> unit
           val get_unitDisplay :
             'tags this ->
               [ `L_s56_long  | `L_s68_narrow  | `L_s89_short ] option
           val set_unitDisplay :
             'tags this ->
               [ `Undefined of undefined  | `U1 of [ `L_s89_short ] 
               | `U2 of [ `L_s56_long ]  | `U3 of [ `L_s68_narrow ] ] -> 
                 unit
           val get_currencyDisplay : 'tags this -> string option
           val set_currencyDisplay :
             'tags this ->
               [ `Undefined of undefined  | `U1 of string ] -> unit
           val get_currencySign : 'tags this -> string option
           val set_currencySign :
             'tags this ->
               [ `Undefined of undefined  | `U1 of string ] -> unit
           val get_localeMatcher : 'tags this -> string option
           val set_localeMatcher :
             'tags this ->
               [ `Undefined of undefined  | `U1 of string ] -> unit
           val get_style : 'tags this -> string option
           val set_style :
             'tags this ->
               [ `Undefined of undefined  | `U1 of string ] -> unit
           val get_currency : 'tags this -> string option
           val set_currency :
             'tags this ->
               [ `Undefined of undefined  | `U1 of string ] -> unit
           val get_currencySign' : 'tags this -> string option
           val set_currencySign' :
             'tags this ->
               [ `Undefined of undefined  | `U1 of string ] -> unit
           val get_useGrouping : 'tags this -> bool option
           val set_useGrouping :
             'tags this -> [ `Undefined of undefined  | `U1 of bool ] -> unit
           val get_minimumIntegerDigits : 'tags this -> float option
           val set_minimumIntegerDigits :
             'tags this ->
               [ `Undefined of undefined  | `U1 of float ] -> unit
           val get_minimumFractionDigits : 'tags this -> float option
           val set_minimumFractionDigits :
             'tags this ->
               [ `Undefined of undefined  | `U1 of float ] -> unit
           val get_maximumFractionDigits : 'tags this -> float option
           val set_maximumFractionDigits :
             'tags this ->
               [ `Undefined of undefined  | `U1 of float ] -> unit
           val get_minimumSignificantDigits : 'tags this -> float option
           val set_minimumSignificantDigits :
             'tags this ->
               [ `Undefined of undefined  | `U1 of float ] -> unit
           val get_maximumSignificantDigits : 'tags this -> float option
           val set_maximumSignificantDigits :
             'tags this ->
               [ `Undefined of undefined  | `U1 of float ] -> unit
           val create :
             ?compactDisplay:[ `L_s56_long  | `L_s89_short ] ->
               ?notation:[ `L_s27_compact  | `L_s34_engineering 
                         | `L_s85_scientific  | `L_s90_standard ]
                 ->
                 ?signDisplay:[ `L_s21_always  | `L_s22_auto 
                              | `L_s36_exceptZero  | `L_s69_never ]
                   ->
                   ?unit:string ->
                     ?unitDisplay:[ `L_s56_long  | `L_s68_narrow 
                                  | `L_s89_short ]
                       ->
                       ?currencyDisplay:string ->
                         ?currencySign:string ->
                           ?localeMatcher:string ->
                             ?style:string ->
                               ?currency:string ->
                                 ?currencySign:string ->
                                   ?useGrouping:bool ->
                                     ?minimumIntegerDigits:float ->
                                       ?minimumFractionDigits:float ->
                                         ?maximumFractionDigits:float ->
                                           ?minimumSignificantDigits:float ->
                                             ?maximumSignificantDigits:float
                                               -> unit -> t
           val cast_from : 'tags this -> t
         end
         module NumberFormat :
         sig
           type t = [ `Intl_NumberFormat ] intf
           type t_0 = t
           [@@@js.stop ]
           type tags = [ `Intl_NumberFormat ]
           type tags_0 = tags
           [@@@js.start ]
           [@@@js.implem
             type tags = [ `Intl_NumberFormat ]
             type tags_0 = tags]
           type 'tags this =
             'tags intf constraint 'tags = [> `Intl_NumberFormat ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val t_0_to_js : t_0 -> Ojs.t
           val t_0_of_js : Ojs.t -> t_0
           val formatRange :
             'tags this ->
               startDate:[ `U1 of float  | `U2 of bigint ] ->
                 endDate:[ `U1 of float  | `U2 of bigint ] -> string
           val formatRangeToParts :
             'tags this ->
               startDate:[ `U1 of float  | `U2 of bigint ] ->
                 endDate:[ `U1 of float  | `U2 of bigint ] ->
                   NumberFormatPart.t list
           val format :
             'tags this -> value:[ `U1 of float  | `U2 of bigint ] -> string
           val resolvedOptions : 'tags this -> ResolvedNumberFormatOptions.t
           val formatToParts :
             'tags this ->
               ?number:[ `U1 of float  | `U2 of bigint ] ->
                 unit -> NumberFormatPart.t list
           val format' : 'tags this -> value:float -> string
           val resolvedOptions' : 'tags this -> ResolvedNumberFormatOptions.t
           val cast_from : 'tags this -> t
           val create :
             ?locales:[ `U1 of string  | `U2 of string list ] ->
               ?options:NumberFormatOptions.t -> unit -> t
           val invoke :
             ?locales:[ `U1 of string  | `U2 of string list ] ->
               ?options:NumberFormatOptions.t -> unit -> t
           val supportedLocalesOf :
             locales:[ `U1 of string  | `U2 of string list ] ->
               ?options:NumberFormatOptions.t -> unit -> string list
         end
         module LocaleHourCycleKey :
         sig
           type t = [ `L_s46_h11  | `L_s47_h12  | `L_s48_h23  | `L_s49_h24 ]
           type t_0 = t
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val t_0_to_js : t_0 -> Ojs.t
           val t_0_of_js : Ojs.t -> t_0
         end
         module LocaleCollationCaseFirst :
         sig
           type t = [ `L_s40_false  | `L_s58_lower  | `L_s98_upper ]
           type t_0 = t
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val t_0_to_js : t_0 -> Ojs.t
           val t_0_of_js : Ojs.t -> t_0
         end
         module LocaleOptions :
         sig
           type t = [ `Intl_LocaleOptions ] intf
           type t_0 = t
           [@@@js.stop ]
           type tags = [ `Intl_LocaleOptions ]
           type tags_0 = tags
           [@@@js.start ]
           [@@@js.implem
             type tags = [ `Intl_LocaleOptions ]
             type tags_0 = tags]
           type 'tags this =
             'tags intf constraint 'tags = [> `Intl_LocaleOptions ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val t_0_to_js : t_0 -> Ojs.t
           val t_0_of_js : Ojs.t -> t_0
           val get_baseName : 'tags this -> string option
           val set_baseName : 'tags this -> string -> unit
           val get_calendar : 'tags this -> string option
           val set_calendar : 'tags this -> string -> unit
           val get_caseFirst :
             'tags this -> LocaleCollationCaseFirst.t option
           val set_caseFirst :
             'tags this -> LocaleCollationCaseFirst.t -> unit
           val get_collation : 'tags this -> string option
           val set_collation : 'tags this -> string -> unit
           val get_hourCycle : 'tags this -> LocaleHourCycleKey.t option
           val set_hourCycle : 'tags this -> LocaleHourCycleKey.t -> unit
           val get_language : 'tags this -> string option
           val set_language : 'tags this -> string -> unit
           val get_numberingSystem : 'tags this -> string option
           val set_numberingSystem : 'tags this -> string -> unit
           val get_numeric : 'tags this -> bool option
           val set_numeric : 'tags this -> bool -> unit
           val get_region : 'tags this -> string option
           val set_region : 'tags this -> string -> unit
           val get_script : 'tags this -> string option
           val set_script : 'tags this -> string -> unit
           val create :
             ?baseName:string ->
               ?calendar:string ->
                 ?caseFirst:LocaleCollationCaseFirst.t ->
                   ?collation:string ->
                     ?hourCycle:LocaleHourCycleKey.t ->
                       ?language:string ->
                         ?numberingSystem:string ->
                           ?numeric:bool ->
                             ?region:string -> ?script:string -> unit -> t
           val cast_from : 'tags this -> t
         end
         module BCP47LanguageTag :
         sig
           type t = string
           type t_0 = t
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val t_0_to_js : t_0 -> Ojs.t
           val t_0_of_js : Ojs.t -> t_0
         end
         module Locale :
         sig
           type t = [ `Intl_Locale  | `Intl_LocaleOptions ] intf
           type t_0 = t
           [@@@js.stop ]
           type tags = [ `Intl_Locale  | `Intl_LocaleOptions ]
           type tags_0 = tags
           [@@@js.start ]
           [@@@js.implem
             type tags = [ `Intl_Locale  | `Intl_LocaleOptions ]
             type tags_0 = tags]
           type 'tags this = 'tags intf constraint 'tags = [> `Intl_Locale ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val t_0_to_js : t_0 -> Ojs.t
           val t_0_of_js : Ojs.t -> t_0
           val maximize : 'tags this -> t
           val minimize : 'tags this -> t
           val toString : 'tags this -> BCP47LanguageTag.t
           val cast_from : 'tags this -> t
           val create :
             ?tag:BCP47LanguageTag.t -> ?options:LocaleOptions.t -> unit -> t
         end
         module DisplayNamesOptions :
         sig
           type t = [ `Intl_DisplayNamesOptions ] intf
           type t_0 = t
           [@@@js.stop ]
           type tags = [ `Intl_DisplayNamesOptions ]
           type tags_0 = tags
           [@@@js.start ]
           [@@@js.implem
             type tags = [ `Intl_DisplayNamesOptions ]
             type tags_0 = tags]
           type 'tags this =
             'tags intf constraint 'tags = [> `Intl_DisplayNamesOptions ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val t_0_to_js : t_0 -> Ojs.t
           val t_0_of_js : Ojs.t -> t_0
           val get_locale : 'tags this -> UnicodeBCP47LocaleIdentifier.t
           val set_locale :
             'tags this -> UnicodeBCP47LocaleIdentifier.t -> unit
           val get_localeMatcher :
             'tags this -> RelativeTimeFormatLocaleMatcher.t
           val set_localeMatcher :
             'tags this -> RelativeTimeFormatLocaleMatcher.t -> unit
           val get_style : 'tags this -> RelativeTimeFormatStyle.t
           val set_style : 'tags this -> RelativeTimeFormatStyle.t -> unit
           val get_type :
             'tags this ->
               [ `L_s28_currency  | `L_s54_language  | `L_s83_region 
               | `L_s86_script ]
           val set_type :
             'tags this ->
               [ `U1 of [ `L_s54_language ]  | `U2 of [ `L_s83_region ] 
               | `U3 of [ `L_s86_script ]  | `U4 of [ `L_s28_currency ] ] ->
                 unit
           val get_fallback : 'tags this -> [ `L_s26_code  | `L_s70_none ]
           val set_fallback :
             'tags this ->
               [ `U1 of [ `L_s26_code ]  | `U2 of [ `L_s70_none ] ] -> unit
           val create :
             locale:UnicodeBCP47LocaleIdentifier.t ->
               localeMatcher:RelativeTimeFormatLocaleMatcher.t ->
                 style:RelativeTimeFormatStyle.t ->
                   type_:[ `L_s28_currency  | `L_s54_language 
                         | `L_s83_region  | `L_s86_script ]
                     -> fallback:[ `L_s26_code  | `L_s70_none ] -> unit -> t
           val cast_from : 'tags this -> t
         end
         module DisplayNames :
         sig
           module AnonymousInterface2 :
           sig
             type t = private Ojs.t
             val t_to_js : t -> Ojs.t
             val t_of_js : Ojs.t -> t
             val get_localeMatcher : t -> RelativeTimeFormatLocaleMatcher.t
             val set_localeMatcher :
               t -> RelativeTimeFormatLocaleMatcher.t -> unit
             val create :
               localeMatcher:RelativeTimeFormatLocaleMatcher.t -> unit -> t
           end
           type t = [ `Intl_DisplayNames ] intf
           type t_0 = t
           [@@@js.stop ]
           type tags = [ `Intl_DisplayNames ]
           type tags_0 = tags
           [@@@js.start ]
           [@@@js.implem
             type tags = [ `Intl_DisplayNames ]
             type tags_0 = tags]
           type 'tags this =
             'tags intf constraint 'tags = [> `Intl_DisplayNames ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val t_0_to_js : t_0 -> Ojs.t
           val t_0_of_js : Ojs.t -> t_0
           val of_ : 'tags this -> code:string -> string option
           val resolvedOptions : 'tags this -> DisplayNamesOptions.t
           val cast_from : 'tags this -> t
           val prototype : unit -> t
           val create :
             ?locales:[ `U1 of BCP47LanguageTag.t 
                      | `U2 of BCP47LanguageTag.t list ]
               -> ?options:DisplayNamesOptions.t Partial.t -> unit -> t
           val supportedLocalesOf :
             locales:[ `U1 of BCP47LanguageTag.t 
                     | `U2 of BCP47LanguageTag.t list ]
               ->
               ?options:AnonymousInterface2.t ->
                 unit -> BCP47LanguageTag.t list
         end
         module ResolvedDateTimeFormatOptions :
         sig
           type t = [ `Intl_ResolvedDateTimeFormatOptions ] intf
           type t_0 = t
           [@@@js.stop ]
           type tags = [ `Intl_ResolvedDateTimeFormatOptions ]
           type tags_0 = tags
           [@@@js.start ]
           [@@@js.implem
             type tags = [ `Intl_ResolvedDateTimeFormatOptions ]
             type tags_0 = tags]
           type 'tags this =
             'tags intf constraint 'tags =
                         [> `Intl_ResolvedDateTimeFormatOptions ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val t_0_to_js : t_0 -> Ojs.t
           val t_0_of_js : Ojs.t -> t_0
           val get_formatMatcher :
             'tags this -> [ `L_s23_basic  | `L_s24_best_fit ] option
           val set_formatMatcher :
             'tags this ->
               [ `U1 of [ `L_s23_basic ]  | `U2 of [ `L_s24_best_fit ] 
               | `U3 of [ `L_s24_best_fit ] ] -> unit
           val get_dateStyle :
             'tags this ->
               [ `L_s44_full  | `L_s56_long  | `L_s60_medium 
               | `L_s89_short ] option
           val set_dateStyle :
             'tags this ->
               [ `U1 of [ `L_s44_full ]  | `U2 of [ `L_s56_long ] 
               | `U3 of [ `L_s60_medium ]  | `U4 of [ `L_s89_short ] ] ->
                 unit
           val get_timeStyle :
             'tags this ->
               [ `L_s44_full  | `L_s56_long  | `L_s60_medium 
               | `L_s89_short ] option
           val set_timeStyle :
             'tags this ->
               [ `U1 of [ `L_s44_full ]  | `U2 of [ `L_s56_long ] 
               | `U3 of [ `L_s60_medium ]  | `U4 of [ `L_s89_short ] ] ->
                 unit
           val get_hourCycle :
             'tags this ->
               [ `L_s46_h11  | `L_s47_h12  | `L_s48_h23  | `L_s49_h24 ]
                 option
           val set_hourCycle :
             'tags this ->
               [ `U1 of [ `L_s46_h11 ]  | `U2 of [ `L_s47_h12 ] 
               | `U3 of [ `L_s48_h23 ]  | `U4 of [ `L_s49_h24 ] ] -> 
                 unit
           val get_dayPeriod :
             'tags this ->
               [ `L_s56_long  | `L_s68_narrow  | `L_s89_short ] option
           val set_dayPeriod :
             'tags this ->
               [ `U1 of [ `L_s68_narrow ]  | `U2 of [ `L_s89_short ] 
               | `U3 of [ `L_s56_long ] ] -> unit
           val get_fractionalSecondDigits :
             'tags this -> [ `L_n_0  | `L_n_1  | `L_n_2  | `L_n_3 ] option
           val set_fractionalSecondDigits :
             'tags this ->
               [ `U1 of [ `L_n_0 ]  | `U2 of [ `L_n_1 ]  | `U3 of [ `L_n_2 ] 
               | `U4 of [ `L_n_3 ] ] -> unit
           val get_locale : 'tags this -> string
           val set_locale : 'tags this -> string -> unit
           val get_calendar : 'tags this -> string
           val set_calendar : 'tags this -> string -> unit
           val get_numberingSystem : 'tags this -> string
           val set_numberingSystem : 'tags this -> string -> unit
           val get_timeZone : 'tags this -> string
           val set_timeZone : 'tags this -> string -> unit
           val get_hour12 : 'tags this -> bool option
           val set_hour12 : 'tags this -> bool -> unit
           val get_weekday : 'tags this -> string option
           val set_weekday : 'tags this -> string -> unit
           val get_era : 'tags this -> string option
           val set_era : 'tags this -> string -> unit
           val get_year : 'tags this -> string option
           val set_year : 'tags this -> string -> unit
           val get_month : 'tags this -> string option
           val set_month : 'tags this -> string -> unit
           val get_day : 'tags this -> string option
           val set_day : 'tags this -> string -> unit
           val get_hour : 'tags this -> string option
           val set_hour : 'tags this -> string -> unit
           val get_minute : 'tags this -> string option
           val set_minute : 'tags this -> string -> unit
           val get_second : 'tags this -> string option
           val set_second : 'tags this -> string -> unit
           val get_timeZoneName : 'tags this -> string option
           val set_timeZoneName : 'tags this -> string -> unit
           val create :
             ?formatMatcher:[ `L_s23_basic  | `L_s24_best_fit ] ->
               ?dateStyle:[ `L_s44_full  | `L_s56_long  | `L_s60_medium 
                          | `L_s89_short ]
                 ->
                 ?timeStyle:[ `L_s44_full  | `L_s56_long  | `L_s60_medium 
                            | `L_s89_short ]
                   ->
                   ?hourCycle:[ `L_s46_h11  | `L_s47_h12  | `L_s48_h23 
                              | `L_s49_h24 ]
                     ->
                     ?dayPeriod:[ `L_s56_long  | `L_s68_narrow 
                                | `L_s89_short ]
                       ->
                       ?fractionalSecondDigits:[ `L_n_0  | `L_n_1  | 
                                                 `L_n_2 
                                               | `L_n_3 ]
                         ->
                         locale:string ->
                           calendar:string ->
                             numberingSystem:string ->
                               timeZone:string ->
                                 ?hour12:bool ->
                                   ?weekday:string ->
                                     ?era:string ->
                                       ?year:string ->
                                         ?month:string ->
                                           ?day:string ->
                                             ?hour:string ->
                                               ?minute:string ->
                                                 ?second:string ->
                                                   ?timeZoneName:string ->
                                                     unit -> t
           val cast_from : 'tags this -> t
         end
         module DateTimeFormatPartTypes :
         sig
           type t =
             [ `L_s100_weekday  | `L_s102_year  | `L_s29_day 
             | `L_s30_dayPeriod  | `L_s35_era  | `L_s50_hour 
             | `L_s55_literal  | `L_s62_minute  | `L_s64_month 
             | `L_s87_second  | `L_s93_timeZoneName ]
           type t_0 = t
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val t_0_to_js : t_0 -> Ojs.t
           val t_0_of_js : Ojs.t -> t_0
         end
         module DateTimeFormatPart :
         sig
           type t = [ `Intl_DateTimeFormatPart ] intf
           type t_0 = t
           [@@@js.stop ]
           type tags = [ `Intl_DateTimeFormatPart ]
           type tags_0 = tags
           [@@@js.start ]
           [@@@js.implem
             type tags = [ `Intl_DateTimeFormatPart ]
             type tags_0 = tags]
           type 'tags this =
             'tags intf constraint 'tags = [> `Intl_DateTimeFormatPart ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val t_0_to_js : t_0 -> Ojs.t
           val t_0_of_js : Ojs.t -> t_0
           val get_type : 'tags this -> DateTimeFormatPartTypes.t
           val set_type : 'tags this -> DateTimeFormatPartTypes.t -> unit
           val get_value : 'tags this -> string
           val set_value : 'tags this -> string -> unit
           val create :
             type_:DateTimeFormatPartTypes.t -> value:string -> unit -> t
           val cast_from : 'tags this -> t
         end
         module DateTimeFormatOptions :
         sig
           type t = [ `Intl_DateTimeFormatOptions ] intf
           type t_0 = t
           [@@@js.stop ]
           type tags = [ `Intl_DateTimeFormatOptions ]
           type tags_0 = tags
           [@@@js.start ]
           [@@@js.implem
             type tags = [ `Intl_DateTimeFormatOptions ]
             type tags_0 = tags]
           type 'tags this =
             'tags intf constraint 'tags = [> `Intl_DateTimeFormatOptions ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val t_0_to_js : t_0 -> Ojs.t
           val t_0_of_js : Ojs.t -> t_0
           val get_formatMatcher :
             'tags this -> [ `L_s23_basic  | `L_s24_best_fit ] option
           val set_formatMatcher :
             'tags this ->
               [ `Undefined of undefined  | `U1 of [ `L_s23_basic ] 
               | `U2 of [ `L_s24_best_fit ]  | `U3 of [ `L_s24_best_fit ] ]
                 -> unit
           val get_dateStyle :
             'tags this ->
               [ `L_s44_full  | `L_s56_long  | `L_s60_medium 
               | `L_s89_short ] option
           val set_dateStyle :
             'tags this ->
               [ `Undefined of undefined  | `U1 of [ `L_s44_full ] 
               | `U2 of [ `L_s56_long ]  | `U3 of [ `L_s60_medium ] 
               | `U4 of [ `L_s89_short ] ] -> unit
           val get_timeStyle :
             'tags this ->
               [ `L_s44_full  | `L_s56_long  | `L_s60_medium 
               | `L_s89_short ] option
           val set_timeStyle :
             'tags this ->
               [ `Undefined of undefined  | `U1 of [ `L_s44_full ] 
               | `U2 of [ `L_s56_long ]  | `U3 of [ `L_s60_medium ] 
               | `U4 of [ `L_s89_short ] ] -> unit
           val get_dayPeriod :
             'tags this ->
               [ `L_s56_long  | `L_s68_narrow  | `L_s89_short ] option
           val set_dayPeriod :
             'tags this ->
               [ `Undefined of undefined  | `U1 of [ `L_s68_narrow ] 
               | `U2 of [ `L_s89_short ]  | `U3 of [ `L_s56_long ] ] -> 
                 unit
           val get_fractionalSecondDigits :
             'tags this -> [ `L_n_0  | `L_n_1  | `L_n_2  | `L_n_3 ] option
           val set_fractionalSecondDigits :
             'tags this ->
               [ `Undefined of undefined  | `U1 of [ `L_n_0 ] 
               | `U2 of [ `L_n_1 ]  | `U3 of [ `L_n_2 ] 
               | `U4 of [ `L_n_3 ] ] -> unit
           val get_calendar : 'tags this -> string option
           val set_calendar :
             'tags this ->
               [ `Undefined of undefined  | `U1 of string ] -> unit
           val get_dayPeriod' :
             'tags this ->
               [ `L_s56_long  | `L_s68_narrow  | `L_s89_short ] option
           val set_dayPeriod' :
             'tags this ->
               [ `Undefined of undefined  | `U1 of [ `L_s68_narrow ] 
               | `U2 of [ `L_s89_short ]  | `U3 of [ `L_s56_long ] ] -> 
                 unit
           val get_numberingSystem : 'tags this -> string option
           val set_numberingSystem :
             'tags this ->
               [ `Undefined of undefined  | `U1 of string ] -> unit
           val get_dateStyle' :
             'tags this ->
               [ `L_s44_full  | `L_s56_long  | `L_s60_medium 
               | `L_s89_short ] option
           val set_dateStyle' :
             'tags this ->
               [ `Undefined of undefined  | `U1 of [ `L_s44_full ] 
               | `U2 of [ `L_s56_long ]  | `U3 of [ `L_s60_medium ] 
               | `U4 of [ `L_s89_short ] ] -> unit
           val get_timeStyle' :
             'tags this ->
               [ `L_s44_full  | `L_s56_long  | `L_s60_medium 
               | `L_s89_short ] option
           val set_timeStyle' :
             'tags this ->
               [ `Undefined of undefined  | `U1 of [ `L_s44_full ] 
               | `U2 of [ `L_s56_long ]  | `U3 of [ `L_s60_medium ] 
               | `U4 of [ `L_s89_short ] ] -> unit
           val get_hourCycle :
             'tags this ->
               [ `L_s46_h11  | `L_s47_h12  | `L_s48_h23  | `L_s49_h24 ]
                 option
           val set_hourCycle :
             'tags this ->
               [ `Undefined of undefined  | `U1 of [ `L_s46_h11 ] 
               | `U2 of [ `L_s47_h12 ]  | `U3 of [ `L_s48_h23 ] 
               | `U4 of [ `L_s49_h24 ] ] -> unit
           val get_localeMatcher :
             'tags this -> [ `L_s24_best_fit  | `L_s57_lookup ] option
           val set_localeMatcher :
             'tags this ->
               [ `Undefined of undefined  | `U1 of [ `L_s24_best_fit ] 
               | `U2 of [ `L_s57_lookup ] ] -> unit
           val get_weekday :
             'tags this ->
               [ `L_s56_long  | `L_s68_narrow  | `L_s89_short ] option
           val set_weekday :
             'tags this ->
               [ `Undefined of undefined  | `U1 of [ `L_s56_long ] 
               | `U2 of [ `L_s89_short ]  | `U3 of [ `L_s68_narrow ] ] ->
                 unit
           val get_era :
             'tags this ->
               [ `L_s56_long  | `L_s68_narrow  | `L_s89_short ] option
           val set_era :
             'tags this ->
               [ `Undefined of undefined  | `U1 of [ `L_s56_long ] 
               | `U2 of [ `L_s89_short ]  | `U3 of [ `L_s68_narrow ] ] ->
                 unit
           val get_year :
             'tags this -> [ `L_s0_2_digit  | `L_s73_numeric ] option
           val set_year :
             'tags this ->
               [ `Undefined of undefined  | `U1 of [ `L_s73_numeric ] 
               | `U2 of [ `L_s0_2_digit ] ] -> unit
           val get_month :
             'tags this ->
               [ `L_s0_2_digit  | `L_s56_long  | `L_s68_narrow 
               | `L_s73_numeric  | `L_s89_short ] option
           val set_month :
             'tags this ->
               [ `Undefined of undefined  | `U1 of [ `L_s73_numeric ] 
               | `U2 of [ `L_s0_2_digit ]  | `U3 of [ `L_s56_long ] 
               | `U4 of [ `L_s89_short ]  | `U5 of [ `L_s68_narrow ] ] ->
                 unit
           val get_day :
             'tags this -> [ `L_s0_2_digit  | `L_s73_numeric ] option
           val set_day :
             'tags this ->
               [ `Undefined of undefined  | `U1 of [ `L_s73_numeric ] 
               | `U2 of [ `L_s0_2_digit ] ] -> unit
           val get_hour :
             'tags this -> [ `L_s0_2_digit  | `L_s73_numeric ] option
           val set_hour :
             'tags this ->
               [ `Undefined of undefined  | `U1 of [ `L_s73_numeric ] 
               | `U2 of [ `L_s0_2_digit ] ] -> unit
           val get_minute :
             'tags this -> [ `L_s0_2_digit  | `L_s73_numeric ] option
           val set_minute :
             'tags this ->
               [ `Undefined of undefined  | `U1 of [ `L_s73_numeric ] 
               | `U2 of [ `L_s0_2_digit ] ] -> unit
           val get_second :
             'tags this -> [ `L_s0_2_digit  | `L_s73_numeric ] option
           val set_second :
             'tags this ->
               [ `Undefined of undefined  | `U1 of [ `L_s73_numeric ] 
               | `U2 of [ `L_s0_2_digit ] ] -> unit
           val get_timeZoneName :
             'tags this -> [ `L_s56_long  | `L_s89_short ] option
           val set_timeZoneName :
             'tags this ->
               [ `Undefined of undefined  | `U1 of [ `L_s56_long ] 
               | `U2 of [ `L_s89_short ] ] -> unit
           val get_formatMatcher' :
             'tags this -> [ `L_s23_basic  | `L_s24_best_fit ] option
           val set_formatMatcher' :
             'tags this ->
               [ `Undefined of undefined  | `U1 of [ `L_s24_best_fit ] 
               | `U2 of [ `L_s23_basic ] ] -> unit
           val get_hour12 : 'tags this -> bool option
           val set_hour12 :
             'tags this -> [ `Undefined of undefined  | `U1 of bool ] -> unit
           val get_timeZone : 'tags this -> string option
           val set_timeZone :
             'tags this ->
               [ `Undefined of undefined  | `U1 of string ] -> unit
           val create :
             ?formatMatcher:[ `L_s23_basic  | `L_s24_best_fit ] ->
               ?dateStyle:[ `L_s44_full  | `L_s56_long  | `L_s60_medium 
                          | `L_s89_short ]
                 ->
                 ?timeStyle:[ `L_s44_full  | `L_s56_long  | `L_s60_medium 
                            | `L_s89_short ]
                   ->
                   ?dayPeriod:[ `L_s56_long  | `L_s68_narrow 
                              | `L_s89_short ]
                     ->
                     ?fractionalSecondDigits:[ `L_n_0  | `L_n_1  | `L_n_2 
                                             | `L_n_3 ]
                       ->
                       ?calendar:string ->
                         ?dayPeriod:[ `L_s56_long  | `L_s68_narrow 
                                    | `L_s89_short ]
                           ->
                           ?numberingSystem:string ->
                             ?dateStyle:[ `L_s44_full  | `L_s56_long 
                                        | `L_s60_medium  | `L_s89_short ]
                               ->
                               ?timeStyle:[ `L_s44_full  | `L_s56_long 
                                          | `L_s60_medium  | `L_s89_short ]
                                 ->
                                 ?hourCycle:[ `L_s46_h11  | `L_s47_h12 
                                            | `L_s48_h23  | `L_s49_h24 ]
                                   ->
                                   ?localeMatcher:[ `L_s24_best_fit 
                                                  | `L_s57_lookup ]
                                     ->
                                     ?weekday:[ `L_s56_long  | `L_s68_narrow 
                                              | `L_s89_short ]
                                       ->
                                       ?era:[ `L_s56_long  | `L_s68_narrow 
                                            | `L_s89_short ]
                                         ->
                                         ?year:[ `L_s0_2_digit 
                                               | `L_s73_numeric ]
                                           ->
                                           ?month:[ `L_s0_2_digit 
                                                  | `L_s56_long 
                                                  | `L_s68_narrow 
                                                  | `L_s73_numeric 
                                                  | `L_s89_short ]
                                             ->
                                             ?day:[ `L_s0_2_digit 
                                                  | `L_s73_numeric ]
                                               ->
                                               ?hour:[ `L_s0_2_digit 
                                                     | `L_s73_numeric ]
                                                 ->
                                                 ?minute:[ `L_s0_2_digit 
                                                         | `L_s73_numeric ]
                                                   ->
                                                   ?second:[ `L_s0_2_digit 
                                                           | `L_s73_numeric ]
                                                     ->
                                                     ?timeZoneName:[
                                                                    `L_s56_long
                                                                     | 
                                                                    `L_s89_short
                                                                    ]
                                                       ->
                                                       ?formatMatcher:
                                                         [ `L_s23_basic 
                                                         | `L_s24_best_fit ]
                                                         ->
                                                         ?hour12:bool ->
                                                           ?timeZone:string
                                                             -> unit -> t
           val cast_from : 'tags this -> t
         end
         module DateTimeFormat :
         sig
           type t = [ `Intl_DateTimeFormat ] intf
           type t_0 = t
           [@@@js.stop ]
           type tags = [ `Intl_DateTimeFormat ]
           type tags_0 = tags
           [@@@js.start ]
           [@@@js.implem
             type tags = [ `Intl_DateTimeFormat ]
             type tags_0 = tags]
           type 'tags this =
             'tags intf constraint 'tags = [> `Intl_DateTimeFormat ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val t_0_to_js : t_0 -> Ojs.t
           val t_0_of_js : Ojs.t -> t_0
           val formatToParts :
             'tags this ->
               ?date:[ `U1 of Date.t  | `U2 of float ] ->
                 unit -> DateTimeFormatPart.t list
           val format :
             'tags this ->
               ?date:[ `U1 of Date.t  | `U2 of float ] -> unit -> string
           val resolvedOptions :
             'tags this -> ResolvedDateTimeFormatOptions.t
           val cast_from : 'tags this -> t
           val create :
             ?locales:[ `U1 of string  | `U2 of string list ] ->
               ?options:DateTimeFormatOptions.t -> unit -> t
           val invoke :
             ?locales:[ `U1 of string  | `U2 of string list ] ->
               ?options:DateTimeFormatOptions.t -> unit -> t
           val supportedLocalesOf :
             locales:[ `U1 of string  | `U2 of string list ] ->
               ?options:DateTimeFormatOptions.t -> unit -> string list
         end
         module ResolvedCollatorOptions :
         sig
           type t = [ `Intl_ResolvedCollatorOptions ] intf
           type t_0 = t
           [@@@js.stop ]
           type tags = [ `Intl_ResolvedCollatorOptions ]
           type tags_0 = tags
           [@@@js.start ]
           [@@@js.implem
             type tags = [ `Intl_ResolvedCollatorOptions ]
             type tags_0 = tags]
           type 'tags this =
             'tags intf constraint 'tags = [> `Intl_ResolvedCollatorOptions ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val t_0_to_js : t_0 -> Ojs.t
           val t_0_of_js : Ojs.t -> t_0
           val get_locale : 'tags this -> string
           val set_locale : 'tags this -> string -> unit
           val get_usage : 'tags this -> string
           val set_usage : 'tags this -> string -> unit
           val get_sensitivity : 'tags this -> string
           val set_sensitivity : 'tags this -> string -> unit
           val get_ignorePunctuation : 'tags this -> bool
           val set_ignorePunctuation : 'tags this -> bool -> unit
           val get_collation : 'tags this -> string
           val set_collation : 'tags this -> string -> unit
           val get_caseFirst : 'tags this -> string
           val set_caseFirst : 'tags this -> string -> unit
           val get_numeric : 'tags this -> bool
           val set_numeric : 'tags this -> bool -> unit
           val create :
             locale:string ->
               usage:string ->
                 sensitivity:string ->
                   ignorePunctuation:bool ->
                     collation:string ->
                       caseFirst:string -> numeric:bool -> unit -> t
           val cast_from : 'tags this -> t
         end
         module CollatorOptions :
         sig
           type t = [ `Intl_CollatorOptions ] intf
           type t_0 = t
           [@@@js.stop ]
           type tags = [ `Intl_CollatorOptions ]
           type tags_0 = tags
           [@@@js.start ]
           [@@@js.implem
             type tags = [ `Intl_CollatorOptions ]
             type tags_0 = tags]
           type 'tags this =
             'tags intf constraint 'tags = [> `Intl_CollatorOptions ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val t_0_to_js : t_0 -> Ojs.t
           val t_0_of_js : Ojs.t -> t_0
           val get_usage : 'tags this -> string option
           val set_usage :
             'tags this ->
               [ `Undefined of undefined  | `U1 of string ] -> unit
           val get_localeMatcher : 'tags this -> string option
           val set_localeMatcher :
             'tags this ->
               [ `Undefined of undefined  | `U1 of string ] -> unit
           val get_numeric : 'tags this -> bool option
           val set_numeric :
             'tags this -> [ `Undefined of undefined  | `U1 of bool ] -> unit
           val get_caseFirst : 'tags this -> string option
           val set_caseFirst :
             'tags this ->
               [ `Undefined of undefined  | `U1 of string ] -> unit
           val get_sensitivity : 'tags this -> string option
           val set_sensitivity :
             'tags this ->
               [ `Undefined of undefined  | `U1 of string ] -> unit
           val get_ignorePunctuation : 'tags this -> bool option
           val set_ignorePunctuation :
             'tags this -> [ `Undefined of undefined  | `U1 of bool ] -> unit
           val create :
             ?usage:string ->
               ?localeMatcher:string ->
                 ?numeric:bool ->
                   ?caseFirst:string ->
                     ?sensitivity:string ->
                       ?ignorePunctuation:bool -> unit -> t
           val cast_from : 'tags this -> t
         end
         module Collator :
         sig
           type t = [ `Intl_Collator ] intf
           type t_0 = t
           [@@@js.stop ]
           type tags = [ `Intl_Collator ]
           type tags_0 = tags
           [@@@js.start ]
           [@@@js.implem type tags = [ `Intl_Collator ]
             type tags_0 = tags]
           type 'tags this =
             'tags intf constraint 'tags = [> `Intl_Collator ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val t_0_to_js : t_0 -> Ojs.t
           val t_0_of_js : Ojs.t -> t_0
           val compare : 'tags this -> x:string -> y:string -> float
           val resolvedOptions : 'tags this -> ResolvedCollatorOptions.t
           val cast_from : 'tags this -> t
           val create :
             ?locales:[ `U1 of string  | `U2 of string list ] ->
               ?options:CollatorOptions.t -> unit -> t
           val invoke :
             ?locales:[ `U1 of string  | `U2 of string list ] ->
               ?options:CollatorOptions.t -> unit -> t
           val supportedLocalesOf :
             locales:[ `U1 of string  | `U2 of string list ] ->
               ?options:CollatorOptions.t -> unit -> string list
         end
       end =
  struct
    module RelativeTimeFormatNumeric =
      struct
        type t = [ `L_s21_always  | `L_s22_auto ]
        let rec t_of_js : Ojs.t -> t =
          fun (x2019 : Ojs.t) ->
            let x2020 = x2019 in
            match Ojs.string_of_js x2020 with
            | "always" -> `L_s21_always
            | "auto" -> `L_s22_auto
            | _ -> assert false
        and t_to_js : t -> Ojs.t =
          fun (x2018 : [ `L_s21_always  | `L_s22_auto ]) ->
            match x2018 with
            | `L_s21_always -> Ojs.string_to_js "always"
            | `L_s22_auto -> Ojs.string_to_js "auto"
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x2022 : Ojs.t) -> t_of_js x2022
        and t_0_to_js : t_0 -> Ojs.t = fun (x2021 : t) -> t_to_js x2021
      end
    module UnicodeBCP47LocaleIdentifier =
      struct
        type t = string
        let rec t_of_js : Ojs.t -> t =
          fun (x2024 : Ojs.t) -> Ojs.string_of_js x2024
        and t_to_js : t -> Ojs.t =
          fun (x2023 : string) -> Ojs.string_to_js x2023
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x2026 : Ojs.t) -> t_of_js x2026
        and t_0_to_js : t_0 -> Ojs.t = fun (x2025 : t) -> t_to_js x2025
      end
    module RelativeTimeFormatStyle =
      struct
        type t = [ `L_s56_long  | `L_s68_narrow  | `L_s89_short ]
        let rec t_of_js : Ojs.t -> t =
          fun (x2028 : Ojs.t) ->
            let x2029 = x2028 in
            match Ojs.string_of_js x2029 with
            | "long" -> `L_s56_long
            | "narrow" -> `L_s68_narrow
            | "short" -> `L_s89_short
            | _ -> assert false
        and t_to_js : t -> Ojs.t =
          fun (x2027 : [ `L_s56_long  | `L_s68_narrow  | `L_s89_short ]) ->
            match x2027 with
            | `L_s56_long -> Ojs.string_to_js "long"
            | `L_s68_narrow -> Ojs.string_to_js "narrow"
            | `L_s89_short -> Ojs.string_to_js "short"
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x2031 : Ojs.t) -> t_of_js x2031
        and t_0_to_js : t_0 -> Ojs.t = fun (x2030 : t) -> t_to_js x2030
      end
    module ResolvedRelativeTimeFormatOptions =
      struct
        type t = [ `Intl_ResolvedRelativeTimeFormatOptions ] intf
        let rec t_of_js : Ojs.t -> t = Obj.magic
        and t_to_js : t -> Ojs.t = Obj.magic
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x2033 : Ojs.t) -> t_of_js x2033
        and t_0_to_js : t_0 -> Ojs.t = fun (x2032 : t) -> t_to_js x2032
        type tags = [ `Intl_ResolvedRelativeTimeFormatOptions ]
        type tags_0 = tags
        type 'tags this =
          'tags intf constraint 'tags =
                      [> `Intl_ResolvedRelativeTimeFormatOptions ]
        let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
          =
          fun (type __tags) ->
            fun (__tags_of_js : Ojs.t -> __tags) ->
              fun (x2036 : Ojs.t) -> intf_of_js __tags_of_js x2036
        and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
          fun (type __tags) ->
            fun (__tags_to_js : __tags -> Ojs.t) ->
              fun (x2034 : __tags intf) -> intf_to_js __tags_to_js x2034
        let (get_locale : 'tags this -> UnicodeBCP47LocaleIdentifier.t) =
          fun (x2038 : 'tags this) ->
            UnicodeBCP47LocaleIdentifier.t_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2038) "locale")
        let (set_locale :
          'tags this -> UnicodeBCP47LocaleIdentifier.t -> unit) =
          fun (x2040 : 'tags this) ->
            fun (x2041 : UnicodeBCP47LocaleIdentifier.t) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2040) "locale"
                (UnicodeBCP47LocaleIdentifier.t_to_js x2041)
        let (get_style : 'tags this -> RelativeTimeFormatStyle.t) =
          fun (x2043 : 'tags this) ->
            RelativeTimeFormatStyle.t_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2043) "style")
        let (set_style : 'tags this -> RelativeTimeFormatStyle.t -> unit) =
          fun (x2045 : 'tags this) ->
            fun (x2046 : RelativeTimeFormatStyle.t) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2045) "style"
                (RelativeTimeFormatStyle.t_to_js x2046)
        let (get_numeric : 'tags this -> RelativeTimeFormatNumeric.t) =
          fun (x2048 : 'tags this) ->
            RelativeTimeFormatNumeric.t_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2048) "numeric")
        let (set_numeric : 'tags this -> RelativeTimeFormatNumeric.t -> unit)
          =
          fun (x2050 : 'tags this) ->
            fun (x2051 : RelativeTimeFormatNumeric.t) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2050) "numeric"
                (RelativeTimeFormatNumeric.t_to_js x2051)
        let (get_numberingSystem : 'tags this -> string) =
          fun (x2053 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2053)
                 "numberingSystem")
        let (set_numberingSystem : 'tags this -> string -> unit) =
          fun (x2055 : 'tags this) ->
            fun (x2056 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2055)
                "numberingSystem" (Ojs.string_to_js x2056)
        let (create :
          locale:UnicodeBCP47LocaleIdentifier.t ->
            style:RelativeTimeFormatStyle.t ->
              numeric:RelativeTimeFormatNumeric.t ->
                numberingSystem:string -> unit -> t)
          =
          fun ~locale:(x2058 : UnicodeBCP47LocaleIdentifier.t) ->
            fun ~style:(x2059 : RelativeTimeFormatStyle.t) ->
              fun ~numeric:(x2060 : RelativeTimeFormatNumeric.t) ->
                fun ~numberingSystem:(x2061 : string) ->
                  fun () ->
                    let x2062 = Ojs.empty_obj () in
                    Ojs.set_prop_ascii x2062 "locale"
                      (UnicodeBCP47LocaleIdentifier.t_to_js x2058);
                    Ojs.set_prop_ascii x2062 "style"
                      (RelativeTimeFormatStyle.t_to_js x2059);
                    Ojs.set_prop_ascii x2062 "numeric"
                      (RelativeTimeFormatNumeric.t_to_js x2060);
                    Ojs.set_prop_ascii x2062 "numberingSystem"
                      (Ojs.string_to_js x2061);
                    t_of_js x2062
        let cast_from = Obj.magic
      end
    module RelativeTimeFormatUnit =
      struct
        type t =
          [ `L_s101_weeks  | `L_s102_year  | `L_s103_years  | `L_s29_day 
          | `L_s31_days  | `L_s50_hour  | `L_s51_hours  | `L_s62_minute 
          | `L_s63_minutes  | `L_s64_month  | `L_s65_months 
          | `L_s81_quarter  | `L_s82_quarters  | `L_s87_second 
          | `L_s88_seconds  | `L_s99_week ]
        let rec t_of_js : Ojs.t -> t =
          fun (x2064 : Ojs.t) ->
            let x2065 = x2064 in
            match Ojs.string_of_js x2065 with
            | "weeks" -> `L_s101_weeks
            | "year" -> `L_s102_year
            | "years" -> `L_s103_years
            | "day" -> `L_s29_day
            | "days" -> `L_s31_days
            | "hour" -> `L_s50_hour
            | "hours" -> `L_s51_hours
            | "minute" -> `L_s62_minute
            | "minutes" -> `L_s63_minutes
            | "month" -> `L_s64_month
            | "months" -> `L_s65_months
            | "quarter" -> `L_s81_quarter
            | "quarters" -> `L_s82_quarters
            | "second" -> `L_s87_second
            | "seconds" -> `L_s88_seconds
            | "week" -> `L_s99_week
            | _ -> assert false
        and t_to_js : t -> Ojs.t =
          fun
            (x2063 :
              [ `L_s101_weeks  | `L_s102_year  | `L_s103_years  | `L_s29_day 
              | `L_s31_days  | `L_s50_hour  | `L_s51_hours  | `L_s62_minute 
              | `L_s63_minutes  | `L_s64_month  | `L_s65_months 
              | `L_s81_quarter  | `L_s82_quarters  | `L_s87_second 
              | `L_s88_seconds  | `L_s99_week ])
            ->
            match x2063 with
            | `L_s101_weeks -> Ojs.string_to_js "weeks"
            | `L_s102_year -> Ojs.string_to_js "year"
            | `L_s103_years -> Ojs.string_to_js "years"
            | `L_s29_day -> Ojs.string_to_js "day"
            | `L_s31_days -> Ojs.string_to_js "days"
            | `L_s50_hour -> Ojs.string_to_js "hour"
            | `L_s51_hours -> Ojs.string_to_js "hours"
            | `L_s62_minute -> Ojs.string_to_js "minute"
            | `L_s63_minutes -> Ojs.string_to_js "minutes"
            | `L_s64_month -> Ojs.string_to_js "month"
            | `L_s65_months -> Ojs.string_to_js "months"
            | `L_s81_quarter -> Ojs.string_to_js "quarter"
            | `L_s82_quarters -> Ojs.string_to_js "quarters"
            | `L_s87_second -> Ojs.string_to_js "second"
            | `L_s88_seconds -> Ojs.string_to_js "seconds"
            | `L_s99_week -> Ojs.string_to_js "week"
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x2067 : Ojs.t) -> t_of_js x2067
        and t_0_to_js : t_0 -> Ojs.t = fun (x2066 : t) -> t_to_js x2066
      end
    module RelativeTimeFormatPart =
      struct
        type t = [ `Intl_RelativeTimeFormatPart ] intf
        let rec t_of_js : Ojs.t -> t = Obj.magic
        and t_to_js : t -> Ojs.t = Obj.magic
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x2069 : Ojs.t) -> t_of_js x2069
        and t_0_to_js : t_0 -> Ojs.t = fun (x2068 : t) -> t_to_js x2068
        type tags = [ `Intl_RelativeTimeFormatPart ]
        type tags_0 = tags
        type 'tags this =
          'tags intf constraint 'tags = [> `Intl_RelativeTimeFormatPart ]
        let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
          =
          fun (type __tags) ->
            fun (__tags_of_js : Ojs.t -> __tags) ->
              fun (x2072 : Ojs.t) -> intf_of_js __tags_of_js x2072
        and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
          fun (type __tags) ->
            fun (__tags_to_js : __tags -> Ojs.t) ->
              fun (x2070 : __tags intf) -> intf_to_js __tags_to_js x2070
        let (get_type : 'tags this -> string) =
          fun (x2074 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2074) "type")
        let (set_type : 'tags this -> string -> unit) =
          fun (x2076 : 'tags this) ->
            fun (x2077 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2076) "type"
                (Ojs.string_to_js x2077)
        let (get_value : 'tags this -> string) =
          fun (x2079 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2079) "value")
        let (set_value : 'tags this -> string -> unit) =
          fun (x2081 : 'tags this) ->
            fun (x2082 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2081) "value"
                (Ojs.string_to_js x2082)
        let (get_unit : 'tags this -> RelativeTimeFormatUnit.t option) =
          fun (x2084 : 'tags this) ->
            Ojs.option_of_js RelativeTimeFormatUnit.t_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2084) "unit")
        let (set_unit : 'tags this -> RelativeTimeFormatUnit.t -> unit) =
          fun (x2087 : 'tags this) ->
            fun (x2088 : RelativeTimeFormatUnit.t) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2087) "unit"
                (RelativeTimeFormatUnit.t_to_js x2088)
        let (create :
          type_:string ->
            value:string -> ?unit:RelativeTimeFormatUnit.t -> unit -> t)
          =
          fun ~type_:(x2090 : string) ->
            fun ~value:(x2091 : string) ->
              fun ?unit:(x2092 : RelativeTimeFormatUnit.t option) ->
                fun () ->
                  let x2093 = Ojs.empty_obj () in
                  Ojs.set_prop_ascii x2093 "type" (Ojs.string_to_js x2090);
                  Ojs.set_prop_ascii x2093 "value" (Ojs.string_to_js x2091);
                  (match x2092 with
                   | Some x2094 ->
                       Ojs.set_prop_ascii x2093 "unit"
                         (RelativeTimeFormatUnit.t_to_js x2094)
                   | None -> ());
                  t_of_js x2093
        let cast_from = Obj.magic
      end
    module RelativeTimeFormatLocaleMatcher =
      struct
        type t = [ `L_s24_best_fit  | `L_s57_lookup ]
        let rec t_of_js : Ojs.t -> t =
          fun (x2096 : Ojs.t) ->
            let x2097 = x2096 in
            match Ojs.string_of_js x2097 with
            | "best fit" -> `L_s24_best_fit
            | "lookup" -> `L_s57_lookup
            | _ -> assert false
        and t_to_js : t -> Ojs.t =
          fun (x2095 : [ `L_s24_best_fit  | `L_s57_lookup ]) ->
            match x2095 with
            | `L_s24_best_fit -> Ojs.string_to_js "best fit"
            | `L_s57_lookup -> Ojs.string_to_js "lookup"
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x2099 : Ojs.t) -> t_of_js x2099
        and t_0_to_js : t_0 -> Ojs.t = fun (x2098 : t) -> t_to_js x2098
      end
    module RelativeTimeFormatOptions =
      struct
        type t = [ `Intl_RelativeTimeFormatOptions ] intf
        let rec t_of_js : Ojs.t -> t = Obj.magic
        and t_to_js : t -> Ojs.t = Obj.magic
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x2101 : Ojs.t) -> t_of_js x2101
        and t_0_to_js : t_0 -> Ojs.t = fun (x2100 : t) -> t_to_js x2100
        type tags = [ `Intl_RelativeTimeFormatOptions ]
        type tags_0 = tags
        type 'tags this =
          'tags intf constraint 'tags = [> `Intl_RelativeTimeFormatOptions ]
        let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
          =
          fun (type __tags) ->
            fun (__tags_of_js : Ojs.t -> __tags) ->
              fun (x2104 : Ojs.t) -> intf_of_js __tags_of_js x2104
        and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
          fun (type __tags) ->
            fun (__tags_to_js : __tags -> Ojs.t) ->
              fun (x2102 : __tags intf) -> intf_to_js __tags_to_js x2102
        let (get_localeMatcher :
          'tags this -> RelativeTimeFormatLocaleMatcher.t option) =
          fun (x2106 : 'tags this) ->
            Ojs.option_of_js RelativeTimeFormatLocaleMatcher.t_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2106)
                 "localeMatcher")
        let (set_localeMatcher :
          'tags this -> RelativeTimeFormatLocaleMatcher.t -> unit) =
          fun (x2109 : 'tags this) ->
            fun (x2110 : RelativeTimeFormatLocaleMatcher.t) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2109) "localeMatcher"
                (RelativeTimeFormatLocaleMatcher.t_to_js x2110)
        let (get_numeric : 'tags this -> RelativeTimeFormatNumeric.t option)
          =
          fun (x2112 : 'tags this) ->
            Ojs.option_of_js RelativeTimeFormatNumeric.t_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2112) "numeric")
        let (set_numeric : 'tags this -> RelativeTimeFormatNumeric.t -> unit)
          =
          fun (x2115 : 'tags this) ->
            fun (x2116 : RelativeTimeFormatNumeric.t) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2115) "numeric"
                (RelativeTimeFormatNumeric.t_to_js x2116)
        let (get_style : 'tags this -> RelativeTimeFormatStyle.t option) =
          fun (x2118 : 'tags this) ->
            Ojs.option_of_js RelativeTimeFormatStyle.t_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2118) "style")
        let (set_style : 'tags this -> RelativeTimeFormatStyle.t -> unit) =
          fun (x2121 : 'tags this) ->
            fun (x2122 : RelativeTimeFormatStyle.t) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2121) "style"
                (RelativeTimeFormatStyle.t_to_js x2122)
        let (create :
          ?localeMatcher:RelativeTimeFormatLocaleMatcher.t ->
            ?numeric:RelativeTimeFormatNumeric.t ->
              ?style:RelativeTimeFormatStyle.t -> unit -> t)
          =
          fun
            ?localeMatcher:(x2124 : RelativeTimeFormatLocaleMatcher.t option)
            ->
            fun ?numeric:(x2125 : RelativeTimeFormatNumeric.t option) ->
              fun ?style:(x2126 : RelativeTimeFormatStyle.t option) ->
                fun () ->
                  let x2127 = Ojs.empty_obj () in
                  (match x2124 with
                   | Some x2130 ->
                       Ojs.set_prop_ascii x2127 "localeMatcher"
                         (RelativeTimeFormatLocaleMatcher.t_to_js x2130)
                   | None -> ());
                  (match x2125 with
                   | Some x2129 ->
                       Ojs.set_prop_ascii x2127 "numeric"
                         (RelativeTimeFormatNumeric.t_to_js x2129)
                   | None -> ());
                  (match x2126 with
                   | Some x2128 ->
                       Ojs.set_prop_ascii x2127 "style"
                         (RelativeTimeFormatStyle.t_to_js x2128)
                   | None -> ());
                  t_of_js x2127
        let cast_from = Obj.magic
      end
    module RelativeTimeFormat =
      struct
        type t = [ `Intl_RelativeTimeFormat ] intf
        let rec t_of_js : Ojs.t -> t = Obj.magic
        and t_to_js : t -> Ojs.t = Obj.magic
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x2132 : Ojs.t) -> t_of_js x2132
        and t_0_to_js : t_0 -> Ojs.t = fun (x2131 : t) -> t_to_js x2131
        type tags = [ `Intl_RelativeTimeFormat ]
        type tags_0 = tags
        type 'tags this =
          'tags intf constraint 'tags = [> `Intl_RelativeTimeFormat ]
        let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
          =
          fun (type __tags) ->
            fun (__tags_of_js : Ojs.t -> __tags) ->
              fun (x2135 : Ojs.t) -> intf_of_js __tags_of_js x2135
        and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
          fun (type __tags) ->
            fun (__tags_to_js : __tags -> Ojs.t) ->
              fun (x2133 : __tags intf) -> intf_to_js __tags_to_js x2133
        let (format :
          'tags this ->
            value:float -> unit:RelativeTimeFormatUnit.t -> string)
          =
          fun (x2139 : 'tags this) ->
            fun ~value:(x2137 : float) ->
              fun ~unit:(x2138 : RelativeTimeFormatUnit.t) ->
                Ojs.string_of_js
                  (Ojs.call (this_to_js Obj.magic x2139) "format"
                     [|(Ojs.float_to_js x2137);(RelativeTimeFormatUnit.t_to_js
                                                  x2138)|])
        let (formatToParts :
          'tags this ->
            value:float ->
              unit:RelativeTimeFormatUnit.t -> RelativeTimeFormatPart.t list)
          =
          fun (x2143 : 'tags this) ->
            fun ~value:(x2141 : float) ->
              fun ~unit:(x2142 : RelativeTimeFormatUnit.t) ->
                Ojs.list_of_js RelativeTimeFormatPart.t_of_js
                  (Ojs.call (this_to_js Obj.magic x2143) "formatToParts"
                     [|(Ojs.float_to_js x2141);(RelativeTimeFormatUnit.t_to_js
                                                  x2142)|])
        let (resolvedOptions :
          'tags this -> ResolvedRelativeTimeFormatOptions.t) =
          fun (x2146 : 'tags this) ->
            ResolvedRelativeTimeFormatOptions.t_of_js
              (Ojs.call (this_to_js Obj.magic x2146) "resolvedOptions" [||])
        let cast_from = Obj.magic
        let (create :
          ?locales:[ `U1 of UnicodeBCP47LocaleIdentifier.t 
                   | `U2 of UnicodeBCP47LocaleIdentifier.t list ]
            -> ?options:RelativeTimeFormatOptions.t -> unit -> t)
          =
          fun
            ?locales:(x2148 :
                       [ `U1 of UnicodeBCP47LocaleIdentifier.t 
                       | `U2 of UnicodeBCP47LocaleIdentifier.t list ] option)
            ->
            fun ?options:(x2149 : RelativeTimeFormatOptions.t option) ->
              fun () ->
                t_of_js
                  (Ojs.new_obj_arr
                     (Ojs.get_prop_ascii
                        (Ojs.get_prop_ascii Ojs.global "Intl")
                        "RelativeTimeFormat")
                     (let x2150 =
                        Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                          [||] in
                      (match x2148 with
                       | Some x2152 ->
                           ignore
                             (Ojs.call x2150 "push"
                                [|((match x2152 with
                                    | `U1 x2153 ->
                                        UnicodeBCP47LocaleIdentifier.t_to_js
                                          x2153
                                    | `U2 x2154 ->
                                        Ojs.list_to_js
                                          UnicodeBCP47LocaleIdentifier.t_to_js
                                          x2154))|])
                       | None -> ());
                      (match x2149 with
                       | Some x2151 ->
                           ignore
                             (Ojs.call x2150 "push"
                                [|(RelativeTimeFormatOptions.t_to_js x2151)|])
                       | None -> ());
                      x2150))
        let (supportedLocalesOf :
          ?locales:[ `U1 of UnicodeBCP47LocaleIdentifier.t 
                   | `U2 of UnicodeBCP47LocaleIdentifier.t list ]
            ->
            ?options:RelativeTimeFormatOptions.t ->
              unit -> UnicodeBCP47LocaleIdentifier.t list)
          =
          fun
            ?locales:(x2156 :
                       [ `U1 of UnicodeBCP47LocaleIdentifier.t 
                       | `U2 of UnicodeBCP47LocaleIdentifier.t list ] option)
            ->
            fun ?options:(x2157 : RelativeTimeFormatOptions.t option) ->
              fun () ->
                Ojs.list_of_js UnicodeBCP47LocaleIdentifier.t_of_js
                  (let x2164 =
                     Ojs.get_prop_ascii
                       (Ojs.get_prop_ascii Ojs.global "Intl")
                       "RelativeTimeFormat" in
                   Ojs.call (Ojs.get_prop_ascii x2164 "supportedLocalesOf")
                     "apply"
                     [|x2164;((let x2158 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               (match x2156 with
                                | Some x2160 ->
                                    ignore
                                      (Ojs.call x2158 "push"
                                         [|((match x2160 with
                                             | `U1 x2161 ->
                                                 UnicodeBCP47LocaleIdentifier.t_to_js
                                                   x2161
                                             | `U2 x2162 ->
                                                 Ojs.list_to_js
                                                   UnicodeBCP47LocaleIdentifier.t_to_js
                                                   x2162))|])
                                | None -> ());
                               (match x2157 with
                                | Some x2159 ->
                                    ignore
                                      (Ojs.call x2158 "push"
                                         [|(RelativeTimeFormatOptions.t_to_js
                                              x2159)|])
                                | None -> ());
                               x2158))|])
      end
    module PluralRuleType =
      struct
        type t = [ `L_s25_cardinal  | `L_s76_ordinal ]
        let rec t_of_js : Ojs.t -> t =
          fun (x2167 : Ojs.t) ->
            let x2168 = x2167 in
            match Ojs.string_of_js x2168 with
            | "cardinal" -> `L_s25_cardinal
            | "ordinal" -> `L_s76_ordinal
            | _ -> assert false
        and t_to_js : t -> Ojs.t =
          fun (x2166 : [ `L_s25_cardinal  | `L_s76_ordinal ]) ->
            match x2166 with
            | `L_s25_cardinal -> Ojs.string_to_js "cardinal"
            | `L_s76_ordinal -> Ojs.string_to_js "ordinal"
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x2170 : Ojs.t) -> t_of_js x2170
        and t_0_to_js : t_0 -> Ojs.t = fun (x2169 : t) -> t_to_js x2169
      end
    module LDMLPluralRule =
      struct
        type t =
          [ `L_s104_zero  | `L_s41_few  | `L_s59_many  | `L_s75_one 
          | `L_s77_other  | `L_s95_two ]
        let rec t_of_js : Ojs.t -> t =
          fun (x2172 : Ojs.t) ->
            let x2173 = x2172 in
            match Ojs.string_of_js x2173 with
            | "zero" -> `L_s104_zero
            | "few" -> `L_s41_few
            | "many" -> `L_s59_many
            | "one" -> `L_s75_one
            | "other" -> `L_s77_other
            | "two" -> `L_s95_two
            | _ -> assert false
        and t_to_js : t -> Ojs.t =
          fun
            (x2171 :
              [ `L_s104_zero  | `L_s41_few  | `L_s59_many  | `L_s75_one 
              | `L_s77_other  | `L_s95_two ])
            ->
            match x2171 with
            | `L_s104_zero -> Ojs.string_to_js "zero"
            | `L_s41_few -> Ojs.string_to_js "few"
            | `L_s59_many -> Ojs.string_to_js "many"
            | `L_s75_one -> Ojs.string_to_js "one"
            | `L_s77_other -> Ojs.string_to_js "other"
            | `L_s95_two -> Ojs.string_to_js "two"
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x2175 : Ojs.t) -> t_of_js x2175
        and t_0_to_js : t_0 -> Ojs.t = fun (x2174 : t) -> t_to_js x2174
      end
    module ResolvedPluralRulesOptions =
      struct
        type t = [ `Intl_ResolvedPluralRulesOptions ] intf
        let rec t_of_js : Ojs.t -> t = Obj.magic
        and t_to_js : t -> Ojs.t = Obj.magic
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x2177 : Ojs.t) -> t_of_js x2177
        and t_0_to_js : t_0 -> Ojs.t = fun (x2176 : t) -> t_to_js x2176
        type tags = [ `Intl_ResolvedPluralRulesOptions ]
        type tags_0 = tags
        type 'tags this =
          'tags intf constraint 'tags = [> `Intl_ResolvedPluralRulesOptions ]
        let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
          =
          fun (type __tags) ->
            fun (__tags_of_js : Ojs.t -> __tags) ->
              fun (x2180 : Ojs.t) -> intf_of_js __tags_of_js x2180
        and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
          fun (type __tags) ->
            fun (__tags_to_js : __tags -> Ojs.t) ->
              fun (x2178 : __tags intf) -> intf_to_js __tags_to_js x2178
        let (get_locale : 'tags this -> string) =
          fun (x2182 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2182) "locale")
        let (set_locale : 'tags this -> string -> unit) =
          fun (x2184 : 'tags this) ->
            fun (x2185 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2184) "locale"
                (Ojs.string_to_js x2185)
        let (get_pluralCategories : 'tags this -> LDMLPluralRule.t list) =
          fun (x2187 : 'tags this) ->
            Ojs.list_of_js LDMLPluralRule.t_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2187)
                 "pluralCategories")
        let (set_pluralCategories :
          'tags this -> LDMLPluralRule.t list -> unit) =
          fun (x2190 : 'tags this) ->
            fun (x2191 : LDMLPluralRule.t list) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2190)
                "pluralCategories"
                (Ojs.list_to_js LDMLPluralRule.t_to_js x2191)
        let (get_type : 'tags this -> PluralRuleType.t) =
          fun (x2194 : 'tags this) ->
            PluralRuleType.t_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2194) "type")
        let (set_type : 'tags this -> PluralRuleType.t -> unit) =
          fun (x2196 : 'tags this) ->
            fun (x2197 : PluralRuleType.t) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2196) "type"
                (PluralRuleType.t_to_js x2197)
        let (get_minimumIntegerDigits : 'tags this -> float) =
          fun (x2199 : 'tags this) ->
            Ojs.float_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2199)
                 "minimumIntegerDigits")
        let (set_minimumIntegerDigits : 'tags this -> float -> unit) =
          fun (x2201 : 'tags this) ->
            fun (x2202 : float) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2201)
                "minimumIntegerDigits" (Ojs.float_to_js x2202)
        let (get_minimumFractionDigits : 'tags this -> float) =
          fun (x2204 : 'tags this) ->
            Ojs.float_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2204)
                 "minimumFractionDigits")
        let (set_minimumFractionDigits : 'tags this -> float -> unit) =
          fun (x2206 : 'tags this) ->
            fun (x2207 : float) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2206)
                "minimumFractionDigits" (Ojs.float_to_js x2207)
        let (get_maximumFractionDigits : 'tags this -> float) =
          fun (x2209 : 'tags this) ->
            Ojs.float_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2209)
                 "maximumFractionDigits")
        let (set_maximumFractionDigits : 'tags this -> float -> unit) =
          fun (x2211 : 'tags this) ->
            fun (x2212 : float) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2211)
                "maximumFractionDigits" (Ojs.float_to_js x2212)
        let (get_minimumSignificantDigits : 'tags this -> float option) =
          fun (x2214 : 'tags this) ->
            Ojs.option_of_js Ojs.float_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2214)
                 "minimumSignificantDigits")
        let (set_minimumSignificantDigits : 'tags this -> float -> unit) =
          fun (x2217 : 'tags this) ->
            fun (x2218 : float) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2217)
                "minimumSignificantDigits" (Ojs.float_to_js x2218)
        let (get_maximumSignificantDigits : 'tags this -> float option) =
          fun (x2220 : 'tags this) ->
            Ojs.option_of_js Ojs.float_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2220)
                 "maximumSignificantDigits")
        let (set_maximumSignificantDigits : 'tags this -> float -> unit) =
          fun (x2223 : 'tags this) ->
            fun (x2224 : float) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2223)
                "maximumSignificantDigits" (Ojs.float_to_js x2224)
        let (create :
          locale:string ->
            pluralCategories:LDMLPluralRule.t list ->
              type_:PluralRuleType.t ->
                minimumIntegerDigits:float ->
                  minimumFractionDigits:float ->
                    maximumFractionDigits:float ->
                      ?minimumSignificantDigits:float ->
                        ?maximumSignificantDigits:float -> unit -> t)
          =
          fun ~locale:(x2226 : string) ->
            fun ~pluralCategories:(x2227 : LDMLPluralRule.t list) ->
              fun ~type_:(x2228 : PluralRuleType.t) ->
                fun ~minimumIntegerDigits:(x2229 : float) ->
                  fun ~minimumFractionDigits:(x2230 : float) ->
                    fun ~maximumFractionDigits:(x2231 : float) ->
                      fun ?minimumSignificantDigits:(x2232 : float option) ->
                        fun ?maximumSignificantDigits:(x2233 : float option)
                          ->
                          fun () ->
                            let x2234 = Ojs.empty_obj () in
                            Ojs.set_prop_ascii x2234 "locale"
                              (Ojs.string_to_js x2226);
                            Ojs.set_prop_ascii x2234 "pluralCategories"
                              (Ojs.list_to_js LDMLPluralRule.t_to_js x2227);
                            Ojs.set_prop_ascii x2234 "type"
                              (PluralRuleType.t_to_js x2228);
                            Ojs.set_prop_ascii x2234 "minimumIntegerDigits"
                              (Ojs.float_to_js x2229);
                            Ojs.set_prop_ascii x2234 "minimumFractionDigits"
                              (Ojs.float_to_js x2230);
                            Ojs.set_prop_ascii x2234 "maximumFractionDigits"
                              (Ojs.float_to_js x2231);
                            (match x2232 with
                             | Some x2236 ->
                                 Ojs.set_prop_ascii x2234
                                   "minimumSignificantDigits"
                                   (Ojs.float_to_js x2236)
                             | None -> ());
                            (match x2233 with
                             | Some x2235 ->
                                 Ojs.set_prop_ascii x2234
                                   "maximumSignificantDigits"
                                   (Ojs.float_to_js x2235)
                             | None -> ());
                            t_of_js x2234
        let cast_from = Obj.magic
      end
    module PluralRulesOptions =
      struct
        type t = [ `Intl_PluralRulesOptions ] intf
        let rec t_of_js : Ojs.t -> t = Obj.magic
        and t_to_js : t -> Ojs.t = Obj.magic
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x2239 : Ojs.t) -> t_of_js x2239
        and t_0_to_js : t_0 -> Ojs.t = fun (x2238 : t) -> t_to_js x2238
        type tags = [ `Intl_PluralRulesOptions ]
        type tags_0 = tags
        type 'tags this =
          'tags intf constraint 'tags = [> `Intl_PluralRulesOptions ]
        let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
          =
          fun (type __tags) ->
            fun (__tags_of_js : Ojs.t -> __tags) ->
              fun (x2242 : Ojs.t) -> intf_of_js __tags_of_js x2242
        and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
          fun (type __tags) ->
            fun (__tags_to_js : __tags -> Ojs.t) ->
              fun (x2240 : __tags intf) -> intf_to_js __tags_to_js x2240
        let (get_localeMatcher :
          'tags this -> [ `L_s24_best_fit  | `L_s57_lookup ] option) =
          fun (x2244 : 'tags this) ->
            Ojs.option_of_js
              (fun (x2246 : Ojs.t) ->
                 let x2247 = x2246 in
                 match Ojs.string_of_js x2247 with
                 | "best fit" -> `L_s24_best_fit
                 | "lookup" -> `L_s57_lookup
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2244)
                 "localeMatcher")
        let (set_localeMatcher :
          'tags this ->
            [ `Undefined of undefined  | `U1 of [ `L_s57_lookup ] 
            | `U2 of [ `L_s24_best_fit ] ] -> unit)
          =
          fun (x2248 : 'tags this) ->
            fun
              (x2249 :
                [ `Undefined of undefined  | `U1 of [ `L_s57_lookup ] 
                | `U2 of [ `L_s24_best_fit ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2248) "localeMatcher"
                (match x2249 with
                 | `Undefined x2250 -> undefined_to_js x2250
                 | `U1 x2251 ->
                     (match x2251 with
                      | `L_s57_lookup -> Ojs.string_to_js "lookup")
                 | `U2 x2252 ->
                     (match x2252 with
                      | `L_s24_best_fit -> Ojs.string_to_js "best fit"))
        let (get_type : 'tags this -> PluralRuleType.t option) =
          fun (x2254 : 'tags this) ->
            Ojs.option_of_js PluralRuleType.t_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2254) "type")
        let (set_type :
          'tags this ->
            [ `Undefined of undefined  | `U1 of PluralRuleType.t ] -> unit)
          =
          fun (x2257 : 'tags this) ->
            fun
              (x2258 :
                [ `Undefined of undefined  | `U1 of PluralRuleType.t ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2257) "type"
                (match x2258 with
                 | `Undefined x2259 -> undefined_to_js x2259
                 | `U1 x2260 -> PluralRuleType.t_to_js x2260)
        let (get_minimumIntegerDigits : 'tags this -> float option) =
          fun (x2262 : 'tags this) ->
            Ojs.option_of_js Ojs.float_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2262)
                 "minimumIntegerDigits")
        let (set_minimumIntegerDigits :
          'tags this -> [ `Undefined of undefined  | `U1 of float ] -> unit)
          =
          fun (x2265 : 'tags this) ->
            fun (x2266 : [ `Undefined of undefined  | `U1 of float ]) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2265)
                "minimumIntegerDigits"
                (match x2266 with
                 | `Undefined x2267 -> undefined_to_js x2267
                 | `U1 x2268 -> Ojs.float_to_js x2268)
        let (get_minimumFractionDigits : 'tags this -> float option) =
          fun (x2270 : 'tags this) ->
            Ojs.option_of_js Ojs.float_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2270)
                 "minimumFractionDigits")
        let (set_minimumFractionDigits :
          'tags this -> [ `Undefined of undefined  | `U1 of float ] -> unit)
          =
          fun (x2273 : 'tags this) ->
            fun (x2274 : [ `Undefined of undefined  | `U1 of float ]) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2273)
                "minimumFractionDigits"
                (match x2274 with
                 | `Undefined x2275 -> undefined_to_js x2275
                 | `U1 x2276 -> Ojs.float_to_js x2276)
        let (get_maximumFractionDigits : 'tags this -> float option) =
          fun (x2278 : 'tags this) ->
            Ojs.option_of_js Ojs.float_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2278)
                 "maximumFractionDigits")
        let (set_maximumFractionDigits :
          'tags this -> [ `Undefined of undefined  | `U1 of float ] -> unit)
          =
          fun (x2281 : 'tags this) ->
            fun (x2282 : [ `Undefined of undefined  | `U1 of float ]) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2281)
                "maximumFractionDigits"
                (match x2282 with
                 | `Undefined x2283 -> undefined_to_js x2283
                 | `U1 x2284 -> Ojs.float_to_js x2284)
        let (get_minimumSignificantDigits : 'tags this -> float option) =
          fun (x2286 : 'tags this) ->
            Ojs.option_of_js Ojs.float_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2286)
                 "minimumSignificantDigits")
        let (set_minimumSignificantDigits :
          'tags this -> [ `Undefined of undefined  | `U1 of float ] -> unit)
          =
          fun (x2289 : 'tags this) ->
            fun (x2290 : [ `Undefined of undefined  | `U1 of float ]) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2289)
                "minimumSignificantDigits"
                (match x2290 with
                 | `Undefined x2291 -> undefined_to_js x2291
                 | `U1 x2292 -> Ojs.float_to_js x2292)
        let (get_maximumSignificantDigits : 'tags this -> float option) =
          fun (x2294 : 'tags this) ->
            Ojs.option_of_js Ojs.float_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2294)
                 "maximumSignificantDigits")
        let (set_maximumSignificantDigits :
          'tags this -> [ `Undefined of undefined  | `U1 of float ] -> unit)
          =
          fun (x2297 : 'tags this) ->
            fun (x2298 : [ `Undefined of undefined  | `U1 of float ]) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2297)
                "maximumSignificantDigits"
                (match x2298 with
                 | `Undefined x2299 -> undefined_to_js x2299
                 | `U1 x2300 -> Ojs.float_to_js x2300)
        let (create :
          ?localeMatcher:[ `L_s24_best_fit  | `L_s57_lookup ] ->
            ?type_:PluralRuleType.t ->
              ?minimumIntegerDigits:float ->
                ?minimumFractionDigits:float ->
                  ?maximumFractionDigits:float ->
                    ?minimumSignificantDigits:float ->
                      ?maximumSignificantDigits:float -> unit -> t)
          =
          fun
            ?localeMatcher:(x2302 :
                             [ `L_s24_best_fit  | `L_s57_lookup ] option)
            ->
            fun ?type_:(x2303 : PluralRuleType.t option) ->
              fun ?minimumIntegerDigits:(x2304 : float option) ->
                fun ?minimumFractionDigits:(x2305 : float option) ->
                  fun ?maximumFractionDigits:(x2306 : float option) ->
                    fun ?minimumSignificantDigits:(x2307 : float option) ->
                      fun ?maximumSignificantDigits:(x2308 : float option) ->
                        fun () ->
                          let x2309 = Ojs.empty_obj () in
                          (match x2302 with
                           | Some x2316 ->
                               Ojs.set_prop_ascii x2309 "localeMatcher"
                                 (match x2316 with
                                  | `L_s24_best_fit ->
                                      Ojs.string_to_js "best fit"
                                  | `L_s57_lookup ->
                                      Ojs.string_to_js "lookup")
                           | None -> ());
                          (match x2303 with
                           | Some x2315 ->
                               Ojs.set_prop_ascii x2309 "type"
                                 (PluralRuleType.t_to_js x2315)
                           | None -> ());
                          (match x2304 with
                           | Some x2314 ->
                               Ojs.set_prop_ascii x2309
                                 "minimumIntegerDigits"
                                 (Ojs.float_to_js x2314)
                           | None -> ());
                          (match x2305 with
                           | Some x2313 ->
                               Ojs.set_prop_ascii x2309
                                 "minimumFractionDigits"
                                 (Ojs.float_to_js x2313)
                           | None -> ());
                          (match x2306 with
                           | Some x2312 ->
                               Ojs.set_prop_ascii x2309
                                 "maximumFractionDigits"
                                 (Ojs.float_to_js x2312)
                           | None -> ());
                          (match x2307 with
                           | Some x2311 ->
                               Ojs.set_prop_ascii x2309
                                 "minimumSignificantDigits"
                                 (Ojs.float_to_js x2311)
                           | None -> ());
                          (match x2308 with
                           | Some x2310 ->
                               Ojs.set_prop_ascii x2309
                                 "maximumSignificantDigits"
                                 (Ojs.float_to_js x2310)
                           | None -> ());
                          t_of_js x2309
        let cast_from = Obj.magic
      end
    module PluralRules =
      struct
        module AnonymousInterface4 =
          struct
            type t = Ojs.t
            let rec t_of_js : Ojs.t -> t = fun (x2318 : Ojs.t) -> x2318
            and t_to_js : t -> Ojs.t = fun (x2317 : Ojs.t) -> x2317
            let (get_localeMatcher :
              t -> [ `L_s24_best_fit  | `L_s57_lookup ] option) =
              fun (x2319 : t) ->
                Ojs.option_of_js
                  (fun (x2320 : Ojs.t) ->
                     let x2321 = x2320 in
                     match Ojs.string_of_js x2321 with
                     | "best fit" -> `L_s24_best_fit
                     | "lookup" -> `L_s57_lookup
                     | _ -> assert false)
                  (Ojs.get_prop_ascii (t_to_js x2319) "localeMatcher")
            let (set_localeMatcher :
              t ->
                [ `U1 of [ `L_s57_lookup ]  | `U2 of [ `L_s24_best_fit ] ] ->
                  unit)
              =
              fun (x2322 : t) ->
                fun
                  (x2323 :
                    [ `U1 of [ `L_s57_lookup ] 
                    | `U2 of [ `L_s24_best_fit ] ])
                  ->
                  Ojs.set_prop_ascii (t_to_js x2322) "localeMatcher"
                    (match x2323 with
                     | `U1 x2324 ->
                         (match x2324 with
                          | `L_s57_lookup -> Ojs.string_to_js "lookup")
                     | `U2 x2325 ->
                         (match x2325 with
                          | `L_s24_best_fit -> Ojs.string_to_js "best fit"))
            let (create :
              ?localeMatcher:[ `L_s24_best_fit  | `L_s57_lookup ] ->
                unit -> t)
              =
              fun
                ?localeMatcher:(x2326 :
                                 [ `L_s24_best_fit  | `L_s57_lookup ] option)
                ->
                fun () ->
                  let x2327 = Ojs.empty_obj () in
                  (match x2326 with
                   | Some x2328 ->
                       Ojs.set_prop_ascii x2327 "localeMatcher"
                         (match x2328 with
                          | `L_s24_best_fit -> Ojs.string_to_js "best fit"
                          | `L_s57_lookup -> Ojs.string_to_js "lookup")
                   | None -> ());
                  t_of_js x2327
          end
        type t = [ `Intl_PluralRules ] intf
        let rec t_of_js : Ojs.t -> t = Obj.magic
        and t_to_js : t -> Ojs.t = Obj.magic
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x2330 : Ojs.t) -> t_of_js x2330
        and t_0_to_js : t_0 -> Ojs.t = fun (x2329 : t) -> t_to_js x2329
        type tags = [ `Intl_PluralRules ]
        type tags_0 = tags
        type 'tags this =
          'tags intf constraint 'tags = [> `Intl_PluralRules ]
        let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
          =
          fun (type __tags) ->
            fun (__tags_of_js : Ojs.t -> __tags) ->
              fun (x2333 : Ojs.t) -> intf_of_js __tags_of_js x2333
        and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
          fun (type __tags) ->
            fun (__tags_to_js : __tags -> Ojs.t) ->
              fun (x2331 : __tags intf) -> intf_to_js __tags_to_js x2331
        let (resolvedOptions : 'tags this -> ResolvedPluralRulesOptions.t) =
          fun (x2335 : 'tags this) ->
            ResolvedPluralRulesOptions.t_of_js
              (Ojs.call (this_to_js Obj.magic x2335) "resolvedOptions" [||])
        let (select : 'tags this -> n:float -> LDMLPluralRule.t) =
          fun (x2338 : 'tags this) ->
            fun ~n:(x2337 : float) ->
              LDMLPluralRule.t_of_js
                (Ojs.call (this_to_js Obj.magic x2338) "select"
                   [|(Ojs.float_to_js x2337)|])
        let cast_from = Obj.magic
        let (create :
          ?locales:[ `U1 of string  | `U2 of string list ] ->
            ?options:PluralRulesOptions.t -> unit -> t)
          =
          fun
            ?locales:(x2340 : [ `U1 of string  | `U2 of string list ] option)
            ->
            fun ?options:(x2341 : PluralRulesOptions.t option) ->
              fun () ->
                t_of_js
                  (Ojs.new_obj_arr
                     (Ojs.get_prop_ascii
                        (Ojs.get_prop_ascii Ojs.global "Intl") "PluralRules")
                     (let x2342 =
                        Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                          [||] in
                      (match x2340 with
                       | Some x2344 ->
                           ignore
                             (Ojs.call x2342 "push"
                                [|((match x2344 with
                                    | `U1 x2345 -> Ojs.string_to_js x2345
                                    | `U2 x2346 ->
                                        Ojs.list_to_js Ojs.string_to_js x2346))|])
                       | None -> ());
                      (match x2341 with
                       | Some x2343 ->
                           ignore
                             (Ojs.call x2342 "push"
                                [|(PluralRulesOptions.t_to_js x2343)|])
                       | None -> ());
                      x2342))
        let (invoke :
          ?locales:[ `U1 of string  | `U2 of string list ] ->
            ?options:PluralRulesOptions.t -> unit -> t)
          =
          fun
            ?locales:(x2348 : [ `U1 of string  | `U2 of string list ] option)
            ->
            fun ?options:(x2349 : PluralRulesOptions.t option) ->
              fun () ->
                t_of_js
                  (Ojs.call
                     (Ojs.get_prop_ascii
                        (Ojs.get_prop_ascii Ojs.global "Intl") "PluralRules")
                     "apply"
                     [|Ojs.null;((let x2350 =
                                    Ojs.new_obj
                                      (Ojs.get_prop_ascii Ojs.global "Array")
                                      [||] in
                                  (match x2348 with
                                   | Some x2352 ->
                                       ignore
                                         (Ojs.call x2350 "push"
                                            [|((match x2352 with
                                                | `U1 x2353 ->
                                                    Ojs.string_to_js x2353
                                                | `U2 x2354 ->
                                                    Ojs.list_to_js
                                                      Ojs.string_to_js x2354))|])
                                   | None -> ());
                                  (match x2349 with
                                   | Some x2351 ->
                                       ignore
                                         (Ojs.call x2350 "push"
                                            [|(PluralRulesOptions.t_to_js
                                                 x2351)|])
                                   | None -> ());
                                  x2350))|])
        let (supportedLocalesOf :
          locales:[ `U1 of string  | `U2 of string list ] ->
            ?options:AnonymousInterface4.t -> unit -> string list)
          =
          fun ~locales:(x2356 : [ `U1 of string  | `U2 of string list ]) ->
            fun ?options:(x2357 : AnonymousInterface4.t option) ->
              fun () ->
                Ojs.list_of_js Ojs.string_of_js
                  (let x2363 =
                     Ojs.get_prop_ascii
                       (Ojs.get_prop_ascii Ojs.global "Intl") "PluralRules" in
                   Ojs.call (Ojs.get_prop_ascii x2363 "supportedLocalesOf")
                     "apply"
                     [|x2363;((let x2358 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x2358 "push"
                                    [|((match x2356 with
                                        | `U1 x2360 -> Ojs.string_to_js x2360
                                        | `U2 x2361 ->
                                            Ojs.list_to_js Ojs.string_to_js
                                              x2361))|]);
                               (match x2357 with
                                | Some x2359 ->
                                    ignore
                                      (Ojs.call x2358 "push"
                                         [|(AnonymousInterface4.t_to_js x2359)|])
                                | None -> ());
                               x2358))|])
      end
    module ResolvedNumberFormatOptions =
      struct
        type t = [ `Intl_ResolvedNumberFormatOptions ] intf
        let rec t_of_js : Ojs.t -> t = Obj.magic
        and t_to_js : t -> Ojs.t = Obj.magic
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x2366 : Ojs.t) -> t_of_js x2366
        and t_0_to_js : t_0 -> Ojs.t = fun (x2365 : t) -> t_to_js x2365
        type tags = [ `Intl_ResolvedNumberFormatOptions ]
        type tags_0 = tags
        type 'tags this =
          'tags intf constraint 'tags =
                      [> `Intl_ResolvedNumberFormatOptions ]
        let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
          =
          fun (type __tags) ->
            fun (__tags_of_js : Ojs.t -> __tags) ->
              fun (x2369 : Ojs.t) -> intf_of_js __tags_of_js x2369
        and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
          fun (type __tags) ->
            fun (__tags_to_js : __tags -> Ojs.t) ->
              fun (x2367 : __tags intf) -> intf_to_js __tags_to_js x2367
        let (get_compactDisplay :
          'tags this -> [ `L_s56_long  | `L_s89_short ] option) =
          fun (x2371 : 'tags this) ->
            Ojs.option_of_js
              (fun (x2373 : Ojs.t) ->
                 let x2374 = x2373 in
                 match Ojs.string_of_js x2374 with
                 | "long" -> `L_s56_long
                 | "short" -> `L_s89_short
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2371)
                 "compactDisplay")
        let (set_compactDisplay :
          'tags this ->
            [ `U1 of [ `L_s89_short ]  | `U2 of [ `L_s56_long ] ] -> unit)
          =
          fun (x2375 : 'tags this) ->
            fun
              (x2376 : [ `U1 of [ `L_s89_short ]  | `U2 of [ `L_s56_long ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2375)
                "compactDisplay"
                (match x2376 with
                 | `U1 x2377 ->
                     (match x2377 with
                      | `L_s89_short -> Ojs.string_to_js "short")
                 | `U2 x2378 ->
                     (match x2378 with
                      | `L_s56_long -> Ojs.string_to_js "long"))
        let (get_notation :
          'tags this ->
            [ `L_s27_compact  | `L_s34_engineering  | `L_s85_scientific 
            | `L_s90_standard ] option)
          =
          fun (x2380 : 'tags this) ->
            Ojs.option_of_js
              (fun (x2382 : Ojs.t) ->
                 let x2383 = x2382 in
                 match Ojs.string_of_js x2383 with
                 | "compact" -> `L_s27_compact
                 | "engineering" -> `L_s34_engineering
                 | "scientific" -> `L_s85_scientific
                 | "standard" -> `L_s90_standard
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2380) "notation")
        let (set_notation :
          'tags this ->
            [ `U1 of [ `L_s90_standard ]  | `U2 of [ `L_s85_scientific ] 
            | `U3 of [ `L_s34_engineering ]  | `U4 of [ `L_s27_compact ] ] ->
              unit)
          =
          fun (x2384 : 'tags this) ->
            fun
              (x2385 :
                [ `U1 of [ `L_s90_standard ]  | `U2 of [ `L_s85_scientific ] 
                | `U3 of [ `L_s34_engineering ] 
                | `U4 of [ `L_s27_compact ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2384) "notation"
                (match x2385 with
                 | `U1 x2386 ->
                     (match x2386 with
                      | `L_s90_standard -> Ojs.string_to_js "standard")
                 | `U2 x2387 ->
                     (match x2387 with
                      | `L_s85_scientific -> Ojs.string_to_js "scientific")
                 | `U3 x2388 ->
                     (match x2388 with
                      | `L_s34_engineering -> Ojs.string_to_js "engineering")
                 | `U4 x2389 ->
                     (match x2389 with
                      | `L_s27_compact -> Ojs.string_to_js "compact"))
        let (get_signDisplay :
          'tags this ->
            [ `L_s21_always  | `L_s22_auto  | `L_s36_exceptZero 
            | `L_s69_never ] option)
          =
          fun (x2391 : 'tags this) ->
            Ojs.option_of_js
              (fun (x2393 : Ojs.t) ->
                 let x2394 = x2393 in
                 match Ojs.string_of_js x2394 with
                 | "always" -> `L_s21_always
                 | "auto" -> `L_s22_auto
                 | "exceptZero" -> `L_s36_exceptZero
                 | "never" -> `L_s69_never
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2391) "signDisplay")
        let (set_signDisplay :
          'tags this ->
            [ `U1 of [ `L_s22_auto ]  | `U2 of [ `L_s69_never ] 
            | `U3 of [ `L_s21_always ]  | `U4 of [ `L_s36_exceptZero ] ] ->
              unit)
          =
          fun (x2395 : 'tags this) ->
            fun
              (x2396 :
                [ `U1 of [ `L_s22_auto ]  | `U2 of [ `L_s69_never ] 
                | `U3 of [ `L_s21_always ]  | `U4 of [ `L_s36_exceptZero ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2395) "signDisplay"
                (match x2396 with
                 | `U1 x2397 ->
                     (match x2397 with
                      | `L_s22_auto -> Ojs.string_to_js "auto")
                 | `U2 x2398 ->
                     (match x2398 with
                      | `L_s69_never -> Ojs.string_to_js "never")
                 | `U3 x2399 ->
                     (match x2399 with
                      | `L_s21_always -> Ojs.string_to_js "always")
                 | `U4 x2400 ->
                     (match x2400 with
                      | `L_s36_exceptZero -> Ojs.string_to_js "exceptZero"))
        let (get_unit : 'tags this -> string option) =
          fun (x2402 : 'tags this) ->
            Ojs.option_of_js Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2402) "unit")
        let (set_unit : 'tags this -> string -> unit) =
          fun (x2405 : 'tags this) ->
            fun (x2406 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2405) "unit"
                (Ojs.string_to_js x2406)
        let (get_unitDisplay :
          'tags this ->
            [ `L_s56_long  | `L_s68_narrow  | `L_s89_short ] option)
          =
          fun (x2408 : 'tags this) ->
            Ojs.option_of_js
              (fun (x2410 : Ojs.t) ->
                 let x2411 = x2410 in
                 match Ojs.string_of_js x2411 with
                 | "long" -> `L_s56_long
                 | "narrow" -> `L_s68_narrow
                 | "short" -> `L_s89_short
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2408) "unitDisplay")
        let (set_unitDisplay :
          'tags this ->
            [ `U1 of [ `L_s89_short ]  | `U2 of [ `L_s56_long ] 
            | `U3 of [ `L_s68_narrow ] ] -> unit)
          =
          fun (x2412 : 'tags this) ->
            fun
              (x2413 :
                [ `U1 of [ `L_s89_short ]  | `U2 of [ `L_s56_long ] 
                | `U3 of [ `L_s68_narrow ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2412) "unitDisplay"
                (match x2413 with
                 | `U1 x2414 ->
                     (match x2414 with
                      | `L_s89_short -> Ojs.string_to_js "short")
                 | `U2 x2415 ->
                     (match x2415 with
                      | `L_s56_long -> Ojs.string_to_js "long")
                 | `U3 x2416 ->
                     (match x2416 with
                      | `L_s68_narrow -> Ojs.string_to_js "narrow"))
        let (get_currencyDisplay : 'tags this -> string option) =
          fun (x2418 : 'tags this) ->
            Ojs.option_of_js Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2418)
                 "currencyDisplay")
        let (set_currencyDisplay : 'tags this -> string -> unit) =
          fun (x2421 : 'tags this) ->
            fun (x2422 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2421)
                "currencyDisplay" (Ojs.string_to_js x2422)
        let (get_currencySign : 'tags this -> string option) =
          fun (x2424 : 'tags this) ->
            Ojs.option_of_js Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2424) "currencySign")
        let (set_currencySign : 'tags this -> string -> unit) =
          fun (x2427 : 'tags this) ->
            fun (x2428 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2427) "currencySign"
                (Ojs.string_to_js x2428)
        let (get_locale : 'tags this -> string) =
          fun (x2430 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2430) "locale")
        let (set_locale : 'tags this -> string -> unit) =
          fun (x2432 : 'tags this) ->
            fun (x2433 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2432) "locale"
                (Ojs.string_to_js x2433)
        let (get_numberingSystem : 'tags this -> string) =
          fun (x2435 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2435)
                 "numberingSystem")
        let (set_numberingSystem : 'tags this -> string -> unit) =
          fun (x2437 : 'tags this) ->
            fun (x2438 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2437)
                "numberingSystem" (Ojs.string_to_js x2438)
        let (get_style : 'tags this -> string) =
          fun (x2440 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2440) "style")
        let (set_style : 'tags this -> string -> unit) =
          fun (x2442 : 'tags this) ->
            fun (x2443 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2442) "style"
                (Ojs.string_to_js x2443)
        let (get_currency : 'tags this -> string option) =
          fun (x2445 : 'tags this) ->
            Ojs.option_of_js Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2445) "currency")
        let (set_currency : 'tags this -> string -> unit) =
          fun (x2448 : 'tags this) ->
            fun (x2449 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2448) "currency"
                (Ojs.string_to_js x2449)
        let (get_minimumIntegerDigits : 'tags this -> float) =
          fun (x2451 : 'tags this) ->
            Ojs.float_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2451)
                 "minimumIntegerDigits")
        let (set_minimumIntegerDigits : 'tags this -> float -> unit) =
          fun (x2453 : 'tags this) ->
            fun (x2454 : float) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2453)
                "minimumIntegerDigits" (Ojs.float_to_js x2454)
        let (get_minimumFractionDigits : 'tags this -> float) =
          fun (x2456 : 'tags this) ->
            Ojs.float_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2456)
                 "minimumFractionDigits")
        let (set_minimumFractionDigits : 'tags this -> float -> unit) =
          fun (x2458 : 'tags this) ->
            fun (x2459 : float) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2458)
                "minimumFractionDigits" (Ojs.float_to_js x2459)
        let (get_maximumFractionDigits : 'tags this -> float) =
          fun (x2461 : 'tags this) ->
            Ojs.float_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2461)
                 "maximumFractionDigits")
        let (set_maximumFractionDigits : 'tags this -> float -> unit) =
          fun (x2463 : 'tags this) ->
            fun (x2464 : float) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2463)
                "maximumFractionDigits" (Ojs.float_to_js x2464)
        let (get_minimumSignificantDigits : 'tags this -> float option) =
          fun (x2466 : 'tags this) ->
            Ojs.option_of_js Ojs.float_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2466)
                 "minimumSignificantDigits")
        let (set_minimumSignificantDigits : 'tags this -> float -> unit) =
          fun (x2469 : 'tags this) ->
            fun (x2470 : float) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2469)
                "minimumSignificantDigits" (Ojs.float_to_js x2470)
        let (get_maximumSignificantDigits : 'tags this -> float option) =
          fun (x2472 : 'tags this) ->
            Ojs.option_of_js Ojs.float_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2472)
                 "maximumSignificantDigits")
        let (set_maximumSignificantDigits : 'tags this -> float -> unit) =
          fun (x2475 : 'tags this) ->
            fun (x2476 : float) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2475)
                "maximumSignificantDigits" (Ojs.float_to_js x2476)
        let (get_useGrouping : 'tags this -> bool) =
          fun (x2478 : 'tags this) ->
            Ojs.bool_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2478) "useGrouping")
        let (set_useGrouping : 'tags this -> bool -> unit) =
          fun (x2480 : 'tags this) ->
            fun (x2481 : bool) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2480) "useGrouping"
                (Ojs.bool_to_js x2481)
        let (create :
          ?compactDisplay:[ `L_s56_long  | `L_s89_short ] ->
            ?notation:[ `L_s27_compact  | `L_s34_engineering 
                      | `L_s85_scientific  | `L_s90_standard ]
              ->
              ?signDisplay:[ `L_s21_always  | `L_s22_auto 
                           | `L_s36_exceptZero  | `L_s69_never ]
                ->
                ?unit:string ->
                  ?unitDisplay:[ `L_s56_long  | `L_s68_narrow 
                               | `L_s89_short ]
                    ->
                    ?currencyDisplay:string ->
                      ?currencySign:string ->
                        locale:string ->
                          numberingSystem:string ->
                            style:string ->
                              ?currency:string ->
                                minimumIntegerDigits:float ->
                                  minimumFractionDigits:float ->
                                    maximumFractionDigits:float ->
                                      ?minimumSignificantDigits:float ->
                                        ?maximumSignificantDigits:float ->
                                          useGrouping:bool -> unit -> t)
          =
          fun
            ?compactDisplay:(x2483 : [ `L_s56_long  | `L_s89_short ] option)
            ->
            fun
              ?notation:(x2484 :
                          [ `L_s27_compact  | `L_s34_engineering 
                          | `L_s85_scientific  | `L_s90_standard ] option)
              ->
              fun
                ?signDisplay:(x2485 :
                               [ `L_s21_always  | `L_s22_auto 
                               | `L_s36_exceptZero  | `L_s69_never ] option)
                ->
                fun ?unit:(x2486 : string option) ->
                  fun
                    ?unitDisplay:(x2487 :
                                   [ `L_s56_long  | `L_s68_narrow 
                                   | `L_s89_short ] option)
                    ->
                    fun ?currencyDisplay:(x2488 : string option) ->
                      fun ?currencySign:(x2489 : string option) ->
                        fun ~locale:(x2490 : string) ->
                          fun ~numberingSystem:(x2491 : string) ->
                            fun ~style:(x2492 : string) ->
                              fun ?currency:(x2493 : string option) ->
                                fun ~minimumIntegerDigits:(x2494 : float) ->
                                  fun ~minimumFractionDigits:(x2495 : float)
                                    ->
                                    fun
                                      ~maximumFractionDigits:(x2496 : float)
                                      ->
                                      fun
                                        ?minimumSignificantDigits:(x2497 :
                                                                    float
                                                                    option)
                                        ->
                                        fun
                                          ?maximumSignificantDigits:(x2498 :
                                                                    float
                                                                    option)
                                          ->
                                          fun ~useGrouping:(x2499 : bool) ->
                                            fun () ->
                                              let x2500 = Ojs.empty_obj () in
                                              (match x2483 with
                                               | Some x2510 ->
                                                   Ojs.set_prop_ascii x2500
                                                     "compactDisplay"
                                                     (match x2510 with
                                                      | `L_s56_long ->
                                                          Ojs.string_to_js
                                                            "long"
                                                      | `L_s89_short ->
                                                          Ojs.string_to_js
                                                            "short")
                                               | None -> ());
                                              (match x2484 with
                                               | Some x2509 ->
                                                   Ojs.set_prop_ascii x2500
                                                     "notation"
                                                     (match x2509 with
                                                      | `L_s27_compact ->
                                                          Ojs.string_to_js
                                                            "compact"
                                                      | `L_s34_engineering ->
                                                          Ojs.string_to_js
                                                            "engineering"
                                                      | `L_s85_scientific ->
                                                          Ojs.string_to_js
                                                            "scientific"
                                                      | `L_s90_standard ->
                                                          Ojs.string_to_js
                                                            "standard")
                                               | None -> ());
                                              (match x2485 with
                                               | Some x2508 ->
                                                   Ojs.set_prop_ascii x2500
                                                     "signDisplay"
                                                     (match x2508 with
                                                      | `L_s21_always ->
                                                          Ojs.string_to_js
                                                            "always"
                                                      | `L_s22_auto ->
                                                          Ojs.string_to_js
                                                            "auto"
                                                      | `L_s36_exceptZero ->
                                                          Ojs.string_to_js
                                                            "exceptZero"
                                                      | `L_s69_never ->
                                                          Ojs.string_to_js
                                                            "never")
                                               | None -> ());
                                              (match x2486 with
                                               | Some x2507 ->
                                                   Ojs.set_prop_ascii x2500
                                                     "unit"
                                                     (Ojs.string_to_js x2507)
                                               | None -> ());
                                              (match x2487 with
                                               | Some x2506 ->
                                                   Ojs.set_prop_ascii x2500
                                                     "unitDisplay"
                                                     (match x2506 with
                                                      | `L_s56_long ->
                                                          Ojs.string_to_js
                                                            "long"
                                                      | `L_s68_narrow ->
                                                          Ojs.string_to_js
                                                            "narrow"
                                                      | `L_s89_short ->
                                                          Ojs.string_to_js
                                                            "short")
                                               | None -> ());
                                              (match x2488 with
                                               | Some x2505 ->
                                                   Ojs.set_prop_ascii x2500
                                                     "currencyDisplay"
                                                     (Ojs.string_to_js x2505)
                                               | None -> ());
                                              (match x2489 with
                                               | Some x2504 ->
                                                   Ojs.set_prop_ascii x2500
                                                     "currencySign"
                                                     (Ojs.string_to_js x2504)
                                               | None -> ());
                                              Ojs.set_prop_ascii x2500
                                                "locale"
                                                (Ojs.string_to_js x2490);
                                              Ojs.set_prop_ascii x2500
                                                "numberingSystem"
                                                (Ojs.string_to_js x2491);
                                              Ojs.set_prop_ascii x2500
                                                "style"
                                                (Ojs.string_to_js x2492);
                                              (match x2493 with
                                               | Some x2503 ->
                                                   Ojs.set_prop_ascii x2500
                                                     "currency"
                                                     (Ojs.string_to_js x2503)
                                               | None -> ());
                                              Ojs.set_prop_ascii x2500
                                                "minimumIntegerDigits"
                                                (Ojs.float_to_js x2494);
                                              Ojs.set_prop_ascii x2500
                                                "minimumFractionDigits"
                                                (Ojs.float_to_js x2495);
                                              Ojs.set_prop_ascii x2500
                                                "maximumFractionDigits"
                                                (Ojs.float_to_js x2496);
                                              (match x2497 with
                                               | Some x2502 ->
                                                   Ojs.set_prop_ascii x2500
                                                     "minimumSignificantDigits"
                                                     (Ojs.float_to_js x2502)
                                               | None -> ());
                                              (match x2498 with
                                               | Some x2501 ->
                                                   Ojs.set_prop_ascii x2500
                                                     "maximumSignificantDigits"
                                                     (Ojs.float_to_js x2501)
                                               | None -> ());
                                              Ojs.set_prop_ascii x2500
                                                "useGrouping"
                                                (Ojs.bool_to_js x2499);
                                              t_of_js x2500
        let cast_from = Obj.magic
      end
    module ES2020NumberFormatPartType =
      struct
        type t =
          [ `L_s27_compact  | `L_s37_exponentInteger 
          | `L_s38_exponentMinusSign  | `L_s39_exponentSeparator 
          | `L_s96_unit  | `L_s97_unknown ]
        let rec t_of_js : Ojs.t -> t =
          fun (x2512 : Ojs.t) ->
            let x2513 = x2512 in
            match Ojs.string_of_js x2513 with
            | "compact" -> `L_s27_compact
            | "exponentInteger" -> `L_s37_exponentInteger
            | "exponentMinusSign" -> `L_s38_exponentMinusSign
            | "exponentSeparator" -> `L_s39_exponentSeparator
            | "unit" -> `L_s96_unit
            | "unknown" -> `L_s97_unknown
            | _ -> assert false
        and t_to_js : t -> Ojs.t =
          fun
            (x2511 :
              [ `L_s27_compact  | `L_s37_exponentInteger 
              | `L_s38_exponentMinusSign  | `L_s39_exponentSeparator 
              | `L_s96_unit  | `L_s97_unknown ])
            ->
            match x2511 with
            | `L_s27_compact -> Ojs.string_to_js "compact"
            | `L_s37_exponentInteger -> Ojs.string_to_js "exponentInteger"
            | `L_s38_exponentMinusSign ->
                Ojs.string_to_js "exponentMinusSign"
            | `L_s39_exponentSeparator ->
                Ojs.string_to_js "exponentSeparator"
            | `L_s96_unit -> Ojs.string_to_js "unit"
            | `L_s97_unknown -> Ojs.string_to_js "unknown"
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x2515 : Ojs.t) -> t_of_js x2515
        and t_0_to_js : t_0 -> Ojs.t = fun (x2514 : t) -> t_to_js x2514
      end
    module ES2018NumberFormatPartType =
      struct
        type t =
          [ `L_s26_code  | `L_s28_currency  | `L_s32_decimal 
          | `L_s42_fraction  | `L_s45_group  | `L_s52_infinity 
          | `L_s53_integer  | `L_s55_literal  | `L_s61_minusSign 
          | `L_s66_name  | `L_s67_nan  | `L_s78_percent 
          | `L_s79_percentSign  | `L_s80_plusSign  | `L_s92_symbol ]
        let rec t_of_js : Ojs.t -> t =
          fun (x2517 : Ojs.t) ->
            let x2518 = x2517 in
            match Ojs.string_of_js x2518 with
            | "code" -> `L_s26_code
            | "currency" -> `L_s28_currency
            | "decimal" -> `L_s32_decimal
            | "fraction" -> `L_s42_fraction
            | "group" -> `L_s45_group
            | "infinity" -> `L_s52_infinity
            | "integer" -> `L_s53_integer
            | "literal" -> `L_s55_literal
            | "minusSign" -> `L_s61_minusSign
            | "name" -> `L_s66_name
            | "nan" -> `L_s67_nan
            | "percent" -> `L_s78_percent
            | "percentSign" -> `L_s79_percentSign
            | "plusSign" -> `L_s80_plusSign
            | "symbol" -> `L_s92_symbol
            | _ -> assert false
        and t_to_js : t -> Ojs.t =
          fun
            (x2516 :
              [ `L_s26_code  | `L_s28_currency  | `L_s32_decimal 
              | `L_s42_fraction  | `L_s45_group  | `L_s52_infinity 
              | `L_s53_integer  | `L_s55_literal  | `L_s61_minusSign 
              | `L_s66_name  | `L_s67_nan  | `L_s78_percent 
              | `L_s79_percentSign  | `L_s80_plusSign  | `L_s92_symbol ])
            ->
            match x2516 with
            | `L_s26_code -> Ojs.string_to_js "code"
            | `L_s28_currency -> Ojs.string_to_js "currency"
            | `L_s32_decimal -> Ojs.string_to_js "decimal"
            | `L_s42_fraction -> Ojs.string_to_js "fraction"
            | `L_s45_group -> Ojs.string_to_js "group"
            | `L_s52_infinity -> Ojs.string_to_js "infinity"
            | `L_s53_integer -> Ojs.string_to_js "integer"
            | `L_s55_literal -> Ojs.string_to_js "literal"
            | `L_s61_minusSign -> Ojs.string_to_js "minusSign"
            | `L_s66_name -> Ojs.string_to_js "name"
            | `L_s67_nan -> Ojs.string_to_js "nan"
            | `L_s78_percent -> Ojs.string_to_js "percent"
            | `L_s79_percentSign -> Ojs.string_to_js "percentSign"
            | `L_s80_plusSign -> Ojs.string_to_js "plusSign"
            | `L_s92_symbol -> Ojs.string_to_js "symbol"
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x2520 : Ojs.t) -> t_of_js x2520
        and t_0_to_js : t_0 -> Ojs.t = fun (x2519 : t) -> t_to_js x2519
      end
    module NumberFormatPartTypes =
      struct
        type t =
          [ `L_s26_code  | `L_s27_compact  | `L_s28_currency 
          | `L_s32_decimal  | `L_s37_exponentInteger 
          | `L_s38_exponentMinusSign  | `L_s39_exponentSeparator 
          | `L_s42_fraction  | `L_s45_group  | `L_s52_infinity 
          | `L_s53_integer  | `L_s55_literal  | `L_s61_minusSign 
          | `L_s66_name  | `L_s67_nan  | `L_s78_percent 
          | `L_s79_percentSign  | `L_s80_plusSign  | `L_s92_symbol 
          | `L_s96_unit  | `L_s97_unknown ]
        let rec t_of_js : Ojs.t -> t =
          fun (x2522 : Ojs.t) ->
            let x2523 = x2522 in
            match Ojs.string_of_js x2523 with
            | "code" -> `L_s26_code
            | "compact" -> `L_s27_compact
            | "currency" -> `L_s28_currency
            | "decimal" -> `L_s32_decimal
            | "exponentInteger" -> `L_s37_exponentInteger
            | "exponentMinusSign" -> `L_s38_exponentMinusSign
            | "exponentSeparator" -> `L_s39_exponentSeparator
            | "fraction" -> `L_s42_fraction
            | "group" -> `L_s45_group
            | "infinity" -> `L_s52_infinity
            | "integer" -> `L_s53_integer
            | "literal" -> `L_s55_literal
            | "minusSign" -> `L_s61_minusSign
            | "name" -> `L_s66_name
            | "nan" -> `L_s67_nan
            | "percent" -> `L_s78_percent
            | "percentSign" -> `L_s79_percentSign
            | "plusSign" -> `L_s80_plusSign
            | "symbol" -> `L_s92_symbol
            | "unit" -> `L_s96_unit
            | "unknown" -> `L_s97_unknown
            | _ -> assert false
        and t_to_js : t -> Ojs.t =
          fun
            (x2521 :
              [ `L_s26_code  | `L_s27_compact  | `L_s28_currency 
              | `L_s32_decimal  | `L_s37_exponentInteger 
              | `L_s38_exponentMinusSign  | `L_s39_exponentSeparator 
              | `L_s42_fraction  | `L_s45_group  | `L_s52_infinity 
              | `L_s53_integer  | `L_s55_literal  | `L_s61_minusSign 
              | `L_s66_name  | `L_s67_nan  | `L_s78_percent 
              | `L_s79_percentSign  | `L_s80_plusSign  | `L_s92_symbol 
              | `L_s96_unit  | `L_s97_unknown ])
            ->
            match x2521 with
            | `L_s26_code -> Ojs.string_to_js "code"
            | `L_s27_compact -> Ojs.string_to_js "compact"
            | `L_s28_currency -> Ojs.string_to_js "currency"
            | `L_s32_decimal -> Ojs.string_to_js "decimal"
            | `L_s37_exponentInteger -> Ojs.string_to_js "exponentInteger"
            | `L_s38_exponentMinusSign ->
                Ojs.string_to_js "exponentMinusSign"
            | `L_s39_exponentSeparator ->
                Ojs.string_to_js "exponentSeparator"
            | `L_s42_fraction -> Ojs.string_to_js "fraction"
            | `L_s45_group -> Ojs.string_to_js "group"
            | `L_s52_infinity -> Ojs.string_to_js "infinity"
            | `L_s53_integer -> Ojs.string_to_js "integer"
            | `L_s55_literal -> Ojs.string_to_js "literal"
            | `L_s61_minusSign -> Ojs.string_to_js "minusSign"
            | `L_s66_name -> Ojs.string_to_js "name"
            | `L_s67_nan -> Ojs.string_to_js "nan"
            | `L_s78_percent -> Ojs.string_to_js "percent"
            | `L_s79_percentSign -> Ojs.string_to_js "percentSign"
            | `L_s80_plusSign -> Ojs.string_to_js "plusSign"
            | `L_s92_symbol -> Ojs.string_to_js "symbol"
            | `L_s96_unit -> Ojs.string_to_js "unit"
            | `L_s97_unknown -> Ojs.string_to_js "unknown"
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x2525 : Ojs.t) -> t_of_js x2525
        and t_0_to_js : t_0 -> Ojs.t = fun (x2524 : t) -> t_to_js x2524
      end
    module NumberFormatPart =
      struct
        type t = [ `Intl_NumberFormatPart ] intf
        let rec t_of_js : Ojs.t -> t = Obj.magic
        and t_to_js : t -> Ojs.t = Obj.magic
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x2527 : Ojs.t) -> t_of_js x2527
        and t_0_to_js : t_0 -> Ojs.t = fun (x2526 : t) -> t_to_js x2526
        type tags = [ `Intl_NumberFormatPart ]
        type tags_0 = tags
        type 'tags this =
          'tags intf constraint 'tags = [> `Intl_NumberFormatPart ]
        let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
          =
          fun (type __tags) ->
            fun (__tags_of_js : Ojs.t -> __tags) ->
              fun (x2530 : Ojs.t) -> intf_of_js __tags_of_js x2530
        and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
          fun (type __tags) ->
            fun (__tags_to_js : __tags -> Ojs.t) ->
              fun (x2528 : __tags intf) -> intf_to_js __tags_to_js x2528
        let (get_type : 'tags this -> NumberFormatPartTypes.t) =
          fun (x2532 : 'tags this) ->
            NumberFormatPartTypes.t_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2532) "type")
        let (set_type : 'tags this -> NumberFormatPartTypes.t -> unit) =
          fun (x2534 : 'tags this) ->
            fun (x2535 : NumberFormatPartTypes.t) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2534) "type"
                (NumberFormatPartTypes.t_to_js x2535)
        let (get_value : 'tags this -> string) =
          fun (x2537 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2537) "value")
        let (set_value : 'tags this -> string -> unit) =
          fun (x2539 : 'tags this) ->
            fun (x2540 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2539) "value"
                (Ojs.string_to_js x2540)
        let (create :
          type_:NumberFormatPartTypes.t -> value:string -> unit -> t) =
          fun ~type_:(x2542 : NumberFormatPartTypes.t) ->
            fun ~value:(x2543 : string) ->
              fun () ->
                let x2544 = Ojs.empty_obj () in
                Ojs.set_prop_ascii x2544 "type"
                  (NumberFormatPartTypes.t_to_js x2542);
                Ojs.set_prop_ascii x2544 "value" (Ojs.string_to_js x2543);
                t_of_js x2544
        let cast_from = Obj.magic
      end
    module NumberFormatOptions =
      struct
        type t = [ `Intl_NumberFormatOptions ] intf
        let rec t_of_js : Ojs.t -> t = Obj.magic
        and t_to_js : t -> Ojs.t = Obj.magic
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x2546 : Ojs.t) -> t_of_js x2546
        and t_0_to_js : t_0 -> Ojs.t = fun (x2545 : t) -> t_to_js x2545
        type tags = [ `Intl_NumberFormatOptions ]
        type tags_0 = tags
        type 'tags this =
          'tags intf constraint 'tags = [> `Intl_NumberFormatOptions ]
        let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
          =
          fun (type __tags) ->
            fun (__tags_of_js : Ojs.t -> __tags) ->
              fun (x2549 : Ojs.t) -> intf_of_js __tags_of_js x2549
        and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
          fun (type __tags) ->
            fun (__tags_to_js : __tags -> Ojs.t) ->
              fun (x2547 : __tags intf) -> intf_to_js __tags_to_js x2547
        let (get_compactDisplay :
          'tags this -> [ `L_s56_long  | `L_s89_short ] option) =
          fun (x2551 : 'tags this) ->
            Ojs.option_of_js
              (fun (x2553 : Ojs.t) ->
                 let x2554 = x2553 in
                 match Ojs.string_of_js x2554 with
                 | "long" -> `L_s56_long
                 | "short" -> `L_s89_short
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2551)
                 "compactDisplay")
        let (set_compactDisplay :
          'tags this ->
            [ `Undefined of undefined  | `U1 of [ `L_s89_short ] 
            | `U2 of [ `L_s56_long ] ] -> unit)
          =
          fun (x2555 : 'tags this) ->
            fun
              (x2556 :
                [ `Undefined of undefined  | `U1 of [ `L_s89_short ] 
                | `U2 of [ `L_s56_long ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2555)
                "compactDisplay"
                (match x2556 with
                 | `Undefined x2557 -> undefined_to_js x2557
                 | `U1 x2558 ->
                     (match x2558 with
                      | `L_s89_short -> Ojs.string_to_js "short")
                 | `U2 x2559 ->
                     (match x2559 with
                      | `L_s56_long -> Ojs.string_to_js "long"))
        let (get_notation :
          'tags this ->
            [ `L_s27_compact  | `L_s34_engineering  | `L_s85_scientific 
            | `L_s90_standard ] option)
          =
          fun (x2561 : 'tags this) ->
            Ojs.option_of_js
              (fun (x2563 : Ojs.t) ->
                 let x2564 = x2563 in
                 match Ojs.string_of_js x2564 with
                 | "compact" -> `L_s27_compact
                 | "engineering" -> `L_s34_engineering
                 | "scientific" -> `L_s85_scientific
                 | "standard" -> `L_s90_standard
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2561) "notation")
        let (set_notation :
          'tags this ->
            [ `Undefined of undefined  | `U1 of [ `L_s90_standard ] 
            | `U2 of [ `L_s85_scientific ]  | `U3 of [ `L_s34_engineering ] 
            | `U4 of [ `L_s27_compact ] ] -> unit)
          =
          fun (x2565 : 'tags this) ->
            fun
              (x2566 :
                [ `Undefined of undefined  | `U1 of [ `L_s90_standard ] 
                | `U2 of [ `L_s85_scientific ] 
                | `U3 of [ `L_s34_engineering ] 
                | `U4 of [ `L_s27_compact ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2565) "notation"
                (match x2566 with
                 | `Undefined x2567 -> undefined_to_js x2567
                 | `U1 x2568 ->
                     (match x2568 with
                      | `L_s90_standard -> Ojs.string_to_js "standard")
                 | `U2 x2569 ->
                     (match x2569 with
                      | `L_s85_scientific -> Ojs.string_to_js "scientific")
                 | `U3 x2570 ->
                     (match x2570 with
                      | `L_s34_engineering -> Ojs.string_to_js "engineering")
                 | `U4 x2571 ->
                     (match x2571 with
                      | `L_s27_compact -> Ojs.string_to_js "compact"))
        let (get_signDisplay :
          'tags this ->
            [ `L_s21_always  | `L_s22_auto  | `L_s36_exceptZero 
            | `L_s69_never ] option)
          =
          fun (x2573 : 'tags this) ->
            Ojs.option_of_js
              (fun (x2575 : Ojs.t) ->
                 let x2576 = x2575 in
                 match Ojs.string_of_js x2576 with
                 | "always" -> `L_s21_always
                 | "auto" -> `L_s22_auto
                 | "exceptZero" -> `L_s36_exceptZero
                 | "never" -> `L_s69_never
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2573) "signDisplay")
        let (set_signDisplay :
          'tags this ->
            [ `Undefined of undefined  | `U1 of [ `L_s22_auto ] 
            | `U2 of [ `L_s69_never ]  | `U3 of [ `L_s21_always ] 
            | `U4 of [ `L_s36_exceptZero ] ] -> unit)
          =
          fun (x2577 : 'tags this) ->
            fun
              (x2578 :
                [ `Undefined of undefined  | `U1 of [ `L_s22_auto ] 
                | `U2 of [ `L_s69_never ]  | `U3 of [ `L_s21_always ] 
                | `U4 of [ `L_s36_exceptZero ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2577) "signDisplay"
                (match x2578 with
                 | `Undefined x2579 -> undefined_to_js x2579
                 | `U1 x2580 ->
                     (match x2580 with
                      | `L_s22_auto -> Ojs.string_to_js "auto")
                 | `U2 x2581 ->
                     (match x2581 with
                      | `L_s69_never -> Ojs.string_to_js "never")
                 | `U3 x2582 ->
                     (match x2582 with
                      | `L_s21_always -> Ojs.string_to_js "always")
                 | `U4 x2583 ->
                     (match x2583 with
                      | `L_s36_exceptZero -> Ojs.string_to_js "exceptZero"))
        let (get_unit : 'tags this -> string option) =
          fun (x2585 : 'tags this) ->
            Ojs.option_of_js Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2585) "unit")
        let (set_unit :
          'tags this -> [ `Undefined of undefined  | `U1 of string ] -> unit)
          =
          fun (x2588 : 'tags this) ->
            fun (x2589 : [ `Undefined of undefined  | `U1 of string ]) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2588) "unit"
                (match x2589 with
                 | `Undefined x2590 -> undefined_to_js x2590
                 | `U1 x2591 -> Ojs.string_to_js x2591)
        let (get_unitDisplay :
          'tags this ->
            [ `L_s56_long  | `L_s68_narrow  | `L_s89_short ] option)
          =
          fun (x2593 : 'tags this) ->
            Ojs.option_of_js
              (fun (x2595 : Ojs.t) ->
                 let x2596 = x2595 in
                 match Ojs.string_of_js x2596 with
                 | "long" -> `L_s56_long
                 | "narrow" -> `L_s68_narrow
                 | "short" -> `L_s89_short
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2593) "unitDisplay")
        let (set_unitDisplay :
          'tags this ->
            [ `Undefined of undefined  | `U1 of [ `L_s89_short ] 
            | `U2 of [ `L_s56_long ]  | `U3 of [ `L_s68_narrow ] ] -> 
              unit)
          =
          fun (x2597 : 'tags this) ->
            fun
              (x2598 :
                [ `Undefined of undefined  | `U1 of [ `L_s89_short ] 
                | `U2 of [ `L_s56_long ]  | `U3 of [ `L_s68_narrow ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2597) "unitDisplay"
                (match x2598 with
                 | `Undefined x2599 -> undefined_to_js x2599
                 | `U1 x2600 ->
                     (match x2600 with
                      | `L_s89_short -> Ojs.string_to_js "short")
                 | `U2 x2601 ->
                     (match x2601 with
                      | `L_s56_long -> Ojs.string_to_js "long")
                 | `U3 x2602 ->
                     (match x2602 with
                      | `L_s68_narrow -> Ojs.string_to_js "narrow"))
        let (get_currencyDisplay : 'tags this -> string option) =
          fun (x2604 : 'tags this) ->
            Ojs.option_of_js Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2604)
                 "currencyDisplay")
        let (set_currencyDisplay :
          'tags this -> [ `Undefined of undefined  | `U1 of string ] -> unit)
          =
          fun (x2607 : 'tags this) ->
            fun (x2608 : [ `Undefined of undefined  | `U1 of string ]) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2607)
                "currencyDisplay"
                (match x2608 with
                 | `Undefined x2609 -> undefined_to_js x2609
                 | `U1 x2610 -> Ojs.string_to_js x2610)
        let (get_currencySign : 'tags this -> string option) =
          fun (x2612 : 'tags this) ->
            Ojs.option_of_js Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2612) "currencySign")
        let (set_currencySign :
          'tags this -> [ `Undefined of undefined  | `U1 of string ] -> unit)
          =
          fun (x2615 : 'tags this) ->
            fun (x2616 : [ `Undefined of undefined  | `U1 of string ]) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2615) "currencySign"
                (match x2616 with
                 | `Undefined x2617 -> undefined_to_js x2617
                 | `U1 x2618 -> Ojs.string_to_js x2618)
        let (get_localeMatcher : 'tags this -> string option) =
          fun (x2620 : 'tags this) ->
            Ojs.option_of_js Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2620)
                 "localeMatcher")
        let (set_localeMatcher :
          'tags this -> [ `Undefined of undefined  | `U1 of string ] -> unit)
          =
          fun (x2623 : 'tags this) ->
            fun (x2624 : [ `Undefined of undefined  | `U1 of string ]) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2623) "localeMatcher"
                (match x2624 with
                 | `Undefined x2625 -> undefined_to_js x2625
                 | `U1 x2626 -> Ojs.string_to_js x2626)
        let (get_style : 'tags this -> string option) =
          fun (x2628 : 'tags this) ->
            Ojs.option_of_js Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2628) "style")
        let (set_style :
          'tags this -> [ `Undefined of undefined  | `U1 of string ] -> unit)
          =
          fun (x2631 : 'tags this) ->
            fun (x2632 : [ `Undefined of undefined  | `U1 of string ]) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2631) "style"
                (match x2632 with
                 | `Undefined x2633 -> undefined_to_js x2633
                 | `U1 x2634 -> Ojs.string_to_js x2634)
        let (get_currency : 'tags this -> string option) =
          fun (x2636 : 'tags this) ->
            Ojs.option_of_js Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2636) "currency")
        let (set_currency :
          'tags this -> [ `Undefined of undefined  | `U1 of string ] -> unit)
          =
          fun (x2639 : 'tags this) ->
            fun (x2640 : [ `Undefined of undefined  | `U1 of string ]) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2639) "currency"
                (match x2640 with
                 | `Undefined x2641 -> undefined_to_js x2641
                 | `U1 x2642 -> Ojs.string_to_js x2642)
        let (get_currencySign' : 'tags this -> string option) =
          fun (x2644 : 'tags this) ->
            Ojs.option_of_js Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2644) "currencySign")
        let (set_currencySign' :
          'tags this -> [ `Undefined of undefined  | `U1 of string ] -> unit)
          =
          fun (x2647 : 'tags this) ->
            fun (x2648 : [ `Undefined of undefined  | `U1 of string ]) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2647) "currencySign"
                (match x2648 with
                 | `Undefined x2649 -> undefined_to_js x2649
                 | `U1 x2650 -> Ojs.string_to_js x2650)
        let (get_useGrouping : 'tags this -> bool option) =
          fun (x2652 : 'tags this) ->
            Ojs.option_of_js Ojs.bool_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2652) "useGrouping")
        let (set_useGrouping :
          'tags this -> [ `Undefined of undefined  | `U1 of bool ] -> unit) =
          fun (x2655 : 'tags this) ->
            fun (x2656 : [ `Undefined of undefined  | `U1 of bool ]) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2655) "useGrouping"
                (match x2656 with
                 | `Undefined x2657 -> undefined_to_js x2657
                 | `U1 x2658 -> Ojs.bool_to_js x2658)
        let (get_minimumIntegerDigits : 'tags this -> float option) =
          fun (x2660 : 'tags this) ->
            Ojs.option_of_js Ojs.float_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2660)
                 "minimumIntegerDigits")
        let (set_minimumIntegerDigits :
          'tags this -> [ `Undefined of undefined  | `U1 of float ] -> unit)
          =
          fun (x2663 : 'tags this) ->
            fun (x2664 : [ `Undefined of undefined  | `U1 of float ]) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2663)
                "minimumIntegerDigits"
                (match x2664 with
                 | `Undefined x2665 -> undefined_to_js x2665
                 | `U1 x2666 -> Ojs.float_to_js x2666)
        let (get_minimumFractionDigits : 'tags this -> float option) =
          fun (x2668 : 'tags this) ->
            Ojs.option_of_js Ojs.float_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2668)
                 "minimumFractionDigits")
        let (set_minimumFractionDigits :
          'tags this -> [ `Undefined of undefined  | `U1 of float ] -> unit)
          =
          fun (x2671 : 'tags this) ->
            fun (x2672 : [ `Undefined of undefined  | `U1 of float ]) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2671)
                "minimumFractionDigits"
                (match x2672 with
                 | `Undefined x2673 -> undefined_to_js x2673
                 | `U1 x2674 -> Ojs.float_to_js x2674)
        let (get_maximumFractionDigits : 'tags this -> float option) =
          fun (x2676 : 'tags this) ->
            Ojs.option_of_js Ojs.float_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2676)
                 "maximumFractionDigits")
        let (set_maximumFractionDigits :
          'tags this -> [ `Undefined of undefined  | `U1 of float ] -> unit)
          =
          fun (x2679 : 'tags this) ->
            fun (x2680 : [ `Undefined of undefined  | `U1 of float ]) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2679)
                "maximumFractionDigits"
                (match x2680 with
                 | `Undefined x2681 -> undefined_to_js x2681
                 | `U1 x2682 -> Ojs.float_to_js x2682)
        let (get_minimumSignificantDigits : 'tags this -> float option) =
          fun (x2684 : 'tags this) ->
            Ojs.option_of_js Ojs.float_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2684)
                 "minimumSignificantDigits")
        let (set_minimumSignificantDigits :
          'tags this -> [ `Undefined of undefined  | `U1 of float ] -> unit)
          =
          fun (x2687 : 'tags this) ->
            fun (x2688 : [ `Undefined of undefined  | `U1 of float ]) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2687)
                "minimumSignificantDigits"
                (match x2688 with
                 | `Undefined x2689 -> undefined_to_js x2689
                 | `U1 x2690 -> Ojs.float_to_js x2690)
        let (get_maximumSignificantDigits : 'tags this -> float option) =
          fun (x2692 : 'tags this) ->
            Ojs.option_of_js Ojs.float_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2692)
                 "maximumSignificantDigits")
        let (set_maximumSignificantDigits :
          'tags this -> [ `Undefined of undefined  | `U1 of float ] -> unit)
          =
          fun (x2695 : 'tags this) ->
            fun (x2696 : [ `Undefined of undefined  | `U1 of float ]) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2695)
                "maximumSignificantDigits"
                (match x2696 with
                 | `Undefined x2697 -> undefined_to_js x2697
                 | `U1 x2698 -> Ojs.float_to_js x2698)
        let (create :
          ?compactDisplay:[ `L_s56_long  | `L_s89_short ] ->
            ?notation:[ `L_s27_compact  | `L_s34_engineering 
                      | `L_s85_scientific  | `L_s90_standard ]
              ->
              ?signDisplay:[ `L_s21_always  | `L_s22_auto 
                           | `L_s36_exceptZero  | `L_s69_never ]
                ->
                ?unit:string ->
                  ?unitDisplay:[ `L_s56_long  | `L_s68_narrow 
                               | `L_s89_short ]
                    ->
                    ?currencyDisplay:string ->
                      ?currencySign:string ->
                        ?localeMatcher:string ->
                          ?style:string ->
                            ?currency:string ->
                              ?currencySign:string ->
                                ?useGrouping:bool ->
                                  ?minimumIntegerDigits:float ->
                                    ?minimumFractionDigits:float ->
                                      ?maximumFractionDigits:float ->
                                        ?minimumSignificantDigits:float ->
                                          ?maximumSignificantDigits:float ->
                                            unit -> t)
          =
          fun
            ?compactDisplay:(x2700 : [ `L_s56_long  | `L_s89_short ] option)
            ->
            fun
              ?notation:(x2701 :
                          [ `L_s27_compact  | `L_s34_engineering 
                          | `L_s85_scientific  | `L_s90_standard ] option)
              ->
              fun
                ?signDisplay:(x2702 :
                               [ `L_s21_always  | `L_s22_auto 
                               | `L_s36_exceptZero  | `L_s69_never ] option)
                ->
                fun ?unit:(x2703 : string option) ->
                  fun
                    ?unitDisplay:(x2704 :
                                   [ `L_s56_long  | `L_s68_narrow 
                                   | `L_s89_short ] option)
                    ->
                    fun ?currencyDisplay:(x2705 : string option) ->
                      fun ?currencySign:(x2706 : string option) ->
                        fun ?localeMatcher:(x2707 : string option) ->
                          fun ?style:(x2708 : string option) ->
                            fun ?currency:(x2709 : string option) ->
                              fun ?currencySign:(x2710 : string option) ->
                                fun ?useGrouping:(x2711 : bool option) ->
                                  fun
                                    ?minimumIntegerDigits:(x2712 :
                                                            float option)
                                    ->
                                    fun
                                      ?minimumFractionDigits:(x2713 :
                                                               float option)
                                      ->
                                      fun
                                        ?maximumFractionDigits:(x2714 :
                                                                 float option)
                                        ->
                                        fun
                                          ?minimumSignificantDigits:(x2715 :
                                                                    float
                                                                    option)
                                          ->
                                          fun
                                            ?maximumSignificantDigits:
                                            (x2716 : float option) ->
                                            fun () ->
                                              let x2717 = Ojs.empty_obj () in
                                              (match x2700 with
                                               | Some x2734 ->
                                                   Ojs.set_prop_ascii x2717
                                                     "compactDisplay"
                                                     (match x2734 with
                                                      | `L_s56_long ->
                                                          Ojs.string_to_js
                                                            "long"
                                                      | `L_s89_short ->
                                                          Ojs.string_to_js
                                                            "short")
                                               | None -> ());
                                              (match x2701 with
                                               | Some x2733 ->
                                                   Ojs.set_prop_ascii x2717
                                                     "notation"
                                                     (match x2733 with
                                                      | `L_s27_compact ->
                                                          Ojs.string_to_js
                                                            "compact"
                                                      | `L_s34_engineering ->
                                                          Ojs.string_to_js
                                                            "engineering"
                                                      | `L_s85_scientific ->
                                                          Ojs.string_to_js
                                                            "scientific"
                                                      | `L_s90_standard ->
                                                          Ojs.string_to_js
                                                            "standard")
                                               | None -> ());
                                              (match x2702 with
                                               | Some x2732 ->
                                                   Ojs.set_prop_ascii x2717
                                                     "signDisplay"
                                                     (match x2732 with
                                                      | `L_s21_always ->
                                                          Ojs.string_to_js
                                                            "always"
                                                      | `L_s22_auto ->
                                                          Ojs.string_to_js
                                                            "auto"
                                                      | `L_s36_exceptZero ->
                                                          Ojs.string_to_js
                                                            "exceptZero"
                                                      | `L_s69_never ->
                                                          Ojs.string_to_js
                                                            "never")
                                               | None -> ());
                                              (match x2703 with
                                               | Some x2731 ->
                                                   Ojs.set_prop_ascii x2717
                                                     "unit"
                                                     (Ojs.string_to_js x2731)
                                               | None -> ());
                                              (match x2704 with
                                               | Some x2730 ->
                                                   Ojs.set_prop_ascii x2717
                                                     "unitDisplay"
                                                     (match x2730 with
                                                      | `L_s56_long ->
                                                          Ojs.string_to_js
                                                            "long"
                                                      | `L_s68_narrow ->
                                                          Ojs.string_to_js
                                                            "narrow"
                                                      | `L_s89_short ->
                                                          Ojs.string_to_js
                                                            "short")
                                               | None -> ());
                                              (match x2705 with
                                               | Some x2729 ->
                                                   Ojs.set_prop_ascii x2717
                                                     "currencyDisplay"
                                                     (Ojs.string_to_js x2729)
                                               | None -> ());
                                              (match x2706 with
                                               | Some x2728 ->
                                                   Ojs.set_prop_ascii x2717
                                                     "currencySign"
                                                     (Ojs.string_to_js x2728)
                                               | None -> ());
                                              (match x2707 with
                                               | Some x2727 ->
                                                   Ojs.set_prop_ascii x2717
                                                     "localeMatcher"
                                                     (Ojs.string_to_js x2727)
                                               | None -> ());
                                              (match x2708 with
                                               | Some x2726 ->
                                                   Ojs.set_prop_ascii x2717
                                                     "style"
                                                     (Ojs.string_to_js x2726)
                                               | None -> ());
                                              (match x2709 with
                                               | Some x2725 ->
                                                   Ojs.set_prop_ascii x2717
                                                     "currency"
                                                     (Ojs.string_to_js x2725)
                                               | None -> ());
                                              (match x2710 with
                                               | Some x2724 ->
                                                   Ojs.set_prop_ascii x2717
                                                     "currencySign"
                                                     (Ojs.string_to_js x2724)
                                               | None -> ());
                                              (match x2711 with
                                               | Some x2723 ->
                                                   Ojs.set_prop_ascii x2717
                                                     "useGrouping"
                                                     (Ojs.bool_to_js x2723)
                                               | None -> ());
                                              (match x2712 with
                                               | Some x2722 ->
                                                   Ojs.set_prop_ascii x2717
                                                     "minimumIntegerDigits"
                                                     (Ojs.float_to_js x2722)
                                               | None -> ());
                                              (match x2713 with
                                               | Some x2721 ->
                                                   Ojs.set_prop_ascii x2717
                                                     "minimumFractionDigits"
                                                     (Ojs.float_to_js x2721)
                                               | None -> ());
                                              (match x2714 with
                                               | Some x2720 ->
                                                   Ojs.set_prop_ascii x2717
                                                     "maximumFractionDigits"
                                                     (Ojs.float_to_js x2720)
                                               | None -> ());
                                              (match x2715 with
                                               | Some x2719 ->
                                                   Ojs.set_prop_ascii x2717
                                                     "minimumSignificantDigits"
                                                     (Ojs.float_to_js x2719)
                                               | None -> ());
                                              (match x2716 with
                                               | Some x2718 ->
                                                   Ojs.set_prop_ascii x2717
                                                     "maximumSignificantDigits"
                                                     (Ojs.float_to_js x2718)
                                               | None -> ());
                                              t_of_js x2717
        let cast_from = Obj.magic
      end
    module NumberFormat =
      struct
        type t = [ `Intl_NumberFormat ] intf
        let rec t_of_js : Ojs.t -> t = Obj.magic
        and t_to_js : t -> Ojs.t = Obj.magic
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x2736 : Ojs.t) -> t_of_js x2736
        and t_0_to_js : t_0 -> Ojs.t = fun (x2735 : t) -> t_to_js x2735
        type tags = [ `Intl_NumberFormat ]
        type tags_0 = tags
        type 'tags this =
          'tags intf constraint 'tags = [> `Intl_NumberFormat ]
        let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
          =
          fun (type __tags) ->
            fun (__tags_of_js : Ojs.t -> __tags) ->
              fun (x2739 : Ojs.t) -> intf_of_js __tags_of_js x2739
        and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
          fun (type __tags) ->
            fun (__tags_to_js : __tags -> Ojs.t) ->
              fun (x2737 : __tags intf) -> intf_to_js __tags_to_js x2737
        let (formatRange :
          'tags this ->
            startDate:[ `U1 of float  | `U2 of bigint ] ->
              endDate:[ `U1 of float  | `U2 of bigint ] -> string)
          =
          fun (x2747 : 'tags this) ->
            fun ~startDate:(x2741 : [ `U1 of float  | `U2 of bigint ]) ->
              fun ~endDate:(x2744 : [ `U1 of float  | `U2 of bigint ]) ->
                Ojs.string_of_js
                  (Ojs.call (this_to_js Obj.magic x2747) "formatRange"
                     [|((match x2741 with
                         | `U1 x2742 -> Ojs.float_to_js x2742
                         | `U2 x2743 -> bigint_to_js x2743));((match x2744
                                                               with
                                                               | `U1 x2745 ->
                                                                   Ojs.float_to_js
                                                                    x2745
                                                               | `U2 x2746 ->
                                                                   bigint_to_js
                                                                    x2746))|])
        let (formatRangeToParts :
          'tags this ->
            startDate:[ `U1 of float  | `U2 of bigint ] ->
              endDate:[ `U1 of float  | `U2 of bigint ] ->
                NumberFormatPart.t list)
          =
          fun (x2755 : 'tags this) ->
            fun ~startDate:(x2749 : [ `U1 of float  | `U2 of bigint ]) ->
              fun ~endDate:(x2752 : [ `U1 of float  | `U2 of bigint ]) ->
                Ojs.list_of_js NumberFormatPart.t_of_js
                  (Ojs.call (this_to_js Obj.magic x2755) "formatRangeToParts"
                     [|((match x2749 with
                         | `U1 x2750 -> Ojs.float_to_js x2750
                         | `U2 x2751 -> bigint_to_js x2751));((match x2752
                                                               with
                                                               | `U1 x2753 ->
                                                                   Ojs.float_to_js
                                                                    x2753
                                                               | `U2 x2754 ->
                                                                   bigint_to_js
                                                                    x2754))|])
        let (format :
          'tags this -> value:[ `U1 of float  | `U2 of bigint ] -> string) =
          fun (x2761 : 'tags this) ->
            fun ~value:(x2758 : [ `U1 of float  | `U2 of bigint ]) ->
              Ojs.string_of_js
                (Ojs.call (this_to_js Obj.magic x2761) "format"
                   [|((match x2758 with
                       | `U1 x2759 -> Ojs.float_to_js x2759
                       | `U2 x2760 -> bigint_to_js x2760))|])
        let (resolvedOptions : 'tags this -> ResolvedNumberFormatOptions.t) =
          fun (x2763 : 'tags this) ->
            ResolvedNumberFormatOptions.t_of_js
              (Ojs.call (this_to_js Obj.magic x2763) "resolvedOptions" [||])
        let (formatToParts :
          'tags this ->
            ?number:[ `U1 of float  | `U2 of bigint ] ->
              unit -> NumberFormatPart.t list)
          =
          fun (x2770 : 'tags this) ->
            fun ?number:(x2765 : [ `U1 of float  | `U2 of bigint ] option) ->
              fun () ->
                Ojs.list_of_js NumberFormatPart.t_of_js
                  (let x2772 = this_to_js Obj.magic x2770 in
                   Ojs.call (Ojs.get_prop_ascii x2772 "formatToParts")
                     "apply"
                     [|x2772;((let x2766 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               (match x2765 with
                                | Some x2767 ->
                                    ignore
                                      (Ojs.call x2766 "push"
                                         [|((match x2767 with
                                             | `U1 x2768 ->
                                                 Ojs.float_to_js x2768
                                             | `U2 x2769 ->
                                                 bigint_to_js x2769))|])
                                | None -> ());
                               x2766))|])
        let (format' : 'tags this -> value:float -> string) =
          fun (x2775 : 'tags this) ->
            fun ~value:(x2774 : float) ->
              Ojs.string_of_js
                (Ojs.call (this_to_js Obj.magic x2775) "format"
                   [|(Ojs.float_to_js x2774)|])
        let (resolvedOptions' : 'tags this -> ResolvedNumberFormatOptions.t)
          =
          fun (x2777 : 'tags this) ->
            ResolvedNumberFormatOptions.t_of_js
              (Ojs.call (this_to_js Obj.magic x2777) "resolvedOptions" [||])
        let cast_from = Obj.magic
        let (create :
          ?locales:[ `U1 of string  | `U2 of string list ] ->
            ?options:NumberFormatOptions.t -> unit -> t)
          =
          fun
            ?locales:(x2779 : [ `U1 of string  | `U2 of string list ] option)
            ->
            fun ?options:(x2780 : NumberFormatOptions.t option) ->
              fun () ->
                t_of_js
                  (Ojs.new_obj_arr
                     (Ojs.get_prop_ascii
                        (Ojs.get_prop_ascii Ojs.global "Intl") "NumberFormat")
                     (let x2781 =
                        Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                          [||] in
                      (match x2779 with
                       | Some x2783 ->
                           ignore
                             (Ojs.call x2781 "push"
                                [|((match x2783 with
                                    | `U1 x2784 -> Ojs.string_to_js x2784
                                    | `U2 x2785 ->
                                        Ojs.list_to_js Ojs.string_to_js x2785))|])
                       | None -> ());
                      (match x2780 with
                       | Some x2782 ->
                           ignore
                             (Ojs.call x2781 "push"
                                [|(NumberFormatOptions.t_to_js x2782)|])
                       | None -> ());
                      x2781))
        let (invoke :
          ?locales:[ `U1 of string  | `U2 of string list ] ->
            ?options:NumberFormatOptions.t -> unit -> t)
          =
          fun
            ?locales:(x2787 : [ `U1 of string  | `U2 of string list ] option)
            ->
            fun ?options:(x2788 : NumberFormatOptions.t option) ->
              fun () ->
                t_of_js
                  (Ojs.call
                     (Ojs.get_prop_ascii
                        (Ojs.get_prop_ascii Ojs.global "Intl") "NumberFormat")
                     "apply"
                     [|Ojs.null;((let x2789 =
                                    Ojs.new_obj
                                      (Ojs.get_prop_ascii Ojs.global "Array")
                                      [||] in
                                  (match x2787 with
                                   | Some x2791 ->
                                       ignore
                                         (Ojs.call x2789 "push"
                                            [|((match x2791 with
                                                | `U1 x2792 ->
                                                    Ojs.string_to_js x2792
                                                | `U2 x2793 ->
                                                    Ojs.list_to_js
                                                      Ojs.string_to_js x2793))|])
                                   | None -> ());
                                  (match x2788 with
                                   | Some x2790 ->
                                       ignore
                                         (Ojs.call x2789 "push"
                                            [|(NumberFormatOptions.t_to_js
                                                 x2790)|])
                                   | None -> ());
                                  x2789))|])
        let (supportedLocalesOf :
          locales:[ `U1 of string  | `U2 of string list ] ->
            ?options:NumberFormatOptions.t -> unit -> string list)
          =
          fun ~locales:(x2795 : [ `U1 of string  | `U2 of string list ]) ->
            fun ?options:(x2796 : NumberFormatOptions.t option) ->
              fun () ->
                Ojs.list_of_js Ojs.string_of_js
                  (let x2802 =
                     Ojs.get_prop_ascii
                       (Ojs.get_prop_ascii Ojs.global "Intl") "NumberFormat" in
                   Ojs.call (Ojs.get_prop_ascii x2802 "supportedLocalesOf")
                     "apply"
                     [|x2802;((let x2797 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x2797 "push"
                                    [|((match x2795 with
                                        | `U1 x2799 -> Ojs.string_to_js x2799
                                        | `U2 x2800 ->
                                            Ojs.list_to_js Ojs.string_to_js
                                              x2800))|]);
                               (match x2796 with
                                | Some x2798 ->
                                    ignore
                                      (Ojs.call x2797 "push"
                                         [|(NumberFormatOptions.t_to_js x2798)|])
                                | None -> ());
                               x2797))|])
      end
    module LocaleHourCycleKey =
      struct
        type t = [ `L_s46_h11  | `L_s47_h12  | `L_s48_h23  | `L_s49_h24 ]
        let rec t_of_js : Ojs.t -> t =
          fun (x2805 : Ojs.t) ->
            let x2806 = x2805 in
            match Ojs.string_of_js x2806 with
            | "h11" -> `L_s46_h11
            | "h12" -> `L_s47_h12
            | "h23" -> `L_s48_h23
            | "h24" -> `L_s49_h24
            | _ -> assert false
        and t_to_js : t -> Ojs.t =
          fun
            (x2804 :
              [ `L_s46_h11  | `L_s47_h12  | `L_s48_h23  | `L_s49_h24 ])
            ->
            match x2804 with
            | `L_s46_h11 -> Ojs.string_to_js "h11"
            | `L_s47_h12 -> Ojs.string_to_js "h12"
            | `L_s48_h23 -> Ojs.string_to_js "h23"
            | `L_s49_h24 -> Ojs.string_to_js "h24"
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x2808 : Ojs.t) -> t_of_js x2808
        and t_0_to_js : t_0 -> Ojs.t = fun (x2807 : t) -> t_to_js x2807
      end
    module LocaleCollationCaseFirst =
      struct
        type t = [ `L_s40_false  | `L_s58_lower  | `L_s98_upper ]
        let rec t_of_js : Ojs.t -> t =
          fun (x2810 : Ojs.t) ->
            let x2811 = x2810 in
            match Ojs.string_of_js x2811 with
            | "false" -> `L_s40_false
            | "lower" -> `L_s58_lower
            | "upper" -> `L_s98_upper
            | _ -> assert false
        and t_to_js : t -> Ojs.t =
          fun (x2809 : [ `L_s40_false  | `L_s58_lower  | `L_s98_upper ]) ->
            match x2809 with
            | `L_s40_false -> Ojs.string_to_js "false"
            | `L_s58_lower -> Ojs.string_to_js "lower"
            | `L_s98_upper -> Ojs.string_to_js "upper"
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x2813 : Ojs.t) -> t_of_js x2813
        and t_0_to_js : t_0 -> Ojs.t = fun (x2812 : t) -> t_to_js x2812
      end
    module LocaleOptions =
      struct
        type t = [ `Intl_LocaleOptions ] intf
        let rec t_of_js : Ojs.t -> t = Obj.magic
        and t_to_js : t -> Ojs.t = Obj.magic
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x2815 : Ojs.t) -> t_of_js x2815
        and t_0_to_js : t_0 -> Ojs.t = fun (x2814 : t) -> t_to_js x2814
        type tags = [ `Intl_LocaleOptions ]
        type tags_0 = tags
        type 'tags this =
          'tags intf constraint 'tags = [> `Intl_LocaleOptions ]
        let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
          =
          fun (type __tags) ->
            fun (__tags_of_js : Ojs.t -> __tags) ->
              fun (x2818 : Ojs.t) -> intf_of_js __tags_of_js x2818
        and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
          fun (type __tags) ->
            fun (__tags_to_js : __tags -> Ojs.t) ->
              fun (x2816 : __tags intf) -> intf_to_js __tags_to_js x2816
        let (get_baseName : 'tags this -> string option) =
          fun (x2820 : 'tags this) ->
            Ojs.option_of_js Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2820) "baseName")
        let (set_baseName : 'tags this -> string -> unit) =
          fun (x2823 : 'tags this) ->
            fun (x2824 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2823) "baseName"
                (Ojs.string_to_js x2824)
        let (get_calendar : 'tags this -> string option) =
          fun (x2826 : 'tags this) ->
            Ojs.option_of_js Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2826) "calendar")
        let (set_calendar : 'tags this -> string -> unit) =
          fun (x2829 : 'tags this) ->
            fun (x2830 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2829) "calendar"
                (Ojs.string_to_js x2830)
        let (get_caseFirst : 'tags this -> LocaleCollationCaseFirst.t option)
          =
          fun (x2832 : 'tags this) ->
            Ojs.option_of_js LocaleCollationCaseFirst.t_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2832) "caseFirst")
        let (set_caseFirst :
          'tags this -> LocaleCollationCaseFirst.t -> unit) =
          fun (x2835 : 'tags this) ->
            fun (x2836 : LocaleCollationCaseFirst.t) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2835) "caseFirst"
                (LocaleCollationCaseFirst.t_to_js x2836)
        let (get_collation : 'tags this -> string option) =
          fun (x2838 : 'tags this) ->
            Ojs.option_of_js Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2838) "collation")
        let (set_collation : 'tags this -> string -> unit) =
          fun (x2841 : 'tags this) ->
            fun (x2842 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2841) "collation"
                (Ojs.string_to_js x2842)
        let (get_hourCycle : 'tags this -> LocaleHourCycleKey.t option) =
          fun (x2844 : 'tags this) ->
            Ojs.option_of_js LocaleHourCycleKey.t_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2844) "hourCycle")
        let (set_hourCycle : 'tags this -> LocaleHourCycleKey.t -> unit) =
          fun (x2847 : 'tags this) ->
            fun (x2848 : LocaleHourCycleKey.t) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2847) "hourCycle"
                (LocaleHourCycleKey.t_to_js x2848)
        let (get_language : 'tags this -> string option) =
          fun (x2850 : 'tags this) ->
            Ojs.option_of_js Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2850) "language")
        let (set_language : 'tags this -> string -> unit) =
          fun (x2853 : 'tags this) ->
            fun (x2854 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2853) "language"
                (Ojs.string_to_js x2854)
        let (get_numberingSystem : 'tags this -> string option) =
          fun (x2856 : 'tags this) ->
            Ojs.option_of_js Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2856)
                 "numberingSystem")
        let (set_numberingSystem : 'tags this -> string -> unit) =
          fun (x2859 : 'tags this) ->
            fun (x2860 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2859)
                "numberingSystem" (Ojs.string_to_js x2860)
        let (get_numeric : 'tags this -> bool option) =
          fun (x2862 : 'tags this) ->
            Ojs.option_of_js Ojs.bool_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2862) "numeric")
        let (set_numeric : 'tags this -> bool -> unit) =
          fun (x2865 : 'tags this) ->
            fun (x2866 : bool) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2865) "numeric"
                (Ojs.bool_to_js x2866)
        let (get_region : 'tags this -> string option) =
          fun (x2868 : 'tags this) ->
            Ojs.option_of_js Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2868) "region")
        let (set_region : 'tags this -> string -> unit) =
          fun (x2871 : 'tags this) ->
            fun (x2872 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2871) "region"
                (Ojs.string_to_js x2872)
        let (get_script : 'tags this -> string option) =
          fun (x2874 : 'tags this) ->
            Ojs.option_of_js Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2874) "script")
        let (set_script : 'tags this -> string -> unit) =
          fun (x2877 : 'tags this) ->
            fun (x2878 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2877) "script"
                (Ojs.string_to_js x2878)
        let (create :
          ?baseName:string ->
            ?calendar:string ->
              ?caseFirst:LocaleCollationCaseFirst.t ->
                ?collation:string ->
                  ?hourCycle:LocaleHourCycleKey.t ->
                    ?language:string ->
                      ?numberingSystem:string ->
                        ?numeric:bool ->
                          ?region:string -> ?script:string -> unit -> t)
          =
          fun ?baseName:(x2880 : string option) ->
            fun ?calendar:(x2881 : string option) ->
              fun ?caseFirst:(x2882 : LocaleCollationCaseFirst.t option) ->
                fun ?collation:(x2883 : string option) ->
                  fun ?hourCycle:(x2884 : LocaleHourCycleKey.t option) ->
                    fun ?language:(x2885 : string option) ->
                      fun ?numberingSystem:(x2886 : string option) ->
                        fun ?numeric:(x2887 : bool option) ->
                          fun ?region:(x2888 : string option) ->
                            fun ?script:(x2889 : string option) ->
                              fun () ->
                                let x2890 = Ojs.empty_obj () in
                                (match x2880 with
                                 | Some x2900 ->
                                     Ojs.set_prop_ascii x2890 "baseName"
                                       (Ojs.string_to_js x2900)
                                 | None -> ());
                                (match x2881 with
                                 | Some x2899 ->
                                     Ojs.set_prop_ascii x2890 "calendar"
                                       (Ojs.string_to_js x2899)
                                 | None -> ());
                                (match x2882 with
                                 | Some x2898 ->
                                     Ojs.set_prop_ascii x2890 "caseFirst"
                                       (LocaleCollationCaseFirst.t_to_js
                                          x2898)
                                 | None -> ());
                                (match x2883 with
                                 | Some x2897 ->
                                     Ojs.set_prop_ascii x2890 "collation"
                                       (Ojs.string_to_js x2897)
                                 | None -> ());
                                (match x2884 with
                                 | Some x2896 ->
                                     Ojs.set_prop_ascii x2890 "hourCycle"
                                       (LocaleHourCycleKey.t_to_js x2896)
                                 | None -> ());
                                (match x2885 with
                                 | Some x2895 ->
                                     Ojs.set_prop_ascii x2890 "language"
                                       (Ojs.string_to_js x2895)
                                 | None -> ());
                                (match x2886 with
                                 | Some x2894 ->
                                     Ojs.set_prop_ascii x2890
                                       "numberingSystem"
                                       (Ojs.string_to_js x2894)
                                 | None -> ());
                                (match x2887 with
                                 | Some x2893 ->
                                     Ojs.set_prop_ascii x2890 "numeric"
                                       (Ojs.bool_to_js x2893)
                                 | None -> ());
                                (match x2888 with
                                 | Some x2892 ->
                                     Ojs.set_prop_ascii x2890 "region"
                                       (Ojs.string_to_js x2892)
                                 | None -> ());
                                (match x2889 with
                                 | Some x2891 ->
                                     Ojs.set_prop_ascii x2890 "script"
                                       (Ojs.string_to_js x2891)
                                 | None -> ());
                                t_of_js x2890
        let cast_from = Obj.magic
      end
    module BCP47LanguageTag =
      struct
        type t = string
        let rec t_of_js : Ojs.t -> t =
          fun (x2902 : Ojs.t) -> Ojs.string_of_js x2902
        and t_to_js : t -> Ojs.t =
          fun (x2901 : string) -> Ojs.string_to_js x2901
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x2904 : Ojs.t) -> t_of_js x2904
        and t_0_to_js : t_0 -> Ojs.t = fun (x2903 : t) -> t_to_js x2903
      end
    module Locale =
      struct
        type t = [ `Intl_Locale  | `Intl_LocaleOptions ] intf
        let rec t_of_js : Ojs.t -> t = Obj.magic
        and t_to_js : t -> Ojs.t = Obj.magic
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x2906 : Ojs.t) -> t_of_js x2906
        and t_0_to_js : t_0 -> Ojs.t = fun (x2905 : t) -> t_to_js x2905
        type tags = [ `Intl_Locale  | `Intl_LocaleOptions ]
        type tags_0 = tags
        type 'tags this = 'tags intf constraint 'tags = [> `Intl_Locale ]
        let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
          =
          fun (type __tags) ->
            fun (__tags_of_js : Ojs.t -> __tags) ->
              fun (x2909 : Ojs.t) -> intf_of_js __tags_of_js x2909
        and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
          fun (type __tags) ->
            fun (__tags_to_js : __tags -> Ojs.t) ->
              fun (x2907 : __tags intf) -> intf_to_js __tags_to_js x2907
        let (maximize : 'tags this -> t) =
          fun (x2911 : 'tags this) ->
            t_of_js (Ojs.call (this_to_js Obj.magic x2911) "maximize" [||])
        let (minimize : 'tags this -> t) =
          fun (x2913 : 'tags this) ->
            t_of_js (Ojs.call (this_to_js Obj.magic x2913) "minimize" [||])
        let (toString : 'tags this -> BCP47LanguageTag.t) =
          fun (x2915 : 'tags this) ->
            BCP47LanguageTag.t_of_js
              (Ojs.call (this_to_js Obj.magic x2915) "toString" [||])
        let cast_from = Obj.magic
        let (create :
          ?tag:BCP47LanguageTag.t -> ?options:LocaleOptions.t -> unit -> t) =
          fun ?tag:(x2917 : BCP47LanguageTag.t option) ->
            fun ?options:(x2918 : LocaleOptions.t option) ->
              fun () ->
                t_of_js
                  (Ojs.new_obj_arr
                     (Ojs.get_prop_ascii
                        (Ojs.get_prop_ascii Ojs.global "Intl") "Locale")
                     (let x2919 =
                        Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                          [||] in
                      (match x2917 with
                       | Some x2921 ->
                           ignore
                             (Ojs.call x2919 "push"
                                [|(BCP47LanguageTag.t_to_js x2921)|])
                       | None -> ());
                      (match x2918 with
                       | Some x2920 ->
                           ignore
                             (Ojs.call x2919 "push"
                                [|(LocaleOptions.t_to_js x2920)|])
                       | None -> ());
                      x2919))
      end
    module DisplayNamesOptions =
      struct
        type t = [ `Intl_DisplayNamesOptions ] intf
        let rec t_of_js : Ojs.t -> t = Obj.magic
        and t_to_js : t -> Ojs.t = Obj.magic
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x2923 : Ojs.t) -> t_of_js x2923
        and t_0_to_js : t_0 -> Ojs.t = fun (x2922 : t) -> t_to_js x2922
        type tags = [ `Intl_DisplayNamesOptions ]
        type tags_0 = tags
        type 'tags this =
          'tags intf constraint 'tags = [> `Intl_DisplayNamesOptions ]
        let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
          =
          fun (type __tags) ->
            fun (__tags_of_js : Ojs.t -> __tags) ->
              fun (x2926 : Ojs.t) -> intf_of_js __tags_of_js x2926
        and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
          fun (type __tags) ->
            fun (__tags_to_js : __tags -> Ojs.t) ->
              fun (x2924 : __tags intf) -> intf_to_js __tags_to_js x2924
        let (get_locale : 'tags this -> UnicodeBCP47LocaleIdentifier.t) =
          fun (x2928 : 'tags this) ->
            UnicodeBCP47LocaleIdentifier.t_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2928) "locale")
        let (set_locale :
          'tags this -> UnicodeBCP47LocaleIdentifier.t -> unit) =
          fun (x2930 : 'tags this) ->
            fun (x2931 : UnicodeBCP47LocaleIdentifier.t) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2930) "locale"
                (UnicodeBCP47LocaleIdentifier.t_to_js x2931)
        let (get_localeMatcher :
          'tags this -> RelativeTimeFormatLocaleMatcher.t) =
          fun (x2933 : 'tags this) ->
            RelativeTimeFormatLocaleMatcher.t_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2933)
                 "localeMatcher")
        let (set_localeMatcher :
          'tags this -> RelativeTimeFormatLocaleMatcher.t -> unit) =
          fun (x2935 : 'tags this) ->
            fun (x2936 : RelativeTimeFormatLocaleMatcher.t) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2935) "localeMatcher"
                (RelativeTimeFormatLocaleMatcher.t_to_js x2936)
        let (get_style : 'tags this -> RelativeTimeFormatStyle.t) =
          fun (x2938 : 'tags this) ->
            RelativeTimeFormatStyle.t_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2938) "style")
        let (set_style : 'tags this -> RelativeTimeFormatStyle.t -> unit) =
          fun (x2940 : 'tags this) ->
            fun (x2941 : RelativeTimeFormatStyle.t) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2940) "style"
                (RelativeTimeFormatStyle.t_to_js x2941)
        let (get_type :
          'tags this ->
            [ `L_s28_currency  | `L_s54_language  | `L_s83_region 
            | `L_s86_script ])
          =
          fun (x2943 : 'tags this) ->
            let x2945 =
              Ojs.get_prop_ascii (this_to_js Obj.magic x2943) "type" in
            match Ojs.string_of_js x2945 with
            | "currency" -> `L_s28_currency
            | "language" -> `L_s54_language
            | "region" -> `L_s83_region
            | "script" -> `L_s86_script
            | _ -> assert false
        let (set_type :
          'tags this ->
            [ `U1 of [ `L_s54_language ]  | `U2 of [ `L_s83_region ] 
            | `U3 of [ `L_s86_script ]  | `U4 of [ `L_s28_currency ] ] ->
              unit)
          =
          fun (x2946 : 'tags this) ->
            fun
              (x2947 :
                [ `U1 of [ `L_s54_language ]  | `U2 of [ `L_s83_region ] 
                | `U3 of [ `L_s86_script ]  | `U4 of [ `L_s28_currency ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2946) "type"
                (match x2947 with
                 | `U1 x2948 ->
                     (match x2948 with
                      | `L_s54_language -> Ojs.string_to_js "language")
                 | `U2 x2949 ->
                     (match x2949 with
                      | `L_s83_region -> Ojs.string_to_js "region")
                 | `U3 x2950 ->
                     (match x2950 with
                      | `L_s86_script -> Ojs.string_to_js "script")
                 | `U4 x2951 ->
                     (match x2951 with
                      | `L_s28_currency -> Ojs.string_to_js "currency"))
        let (get_fallback : 'tags this -> [ `L_s26_code  | `L_s70_none ]) =
          fun (x2953 : 'tags this) ->
            let x2955 =
              Ojs.get_prop_ascii (this_to_js Obj.magic x2953) "fallback" in
            match Ojs.string_of_js x2955 with
            | "code" -> `L_s26_code
            | "none" -> `L_s70_none
            | _ -> assert false
        let (set_fallback :
          'tags this ->
            [ `U1 of [ `L_s26_code ]  | `U2 of [ `L_s70_none ] ] -> unit)
          =
          fun (x2956 : 'tags this) ->
            fun
              (x2957 : [ `U1 of [ `L_s26_code ]  | `U2 of [ `L_s70_none ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2956) "fallback"
                (match x2957 with
                 | `U1 x2958 ->
                     (match x2958 with
                      | `L_s26_code -> Ojs.string_to_js "code")
                 | `U2 x2959 ->
                     (match x2959 with
                      | `L_s70_none -> Ojs.string_to_js "none"))
        let (create :
          locale:UnicodeBCP47LocaleIdentifier.t ->
            localeMatcher:RelativeTimeFormatLocaleMatcher.t ->
              style:RelativeTimeFormatStyle.t ->
                type_:[ `L_s28_currency  | `L_s54_language  | `L_s83_region 
                      | `L_s86_script ]
                  -> fallback:[ `L_s26_code  | `L_s70_none ] -> unit -> t)
          =
          fun ~locale:(x2961 : UnicodeBCP47LocaleIdentifier.t) ->
            fun ~localeMatcher:(x2962 : RelativeTimeFormatLocaleMatcher.t) ->
              fun ~style:(x2963 : RelativeTimeFormatStyle.t) ->
                fun
                  ~type_:(x2964 :
                           [ `L_s28_currency  | `L_s54_language 
                           | `L_s83_region  | `L_s86_script ])
                  ->
                  fun ~fallback:(x2965 : [ `L_s26_code  | `L_s70_none ]) ->
                    fun () ->
                      let x2966 = Ojs.empty_obj () in
                      Ojs.set_prop_ascii x2966 "locale"
                        (UnicodeBCP47LocaleIdentifier.t_to_js x2961);
                      Ojs.set_prop_ascii x2966 "localeMatcher"
                        (RelativeTimeFormatLocaleMatcher.t_to_js x2962);
                      Ojs.set_prop_ascii x2966 "style"
                        (RelativeTimeFormatStyle.t_to_js x2963);
                      Ojs.set_prop_ascii x2966 "type"
                        (match x2964 with
                         | `L_s28_currency -> Ojs.string_to_js "currency"
                         | `L_s54_language -> Ojs.string_to_js "language"
                         | `L_s83_region -> Ojs.string_to_js "region"
                         | `L_s86_script -> Ojs.string_to_js "script");
                      Ojs.set_prop_ascii x2966 "fallback"
                        (match x2965 with
                         | `L_s26_code -> Ojs.string_to_js "code"
                         | `L_s70_none -> Ojs.string_to_js "none");
                      t_of_js x2966
        let cast_from = Obj.magic
      end
    module DisplayNames =
      struct
        module AnonymousInterface2 =
          struct
            type t = Ojs.t
            let rec t_of_js : Ojs.t -> t = fun (x2968 : Ojs.t) -> x2968
            and t_to_js : t -> Ojs.t = fun (x2967 : Ojs.t) -> x2967
            let (get_localeMatcher : t -> RelativeTimeFormatLocaleMatcher.t)
              =
              fun (x2969 : t) ->
                RelativeTimeFormatLocaleMatcher.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x2969) "localeMatcher")
            let (set_localeMatcher :
              t -> RelativeTimeFormatLocaleMatcher.t -> unit) =
              fun (x2970 : t) ->
                fun (x2971 : RelativeTimeFormatLocaleMatcher.t) ->
                  Ojs.set_prop_ascii (t_to_js x2970) "localeMatcher"
                    (RelativeTimeFormatLocaleMatcher.t_to_js x2971)
            let (create :
              localeMatcher:RelativeTimeFormatLocaleMatcher.t -> unit -> t) =
              fun ~localeMatcher:(x2972 : RelativeTimeFormatLocaleMatcher.t)
                ->
                fun () ->
                  let x2973 = Ojs.empty_obj () in
                  Ojs.set_prop_ascii x2973 "localeMatcher"
                    (RelativeTimeFormatLocaleMatcher.t_to_js x2972);
                  t_of_js x2973
          end
        type t = [ `Intl_DisplayNames ] intf
        let rec t_of_js : Ojs.t -> t = Obj.magic
        and t_to_js : t -> Ojs.t = Obj.magic
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x2975 : Ojs.t) -> t_of_js x2975
        and t_0_to_js : t_0 -> Ojs.t = fun (x2974 : t) -> t_to_js x2974
        type tags = [ `Intl_DisplayNames ]
        type tags_0 = tags
        type 'tags this =
          'tags intf constraint 'tags = [> `Intl_DisplayNames ]
        let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
          =
          fun (type __tags) ->
            fun (__tags_of_js : Ojs.t -> __tags) ->
              fun (x2978 : Ojs.t) -> intf_of_js __tags_of_js x2978
        and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
          fun (type __tags) ->
            fun (__tags_to_js : __tags -> Ojs.t) ->
              fun (x2976 : __tags intf) -> intf_to_js __tags_to_js x2976
        let (of_ : 'tags this -> code:string -> string option) =
          fun (x2981 : 'tags this) ->
            fun ~code:(x2980 : string) ->
              Ojs.option_of_js Ojs.string_of_js
                (Ojs.call (this_to_js Obj.magic x2981) "of"
                   [|(Ojs.string_to_js x2980)|])
        let (resolvedOptions : 'tags this -> DisplayNamesOptions.t) =
          fun (x2984 : 'tags this) ->
            DisplayNamesOptions.t_of_js
              (Ojs.call (this_to_js Obj.magic x2984) "resolvedOptions" [||])
        let cast_from = Obj.magic
        let (prototype : unit -> t) =
          fun () ->
            t_of_js
              (Ojs.get_prop_ascii
                 (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Intl")
                    "DisplayNames") "prototype")
        let (create :
          ?locales:[ `U1 of BCP47LanguageTag.t 
                   | `U2 of BCP47LanguageTag.t list ]
            -> ?options:DisplayNamesOptions.t Partial.t -> unit -> t)
          =
          fun
            ?locales:(x2986 :
                       [ `U1 of BCP47LanguageTag.t 
                       | `U2 of BCP47LanguageTag.t list ] option)
            ->
            fun ?options:(x2987 : DisplayNamesOptions.t Partial.t option) ->
              fun () ->
                t_of_js
                  (Ojs.new_obj_arr
                     (Ojs.get_prop_ascii
                        (Ojs.get_prop_ascii Ojs.global "Intl") "DisplayNames")
                     (let x2988 =
                        Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                          [||] in
                      (match x2986 with
                       | Some x2991 ->
                           ignore
                             (Ojs.call x2988 "push"
                                [|((match x2991 with
                                    | `U1 x2992 ->
                                        BCP47LanguageTag.t_to_js x2992
                                    | `U2 x2993 ->
                                        Ojs.list_to_js
                                          BCP47LanguageTag.t_to_js x2993))|])
                       | None -> ());
                      (match x2987 with
                       | Some x2989 ->
                           ignore
                             (Ojs.call x2988 "push"
                                [|(Partial.t_to_js
                                     DisplayNamesOptions.t_to_js x2989)|])
                       | None -> ());
                      x2988))
        let (supportedLocalesOf :
          locales:[ `U1 of BCP47LanguageTag.t 
                  | `U2 of BCP47LanguageTag.t list ]
            ->
            ?options:AnonymousInterface2.t -> unit -> BCP47LanguageTag.t list)
          =
          fun
            ~locales:(x2995 :
                       [ `U1 of BCP47LanguageTag.t 
                       | `U2 of BCP47LanguageTag.t list ])
            ->
            fun ?options:(x2996 : AnonymousInterface2.t option) ->
              fun () ->
                Ojs.list_of_js BCP47LanguageTag.t_of_js
                  (let x3002 =
                     Ojs.get_prop_ascii
                       (Ojs.get_prop_ascii Ojs.global "Intl") "DisplayNames" in
                   Ojs.call (Ojs.get_prop_ascii x3002 "supportedLocalesOf")
                     "apply"
                     [|x3002;((let x2997 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x2997 "push"
                                    [|((match x2995 with
                                        | `U1 x2999 ->
                                            BCP47LanguageTag.t_to_js x2999
                                        | `U2 x3000 ->
                                            Ojs.list_to_js
                                              BCP47LanguageTag.t_to_js x3000))|]);
                               (match x2996 with
                                | Some x2998 ->
                                    ignore
                                      (Ojs.call x2997 "push"
                                         [|(AnonymousInterface2.t_to_js x2998)|])
                                | None -> ());
                               x2997))|])
      end
    module ResolvedDateTimeFormatOptions =
      struct
        type t = [ `Intl_ResolvedDateTimeFormatOptions ] intf
        let rec t_of_js : Ojs.t -> t = Obj.magic
        and t_to_js : t -> Ojs.t = Obj.magic
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x3005 : Ojs.t) -> t_of_js x3005
        and t_0_to_js : t_0 -> Ojs.t = fun (x3004 : t) -> t_to_js x3004
        type tags = [ `Intl_ResolvedDateTimeFormatOptions ]
        type tags_0 = tags
        type 'tags this =
          'tags intf constraint 'tags =
                      [> `Intl_ResolvedDateTimeFormatOptions ]
        let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
          =
          fun (type __tags) ->
            fun (__tags_of_js : Ojs.t -> __tags) ->
              fun (x3008 : Ojs.t) -> intf_of_js __tags_of_js x3008
        and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
          fun (type __tags) ->
            fun (__tags_to_js : __tags -> Ojs.t) ->
              fun (x3006 : __tags intf) -> intf_to_js __tags_to_js x3006
        let (get_formatMatcher :
          'tags this -> [ `L_s23_basic  | `L_s24_best_fit ] option) =
          fun (x3010 : 'tags this) ->
            Ojs.option_of_js
              (fun (x3012 : Ojs.t) ->
                 let x3013 = x3012 in
                 match Ojs.string_of_js x3013 with
                 | "basic" -> `L_s23_basic
                 | "best fit" -> `L_s24_best_fit
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3010)
                 "formatMatcher")
        let (set_formatMatcher :
          'tags this ->
            [ `U1 of [ `L_s23_basic ]  | `U2 of [ `L_s24_best_fit ] 
            | `U3 of [ `L_s24_best_fit ] ] -> unit)
          =
          fun (x3014 : 'tags this) ->
            fun
              (x3015 :
                [ `U1 of [ `L_s23_basic ]  | `U2 of [ `L_s24_best_fit ] 
                | `U3 of [ `L_s24_best_fit ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3014) "formatMatcher"
                (match x3015 with
                 | `U1 x3016 ->
                     (match x3016 with
                      | `L_s23_basic -> Ojs.string_to_js "basic")
                 | `U2 x3017 ->
                     (match x3017 with
                      | `L_s24_best_fit -> Ojs.string_to_js "best fit")
                 | `U3 x3018 ->
                     (match x3018 with
                      | `L_s24_best_fit -> Ojs.string_to_js "best fit"))
        let (get_dateStyle :
          'tags this ->
            [ `L_s44_full  | `L_s56_long  | `L_s60_medium  | `L_s89_short ]
              option)
          =
          fun (x3020 : 'tags this) ->
            Ojs.option_of_js
              (fun (x3022 : Ojs.t) ->
                 let x3023 = x3022 in
                 match Ojs.string_of_js x3023 with
                 | "full" -> `L_s44_full
                 | "long" -> `L_s56_long
                 | "medium" -> `L_s60_medium
                 | "short" -> `L_s89_short
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3020) "dateStyle")
        let (set_dateStyle :
          'tags this ->
            [ `U1 of [ `L_s44_full ]  | `U2 of [ `L_s56_long ] 
            | `U3 of [ `L_s60_medium ]  | `U4 of [ `L_s89_short ] ] -> 
              unit)
          =
          fun (x3024 : 'tags this) ->
            fun
              (x3025 :
                [ `U1 of [ `L_s44_full ]  | `U2 of [ `L_s56_long ] 
                | `U3 of [ `L_s60_medium ]  | `U4 of [ `L_s89_short ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3024) "dateStyle"
                (match x3025 with
                 | `U1 x3026 ->
                     (match x3026 with
                      | `L_s44_full -> Ojs.string_to_js "full")
                 | `U2 x3027 ->
                     (match x3027 with
                      | `L_s56_long -> Ojs.string_to_js "long")
                 | `U3 x3028 ->
                     (match x3028 with
                      | `L_s60_medium -> Ojs.string_to_js "medium")
                 | `U4 x3029 ->
                     (match x3029 with
                      | `L_s89_short -> Ojs.string_to_js "short"))
        let (get_timeStyle :
          'tags this ->
            [ `L_s44_full  | `L_s56_long  | `L_s60_medium  | `L_s89_short ]
              option)
          =
          fun (x3031 : 'tags this) ->
            Ojs.option_of_js
              (fun (x3033 : Ojs.t) ->
                 let x3034 = x3033 in
                 match Ojs.string_of_js x3034 with
                 | "full" -> `L_s44_full
                 | "long" -> `L_s56_long
                 | "medium" -> `L_s60_medium
                 | "short" -> `L_s89_short
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3031) "timeStyle")
        let (set_timeStyle :
          'tags this ->
            [ `U1 of [ `L_s44_full ]  | `U2 of [ `L_s56_long ] 
            | `U3 of [ `L_s60_medium ]  | `U4 of [ `L_s89_short ] ] -> 
              unit)
          =
          fun (x3035 : 'tags this) ->
            fun
              (x3036 :
                [ `U1 of [ `L_s44_full ]  | `U2 of [ `L_s56_long ] 
                | `U3 of [ `L_s60_medium ]  | `U4 of [ `L_s89_short ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3035) "timeStyle"
                (match x3036 with
                 | `U1 x3037 ->
                     (match x3037 with
                      | `L_s44_full -> Ojs.string_to_js "full")
                 | `U2 x3038 ->
                     (match x3038 with
                      | `L_s56_long -> Ojs.string_to_js "long")
                 | `U3 x3039 ->
                     (match x3039 with
                      | `L_s60_medium -> Ojs.string_to_js "medium")
                 | `U4 x3040 ->
                     (match x3040 with
                      | `L_s89_short -> Ojs.string_to_js "short"))
        let (get_hourCycle :
          'tags this ->
            [ `L_s46_h11  | `L_s47_h12  | `L_s48_h23  | `L_s49_h24 ] option)
          =
          fun (x3042 : 'tags this) ->
            Ojs.option_of_js
              (fun (x3044 : Ojs.t) ->
                 let x3045 = x3044 in
                 match Ojs.string_of_js x3045 with
                 | "h11" -> `L_s46_h11
                 | "h12" -> `L_s47_h12
                 | "h23" -> `L_s48_h23
                 | "h24" -> `L_s49_h24
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3042) "hourCycle")
        let (set_hourCycle :
          'tags this ->
            [ `U1 of [ `L_s46_h11 ]  | `U2 of [ `L_s47_h12 ] 
            | `U3 of [ `L_s48_h23 ]  | `U4 of [ `L_s49_h24 ] ] -> unit)
          =
          fun (x3046 : 'tags this) ->
            fun
              (x3047 :
                [ `U1 of [ `L_s46_h11 ]  | `U2 of [ `L_s47_h12 ] 
                | `U3 of [ `L_s48_h23 ]  | `U4 of [ `L_s49_h24 ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3046) "hourCycle"
                (match x3047 with
                 | `U1 x3048 ->
                     (match x3048 with | `L_s46_h11 -> Ojs.string_to_js "h11")
                 | `U2 x3049 ->
                     (match x3049 with | `L_s47_h12 -> Ojs.string_to_js "h12")
                 | `U3 x3050 ->
                     (match x3050 with | `L_s48_h23 -> Ojs.string_to_js "h23")
                 | `U4 x3051 ->
                     (match x3051 with | `L_s49_h24 -> Ojs.string_to_js "h24"))
        let (get_dayPeriod :
          'tags this ->
            [ `L_s56_long  | `L_s68_narrow  | `L_s89_short ] option)
          =
          fun (x3053 : 'tags this) ->
            Ojs.option_of_js
              (fun (x3055 : Ojs.t) ->
                 let x3056 = x3055 in
                 match Ojs.string_of_js x3056 with
                 | "long" -> `L_s56_long
                 | "narrow" -> `L_s68_narrow
                 | "short" -> `L_s89_short
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3053) "dayPeriod")
        let (set_dayPeriod :
          'tags this ->
            [ `U1 of [ `L_s68_narrow ]  | `U2 of [ `L_s89_short ] 
            | `U3 of [ `L_s56_long ] ] -> unit)
          =
          fun (x3057 : 'tags this) ->
            fun
              (x3058 :
                [ `U1 of [ `L_s68_narrow ]  | `U2 of [ `L_s89_short ] 
                | `U3 of [ `L_s56_long ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3057) "dayPeriod"
                (match x3058 with
                 | `U1 x3059 ->
                     (match x3059 with
                      | `L_s68_narrow -> Ojs.string_to_js "narrow")
                 | `U2 x3060 ->
                     (match x3060 with
                      | `L_s89_short -> Ojs.string_to_js "short")
                 | `U3 x3061 ->
                     (match x3061 with
                      | `L_s56_long -> Ojs.string_to_js "long"))
        let (get_fractionalSecondDigits :
          'tags this -> [ `L_n_0  | `L_n_1  | `L_n_2  | `L_n_3 ] option) =
          fun (x3063 : 'tags this) ->
            Ojs.option_of_js
              (fun (x3065 : Ojs.t) ->
                 let x3066 = x3065 in
                 match Ojs.int_of_js x3066 with
                 | 0 -> `L_n_0
                 | 1 -> `L_n_1
                 | 2 -> `L_n_2
                 | 3 -> `L_n_3
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3063)
                 "fractionalSecondDigits")
        let (set_fractionalSecondDigits :
          'tags this ->
            [ `U1 of [ `L_n_0 ]  | `U2 of [ `L_n_1 ]  | `U3 of [ `L_n_2 ] 
            | `U4 of [ `L_n_3 ] ] -> unit)
          =
          fun (x3067 : 'tags this) ->
            fun
              (x3068 :
                [ `U1 of [ `L_n_0 ]  | `U2 of [ `L_n_1 ] 
                | `U3 of [ `L_n_2 ]  | `U4 of [ `L_n_3 ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3067)
                "fractionalSecondDigits"
                (match x3068 with
                 | `U1 x3069 ->
                     (match x3069 with | `L_n_0 -> Ojs.int_to_js 0)
                 | `U2 x3070 ->
                     (match x3070 with | `L_n_1 -> Ojs.int_to_js 1)
                 | `U3 x3071 ->
                     (match x3071 with | `L_n_2 -> Ojs.int_to_js 2)
                 | `U4 x3072 ->
                     (match x3072 with | `L_n_3 -> Ojs.int_to_js 3))
        let (get_locale : 'tags this -> string) =
          fun (x3074 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3074) "locale")
        let (set_locale : 'tags this -> string -> unit) =
          fun (x3076 : 'tags this) ->
            fun (x3077 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3076) "locale"
                (Ojs.string_to_js x3077)
        let (get_calendar : 'tags this -> string) =
          fun (x3079 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3079) "calendar")
        let (set_calendar : 'tags this -> string -> unit) =
          fun (x3081 : 'tags this) ->
            fun (x3082 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3081) "calendar"
                (Ojs.string_to_js x3082)
        let (get_numberingSystem : 'tags this -> string) =
          fun (x3084 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3084)
                 "numberingSystem")
        let (set_numberingSystem : 'tags this -> string -> unit) =
          fun (x3086 : 'tags this) ->
            fun (x3087 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3086)
                "numberingSystem" (Ojs.string_to_js x3087)
        let (get_timeZone : 'tags this -> string) =
          fun (x3089 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3089) "timeZone")
        let (set_timeZone : 'tags this -> string -> unit) =
          fun (x3091 : 'tags this) ->
            fun (x3092 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3091) "timeZone"
                (Ojs.string_to_js x3092)
        let (get_hour12 : 'tags this -> bool option) =
          fun (x3094 : 'tags this) ->
            Ojs.option_of_js Ojs.bool_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3094) "hour12")
        let (set_hour12 : 'tags this -> bool -> unit) =
          fun (x3097 : 'tags this) ->
            fun (x3098 : bool) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3097) "hour12"
                (Ojs.bool_to_js x3098)
        let (get_weekday : 'tags this -> string option) =
          fun (x3100 : 'tags this) ->
            Ojs.option_of_js Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3100) "weekday")
        let (set_weekday : 'tags this -> string -> unit) =
          fun (x3103 : 'tags this) ->
            fun (x3104 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3103) "weekday"
                (Ojs.string_to_js x3104)
        let (get_era : 'tags this -> string option) =
          fun (x3106 : 'tags this) ->
            Ojs.option_of_js Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3106) "era")
        let (set_era : 'tags this -> string -> unit) =
          fun (x3109 : 'tags this) ->
            fun (x3110 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3109) "era"
                (Ojs.string_to_js x3110)
        let (get_year : 'tags this -> string option) =
          fun (x3112 : 'tags this) ->
            Ojs.option_of_js Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3112) "year")
        let (set_year : 'tags this -> string -> unit) =
          fun (x3115 : 'tags this) ->
            fun (x3116 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3115) "year"
                (Ojs.string_to_js x3116)
        let (get_month : 'tags this -> string option) =
          fun (x3118 : 'tags this) ->
            Ojs.option_of_js Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3118) "month")
        let (set_month : 'tags this -> string -> unit) =
          fun (x3121 : 'tags this) ->
            fun (x3122 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3121) "month"
                (Ojs.string_to_js x3122)
        let (get_day : 'tags this -> string option) =
          fun (x3124 : 'tags this) ->
            Ojs.option_of_js Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3124) "day")
        let (set_day : 'tags this -> string -> unit) =
          fun (x3127 : 'tags this) ->
            fun (x3128 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3127) "day"
                (Ojs.string_to_js x3128)
        let (get_hour : 'tags this -> string option) =
          fun (x3130 : 'tags this) ->
            Ojs.option_of_js Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3130) "hour")
        let (set_hour : 'tags this -> string -> unit) =
          fun (x3133 : 'tags this) ->
            fun (x3134 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3133) "hour"
                (Ojs.string_to_js x3134)
        let (get_minute : 'tags this -> string option) =
          fun (x3136 : 'tags this) ->
            Ojs.option_of_js Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3136) "minute")
        let (set_minute : 'tags this -> string -> unit) =
          fun (x3139 : 'tags this) ->
            fun (x3140 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3139) "minute"
                (Ojs.string_to_js x3140)
        let (get_second : 'tags this -> string option) =
          fun (x3142 : 'tags this) ->
            Ojs.option_of_js Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3142) "second")
        let (set_second : 'tags this -> string -> unit) =
          fun (x3145 : 'tags this) ->
            fun (x3146 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3145) "second"
                (Ojs.string_to_js x3146)
        let (get_timeZoneName : 'tags this -> string option) =
          fun (x3148 : 'tags this) ->
            Ojs.option_of_js Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3148) "timeZoneName")
        let (set_timeZoneName : 'tags this -> string -> unit) =
          fun (x3151 : 'tags this) ->
            fun (x3152 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3151) "timeZoneName"
                (Ojs.string_to_js x3152)
        let (create :
          ?formatMatcher:[ `L_s23_basic  | `L_s24_best_fit ] ->
            ?dateStyle:[ `L_s44_full  | `L_s56_long  | `L_s60_medium 
                       | `L_s89_short ]
              ->
              ?timeStyle:[ `L_s44_full  | `L_s56_long  | `L_s60_medium 
                         | `L_s89_short ]
                ->
                ?hourCycle:[ `L_s46_h11  | `L_s47_h12  | `L_s48_h23 
                           | `L_s49_h24 ]
                  ->
                  ?dayPeriod:[ `L_s56_long  | `L_s68_narrow  | `L_s89_short ]
                    ->
                    ?fractionalSecondDigits:[ `L_n_0  | `L_n_1  | `L_n_2 
                                            | `L_n_3 ]
                      ->
                      locale:string ->
                        calendar:string ->
                          numberingSystem:string ->
                            timeZone:string ->
                              ?hour12:bool ->
                                ?weekday:string ->
                                  ?era:string ->
                                    ?year:string ->
                                      ?month:string ->
                                        ?day:string ->
                                          ?hour:string ->
                                            ?minute:string ->
                                              ?second:string ->
                                                ?timeZoneName:string ->
                                                  unit -> t)
          =
          fun
            ?formatMatcher:(x3154 :
                             [ `L_s23_basic  | `L_s24_best_fit ] option)
            ->
            fun
              ?dateStyle:(x3155 :
                           [ `L_s44_full  | `L_s56_long  | `L_s60_medium 
                           | `L_s89_short ] option)
              ->
              fun
                ?timeStyle:(x3156 :
                             [ `L_s44_full  | `L_s56_long  | `L_s60_medium 
                             | `L_s89_short ] option)
                ->
                fun
                  ?hourCycle:(x3157 :
                               [ `L_s46_h11  | `L_s47_h12  | `L_s48_h23 
                               | `L_s49_h24 ] option)
                  ->
                  fun
                    ?dayPeriod:(x3158 :
                                 [ `L_s56_long  | `L_s68_narrow 
                                 | `L_s89_short ] option)
                    ->
                    fun
                      ?fractionalSecondDigits:(x3159 :
                                                [ `L_n_0  | `L_n_1  | 
                                                  `L_n_2 
                                                | `L_n_3 ] option)
                      ->
                      fun ~locale:(x3160 : string) ->
                        fun ~calendar:(x3161 : string) ->
                          fun ~numberingSystem:(x3162 : string) ->
                            fun ~timeZone:(x3163 : string) ->
                              fun ?hour12:(x3164 : bool option) ->
                                fun ?weekday:(x3165 : string option) ->
                                  fun ?era:(x3166 : string option) ->
                                    fun ?year:(x3167 : string option) ->
                                      fun ?month:(x3168 : string option) ->
                                        fun ?day:(x3169 : string option) ->
                                          fun ?hour:(x3170 : string option)
                                            ->
                                            fun
                                              ?minute:(x3171 : string option)
                                              ->
                                              fun
                                                ?second:(x3172 :
                                                          string option)
                                                ->
                                                fun
                                                  ?timeZoneName:(x3173 :
                                                                  string
                                                                    option)
                                                  ->
                                                  fun () ->
                                                    let x3174 =
                                                      Ojs.empty_obj () in
                                                    (match x3154 with
                                                     | Some x3190 ->
                                                         Ojs.set_prop_ascii
                                                           x3174
                                                           "formatMatcher"
                                                           (match x3190 with
                                                            | `L_s23_basic ->
                                                                Ojs.string_to_js
                                                                  "basic"
                                                            | `L_s24_best_fit
                                                                ->
                                                                Ojs.string_to_js
                                                                  "best fit")
                                                     | None -> ());
                                                    (match x3155 with
                                                     | Some x3189 ->
                                                         Ojs.set_prop_ascii
                                                           x3174 "dateStyle"
                                                           (match x3189 with
                                                            | `L_s44_full ->
                                                                Ojs.string_to_js
                                                                  "full"
                                                            | `L_s56_long ->
                                                                Ojs.string_to_js
                                                                  "long"
                                                            | `L_s60_medium
                                                                ->
                                                                Ojs.string_to_js
                                                                  "medium"
                                                            | `L_s89_short ->
                                                                Ojs.string_to_js
                                                                  "short")
                                                     | None -> ());
                                                    (match x3156 with
                                                     | Some x3188 ->
                                                         Ojs.set_prop_ascii
                                                           x3174 "timeStyle"
                                                           (match x3188 with
                                                            | `L_s44_full ->
                                                                Ojs.string_to_js
                                                                  "full"
                                                            | `L_s56_long ->
                                                                Ojs.string_to_js
                                                                  "long"
                                                            | `L_s60_medium
                                                                ->
                                                                Ojs.string_to_js
                                                                  "medium"
                                                            | `L_s89_short ->
                                                                Ojs.string_to_js
                                                                  "short")
                                                     | None -> ());
                                                    (match x3157 with
                                                     | Some x3187 ->
                                                         Ojs.set_prop_ascii
                                                           x3174 "hourCycle"
                                                           (match x3187 with
                                                            | `L_s46_h11 ->
                                                                Ojs.string_to_js
                                                                  "h11"
                                                            | `L_s47_h12 ->
                                                                Ojs.string_to_js
                                                                  "h12"
                                                            | `L_s48_h23 ->
                                                                Ojs.string_to_js
                                                                  "h23"
                                                            | `L_s49_h24 ->
                                                                Ojs.string_to_js
                                                                  "h24")
                                                     | None -> ());
                                                    (match x3158 with
                                                     | Some x3186 ->
                                                         Ojs.set_prop_ascii
                                                           x3174 "dayPeriod"
                                                           (match x3186 with
                                                            | `L_s56_long ->
                                                                Ojs.string_to_js
                                                                  "long"
                                                            | `L_s68_narrow
                                                                ->
                                                                Ojs.string_to_js
                                                                  "narrow"
                                                            | `L_s89_short ->
                                                                Ojs.string_to_js
                                                                  "short")
                                                     | None -> ());
                                                    (match x3159 with
                                                     | Some x3185 ->
                                                         Ojs.set_prop_ascii
                                                           x3174
                                                           "fractionalSecondDigits"
                                                           (match x3185 with
                                                            | `L_n_0 ->
                                                                Ojs.int_to_js
                                                                  0
                                                            | `L_n_1 ->
                                                                Ojs.int_to_js
                                                                  1
                                                            | `L_n_2 ->
                                                                Ojs.int_to_js
                                                                  2
                                                            | `L_n_3 ->
                                                                Ojs.int_to_js
                                                                  3)
                                                     | None -> ());
                                                    Ojs.set_prop_ascii x3174
                                                      "locale"
                                                      (Ojs.string_to_js x3160);
                                                    Ojs.set_prop_ascii x3174
                                                      "calendar"
                                                      (Ojs.string_to_js x3161);
                                                    Ojs.set_prop_ascii x3174
                                                      "numberingSystem"
                                                      (Ojs.string_to_js x3162);
                                                    Ojs.set_prop_ascii x3174
                                                      "timeZone"
                                                      (Ojs.string_to_js x3163);
                                                    (match x3164 with
                                                     | Some x3184 ->
                                                         Ojs.set_prop_ascii
                                                           x3174 "hour12"
                                                           (Ojs.bool_to_js
                                                              x3184)
                                                     | None -> ());
                                                    (match x3165 with
                                                     | Some x3183 ->
                                                         Ojs.set_prop_ascii
                                                           x3174 "weekday"
                                                           (Ojs.string_to_js
                                                              x3183)
                                                     | None -> ());
                                                    (match x3166 with
                                                     | Some x3182 ->
                                                         Ojs.set_prop_ascii
                                                           x3174 "era"
                                                           (Ojs.string_to_js
                                                              x3182)
                                                     | None -> ());
                                                    (match x3167 with
                                                     | Some x3181 ->
                                                         Ojs.set_prop_ascii
                                                           x3174 "year"
                                                           (Ojs.string_to_js
                                                              x3181)
                                                     | None -> ());
                                                    (match x3168 with
                                                     | Some x3180 ->
                                                         Ojs.set_prop_ascii
                                                           x3174 "month"
                                                           (Ojs.string_to_js
                                                              x3180)
                                                     | None -> ());
                                                    (match x3169 with
                                                     | Some x3179 ->
                                                         Ojs.set_prop_ascii
                                                           x3174 "day"
                                                           (Ojs.string_to_js
                                                              x3179)
                                                     | None -> ());
                                                    (match x3170 with
                                                     | Some x3178 ->
                                                         Ojs.set_prop_ascii
                                                           x3174 "hour"
                                                           (Ojs.string_to_js
                                                              x3178)
                                                     | None -> ());
                                                    (match x3171 with
                                                     | Some x3177 ->
                                                         Ojs.set_prop_ascii
                                                           x3174 "minute"
                                                           (Ojs.string_to_js
                                                              x3177)
                                                     | None -> ());
                                                    (match x3172 with
                                                     | Some x3176 ->
                                                         Ojs.set_prop_ascii
                                                           x3174 "second"
                                                           (Ojs.string_to_js
                                                              x3176)
                                                     | None -> ());
                                                    (match x3173 with
                                                     | Some x3175 ->
                                                         Ojs.set_prop_ascii
                                                           x3174
                                                           "timeZoneName"
                                                           (Ojs.string_to_js
                                                              x3175)
                                                     | None -> ());
                                                    t_of_js x3174
        let cast_from = Obj.magic
      end
    module DateTimeFormatPartTypes =
      struct
        type t =
          [ `L_s100_weekday  | `L_s102_year  | `L_s29_day 
          | `L_s30_dayPeriod  | `L_s35_era  | `L_s50_hour  | `L_s55_literal 
          | `L_s62_minute  | `L_s64_month  | `L_s87_second 
          | `L_s93_timeZoneName ]
        let rec t_of_js : Ojs.t -> t =
          fun (x3192 : Ojs.t) ->
            let x3193 = x3192 in
            match Ojs.string_of_js x3193 with
            | "weekday" -> `L_s100_weekday
            | "year" -> `L_s102_year
            | "day" -> `L_s29_day
            | "dayPeriod" -> `L_s30_dayPeriod
            | "era" -> `L_s35_era
            | "hour" -> `L_s50_hour
            | "literal" -> `L_s55_literal
            | "minute" -> `L_s62_minute
            | "month" -> `L_s64_month
            | "second" -> `L_s87_second
            | "timeZoneName" -> `L_s93_timeZoneName
            | _ -> assert false
        and t_to_js : t -> Ojs.t =
          fun
            (x3191 :
              [ `L_s100_weekday  | `L_s102_year  | `L_s29_day 
              | `L_s30_dayPeriod  | `L_s35_era  | `L_s50_hour 
              | `L_s55_literal  | `L_s62_minute  | `L_s64_month 
              | `L_s87_second  | `L_s93_timeZoneName ])
            ->
            match x3191 with
            | `L_s100_weekday -> Ojs.string_to_js "weekday"
            | `L_s102_year -> Ojs.string_to_js "year"
            | `L_s29_day -> Ojs.string_to_js "day"
            | `L_s30_dayPeriod -> Ojs.string_to_js "dayPeriod"
            | `L_s35_era -> Ojs.string_to_js "era"
            | `L_s50_hour -> Ojs.string_to_js "hour"
            | `L_s55_literal -> Ojs.string_to_js "literal"
            | `L_s62_minute -> Ojs.string_to_js "minute"
            | `L_s64_month -> Ojs.string_to_js "month"
            | `L_s87_second -> Ojs.string_to_js "second"
            | `L_s93_timeZoneName -> Ojs.string_to_js "timeZoneName"
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x3195 : Ojs.t) -> t_of_js x3195
        and t_0_to_js : t_0 -> Ojs.t = fun (x3194 : t) -> t_to_js x3194
      end
    module DateTimeFormatPart =
      struct
        type t = [ `Intl_DateTimeFormatPart ] intf
        let rec t_of_js : Ojs.t -> t = Obj.magic
        and t_to_js : t -> Ojs.t = Obj.magic
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x3197 : Ojs.t) -> t_of_js x3197
        and t_0_to_js : t_0 -> Ojs.t = fun (x3196 : t) -> t_to_js x3196
        type tags = [ `Intl_DateTimeFormatPart ]
        type tags_0 = tags
        type 'tags this =
          'tags intf constraint 'tags = [> `Intl_DateTimeFormatPart ]
        let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
          =
          fun (type __tags) ->
            fun (__tags_of_js : Ojs.t -> __tags) ->
              fun (x3200 : Ojs.t) -> intf_of_js __tags_of_js x3200
        and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
          fun (type __tags) ->
            fun (__tags_to_js : __tags -> Ojs.t) ->
              fun (x3198 : __tags intf) -> intf_to_js __tags_to_js x3198
        let (get_type : 'tags this -> DateTimeFormatPartTypes.t) =
          fun (x3202 : 'tags this) ->
            DateTimeFormatPartTypes.t_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3202) "type")
        let (set_type : 'tags this -> DateTimeFormatPartTypes.t -> unit) =
          fun (x3204 : 'tags this) ->
            fun (x3205 : DateTimeFormatPartTypes.t) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3204) "type"
                (DateTimeFormatPartTypes.t_to_js x3205)
        let (get_value : 'tags this -> string) =
          fun (x3207 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3207) "value")
        let (set_value : 'tags this -> string -> unit) =
          fun (x3209 : 'tags this) ->
            fun (x3210 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3209) "value"
                (Ojs.string_to_js x3210)
        let (create :
          type_:DateTimeFormatPartTypes.t -> value:string -> unit -> t) =
          fun ~type_:(x3212 : DateTimeFormatPartTypes.t) ->
            fun ~value:(x3213 : string) ->
              fun () ->
                let x3214 = Ojs.empty_obj () in
                Ojs.set_prop_ascii x3214 "type"
                  (DateTimeFormatPartTypes.t_to_js x3212);
                Ojs.set_prop_ascii x3214 "value" (Ojs.string_to_js x3213);
                t_of_js x3214
        let cast_from = Obj.magic
      end
    module DateTimeFormatOptions =
      struct
        type t = [ `Intl_DateTimeFormatOptions ] intf
        let rec t_of_js : Ojs.t -> t = Obj.magic
        and t_to_js : t -> Ojs.t = Obj.magic
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x3216 : Ojs.t) -> t_of_js x3216
        and t_0_to_js : t_0 -> Ojs.t = fun (x3215 : t) -> t_to_js x3215
        type tags = [ `Intl_DateTimeFormatOptions ]
        type tags_0 = tags
        type 'tags this =
          'tags intf constraint 'tags = [> `Intl_DateTimeFormatOptions ]
        let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
          =
          fun (type __tags) ->
            fun (__tags_of_js : Ojs.t -> __tags) ->
              fun (x3219 : Ojs.t) -> intf_of_js __tags_of_js x3219
        and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
          fun (type __tags) ->
            fun (__tags_to_js : __tags -> Ojs.t) ->
              fun (x3217 : __tags intf) -> intf_to_js __tags_to_js x3217
        let (get_formatMatcher :
          'tags this -> [ `L_s23_basic  | `L_s24_best_fit ] option) =
          fun (x3221 : 'tags this) ->
            Ojs.option_of_js
              (fun (x3223 : Ojs.t) ->
                 let x3224 = x3223 in
                 match Ojs.string_of_js x3224 with
                 | "basic" -> `L_s23_basic
                 | "best fit" -> `L_s24_best_fit
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3221)
                 "formatMatcher")
        let (set_formatMatcher :
          'tags this ->
            [ `Undefined of undefined  | `U1 of [ `L_s23_basic ] 
            | `U2 of [ `L_s24_best_fit ]  | `U3 of [ `L_s24_best_fit ] ] ->
              unit)
          =
          fun (x3225 : 'tags this) ->
            fun
              (x3226 :
                [ `Undefined of undefined  | `U1 of [ `L_s23_basic ] 
                | `U2 of [ `L_s24_best_fit ]  | `U3 of [ `L_s24_best_fit ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3225) "formatMatcher"
                (match x3226 with
                 | `Undefined x3227 -> undefined_to_js x3227
                 | `U1 x3228 ->
                     (match x3228 with
                      | `L_s23_basic -> Ojs.string_to_js "basic")
                 | `U2 x3229 ->
                     (match x3229 with
                      | `L_s24_best_fit -> Ojs.string_to_js "best fit")
                 | `U3 x3230 ->
                     (match x3230 with
                      | `L_s24_best_fit -> Ojs.string_to_js "best fit"))
        let (get_dateStyle :
          'tags this ->
            [ `L_s44_full  | `L_s56_long  | `L_s60_medium  | `L_s89_short ]
              option)
          =
          fun (x3232 : 'tags this) ->
            Ojs.option_of_js
              (fun (x3234 : Ojs.t) ->
                 let x3235 = x3234 in
                 match Ojs.string_of_js x3235 with
                 | "full" -> `L_s44_full
                 | "long" -> `L_s56_long
                 | "medium" -> `L_s60_medium
                 | "short" -> `L_s89_short
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3232) "dateStyle")
        let (set_dateStyle :
          'tags this ->
            [ `Undefined of undefined  | `U1 of [ `L_s44_full ] 
            | `U2 of [ `L_s56_long ]  | `U3 of [ `L_s60_medium ] 
            | `U4 of [ `L_s89_short ] ] -> unit)
          =
          fun (x3236 : 'tags this) ->
            fun
              (x3237 :
                [ `Undefined of undefined  | `U1 of [ `L_s44_full ] 
                | `U2 of [ `L_s56_long ]  | `U3 of [ `L_s60_medium ] 
                | `U4 of [ `L_s89_short ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3236) "dateStyle"
                (match x3237 with
                 | `Undefined x3238 -> undefined_to_js x3238
                 | `U1 x3239 ->
                     (match x3239 with
                      | `L_s44_full -> Ojs.string_to_js "full")
                 | `U2 x3240 ->
                     (match x3240 with
                      | `L_s56_long -> Ojs.string_to_js "long")
                 | `U3 x3241 ->
                     (match x3241 with
                      | `L_s60_medium -> Ojs.string_to_js "medium")
                 | `U4 x3242 ->
                     (match x3242 with
                      | `L_s89_short -> Ojs.string_to_js "short"))
        let (get_timeStyle :
          'tags this ->
            [ `L_s44_full  | `L_s56_long  | `L_s60_medium  | `L_s89_short ]
              option)
          =
          fun (x3244 : 'tags this) ->
            Ojs.option_of_js
              (fun (x3246 : Ojs.t) ->
                 let x3247 = x3246 in
                 match Ojs.string_of_js x3247 with
                 | "full" -> `L_s44_full
                 | "long" -> `L_s56_long
                 | "medium" -> `L_s60_medium
                 | "short" -> `L_s89_short
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3244) "timeStyle")
        let (set_timeStyle :
          'tags this ->
            [ `Undefined of undefined  | `U1 of [ `L_s44_full ] 
            | `U2 of [ `L_s56_long ]  | `U3 of [ `L_s60_medium ] 
            | `U4 of [ `L_s89_short ] ] -> unit)
          =
          fun (x3248 : 'tags this) ->
            fun
              (x3249 :
                [ `Undefined of undefined  | `U1 of [ `L_s44_full ] 
                | `U2 of [ `L_s56_long ]  | `U3 of [ `L_s60_medium ] 
                | `U4 of [ `L_s89_short ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3248) "timeStyle"
                (match x3249 with
                 | `Undefined x3250 -> undefined_to_js x3250
                 | `U1 x3251 ->
                     (match x3251 with
                      | `L_s44_full -> Ojs.string_to_js "full")
                 | `U2 x3252 ->
                     (match x3252 with
                      | `L_s56_long -> Ojs.string_to_js "long")
                 | `U3 x3253 ->
                     (match x3253 with
                      | `L_s60_medium -> Ojs.string_to_js "medium")
                 | `U4 x3254 ->
                     (match x3254 with
                      | `L_s89_short -> Ojs.string_to_js "short"))
        let (get_dayPeriod :
          'tags this ->
            [ `L_s56_long  | `L_s68_narrow  | `L_s89_short ] option)
          =
          fun (x3256 : 'tags this) ->
            Ojs.option_of_js
              (fun (x3258 : Ojs.t) ->
                 let x3259 = x3258 in
                 match Ojs.string_of_js x3259 with
                 | "long" -> `L_s56_long
                 | "narrow" -> `L_s68_narrow
                 | "short" -> `L_s89_short
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3256) "dayPeriod")
        let (set_dayPeriod :
          'tags this ->
            [ `Undefined of undefined  | `U1 of [ `L_s68_narrow ] 
            | `U2 of [ `L_s89_short ]  | `U3 of [ `L_s56_long ] ] -> 
              unit)
          =
          fun (x3260 : 'tags this) ->
            fun
              (x3261 :
                [ `Undefined of undefined  | `U1 of [ `L_s68_narrow ] 
                | `U2 of [ `L_s89_short ]  | `U3 of [ `L_s56_long ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3260) "dayPeriod"
                (match x3261 with
                 | `Undefined x3262 -> undefined_to_js x3262
                 | `U1 x3263 ->
                     (match x3263 with
                      | `L_s68_narrow -> Ojs.string_to_js "narrow")
                 | `U2 x3264 ->
                     (match x3264 with
                      | `L_s89_short -> Ojs.string_to_js "short")
                 | `U3 x3265 ->
                     (match x3265 with
                      | `L_s56_long -> Ojs.string_to_js "long"))
        let (get_fractionalSecondDigits :
          'tags this -> [ `L_n_0  | `L_n_1  | `L_n_2  | `L_n_3 ] option) =
          fun (x3267 : 'tags this) ->
            Ojs.option_of_js
              (fun (x3269 : Ojs.t) ->
                 let x3270 = x3269 in
                 match Ojs.int_of_js x3270 with
                 | 0 -> `L_n_0
                 | 1 -> `L_n_1
                 | 2 -> `L_n_2
                 | 3 -> `L_n_3
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3267)
                 "fractionalSecondDigits")
        let (set_fractionalSecondDigits :
          'tags this ->
            [ `Undefined of undefined  | `U1 of [ `L_n_0 ] 
            | `U2 of [ `L_n_1 ]  | `U3 of [ `L_n_2 ]  | `U4 of [ `L_n_3 ] ]
              -> unit)
          =
          fun (x3271 : 'tags this) ->
            fun
              (x3272 :
                [ `Undefined of undefined  | `U1 of [ `L_n_0 ] 
                | `U2 of [ `L_n_1 ]  | `U3 of [ `L_n_2 ] 
                | `U4 of [ `L_n_3 ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3271)
                "fractionalSecondDigits"
                (match x3272 with
                 | `Undefined x3273 -> undefined_to_js x3273
                 | `U1 x3274 ->
                     (match x3274 with | `L_n_0 -> Ojs.int_to_js 0)
                 | `U2 x3275 ->
                     (match x3275 with | `L_n_1 -> Ojs.int_to_js 1)
                 | `U3 x3276 ->
                     (match x3276 with | `L_n_2 -> Ojs.int_to_js 2)
                 | `U4 x3277 ->
                     (match x3277 with | `L_n_3 -> Ojs.int_to_js 3))
        let (get_calendar : 'tags this -> string option) =
          fun (x3279 : 'tags this) ->
            Ojs.option_of_js Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3279) "calendar")
        let (set_calendar :
          'tags this -> [ `Undefined of undefined  | `U1 of string ] -> unit)
          =
          fun (x3282 : 'tags this) ->
            fun (x3283 : [ `Undefined of undefined  | `U1 of string ]) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3282) "calendar"
                (match x3283 with
                 | `Undefined x3284 -> undefined_to_js x3284
                 | `U1 x3285 -> Ojs.string_to_js x3285)
        let (get_dayPeriod' :
          'tags this ->
            [ `L_s56_long  | `L_s68_narrow  | `L_s89_short ] option)
          =
          fun (x3287 : 'tags this) ->
            Ojs.option_of_js
              (fun (x3289 : Ojs.t) ->
                 let x3290 = x3289 in
                 match Ojs.string_of_js x3290 with
                 | "long" -> `L_s56_long
                 | "narrow" -> `L_s68_narrow
                 | "short" -> `L_s89_short
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3287) "dayPeriod")
        let (set_dayPeriod' :
          'tags this ->
            [ `Undefined of undefined  | `U1 of [ `L_s68_narrow ] 
            | `U2 of [ `L_s89_short ]  | `U3 of [ `L_s56_long ] ] -> 
              unit)
          =
          fun (x3291 : 'tags this) ->
            fun
              (x3292 :
                [ `Undefined of undefined  | `U1 of [ `L_s68_narrow ] 
                | `U2 of [ `L_s89_short ]  | `U3 of [ `L_s56_long ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3291) "dayPeriod"
                (match x3292 with
                 | `Undefined x3293 -> undefined_to_js x3293
                 | `U1 x3294 ->
                     (match x3294 with
                      | `L_s68_narrow -> Ojs.string_to_js "narrow")
                 | `U2 x3295 ->
                     (match x3295 with
                      | `L_s89_short -> Ojs.string_to_js "short")
                 | `U3 x3296 ->
                     (match x3296 with
                      | `L_s56_long -> Ojs.string_to_js "long"))
        let (get_numberingSystem : 'tags this -> string option) =
          fun (x3298 : 'tags this) ->
            Ojs.option_of_js Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3298)
                 "numberingSystem")
        let (set_numberingSystem :
          'tags this -> [ `Undefined of undefined  | `U1 of string ] -> unit)
          =
          fun (x3301 : 'tags this) ->
            fun (x3302 : [ `Undefined of undefined  | `U1 of string ]) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3301)
                "numberingSystem"
                (match x3302 with
                 | `Undefined x3303 -> undefined_to_js x3303
                 | `U1 x3304 -> Ojs.string_to_js x3304)
        let (get_dateStyle' :
          'tags this ->
            [ `L_s44_full  | `L_s56_long  | `L_s60_medium  | `L_s89_short ]
              option)
          =
          fun (x3306 : 'tags this) ->
            Ojs.option_of_js
              (fun (x3308 : Ojs.t) ->
                 let x3309 = x3308 in
                 match Ojs.string_of_js x3309 with
                 | "full" -> `L_s44_full
                 | "long" -> `L_s56_long
                 | "medium" -> `L_s60_medium
                 | "short" -> `L_s89_short
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3306) "dateStyle")
        let (set_dateStyle' :
          'tags this ->
            [ `Undefined of undefined  | `U1 of [ `L_s44_full ] 
            | `U2 of [ `L_s56_long ]  | `U3 of [ `L_s60_medium ] 
            | `U4 of [ `L_s89_short ] ] -> unit)
          =
          fun (x3310 : 'tags this) ->
            fun
              (x3311 :
                [ `Undefined of undefined  | `U1 of [ `L_s44_full ] 
                | `U2 of [ `L_s56_long ]  | `U3 of [ `L_s60_medium ] 
                | `U4 of [ `L_s89_short ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3310) "dateStyle"
                (match x3311 with
                 | `Undefined x3312 -> undefined_to_js x3312
                 | `U1 x3313 ->
                     (match x3313 with
                      | `L_s44_full -> Ojs.string_to_js "full")
                 | `U2 x3314 ->
                     (match x3314 with
                      | `L_s56_long -> Ojs.string_to_js "long")
                 | `U3 x3315 ->
                     (match x3315 with
                      | `L_s60_medium -> Ojs.string_to_js "medium")
                 | `U4 x3316 ->
                     (match x3316 with
                      | `L_s89_short -> Ojs.string_to_js "short"))
        let (get_timeStyle' :
          'tags this ->
            [ `L_s44_full  | `L_s56_long  | `L_s60_medium  | `L_s89_short ]
              option)
          =
          fun (x3318 : 'tags this) ->
            Ojs.option_of_js
              (fun (x3320 : Ojs.t) ->
                 let x3321 = x3320 in
                 match Ojs.string_of_js x3321 with
                 | "full" -> `L_s44_full
                 | "long" -> `L_s56_long
                 | "medium" -> `L_s60_medium
                 | "short" -> `L_s89_short
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3318) "timeStyle")
        let (set_timeStyle' :
          'tags this ->
            [ `Undefined of undefined  | `U1 of [ `L_s44_full ] 
            | `U2 of [ `L_s56_long ]  | `U3 of [ `L_s60_medium ] 
            | `U4 of [ `L_s89_short ] ] -> unit)
          =
          fun (x3322 : 'tags this) ->
            fun
              (x3323 :
                [ `Undefined of undefined  | `U1 of [ `L_s44_full ] 
                | `U2 of [ `L_s56_long ]  | `U3 of [ `L_s60_medium ] 
                | `U4 of [ `L_s89_short ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3322) "timeStyle"
                (match x3323 with
                 | `Undefined x3324 -> undefined_to_js x3324
                 | `U1 x3325 ->
                     (match x3325 with
                      | `L_s44_full -> Ojs.string_to_js "full")
                 | `U2 x3326 ->
                     (match x3326 with
                      | `L_s56_long -> Ojs.string_to_js "long")
                 | `U3 x3327 ->
                     (match x3327 with
                      | `L_s60_medium -> Ojs.string_to_js "medium")
                 | `U4 x3328 ->
                     (match x3328 with
                      | `L_s89_short -> Ojs.string_to_js "short"))
        let (get_hourCycle :
          'tags this ->
            [ `L_s46_h11  | `L_s47_h12  | `L_s48_h23  | `L_s49_h24 ] option)
          =
          fun (x3330 : 'tags this) ->
            Ojs.option_of_js
              (fun (x3332 : Ojs.t) ->
                 let x3333 = x3332 in
                 match Ojs.string_of_js x3333 with
                 | "h11" -> `L_s46_h11
                 | "h12" -> `L_s47_h12
                 | "h23" -> `L_s48_h23
                 | "h24" -> `L_s49_h24
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3330) "hourCycle")
        let (set_hourCycle :
          'tags this ->
            [ `Undefined of undefined  | `U1 of [ `L_s46_h11 ] 
            | `U2 of [ `L_s47_h12 ]  | `U3 of [ `L_s48_h23 ] 
            | `U4 of [ `L_s49_h24 ] ] -> unit)
          =
          fun (x3334 : 'tags this) ->
            fun
              (x3335 :
                [ `Undefined of undefined  | `U1 of [ `L_s46_h11 ] 
                | `U2 of [ `L_s47_h12 ]  | `U3 of [ `L_s48_h23 ] 
                | `U4 of [ `L_s49_h24 ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3334) "hourCycle"
                (match x3335 with
                 | `Undefined x3336 -> undefined_to_js x3336
                 | `U1 x3337 ->
                     (match x3337 with | `L_s46_h11 -> Ojs.string_to_js "h11")
                 | `U2 x3338 ->
                     (match x3338 with | `L_s47_h12 -> Ojs.string_to_js "h12")
                 | `U3 x3339 ->
                     (match x3339 with | `L_s48_h23 -> Ojs.string_to_js "h23")
                 | `U4 x3340 ->
                     (match x3340 with | `L_s49_h24 -> Ojs.string_to_js "h24"))
        let (get_localeMatcher :
          'tags this -> [ `L_s24_best_fit  | `L_s57_lookup ] option) =
          fun (x3342 : 'tags this) ->
            Ojs.option_of_js
              (fun (x3344 : Ojs.t) ->
                 let x3345 = x3344 in
                 match Ojs.string_of_js x3345 with
                 | "best fit" -> `L_s24_best_fit
                 | "lookup" -> `L_s57_lookup
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3342)
                 "localeMatcher")
        let (set_localeMatcher :
          'tags this ->
            [ `Undefined of undefined  | `U1 of [ `L_s24_best_fit ] 
            | `U2 of [ `L_s57_lookup ] ] -> unit)
          =
          fun (x3346 : 'tags this) ->
            fun
              (x3347 :
                [ `Undefined of undefined  | `U1 of [ `L_s24_best_fit ] 
                | `U2 of [ `L_s57_lookup ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3346) "localeMatcher"
                (match x3347 with
                 | `Undefined x3348 -> undefined_to_js x3348
                 | `U1 x3349 ->
                     (match x3349 with
                      | `L_s24_best_fit -> Ojs.string_to_js "best fit")
                 | `U2 x3350 ->
                     (match x3350 with
                      | `L_s57_lookup -> Ojs.string_to_js "lookup"))
        let (get_weekday :
          'tags this ->
            [ `L_s56_long  | `L_s68_narrow  | `L_s89_short ] option)
          =
          fun (x3352 : 'tags this) ->
            Ojs.option_of_js
              (fun (x3354 : Ojs.t) ->
                 let x3355 = x3354 in
                 match Ojs.string_of_js x3355 with
                 | "long" -> `L_s56_long
                 | "narrow" -> `L_s68_narrow
                 | "short" -> `L_s89_short
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3352) "weekday")
        let (set_weekday :
          'tags this ->
            [ `Undefined of undefined  | `U1 of [ `L_s56_long ] 
            | `U2 of [ `L_s89_short ]  | `U3 of [ `L_s68_narrow ] ] -> 
              unit)
          =
          fun (x3356 : 'tags this) ->
            fun
              (x3357 :
                [ `Undefined of undefined  | `U1 of [ `L_s56_long ] 
                | `U2 of [ `L_s89_short ]  | `U3 of [ `L_s68_narrow ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3356) "weekday"
                (match x3357 with
                 | `Undefined x3358 -> undefined_to_js x3358
                 | `U1 x3359 ->
                     (match x3359 with
                      | `L_s56_long -> Ojs.string_to_js "long")
                 | `U2 x3360 ->
                     (match x3360 with
                      | `L_s89_short -> Ojs.string_to_js "short")
                 | `U3 x3361 ->
                     (match x3361 with
                      | `L_s68_narrow -> Ojs.string_to_js "narrow"))
        let (get_era :
          'tags this ->
            [ `L_s56_long  | `L_s68_narrow  | `L_s89_short ] option)
          =
          fun (x3363 : 'tags this) ->
            Ojs.option_of_js
              (fun (x3365 : Ojs.t) ->
                 let x3366 = x3365 in
                 match Ojs.string_of_js x3366 with
                 | "long" -> `L_s56_long
                 | "narrow" -> `L_s68_narrow
                 | "short" -> `L_s89_short
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3363) "era")
        let (set_era :
          'tags this ->
            [ `Undefined of undefined  | `U1 of [ `L_s56_long ] 
            | `U2 of [ `L_s89_short ]  | `U3 of [ `L_s68_narrow ] ] -> 
              unit)
          =
          fun (x3367 : 'tags this) ->
            fun
              (x3368 :
                [ `Undefined of undefined  | `U1 of [ `L_s56_long ] 
                | `U2 of [ `L_s89_short ]  | `U3 of [ `L_s68_narrow ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3367) "era"
                (match x3368 with
                 | `Undefined x3369 -> undefined_to_js x3369
                 | `U1 x3370 ->
                     (match x3370 with
                      | `L_s56_long -> Ojs.string_to_js "long")
                 | `U2 x3371 ->
                     (match x3371 with
                      | `L_s89_short -> Ojs.string_to_js "short")
                 | `U3 x3372 ->
                     (match x3372 with
                      | `L_s68_narrow -> Ojs.string_to_js "narrow"))
        let (get_year :
          'tags this -> [ `L_s0_2_digit  | `L_s73_numeric ] option) =
          fun (x3374 : 'tags this) ->
            Ojs.option_of_js
              (fun (x3376 : Ojs.t) ->
                 let x3377 = x3376 in
                 match Ojs.string_of_js x3377 with
                 | "2-digit" -> `L_s0_2_digit
                 | "numeric" -> `L_s73_numeric
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3374) "year")
        let (set_year :
          'tags this ->
            [ `Undefined of undefined  | `U1 of [ `L_s73_numeric ] 
            | `U2 of [ `L_s0_2_digit ] ] -> unit)
          =
          fun (x3378 : 'tags this) ->
            fun
              (x3379 :
                [ `Undefined of undefined  | `U1 of [ `L_s73_numeric ] 
                | `U2 of [ `L_s0_2_digit ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3378) "year"
                (match x3379 with
                 | `Undefined x3380 -> undefined_to_js x3380
                 | `U1 x3381 ->
                     (match x3381 with
                      | `L_s73_numeric -> Ojs.string_to_js "numeric")
                 | `U2 x3382 ->
                     (match x3382 with
                      | `L_s0_2_digit -> Ojs.string_to_js "2-digit"))
        let (get_month :
          'tags this ->
            [ `L_s0_2_digit  | `L_s56_long  | `L_s68_narrow 
            | `L_s73_numeric  | `L_s89_short ] option)
          =
          fun (x3384 : 'tags this) ->
            Ojs.option_of_js
              (fun (x3386 : Ojs.t) ->
                 let x3387 = x3386 in
                 match Ojs.string_of_js x3387 with
                 | "2-digit" -> `L_s0_2_digit
                 | "long" -> `L_s56_long
                 | "narrow" -> `L_s68_narrow
                 | "numeric" -> `L_s73_numeric
                 | "short" -> `L_s89_short
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3384) "month")
        let (set_month :
          'tags this ->
            [ `Undefined of undefined  | `U1 of [ `L_s73_numeric ] 
            | `U2 of [ `L_s0_2_digit ]  | `U3 of [ `L_s56_long ] 
            | `U4 of [ `L_s89_short ]  | `U5 of [ `L_s68_narrow ] ] -> 
              unit)
          =
          fun (x3388 : 'tags this) ->
            fun
              (x3389 :
                [ `Undefined of undefined  | `U1 of [ `L_s73_numeric ] 
                | `U2 of [ `L_s0_2_digit ]  | `U3 of [ `L_s56_long ] 
                | `U4 of [ `L_s89_short ]  | `U5 of [ `L_s68_narrow ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3388) "month"
                (match x3389 with
                 | `Undefined x3390 -> undefined_to_js x3390
                 | `U1 x3391 ->
                     (match x3391 with
                      | `L_s73_numeric -> Ojs.string_to_js "numeric")
                 | `U2 x3392 ->
                     (match x3392 with
                      | `L_s0_2_digit -> Ojs.string_to_js "2-digit")
                 | `U3 x3393 ->
                     (match x3393 with
                      | `L_s56_long -> Ojs.string_to_js "long")
                 | `U4 x3394 ->
                     (match x3394 with
                      | `L_s89_short -> Ojs.string_to_js "short")
                 | `U5 x3395 ->
                     (match x3395 with
                      | `L_s68_narrow -> Ojs.string_to_js "narrow"))
        let (get_day :
          'tags this -> [ `L_s0_2_digit  | `L_s73_numeric ] option) =
          fun (x3397 : 'tags this) ->
            Ojs.option_of_js
              (fun (x3399 : Ojs.t) ->
                 let x3400 = x3399 in
                 match Ojs.string_of_js x3400 with
                 | "2-digit" -> `L_s0_2_digit
                 | "numeric" -> `L_s73_numeric
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3397) "day")
        let (set_day :
          'tags this ->
            [ `Undefined of undefined  | `U1 of [ `L_s73_numeric ] 
            | `U2 of [ `L_s0_2_digit ] ] -> unit)
          =
          fun (x3401 : 'tags this) ->
            fun
              (x3402 :
                [ `Undefined of undefined  | `U1 of [ `L_s73_numeric ] 
                | `U2 of [ `L_s0_2_digit ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3401) "day"
                (match x3402 with
                 | `Undefined x3403 -> undefined_to_js x3403
                 | `U1 x3404 ->
                     (match x3404 with
                      | `L_s73_numeric -> Ojs.string_to_js "numeric")
                 | `U2 x3405 ->
                     (match x3405 with
                      | `L_s0_2_digit -> Ojs.string_to_js "2-digit"))
        let (get_hour :
          'tags this -> [ `L_s0_2_digit  | `L_s73_numeric ] option) =
          fun (x3407 : 'tags this) ->
            Ojs.option_of_js
              (fun (x3409 : Ojs.t) ->
                 let x3410 = x3409 in
                 match Ojs.string_of_js x3410 with
                 | "2-digit" -> `L_s0_2_digit
                 | "numeric" -> `L_s73_numeric
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3407) "hour")
        let (set_hour :
          'tags this ->
            [ `Undefined of undefined  | `U1 of [ `L_s73_numeric ] 
            | `U2 of [ `L_s0_2_digit ] ] -> unit)
          =
          fun (x3411 : 'tags this) ->
            fun
              (x3412 :
                [ `Undefined of undefined  | `U1 of [ `L_s73_numeric ] 
                | `U2 of [ `L_s0_2_digit ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3411) "hour"
                (match x3412 with
                 | `Undefined x3413 -> undefined_to_js x3413
                 | `U1 x3414 ->
                     (match x3414 with
                      | `L_s73_numeric -> Ojs.string_to_js "numeric")
                 | `U2 x3415 ->
                     (match x3415 with
                      | `L_s0_2_digit -> Ojs.string_to_js "2-digit"))
        let (get_minute :
          'tags this -> [ `L_s0_2_digit  | `L_s73_numeric ] option) =
          fun (x3417 : 'tags this) ->
            Ojs.option_of_js
              (fun (x3419 : Ojs.t) ->
                 let x3420 = x3419 in
                 match Ojs.string_of_js x3420 with
                 | "2-digit" -> `L_s0_2_digit
                 | "numeric" -> `L_s73_numeric
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3417) "minute")
        let (set_minute :
          'tags this ->
            [ `Undefined of undefined  | `U1 of [ `L_s73_numeric ] 
            | `U2 of [ `L_s0_2_digit ] ] -> unit)
          =
          fun (x3421 : 'tags this) ->
            fun
              (x3422 :
                [ `Undefined of undefined  | `U1 of [ `L_s73_numeric ] 
                | `U2 of [ `L_s0_2_digit ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3421) "minute"
                (match x3422 with
                 | `Undefined x3423 -> undefined_to_js x3423
                 | `U1 x3424 ->
                     (match x3424 with
                      | `L_s73_numeric -> Ojs.string_to_js "numeric")
                 | `U2 x3425 ->
                     (match x3425 with
                      | `L_s0_2_digit -> Ojs.string_to_js "2-digit"))
        let (get_second :
          'tags this -> [ `L_s0_2_digit  | `L_s73_numeric ] option) =
          fun (x3427 : 'tags this) ->
            Ojs.option_of_js
              (fun (x3429 : Ojs.t) ->
                 let x3430 = x3429 in
                 match Ojs.string_of_js x3430 with
                 | "2-digit" -> `L_s0_2_digit
                 | "numeric" -> `L_s73_numeric
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3427) "second")
        let (set_second :
          'tags this ->
            [ `Undefined of undefined  | `U1 of [ `L_s73_numeric ] 
            | `U2 of [ `L_s0_2_digit ] ] -> unit)
          =
          fun (x3431 : 'tags this) ->
            fun
              (x3432 :
                [ `Undefined of undefined  | `U1 of [ `L_s73_numeric ] 
                | `U2 of [ `L_s0_2_digit ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3431) "second"
                (match x3432 with
                 | `Undefined x3433 -> undefined_to_js x3433
                 | `U1 x3434 ->
                     (match x3434 with
                      | `L_s73_numeric -> Ojs.string_to_js "numeric")
                 | `U2 x3435 ->
                     (match x3435 with
                      | `L_s0_2_digit -> Ojs.string_to_js "2-digit"))
        let (get_timeZoneName :
          'tags this -> [ `L_s56_long  | `L_s89_short ] option) =
          fun (x3437 : 'tags this) ->
            Ojs.option_of_js
              (fun (x3439 : Ojs.t) ->
                 let x3440 = x3439 in
                 match Ojs.string_of_js x3440 with
                 | "long" -> `L_s56_long
                 | "short" -> `L_s89_short
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3437) "timeZoneName")
        let (set_timeZoneName :
          'tags this ->
            [ `Undefined of undefined  | `U1 of [ `L_s56_long ] 
            | `U2 of [ `L_s89_short ] ] -> unit)
          =
          fun (x3441 : 'tags this) ->
            fun
              (x3442 :
                [ `Undefined of undefined  | `U1 of [ `L_s56_long ] 
                | `U2 of [ `L_s89_short ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3441) "timeZoneName"
                (match x3442 with
                 | `Undefined x3443 -> undefined_to_js x3443
                 | `U1 x3444 ->
                     (match x3444 with
                      | `L_s56_long -> Ojs.string_to_js "long")
                 | `U2 x3445 ->
                     (match x3445 with
                      | `L_s89_short -> Ojs.string_to_js "short"))
        let (get_formatMatcher' :
          'tags this -> [ `L_s23_basic  | `L_s24_best_fit ] option) =
          fun (x3447 : 'tags this) ->
            Ojs.option_of_js
              (fun (x3449 : Ojs.t) ->
                 let x3450 = x3449 in
                 match Ojs.string_of_js x3450 with
                 | "basic" -> `L_s23_basic
                 | "best fit" -> `L_s24_best_fit
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3447)
                 "formatMatcher")
        let (set_formatMatcher' :
          'tags this ->
            [ `Undefined of undefined  | `U1 of [ `L_s24_best_fit ] 
            | `U2 of [ `L_s23_basic ] ] -> unit)
          =
          fun (x3451 : 'tags this) ->
            fun
              (x3452 :
                [ `Undefined of undefined  | `U1 of [ `L_s24_best_fit ] 
                | `U2 of [ `L_s23_basic ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3451) "formatMatcher"
                (match x3452 with
                 | `Undefined x3453 -> undefined_to_js x3453
                 | `U1 x3454 ->
                     (match x3454 with
                      | `L_s24_best_fit -> Ojs.string_to_js "best fit")
                 | `U2 x3455 ->
                     (match x3455 with
                      | `L_s23_basic -> Ojs.string_to_js "basic"))
        let (get_hour12 : 'tags this -> bool option) =
          fun (x3457 : 'tags this) ->
            Ojs.option_of_js Ojs.bool_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3457) "hour12")
        let (set_hour12 :
          'tags this -> [ `Undefined of undefined  | `U1 of bool ] -> unit) =
          fun (x3460 : 'tags this) ->
            fun (x3461 : [ `Undefined of undefined  | `U1 of bool ]) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3460) "hour12"
                (match x3461 with
                 | `Undefined x3462 -> undefined_to_js x3462
                 | `U1 x3463 -> Ojs.bool_to_js x3463)
        let (get_timeZone : 'tags this -> string option) =
          fun (x3465 : 'tags this) ->
            Ojs.option_of_js Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3465) "timeZone")
        let (set_timeZone :
          'tags this -> [ `Undefined of undefined  | `U1 of string ] -> unit)
          =
          fun (x3468 : 'tags this) ->
            fun (x3469 : [ `Undefined of undefined  | `U1 of string ]) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3468) "timeZone"
                (match x3469 with
                 | `Undefined x3470 -> undefined_to_js x3470
                 | `U1 x3471 -> Ojs.string_to_js x3471)
        let (create :
          ?formatMatcher:[ `L_s23_basic  | `L_s24_best_fit ] ->
            ?dateStyle:[ `L_s44_full  | `L_s56_long  | `L_s60_medium 
                       | `L_s89_short ]
              ->
              ?timeStyle:[ `L_s44_full  | `L_s56_long  | `L_s60_medium 
                         | `L_s89_short ]
                ->
                ?dayPeriod:[ `L_s56_long  | `L_s68_narrow  | `L_s89_short ]
                  ->
                  ?fractionalSecondDigits:[ `L_n_0  | `L_n_1  | `L_n_2 
                                          | `L_n_3 ]
                    ->
                    ?calendar:string ->
                      ?dayPeriod:[ `L_s56_long  | `L_s68_narrow 
                                 | `L_s89_short ]
                        ->
                        ?numberingSystem:string ->
                          ?dateStyle:[ `L_s44_full  | `L_s56_long 
                                     | `L_s60_medium  | `L_s89_short ]
                            ->
                            ?timeStyle:[ `L_s44_full  | `L_s56_long 
                                       | `L_s60_medium  | `L_s89_short ]
                              ->
                              ?hourCycle:[ `L_s46_h11  | `L_s47_h12 
                                         | `L_s48_h23  | `L_s49_h24 ]
                                ->
                                ?localeMatcher:[ `L_s24_best_fit 
                                               | `L_s57_lookup ]
                                  ->
                                  ?weekday:[ `L_s56_long  | `L_s68_narrow 
                                           | `L_s89_short ]
                                    ->
                                    ?era:[ `L_s56_long  | `L_s68_narrow 
                                         | `L_s89_short ]
                                      ->
                                      ?year:[ `L_s0_2_digit 
                                            | `L_s73_numeric ]
                                        ->
                                        ?month:[ `L_s0_2_digit 
                                               | `L_s56_long 
                                               | `L_s68_narrow 
                                               | `L_s73_numeric 
                                               | `L_s89_short ]
                                          ->
                                          ?day:[ `L_s0_2_digit 
                                               | `L_s73_numeric ]
                                            ->
                                            ?hour:[ `L_s0_2_digit 
                                                  | `L_s73_numeric ]
                                              ->
                                              ?minute:[ `L_s0_2_digit 
                                                      | `L_s73_numeric ]
                                                ->
                                                ?second:[ `L_s0_2_digit 
                                                        | `L_s73_numeric ]
                                                  ->
                                                  ?timeZoneName:[
                                                                  `L_s56_long 
                                                                | `L_s89_short
                                                                    ]
                                                    ->
                                                    ?formatMatcher:[
                                                                    `L_s23_basic
                                                                     | 
                                                                    `L_s24_best_fit
                                                                    ]
                                                      ->
                                                      ?hour12:bool ->
                                                        ?timeZone:string ->
                                                          unit -> t)
          =
          fun
            ?formatMatcher:(x3473 :
                             [ `L_s23_basic  | `L_s24_best_fit ] option)
            ->
            fun
              ?dateStyle:(x3474 :
                           [ `L_s44_full  | `L_s56_long  | `L_s60_medium 
                           | `L_s89_short ] option)
              ->
              fun
                ?timeStyle:(x3475 :
                             [ `L_s44_full  | `L_s56_long  | `L_s60_medium 
                             | `L_s89_short ] option)
                ->
                fun
                  ?dayPeriod:(x3476 :
                               [ `L_s56_long  | `L_s68_narrow 
                               | `L_s89_short ] option)
                  ->
                  fun
                    ?fractionalSecondDigits:(x3477 :
                                              [ `L_n_0  | `L_n_1  | `L_n_2 
                                              | `L_n_3 ] option)
                    ->
                    fun ?calendar:(x3478 : string option) ->
                      fun
                        ?dayPeriod:(x3479 :
                                     [ `L_s56_long  | `L_s68_narrow 
                                     | `L_s89_short ] option)
                        ->
                        fun ?numberingSystem:(x3480 : string option) ->
                          fun
                            ?dateStyle:(x3481 :
                                         [ `L_s44_full  | `L_s56_long 
                                         | `L_s60_medium  | `L_s89_short ]
                                           option)
                            ->
                            fun
                              ?timeStyle:(x3482 :
                                           [ `L_s44_full  | `L_s56_long 
                                           | `L_s60_medium  | `L_s89_short ]
                                             option)
                              ->
                              fun
                                ?hourCycle:(x3483 :
                                             [ `L_s46_h11  | `L_s47_h12 
                                             | `L_s48_h23  | `L_s49_h24 ]
                                               option)
                                ->
                                fun
                                  ?localeMatcher:(x3484 :
                                                   [ `L_s24_best_fit 
                                                   | `L_s57_lookup ] option)
                                  ->
                                  fun
                                    ?weekday:(x3485 :
                                               [ `L_s56_long 
                                               | `L_s68_narrow 
                                               | `L_s89_short ] option)
                                    ->
                                    fun
                                      ?era:(x3486 :
                                             [ `L_s56_long  | `L_s68_narrow 
                                             | `L_s89_short ] option)
                                      ->
                                      fun
                                        ?year:(x3487 :
                                                [ `L_s0_2_digit 
                                                | `L_s73_numeric ] option)
                                        ->
                                        fun
                                          ?month:(x3488 :
                                                   [ `L_s0_2_digit 
                                                   | `L_s56_long 
                                                   | `L_s68_narrow 
                                                   | `L_s73_numeric 
                                                   | `L_s89_short ] option)
                                          ->
                                          fun
                                            ?day:(x3489 :
                                                   [ `L_s0_2_digit 
                                                   | `L_s73_numeric ] option)
                                            ->
                                            fun
                                              ?hour:(x3490 :
                                                      [ `L_s0_2_digit 
                                                      | `L_s73_numeric ]
                                                        option)
                                              ->
                                              fun
                                                ?minute:(x3491 :
                                                          [ `L_s0_2_digit 
                                                          | `L_s73_numeric ]
                                                            option)
                                                ->
                                                fun
                                                  ?second:(x3492 :
                                                            [ `L_s0_2_digit 
                                                            | `L_s73_numeric ]
                                                              option)
                                                  ->
                                                  fun
                                                    ?timeZoneName:(x3493 :
                                                                    [
                                                                    `L_s56_long
                                                                     | 
                                                                    `L_s89_short
                                                                    ] option)
                                                    ->
                                                    fun
                                                      ?formatMatcher:
                                                      (x3494 :
                                                        [ `L_s23_basic 
                                                        | `L_s24_best_fit ]
                                                          option)
                                                      ->
                                                      fun
                                                        ?hour12:(x3495 :
                                                                  bool option)
                                                        ->
                                                        fun
                                                          ?timeZone:(x3496 :
                                                                    string
                                                                    option)
                                                          ->
                                                          fun () ->
                                                            let x3497 =
                                                              Ojs.empty_obj
                                                                () in
                                                            (match x3473 with
                                                             | Some x3521 ->
                                                                 Ojs.set_prop_ascii
                                                                   x3497
                                                                   "formatMatcher"
                                                                   (match x3521
                                                                    with
                                                                    | 
                                                                    `L_s23_basic
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "basic"
                                                                    | 
                                                                    `L_s24_best_fit
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "best fit")
                                                             | None -> ());
                                                            (match x3474 with
                                                             | Some x3520 ->
                                                                 Ojs.set_prop_ascii
                                                                   x3497
                                                                   "dateStyle"
                                                                   (match x3520
                                                                    with
                                                                    | 
                                                                    `L_s44_full
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "full"
                                                                    | 
                                                                    `L_s56_long
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "long"
                                                                    | 
                                                                    `L_s60_medium
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "medium"
                                                                    | 
                                                                    `L_s89_short
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "short")
                                                             | None -> ());
                                                            (match x3475 with
                                                             | Some x3519 ->
                                                                 Ojs.set_prop_ascii
                                                                   x3497
                                                                   "timeStyle"
                                                                   (match x3519
                                                                    with
                                                                    | 
                                                                    `L_s44_full
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "full"
                                                                    | 
                                                                    `L_s56_long
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "long"
                                                                    | 
                                                                    `L_s60_medium
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "medium"
                                                                    | 
                                                                    `L_s89_short
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "short")
                                                             | None -> ());
                                                            (match x3476 with
                                                             | Some x3518 ->
                                                                 Ojs.set_prop_ascii
                                                                   x3497
                                                                   "dayPeriod"
                                                                   (match x3518
                                                                    with
                                                                    | 
                                                                    `L_s56_long
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "long"
                                                                    | 
                                                                    `L_s68_narrow
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "narrow"
                                                                    | 
                                                                    `L_s89_short
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "short")
                                                             | None -> ());
                                                            (match x3477 with
                                                             | Some x3517 ->
                                                                 Ojs.set_prop_ascii
                                                                   x3497
                                                                   "fractionalSecondDigits"
                                                                   (match x3517
                                                                    with
                                                                    | 
                                                                    `L_n_0 ->
                                                                    Ojs.int_to_js
                                                                    0
                                                                    | 
                                                                    `L_n_1 ->
                                                                    Ojs.int_to_js
                                                                    1
                                                                    | 
                                                                    `L_n_2 ->
                                                                    Ojs.int_to_js
                                                                    2
                                                                    | 
                                                                    `L_n_3 ->
                                                                    Ojs.int_to_js
                                                                    3)
                                                             | None -> ());
                                                            (match x3478 with
                                                             | Some x3516 ->
                                                                 Ojs.set_prop_ascii
                                                                   x3497
                                                                   "calendar"
                                                                   (Ojs.string_to_js
                                                                    x3516)
                                                             | None -> ());
                                                            (match x3479 with
                                                             | Some x3515 ->
                                                                 Ojs.set_prop_ascii
                                                                   x3497
                                                                   "dayPeriod"
                                                                   (match x3515
                                                                    with
                                                                    | 
                                                                    `L_s56_long
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "long"
                                                                    | 
                                                                    `L_s68_narrow
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "narrow"
                                                                    | 
                                                                    `L_s89_short
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "short")
                                                             | None -> ());
                                                            (match x3480 with
                                                             | Some x3514 ->
                                                                 Ojs.set_prop_ascii
                                                                   x3497
                                                                   "numberingSystem"
                                                                   (Ojs.string_to_js
                                                                    x3514)
                                                             | None -> ());
                                                            (match x3481 with
                                                             | Some x3513 ->
                                                                 Ojs.set_prop_ascii
                                                                   x3497
                                                                   "dateStyle"
                                                                   (match x3513
                                                                    with
                                                                    | 
                                                                    `L_s44_full
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "full"
                                                                    | 
                                                                    `L_s56_long
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "long"
                                                                    | 
                                                                    `L_s60_medium
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "medium"
                                                                    | 
                                                                    `L_s89_short
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "short")
                                                             | None -> ());
                                                            (match x3482 with
                                                             | Some x3512 ->
                                                                 Ojs.set_prop_ascii
                                                                   x3497
                                                                   "timeStyle"
                                                                   (match x3512
                                                                    with
                                                                    | 
                                                                    `L_s44_full
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "full"
                                                                    | 
                                                                    `L_s56_long
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "long"
                                                                    | 
                                                                    `L_s60_medium
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "medium"
                                                                    | 
                                                                    `L_s89_short
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "short")
                                                             | None -> ());
                                                            (match x3483 with
                                                             | Some x3511 ->
                                                                 Ojs.set_prop_ascii
                                                                   x3497
                                                                   "hourCycle"
                                                                   (match x3511
                                                                    with
                                                                    | 
                                                                    `L_s46_h11
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "h11"
                                                                    | 
                                                                    `L_s47_h12
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "h12"
                                                                    | 
                                                                    `L_s48_h23
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "h23"
                                                                    | 
                                                                    `L_s49_h24
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "h24")
                                                             | None -> ());
                                                            (match x3484 with
                                                             | Some x3510 ->
                                                                 Ojs.set_prop_ascii
                                                                   x3497
                                                                   "localeMatcher"
                                                                   (match x3510
                                                                    with
                                                                    | 
                                                                    `L_s24_best_fit
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "best fit"
                                                                    | 
                                                                    `L_s57_lookup
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "lookup")
                                                             | None -> ());
                                                            (match x3485 with
                                                             | Some x3509 ->
                                                                 Ojs.set_prop_ascii
                                                                   x3497
                                                                   "weekday"
                                                                   (match x3509
                                                                    with
                                                                    | 
                                                                    `L_s56_long
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "long"
                                                                    | 
                                                                    `L_s68_narrow
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "narrow"
                                                                    | 
                                                                    `L_s89_short
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "short")
                                                             | None -> ());
                                                            (match x3486 with
                                                             | Some x3508 ->
                                                                 Ojs.set_prop_ascii
                                                                   x3497
                                                                   "era"
                                                                   (match x3508
                                                                    with
                                                                    | 
                                                                    `L_s56_long
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "long"
                                                                    | 
                                                                    `L_s68_narrow
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "narrow"
                                                                    | 
                                                                    `L_s89_short
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "short")
                                                             | None -> ());
                                                            (match x3487 with
                                                             | Some x3507 ->
                                                                 Ojs.set_prop_ascii
                                                                   x3497
                                                                   "year"
                                                                   (match x3507
                                                                    with
                                                                    | 
                                                                    `L_s0_2_digit
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "2-digit"
                                                                    | 
                                                                    `L_s73_numeric
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "numeric")
                                                             | None -> ());
                                                            (match x3488 with
                                                             | Some x3506 ->
                                                                 Ojs.set_prop_ascii
                                                                   x3497
                                                                   "month"
                                                                   (match x3506
                                                                    with
                                                                    | 
                                                                    `L_s0_2_digit
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "2-digit"
                                                                    | 
                                                                    `L_s56_long
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "long"
                                                                    | 
                                                                    `L_s68_narrow
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "narrow"
                                                                    | 
                                                                    `L_s73_numeric
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "numeric"
                                                                    | 
                                                                    `L_s89_short
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "short")
                                                             | None -> ());
                                                            (match x3489 with
                                                             | Some x3505 ->
                                                                 Ojs.set_prop_ascii
                                                                   x3497
                                                                   "day"
                                                                   (match x3505
                                                                    with
                                                                    | 
                                                                    `L_s0_2_digit
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "2-digit"
                                                                    | 
                                                                    `L_s73_numeric
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "numeric")
                                                             | None -> ());
                                                            (match x3490 with
                                                             | Some x3504 ->
                                                                 Ojs.set_prop_ascii
                                                                   x3497
                                                                   "hour"
                                                                   (match x3504
                                                                    with
                                                                    | 
                                                                    `L_s0_2_digit
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "2-digit"
                                                                    | 
                                                                    `L_s73_numeric
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "numeric")
                                                             | None -> ());
                                                            (match x3491 with
                                                             | Some x3503 ->
                                                                 Ojs.set_prop_ascii
                                                                   x3497
                                                                   "minute"
                                                                   (match x3503
                                                                    with
                                                                    | 
                                                                    `L_s0_2_digit
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "2-digit"
                                                                    | 
                                                                    `L_s73_numeric
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "numeric")
                                                             | None -> ());
                                                            (match x3492 with
                                                             | Some x3502 ->
                                                                 Ojs.set_prop_ascii
                                                                   x3497
                                                                   "second"
                                                                   (match x3502
                                                                    with
                                                                    | 
                                                                    `L_s0_2_digit
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "2-digit"
                                                                    | 
                                                                    `L_s73_numeric
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "numeric")
                                                             | None -> ());
                                                            (match x3493 with
                                                             | Some x3501 ->
                                                                 Ojs.set_prop_ascii
                                                                   x3497
                                                                   "timeZoneName"
                                                                   (match x3501
                                                                    with
                                                                    | 
                                                                    `L_s56_long
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "long"
                                                                    | 
                                                                    `L_s89_short
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "short")
                                                             | None -> ());
                                                            (match x3494 with
                                                             | Some x3500 ->
                                                                 Ojs.set_prop_ascii
                                                                   x3497
                                                                   "formatMatcher"
                                                                   (match x3500
                                                                    with
                                                                    | 
                                                                    `L_s23_basic
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "basic"
                                                                    | 
                                                                    `L_s24_best_fit
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "best fit")
                                                             | None -> ());
                                                            (match x3495 with
                                                             | Some x3499 ->
                                                                 Ojs.set_prop_ascii
                                                                   x3497
                                                                   "hour12"
                                                                   (Ojs.bool_to_js
                                                                    x3499)
                                                             | None -> ());
                                                            (match x3496 with
                                                             | Some x3498 ->
                                                                 Ojs.set_prop_ascii
                                                                   x3497
                                                                   "timeZone"
                                                                   (Ojs.string_to_js
                                                                    x3498)
                                                             | None -> ());
                                                            t_of_js x3497
        let cast_from = Obj.magic
      end
    module DateTimeFormat =
      struct
        type t = [ `Intl_DateTimeFormat ] intf
        let rec t_of_js : Ojs.t -> t = Obj.magic
        and t_to_js : t -> Ojs.t = Obj.magic
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x3523 : Ojs.t) -> t_of_js x3523
        and t_0_to_js : t_0 -> Ojs.t = fun (x3522 : t) -> t_to_js x3522
        type tags = [ `Intl_DateTimeFormat ]
        type tags_0 = tags
        type 'tags this =
          'tags intf constraint 'tags = [> `Intl_DateTimeFormat ]
        let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
          =
          fun (type __tags) ->
            fun (__tags_of_js : Ojs.t -> __tags) ->
              fun (x3526 : Ojs.t) -> intf_of_js __tags_of_js x3526
        and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
          fun (type __tags) ->
            fun (__tags_to_js : __tags -> Ojs.t) ->
              fun (x3524 : __tags intf) -> intf_to_js __tags_to_js x3524
        let (formatToParts :
          'tags this ->
            ?date:[ `U1 of Date.t  | `U2 of float ] ->
              unit -> DateTimeFormatPart.t list)
          =
          fun (x3533 : 'tags this) ->
            fun ?date:(x3528 : [ `U1 of Date.t  | `U2 of float ] option) ->
              fun () ->
                Ojs.list_of_js DateTimeFormatPart.t_of_js
                  (let x3535 = this_to_js Obj.magic x3533 in
                   Ojs.call (Ojs.get_prop_ascii x3535 "formatToParts")
                     "apply"
                     [|x3535;((let x3529 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               (match x3528 with
                                | Some x3530 ->
                                    ignore
                                      (Ojs.call x3529 "push"
                                         [|((match x3530 with
                                             | `U1 x3531 ->
                                                 Date.t_to_js x3531
                                             | `U2 x3532 ->
                                                 Ojs.float_to_js x3532))|])
                                | None -> ());
                               x3529))|])
        let (format :
          'tags this ->
            ?date:[ `U1 of Date.t  | `U2 of float ] -> unit -> string)
          =
          fun (x3542 : 'tags this) ->
            fun ?date:(x3537 : [ `U1 of Date.t  | `U2 of float ] option) ->
              fun () ->
                Ojs.string_of_js
                  (let x3544 = this_to_js Obj.magic x3542 in
                   Ojs.call (Ojs.get_prop_ascii x3544 "format") "apply"
                     [|x3544;((let x3538 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               (match x3537 with
                                | Some x3539 ->
                                    ignore
                                      (Ojs.call x3538 "push"
                                         [|((match x3539 with
                                             | `U1 x3540 ->
                                                 Date.t_to_js x3540
                                             | `U2 x3541 ->
                                                 Ojs.float_to_js x3541))|])
                                | None -> ());
                               x3538))|])
        let (resolvedOptions : 'tags this -> ResolvedDateTimeFormatOptions.t)
          =
          fun (x3545 : 'tags this) ->
            ResolvedDateTimeFormatOptions.t_of_js
              (Ojs.call (this_to_js Obj.magic x3545) "resolvedOptions" [||])
        let cast_from = Obj.magic
        let (create :
          ?locales:[ `U1 of string  | `U2 of string list ] ->
            ?options:DateTimeFormatOptions.t -> unit -> t)
          =
          fun
            ?locales:(x3547 : [ `U1 of string  | `U2 of string list ] option)
            ->
            fun ?options:(x3548 : DateTimeFormatOptions.t option) ->
              fun () ->
                t_of_js
                  (Ojs.new_obj_arr
                     (Ojs.get_prop_ascii
                        (Ojs.get_prop_ascii Ojs.global "Intl")
                        "DateTimeFormat")
                     (let x3549 =
                        Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                          [||] in
                      (match x3547 with
                       | Some x3551 ->
                           ignore
                             (Ojs.call x3549 "push"
                                [|((match x3551 with
                                    | `U1 x3552 -> Ojs.string_to_js x3552
                                    | `U2 x3553 ->
                                        Ojs.list_to_js Ojs.string_to_js x3553))|])
                       | None -> ());
                      (match x3548 with
                       | Some x3550 ->
                           ignore
                             (Ojs.call x3549 "push"
                                [|(DateTimeFormatOptions.t_to_js x3550)|])
                       | None -> ());
                      x3549))
        let (invoke :
          ?locales:[ `U1 of string  | `U2 of string list ] ->
            ?options:DateTimeFormatOptions.t -> unit -> t)
          =
          fun
            ?locales:(x3555 : [ `U1 of string  | `U2 of string list ] option)
            ->
            fun ?options:(x3556 : DateTimeFormatOptions.t option) ->
              fun () ->
                t_of_js
                  (Ojs.call
                     (Ojs.get_prop_ascii
                        (Ojs.get_prop_ascii Ojs.global "Intl")
                        "DateTimeFormat") "apply"
                     [|Ojs.null;((let x3557 =
                                    Ojs.new_obj
                                      (Ojs.get_prop_ascii Ojs.global "Array")
                                      [||] in
                                  (match x3555 with
                                   | Some x3559 ->
                                       ignore
                                         (Ojs.call x3557 "push"
                                            [|((match x3559 with
                                                | `U1 x3560 ->
                                                    Ojs.string_to_js x3560
                                                | `U2 x3561 ->
                                                    Ojs.list_to_js
                                                      Ojs.string_to_js x3561))|])
                                   | None -> ());
                                  (match x3556 with
                                   | Some x3558 ->
                                       ignore
                                         (Ojs.call x3557 "push"
                                            [|(DateTimeFormatOptions.t_to_js
                                                 x3558)|])
                                   | None -> ());
                                  x3557))|])
        let (supportedLocalesOf :
          locales:[ `U1 of string  | `U2 of string list ] ->
            ?options:DateTimeFormatOptions.t -> unit -> string list)
          =
          fun ~locales:(x3563 : [ `U1 of string  | `U2 of string list ]) ->
            fun ?options:(x3564 : DateTimeFormatOptions.t option) ->
              fun () ->
                Ojs.list_of_js Ojs.string_of_js
                  (let x3570 =
                     Ojs.get_prop_ascii
                       (Ojs.get_prop_ascii Ojs.global "Intl")
                       "DateTimeFormat" in
                   Ojs.call (Ojs.get_prop_ascii x3570 "supportedLocalesOf")
                     "apply"
                     [|x3570;((let x3565 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x3565 "push"
                                    [|((match x3563 with
                                        | `U1 x3567 -> Ojs.string_to_js x3567
                                        | `U2 x3568 ->
                                            Ojs.list_to_js Ojs.string_to_js
                                              x3568))|]);
                               (match x3564 with
                                | Some x3566 ->
                                    ignore
                                      (Ojs.call x3565 "push"
                                         [|(DateTimeFormatOptions.t_to_js
                                              x3566)|])
                                | None -> ());
                               x3565))|])
      end
    module ResolvedCollatorOptions =
      struct
        type t = [ `Intl_ResolvedCollatorOptions ] intf
        let rec t_of_js : Ojs.t -> t = Obj.magic
        and t_to_js : t -> Ojs.t = Obj.magic
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x3573 : Ojs.t) -> t_of_js x3573
        and t_0_to_js : t_0 -> Ojs.t = fun (x3572 : t) -> t_to_js x3572
        type tags = [ `Intl_ResolvedCollatorOptions ]
        type tags_0 = tags
        type 'tags this =
          'tags intf constraint 'tags = [> `Intl_ResolvedCollatorOptions ]
        let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
          =
          fun (type __tags) ->
            fun (__tags_of_js : Ojs.t -> __tags) ->
              fun (x3576 : Ojs.t) -> intf_of_js __tags_of_js x3576
        and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
          fun (type __tags) ->
            fun (__tags_to_js : __tags -> Ojs.t) ->
              fun (x3574 : __tags intf) -> intf_to_js __tags_to_js x3574
        let (get_locale : 'tags this -> string) =
          fun (x3578 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3578) "locale")
        let (set_locale : 'tags this -> string -> unit) =
          fun (x3580 : 'tags this) ->
            fun (x3581 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3580) "locale"
                (Ojs.string_to_js x3581)
        let (get_usage : 'tags this -> string) =
          fun (x3583 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3583) "usage")
        let (set_usage : 'tags this -> string -> unit) =
          fun (x3585 : 'tags this) ->
            fun (x3586 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3585) "usage"
                (Ojs.string_to_js x3586)
        let (get_sensitivity : 'tags this -> string) =
          fun (x3588 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3588) "sensitivity")
        let (set_sensitivity : 'tags this -> string -> unit) =
          fun (x3590 : 'tags this) ->
            fun (x3591 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3590) "sensitivity"
                (Ojs.string_to_js x3591)
        let (get_ignorePunctuation : 'tags this -> bool) =
          fun (x3593 : 'tags this) ->
            Ojs.bool_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3593)
                 "ignorePunctuation")
        let (set_ignorePunctuation : 'tags this -> bool -> unit) =
          fun (x3595 : 'tags this) ->
            fun (x3596 : bool) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3595)
                "ignorePunctuation" (Ojs.bool_to_js x3596)
        let (get_collation : 'tags this -> string) =
          fun (x3598 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3598) "collation")
        let (set_collation : 'tags this -> string -> unit) =
          fun (x3600 : 'tags this) ->
            fun (x3601 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3600) "collation"
                (Ojs.string_to_js x3601)
        let (get_caseFirst : 'tags this -> string) =
          fun (x3603 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3603) "caseFirst")
        let (set_caseFirst : 'tags this -> string -> unit) =
          fun (x3605 : 'tags this) ->
            fun (x3606 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3605) "caseFirst"
                (Ojs.string_to_js x3606)
        let (get_numeric : 'tags this -> bool) =
          fun (x3608 : 'tags this) ->
            Ojs.bool_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3608) "numeric")
        let (set_numeric : 'tags this -> bool -> unit) =
          fun (x3610 : 'tags this) ->
            fun (x3611 : bool) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3610) "numeric"
                (Ojs.bool_to_js x3611)
        let (create :
          locale:string ->
            usage:string ->
              sensitivity:string ->
                ignorePunctuation:bool ->
                  collation:string ->
                    caseFirst:string -> numeric:bool -> unit -> t)
          =
          fun ~locale:(x3613 : string) ->
            fun ~usage:(x3614 : string) ->
              fun ~sensitivity:(x3615 : string) ->
                fun ~ignorePunctuation:(x3616 : bool) ->
                  fun ~collation:(x3617 : string) ->
                    fun ~caseFirst:(x3618 : string) ->
                      fun ~numeric:(x3619 : bool) ->
                        fun () ->
                          let x3620 = Ojs.empty_obj () in
                          Ojs.set_prop_ascii x3620 "locale"
                            (Ojs.string_to_js x3613);
                          Ojs.set_prop_ascii x3620 "usage"
                            (Ojs.string_to_js x3614);
                          Ojs.set_prop_ascii x3620 "sensitivity"
                            (Ojs.string_to_js x3615);
                          Ojs.set_prop_ascii x3620 "ignorePunctuation"
                            (Ojs.bool_to_js x3616);
                          Ojs.set_prop_ascii x3620 "collation"
                            (Ojs.string_to_js x3617);
                          Ojs.set_prop_ascii x3620 "caseFirst"
                            (Ojs.string_to_js x3618);
                          Ojs.set_prop_ascii x3620 "numeric"
                            (Ojs.bool_to_js x3619);
                          t_of_js x3620
        let cast_from = Obj.magic
      end
    module CollatorOptions =
      struct
        type t = [ `Intl_CollatorOptions ] intf
        let rec t_of_js : Ojs.t -> t = Obj.magic
        and t_to_js : t -> Ojs.t = Obj.magic
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x3622 : Ojs.t) -> t_of_js x3622
        and t_0_to_js : t_0 -> Ojs.t = fun (x3621 : t) -> t_to_js x3621
        type tags = [ `Intl_CollatorOptions ]
        type tags_0 = tags
        type 'tags this =
          'tags intf constraint 'tags = [> `Intl_CollatorOptions ]
        let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
          =
          fun (type __tags) ->
            fun (__tags_of_js : Ojs.t -> __tags) ->
              fun (x3625 : Ojs.t) -> intf_of_js __tags_of_js x3625
        and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
          fun (type __tags) ->
            fun (__tags_to_js : __tags -> Ojs.t) ->
              fun (x3623 : __tags intf) -> intf_to_js __tags_to_js x3623
        let (get_usage : 'tags this -> string option) =
          fun (x3627 : 'tags this) ->
            Ojs.option_of_js Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3627) "usage")
        let (set_usage :
          'tags this -> [ `Undefined of undefined  | `U1 of string ] -> unit)
          =
          fun (x3630 : 'tags this) ->
            fun (x3631 : [ `Undefined of undefined  | `U1 of string ]) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3630) "usage"
                (match x3631 with
                 | `Undefined x3632 -> undefined_to_js x3632
                 | `U1 x3633 -> Ojs.string_to_js x3633)
        let (get_localeMatcher : 'tags this -> string option) =
          fun (x3635 : 'tags this) ->
            Ojs.option_of_js Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3635)
                 "localeMatcher")
        let (set_localeMatcher :
          'tags this -> [ `Undefined of undefined  | `U1 of string ] -> unit)
          =
          fun (x3638 : 'tags this) ->
            fun (x3639 : [ `Undefined of undefined  | `U1 of string ]) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3638) "localeMatcher"
                (match x3639 with
                 | `Undefined x3640 -> undefined_to_js x3640
                 | `U1 x3641 -> Ojs.string_to_js x3641)
        let (get_numeric : 'tags this -> bool option) =
          fun (x3643 : 'tags this) ->
            Ojs.option_of_js Ojs.bool_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3643) "numeric")
        let (set_numeric :
          'tags this -> [ `Undefined of undefined  | `U1 of bool ] -> unit) =
          fun (x3646 : 'tags this) ->
            fun (x3647 : [ `Undefined of undefined  | `U1 of bool ]) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3646) "numeric"
                (match x3647 with
                 | `Undefined x3648 -> undefined_to_js x3648
                 | `U1 x3649 -> Ojs.bool_to_js x3649)
        let (get_caseFirst : 'tags this -> string option) =
          fun (x3651 : 'tags this) ->
            Ojs.option_of_js Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3651) "caseFirst")
        let (set_caseFirst :
          'tags this -> [ `Undefined of undefined  | `U1 of string ] -> unit)
          =
          fun (x3654 : 'tags this) ->
            fun (x3655 : [ `Undefined of undefined  | `U1 of string ]) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3654) "caseFirst"
                (match x3655 with
                 | `Undefined x3656 -> undefined_to_js x3656
                 | `U1 x3657 -> Ojs.string_to_js x3657)
        let (get_sensitivity : 'tags this -> string option) =
          fun (x3659 : 'tags this) ->
            Ojs.option_of_js Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3659) "sensitivity")
        let (set_sensitivity :
          'tags this -> [ `Undefined of undefined  | `U1 of string ] -> unit)
          =
          fun (x3662 : 'tags this) ->
            fun (x3663 : [ `Undefined of undefined  | `U1 of string ]) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3662) "sensitivity"
                (match x3663 with
                 | `Undefined x3664 -> undefined_to_js x3664
                 | `U1 x3665 -> Ojs.string_to_js x3665)
        let (get_ignorePunctuation : 'tags this -> bool option) =
          fun (x3667 : 'tags this) ->
            Ojs.option_of_js Ojs.bool_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3667)
                 "ignorePunctuation")
        let (set_ignorePunctuation :
          'tags this -> [ `Undefined of undefined  | `U1 of bool ] -> unit) =
          fun (x3670 : 'tags this) ->
            fun (x3671 : [ `Undefined of undefined  | `U1 of bool ]) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3670)
                "ignorePunctuation"
                (match x3671 with
                 | `Undefined x3672 -> undefined_to_js x3672
                 | `U1 x3673 -> Ojs.bool_to_js x3673)
        let (create :
          ?usage:string ->
            ?localeMatcher:string ->
              ?numeric:bool ->
                ?caseFirst:string ->
                  ?sensitivity:string -> ?ignorePunctuation:bool -> unit -> t)
          =
          fun ?usage:(x3675 : string option) ->
            fun ?localeMatcher:(x3676 : string option) ->
              fun ?numeric:(x3677 : bool option) ->
                fun ?caseFirst:(x3678 : string option) ->
                  fun ?sensitivity:(x3679 : string option) ->
                    fun ?ignorePunctuation:(x3680 : bool option) ->
                      fun () ->
                        let x3681 = Ojs.empty_obj () in
                        (match x3675 with
                         | Some x3687 ->
                             Ojs.set_prop_ascii x3681 "usage"
                               (Ojs.string_to_js x3687)
                         | None -> ());
                        (match x3676 with
                         | Some x3686 ->
                             Ojs.set_prop_ascii x3681 "localeMatcher"
                               (Ojs.string_to_js x3686)
                         | None -> ());
                        (match x3677 with
                         | Some x3685 ->
                             Ojs.set_prop_ascii x3681 "numeric"
                               (Ojs.bool_to_js x3685)
                         | None -> ());
                        (match x3678 with
                         | Some x3684 ->
                             Ojs.set_prop_ascii x3681 "caseFirst"
                               (Ojs.string_to_js x3684)
                         | None -> ());
                        (match x3679 with
                         | Some x3683 ->
                             Ojs.set_prop_ascii x3681 "sensitivity"
                               (Ojs.string_to_js x3683)
                         | None -> ());
                        (match x3680 with
                         | Some x3682 ->
                             Ojs.set_prop_ascii x3681 "ignorePunctuation"
                               (Ojs.bool_to_js x3682)
                         | None -> ());
                        t_of_js x3681
        let cast_from = Obj.magic
      end
    module Collator =
      struct
        type t = [ `Intl_Collator ] intf
        let rec t_of_js : Ojs.t -> t = Obj.magic
        and t_to_js : t -> Ojs.t = Obj.magic
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x3689 : Ojs.t) -> t_of_js x3689
        and t_0_to_js : t_0 -> Ojs.t = fun (x3688 : t) -> t_to_js x3688
        type tags = [ `Intl_Collator ]
        type tags_0 = tags
        type 'tags this = 'tags intf constraint 'tags = [> `Intl_Collator ]
        let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
          =
          fun (type __tags) ->
            fun (__tags_of_js : Ojs.t -> __tags) ->
              fun (x3692 : Ojs.t) -> intf_of_js __tags_of_js x3692
        and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
          fun (type __tags) ->
            fun (__tags_to_js : __tags -> Ojs.t) ->
              fun (x3690 : __tags intf) -> intf_to_js __tags_to_js x3690
        let (compare : 'tags this -> x:string -> y:string -> float) =
          fun (x3696 : 'tags this) ->
            fun ~x:(x3694 : string) ->
              fun ~y:(x3695 : string) ->
                Ojs.float_of_js
                  (Ojs.call (this_to_js Obj.magic x3696) "compare"
                     [|(Ojs.string_to_js x3694);(Ojs.string_to_js x3695)|])
        let (resolvedOptions : 'tags this -> ResolvedCollatorOptions.t) =
          fun (x3698 : 'tags this) ->
            ResolvedCollatorOptions.t_of_js
              (Ojs.call (this_to_js Obj.magic x3698) "resolvedOptions" [||])
        let cast_from = Obj.magic
        let (create :
          ?locales:[ `U1 of string  | `U2 of string list ] ->
            ?options:CollatorOptions.t -> unit -> t)
          =
          fun
            ?locales:(x3700 : [ `U1 of string  | `U2 of string list ] option)
            ->
            fun ?options:(x3701 : CollatorOptions.t option) ->
              fun () ->
                t_of_js
                  (Ojs.new_obj_arr
                     (Ojs.get_prop_ascii
                        (Ojs.get_prop_ascii Ojs.global "Intl") "Collator")
                     (let x3702 =
                        Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                          [||] in
                      (match x3700 with
                       | Some x3704 ->
                           ignore
                             (Ojs.call x3702 "push"
                                [|((match x3704 with
                                    | `U1 x3705 -> Ojs.string_to_js x3705
                                    | `U2 x3706 ->
                                        Ojs.list_to_js Ojs.string_to_js x3706))|])
                       | None -> ());
                      (match x3701 with
                       | Some x3703 ->
                           ignore
                             (Ojs.call x3702 "push"
                                [|(CollatorOptions.t_to_js x3703)|])
                       | None -> ());
                      x3702))
        let (invoke :
          ?locales:[ `U1 of string  | `U2 of string list ] ->
            ?options:CollatorOptions.t -> unit -> t)
          =
          fun
            ?locales:(x3708 : [ `U1 of string  | `U2 of string list ] option)
            ->
            fun ?options:(x3709 : CollatorOptions.t option) ->
              fun () ->
                t_of_js
                  (Ojs.call
                     (Ojs.get_prop_ascii
                        (Ojs.get_prop_ascii Ojs.global "Intl") "Collator")
                     "apply"
                     [|Ojs.null;((let x3710 =
                                    Ojs.new_obj
                                      (Ojs.get_prop_ascii Ojs.global "Array")
                                      [||] in
                                  (match x3708 with
                                   | Some x3712 ->
                                       ignore
                                         (Ojs.call x3710 "push"
                                            [|((match x3712 with
                                                | `U1 x3713 ->
                                                    Ojs.string_to_js x3713
                                                | `U2 x3714 ->
                                                    Ojs.list_to_js
                                                      Ojs.string_to_js x3714))|])
                                   | None -> ());
                                  (match x3709 with
                                   | Some x3711 ->
                                       ignore
                                         (Ojs.call x3710 "push"
                                            [|(CollatorOptions.t_to_js x3711)|])
                                   | None -> ());
                                  x3710))|])
        let (supportedLocalesOf :
          locales:[ `U1 of string  | `U2 of string list ] ->
            ?options:CollatorOptions.t -> unit -> string list)
          =
          fun ~locales:(x3716 : [ `U1 of string  | `U2 of string list ]) ->
            fun ?options:(x3717 : CollatorOptions.t option) ->
              fun () ->
                Ojs.list_of_js Ojs.string_of_js
                  (let x3723 =
                     Ojs.get_prop_ascii
                       (Ojs.get_prop_ascii Ojs.global "Intl") "Collator" in
                   Ojs.call (Ojs.get_prop_ascii x3723 "supportedLocalesOf")
                     "apply"
                     [|x3723;((let x3718 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x3718 "push"
                                    [|((match x3716 with
                                        | `U1 x3720 -> Ojs.string_to_js x3720
                                        | `U2 x3721 ->
                                            Ojs.list_to_js Ojs.string_to_js
                                              x3721))|]);
                               (match x3717 with
                                | Some x3719 ->
                                    ignore
                                      (Ojs.call x3718 "push"
                                         [|(CollatorOptions.t_to_js x3719)|])
                                | None -> ());
                               x3718))|])
      end
  end
module String =
  struct
    module AnonymousInterface6 =
      struct
        type t = Ojs.t
        let rec t_of_js : Ojs.t -> t = fun (x3726 : Ojs.t) -> x3726
        and t_to_js : t -> Ojs.t = fun (x3725 : Ojs.t) -> x3725
        let (get_raw : t -> (string ArrayLike.t, string list) union2) =
          fun (x3727 : t) ->
            union2_of_js
              (fun (x3728 : Ojs.t) ->
                 ArrayLike.t_of_js Ojs.string_of_js x3728)
              (fun (x3730 : Ojs.t) -> Ojs.list_of_js Ojs.string_of_js x3730)
              (Ojs.get_prop_ascii (t_to_js x3727) "raw")
        let (set_raw :
          t -> [ `U1 of string list  | `U2 of string ArrayLike.t ] -> unit) =
          fun (x3732 : t) ->
            fun (x3733 : [ `U1 of string list  | `U2 of string ArrayLike.t ])
              ->
              Ojs.set_prop_ascii (t_to_js x3732) "raw"
                (match x3733 with
                 | `U1 x3734 -> Ojs.list_to_js Ojs.string_to_js x3734
                 | `U2 x3736 -> ArrayLike.t_to_js Ojs.string_to_js x3736)
        let (create :
          raw:(string ArrayLike.t, string list) union2 -> unit -> t) =
          fun ~raw:(x3738 : (string ArrayLike.t, string list) union2) ->
            fun () ->
              let x3739 = Ojs.empty_obj () in
              Ojs.set_prop_ascii x3739 "raw"
                (union2_to_js
                   (fun (x3740 : string ArrayLike.t) ->
                      ArrayLike.t_to_js Ojs.string_to_js x3740)
                   (fun (x3742 : string list) ->
                      Ojs.list_to_js Ojs.string_to_js x3742) x3738);
              t_of_js x3739
      end
    module AnonymousInterface22 =
      struct
        type t = Ojs.t
        let rec t_of_js : Ojs.t -> t = fun (x3745 : Ojs.t) -> x3745
        and t_to_js : t -> Ojs.t = fun (x3744 : Ojs.t) -> x3744
      end
    module AnonymousInterface21 =
      struct
        type t = Ojs.t
        let rec t_of_js : Ojs.t -> t = fun (x3747 : Ojs.t) -> x3747
        and t_to_js : t -> Ojs.t = fun (x3746 : Ojs.t) -> x3746
      end
    module AnonymousInterface20 =
      struct
        type t = Ojs.t
        let rec t_of_js : Ojs.t -> t = fun (x3749 : Ojs.t) -> x3749
        and t_to_js : t -> Ojs.t = fun (x3748 : Ojs.t) -> x3748
      end
    module AnonymousInterface19 =
      struct
        type t = Ojs.t
        let rec t_of_js : Ojs.t -> t = fun (x3751 : Ojs.t) -> x3751
        and t_to_js : t -> Ojs.t = fun (x3750 : Ojs.t) -> x3750
      end
    module AnonymousInterface18 =
      struct
        type t = Ojs.t
        let rec t_of_js : Ojs.t -> t = fun (x3753 : Ojs.t) -> x3753
        and t_to_js : t -> Ojs.t = fun (x3752 : Ojs.t) -> x3752
      end
    type t =
      [ `String  | string ArrayLike.tags_1 | string IterableIterator.tags_1]
        intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x3755 : Ojs.t) -> t_of_js x3755
    and t_0_to_js : t_0 -> Ojs.t = fun (x3754 : t) -> t_to_js x3754
    type tags =
      [ `String  | string ArrayLike.tags_1 | string IterableIterator.tags_1]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `String ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x3758 : Ojs.t) -> intf_of_js __tags_of_js x3758
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x3756 : __tags intf) -> intf_to_js __tags_to_js x3756
    let (replaceAll :
      'tags this ->
        searchValue:[ `U1 of string  | `U2 of RegExp.t ] ->
          replaceValue:string -> string)
      =
      fun (x3764 : 'tags this) ->
        fun ~searchValue:(x3760 : [ `U1 of string  | `U2 of RegExp.t ]) ->
          fun ~replaceValue:(x3763 : string) ->
            Ojs.string_of_js
              (Ojs.call (this_to_js Obj.magic x3764) "replaceAll"
                 [|((match x3760 with
                     | `U1 x3761 -> Ojs.string_to_js x3761
                     | `U2 x3762 -> RegExp.t_to_js x3762));(Ojs.string_to_js
                                                              x3763)|])
    let (replaceAll' :
      'tags this ->
        searchValue:[ `U1 of string  | `U2 of RegExp.t ] ->
          replacer:(substring:string -> args:any list -> string) -> string)
      =
      fun (x3772 : 'tags this) ->
        fun ~searchValue:(x3766 : [ `U1 of string  | `U2 of RegExp.t ]) ->
          fun ~replacer:(x3769 : substring:string -> args:any list -> string)
            ->
            Ojs.string_of_js
              (Ojs.call (this_to_js Obj.magic x3772) "replaceAll"
                 [|((match x3766 with
                     | `U1 x3767 -> Ojs.string_to_js x3767
                     | `U2 x3768 -> RegExp.t_to_js x3768));(Ojs.fun_to_js_args
                                                              (fun
                                                                 (x3770 : _)
                                                                 ->
                                                                 Ojs.string_to_js
                                                                   (x3769
                                                                    ~substring:(
                                                                    Ojs.string_of_js
                                                                    (Ojs.array_get
                                                                    x3770 0))
                                                                    ~args:(
                                                                    Ojs.list_of_js_from
                                                                    any_of_js
                                                                    x3770 1))))|])
    let (at : 'tags this -> index:float -> string option) =
      fun (x3775 : 'tags this) ->
        fun ~index:(x3774 : float) ->
          Ojs.option_of_js Ojs.string_of_js
            (Ojs.call (this_to_js Obj.magic x3775) "at"
               [|(Ojs.float_to_js x3774)|])
    let (replaceAll'' :
      'tags this ->
        searchValue:[ `U1 of string  | `U2 of RegExp.t ] ->
          replaceValue:string -> string)
      =
      fun (x3782 : 'tags this) ->
        fun ~searchValue:(x3778 : [ `U1 of string  | `U2 of RegExp.t ]) ->
          fun ~replaceValue:(x3781 : string) ->
            Ojs.string_of_js
              (Ojs.call (this_to_js Obj.magic x3782) "replaceAll"
                 [|((match x3778 with
                     | `U1 x3779 -> Ojs.string_to_js x3779
                     | `U2 x3780 -> RegExp.t_to_js x3780));(Ojs.string_to_js
                                                              x3781)|])
    let (replaceAll''' :
      'tags this ->
        searchValue:[ `U1 of string  | `U2 of RegExp.t ] ->
          replacer:(substring:string -> args:any list -> string) -> string)
      =
      fun (x3790 : 'tags this) ->
        fun ~searchValue:(x3784 : [ `U1 of string  | `U2 of RegExp.t ]) ->
          fun ~replacer:(x3787 : substring:string -> args:any list -> string)
            ->
            Ojs.string_of_js
              (Ojs.call (this_to_js Obj.magic x3790) "replaceAll"
                 [|((match x3784 with
                     | `U1 x3785 -> Ojs.string_to_js x3785
                     | `U2 x3786 -> RegExp.t_to_js x3786));(Ojs.fun_to_js_args
                                                              (fun
                                                                 (x3788 : _)
                                                                 ->
                                                                 Ojs.string_to_js
                                                                   (x3787
                                                                    ~substring:(
                                                                    Ojs.string_of_js
                                                                    (Ojs.array_get
                                                                    x3788 0))
                                                                    ~args:(
                                                                    Ojs.list_of_js_from
                                                                    any_of_js
                                                                    x3788 1))))|])
    let (matchAll :
      'tags this -> regexp:RegExp.t -> RegExpMatchArray.t IterableIterator.t)
      =
      fun (x3793 : 'tags this) ->
        fun ~regexp:(x3792 : RegExp.t) ->
          IterableIterator.t_of_js RegExpMatchArray.t_of_js
            (Ojs.call (this_to_js Obj.magic x3793) "matchAll"
               [|(RegExp.t_to_js x3792)|])
    let (trimEnd : 'tags this -> string) =
      fun (x3796 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x3796) "trimEnd" [||])
    let (trimStart : 'tags this -> string) =
      fun (x3798 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x3798) "trimStart" [||])
    let (trimLeft : 'tags this -> string) =
      fun (x3800 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x3800) "trimLeft" [||])
    let (trimRight : 'tags this -> string) =
      fun (x3802 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x3802) "trimRight" [||])
    let (padStart :
      'tags this -> maxLength:float -> ?fillString:string -> unit -> string)
      =
      fun (x3808 : 'tags this) ->
        fun ~maxLength:(x3804 : float) ->
          fun ?fillString:(x3805 : string option) ->
            fun () ->
              Ojs.string_of_js
                (let x3810 = this_to_js Obj.magic x3808 in
                 Ojs.call (Ojs.get_prop_ascii x3810 "padStart") "apply"
                   [|x3810;((let x3806 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x3806 "push"
                                  [|(Ojs.float_to_js x3804)|]);
                             (match x3805 with
                              | Some x3807 ->
                                  ignore
                                    (Ojs.call x3806 "push"
                                       [|(Ojs.string_to_js x3807)|])
                              | None -> ());
                             x3806))|])
    let (padEnd :
      'tags this -> maxLength:float -> ?fillString:string -> unit -> string)
      =
      fun (x3815 : 'tags this) ->
        fun ~maxLength:(x3811 : float) ->
          fun ?fillString:(x3812 : string option) ->
            fun () ->
              Ojs.string_of_js
                (let x3817 = this_to_js Obj.magic x3815 in
                 Ojs.call (Ojs.get_prop_ascii x3817 "padEnd") "apply"
                   [|x3817;((let x3813 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x3813 "push"
                                  [|(Ojs.float_to_js x3811)|]);
                             (match x3812 with
                              | Some x3814 ->
                                  ignore
                                    (Ojs.call x3813 "push"
                                       [|(Ojs.string_to_js x3814)|])
                              | None -> ());
                             x3813))|])
    let (match_ :
      'tags this ->
        matcher:AnonymousInterface18.t -> RegExpMatchArray.t option)
      =
      fun (x3819 : 'tags this) ->
        fun ~matcher:(x3818 : AnonymousInterface18.t) ->
          Ojs.option_of_js RegExpMatchArray.t_of_js
            (Ojs.call (this_to_js Obj.magic x3819) "match"
               [|(AnonymousInterface18.t_to_js x3818)|])
    let (replace :
      'tags this ->
        searchValue:AnonymousInterface19.t -> replaceValue:string -> string)
      =
      fun (x3824 : 'tags this) ->
        fun ~searchValue:(x3822 : AnonymousInterface19.t) ->
          fun ~replaceValue:(x3823 : string) ->
            Ojs.string_of_js
              (Ojs.call (this_to_js Obj.magic x3824) "replace"
                 [|(AnonymousInterface19.t_to_js x3822);(Ojs.string_to_js
                                                           x3823)|])
    let (replace' :
      'tags this ->
        searchValue:AnonymousInterface20.t ->
          replacer:(substring:string -> args:any list -> string) -> string)
      =
      fun (x3830 : 'tags this) ->
        fun ~searchValue:(x3826 : AnonymousInterface20.t) ->
          fun ~replacer:(x3827 : substring:string -> args:any list -> string)
            ->
            Ojs.string_of_js
              (Ojs.call (this_to_js Obj.magic x3830) "replace"
                 [|(AnonymousInterface20.t_to_js x3826);(Ojs.fun_to_js_args
                                                           (fun (x3828 : _)
                                                              ->
                                                              Ojs.string_to_js
                                                                (x3827
                                                                   ~substring:(
                                                                   Ojs.string_of_js
                                                                    (Ojs.array_get
                                                                    x3828 0))
                                                                   ~args:(
                                                                   Ojs.list_of_js_from
                                                                    any_of_js
                                                                    x3828 1))))|])
    let (search : 'tags this -> searcher:AnonymousInterface21.t -> float) =
      fun (x3833 : 'tags this) ->
        fun ~searcher:(x3832 : AnonymousInterface21.t) ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x3833) "search"
               [|(AnonymousInterface21.t_to_js x3832)|])
    let (split :
      'tags this ->
        splitter:AnonymousInterface22.t ->
          ?limit:float -> unit -> string list)
      =
      fun (x3839 : 'tags this) ->
        fun ~splitter:(x3835 : AnonymousInterface22.t) ->
          fun ?limit:(x3836 : float option) ->
            fun () ->
              Ojs.list_of_js Ojs.string_of_js
                (let x3841 = this_to_js Obj.magic x3839 in
                 Ojs.call (Ojs.get_prop_ascii x3841 "split") "apply"
                   [|x3841;((let x3837 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x3837 "push"
                                  [|(AnonymousInterface22.t_to_js x3835)|]);
                             (match x3836 with
                              | Some x3838 ->
                                  ignore
                                    (Ojs.call x3837 "push"
                                       [|(Ojs.float_to_js x3838)|])
                              | None -> ());
                             x3837))|])
    let (codePointAt : 'tags this -> pos:float -> float option) =
      fun (x3844 : 'tags this) ->
        fun ~pos:(x3843 : float) ->
          Ojs.option_of_js Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x3844) "codePointAt"
               [|(Ojs.float_to_js x3843)|])
    let (includes :
      'tags this -> searchString:string -> ?position:float -> unit -> bool) =
      fun (x3851 : 'tags this) ->
        fun ~searchString:(x3847 : string) ->
          fun ?position:(x3848 : float option) ->
            fun () ->
              Ojs.bool_of_js
                (let x3853 = this_to_js Obj.magic x3851 in
                 Ojs.call (Ojs.get_prop_ascii x3853 "includes") "apply"
                   [|x3853;((let x3849 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x3849 "push"
                                  [|(Ojs.string_to_js x3847)|]);
                             (match x3848 with
                              | Some x3850 ->
                                  ignore
                                    (Ojs.call x3849 "push"
                                       [|(Ojs.float_to_js x3850)|])
                              | None -> ());
                             x3849))|])
    let (endsWith :
      'tags this -> searchString:string -> ?endPosition:float -> unit -> bool)
      =
      fun (x3858 : 'tags this) ->
        fun ~searchString:(x3854 : string) ->
          fun ?endPosition:(x3855 : float option) ->
            fun () ->
              Ojs.bool_of_js
                (let x3860 = this_to_js Obj.magic x3858 in
                 Ojs.call (Ojs.get_prop_ascii x3860 "endsWith") "apply"
                   [|x3860;((let x3856 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x3856 "push"
                                  [|(Ojs.string_to_js x3854)|]);
                             (match x3855 with
                              | Some x3857 ->
                                  ignore
                                    (Ojs.call x3856 "push"
                                       [|(Ojs.float_to_js x3857)|])
                              | None -> ());
                             x3856))|])
    let (normalize :
      'tags this ->
        form:[ `U1 of [ `L_s11_NFC ]  | `U2 of [ `L_s12_NFD ] 
             | `U3 of [ `L_s13_NFKC ]  | `U4 of [ `L_s14_NFKD ] ]
          -> string)
      =
      fun (x3866 : 'tags this) ->
        fun
          ~form:(x3861 :
                  [ `U1 of [ `L_s11_NFC ]  | `U2 of [ `L_s12_NFD ] 
                  | `U3 of [ `L_s13_NFKC ]  | `U4 of [ `L_s14_NFKD ] ])
          ->
          Ojs.string_of_js
            (Ojs.call (this_to_js Obj.magic x3866) "normalize"
               [|((match x3861 with
                   | `U1 x3862 ->
                       (match x3862 with
                        | `L_s11_NFC -> Ojs.string_to_js "NFC")
                   | `U2 x3863 ->
                       (match x3863 with
                        | `L_s12_NFD -> Ojs.string_to_js "NFD")
                   | `U3 x3864 ->
                       (match x3864 with
                        | `L_s13_NFKC -> Ojs.string_to_js "NFKC")
                   | `U4 x3865 ->
                       (match x3865 with
                        | `L_s14_NFKD -> Ojs.string_to_js "NFKD")))|])
    let (normalize' : 'tags this -> ?form:string -> unit -> string) =
      fun (x3871 : 'tags this) ->
        fun ?form:(x3868 : string option) ->
          fun () ->
            Ojs.string_of_js
              (let x3873 = this_to_js Obj.magic x3871 in
               Ojs.call (Ojs.get_prop_ascii x3873 "normalize") "apply"
                 [|x3873;((let x3869 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x3868 with
                            | Some x3870 ->
                                ignore
                                  (Ojs.call x3869 "push"
                                     [|(Ojs.string_to_js x3870)|])
                            | None -> ());
                           x3869))|])
    let (repeat : 'tags this -> count:float -> string) =
      fun (x3875 : 'tags this) ->
        fun ~count:(x3874 : float) ->
          Ojs.string_of_js
            (Ojs.call (this_to_js Obj.magic x3875) "repeat"
               [|(Ojs.float_to_js x3874)|])
    let (startsWith :
      'tags this -> searchString:string -> ?position:float -> unit -> bool) =
      fun (x3881 : 'tags this) ->
        fun ~searchString:(x3877 : string) ->
          fun ?position:(x3878 : float option) ->
            fun () ->
              Ojs.bool_of_js
                (let x3883 = this_to_js Obj.magic x3881 in
                 Ojs.call (Ojs.get_prop_ascii x3883 "startsWith") "apply"
                   [|x3883;((let x3879 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x3879 "push"
                                  [|(Ojs.string_to_js x3877)|]);
                             (match x3878 with
                              | Some x3880 ->
                                  ignore
                                    (Ojs.call x3879 "push"
                                       [|(Ojs.float_to_js x3880)|])
                              | None -> ());
                             x3879))|])
    let (anchor : 'tags this -> name:string -> string) =
      fun (x3885 : 'tags this) ->
        fun ~name:(x3884 : string) ->
          Ojs.string_of_js
            (Ojs.call (this_to_js Obj.magic x3885) "anchor"
               [|(Ojs.string_to_js x3884)|])
    let (big : 'tags this -> string) =
      fun (x3887 : 'tags this) ->
        Ojs.string_of_js (Ojs.call (this_to_js Obj.magic x3887) "big" [||])
    let (blink : 'tags this -> string) =
      fun (x3889 : 'tags this) ->
        Ojs.string_of_js (Ojs.call (this_to_js Obj.magic x3889) "blink" [||])
    let (bold : 'tags this -> string) =
      fun (x3891 : 'tags this) ->
        Ojs.string_of_js (Ojs.call (this_to_js Obj.magic x3891) "bold" [||])
    let (fixed : 'tags this -> string) =
      fun (x3893 : 'tags this) ->
        Ojs.string_of_js (Ojs.call (this_to_js Obj.magic x3893) "fixed" [||])
    let (fontcolor : 'tags this -> color:string -> string) =
      fun (x3896 : 'tags this) ->
        fun ~color:(x3895 : string) ->
          Ojs.string_of_js
            (Ojs.call (this_to_js Obj.magic x3896) "fontcolor"
               [|(Ojs.string_to_js x3895)|])
    let (fontsize : 'tags this -> size:float -> string) =
      fun (x3899 : 'tags this) ->
        fun ~size:(x3898 : float) ->
          Ojs.string_of_js
            (Ojs.call (this_to_js Obj.magic x3899) "fontsize"
               [|(Ojs.float_to_js x3898)|])
    let (fontsize' : 'tags this -> size:string -> string) =
      fun (x3902 : 'tags this) ->
        fun ~size:(x3901 : string) ->
          Ojs.string_of_js
            (Ojs.call (this_to_js Obj.magic x3902) "fontsize"
               [|(Ojs.string_to_js x3901)|])
    let (italics : 'tags this -> string) =
      fun (x3904 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x3904) "italics" [||])
    let (link : 'tags this -> url:string -> string) =
      fun (x3907 : 'tags this) ->
        fun ~url:(x3906 : string) ->
          Ojs.string_of_js
            (Ojs.call (this_to_js Obj.magic x3907) "link"
               [|(Ojs.string_to_js x3906)|])
    let (small : 'tags this -> string) =
      fun (x3909 : 'tags this) ->
        Ojs.string_of_js (Ojs.call (this_to_js Obj.magic x3909) "small" [||])
    let (strike : 'tags this -> string) =
      fun (x3911 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x3911) "strike" [||])
    let (sub : 'tags this -> string) =
      fun (x3913 : 'tags this) ->
        Ojs.string_of_js (Ojs.call (this_to_js Obj.magic x3913) "sub" [||])
    let (sup : 'tags this -> string) =
      fun (x3915 : 'tags this) ->
        Ojs.string_of_js (Ojs.call (this_to_js Obj.magic x3915) "sup" [||])
    let (localeCompare :
      'tags this ->
        that:string ->
          ?locales:[ `U1 of string  | `U2 of string list ] ->
            ?options:Intl.CollatorOptions.t -> unit -> float)
      =
      fun (x3926 : 'tags this) ->
        fun ~that:(x3917 : string) ->
          fun
            ?locales:(x3918 : [ `U1 of string  | `U2 of string list ] option)
            ->
            fun ?options:(x3919 : Intl.CollatorOptions.t option) ->
              fun () ->
                Ojs.float_of_js
                  (let x3928 = this_to_js Obj.magic x3926 in
                   Ojs.call (Ojs.get_prop_ascii x3928 "localeCompare")
                     "apply"
                     [|x3928;((let x3920 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x3920 "push"
                                    [|(Ojs.string_to_js x3917)|]);
                               (match x3918 with
                                | Some x3922 ->
                                    ignore
                                      (Ojs.call x3920 "push"
                                         [|((match x3922 with
                                             | `U1 x3923 ->
                                                 Ojs.string_to_js x3923
                                             | `U2 x3924 ->
                                                 Ojs.list_to_js
                                                   Ojs.string_to_js x3924))|])
                                | None -> ());
                               (match x3919 with
                                | Some x3921 ->
                                    ignore
                                      (Ojs.call x3920 "push"
                                         [|(Intl.CollatorOptions.t_to_js
                                              x3921)|])
                                | None -> ());
                               x3920))|])
    let (toString : 'tags this -> string) =
      fun (x3929 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x3929) "toString" [||])
    let (charAt : 'tags this -> pos:float -> string) =
      fun (x3932 : 'tags this) ->
        fun ~pos:(x3931 : float) ->
          Ojs.string_of_js
            (Ojs.call (this_to_js Obj.magic x3932) "charAt"
               [|(Ojs.float_to_js x3931)|])
    let (charCodeAt : 'tags this -> index:float -> float) =
      fun (x3935 : 'tags this) ->
        fun ~index:(x3934 : float) ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x3935) "charCodeAt"
               [|(Ojs.float_to_js x3934)|])
    let (concat : 'tags this -> strings:string list -> string) =
      fun (x3940 : 'tags this) ->
        fun ~strings:(x3937 : string list) ->
          Ojs.string_of_js
            (let x3942 = this_to_js Obj.magic x3940 in
             Ojs.call (Ojs.get_prop_ascii x3942 "concat") "apply"
               [|x3942;((let x3938 =
                           Ojs.new_obj
                             (Ojs.get_prop_ascii Ojs.global "Array") 
                             [||] in
                         List.iter
                           (fun (x3939 : string) ->
                              ignore
                                (Ojs.call x3938 "push"
                                   [|(Ojs.string_to_js x3939)|])) x3937;
                         x3938))|])
    let (indexOf :
      'tags this -> searchString:string -> ?position:float -> unit -> float)
      =
      fun (x3947 : 'tags this) ->
        fun ~searchString:(x3943 : string) ->
          fun ?position:(x3944 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x3949 = this_to_js Obj.magic x3947 in
                 Ojs.call (Ojs.get_prop_ascii x3949 "indexOf") "apply"
                   [|x3949;((let x3945 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x3945 "push"
                                  [|(Ojs.string_to_js x3943)|]);
                             (match x3944 with
                              | Some x3946 ->
                                  ignore
                                    (Ojs.call x3945 "push"
                                       [|(Ojs.float_to_js x3946)|])
                              | None -> ());
                             x3945))|])
    let (lastIndexOf :
      'tags this -> searchString:string -> ?position:float -> unit -> float)
      =
      fun (x3954 : 'tags this) ->
        fun ~searchString:(x3950 : string) ->
          fun ?position:(x3951 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x3956 = this_to_js Obj.magic x3954 in
                 Ojs.call (Ojs.get_prop_ascii x3956 "lastIndexOf") "apply"
                   [|x3956;((let x3952 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x3952 "push"
                                  [|(Ojs.string_to_js x3950)|]);
                             (match x3951 with
                              | Some x3953 ->
                                  ignore
                                    (Ojs.call x3952 "push"
                                       [|(Ojs.float_to_js x3953)|])
                              | None -> ());
                             x3952))|])
    let (localeCompare' : 'tags this -> that:string -> float) =
      fun (x3958 : 'tags this) ->
        fun ~that:(x3957 : string) ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x3958) "localeCompare"
               [|(Ojs.string_to_js x3957)|])
    let (match_' :
      'tags this ->
        regexp:[ `U1 of string  | `U2 of RegExp.t ] ->
          RegExpMatchArray.t option)
      =
      fun (x3963 : 'tags this) ->
        fun ~regexp:(x3960 : [ `U1 of string  | `U2 of RegExp.t ]) ->
          Ojs.option_of_js RegExpMatchArray.t_of_js
            (Ojs.call (this_to_js Obj.magic x3963) "match"
               [|((match x3960 with
                   | `U1 x3961 -> Ojs.string_to_js x3961
                   | `U2 x3962 -> RegExp.t_to_js x3962))|])
    let (replace'' :
      'tags this ->
        searchValue:[ `U1 of string  | `U2 of RegExp.t ] ->
          replaceValue:string -> string)
      =
      fun (x3970 : 'tags this) ->
        fun ~searchValue:(x3966 : [ `U1 of string  | `U2 of RegExp.t ]) ->
          fun ~replaceValue:(x3969 : string) ->
            Ojs.string_of_js
              (Ojs.call (this_to_js Obj.magic x3970) "replace"
                 [|((match x3966 with
                     | `U1 x3967 -> Ojs.string_to_js x3967
                     | `U2 x3968 -> RegExp.t_to_js x3968));(Ojs.string_to_js
                                                              x3969)|])
    let (replace''' :
      'tags this ->
        searchValue:[ `U1 of string  | `U2 of RegExp.t ] ->
          replacer:(substring:string -> args:any list -> string) -> string)
      =
      fun (x3978 : 'tags this) ->
        fun ~searchValue:(x3972 : [ `U1 of string  | `U2 of RegExp.t ]) ->
          fun ~replacer:(x3975 : substring:string -> args:any list -> string)
            ->
            Ojs.string_of_js
              (Ojs.call (this_to_js Obj.magic x3978) "replace"
                 [|((match x3972 with
                     | `U1 x3973 -> Ojs.string_to_js x3973
                     | `U2 x3974 -> RegExp.t_to_js x3974));(Ojs.fun_to_js_args
                                                              (fun
                                                                 (x3976 : _)
                                                                 ->
                                                                 Ojs.string_to_js
                                                                   (x3975
                                                                    ~substring:(
                                                                    Ojs.string_of_js
                                                                    (Ojs.array_get
                                                                    x3976 0))
                                                                    ~args:(
                                                                    Ojs.list_of_js_from
                                                                    any_of_js
                                                                    x3976 1))))|])
    let (search' :
      'tags this -> regexp:[ `U1 of string  | `U2 of RegExp.t ] -> float) =
      fun (x3983 : 'tags this) ->
        fun ~regexp:(x3980 : [ `U1 of string  | `U2 of RegExp.t ]) ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x3983) "search"
               [|((match x3980 with
                   | `U1 x3981 -> Ojs.string_to_js x3981
                   | `U2 x3982 -> RegExp.t_to_js x3982))|])
    let (slice : 'tags this -> ?start:float -> ?end_:float -> unit -> string)
      =
      fun (x3990 : 'tags this) ->
        fun ?start:(x3985 : float option) ->
          fun ?end_:(x3986 : float option) ->
            fun () ->
              Ojs.string_of_js
                (let x3992 = this_to_js Obj.magic x3990 in
                 Ojs.call (Ojs.get_prop_ascii x3992 "slice") "apply"
                   [|x3992;((let x3987 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x3985 with
                              | Some x3989 ->
                                  ignore
                                    (Ojs.call x3987 "push"
                                       [|(Ojs.float_to_js x3989)|])
                              | None -> ());
                             (match x3986 with
                              | Some x3988 ->
                                  ignore
                                    (Ojs.call x3987 "push"
                                       [|(Ojs.float_to_js x3988)|])
                              | None -> ());
                             x3987))|])
    let (split' :
      'tags this ->
        separator:[ `U1 of string  | `U2 of RegExp.t ] ->
          ?limit:float -> unit -> string list)
      =
      fun (x3999 : 'tags this) ->
        fun ~separator:(x3993 : [ `U1 of string  | `U2 of RegExp.t ]) ->
          fun ?limit:(x3994 : float option) ->
            fun () ->
              Ojs.list_of_js Ojs.string_of_js
                (let x4001 = this_to_js Obj.magic x3999 in
                 Ojs.call (Ojs.get_prop_ascii x4001 "split") "apply"
                   [|x4001;((let x3995 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x3995 "push"
                                  [|((match x3993 with
                                      | `U1 x3997 -> Ojs.string_to_js x3997
                                      | `U2 x3998 -> RegExp.t_to_js x3998))|]);
                             (match x3994 with
                              | Some x3996 ->
                                  ignore
                                    (Ojs.call x3995 "push"
                                       [|(Ojs.float_to_js x3996)|])
                              | None -> ());
                             x3995))|])
    let (substring :
      'tags this -> start:float -> ?end_:float -> unit -> string) =
      fun (x4007 : 'tags this) ->
        fun ~start:(x4003 : float) ->
          fun ?end_:(x4004 : float option) ->
            fun () ->
              Ojs.string_of_js
                (let x4009 = this_to_js Obj.magic x4007 in
                 Ojs.call (Ojs.get_prop_ascii x4009 "substring") "apply"
                   [|x4009;((let x4005 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x4005 "push"
                                  [|(Ojs.float_to_js x4003)|]);
                             (match x4004 with
                              | Some x4006 ->
                                  ignore
                                    (Ojs.call x4005 "push"
                                       [|(Ojs.float_to_js x4006)|])
                              | None -> ());
                             x4005))|])
    let (toLowerCase : 'tags this -> string) =
      fun (x4010 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x4010) "toLowerCase" [||])
    let (toLocaleLowerCase :
      'tags this ->
        ?locales:[ `U1 of string  | `U2 of string list ] -> unit -> string)
      =
      fun (x4018 : 'tags this) ->
        fun ?locales:(x4012 : [ `U1 of string  | `U2 of string list ] option)
          ->
          fun () ->
            Ojs.string_of_js
              (let x4020 = this_to_js Obj.magic x4018 in
               Ojs.call (Ojs.get_prop_ascii x4020 "toLocaleLowerCase")
                 "apply"
                 [|x4020;((let x4013 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x4012 with
                            | Some x4014 ->
                                ignore
                                  (Ojs.call x4013 "push"
                                     [|((match x4014 with
                                         | `U1 x4015 ->
                                             Ojs.string_to_js x4015
                                         | `U2 x4016 ->
                                             Ojs.list_to_js Ojs.string_to_js
                                               x4016))|])
                            | None -> ());
                           x4013))|])
    let (toUpperCase : 'tags this -> string) =
      fun (x4021 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x4021) "toUpperCase" [||])
    let (toLocaleUpperCase :
      'tags this ->
        ?locales:[ `U1 of string  | `U2 of string list ] -> unit -> string)
      =
      fun (x4029 : 'tags this) ->
        fun ?locales:(x4023 : [ `U1 of string  | `U2 of string list ] option)
          ->
          fun () ->
            Ojs.string_of_js
              (let x4031 = this_to_js Obj.magic x4029 in
               Ojs.call (Ojs.get_prop_ascii x4031 "toLocaleUpperCase")
                 "apply"
                 [|x4031;((let x4024 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x4023 with
                            | Some x4025 ->
                                ignore
                                  (Ojs.call x4024 "push"
                                     [|((match x4025 with
                                         | `U1 x4026 ->
                                             Ojs.string_to_js x4026
                                         | `U2 x4027 ->
                                             Ojs.list_to_js Ojs.string_to_js
                                               x4027))|])
                            | None -> ());
                           x4024))|])
    let (trim : 'tags this -> string) =
      fun (x4032 : 'tags this) ->
        Ojs.string_of_js (Ojs.call (this_to_js Obj.magic x4032) "trim" [||])
    let (get_length : 'tags this -> float) =
      fun (x4034 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x4034) "length")
    let (substr :
      'tags this -> from:float -> ?length:float -> unit -> string) =
      fun (x4040 : 'tags this) ->
        fun ~from:(x4036 : float) ->
          fun ?length:(x4037 : float option) ->
            fun () ->
              Ojs.string_of_js
                (let x4042 = this_to_js Obj.magic x4040 in
                 Ojs.call (Ojs.get_prop_ascii x4042 "substr") "apply"
                   [|x4042;((let x4038 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x4038 "push"
                                  [|(Ojs.float_to_js x4036)|]);
                             (match x4037 with
                              | Some x4039 ->
                                  ignore
                                    (Ojs.call x4038 "push"
                                       [|(Ojs.float_to_js x4039)|])
                              | None -> ());
                             x4038))|])
    let (valueOf : 'tags this -> string) =
      fun (x4043 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x4043) "valueOf" [||])
    let (get : 'tags this -> float -> string) =
      fun (x4045 : 'tags this) ->
        fun (x4047 : float) ->
          Ojs.string_of_js
            (Ojs.get_prop (this_to_js Obj.magic x4045)
               (Ojs.float_to_js x4047))
    let (fromCodePoint : float list -> string) =
      fun (x4048 : float list) ->
        Ojs.string_of_js
          (let x4051 = Ojs.get_prop_ascii Ojs.global "String" in
           Ojs.call (Ojs.get_prop_ascii x4051 "fromCodePoint") "apply"
             [|x4051;((let x4049 =
                         Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                           [||] in
                       List.iter
                         (fun (x4050 : float) ->
                            ignore
                              (Ojs.call x4049 "push"
                                 [|(Ojs.float_to_js x4050)|])) x4048;
                       x4049))|])
    let (raw :
      template:AnonymousInterface6.t -> substitutions:any list -> string) =
      fun ~template:(x4052 : AnonymousInterface6.t) ->
        fun ~substitutions:(x4053 : any list) ->
          Ojs.string_of_js
            (let x4056 = Ojs.get_prop_ascii Ojs.global "String" in
             Ojs.call (Ojs.get_prop_ascii x4056 "raw") "apply"
               [|x4056;((let x4054 =
                           Ojs.new_obj
                             (Ojs.get_prop_ascii Ojs.global "Array") 
                             [||] in
                         ignore
                           (Ojs.call x4054 "push"
                              [|(AnonymousInterface6.t_to_js x4052)|]);
                         List.iter
                           (fun (x4055 : any) ->
                              ignore
                                (Ojs.call x4054 "push" [|(any_to_js x4055)|]))
                           x4053;
                         x4054))|])
    let (create : ?value:any -> unit -> t) =
      fun ?value:(x4057 : any option) ->
        fun () ->
          t_of_js
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "String")
               (let x4058 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x4057 with
                 | Some x4059 ->
                     ignore (Ojs.call x4058 "push" [|(any_to_js x4059)|])
                 | None -> ());
                x4058))
    let (invoke : ?value:any -> unit -> string) =
      fun ?value:(x4060 : any option) ->
        fun () ->
          Ojs.string_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "String") "apply"
               [|Ojs.null;((let x4061 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x4060 with
                             | Some x4062 ->
                                 ignore
                                   (Ojs.call x4061 "push"
                                      [|(any_to_js x4062)|])
                             | None -> ());
                            x4061))|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "String")
             "prototype")
    let (fromCharCode : float list -> string) =
      fun (x4063 : float list) ->
        Ojs.string_of_js
          (let x4066 = Ojs.get_prop_ascii Ojs.global "String" in
           Ojs.call (Ojs.get_prop_ascii x4066 "fromCharCode") "apply"
             [|x4066;((let x4064 =
                         Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                           [||] in
                       List.iter
                         (fun (x4065 : float) ->
                            ignore
                              (Ojs.call x4064 "push"
                                 [|(Ojs.float_to_js x4065)|])) x4063;
                       x4064))|])
    let cast_from = Obj.magic
    let (of_ml : string -> t) =
      fun (x4067 : string) -> t_of_js (Ojs.string_to_js x4067)
    let (to_ml : t -> string) =
      fun (x4068 : t) ->
        Ojs.string_of_js (Ojs.call (t_to_js x4068) "valueOf" [||])
  end
module Set =
  struct
    type 'T t = [ `Set of 'T  | 'T IterableIterator.tags_1] intf
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun _T -> Obj.magic
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun _T -> Obj.magic
    type 'T t_1 = 'T t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 =
      fun (type __T) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x4071 : Ojs.t) -> t_of_js __T_of_js x4071
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t =
      fun (type __T) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x4069 : __T t) -> t_to_js __T_to_js x4069
    type 'T tags = [ `Set of 'T  | 'T IterableIterator.tags_1]
    type 'T tags_1 = 'T tags
    type ('tags, 'T) this = 'tags intf constraint 'tags = [> `Set of 'T ]
    let rec this_of_js :
      'tags 'T .
        (Ojs.t -> 'tags) -> (Ojs.t -> 'T) -> Ojs.t -> ('tags, 'T) this
      =
      fun (type __tags) ->
        fun (type __T) ->
          fun (__tags_of_js : Ojs.t -> __tags) ->
            fun (__T_of_js : Ojs.t -> __T) ->
              fun (x4075 : Ojs.t) -> intf_of_js __tags_of_js x4075
    and this_to_js :
      'tags 'T .
        ('tags -> Ojs.t) -> ('T -> Ojs.t) -> ('tags, 'T) this -> Ojs.t
      =
      fun (type __tags) ->
        fun (type __T) ->
          fun (__tags_to_js : __tags -> Ojs.t) ->
            fun (__T_to_js : __T -> Ojs.t) ->
              fun (x4073 : __tags intf) -> intf_to_js __tags_to_js x4073
    let (entries : ('tags, 'T) this -> ('T * 'T) IterableIterator.t) =
      fun (x4077 : ('tags, 'T) this) ->
        IterableIterator.t_of_js
          (fun (x4080 : Ojs.t) ->
             let x4081 = x4080 in
             ((Obj.magic (Ojs.array_get x4081 0)),
               (Obj.magic (Ojs.array_get x4081 1))))
          (Ojs.call (this_to_js Obj.magic Obj.magic x4077) "entries" [||])
    let (keys : ('tags, 'T) this -> 'T IterableIterator.t) =
      fun (x4082 : ('tags, 'T) this) ->
        IterableIterator.t_of_js Obj.magic
          (Ojs.call (this_to_js Obj.magic Obj.magic x4082) "keys" [||])
    let (values : ('tags, 'T) this -> 'T IterableIterator.t) =
      fun (x4086 : ('tags, 'T) this) ->
        IterableIterator.t_of_js Obj.magic
          (Ojs.call (this_to_js Obj.magic Obj.magic x4086) "values" [||])
    let (add : ('tags, 'T) this -> value:'T -> ('tags, 'T) this) =
      fun (x4091 : ('tags, 'T) this) ->
        fun ~value:(x4090 : 'T) ->
          this_of_js Obj.magic Obj.magic
            (Ojs.call (this_to_js Obj.magic Obj.magic x4091) "add"
               [|(Obj.magic x4090)|])
    let (clear : ('tags, 'T) this -> unit) =
      fun (x4096 : ('tags, 'T) this) ->
        ignore (Ojs.call (this_to_js Obj.magic Obj.magic x4096) "clear" [||])
    let (delete : ('tags, 'T) this -> value:'T -> bool) =
      fun (x4100 : ('tags, 'T) this) ->
        fun ~value:(x4099 : 'T) ->
          Ojs.bool_of_js
            (Ojs.call (this_to_js Obj.magic Obj.magic x4100) "delete"
               [|(Obj.magic x4099)|])
    let (forEach :
      ('tags, 'T) this ->
        callbackfn:(value:'T -> value2:'T -> set_:'T t -> unit) ->
          ?thisArg:any -> unit -> unit)
      =
      fun (x4111 : ('tags, 'T) this) ->
        fun ~callbackfn:(x4103 : value:'T -> value2:'T -> set_:'T t -> unit)
          ->
          fun ?thisArg:(x4104 : any option) ->
            fun () ->
              ignore
                (let x4114 = this_to_js Obj.magic Obj.magic x4111 in
                 Ojs.call (Ojs.get_prop_ascii x4114 "forEach") "apply"
                   [|x4114;((let x4105 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x4105 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x4107 : Ojs.t) ->
                                          fun (x4108 : Ojs.t) ->
                                            fun (x4109 : Ojs.t) ->
                                              x4103 ~value:(Obj.magic x4107)
                                                ~value2:(Obj.magic x4108)
                                                ~set_:(t_of_js Obj.magic
                                                         x4109)))|]);
                             (match x4104 with
                              | Some x4106 ->
                                  ignore
                                    (Ojs.call x4105 "push"
                                       [|(any_to_js x4106)|])
                              | None -> ());
                             x4105))|])
    let (has : ('tags, 'T) this -> value:'T -> bool) =
      fun (x4116 : ('tags, 'T) this) ->
        fun ~value:(x4115 : 'T) ->
          Ojs.bool_of_js
            (Ojs.call (this_to_js Obj.magic Obj.magic x4116) "has"
               [|(Obj.magic x4115)|])
    let (get_size : ('tags, 'T) this -> float) =
      fun (x4119 : ('tags, 'T) this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic Obj.magic x4119) "size")
    let (create : ?iterable:'T Iterable.t option -> unit -> 'T t) =
      fun ?iterable:(x4122 : 'T Iterable.t option option) ->
        fun () ->
          t_of_js Obj.magic
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "Set")
               (let x4123 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x4122 with
                 | Some x4124 ->
                     ignore
                       (Ojs.call x4123 "push"
                          [|(Ojs.option_to_js
                               (fun (x4125 : 'T Iterable.t) ->
                                  Iterable.t_to_js Obj.magic x4125) x4124)|])
                 | None -> ());
                x4123))
    let (create' : ?values:'T list option -> unit -> 'T t) =
      fun ?values:(x4128 : 'T list option option) ->
        fun () ->
          t_of_js Obj.magic
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "Set")
               (let x4129 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x4128 with
                 | Some x4130 ->
                     ignore
                       (Ojs.call x4129 "push"
                          [|(Ojs.option_to_js
                               (fun (x4131 : 'T list) ->
                                  Ojs.list_to_js Obj.magic x4131) x4130)|])
                 | None -> ());
                x4129))
    let (prototype : unit -> any t) =
      fun () ->
        t_of_js any_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Set")
             "prototype")
    let cast_from = Obj.magic
  end
module ReturnType =
  struct
    type 'T t = any
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun (type __T) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x4136 : Ojs.t) -> any_of_js x4136
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t =
      fun (type __T) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x4135 : any) -> any_to_js x4135
    type 'T t_1 = 'T t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 =
      fun (type __T) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x4139 : Ojs.t) -> t_of_js __T_of_js x4139
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t =
      fun (type __T) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x4137 : __T t) -> t_to_js __T_to_js x4137
  end
module Required =
  struct
    type 'T t = any
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun (type __T) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x4142 : Ojs.t) -> any_of_js x4142
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t =
      fun (type __T) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x4141 : any) -> any_to_js x4141
    type 'T t_1 = 'T t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 =
      fun (type __T) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x4145 : Ojs.t) -> t_of_js __T_of_js x4145
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t =
      fun (type __T) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x4143 : __T t) -> t_to_js __T_to_js x4143
  end
module PropertyKey =
  struct
    type t =
      [ `Number of float  | `String of string  | `Symbol of symbol ]
        Primitive.t
    let rec t_of_js : Ojs.t -> t =
      fun (x4152 : Ojs.t) ->
        Primitive.t_of_js
          (fun (x4153 : Ojs.t) ->
             let x4154 = x4153 in
             match Ojs.string_of_js (Ojs.get_prop_ascii x4154 "dummy") with
             | "Number" -> `Number (Ojs.float_of_js x4154)
             | "String" -> `String (Ojs.string_of_js x4154)
             | "Symbol" -> `Symbol (symbol_of_js x4154)
             | _ -> assert false) x4152
    and t_to_js : t -> Ojs.t =
      fun
        (x4147 :
          [ `Number of float  | `String of string  | `Symbol of symbol ]
            Primitive.t)
        ->
        Primitive.t_to_js
          (fun
             (x4148 :
               [ `Number of float  | `String of string  | `Symbol of symbol ])
             ->
             match x4148 with
             | `Number x4149 -> Ojs.float_to_js x4149
             | `String x4150 -> Ojs.string_to_js x4150
             | `Symbol x4151 -> symbol_to_js x4151) x4147
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x4156 : Ojs.t) -> t_of_js x4156
    and t_0_to_js : t_0 -> Ojs.t = fun (x4155 : t) -> t_to_js x4155
  end
module PropertyDescriptor =
  struct
    type t = [ `PropertyDescriptor ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x4158 : Ojs.t) -> t_of_js x4158
    and t_0_to_js : t_0 -> Ojs.t = fun (x4157 : t) -> t_to_js x4157
    type tags = [ `PropertyDescriptor ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `PropertyDescriptor ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x4161 : Ojs.t) -> intf_of_js __tags_of_js x4161
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x4159 : __tags intf) -> intf_to_js __tags_to_js x4159
    let (get_configurable : 'tags this -> bool option) =
      fun (x4163 : 'tags this) ->
        Ojs.option_of_js Ojs.bool_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x4163) "configurable")
    let (set_configurable : 'tags this -> bool -> unit) =
      fun (x4166 : 'tags this) ->
        fun (x4167 : bool) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x4166) "configurable"
            (Ojs.bool_to_js x4167)
    let (get_enumerable : 'tags this -> bool option) =
      fun (x4169 : 'tags this) ->
        Ojs.option_of_js Ojs.bool_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x4169) "enumerable")
    let (set_enumerable : 'tags this -> bool -> unit) =
      fun (x4172 : 'tags this) ->
        fun (x4173 : bool) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x4172) "enumerable"
            (Ojs.bool_to_js x4173)
    let (get_value : 'tags this -> any option) =
      fun (x4175 : 'tags this) ->
        Ojs.option_of_js any_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x4175) "value")
    let (set_value : 'tags this -> any -> unit) =
      fun (x4178 : 'tags this) ->
        fun (x4179 : any) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x4178) "value"
            (any_to_js x4179)
    let (get_writable : 'tags this -> bool option) =
      fun (x4181 : 'tags this) ->
        Ojs.option_of_js Ojs.bool_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x4181) "writable")
    let (set_writable : 'tags this -> bool -> unit) =
      fun (x4184 : 'tags this) ->
        fun (x4185 : bool) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x4184) "writable"
            (Ojs.bool_to_js x4185)
    let (get_ : 'tags this -> any) =
      fun (x4187 : 'tags this) ->
        any_of_js (Ojs.call (this_to_js Obj.magic x4187) "get" [||])
    let (set_ : 'tags this -> v:any -> unit) =
      fun (x4190 : 'tags this) ->
        fun ~v:(x4189 : any) ->
          ignore
            (Ojs.call (this_to_js Obj.magic x4190) "set"
               [|(any_to_js x4189)|])
    let cast_from = Obj.magic
  end
module Function =
  struct
    type t = [ `Function ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x4193 : Ojs.t) -> t_of_js x4193
    and t_0_to_js : t_0 -> Ojs.t = fun (x4192 : t) -> t_to_js x4192
    type tags = [ `Function ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `Function ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x4196 : Ojs.t) -> intf_of_js __tags_of_js x4196
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x4194 : __tags intf) -> intf_to_js __tags_to_js x4194
    let (get_name : 'tags this -> string) =
      fun (x4198 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x4198) "name")
    let (apply_ :
      'tags this -> this:t -> thisArg:any -> ?argArray:any -> unit -> any) =
      fun (x4205 : 'tags this) ->
        fun ~this:(x4200 : t) ->
          fun ~thisArg:(x4201 : any) ->
            fun ?argArray:(x4202 : any option) ->
              fun () ->
                any_of_js
                  (let x4207 = this_to_js Obj.magic x4205 in
                   Ojs.call (Ojs.get_prop_ascii x4207 "apply") "apply"
                     [|x4207;((let x4203 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x4203 "push" [|(t_to_js x4200)|]);
                               ignore
                                 (Ojs.call x4203 "push" [|(any_to_js x4201)|]);
                               (match x4202 with
                                | Some x4204 ->
                                    ignore
                                      (Ojs.call x4203 "push"
                                         [|(any_to_js x4204)|])
                                | None -> ());
                               x4203))|])
    let (call :
      'tags this -> this:t -> thisArg:any -> argArray:any list -> any) =
      fun (x4213 : 'tags this) ->
        fun ~this:(x4208 : t) ->
          fun ~thisArg:(x4209 : any) ->
            fun ~argArray:(x4210 : any list) ->
              any_of_js
                (let x4215 = this_to_js Obj.magic x4213 in
                 Ojs.call (Ojs.get_prop_ascii x4215 "call") "apply"
                   [|x4215;((let x4211 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x4211 "push" [|(t_to_js x4208)|]);
                             ignore
                               (Ojs.call x4211 "push" [|(any_to_js x4209)|]);
                             List.iter
                               (fun (x4212 : any) ->
                                  ignore
                                    (Ojs.call x4211 "push"
                                       [|(any_to_js x4212)|])) x4210;
                             x4211))|])
    let (bind :
      'tags this -> this:t -> thisArg:any -> argArray:any list -> any) =
      fun (x4221 : 'tags this) ->
        fun ~this:(x4216 : t) ->
          fun ~thisArg:(x4217 : any) ->
            fun ~argArray:(x4218 : any list) ->
              any_of_js
                (let x4223 = this_to_js Obj.magic x4221 in
                 Ojs.call (Ojs.get_prop_ascii x4223 "bind") "apply"
                   [|x4223;((let x4219 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x4219 "push" [|(t_to_js x4216)|]);
                             ignore
                               (Ojs.call x4219 "push" [|(any_to_js x4217)|]);
                             List.iter
                               (fun (x4220 : any) ->
                                  ignore
                                    (Ojs.call x4219 "push"
                                       [|(any_to_js x4220)|])) x4218;
                             x4219))|])
    let (toString : 'tags this -> string) =
      fun (x4224 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x4224) "toString" [||])
    let (get_prototype : 'tags this -> any) =
      fun (x4226 : 'tags this) ->
        any_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x4226) "prototype")
    let (set_prototype : 'tags this -> any -> unit) =
      fun (x4228 : 'tags this) ->
        fun (x4229 : any) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x4228) "prototype"
            (any_to_js x4229)
    let (get_length : 'tags this -> float) =
      fun (x4231 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x4231) "length")
    let (get_arguments : 'tags this -> any) =
      fun (x4233 : 'tags this) ->
        any_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x4233) "arguments")
    let (set_arguments : 'tags this -> any -> unit) =
      fun (x4235 : 'tags this) ->
        fun (x4236 : any) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x4235) "arguments"
            (any_to_js x4236)
    let (get_caller : 'tags this -> t) =
      fun (x4238 : 'tags this) ->
        t_of_js (Ojs.get_prop_ascii (this_to_js Obj.magic x4238) "caller")
    let (set_caller : 'tags this -> t -> unit) =
      fun (x4240 : 'tags this) ->
        fun (x4241 : t) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x4240) "caller"
            (t_to_js x4241)
    let (create : string list -> t) =
      fun (x4243 : string list) ->
        t_of_js
          (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "Function")
             (let x4244 =
                Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
              List.iter
                (fun (x4245 : string) ->
                   ignore
                     (Ojs.call x4244 "push" [|(Ojs.string_to_js x4245)|]))
                x4243;
              x4244))
    let (invoke : string list -> t) =
      fun (x4246 : string list) ->
        t_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Function") "apply"
             [|Ojs.null;((let x4247 =
                            Ojs.new_obj
                              (Ojs.get_prop_ascii Ojs.global "Array") 
                              [||] in
                          List.iter
                            (fun (x4248 : string) ->
                               ignore
                                 (Ojs.call x4247 "push"
                                    [|(Ojs.string_to_js x4248)|])) x4246;
                          x4247))|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Function")
             "prototype")
    let cast_from = Obj.magic
  end
module Reflect =
  struct
    let (apply_ :
      target:Function.t ->
        thisArgument:any -> argumentsList:any ArrayLike.t -> any)
      =
      fun ~target:(x4249 : Function.t) ->
        fun ~thisArgument:(x4250 : any) ->
          fun ~argumentsList:(x4251 : any ArrayLike.t) ->
            any_of_js
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "Reflect") "apply"
                 [|(Function.t_to_js x4249);(any_to_js x4250);(ArrayLike.t_to_js
                                                                 any_to_js
                                                                 x4251)|])
    let (construct :
      target:Function.t ->
        argumentsList:any ArrayLike.t -> ?newTarget:Function.t -> unit -> any)
      =
      fun ~target:(x4253 : Function.t) ->
        fun ~argumentsList:(x4254 : any ArrayLike.t) ->
          fun ?newTarget:(x4255 : Function.t option) ->
            fun () ->
              any_of_js
                (let x4259 = Ojs.get_prop_ascii Ojs.global "Reflect" in
                 Ojs.call (Ojs.get_prop_ascii x4259 "construct") "apply"
                   [|x4259;((let x4256 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x4256 "push"
                                  [|(Function.t_to_js x4253)|]);
                             ignore
                               (Ojs.call x4256 "push"
                                  [|(ArrayLike.t_to_js any_to_js x4254)|]);
                             (match x4255 with
                              | Some x4257 ->
                                  ignore
                                    (Ojs.call x4256 "push"
                                       [|(Function.t_to_js x4257)|])
                              | None -> ());
                             x4256))|])
    let (defineProperty :
      target:untyped_object ->
        propertyKey:PropertyKey.t -> attributes:PropertyDescriptor.t -> bool)
      =
      fun ~target:(x4260 : untyped_object) ->
        fun ~propertyKey:(x4261 : PropertyKey.t) ->
          fun ~attributes:(x4262 : PropertyDescriptor.t) ->
            Ojs.bool_of_js
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "Reflect")
                 "defineProperty"
                 [|(untyped_object_to_js x4260);(PropertyKey.t_to_js x4261);(
                   PropertyDescriptor.t_to_js x4262)|])
    let (deleteProperty :
      target:untyped_object -> propertyKey:PropertyKey.t -> bool) =
      fun ~target:(x4263 : untyped_object) ->
        fun ~propertyKey:(x4264 : PropertyKey.t) ->
          Ojs.bool_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "Reflect")
               "deleteProperty"
               [|(untyped_object_to_js x4263);(PropertyKey.t_to_js x4264)|])
    let (get_ :
      target:untyped_object ->
        propertyKey:PropertyKey.t -> ?receiver:any -> unit -> any)
      =
      fun ~target:(x4265 : untyped_object) ->
        fun ~propertyKey:(x4266 : PropertyKey.t) ->
          fun ?receiver:(x4267 : any option) ->
            fun () ->
              any_of_js
                (let x4270 = Ojs.get_prop_ascii Ojs.global "Reflect" in
                 Ojs.call (Ojs.get_prop_ascii x4270 "get") "apply"
                   [|x4270;((let x4268 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x4268 "push"
                                  [|(untyped_object_to_js x4265)|]);
                             ignore
                               (Ojs.call x4268 "push"
                                  [|(PropertyKey.t_to_js x4266)|]);
                             (match x4267 with
                              | Some x4269 ->
                                  ignore
                                    (Ojs.call x4268 "push"
                                       [|(any_to_js x4269)|])
                              | None -> ());
                             x4268))|])
    let (getOwnPropertyDescriptor :
      target:untyped_object ->
        propertyKey:PropertyKey.t -> PropertyDescriptor.t option)
      =
      fun ~target:(x4271 : untyped_object) ->
        fun ~propertyKey:(x4272 : PropertyKey.t) ->
          Ojs.option_of_js PropertyDescriptor.t_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "Reflect")
               "getOwnPropertyDescriptor"
               [|(untyped_object_to_js x4271);(PropertyKey.t_to_js x4272)|])
    let (getPrototypeOf : untyped_object -> untyped_object option) =
      fun (x4274 : untyped_object) ->
        Ojs.option_of_js untyped_object_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Reflect")
             "getPrototypeOf" [|(untyped_object_to_js x4274)|])
    let (has : target:untyped_object -> propertyKey:PropertyKey.t -> bool) =
      fun ~target:(x4276 : untyped_object) ->
        fun ~propertyKey:(x4277 : PropertyKey.t) ->
          Ojs.bool_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "Reflect") "has"
               [|(untyped_object_to_js x4276);(PropertyKey.t_to_js x4277)|])
    let (isExtensible : untyped_object -> bool) =
      fun (x4278 : untyped_object) ->
        Ojs.bool_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Reflect") "isExtensible"
             [|(untyped_object_to_js x4278)|])
    let (ownKeys :
      untyped_object ->
        [ `String of string  | `Symbol of symbol ] Primitive.t list)
      =
      fun (x4279 : untyped_object) ->
        Ojs.list_of_js
          (fun (x4280 : Ojs.t) ->
             Primitive.t_of_js
               (fun (x4281 : Ojs.t) ->
                  let x4282 = x4281 in
                  match Ojs.string_of_js (Ojs.get_prop_ascii x4282 "dummy")
                  with
                  | "String" -> `String (Ojs.string_of_js x4282)
                  | "Symbol" -> `Symbol (symbol_of_js x4282)
                  | _ -> assert false) x4280)
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Reflect") "ownKeys"
             [|(untyped_object_to_js x4279)|])
    let (preventExtensions : untyped_object -> bool) =
      fun (x4283 : untyped_object) ->
        Ojs.bool_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Reflect")
             "preventExtensions" [|(untyped_object_to_js x4283)|])
    let (set_ :
      target:untyped_object ->
        propertyKey:PropertyKey.t ->
          value:any -> ?receiver:any -> unit -> bool)
      =
      fun ~target:(x4284 : untyped_object) ->
        fun ~propertyKey:(x4285 : PropertyKey.t) ->
          fun ~value:(x4286 : any) ->
            fun ?receiver:(x4287 : any option) ->
              fun () ->
                Ojs.bool_of_js
                  (let x4290 = Ojs.get_prop_ascii Ojs.global "Reflect" in
                   Ojs.call (Ojs.get_prop_ascii x4290 "set") "apply"
                     [|x4290;((let x4288 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x4288 "push"
                                    [|(untyped_object_to_js x4284)|]);
                               ignore
                                 (Ojs.call x4288 "push"
                                    [|(PropertyKey.t_to_js x4285)|]);
                               ignore
                                 (Ojs.call x4288 "push" [|(any_to_js x4286)|]);
                               (match x4287 with
                                | Some x4289 ->
                                    ignore
                                      (Ojs.call x4288 "push"
                                         [|(any_to_js x4289)|])
                                | None -> ());
                               x4288))|])
    let (setPrototypeOf :
      target:untyped_object -> proto:untyped_object option -> bool) =
      fun ~target:(x4291 : untyped_object) ->
        fun ~proto:(x4292 : untyped_object option) ->
          Ojs.bool_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "Reflect")
               "setPrototypeOf"
               [|(untyped_object_to_js x4291);(Ojs.option_to_js
                                                 untyped_object_to_js x4292)|])
  end
module ReferenceError =
  struct
    type t = [ `Error  | `ReferenceError ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x4295 : Ojs.t) -> t_of_js x4295
    and t_0_to_js : t_0 -> Ojs.t = fun (x4294 : t) -> t_to_js x4294
    type tags = [ `Error  | `ReferenceError ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `ReferenceError ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x4298 : Ojs.t) -> intf_of_js __tags_of_js x4298
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x4296 : __tags intf) -> intf_to_js __tags_to_js x4296
    let (create : ?message:string -> ?options:ErrorOptions.t -> unit -> t) =
      fun ?message:(x4300 : string option) ->
        fun ?options:(x4301 : ErrorOptions.t option) ->
          fun () ->
            t_of_js
              (Ojs.new_obj_arr
                 (Ojs.get_prop_ascii Ojs.global "ReferenceError")
                 (let x4302 =
                    Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                  (match x4300 with
                   | Some x4304 ->
                       ignore
                         (Ojs.call x4302 "push" [|(Ojs.string_to_js x4304)|])
                   | None -> ());
                  (match x4301 with
                   | Some x4303 ->
                       ignore
                         (Ojs.call x4302 "push"
                            [|(ErrorOptions.t_to_js x4303)|])
                   | None -> ());
                  x4302))
    let (invoke : ?message:string -> ?options:ErrorOptions.t -> unit -> t) =
      fun ?message:(x4305 : string option) ->
        fun ?options:(x4306 : ErrorOptions.t option) ->
          fun () ->
            t_of_js
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "ReferenceError")
                 "apply"
                 [|Ojs.null;((let x4307 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              (match x4305 with
                               | Some x4309 ->
                                   ignore
                                     (Ojs.call x4307 "push"
                                        [|(Ojs.string_to_js x4309)|])
                               | None -> ());
                              (match x4306 with
                               | Some x4308 ->
                                   ignore
                                     (Ojs.call x4307 "push"
                                        [|(ErrorOptions.t_to_js x4308)|])
                               | None -> ());
                              x4307))|])
    let (create' : ?message:string -> unit -> t) =
      fun ?message:(x4310 : string option) ->
        fun () ->
          t_of_js
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "ReferenceError")
               (let x4311 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x4310 with
                 | Some x4312 ->
                     ignore
                       (Ojs.call x4311 "push" [|(Ojs.string_to_js x4312)|])
                 | None -> ());
                x4311))
    let (invoke' : ?message:string -> unit -> t) =
      fun ?message:(x4313 : string option) ->
        fun () ->
          t_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "ReferenceError")
               "apply"
               [|Ojs.null;((let x4314 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x4313 with
                             | Some x4315 ->
                                 ignore
                                   (Ojs.call x4314 "push"
                                      [|(Ojs.string_to_js x4315)|])
                             | None -> ());
                            x4314))|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "ReferenceError") "prototype")
    let cast_from = Obj.magic
  end
module Record =
  struct
    type ('K, 'T) t = any
    let rec t_of_js :
      'K 'T . (Ojs.t -> 'K) -> (Ojs.t -> 'T) -> Ojs.t -> ('K, 'T) t =
      fun (type __K) ->
        fun (type __T) ->
          fun (__K_of_js : Ojs.t -> __K) ->
            fun (__T_of_js : Ojs.t -> __T) ->
              fun (x4317 : Ojs.t) -> any_of_js x4317
    and t_to_js :
      'K 'T . ('K -> Ojs.t) -> ('T -> Ojs.t) -> ('K, 'T) t -> Ojs.t =
      fun (type __K) ->
        fun (type __T) ->
          fun (__K_to_js : __K -> Ojs.t) ->
            fun (__T_to_js : __T -> Ojs.t) ->
              fun (x4316 : any) -> any_to_js x4316
    type ('K, 'T) t_2 = ('K, 'T) t
    let rec t_2_of_js :
      'K 'T . (Ojs.t -> 'K) -> (Ojs.t -> 'T) -> Ojs.t -> ('K, 'T) t_2 =
      fun (type __K) ->
        fun (type __T) ->
          fun (__K_of_js : Ojs.t -> __K) ->
            fun (__T_of_js : Ojs.t -> __T) ->
              fun (x4321 : Ojs.t) -> t_of_js __K_of_js __T_of_js x4321
    and t_2_to_js :
      'K 'T . ('K -> Ojs.t) -> ('T -> Ojs.t) -> ('K, 'T) t_2 -> Ojs.t =
      fun (type __K) ->
        fun (type __T) ->
          fun (__K_to_js : __K -> Ojs.t) ->
            fun (__T_to_js : __T -> Ojs.t) ->
              fun (x4318 : (__K, __T) t) -> t_to_js __K_to_js __T_to_js x4318
  end
module ReadonlySet =
  struct
    type 'T t = [ `ReadonlySet of 'T  | 'T IterableIterator.tags_1] intf
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun _T -> Obj.magic
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun _T -> Obj.magic
    type 'T t_1 = 'T t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 =
      fun (type __T) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x4326 : Ojs.t) -> t_of_js __T_of_js x4326
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t =
      fun (type __T) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x4324 : __T t) -> t_to_js __T_to_js x4324
    type 'T tags = [ `ReadonlySet of 'T  | 'T IterableIterator.tags_1]
    type 'T tags_1 = 'T tags
    type ('tags, 'T) this =
      'tags intf constraint 'tags = [> `ReadonlySet of 'T ]
    let rec this_of_js :
      'tags 'T .
        (Ojs.t -> 'tags) -> (Ojs.t -> 'T) -> Ojs.t -> ('tags, 'T) this
      =
      fun (type __tags) ->
        fun (type __T) ->
          fun (__tags_of_js : Ojs.t -> __tags) ->
            fun (__T_of_js : Ojs.t -> __T) ->
              fun (x4330 : Ojs.t) -> intf_of_js __tags_of_js x4330
    and this_to_js :
      'tags 'T .
        ('tags -> Ojs.t) -> ('T -> Ojs.t) -> ('tags, 'T) this -> Ojs.t
      =
      fun (type __tags) ->
        fun (type __T) ->
          fun (__tags_to_js : __tags -> Ojs.t) ->
            fun (__T_to_js : __T -> Ojs.t) ->
              fun (x4328 : __tags intf) -> intf_to_js __tags_to_js x4328
    let (entries : ('tags, 'T) this -> ('T * 'T) IterableIterator.t) =
      fun (x4332 : ('tags, 'T) this) ->
        IterableIterator.t_of_js
          (fun (x4335 : Ojs.t) ->
             let x4336 = x4335 in
             ((Obj.magic (Ojs.array_get x4336 0)),
               (Obj.magic (Ojs.array_get x4336 1))))
          (Ojs.call (this_to_js Obj.magic Obj.magic x4332) "entries" [||])
    let (keys : ('tags, 'T) this -> 'T IterableIterator.t) =
      fun (x4337 : ('tags, 'T) this) ->
        IterableIterator.t_of_js Obj.magic
          (Ojs.call (this_to_js Obj.magic Obj.magic x4337) "keys" [||])
    let (values : ('tags, 'T) this -> 'T IterableIterator.t) =
      fun (x4341 : ('tags, 'T) this) ->
        IterableIterator.t_of_js Obj.magic
          (Ojs.call (this_to_js Obj.magic Obj.magic x4341) "values" [||])
    let (forEach :
      ('tags, 'T) this ->
        callbackfn:(value:'T -> value2:'T -> set_:'T t -> unit) ->
          ?thisArg:any -> unit -> unit)
      =
      fun (x4353 : ('tags, 'T) this) ->
        fun ~callbackfn:(x4345 : value:'T -> value2:'T -> set_:'T t -> unit)
          ->
          fun ?thisArg:(x4346 : any option) ->
            fun () ->
              ignore
                (let x4356 = this_to_js Obj.magic Obj.magic x4353 in
                 Ojs.call (Ojs.get_prop_ascii x4356 "forEach") "apply"
                   [|x4356;((let x4347 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x4347 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x4349 : Ojs.t) ->
                                          fun (x4350 : Ojs.t) ->
                                            fun (x4351 : Ojs.t) ->
                                              x4345 ~value:(Obj.magic x4349)
                                                ~value2:(Obj.magic x4350)
                                                ~set_:(t_of_js Obj.magic
                                                         x4351)))|]);
                             (match x4346 with
                              | Some x4348 ->
                                  ignore
                                    (Ojs.call x4347 "push"
                                       [|(any_to_js x4348)|])
                              | None -> ());
                             x4347))|])
    let (has : ('tags, 'T) this -> value:'T -> bool) =
      fun (x4358 : ('tags, 'T) this) ->
        fun ~value:(x4357 : 'T) ->
          Ojs.bool_of_js
            (Ojs.call (this_to_js Obj.magic Obj.magic x4358) "has"
               [|(Obj.magic x4357)|])
    let (get_size : ('tags, 'T) this -> float) =
      fun (x4361 : ('tags, 'T) this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic Obj.magic x4361) "size")
    let cast_from = Obj.magic
  end
module ReadonlyMap =
  struct
    type ('K, 'V) t =
      [ `ReadonlyMap of ('K * 'V)  | ('K * 'V) IterableIterator.tags_1] intf
    let rec t_of_js :
      'K 'V . (Ojs.t -> 'K) -> (Ojs.t -> 'V) -> Ojs.t -> ('K, 'V) t =
      fun _K -> fun _V -> Obj.magic
    and t_to_js :
      'K 'V . ('K -> Ojs.t) -> ('V -> Ojs.t) -> ('K, 'V) t -> Ojs.t =
      fun _K -> fun _V -> Obj.magic
    type ('K, 'V) t_2 = ('K, 'V) t
    let rec t_2_of_js :
      'K 'V . (Ojs.t -> 'K) -> (Ojs.t -> 'V) -> Ojs.t -> ('K, 'V) t_2 =
      fun (type __K) ->
        fun (type __V) ->
          fun (__K_of_js : Ojs.t -> __K) ->
            fun (__V_of_js : Ojs.t -> __V) ->
              fun (x4367 : Ojs.t) -> t_of_js __K_of_js __V_of_js x4367
    and t_2_to_js :
      'K 'V . ('K -> Ojs.t) -> ('V -> Ojs.t) -> ('K, 'V) t_2 -> Ojs.t =
      fun (type __K) ->
        fun (type __V) ->
          fun (__K_to_js : __K -> Ojs.t) ->
            fun (__V_to_js : __V -> Ojs.t) ->
              fun (x4364 : (__K, __V) t) -> t_to_js __K_to_js __V_to_js x4364
    type ('K, 'V) tags =
      [ `ReadonlyMap of ('K * 'V)  | ('K * 'V) IterableIterator.tags_1]
    type ('K, 'V) tags_2 = ('K, 'V) tags
    type ('tags, 'K, 'V) this =
      'tags intf constraint 'tags = [> `ReadonlyMap of ('K * 'V) ]
    let rec this_of_js :
      'tags 'K 'V .
        (Ojs.t -> 'tags) ->
          (Ojs.t -> 'K) -> (Ojs.t -> 'V) -> Ojs.t -> ('tags, 'K, 'V) this
      =
      fun (type __tags) ->
        fun (type __K) ->
          fun (type __V) ->
            fun (__tags_of_js : Ojs.t -> __tags) ->
              fun (__K_of_js : Ojs.t -> __K) ->
                fun (__V_of_js : Ojs.t -> __V) ->
                  fun (x4372 : Ojs.t) -> intf_of_js __tags_of_js x4372
    and this_to_js :
      'tags 'K 'V .
        ('tags -> Ojs.t) ->
          ('K -> Ojs.t) -> ('V -> Ojs.t) -> ('tags, 'K, 'V) this -> Ojs.t
      =
      fun (type __tags) ->
        fun (type __K) ->
          fun (type __V) ->
            fun (__tags_to_js : __tags -> Ojs.t) ->
              fun (__K_to_js : __K -> Ojs.t) ->
                fun (__V_to_js : __V -> Ojs.t) ->
                  fun (x4370 : __tags intf) -> intf_to_js __tags_to_js x4370
    let (entries : ('tags, 'K, 'V) this -> ('K * 'V) IterableIterator.t) =
      fun (x4374 : ('tags, 'K, 'V) this) ->
        IterableIterator.t_of_js
          (fun (x4378 : Ojs.t) ->
             let x4379 = x4378 in
             ((Obj.magic (Ojs.array_get x4379 0)),
               (Obj.magic (Ojs.array_get x4379 1))))
          (Ojs.call (this_to_js Obj.magic Obj.magic Obj.magic x4374)
             "entries" [||])
    let (keys : ('tags, 'K, 'V) this -> 'K IterableIterator.t) =
      fun (x4380 : ('tags, 'K, 'V) this) ->
        IterableIterator.t_of_js Obj.magic
          (Ojs.call (this_to_js Obj.magic Obj.magic Obj.magic x4380) "keys"
             [||])
    let (values : ('tags, 'K, 'V) this -> 'V IterableIterator.t) =
      fun (x4385 : ('tags, 'K, 'V) this) ->
        IterableIterator.t_of_js Obj.magic
          (Ojs.call (this_to_js Obj.magic Obj.magic Obj.magic x4385) "values"
             [||])
    let (forEach :
      ('tags, 'K, 'V) this ->
        callbackfn:(value:'V -> key:'K -> map:('K, 'V) t -> unit) ->
          ?thisArg:any -> unit -> unit)
      =
      fun (x4399 : ('tags, 'K, 'V) this) ->
        fun
          ~callbackfn:(x4390 : value:'V -> key:'K -> map:('K, 'V) t -> unit)
          ->
          fun ?thisArg:(x4391 : any option) ->
            fun () ->
              ignore
                (let x4403 = this_to_js Obj.magic Obj.magic Obj.magic x4399 in
                 Ojs.call (Ojs.get_prop_ascii x4403 "forEach") "apply"
                   [|x4403;((let x4392 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x4392 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x4394 : Ojs.t) ->
                                          fun (x4395 : Ojs.t) ->
                                            fun (x4396 : Ojs.t) ->
                                              x4390 ~value:(Obj.magic x4394)
                                                ~key:(Obj.magic x4395)
                                                ~map:(t_of_js Obj.magic
                                                        Obj.magic x4396)))|]);
                             (match x4391 with
                              | Some x4393 ->
                                  ignore
                                    (Ojs.call x4392 "push"
                                       [|(any_to_js x4393)|])
                              | None -> ());
                             x4392))|])
    let (get_ : ('tags, 'K, 'V) this -> key:'K -> 'V option) =
      fun (x4405 : ('tags, 'K, 'V) this) ->
        fun ~key:(x4404 : 'K) ->
          Ojs.option_of_js Obj.magic
            (Ojs.call (this_to_js Obj.magic Obj.magic Obj.magic x4405) "get"
               [|(Obj.magic x4404)|])
    let (has : ('tags, 'K, 'V) this -> key:'K -> bool) =
      fun (x4411 : ('tags, 'K, 'V) this) ->
        fun ~key:(x4410 : 'K) ->
          Ojs.bool_of_js
            (Ojs.call (this_to_js Obj.magic Obj.magic Obj.magic x4411) "has"
               [|(Obj.magic x4410)|])
    let (get_size : ('tags, 'K, 'V) this -> float) =
      fun (x4415 : ('tags, 'K, 'V) this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii
             (this_to_js Obj.magic Obj.magic Obj.magic x4415) "size")
    let cast_from = Obj.magic
  end
module RangeError =
  struct
    type t = [ `Error  | `RangeError ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x4420 : Ojs.t) -> t_of_js x4420
    and t_0_to_js : t_0 -> Ojs.t = fun (x4419 : t) -> t_to_js x4419
    type tags = [ `Error  | `RangeError ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `RangeError ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x4423 : Ojs.t) -> intf_of_js __tags_of_js x4423
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x4421 : __tags intf) -> intf_to_js __tags_to_js x4421
    let (create : ?message:string -> ?options:ErrorOptions.t -> unit -> t) =
      fun ?message:(x4425 : string option) ->
        fun ?options:(x4426 : ErrorOptions.t option) ->
          fun () ->
            t_of_js
              (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "RangeError")
                 (let x4427 =
                    Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                  (match x4425 with
                   | Some x4429 ->
                       ignore
                         (Ojs.call x4427 "push" [|(Ojs.string_to_js x4429)|])
                   | None -> ());
                  (match x4426 with
                   | Some x4428 ->
                       ignore
                         (Ojs.call x4427 "push"
                            [|(ErrorOptions.t_to_js x4428)|])
                   | None -> ());
                  x4427))
    let (invoke : ?message:string -> ?options:ErrorOptions.t -> unit -> t) =
      fun ?message:(x4430 : string option) ->
        fun ?options:(x4431 : ErrorOptions.t option) ->
          fun () ->
            t_of_js
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "RangeError") "apply"
                 [|Ojs.null;((let x4432 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              (match x4430 with
                               | Some x4434 ->
                                   ignore
                                     (Ojs.call x4432 "push"
                                        [|(Ojs.string_to_js x4434)|])
                               | None -> ());
                              (match x4431 with
                               | Some x4433 ->
                                   ignore
                                     (Ojs.call x4432 "push"
                                        [|(ErrorOptions.t_to_js x4433)|])
                               | None -> ());
                              x4432))|])
    let (create' : ?message:string -> unit -> t) =
      fun ?message:(x4435 : string option) ->
        fun () ->
          t_of_js
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "RangeError")
               (let x4436 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x4435 with
                 | Some x4437 ->
                     ignore
                       (Ojs.call x4436 "push" [|(Ojs.string_to_js x4437)|])
                 | None -> ());
                x4436))
    let (invoke' : ?message:string -> unit -> t) =
      fun ?message:(x4438 : string option) ->
        fun () ->
          t_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "RangeError") "apply"
               [|Ojs.null;((let x4439 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x4438 with
                             | Some x4440 ->
                                 ignore
                                   (Ojs.call x4439 "push"
                                      [|(Ojs.string_to_js x4440)|])
                             | None -> ());
                            x4439))|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "RangeError")
             "prototype")
    let cast_from = Obj.magic
  end
module ProxyHandler =
  struct
    type 'T t = [ `ProxyHandler of 'T ] intf
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun _T -> Obj.magic
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun _T -> Obj.magic
    type 'T t_1 = 'T t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 =
      fun (type __T) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x4443 : Ojs.t) -> t_of_js __T_of_js x4443
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t =
      fun (type __T) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x4441 : __T t) -> t_to_js __T_to_js x4441
    type 'T tags = [ `ProxyHandler of 'T ]
    type 'T tags_1 = 'T tags
    type ('tags, 'T) this =
      'tags intf constraint 'tags = [> `ProxyHandler of 'T ]
    let rec this_of_js :
      'tags 'T .
        (Ojs.t -> 'tags) -> (Ojs.t -> 'T) -> Ojs.t -> ('tags, 'T) this
      =
      fun (type __tags) ->
        fun (type __T) ->
          fun (__tags_of_js : Ojs.t -> __tags) ->
            fun (__T_of_js : Ojs.t -> __T) ->
              fun (x4447 : Ojs.t) -> intf_of_js __tags_of_js x4447
    and this_to_js :
      'tags 'T .
        ('tags -> Ojs.t) -> ('T -> Ojs.t) -> ('tags, 'T) this -> Ojs.t
      =
      fun (type __tags) ->
        fun (type __T) ->
          fun (__tags_to_js : __tags -> Ojs.t) ->
            fun (__T_to_js : __T -> Ojs.t) ->
              fun (x4445 : __tags intf) -> intf_to_js __tags_to_js x4445
    let (apply_ :
      ('tags, 'T) this ->
        target:'T -> thisArg:any -> argArray:any list -> any)
      =
      fun (x4453 : ('tags, 'T) this) ->
        fun ~target:(x4449 : 'T) ->
          fun ~thisArg:(x4450 : any) ->
            fun ~argArray:(x4451 : any list) ->
              any_of_js
                (Ojs.call (this_to_js Obj.magic Obj.magic x4453) "apply"
                   [|(Obj.magic x4449);(any_to_js x4450);(Ojs.list_to_js
                                                            any_to_js x4451)|])
    let (construct :
      ('tags, 'T) this ->
        target:'T ->
          argArray:any list -> newTarget:Function.t -> untyped_object)
      =
      fun (x4460 : ('tags, 'T) this) ->
        fun ~target:(x4456 : 'T) ->
          fun ~argArray:(x4457 : any list) ->
            fun ~newTarget:(x4459 : Function.t) ->
              untyped_object_of_js
                (Ojs.call (this_to_js Obj.magic Obj.magic x4460) "construct"
                   [|(Obj.magic x4456);(Ojs.list_to_js any_to_js x4457);(
                     Function.t_to_js x4459)|])
    let (defineProperty :
      ('tags, 'T) this ->
        target:'T ->
          p:[ `U1 of string  | `U2 of symbol ] ->
            attributes:PropertyDescriptor.t -> bool)
      =
      fun (x4468 : ('tags, 'T) this) ->
        fun ~target:(x4463 : 'T) ->
          fun ~p:(x4464 : [ `U1 of string  | `U2 of symbol ]) ->
            fun ~attributes:(x4467 : PropertyDescriptor.t) ->
              Ojs.bool_of_js
                (Ojs.call (this_to_js Obj.magic Obj.magic x4468)
                   "defineProperty"
                   [|(Obj.magic x4463);((match x4464 with
                                         | `U1 x4465 ->
                                             Ojs.string_to_js x4465
                                         | `U2 x4466 -> symbol_to_js x4466));(
                     PropertyDescriptor.t_to_js x4467)|])
    let (deleteProperty :
      ('tags, 'T) this ->
        target:'T -> p:[ `U1 of string  | `U2 of symbol ] -> bool)
      =
      fun (x4475 : ('tags, 'T) this) ->
        fun ~target:(x4471 : 'T) ->
          fun ~p:(x4472 : [ `U1 of string  | `U2 of symbol ]) ->
            Ojs.bool_of_js
              (Ojs.call (this_to_js Obj.magic Obj.magic x4475)
                 "deleteProperty"
                 [|(Obj.magic x4471);((match x4472 with
                                       | `U1 x4473 -> Ojs.string_to_js x4473
                                       | `U2 x4474 -> symbol_to_js x4474))|])
    let (get_ :
      ('tags, 'T) this ->
        target:'T ->
          p:[ `U1 of string  | `U2 of symbol ] -> receiver:any -> any)
      =
      fun (x4483 : ('tags, 'T) this) ->
        fun ~target:(x4478 : 'T) ->
          fun ~p:(x4479 : [ `U1 of string  | `U2 of symbol ]) ->
            fun ~receiver:(x4482 : any) ->
              any_of_js
                (Ojs.call (this_to_js Obj.magic Obj.magic x4483) "get"
                   [|(Obj.magic x4478);((match x4479 with
                                         | `U1 x4480 ->
                                             Ojs.string_to_js x4480
                                         | `U2 x4481 -> symbol_to_js x4481));(
                     any_to_js x4482)|])
    let (getOwnPropertyDescriptor :
      ('tags, 'T) this ->
        target:'T ->
          p:[ `U1 of string  | `U2 of symbol ] -> PropertyDescriptor.t option)
      =
      fun (x4490 : ('tags, 'T) this) ->
        fun ~target:(x4486 : 'T) ->
          fun ~p:(x4487 : [ `U1 of string  | `U2 of symbol ]) ->
            Ojs.option_of_js PropertyDescriptor.t_of_js
              (Ojs.call (this_to_js Obj.magic Obj.magic x4490)
                 "getOwnPropertyDescriptor"
                 [|(Obj.magic x4486);((match x4487 with
                                       | `U1 x4488 -> Ojs.string_to_js x4488
                                       | `U2 x4489 -> symbol_to_js x4489))|])
    let (getPrototypeOf :
      ('tags, 'T) this -> target:'T -> untyped_object option) =
      fun (x4495 : ('tags, 'T) this) ->
        fun ~target:(x4494 : 'T) ->
          Ojs.option_of_js untyped_object_of_js
            (Ojs.call (this_to_js Obj.magic Obj.magic x4495) "getPrototypeOf"
               [|(Obj.magic x4494)|])
    let (has :
      ('tags, 'T) this ->
        target:'T -> p:[ `U1 of string  | `U2 of symbol ] -> bool)
      =
      fun (x4503 : ('tags, 'T) this) ->
        fun ~target:(x4499 : 'T) ->
          fun ~p:(x4500 : [ `U1 of string  | `U2 of symbol ]) ->
            Ojs.bool_of_js
              (Ojs.call (this_to_js Obj.magic Obj.magic x4503) "has"
                 [|(Obj.magic x4499);((match x4500 with
                                       | `U1 x4501 -> Ojs.string_to_js x4501
                                       | `U2 x4502 -> symbol_to_js x4502))|])
    let (isExtensible : ('tags, 'T) this -> target:'T -> bool) =
      fun (x4507 : ('tags, 'T) this) ->
        fun ~target:(x4506 : 'T) ->
          Ojs.bool_of_js
            (Ojs.call (this_to_js Obj.magic Obj.magic x4507) "isExtensible"
               [|(Obj.magic x4506)|])
    let (ownKeys :
      ('tags, 'T) this ->
        target:'T ->
          [ `String of string  | `Symbol of symbol ] Primitive.t ArrayLike.t)
      =
      fun (x4511 : ('tags, 'T) this) ->
        fun ~target:(x4510 : 'T) ->
          ArrayLike.t_of_js
            (fun (x4514 : Ojs.t) ->
               Primitive.t_of_js
                 (fun (x4515 : Ojs.t) ->
                    let x4516 = x4515 in
                    match Ojs.string_of_js (Ojs.get_prop_ascii x4516 "dummy")
                    with
                    | "String" -> `String (Ojs.string_of_js x4516)
                    | "Symbol" -> `Symbol (symbol_of_js x4516)
                    | _ -> assert false) x4514)
            (Ojs.call (this_to_js Obj.magic Obj.magic x4511) "ownKeys"
               [|(Obj.magic x4510)|])
    let (preventExtensions : ('tags, 'T) this -> target:'T -> bool) =
      fun (x4518 : ('tags, 'T) this) ->
        fun ~target:(x4517 : 'T) ->
          Ojs.bool_of_js
            (Ojs.call (this_to_js Obj.magic Obj.magic x4518)
               "preventExtensions" [|(Obj.magic x4517)|])
    let (set_ :
      ('tags, 'T) this ->
        target:'T ->
          p:[ `U1 of string  | `U2 of symbol ] ->
            value:any -> receiver:any -> bool)
      =
      fun (x4527 : ('tags, 'T) this) ->
        fun ~target:(x4521 : 'T) ->
          fun ~p:(x4522 : [ `U1 of string  | `U2 of symbol ]) ->
            fun ~value:(x4525 : any) ->
              fun ~receiver:(x4526 : any) ->
                Ojs.bool_of_js
                  (Ojs.call (this_to_js Obj.magic Obj.magic x4527) "set"
                     [|(Obj.magic x4521);((match x4522 with
                                           | `U1 x4523 ->
                                               Ojs.string_to_js x4523
                                           | `U2 x4524 -> symbol_to_js x4524));(
                       any_to_js x4525);(any_to_js x4526)|])
    let (setPrototypeOf :
      ('tags, 'T) this -> target:'T -> v:untyped_object option -> bool) =
      fun (x4533 : ('tags, 'T) this) ->
        fun ~target:(x4530 : 'T) ->
          fun ~v:(x4531 : untyped_object option) ->
            Ojs.bool_of_js
              (Ojs.call (this_to_js Obj.magic Obj.magic x4533)
                 "setPrototypeOf"
                 [|(Obj.magic x4530);(Ojs.option_to_js untyped_object_to_js
                                        x4531)|])
    let cast_from = Obj.magic
  end
module ProxyStatic =
  struct
    module AnonymousInterface41 =
      struct
        type 'T t = Ojs.t
        let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
          fun (type __T) ->
            fun (__T_of_js : Ojs.t -> __T) -> fun (x4537 : Ojs.t) -> x4537
        and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t =
          fun (type __T) ->
            fun (__T_to_js : __T -> Ojs.t) -> fun (x4536 : Ojs.t) -> x4536
        let (get_proxy : 'T t -> 'T) =
          fun (x4538 : 'T t) ->
            Obj.magic (Ojs.get_prop_ascii (t_to_js Obj.magic x4538) "proxy")
        let (set_proxy : 'T t -> 'T -> unit) =
          fun (x4540 : 'T t) ->
            fun (x4541 : 'T) ->
              Ojs.set_prop_ascii (t_to_js Obj.magic x4540) "proxy"
                (Obj.magic x4541)
        let (revoke : 'T t -> unit) =
          fun (x4543 : 'T t) ->
            ignore (Ojs.call (t_to_js Obj.magic x4543) "revoke" [||])
        let (create : proxy:'T -> revoke:(unit -> unit) -> unit -> 'T t) =
          fun ~proxy:(x4545 : 'T) ->
            fun ~revoke:(x4546 : unit -> unit) ->
              fun () ->
                let x4547 = Ojs.empty_obj () in
                Ojs.set_prop_ascii x4547 "proxy" (Obj.magic x4545);
                Ojs.set_prop_ascii x4547 "revoke"
                  (Ojs.fun_to_js 1 (fun _ -> x4546 ()));
                t_of_js Obj.magic x4547
        module Make(T:Ojs.T) =
          struct
            type 'T parent = 'T t
            let rec parent_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T parent =
              fun (type __T) ->
                fun (__T_of_js : Ojs.t -> __T) ->
                  fun (x4551 : Ojs.t) -> t_of_js __T_of_js x4551
            and parent_to_js : 'T . ('T -> Ojs.t) -> 'T parent -> Ojs.t =
              fun (type __T) ->
                fun (__T_to_js : __T -> Ojs.t) ->
                  fun (x4549 : __T t) -> t_to_js __T_to_js x4549
            type t = T.t parent
            let rec t_of_js : Ojs.t -> t =
              fun (x4555 : Ojs.t) -> parent_of_js T.t_of_js x4555
            and t_to_js : t -> Ojs.t =
              fun (x4553 : T.t parent) -> parent_to_js T.t_to_js x4553
            let (get_proxy : t -> T.t) =
              fun (x4557 : t) ->
                T.t_of_js (Ojs.get_prop_ascii (t_to_js x4557) "proxy")
            let (set_proxy : t -> T.t -> unit) =
              fun (x4558 : t) ->
                fun (x4559 : T.t) ->
                  Ojs.set_prop_ascii (t_to_js x4558) "proxy"
                    (T.t_to_js x4559)
            let (revoke : t -> unit) =
              fun (x4560 : t) ->
                ignore (Ojs.call (t_to_js x4560) "revoke" [||])
          end
      end
    let (revocable :
      target:'T -> handler:'T ProxyHandler.t -> 'T AnonymousInterface41.t) =
      fun ~target:(x4561 : 'T) ->
        fun ~handler:(x4562 : 'T ProxyHandler.t) ->
          AnonymousInterface41.t_of_js Obj.magic
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "Proxy") "revocable"
               [|(Obj.magic x4561);(ProxyHandler.t_to_js Obj.magic x4562)|])
    let (create : target:'T -> handler:'T ProxyHandler.t -> 'T) =
      fun ~target:(x4565 : 'T) ->
        fun ~handler:(x4566 : 'T ProxyHandler.t) ->
          Obj.magic
            (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Proxy")
               [|(Obj.magic x4565);(ProxyHandler.t_to_js Obj.magic x4566)|])
  end
module ProxyConstructor =
  struct
    module AnonymousInterface41 =
      struct
        type 'T t = Ojs.t
        let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
          fun (type __T) ->
            fun (__T_of_js : Ojs.t -> __T) -> fun (x4569 : Ojs.t) -> x4569
        and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t =
          fun (type __T) ->
            fun (__T_to_js : __T -> Ojs.t) -> fun (x4568 : Ojs.t) -> x4568
        let (get_proxy : 'T t -> 'T) =
          fun (x4570 : 'T t) ->
            Obj.magic (Ojs.get_prop_ascii (t_to_js Obj.magic x4570) "proxy")
        let (set_proxy : 'T t -> 'T -> unit) =
          fun (x4572 : 'T t) ->
            fun (x4573 : 'T) ->
              Ojs.set_prop_ascii (t_to_js Obj.magic x4572) "proxy"
                (Obj.magic x4573)
        let (revoke : 'T t -> unit) =
          fun (x4575 : 'T t) ->
            ignore (Ojs.call (t_to_js Obj.magic x4575) "revoke" [||])
        let (create : proxy:'T -> revoke:(unit -> unit) -> unit -> 'T t) =
          fun ~proxy:(x4577 : 'T) ->
            fun ~revoke:(x4578 : unit -> unit) ->
              fun () ->
                let x4579 = Ojs.empty_obj () in
                Ojs.set_prop_ascii x4579 "proxy" (Obj.magic x4577);
                Ojs.set_prop_ascii x4579 "revoke"
                  (Ojs.fun_to_js 1 (fun _ -> x4578 ()));
                t_of_js Obj.magic x4579
        module Make(T:Ojs.T) =
          struct
            type 'T parent = 'T t
            let rec parent_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T parent =
              fun (type __T) ->
                fun (__T_of_js : Ojs.t -> __T) ->
                  fun (x4583 : Ojs.t) -> t_of_js __T_of_js x4583
            and parent_to_js : 'T . ('T -> Ojs.t) -> 'T parent -> Ojs.t =
              fun (type __T) ->
                fun (__T_to_js : __T -> Ojs.t) ->
                  fun (x4581 : __T t) -> t_to_js __T_to_js x4581
            type t = T.t parent
            let rec t_of_js : Ojs.t -> t =
              fun (x4587 : Ojs.t) -> parent_of_js T.t_of_js x4587
            and t_to_js : t -> Ojs.t =
              fun (x4585 : T.t parent) -> parent_to_js T.t_to_js x4585
            let (get_proxy : t -> T.t) =
              fun (x4589 : t) ->
                T.t_of_js (Ojs.get_prop_ascii (t_to_js x4589) "proxy")
            let (set_proxy : t -> T.t -> unit) =
              fun (x4590 : t) ->
                fun (x4591 : T.t) ->
                  Ojs.set_prop_ascii (t_to_js x4590) "proxy"
                    (T.t_to_js x4591)
            let (revoke : t -> unit) =
              fun (x4592 : t) ->
                ignore (Ojs.call (t_to_js x4592) "revoke" [||])
          end
      end
    type t = [ `ProxyConstructor ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x4594 : Ojs.t) -> t_of_js x4594
    and t_0_to_js : t_0 -> Ojs.t = fun (x4593 : t) -> t_to_js x4593
    type tags = [ `ProxyConstructor ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `ProxyConstructor ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x4597 : Ojs.t) -> intf_of_js __tags_of_js x4597
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x4595 : __tags intf) -> intf_to_js __tags_to_js x4595
    let (revocable :
      'tags this ->
        target:'T -> handler:'T ProxyHandler.t -> 'T AnonymousInterface41.t)
      =
      fun (x4602 : 'tags this) ->
        fun ~target:(x4599 : 'T) ->
          fun ~handler:(x4600 : 'T ProxyHandler.t) ->
            AnonymousInterface41.t_of_js Obj.magic
              (Ojs.call (this_to_js Obj.magic x4602) "revocable"
                 [|(Obj.magic x4599);(ProxyHandler.t_to_js Obj.magic x4600)|])
    let (create : 'tags this -> target:'T -> handler:'T ProxyHandler.t -> 'T)
      =
      fun (x4608 : 'tags this) ->
        fun ~target:(x4605 : 'T) ->
          fun ~handler:(x4606 : 'T ProxyHandler.t) ->
            Obj.magic
              (Ojs.new_obj (this_to_js Obj.magic x4608)
                 [|(Obj.magic x4605);(ProxyHandler.t_to_js Obj.magic x4606)|])
    let cast_from = Obj.magic
  end
module ThisType =
  struct
    type 'T t = [ `ThisType of 'T ] intf
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun _T -> Obj.magic
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun _T -> Obj.magic
    type 'T t_1 = 'T t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 =
      fun (type __T) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x4612 : Ojs.t) -> t_of_js __T_of_js x4612
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t =
      fun (type __T) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x4610 : __T t) -> t_to_js __T_to_js x4610
    type 'T tags = [ `ThisType of 'T ]
    type 'T tags_1 = 'T tags
    type ('tags, 'T) this =
      'tags intf constraint 'tags = [> `ThisType of 'T ]
    let rec this_of_js :
      'tags 'T .
        (Ojs.t -> 'tags) -> (Ojs.t -> 'T) -> Ojs.t -> ('tags, 'T) this
      =
      fun (type __tags) ->
        fun (type __T) ->
          fun (__tags_of_js : Ojs.t -> __tags) ->
            fun (__T_of_js : Ojs.t -> __T) ->
              fun (x4616 : Ojs.t) -> intf_of_js __tags_of_js x4616
    and this_to_js :
      'tags 'T .
        ('tags -> Ojs.t) -> ('T -> Ojs.t) -> ('tags, 'T) this -> Ojs.t
      =
      fun (type __tags) ->
        fun (type __T) ->
          fun (__tags_to_js : __tags -> Ojs.t) ->
            fun (__T_to_js : __T -> Ojs.t) ->
              fun (x4614 : __tags intf) -> intf_to_js __tags_to_js x4614
    let cast_from = Obj.magic
  end
module Readonly =
  struct
    type 'T t = any
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun (type __T) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x4619 : Ojs.t) -> any_of_js x4619
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t =
      fun (type __T) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x4618 : any) -> any_to_js x4618
    type 'T t_1 = 'T t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 =
      fun (type __T) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x4622 : Ojs.t) -> t_of_js __T_of_js x4622
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t =
      fun (type __T) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x4620 : __T t) -> t_to_js __T_to_js x4620
  end
module PropertyDescriptorMap =
  struct
    type t = [ `PropertyDescriptorMap ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x4625 : Ojs.t) -> t_of_js x4625
    and t_0_to_js : t_0 -> Ojs.t = fun (x4624 : t) -> t_to_js x4624
    type tags = [ `PropertyDescriptorMap ]
    type tags_0 = tags
    type 'tags this =
      'tags intf constraint 'tags = [> `PropertyDescriptorMap ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x4628 : Ojs.t) -> intf_of_js __tags_of_js x4628
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x4626 : __tags intf) -> intf_to_js __tags_to_js x4626
    let (get : 'tags this -> PropertyKey.t -> PropertyDescriptor.t) =
      fun (x4630 : 'tags this) ->
        fun (x4632 : PropertyKey.t) ->
          PropertyDescriptor.t_of_js
            (Ojs.get_prop (this_to_js Obj.magic x4630)
               (PropertyKey.t_to_js x4632))
    let (set : 'tags this -> PropertyKey.t -> PropertyDescriptor.t -> unit) =
      fun (x4633 : 'tags this) ->
        fun (x4635 : PropertyKey.t) ->
          fun (x4636 : PropertyDescriptor.t) ->
            Ojs.set_prop (this_to_js Obj.magic x4633)
              (PropertyKey.t_to_js x4635) (PropertyDescriptor.t_to_js x4636)
    let cast_from = Obj.magic
  end
module Object =
  struct
    module AnonymousInterface48 =
      struct
        type 'T t = Ojs.t
        let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
          fun (type __T) ->
            fun (__T_of_js : Ojs.t -> __T) -> fun (x4638 : Ojs.t) -> x4638
        and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t =
          fun (type __T) ->
            fun (__T_to_js : __T -> Ojs.t) -> fun (x4637 : Ojs.t) -> x4637
        let (get : 'T t -> string -> 'T) =
          fun (x4639 : 'T t) ->
            fun (x4641 : string) ->
              Obj.magic
                (Ojs.get_prop (t_to_js Obj.magic x4639)
                   (Ojs.string_to_js x4641))
        let (set : 'T t -> string -> 'T -> unit) =
          fun (x4642 : 'T t) ->
            fun (x4644 : string) ->
              fun (x4645 : 'T) ->
                Ojs.set_prop (t_to_js Obj.magic x4642)
                  (Ojs.string_to_js x4644) (Obj.magic x4645)
        module Make(T:Ojs.T) =
          struct
            type 'T parent = 'T t
            let rec parent_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T parent =
              fun (type __T) ->
                fun (__T_of_js : Ojs.t -> __T) ->
                  fun (x4648 : Ojs.t) -> t_of_js __T_of_js x4648
            and parent_to_js : 'T . ('T -> Ojs.t) -> 'T parent -> Ojs.t =
              fun (type __T) ->
                fun (__T_to_js : __T -> Ojs.t) ->
                  fun (x4646 : __T t) -> t_to_js __T_to_js x4646
            type t = T.t parent
            let rec t_of_js : Ojs.t -> t =
              fun (x4652 : Ojs.t) -> parent_of_js T.t_of_js x4652
            and t_to_js : t -> Ojs.t =
              fun (x4650 : T.t parent) -> parent_to_js T.t_to_js x4650
            let (get : t -> string -> T.t) =
              fun (x4654 : t) ->
                fun (x4655 : string) ->
                  T.t_of_js
                    (Ojs.get_prop (t_to_js x4654) (Ojs.string_to_js x4655))
            let (set : t -> string -> T.t -> unit) =
              fun (x4656 : t) ->
                fun (x4657 : string) ->
                  fun (x4658 : T.t) ->
                    Ojs.set_prop (t_to_js x4656) (Ojs.string_to_js x4657)
                      (T.t_to_js x4658)
          end
      end
    module AnonymousInterface45 =
      struct
        type 'T t = Ojs.t
        let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
          fun (type __T) ->
            fun (__T_of_js : Ojs.t -> __T) -> fun (x4660 : Ojs.t) -> x4660
        and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t =
          fun (type __T) ->
            fun (__T_to_js : __T -> Ojs.t) -> fun (x4659 : Ojs.t) -> x4659
        let (get : 'T t -> string -> 'T) =
          fun (x4661 : 'T t) ->
            fun (x4663 : string) ->
              Obj.magic
                (Ojs.get_prop (t_to_js Obj.magic x4661)
                   (Ojs.string_to_js x4663))
        let (set : 'T t -> string -> 'T -> unit) =
          fun (x4664 : 'T t) ->
            fun (x4666 : string) ->
              fun (x4667 : 'T) ->
                Ojs.set_prop (t_to_js Obj.magic x4664)
                  (Ojs.string_to_js x4666) (Obj.magic x4667)
        module Make(T:Ojs.T) =
          struct
            type 'T parent = 'T t
            let rec parent_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T parent =
              fun (type __T) ->
                fun (__T_of_js : Ojs.t -> __T) ->
                  fun (x4670 : Ojs.t) -> t_of_js __T_of_js x4670
            and parent_to_js : 'T . ('T -> Ojs.t) -> 'T parent -> Ojs.t =
              fun (type __T) ->
                fun (__T_to_js : __T -> Ojs.t) ->
                  fun (x4668 : __T t) -> t_to_js __T_to_js x4668
            type t = T.t parent
            let rec t_of_js : Ojs.t -> t =
              fun (x4674 : Ojs.t) -> parent_of_js T.t_of_js x4674
            and t_to_js : t -> Ojs.t =
              fun (x4672 : T.t parent) -> parent_to_js T.t_to_js x4672
            let (get : t -> string -> T.t) =
              fun (x4676 : t) ->
                fun (x4677 : string) ->
                  T.t_of_js
                    (Ojs.get_prop (t_to_js x4676) (Ojs.string_to_js x4677))
            let (set : t -> string -> T.t -> unit) =
              fun (x4678 : t) ->
                fun (x4679 : string) ->
                  fun (x4680 : T.t) ->
                    Ojs.set_prop (t_to_js x4678) (Ojs.string_to_js x4679)
                      (T.t_to_js x4680)
          end
      end
    module AnonymousInterface17 =
      struct
        type t = Ojs.t
        let rec t_of_js : Ojs.t -> t = fun (x4682 : Ojs.t) -> x4682
        and t_to_js : t -> Ojs.t = fun (x4681 : Ojs.t) -> x4681
        let (get : t -> string -> PropertyDescriptor.t) =
          fun (x4683 : t) ->
            fun (x4684 : string) ->
              PropertyDescriptor.t_of_js
                (Ojs.get_prop (t_to_js x4683) (Ojs.string_to_js x4684))
        let (set : t -> string -> PropertyDescriptor.t -> unit) =
          fun (x4685 : t) ->
            fun (x4686 : string) ->
              fun (x4687 : PropertyDescriptor.t) ->
                Ojs.set_prop (t_to_js x4685) (Ojs.string_to_js x4686)
                  (PropertyDescriptor.t_to_js x4687)
      end
    type t = [ `Object ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x4689 : Ojs.t) -> t_of_js x4689
    and t_0_to_js : t_0 -> Ojs.t = fun (x4688 : t) -> t_to_js x4688
    type tags = [ `Object ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `Object ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x4692 : Ojs.t) -> intf_of_js __tags_of_js x4692
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x4690 : __tags intf) -> intf_to_js __tags_to_js x4690
    let (get_constructor : 'tags this -> Function.t) =
      fun (x4694 : 'tags this) ->
        Function.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x4694) "constructor")
    let (set_constructor : 'tags this -> Function.t -> unit) =
      fun (x4696 : 'tags this) ->
        fun (x4697 : Function.t) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x4696) "constructor"
            (Function.t_to_js x4697)
    let (toString : 'tags this -> string) =
      fun (x4699 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x4699) "toString" [||])
    let (toLocaleString : 'tags this -> string) =
      fun (x4701 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x4701) "toLocaleString" [||])
    let (valueOf : 'tags this -> t) =
      fun (x4703 : 'tags this) ->
        t_of_js (Ojs.call (this_to_js Obj.magic x4703) "valueOf" [||])
    let (hasOwnProperty : 'tags this -> v:PropertyKey.t -> bool) =
      fun (x4706 : 'tags this) ->
        fun ~v:(x4705 : PropertyKey.t) ->
          Ojs.bool_of_js
            (Ojs.call (this_to_js Obj.magic x4706) "hasOwnProperty"
               [|(PropertyKey.t_to_js x4705)|])
    let (isPrototypeOf : 'tags this -> v:t -> bool) =
      fun (x4709 : 'tags this) ->
        fun ~v:(x4708 : t) ->
          Ojs.bool_of_js
            (Ojs.call (this_to_js Obj.magic x4709) "isPrototypeOf"
               [|(t_to_js x4708)|])
    let (propertyIsEnumerable : 'tags this -> v:PropertyKey.t -> bool) =
      fun (x4712 : 'tags this) ->
        fun ~v:(x4711 : PropertyKey.t) ->
          Ojs.bool_of_js
            (Ojs.call (this_to_js Obj.magic x4712) "propertyIsEnumerable"
               [|(PropertyKey.t_to_js x4711)|])
    let (hasOwn : o:untyped_object -> v:PropertyKey.t -> bool) =
      fun ~o:(x4714 : untyped_object) ->
        fun ~v:(x4715 : PropertyKey.t) ->
          Ojs.bool_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "hasOwn"
               [|(untyped_object_to_js x4714);(PropertyKey.t_to_js x4715)|])
    let (fromEntries :
      (PropertyKey.t * 'T) Iterable.t -> 'T AnonymousInterface45.t) =
      fun (x4716 : (PropertyKey.t * 'T) Iterable.t) ->
        AnonymousInterface45.t_of_js Obj.magic
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "fromEntries"
             [|(Iterable.t_to_js
                  (fun (x4717 : (PropertyKey.t * 'T)) ->
                     let (x4718, x4719) = x4717 in
                     let x4720 = Ojs.array_make 2 in
                     Ojs.array_set x4720 0 (PropertyKey.t_to_js x4718);
                     Ojs.array_set x4720 1 (Obj.magic x4719);
                     x4720) x4716)|])
    let (fromEntries' : any list Iterable.t -> any) =
      fun (x4722 : any list Iterable.t) ->
        any_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "fromEntries"
             [|(Iterable.t_to_js
                  (fun (x4723 : any list) -> Ojs.list_to_js any_to_js x4723)
                  x4722)|])
    let (values :
      [ `U1 of 'T AnonymousInterface48.t  | `U2 of 'T ArrayLike.t ] ->
        'T list)
      =
      fun
        (x4725 :
          [ `U1 of 'T AnonymousInterface48.t  | `U2 of 'T ArrayLike.t ])
        ->
        Ojs.list_of_js Obj.magic
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "values"
             [|((match x4725 with
                 | `U1 x4726 -> AnonymousInterface48.t_to_js Obj.magic x4726
                 | `U2 x4728 -> ArrayLike.t_to_js Obj.magic x4728))|])
    let (values' : untyped_object -> any list) =
      fun (x4731 : untyped_object) ->
        Ojs.list_of_js any_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "values"
             [|(untyped_object_to_js x4731)|])
    let (entries :
      [ `U1 of 'T AnonymousInterface48.t  | `U2 of 'T ArrayLike.t ] ->
        (string * 'T) list)
      =
      fun
        (x4733 :
          [ `U1 of 'T AnonymousInterface48.t  | `U2 of 'T ArrayLike.t ])
        ->
        Ojs.list_of_js
          (fun (x4738 : Ojs.t) ->
             let x4739 = x4738 in
             ((Ojs.string_of_js (Ojs.array_get x4739 0)),
               (Obj.magic (Ojs.array_get x4739 1))))
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "entries"
             [|((match x4733 with
                 | `U1 x4734 -> AnonymousInterface48.t_to_js Obj.magic x4734
                 | `U2 x4736 -> ArrayLike.t_to_js Obj.magic x4736))|])
    let (entries' : untyped_object -> (string * any) list) =
      fun (x4740 : untyped_object) ->
        Ojs.list_of_js
          (fun (x4741 : Ojs.t) ->
             let x4742 = x4741 in
             ((Ojs.string_of_js (Ojs.array_get x4742 0)),
               (any_of_js (Ojs.array_get x4742 1))))
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "entries"
             [|(untyped_object_to_js x4740)|])
    let (getOwnPropertyDescriptors :
      'T -> (any, AnonymousInterface17.t) intersection2) =
      fun (x4743 : 'T) ->
        intersection2_of_js any_of_js AnonymousInterface17.t_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object")
             "getOwnPropertyDescriptors" [|(Obj.magic x4743)|])
    let (assign : target:'T -> source:'U -> ('T, 'U) intersection2) =
      fun ~target:(x4746 : 'T) ->
        fun ~source:(x4747 : 'U) ->
          intersection2_of_js Obj.magic Obj.magic
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "assign"
               [|(Obj.magic x4746);(Obj.magic x4747)|])
    let (assign' :
      target:'T -> source1:'U -> source2:'V -> ('T, 'U, 'V) intersection3) =
      fun ~target:(x4750 : 'T) ->
        fun ~source1:(x4751 : 'U) ->
          fun ~source2:(x4752 : 'V) ->
            intersection3_of_js Obj.magic Obj.magic Obj.magic
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "assign"
                 [|(Obj.magic x4750);(Obj.magic x4751);(Obj.magic x4752)|])
    let (assign'' :
      target:'T ->
        source1:'U ->
          source2:'V -> source3:'W -> ('T, 'U, 'V, 'W) intersection4)
      =
      fun ~target:(x4756 : 'T) ->
        fun ~source1:(x4757 : 'U) ->
          fun ~source2:(x4758 : 'V) ->
            fun ~source3:(x4759 : 'W) ->
              intersection4_of_js Obj.magic Obj.magic Obj.magic Obj.magic
                (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "assign"
                   [|(Obj.magic x4756);(Obj.magic x4757);(Obj.magic x4758);(
                     Obj.magic x4759)|])
    let (assign''' : target:untyped_object -> sources:any list -> any) =
      fun ~target:(x4764 : untyped_object) ->
        fun ~sources:(x4765 : any list) ->
          any_of_js
            (let x4768 = Ojs.get_prop_ascii Ojs.global "Object" in
             Ojs.call (Ojs.get_prop_ascii x4768 "assign") "apply"
               [|x4768;((let x4766 =
                           Ojs.new_obj
                             (Ojs.get_prop_ascii Ojs.global "Array") 
                             [||] in
                         ignore
                           (Ojs.call x4766 "push"
                              [|(untyped_object_to_js x4764)|]);
                         List.iter
                           (fun (x4767 : any) ->
                              ignore
                                (Ojs.call x4766 "push" [|(any_to_js x4767)|]))
                           x4765;
                         x4766))|])
    let (getOwnPropertySymbols : any -> symbol list) =
      fun (x4769 : any) ->
        Ojs.list_of_js symbol_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object")
             "getOwnPropertySymbols" [|(any_to_js x4769)|])
    let (keys : untyped_object -> string list) =
      fun (x4771 : untyped_object) ->
        Ojs.list_of_js Ojs.string_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "keys"
             [|(untyped_object_to_js x4771)|])
    let (is : value1:any -> value2:any -> bool) =
      fun ~value1:(x4773 : any) ->
        fun ~value2:(x4774 : any) ->
          Ojs.bool_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "is"
               [|(any_to_js x4773);(any_to_js x4774)|])
    let (setPrototypeOf : o:any -> proto:untyped_object option -> any) =
      fun ~o:(x4775 : any) ->
        fun ~proto:(x4776 : untyped_object option) ->
          any_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object")
               "setPrototypeOf"
               [|(any_to_js x4775);(Ojs.option_to_js untyped_object_to_js
                                      x4776)|])
    let (create : ?value:any -> unit -> t) =
      fun ?value:(x4778 : any option) ->
        fun () ->
          t_of_js
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "Object")
               (let x4779 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x4778 with
                 | Some x4780 ->
                     ignore (Ojs.call x4779 "push" [|(any_to_js x4780)|])
                 | None -> ());
                x4779))
    let (invoke : unit -> any) =
      fun () ->
        any_of_js (Ojs.apply (Ojs.get_prop_ascii Ojs.global "Object") [||])
    let (invoke' : any -> any) =
      fun (x4781 : any) ->
        any_of_js
          (Ojs.apply (Ojs.get_prop_ascii Ojs.global "Object")
             [|(any_to_js x4781)|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Object")
             "prototype")
    let (getPrototypeOf : any -> any) =
      fun (x4782 : any) ->
        any_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "getPrototypeOf"
             [|(any_to_js x4782)|])
    let (getOwnPropertyDescriptor :
      o:any -> p:PropertyKey.t -> PropertyDescriptor.t option) =
      fun ~o:(x4783 : any) ->
        fun ~p:(x4784 : PropertyKey.t) ->
          Ojs.option_of_js PropertyDescriptor.t_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object")
               "getOwnPropertyDescriptor"
               [|(any_to_js x4783);(PropertyKey.t_to_js x4784)|])
    let (getOwnPropertyNames : any -> string list) =
      fun (x4786 : any) ->
        Ojs.list_of_js Ojs.string_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object")
             "getOwnPropertyNames" [|(any_to_js x4786)|])
    let (create_ : untyped_object option -> any) =
      fun (x4788 : untyped_object option) ->
        any_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "create"
             [|(Ojs.option_to_js untyped_object_to_js x4788)|])
    let (create_' :
      o:untyped_object option ->
        properties:(PropertyDescriptorMap.t, any ThisType.t) intersection2 ->
          any)
      =
      fun ~o:(x4790 : untyped_object option) ->
        fun
          ~properties:(x4792 :
                        (PropertyDescriptorMap.t, any ThisType.t)
                          intersection2)
          ->
          any_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "create"
               [|(Ojs.option_to_js untyped_object_to_js x4790);(intersection2_to_js
                                                                  PropertyDescriptorMap.t_to_js
                                                                  (fun
                                                                    (x4794 :
                                                                    any
                                                                    ThisType.t)
                                                                    ->
                                                                    ThisType.t_to_js
                                                                    any_to_js
                                                                    x4794)
                                                                  x4792)|])
    let (defineProperty :
      o:'T ->
        p:PropertyKey.t ->
          attributes:(PropertyDescriptor.t, any ThisType.t) intersection2 ->
            'T)
      =
      fun ~o:(x4796 : 'T) ->
        fun ~p:(x4797 : PropertyKey.t) ->
          fun
            ~attributes:(x4798 :
                          (PropertyDescriptor.t, any ThisType.t)
                            intersection2)
            ->
            Obj.magic
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object")
                 "defineProperty"
                 [|(Obj.magic x4796);(PropertyKey.t_to_js x4797);(intersection2_to_js
                                                                    PropertyDescriptor.t_to_js
                                                                    (
                                                                    fun
                                                                    (x4800 :
                                                                    any
                                                                    ThisType.t)
                                                                    ->
                                                                    ThisType.t_to_js
                                                                    any_to_js
                                                                    x4800)
                                                                    x4798)|])
    let (defineProperties :
      o:'T ->
        properties:(PropertyDescriptorMap.t, any ThisType.t) intersection2 ->
          'T)
      =
      fun ~o:(x4802 : 'T) ->
        fun
          ~properties:(x4803 :
                        (PropertyDescriptorMap.t, any ThisType.t)
                          intersection2)
          ->
          Obj.magic
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object")
               "defineProperties"
               [|(Obj.magic x4802);(intersection2_to_js
                                      PropertyDescriptorMap.t_to_js
                                      (fun (x4805 : any ThisType.t) ->
                                         ThisType.t_to_js any_to_js x4805)
                                      x4803)|])
    let (seal : 'T -> 'T) =
      fun (x4807 : 'T) ->
        Obj.magic
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "seal"
             [|(Obj.magic x4807)|])
    let (freeze : 'T list -> 'T list) =
      fun (x4808 : 'T list) ->
        Ojs.list_of_js Obj.magic
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "freeze"
             [|(Ojs.list_to_js Obj.magic x4808)|])
    let (freeze' : 'T -> 'T) =
      fun (x4811 : 'T) ->
        Obj.magic
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "freeze"
             [|(Obj.magic x4811)|])
    let (freeze'' : 'T -> 'T Readonly.t) =
      fun (x4812 : 'T) ->
        Readonly.t_of_js Obj.magic
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "freeze"
             [|(Obj.magic x4812)|])
    let (preventExtensions : 'T -> 'T) =
      fun (x4814 : 'T) ->
        Obj.magic
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object")
             "preventExtensions" [|(Obj.magic x4814)|])
    let (isSealed : any -> bool) =
      fun (x4815 : any) ->
        Ojs.bool_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "isSealed"
             [|(any_to_js x4815)|])
    let (isFrozen : any -> bool) =
      fun (x4816 : any) ->
        Ojs.bool_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "isFrozen"
             [|(any_to_js x4816)|])
    let (isExtensible : any -> bool) =
      fun (x4817 : any) ->
        Ojs.bool_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "isExtensible"
             [|(any_to_js x4817)|])
    let (keys' : untyped_object -> string list) =
      fun (x4818 : untyped_object) ->
        Ojs.list_of_js Ojs.string_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "keys"
             [|(untyped_object_to_js x4818)|])
    let cast_from = Obj.magic
  end
module PropertyDecorator =
  struct
    type t = [ `PropertyDecorator ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x4821 : Ojs.t) -> t_of_js x4821
    and t_0_to_js : t_0 -> Ojs.t = fun (x4820 : t) -> t_to_js x4820
    type tags = [ `PropertyDecorator ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `PropertyDecorator ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x4824 : Ojs.t) -> intf_of_js __tags_of_js x4824
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x4822 : __tags intf) -> intf_to_js __tags_to_js x4822
    let (apply :
      'tags this ->
        target:Object.t ->
          propertyKey:[ `U1 of string  | `U2 of symbol ] -> unit)
      =
      fun (x4830 : 'tags this) ->
        fun ~target:(x4826 : Object.t) ->
          fun ~propertyKey:(x4827 : [ `U1 of string  | `U2 of symbol ]) ->
            ignore
              (Ojs.apply (this_to_js Obj.magic x4830)
                 [|(Object.t_to_js x4826);((match x4827 with
                                            | `U1 x4828 ->
                                                Ojs.string_to_js x4828
                                            | `U2 x4829 -> symbol_to_js x4829))|])
    let cast_from = Obj.magic
  end
module PromiseLike =
  struct
    type 'T t = [ `PromiseLike of 'T ] intf
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun _T -> Obj.magic
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun _T -> Obj.magic
    type 'T t_1 = 'T t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 =
      fun (type __T) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x4834 : Ojs.t) -> t_of_js __T_of_js x4834
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t =
      fun (type __T) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x4832 : __T t) -> t_to_js __T_to_js x4832
    type 'T tags = [ `PromiseLike of 'T ]
    type 'T tags_1 = 'T tags
    type ('tags, 'T) this =
      'tags intf constraint 'tags = [> `PromiseLike of 'T ]
    let rec this_of_js :
      'tags 'T .
        (Ojs.t -> 'tags) -> (Ojs.t -> 'T) -> Ojs.t -> ('tags, 'T) this
      =
      fun (type __tags) ->
        fun (type __T) ->
          fun (__tags_of_js : Ojs.t -> __tags) ->
            fun (__T_of_js : Ojs.t -> __T) ->
              fun (x4838 : Ojs.t) -> intf_of_js __tags_of_js x4838
    and this_to_js :
      'tags 'T .
        ('tags -> Ojs.t) -> ('T -> Ojs.t) -> ('tags, 'T) this -> Ojs.t
      =
      fun (type __tags) ->
        fun (type __T) ->
          fun (__tags_to_js : __tags -> Ojs.t) ->
            fun (__T_to_js : __T -> Ojs.t) ->
              fun (x4836 : __tags intf) -> intf_to_js __tags_to_js x4836
    let (then_ :
      ('tags, 'T) this ->
        ?onfulfilled:[ `Null  | `Undefined of undefined 
                     | `U1 of
                         'T -> [ `U1 of 'TResult1  | `U2 of 'TResult1 t ] ]
          ->
          ?onrejected:[ `Null  | `Undefined of undefined 
                      | `U1 of
                          any -> [ `U1 of 'TResult2  | `U2 of 'TResult2 t ] ]
            -> unit -> ('TResult1, 'TResult2) union2 t)
      =
      fun (x4857 : ('tags, 'T) this) ->
        fun
          ?onfulfilled:(x4840 :
                         [ `Null  | `Undefined of undefined 
                         | `U1 of
                             'T -> [ `U1 of 'TResult1  | `U2 of 'TResult1 t ] ]
                           option)
          ->
          fun
            ?onrejected:(x4841 :
                          [ `Null  | `Undefined of undefined 
                          | `U1 of
                              any ->
                                [ `U1 of 'TResult2  | `U2 of 'TResult2 t ]
                              ]
                            option)
            ->
            fun () ->
              t_of_js
                (fun (x4861 : Ojs.t) ->
                   union2_of_js Obj.magic Obj.magic x4861)
                (let x4860 = this_to_js Obj.magic Obj.magic x4857 in
                 Ojs.call (Ojs.get_prop_ascii x4860 "then") "apply"
                   [|x4860;((let x4842 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x4840 with
                              | Some x4850 ->
                                  ignore
                                    (Ojs.call x4842 "push"
                                       [|((match x4850 with
                                           | `Null -> Ojs.null
                                           | `Undefined x4851 ->
                                               undefined_to_js x4851
                                           | `U1 x4852 ->
                                               Ojs.fun_to_js 1
                                                 (fun (x4853 : Ojs.t) ->
                                                    match x4852
                                                            (Obj.magic x4853)
                                                    with
                                                    | `U1 x4854 ->
                                                        Obj.magic x4854
                                                    | `U2 x4855 ->
                                                        t_to_js Obj.magic
                                                          x4855)))|])
                              | None -> ());
                             (match x4841 with
                              | Some x4843 ->
                                  ignore
                                    (Ojs.call x4842 "push"
                                       [|((match x4843 with
                                           | `Null -> Ojs.null
                                           | `Undefined x4844 ->
                                               undefined_to_js x4844
                                           | `U1 x4845 ->
                                               Ojs.fun_to_js 1
                                                 (fun (x4846 : Ojs.t) ->
                                                    match x4845
                                                            (any_of_js x4846)
                                                    with
                                                    | `U1 x4847 ->
                                                        Obj.magic x4847
                                                    | `U2 x4848 ->
                                                        t_to_js Obj.magic
                                                          x4848)))|])
                              | None -> ());
                             x4842))|])
    let cast_from = Obj.magic
  end
module PromiseConstructorLike =
  struct
    module AnonymousInterface9 =
      struct
        type t = Ojs.t
        let rec t_of_js : Ojs.t -> t = fun (x4865 : Ojs.t) -> x4865
        and t_to_js : t -> Ojs.t = fun (x4864 : Ojs.t) -> x4864
        let (create :
          t ->
            executor:(resolve:([ `U1 of 'T  | `U2 of 'T PromiseLike.t ] ->
                                 unit)
                        -> reject:(?reason:any -> unit -> unit) -> unit)
              -> 'T PromiseLike.t)
          =
          fun (x4876 : t) ->
            fun
              ~executor:(x4866 :
                          resolve:([ `U1 of 'T  | `U2 of 'T PromiseLike.t ]
                                     -> unit)
                            -> reject:(?reason:any -> unit -> unit) -> unit)
              ->
              PromiseLike.t_of_js Obj.magic
                (Ojs.new_obj (t_to_js x4876)
                   [|(Ojs.fun_to_js 2
                        (fun (x4867 : Ojs.t) ->
                           fun (x4872 : Ojs.t) ->
                             x4866
                               ~resolve:(fun
                                           (x4868 :
                                             [ `U1 of 'T 
                                             | `U2 of 'T PromiseLike.t ])
                                           ->
                                           ignore
                                             (Ojs.apply x4867
                                                [|((match x4868 with
                                                    | `U1 x4869 ->
                                                        Obj.magic x4869
                                                    | `U2 x4870 ->
                                                        PromiseLike.t_to_js
                                                          Obj.magic x4870))|]))
                               ~reject:(fun ?reason:(x4873 : any option) ->
                                          fun () ->
                                            ignore
                                              (Ojs.call x4872 "apply"
                                                 [|Ojs.null;((let x4874 =
                                                                Ojs.new_obj
                                                                  (Ojs.get_prop_ascii
                                                                    Ojs.global
                                                                    "Array")
                                                                  [||] in
                                                              (match x4873
                                                               with
                                                               | Some x4875
                                                                   ->
                                                                   ignore
                                                                    (Ojs.call
                                                                    x4874
                                                                    "push"
                                                                    [|(
                                                                    any_to_js
                                                                    x4875)|])
                                                               | None -> ());
                                                              x4874))|]))))|])
      end
    type t = AnonymousInterface9.t
    let rec t_of_js : Ojs.t -> t =
      fun (x4879 : Ojs.t) -> AnonymousInterface9.t_of_js x4879
    and t_to_js : t -> Ojs.t =
      fun (x4878 : AnonymousInterface9.t) ->
        AnonymousInterface9.t_to_js x4878
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x4881 : Ojs.t) -> t_of_js x4881
    and t_0_to_js : t_0 -> Ojs.t = fun (x4880 : t) -> t_to_js x4880
  end
module Parameters =
  struct
    type 'T t = any
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun (type __T) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x4883 : Ojs.t) -> any_of_js x4883
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t =
      fun (type __T) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x4882 : any) -> any_to_js x4882
    type 'T t_1 = 'T t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 =
      fun (type __T) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x4886 : Ojs.t) -> t_of_js __T_of_js x4886
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t =
      fun (type __T) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x4884 : __T t) -> t_to_js __T_to_js x4884
  end
module ParameterDecorator =
  struct
    type t = [ `ParameterDecorator ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x4889 : Ojs.t) -> t_of_js x4889
    and t_0_to_js : t_0 -> Ojs.t = fun (x4888 : t) -> t_to_js x4888
    type tags = [ `ParameterDecorator ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `ParameterDecorator ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x4892 : Ojs.t) -> intf_of_js __tags_of_js x4892
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x4890 : __tags intf) -> intf_to_js __tags_to_js x4890
    let (apply :
      'tags this ->
        target:Object.t ->
          propertyKey:[ `U1 of string  | `U2 of symbol ] ->
            parameterIndex:float -> unit)
      =
      fun (x4899 : 'tags this) ->
        fun ~target:(x4894 : Object.t) ->
          fun ~propertyKey:(x4895 : [ `U1 of string  | `U2 of symbol ]) ->
            fun ~parameterIndex:(x4898 : float) ->
              ignore
                (Ojs.apply (this_to_js Obj.magic x4899)
                   [|(Object.t_to_js x4894);((match x4895 with
                                              | `U1 x4896 ->
                                                  Ojs.string_to_js x4896
                                              | `U2 x4897 ->
                                                  symbol_to_js x4897));(
                     Ojs.float_to_js x4898)|])
    let cast_from = Obj.magic
  end
module Pick =
  struct
    type ('T, 'K) t = any
    let rec t_of_js :
      'T 'K . (Ojs.t -> 'T) -> (Ojs.t -> 'K) -> Ojs.t -> ('T, 'K) t =
      fun (type __T) ->
        fun (type __K) ->
          fun (__T_of_js : Ojs.t -> __T) ->
            fun (__K_of_js : Ojs.t -> __K) ->
              fun (x4902 : Ojs.t) -> any_of_js x4902
    and t_to_js :
      'T 'K . ('T -> Ojs.t) -> ('K -> Ojs.t) -> ('T, 'K) t -> Ojs.t =
      fun (type __T) ->
        fun (type __K) ->
          fun (__T_to_js : __T -> Ojs.t) ->
            fun (__K_to_js : __K -> Ojs.t) ->
              fun (x4901 : any) -> any_to_js x4901
    type ('T, 'K) t_2 = ('T, 'K) t
    let rec t_2_of_js :
      'T 'K . (Ojs.t -> 'T) -> (Ojs.t -> 'K) -> Ojs.t -> ('T, 'K) t_2 =
      fun (type __T) ->
        fun (type __K) ->
          fun (__T_of_js : Ojs.t -> __T) ->
            fun (__K_of_js : Ojs.t -> __K) ->
              fun (x4906 : Ojs.t) -> t_of_js __T_of_js __K_of_js x4906
    and t_2_to_js :
      'T 'K . ('T -> Ojs.t) -> ('K -> Ojs.t) -> ('T, 'K) t_2 -> Ojs.t =
      fun (type __T) ->
        fun (type __K) ->
          fun (__T_to_js : __T -> Ojs.t) ->
            fun (__K_to_js : __K -> Ojs.t) ->
              fun (x4903 : (__T, __K) t) -> t_to_js __T_to_js __K_to_js x4903
  end
module Exclude =
  struct
    type ('T, 'U) t = any
    let rec t_of_js :
      'T 'U . (Ojs.t -> 'T) -> (Ojs.t -> 'U) -> Ojs.t -> ('T, 'U) t =
      fun (type __T) ->
        fun (type __U) ->
          fun (__T_of_js : Ojs.t -> __T) ->
            fun (__U_of_js : Ojs.t -> __U) ->
              fun (x4910 : Ojs.t) -> any_of_js x4910
    and t_to_js :
      'T 'U . ('T -> Ojs.t) -> ('U -> Ojs.t) -> ('T, 'U) t -> Ojs.t =
      fun (type __T) ->
        fun (type __U) ->
          fun (__T_to_js : __T -> Ojs.t) ->
            fun (__U_to_js : __U -> Ojs.t) ->
              fun (x4909 : any) -> any_to_js x4909
    type ('T, 'U) t_2 = ('T, 'U) t
    let rec t_2_of_js :
      'T 'U . (Ojs.t -> 'T) -> (Ojs.t -> 'U) -> Ojs.t -> ('T, 'U) t_2 =
      fun (type __T) ->
        fun (type __U) ->
          fun (__T_of_js : Ojs.t -> __T) ->
            fun (__U_of_js : Ojs.t -> __U) ->
              fun (x4914 : Ojs.t) -> t_of_js __T_of_js __U_of_js x4914
    and t_2_to_js :
      'T 'U . ('T -> Ojs.t) -> ('U -> Ojs.t) -> ('T, 'U) t_2 -> Ojs.t =
      fun (type __T) ->
        fun (type __U) ->
          fun (__T_to_js : __T -> Ojs.t) ->
            fun (__U_to_js : __U -> Ojs.t) ->
              fun (x4911 : (__T, __U) t) -> t_to_js __T_to_js __U_to_js x4911
  end
module Omit =
  struct
    type ('T, 'K) t = ('T, (any, 'K) Exclude.t) Pick.t
    let rec t_of_js :
      'T 'K . (Ojs.t -> 'T) -> (Ojs.t -> 'K) -> Ojs.t -> ('T, 'K) t =
      fun (type __T) ->
        fun (type __K) ->
          fun (__T_of_js : Ojs.t -> __T) ->
            fun (__K_of_js : Ojs.t -> __K) ->
              fun (x4922 : Ojs.t) ->
                Pick.t_of_js __T_of_js
                  (fun (x4924 : Ojs.t) ->
                     Exclude.t_of_js any_of_js __K_of_js x4924) x4922
    and t_to_js :
      'T 'K . ('T -> Ojs.t) -> ('K -> Ojs.t) -> ('T, 'K) t -> Ojs.t =
      fun (type __T) ->
        fun (type __K) ->
          fun (__T_to_js : __T -> Ojs.t) ->
            fun (__K_to_js : __K -> Ojs.t) ->
              fun (x4917 : (__T, (any, __K) Exclude.t) Pick.t) ->
                Pick.t_to_js __T_to_js
                  (fun (x4919 : (any, __K) Exclude.t) ->
                     Exclude.t_to_js any_to_js __K_to_js x4919) x4917
    type ('T, 'K) t_2 = ('T, 'K) t
    let rec t_2_of_js :
      'T 'K . (Ojs.t -> 'T) -> (Ojs.t -> 'K) -> Ojs.t -> ('T, 'K) t_2 =
      fun (type __T) ->
        fun (type __K) ->
          fun (__T_of_js : Ojs.t -> __T) ->
            fun (__K_of_js : Ojs.t -> __K) ->
              fun (x4930 : Ojs.t) -> t_of_js __T_of_js __K_of_js x4930
    and t_2_to_js :
      'T 'K . ('T -> Ojs.t) -> ('K -> Ojs.t) -> ('T, 'K) t_2 -> Ojs.t =
      fun (type __T) ->
        fun (type __K) ->
          fun (__T_to_js : __T -> Ojs.t) ->
            fun (__K_to_js : __K -> Ojs.t) ->
              fun (x4927 : (__T, __K) t) -> t_to_js __T_to_js __K_to_js x4927
  end
module Number =
  struct
    type t = [ `Number ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x4934 : Ojs.t) -> t_of_js x4934
    and t_0_to_js : t_0 -> Ojs.t = fun (x4933 : t) -> t_to_js x4933
    type tags = [ `Number ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `Number ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x4937 : Ojs.t) -> intf_of_js __tags_of_js x4937
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x4935 : __tags intf) -> intf_to_js __tags_to_js x4935
    let (toLocaleString :
      'tags this ->
        ?locales:[ `U1 of string  | `U2 of string list ] ->
          ?options:Intl.NumberFormatOptions.t -> unit -> string)
      =
      fun (x4947 : 'tags this) ->
        fun ?locales:(x4939 : [ `U1 of string  | `U2 of string list ] option)
          ->
          fun ?options:(x4940 : Intl.NumberFormatOptions.t option) ->
            fun () ->
              Ojs.string_of_js
                (let x4949 = this_to_js Obj.magic x4947 in
                 Ojs.call (Ojs.get_prop_ascii x4949 "toLocaleString") "apply"
                   [|x4949;((let x4941 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x4939 with
                              | Some x4943 ->
                                  ignore
                                    (Ojs.call x4941 "push"
                                       [|((match x4943 with
                                           | `U1 x4944 ->
                                               Ojs.string_to_js x4944
                                           | `U2 x4945 ->
                                               Ojs.list_to_js
                                                 Ojs.string_to_js x4945))|])
                              | None -> ());
                             (match x4940 with
                              | Some x4942 ->
                                  ignore
                                    (Ojs.call x4941 "push"
                                       [|(Intl.NumberFormatOptions.t_to_js
                                            x4942)|])
                              | None -> ());
                             x4941))|])
    let (toString : 'tags this -> ?radix:float -> unit -> string) =
      fun (x4953 : 'tags this) ->
        fun ?radix:(x4950 : float option) ->
          fun () ->
            Ojs.string_of_js
              (let x4955 = this_to_js Obj.magic x4953 in
               Ojs.call (Ojs.get_prop_ascii x4955 "toString") "apply"
                 [|x4955;((let x4951 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x4950 with
                            | Some x4952 ->
                                ignore
                                  (Ojs.call x4951 "push"
                                     [|(Ojs.float_to_js x4952)|])
                            | None -> ());
                           x4951))|])
    let (toFixed : 'tags this -> ?fractionDigits:float -> unit -> string) =
      fun (x4959 : 'tags this) ->
        fun ?fractionDigits:(x4956 : float option) ->
          fun () ->
            Ojs.string_of_js
              (let x4961 = this_to_js Obj.magic x4959 in
               Ojs.call (Ojs.get_prop_ascii x4961 "toFixed") "apply"
                 [|x4961;((let x4957 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x4956 with
                            | Some x4958 ->
                                ignore
                                  (Ojs.call x4957 "push"
                                     [|(Ojs.float_to_js x4958)|])
                            | None -> ());
                           x4957))|])
    let (toExponential :
      'tags this -> ?fractionDigits:float -> unit -> string) =
      fun (x4965 : 'tags this) ->
        fun ?fractionDigits:(x4962 : float option) ->
          fun () ->
            Ojs.string_of_js
              (let x4967 = this_to_js Obj.magic x4965 in
               Ojs.call (Ojs.get_prop_ascii x4967 "toExponential") "apply"
                 [|x4967;((let x4963 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x4962 with
                            | Some x4964 ->
                                ignore
                                  (Ojs.call x4963 "push"
                                     [|(Ojs.float_to_js x4964)|])
                            | None -> ());
                           x4963))|])
    let (toPrecision : 'tags this -> ?precision:float -> unit -> string) =
      fun (x4971 : 'tags this) ->
        fun ?precision:(x4968 : float option) ->
          fun () ->
            Ojs.string_of_js
              (let x4973 = this_to_js Obj.magic x4971 in
               Ojs.call (Ojs.get_prop_ascii x4973 "toPrecision") "apply"
                 [|x4973;((let x4969 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x4968 with
                            | Some x4970 ->
                                ignore
                                  (Ojs.call x4969 "push"
                                     [|(Ojs.float_to_js x4970)|])
                            | None -> ());
                           x4969))|])
    let (valueOf : 'tags this -> float) =
      fun (x4974 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x4974) "valueOf" [||])
    let (epsilon : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Number")
             "EPSILON")
    let (isFinite : unknown -> bool) =
      fun (x4976 : unknown) ->
        Ojs.bool_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Number") "isFinite"
             [|(unknown_to_js x4976)|])
    let (isInteger : unknown -> bool) =
      fun (x4977 : unknown) ->
        Ojs.bool_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Number") "isInteger"
             [|(unknown_to_js x4977)|])
    let (isNaN : unknown -> bool) =
      fun (x4978 : unknown) ->
        Ojs.bool_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Number") "isNaN"
             [|(unknown_to_js x4978)|])
    let (isSafeInteger : unknown -> bool) =
      fun (x4979 : unknown) ->
        Ojs.bool_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Number") "isSafeInteger"
             [|(unknown_to_js x4979)|])
    let (max_safe_integer : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Number")
             "MAX_SAFE_INTEGER")
    let (min_safe_integer : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Number")
             "MIN_SAFE_INTEGER")
    let (parseFloat : string -> float) =
      fun (x4980 : string) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Number") "parseFloat"
             [|(Ojs.string_to_js x4980)|])
    let (parseInt : string:string -> ?radix:float -> unit -> float) =
      fun ~string:(x4981 : string) ->
        fun ?radix:(x4982 : float option) ->
          fun () ->
            Ojs.float_of_js
              (let x4985 = Ojs.get_prop_ascii Ojs.global "Number" in
               Ojs.call (Ojs.get_prop_ascii x4985 "parseInt") "apply"
                 [|x4985;((let x4983 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           ignore
                             (Ojs.call x4983 "push"
                                [|(Ojs.string_to_js x4981)|]);
                           (match x4982 with
                            | Some x4984 ->
                                ignore
                                  (Ojs.call x4983 "push"
                                     [|(Ojs.float_to_js x4984)|])
                            | None -> ());
                           x4983))|])
    let (create : ?value:any -> unit -> t) =
      fun ?value:(x4986 : any option) ->
        fun () ->
          t_of_js
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "Number")
               (let x4987 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x4986 with
                 | Some x4988 ->
                     ignore (Ojs.call x4987 "push" [|(any_to_js x4988)|])
                 | None -> ());
                x4987))
    let (invoke : ?value:any -> unit -> float) =
      fun ?value:(x4989 : any option) ->
        fun () ->
          Ojs.float_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "Number") "apply"
               [|Ojs.null;((let x4990 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x4989 with
                             | Some x4991 ->
                                 ignore
                                   (Ojs.call x4990 "push"
                                      [|(any_to_js x4991)|])
                             | None -> ());
                            x4990))|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Number")
             "prototype")
    let (max_value : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Number")
             "MAX_VALUE")
    let (min_value : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Number")
             "MIN_VALUE")
    let (nan : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Number") "NaN")
    let (negative_infinity : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Number")
             "NEGATIVE_INFINITY")
    let (positive_infinity : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Number")
             "POSITIVE_INFINITY")
    let cast_from = Obj.magic
    let (of_ml : float -> t) =
      fun (x4992 : float) -> t_of_js (Ojs.float_to_js x4992)
    let (to_ml : t -> float) =
      fun (x4993 : t) ->
        Ojs.float_of_js (Ojs.call (t_to_js x4993) "valueOf" [||])
  end
module NonNullable =
  struct
    type 'T t = any
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun (type __T) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x4995 : Ojs.t) -> any_of_js x4995
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t =
      fun (type __T) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x4994 : any) -> any_to_js x4994
    type 'T t_1 = 'T t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 =
      fun (type __T) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x4998 : Ojs.t) -> t_of_js __T_of_js x4998
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t =
      fun (type __T) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x4996 : __T t) -> t_to_js __T_to_js x4996
  end
module NewableFunction =
  struct
    module AnonymousInterface43 =
      struct
        type 'T t = Ojs.t
        let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
          fun (type __T) ->
            fun (__T_of_js : Ojs.t -> __T) -> fun (x5001 : Ojs.t) -> x5001
        and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t =
          fun (type __T) ->
            fun (__T_to_js : __T -> Ojs.t) -> fun (x5000 : Ojs.t) -> x5000
        let (create : 'T t -> 'T) =
          fun (x5002 : 'T t) ->
            Obj.magic (Ojs.new_obj (t_to_js Obj.magic x5002) [||])
        module Make(T:Ojs.T) =
          struct
            type 'T parent = 'T t
            let rec parent_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T parent =
              fun (type __T) ->
                fun (__T_of_js : Ojs.t -> __T) ->
                  fun (x5006 : Ojs.t) -> t_of_js __T_of_js x5006
            and parent_to_js : 'T . ('T -> Ojs.t) -> 'T parent -> Ojs.t =
              fun (type __T) ->
                fun (__T_to_js : __T -> Ojs.t) ->
                  fun (x5004 : __T t) -> t_to_js __T_to_js x5004
            type t = T.t parent
            let rec t_of_js : Ojs.t -> t =
              fun (x5010 : Ojs.t) -> parent_of_js T.t_of_js x5010
            and t_to_js : t -> Ojs.t =
              fun (x5008 : T.t parent) -> parent_to_js T.t_to_js x5008
            let (create : t -> T.t) =
              fun (x5012 : t) -> T.t_of_js (Ojs.new_obj (t_to_js x5012) [||])
          end
      end
    module AnonymousInterface39 =
      struct
        type ('AX, 'R) t = Ojs.t
        let rec t_of_js :
          'AX 'R . (Ojs.t -> 'AX) -> (Ojs.t -> 'R) -> Ojs.t -> ('AX, 'R) t =
          fun (type __AX) ->
            fun (type __R) ->
              fun (__AX_of_js : Ojs.t -> __AX) ->
                fun (__R_of_js : Ojs.t -> __R) ->
                  fun (x5014 : Ojs.t) -> x5014
        and t_to_js :
          'AX 'R . ('AX -> Ojs.t) -> ('R -> Ojs.t) -> ('AX, 'R) t -> Ojs.t =
          fun (type __AX) ->
            fun (type __R) ->
              fun (__AX_to_js : __AX -> Ojs.t) ->
                fun (__R_to_js : __R -> Ojs.t) ->
                  fun (x5013 : Ojs.t) -> x5013
        let (create : ('AX, 'R) t -> args:'AX list -> 'R) =
          fun (x5018 : ('AX, 'R) t) ->
            fun ~args:(x5015 : 'AX list) ->
              Obj.magic
                (Ojs.new_obj_arr (t_to_js Obj.magic Obj.magic x5018)
                   (let x5016 =
                      Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                        [||] in
                    List.iter
                      (fun (x5017 : 'AX) ->
                         ignore (Ojs.call x5016 "push" [|(Obj.magic x5017)|]))
                      x5015;
                    x5016))
        module Make(AX:Ojs.T)(R:Ojs.T) =
          struct
            type ('AX, 'R) parent = ('AX, 'R) t
            let rec parent_of_js :
              'AX 'R .
                (Ojs.t -> 'AX) -> (Ojs.t -> 'R) -> Ojs.t -> ('AX, 'R) parent
              =
              fun (type __AX) ->
                fun (type __R) ->
                  fun (__AX_of_js : Ojs.t -> __AX) ->
                    fun (__R_of_js : Ojs.t -> __R) ->
                      fun (x5024 : Ojs.t) ->
                        t_of_js __AX_of_js __R_of_js x5024
            and parent_to_js :
              'AX 'R .
                ('AX -> Ojs.t) -> ('R -> Ojs.t) -> ('AX, 'R) parent -> Ojs.t
              =
              fun (type __AX) ->
                fun (type __R) ->
                  fun (__AX_to_js : __AX -> Ojs.t) ->
                    fun (__R_to_js : __R -> Ojs.t) ->
                      fun (x5021 : (__AX, __R) t) ->
                        t_to_js __AX_to_js __R_to_js x5021
            type t = (AX.t, R.t) parent
            let rec t_of_js : Ojs.t -> t =
              fun (x5030 : Ojs.t) -> parent_of_js AX.t_of_js R.t_of_js x5030
            and t_to_js : t -> Ojs.t =
              fun (x5027 : (AX.t, R.t) parent) ->
                parent_to_js AX.t_to_js R.t_to_js x5027
            let (create : t -> args:AX.t list -> R.t) =
              fun (x5036 : t) ->
                fun ~args:(x5033 : AX.t list) ->
                  R.t_of_js
                    (Ojs.new_obj_arr (t_to_js x5036)
                       (let x5034 =
                          Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                            [||] in
                        List.iter
                          (fun (x5035 : AX.t) ->
                             ignore
                               (Ojs.call x5034 "push" [|(AX.t_to_js x5035)|]))
                          x5033;
                        x5034))
          end
      end
    module AnonymousInterface36 =
      struct
        type ('A, 'T) t = Ojs.t
        let rec t_of_js :
          'A 'T . (Ojs.t -> 'A) -> (Ojs.t -> 'T) -> Ojs.t -> ('A, 'T) t =
          fun (type __A) ->
            fun (type __T) ->
              fun (__A_of_js : Ojs.t -> __A) ->
                fun (__T_of_js : Ojs.t -> __T) ->
                  fun (x5038 : Ojs.t) -> x5038
        and t_to_js :
          'A 'T . ('A -> Ojs.t) -> ('T -> Ojs.t) -> ('A, 'T) t -> Ojs.t =
          fun (type __A) ->
            fun (type __T) ->
              fun (__A_to_js : __A -> Ojs.t) ->
                fun (__T_to_js : __T -> Ojs.t) ->
                  fun (x5037 : Ojs.t) -> x5037
        let (create : ('A, 'T) t -> args:any list -> 'T) =
          fun (x5042 : ('A, 'T) t) ->
            fun ~args:(x5039 : any list) ->
              Obj.magic
                (Ojs.new_obj_arr (t_to_js Obj.magic Obj.magic x5042)
                   (let x5040 =
                      Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                        [||] in
                    List.iter
                      (fun (x5041 : any) ->
                         ignore (Ojs.call x5040 "push" [|(any_to_js x5041)|]))
                      x5039;
                    x5040))
        module Make(A:Ojs.T)(T:Ojs.T) =
          struct
            type ('A, 'T) parent = ('A, 'T) t
            let rec parent_of_js :
              'A 'T .
                (Ojs.t -> 'A) -> (Ojs.t -> 'T) -> Ojs.t -> ('A, 'T) parent
              =
              fun (type __A) ->
                fun (type __T) ->
                  fun (__A_of_js : Ojs.t -> __A) ->
                    fun (__T_of_js : Ojs.t -> __T) ->
                      fun (x5048 : Ojs.t) ->
                        t_of_js __A_of_js __T_of_js x5048
            and parent_to_js :
              'A 'T .
                ('A -> Ojs.t) -> ('T -> Ojs.t) -> ('A, 'T) parent -> Ojs.t
              =
              fun (type __A) ->
                fun (type __T) ->
                  fun (__A_to_js : __A -> Ojs.t) ->
                    fun (__T_to_js : __T -> Ojs.t) ->
                      fun (x5045 : (__A, __T) t) ->
                        t_to_js __A_to_js __T_to_js x5045
            type t = (A.t, T.t) parent
            let rec t_of_js : Ojs.t -> t =
              fun (x5054 : Ojs.t) -> parent_of_js A.t_of_js T.t_of_js x5054
            and t_to_js : t -> Ojs.t =
              fun (x5051 : (A.t, T.t) parent) ->
                parent_to_js A.t_to_js T.t_to_js x5051
            let (create : t -> args:any list -> T.t) =
              fun (x5060 : t) ->
                fun ~args:(x5057 : any list) ->
                  T.t_of_js
                    (Ojs.new_obj_arr (t_to_js x5060)
                       (let x5058 =
                          Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                            [||] in
                        List.iter
                          (fun (x5059 : any) ->
                             ignore
                               (Ojs.call x5058 "push" [|(any_to_js x5059)|]))
                          x5057;
                        x5058))
          end
      end
    module AnonymousInterface33 =
      struct
        type ('A, 'R) t = Ojs.t
        let rec t_of_js :
          'A 'R . (Ojs.t -> 'A) -> (Ojs.t -> 'R) -> Ojs.t -> ('A, 'R) t =
          fun (type __A) ->
            fun (type __R) ->
              fun (__A_of_js : Ojs.t -> __A) ->
                fun (__R_of_js : Ojs.t -> __R) ->
                  fun (x5062 : Ojs.t) -> x5062
        and t_to_js :
          'A 'R . ('A -> Ojs.t) -> ('R -> Ojs.t) -> ('A, 'R) t -> Ojs.t =
          fun (type __A) ->
            fun (type __R) ->
              fun (__A_to_js : __A -> Ojs.t) ->
                fun (__R_to_js : __R -> Ojs.t) ->
                  fun (x5061 : Ojs.t) -> x5061
        let (create : ('A, 'R) t -> args:any list -> 'R) =
          fun (x5066 : ('A, 'R) t) ->
            fun ~args:(x5063 : any list) ->
              Obj.magic
                (Ojs.new_obj_arr (t_to_js Obj.magic Obj.magic x5066)
                   (let x5064 =
                      Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                        [||] in
                    List.iter
                      (fun (x5065 : any) ->
                         ignore (Ojs.call x5064 "push" [|(any_to_js x5065)|]))
                      x5063;
                    x5064))
        module Make(A:Ojs.T)(R:Ojs.T) =
          struct
            type ('A, 'R) parent = ('A, 'R) t
            let rec parent_of_js :
              'A 'R .
                (Ojs.t -> 'A) -> (Ojs.t -> 'R) -> Ojs.t -> ('A, 'R) parent
              =
              fun (type __A) ->
                fun (type __R) ->
                  fun (__A_of_js : Ojs.t -> __A) ->
                    fun (__R_of_js : Ojs.t -> __R) ->
                      fun (x5072 : Ojs.t) ->
                        t_of_js __A_of_js __R_of_js x5072
            and parent_to_js :
              'A 'R .
                ('A -> Ojs.t) -> ('R -> Ojs.t) -> ('A, 'R) parent -> Ojs.t
              =
              fun (type __A) ->
                fun (type __R) ->
                  fun (__A_to_js : __A -> Ojs.t) ->
                    fun (__R_to_js : __R -> Ojs.t) ->
                      fun (x5069 : (__A, __R) t) ->
                        t_to_js __A_to_js __R_to_js x5069
            type t = (A.t, R.t) parent
            let rec t_of_js : Ojs.t -> t =
              fun (x5078 : Ojs.t) -> parent_of_js A.t_of_js R.t_of_js x5078
            and t_to_js : t -> Ojs.t =
              fun (x5075 : (A.t, R.t) parent) ->
                parent_to_js A.t_to_js R.t_to_js x5075
            let (create : t -> args:any list -> R.t) =
              fun (x5084 : t) ->
                fun ~args:(x5081 : any list) ->
                  R.t_of_js
                    (Ojs.new_obj_arr (t_to_js x5084)
                       (let x5082 =
                          Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                            [||] in
                        List.iter
                          (fun (x5083 : any) ->
                             ignore
                               (Ojs.call x5082 "push" [|(any_to_js x5083)|]))
                          x5081;
                        x5082))
          end
      end
    module AnonymousInterface31 =
      struct
        type ('A, 'A0, 'R) t = Ojs.t
        let rec t_of_js :
          'A 'A0 'R .
            (Ojs.t -> 'A) ->
              (Ojs.t -> 'A0) -> (Ojs.t -> 'R) -> Ojs.t -> ('A, 'A0, 'R) t
          =
          fun (type __A) ->
            fun (type __A0) ->
              fun (type __R) ->
                fun (__A_of_js : Ojs.t -> __A) ->
                  fun (__A0_of_js : Ojs.t -> __A0) ->
                    fun (__R_of_js : Ojs.t -> __R) ->
                      fun (x5086 : Ojs.t) -> x5086
        and t_to_js :
          'A 'A0 'R .
            ('A -> Ojs.t) ->
              ('A0 -> Ojs.t) -> ('R -> Ojs.t) -> ('A, 'A0, 'R) t -> Ojs.t
          =
          fun (type __A) ->
            fun (type __A0) ->
              fun (type __R) ->
                fun (__A_to_js : __A -> Ojs.t) ->
                  fun (__A0_to_js : __A0 -> Ojs.t) ->
                    fun (__R_to_js : __R -> Ojs.t) ->
                      fun (x5085 : Ojs.t) -> x5085
        let (create : ('A, 'A0, 'R) t -> arg0:'A0 -> args:any list -> 'R) =
          fun (x5091 : ('A, 'A0, 'R) t) ->
            fun ~arg0:(x5087 : 'A0) ->
              fun ~args:(x5088 : any list) ->
                Obj.magic
                  (Ojs.new_obj_arr
                     (t_to_js Obj.magic Obj.magic Obj.magic x5091)
                     (let x5089 =
                        Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                          [||] in
                      ignore (Ojs.call x5089 "push" [|(Obj.magic x5087)|]);
                      List.iter
                        (fun (x5090 : any) ->
                           ignore
                             (Ojs.call x5089 "push" [|(any_to_js x5090)|]))
                        x5088;
                      x5089))
        module Make(A:Ojs.T)(A0:Ojs.T)(R:Ojs.T) =
          struct
            type ('A, 'A0, 'R) parent = ('A, 'A0, 'R) t
            let rec parent_of_js :
              'A 'A0 'R .
                (Ojs.t -> 'A) ->
                  (Ojs.t -> 'A0) ->
                    (Ojs.t -> 'R) -> Ojs.t -> ('A, 'A0, 'R) parent
              =
              fun (type __A) ->
                fun (type __A0) ->
                  fun (type __R) ->
                    fun (__A_of_js : Ojs.t -> __A) ->
                      fun (__A0_of_js : Ojs.t -> __A0) ->
                        fun (__R_of_js : Ojs.t -> __R) ->
                          fun (x5099 : Ojs.t) ->
                            t_of_js __A_of_js __A0_of_js __R_of_js x5099
            and parent_to_js :
              'A 'A0 'R .
                ('A -> Ojs.t) ->
                  ('A0 -> Ojs.t) ->
                    ('R -> Ojs.t) -> ('A, 'A0, 'R) parent -> Ojs.t
              =
              fun (type __A) ->
                fun (type __A0) ->
                  fun (type __R) ->
                    fun (__A_to_js : __A -> Ojs.t) ->
                      fun (__A0_to_js : __A0 -> Ojs.t) ->
                        fun (__R_to_js : __R -> Ojs.t) ->
                          fun (x5095 : (__A, __A0, __R) t) ->
                            t_to_js __A_to_js __A0_to_js __R_to_js x5095
            type t = (A.t, A0.t, R.t) parent
            let rec t_of_js : Ojs.t -> t =
              fun (x5107 : Ojs.t) ->
                parent_of_js A.t_of_js A0.t_of_js R.t_of_js x5107
            and t_to_js : t -> Ojs.t =
              fun (x5103 : (A.t, A0.t, R.t) parent) ->
                parent_to_js A.t_to_js A0.t_to_js R.t_to_js x5103
            let (create : t -> arg0:A0.t -> args:any list -> R.t) =
              fun (x5115 : t) ->
                fun ~arg0:(x5111 : A0.t) ->
                  fun ~args:(x5112 : any list) ->
                    R.t_of_js
                      (Ojs.new_obj_arr (t_to_js x5115)
                         (let x5113 =
                            Ojs.new_obj
                              (Ojs.get_prop_ascii Ojs.global "Array") 
                              [||] in
                          ignore
                            (Ojs.call x5113 "push" [|(A0.t_to_js x5111)|]);
                          List.iter
                            (fun (x5114 : any) ->
                               ignore
                                 (Ojs.call x5113 "push" [|(any_to_js x5114)|]))
                            x5112;
                          x5113))
          end
      end
    module AnonymousInterface29 =
      struct
        type ('A, 'A0, 'A1, 'R) t = Ojs.t
        let rec t_of_js :
          'A 'A0 'A1 'R .
            (Ojs.t -> 'A) ->
              (Ojs.t -> 'A0) ->
                (Ojs.t -> 'A1) ->
                  (Ojs.t -> 'R) -> Ojs.t -> ('A, 'A0, 'A1, 'R) t
          =
          fun (type __A) ->
            fun (type __A0) ->
              fun (type __A1) ->
                fun (type __R) ->
                  fun (__A_of_js : Ojs.t -> __A) ->
                    fun (__A0_of_js : Ojs.t -> __A0) ->
                      fun (__A1_of_js : Ojs.t -> __A1) ->
                        fun (__R_of_js : Ojs.t -> __R) ->
                          fun (x5117 : Ojs.t) -> x5117
        and t_to_js :
          'A 'A0 'A1 'R .
            ('A -> Ojs.t) ->
              ('A0 -> Ojs.t) ->
                ('A1 -> Ojs.t) ->
                  ('R -> Ojs.t) -> ('A, 'A0, 'A1, 'R) t -> Ojs.t
          =
          fun (type __A) ->
            fun (type __A0) ->
              fun (type __A1) ->
                fun (type __R) ->
                  fun (__A_to_js : __A -> Ojs.t) ->
                    fun (__A0_to_js : __A0 -> Ojs.t) ->
                      fun (__A1_to_js : __A1 -> Ojs.t) ->
                        fun (__R_to_js : __R -> Ojs.t) ->
                          fun (x5116 : Ojs.t) -> x5116
        let (create :
          ('A, 'A0, 'A1, 'R) t -> arg0:'A0 -> arg1:'A1 -> args:any list -> 'R)
          =
          fun (x5123 : ('A, 'A0, 'A1, 'R) t) ->
            fun ~arg0:(x5118 : 'A0) ->
              fun ~arg1:(x5119 : 'A1) ->
                fun ~args:(x5120 : any list) ->
                  Obj.magic
                    (Ojs.new_obj_arr
                       (t_to_js Obj.magic Obj.magic Obj.magic Obj.magic x5123)
                       (let x5121 =
                          Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                            [||] in
                        ignore (Ojs.call x5121 "push" [|(Obj.magic x5118)|]);
                        ignore (Ojs.call x5121 "push" [|(Obj.magic x5119)|]);
                        List.iter
                          (fun (x5122 : any) ->
                             ignore
                               (Ojs.call x5121 "push" [|(any_to_js x5122)|]))
                          x5120;
                        x5121))
        module Make(A:Ojs.T)(A0:Ojs.T)(A1:Ojs.T)(R:Ojs.T) =
          struct
            type ('A, 'A0, 'A1, 'R) parent = ('A, 'A0, 'A1, 'R) t
            let rec parent_of_js :
              'A 'A0 'A1 'R .
                (Ojs.t -> 'A) ->
                  (Ojs.t -> 'A0) ->
                    (Ojs.t -> 'A1) ->
                      (Ojs.t -> 'R) -> Ojs.t -> ('A, 'A0, 'A1, 'R) parent
              =
              fun (type __A) ->
                fun (type __A0) ->
                  fun (type __A1) ->
                    fun (type __R) ->
                      fun (__A_of_js : Ojs.t -> __A) ->
                        fun (__A0_of_js : Ojs.t -> __A0) ->
                          fun (__A1_of_js : Ojs.t -> __A1) ->
                            fun (__R_of_js : Ojs.t -> __R) ->
                              fun (x5133 : Ojs.t) ->
                                t_of_js __A_of_js __A0_of_js __A1_of_js
                                  __R_of_js x5133
            and parent_to_js :
              'A 'A0 'A1 'R .
                ('A -> Ojs.t) ->
                  ('A0 -> Ojs.t) ->
                    ('A1 -> Ojs.t) ->
                      ('R -> Ojs.t) -> ('A, 'A0, 'A1, 'R) parent -> Ojs.t
              =
              fun (type __A) ->
                fun (type __A0) ->
                  fun (type __A1) ->
                    fun (type __R) ->
                      fun (__A_to_js : __A -> Ojs.t) ->
                        fun (__A0_to_js : __A0 -> Ojs.t) ->
                          fun (__A1_to_js : __A1 -> Ojs.t) ->
                            fun (__R_to_js : __R -> Ojs.t) ->
                              fun (x5128 : (__A, __A0, __A1, __R) t) ->
                                t_to_js __A_to_js __A0_to_js __A1_to_js
                                  __R_to_js x5128
            type t = (A.t, A0.t, A1.t, R.t) parent
            let rec t_of_js : Ojs.t -> t =
              fun (x5143 : Ojs.t) ->
                parent_of_js A.t_of_js A0.t_of_js A1.t_of_js R.t_of_js x5143
            and t_to_js : t -> Ojs.t =
              fun (x5138 : (A.t, A0.t, A1.t, R.t) parent) ->
                parent_to_js A.t_to_js A0.t_to_js A1.t_to_js R.t_to_js x5138
            let (create :
              t -> arg0:A0.t -> arg1:A1.t -> args:any list -> R.t) =
              fun (x5153 : t) ->
                fun ~arg0:(x5148 : A0.t) ->
                  fun ~arg1:(x5149 : A1.t) ->
                    fun ~args:(x5150 : any list) ->
                      R.t_of_js
                        (Ojs.new_obj_arr (t_to_js x5153)
                           (let x5151 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x5151 "push" [|(A0.t_to_js x5148)|]);
                            ignore
                              (Ojs.call x5151 "push" [|(A1.t_to_js x5149)|]);
                            List.iter
                              (fun (x5152 : any) ->
                                 ignore
                                   (Ojs.call x5151 "push"
                                      [|(any_to_js x5152)|])) x5150;
                            x5151))
          end
      end
    module AnonymousInterface27 =
      struct
        type ('A, 'A0, 'A1, 'A2, 'R) t = Ojs.t
        let rec t_of_js :
          'A 'A0 'A1 'A2 'R .
            (Ojs.t -> 'A) ->
              (Ojs.t -> 'A0) ->
                (Ojs.t -> 'A1) ->
                  (Ojs.t -> 'A2) ->
                    (Ojs.t -> 'R) -> Ojs.t -> ('A, 'A0, 'A1, 'A2, 'R) t
          =
          fun (type __A) ->
            fun (type __A0) ->
              fun (type __A1) ->
                fun (type __A2) ->
                  fun (type __R) ->
                    fun (__A_of_js : Ojs.t -> __A) ->
                      fun (__A0_of_js : Ojs.t -> __A0) ->
                        fun (__A1_of_js : Ojs.t -> __A1) ->
                          fun (__A2_of_js : Ojs.t -> __A2) ->
                            fun (__R_of_js : Ojs.t -> __R) ->
                              fun (x5155 : Ojs.t) -> x5155
        and t_to_js :
          'A 'A0 'A1 'A2 'R .
            ('A -> Ojs.t) ->
              ('A0 -> Ojs.t) ->
                ('A1 -> Ojs.t) ->
                  ('A2 -> Ojs.t) ->
                    ('R -> Ojs.t) -> ('A, 'A0, 'A1, 'A2, 'R) t -> Ojs.t
          =
          fun (type __A) ->
            fun (type __A0) ->
              fun (type __A1) ->
                fun (type __A2) ->
                  fun (type __R) ->
                    fun (__A_to_js : __A -> Ojs.t) ->
                      fun (__A0_to_js : __A0 -> Ojs.t) ->
                        fun (__A1_to_js : __A1 -> Ojs.t) ->
                          fun (__A2_to_js : __A2 -> Ojs.t) ->
                            fun (__R_to_js : __R -> Ojs.t) ->
                              fun (x5154 : Ojs.t) -> x5154
        let (create :
          ('A, 'A0, 'A1, 'A2, 'R) t ->
            arg0:'A0 -> arg1:'A1 -> arg2:'A2 -> args:any list -> 'R)
          =
          fun (x5162 : ('A, 'A0, 'A1, 'A2, 'R) t) ->
            fun ~arg0:(x5156 : 'A0) ->
              fun ~arg1:(x5157 : 'A1) ->
                fun ~arg2:(x5158 : 'A2) ->
                  fun ~args:(x5159 : any list) ->
                    Obj.magic
                      (Ojs.new_obj_arr
                         (t_to_js Obj.magic Obj.magic Obj.magic Obj.magic
                            Obj.magic x5162)
                         (let x5160 =
                            Ojs.new_obj
                              (Ojs.get_prop_ascii Ojs.global "Array") 
                              [||] in
                          ignore
                            (Ojs.call x5160 "push" [|(Obj.magic x5156)|]);
                          ignore
                            (Ojs.call x5160 "push" [|(Obj.magic x5157)|]);
                          ignore
                            (Ojs.call x5160 "push" [|(Obj.magic x5158)|]);
                          List.iter
                            (fun (x5161 : any) ->
                               ignore
                                 (Ojs.call x5160 "push" [|(any_to_js x5161)|]))
                            x5159;
                          x5160))
        module Make(A:Ojs.T)(A0:Ojs.T)(A1:Ojs.T)(A2:Ojs.T)(R:Ojs.T) =
          struct
            type ('A, 'A0, 'A1, 'A2, 'R) parent = ('A, 'A0, 'A1, 'A2, 'R) t
            let rec parent_of_js :
              'A 'A0 'A1 'A2 'R .
                (Ojs.t -> 'A) ->
                  (Ojs.t -> 'A0) ->
                    (Ojs.t -> 'A1) ->
                      (Ojs.t -> 'A2) ->
                        (Ojs.t -> 'R) ->
                          Ojs.t -> ('A, 'A0, 'A1, 'A2, 'R) parent
              =
              fun (type __A) ->
                fun (type __A0) ->
                  fun (type __A1) ->
                    fun (type __A2) ->
                      fun (type __R) ->
                        fun (__A_of_js : Ojs.t -> __A) ->
                          fun (__A0_of_js : Ojs.t -> __A0) ->
                            fun (__A1_of_js : Ojs.t -> __A1) ->
                              fun (__A2_of_js : Ojs.t -> __A2) ->
                                fun (__R_of_js : Ojs.t -> __R) ->
                                  fun (x5174 : Ojs.t) ->
                                    t_of_js __A_of_js __A0_of_js __A1_of_js
                                      __A2_of_js __R_of_js x5174
            and parent_to_js :
              'A 'A0 'A1 'A2 'R .
                ('A -> Ojs.t) ->
                  ('A0 -> Ojs.t) ->
                    ('A1 -> Ojs.t) ->
                      ('A2 -> Ojs.t) ->
                        ('R -> Ojs.t) ->
                          ('A, 'A0, 'A1, 'A2, 'R) parent -> Ojs.t
              =
              fun (type __A) ->
                fun (type __A0) ->
                  fun (type __A1) ->
                    fun (type __A2) ->
                      fun (type __R) ->
                        fun (__A_to_js : __A -> Ojs.t) ->
                          fun (__A0_to_js : __A0 -> Ojs.t) ->
                            fun (__A1_to_js : __A1 -> Ojs.t) ->
                              fun (__A2_to_js : __A2 -> Ojs.t) ->
                                fun (__R_to_js : __R -> Ojs.t) ->
                                  fun
                                    (x5168 : (__A, __A0, __A1, __A2, __R) t)
                                    ->
                                    t_to_js __A_to_js __A0_to_js __A1_to_js
                                      __A2_to_js __R_to_js x5168
            type t = (A.t, A0.t, A1.t, A2.t, R.t) parent
            let rec t_of_js : Ojs.t -> t =
              fun (x5186 : Ojs.t) ->
                parent_of_js A.t_of_js A0.t_of_js A1.t_of_js A2.t_of_js
                  R.t_of_js x5186
            and t_to_js : t -> Ojs.t =
              fun (x5180 : (A.t, A0.t, A1.t, A2.t, R.t) parent) ->
                parent_to_js A.t_to_js A0.t_to_js A1.t_to_js A2.t_to_js
                  R.t_to_js x5180
            let (create :
              t ->
                arg0:A0.t -> arg1:A1.t -> arg2:A2.t -> args:any list -> R.t)
              =
              fun (x5198 : t) ->
                fun ~arg0:(x5192 : A0.t) ->
                  fun ~arg1:(x5193 : A1.t) ->
                    fun ~arg2:(x5194 : A2.t) ->
                      fun ~args:(x5195 : any list) ->
                        R.t_of_js
                          (Ojs.new_obj_arr (t_to_js x5198)
                             (let x5196 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x5196 "push" [|(A0.t_to_js x5192)|]);
                              ignore
                                (Ojs.call x5196 "push" [|(A1.t_to_js x5193)|]);
                              ignore
                                (Ojs.call x5196 "push" [|(A2.t_to_js x5194)|]);
                              List.iter
                                (fun (x5197 : any) ->
                                   ignore
                                     (Ojs.call x5196 "push"
                                        [|(any_to_js x5197)|])) x5195;
                              x5196))
          end
      end
    module AnonymousInterface25 =
      struct
        type ('A, 'A0, 'A1, 'A2, 'A3, 'R) t = Ojs.t
        let rec t_of_js :
          'A 'A0 'A1 'A2 'A3 'R .
            (Ojs.t -> 'A) ->
              (Ojs.t -> 'A0) ->
                (Ojs.t -> 'A1) ->
                  (Ojs.t -> 'A2) ->
                    (Ojs.t -> 'A3) ->
                      (Ojs.t -> 'R) ->
                        Ojs.t -> ('A, 'A0, 'A1, 'A2, 'A3, 'R) t
          =
          fun (type __A) ->
            fun (type __A0) ->
              fun (type __A1) ->
                fun (type __A2) ->
                  fun (type __A3) ->
                    fun (type __R) ->
                      fun (__A_of_js : Ojs.t -> __A) ->
                        fun (__A0_of_js : Ojs.t -> __A0) ->
                          fun (__A1_of_js : Ojs.t -> __A1) ->
                            fun (__A2_of_js : Ojs.t -> __A2) ->
                              fun (__A3_of_js : Ojs.t -> __A3) ->
                                fun (__R_of_js : Ojs.t -> __R) ->
                                  fun (x5200 : Ojs.t) -> x5200
        and t_to_js :
          'A 'A0 'A1 'A2 'A3 'R .
            ('A -> Ojs.t) ->
              ('A0 -> Ojs.t) ->
                ('A1 -> Ojs.t) ->
                  ('A2 -> Ojs.t) ->
                    ('A3 -> Ojs.t) ->
                      ('R -> Ojs.t) ->
                        ('A, 'A0, 'A1, 'A2, 'A3, 'R) t -> Ojs.t
          =
          fun (type __A) ->
            fun (type __A0) ->
              fun (type __A1) ->
                fun (type __A2) ->
                  fun (type __A3) ->
                    fun (type __R) ->
                      fun (__A_to_js : __A -> Ojs.t) ->
                        fun (__A0_to_js : __A0 -> Ojs.t) ->
                          fun (__A1_to_js : __A1 -> Ojs.t) ->
                            fun (__A2_to_js : __A2 -> Ojs.t) ->
                              fun (__A3_to_js : __A3 -> Ojs.t) ->
                                fun (__R_to_js : __R -> Ojs.t) ->
                                  fun (x5199 : Ojs.t) -> x5199
        let (create :
          ('A, 'A0, 'A1, 'A2, 'A3, 'R) t ->
            arg0:'A0 ->
              arg1:'A1 -> arg2:'A2 -> arg3:'A3 -> args:any list -> 'R)
          =
          fun (x5208 : ('A, 'A0, 'A1, 'A2, 'A3, 'R) t) ->
            fun ~arg0:(x5201 : 'A0) ->
              fun ~arg1:(x5202 : 'A1) ->
                fun ~arg2:(x5203 : 'A2) ->
                  fun ~arg3:(x5204 : 'A3) ->
                    fun ~args:(x5205 : any list) ->
                      Obj.magic
                        (Ojs.new_obj_arr
                           (t_to_js Obj.magic Obj.magic Obj.magic Obj.magic
                              Obj.magic Obj.magic x5208)
                           (let x5206 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x5206 "push" [|(Obj.magic x5201)|]);
                            ignore
                              (Ojs.call x5206 "push" [|(Obj.magic x5202)|]);
                            ignore
                              (Ojs.call x5206 "push" [|(Obj.magic x5203)|]);
                            ignore
                              (Ojs.call x5206 "push" [|(Obj.magic x5204)|]);
                            List.iter
                              (fun (x5207 : any) ->
                                 ignore
                                   (Ojs.call x5206 "push"
                                      [|(any_to_js x5207)|])) x5205;
                            x5206))
        module Make(A:Ojs.T)(A0:Ojs.T)(A1:Ojs.T)(A2:Ojs.T)(A3:Ojs.T)(R:Ojs.T) =
          struct
            type ('A, 'A0, 'A1, 'A2, 'A3, 'R) parent =
              ('A, 'A0, 'A1, 'A2, 'A3, 'R) t
            let rec parent_of_js :
              'A 'A0 'A1 'A2 'A3 'R .
                (Ojs.t -> 'A) ->
                  (Ojs.t -> 'A0) ->
                    (Ojs.t -> 'A1) ->
                      (Ojs.t -> 'A2) ->
                        (Ojs.t -> 'A3) ->
                          (Ojs.t -> 'R) ->
                            Ojs.t -> ('A, 'A0, 'A1, 'A2, 'A3, 'R) parent
              =
              fun (type __A) ->
                fun (type __A0) ->
                  fun (type __A1) ->
                    fun (type __A2) ->
                      fun (type __A3) ->
                        fun (type __R) ->
                          fun (__A_of_js : Ojs.t -> __A) ->
                            fun (__A0_of_js : Ojs.t -> __A0) ->
                              fun (__A1_of_js : Ojs.t -> __A1) ->
                                fun (__A2_of_js : Ojs.t -> __A2) ->
                                  fun (__A3_of_js : Ojs.t -> __A3) ->
                                    fun (__R_of_js : Ojs.t -> __R) ->
                                      fun (x5222 : Ojs.t) ->
                                        t_of_js __A_of_js __A0_of_js
                                          __A1_of_js __A2_of_js __A3_of_js
                                          __R_of_js x5222
            and parent_to_js :
              'A 'A0 'A1 'A2 'A3 'R .
                ('A -> Ojs.t) ->
                  ('A0 -> Ojs.t) ->
                    ('A1 -> Ojs.t) ->
                      ('A2 -> Ojs.t) ->
                        ('A3 -> Ojs.t) ->
                          ('R -> Ojs.t) ->
                            ('A, 'A0, 'A1, 'A2, 'A3, 'R) parent -> Ojs.t
              =
              fun (type __A) ->
                fun (type __A0) ->
                  fun (type __A1) ->
                    fun (type __A2) ->
                      fun (type __A3) ->
                        fun (type __R) ->
                          fun (__A_to_js : __A -> Ojs.t) ->
                            fun (__A0_to_js : __A0 -> Ojs.t) ->
                              fun (__A1_to_js : __A1 -> Ojs.t) ->
                                fun (__A2_to_js : __A2 -> Ojs.t) ->
                                  fun (__A3_to_js : __A3 -> Ojs.t) ->
                                    fun (__R_to_js : __R -> Ojs.t) ->
                                      fun
                                        (x5215 :
                                          (__A, __A0, __A1, __A2, __A3, 
                                            __R) t)
                                        ->
                                        t_to_js __A_to_js __A0_to_js
                                          __A1_to_js __A2_to_js __A3_to_js
                                          __R_to_js x5215
            type t = (A.t, A0.t, A1.t, A2.t, A3.t, R.t) parent
            let rec t_of_js : Ojs.t -> t =
              fun (x5236 : Ojs.t) ->
                parent_of_js A.t_of_js A0.t_of_js A1.t_of_js A2.t_of_js
                  A3.t_of_js R.t_of_js x5236
            and t_to_js : t -> Ojs.t =
              fun (x5229 : (A.t, A0.t, A1.t, A2.t, A3.t, R.t) parent) ->
                parent_to_js A.t_to_js A0.t_to_js A1.t_to_js A2.t_to_js
                  A3.t_to_js R.t_to_js x5229
            let (create :
              t ->
                arg0:A0.t ->
                  arg1:A1.t -> arg2:A2.t -> arg3:A3.t -> args:any list -> R.t)
              =
              fun (x5250 : t) ->
                fun ~arg0:(x5243 : A0.t) ->
                  fun ~arg1:(x5244 : A1.t) ->
                    fun ~arg2:(x5245 : A2.t) ->
                      fun ~arg3:(x5246 : A3.t) ->
                        fun ~args:(x5247 : any list) ->
                          R.t_of_js
                            (Ojs.new_obj_arr (t_to_js x5250)
                               (let x5248 =
                                  Ojs.new_obj
                                    (Ojs.get_prop_ascii Ojs.global "Array")
                                    [||] in
                                ignore
                                  (Ojs.call x5248 "push"
                                     [|(A0.t_to_js x5243)|]);
                                ignore
                                  (Ojs.call x5248 "push"
                                     [|(A1.t_to_js x5244)|]);
                                ignore
                                  (Ojs.call x5248 "push"
                                     [|(A2.t_to_js x5245)|]);
                                ignore
                                  (Ojs.call x5248 "push"
                                     [|(A3.t_to_js x5246)|]);
                                List.iter
                                  (fun (x5249 : any) ->
                                     ignore
                                       (Ojs.call x5248 "push"
                                          [|(any_to_js x5249)|])) x5247;
                                x5248))
          end
      end
    type t = [ `Function  | `Function  | `NewableFunction ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x5252 : Ojs.t) -> t_of_js x5252
    and t_0_to_js : t_0 -> Ojs.t = fun (x5251 : t) -> t_to_js x5251
    type tags = [ `Function  | `Function  | `NewableFunction ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `NewableFunction ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x5255 : Ojs.t) -> intf_of_js __tags_of_js x5255
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x5253 : __tags intf) -> intf_to_js __tags_to_js x5253
    let (apply_ :
      'tags this -> this:'T AnonymousInterface43.t -> thisArg:'T -> unit) =
      fun (x5260 : 'tags this) ->
        fun ~this:(x5257 : 'T AnonymousInterface43.t) ->
          fun ~thisArg:(x5259 : 'T) ->
            ignore
              (Ojs.call (this_to_js Obj.magic x5260) "apply"
                 [|(AnonymousInterface43.t_to_js Obj.magic x5257);(Obj.magic
                                                                    x5259)|])
    let (apply_' :
      'tags this ->
        this:('A, 'T) AnonymousInterface36.t -> thisArg:'T -> args:'A -> unit)
      =
      fun (x5267 : 'tags this) ->
        fun ~this:(x5262 : ('A, 'T) AnonymousInterface36.t) ->
          fun ~thisArg:(x5265 : 'T) ->
            fun ~args:(x5266 : 'A) ->
              ignore
                (Ojs.call (this_to_js Obj.magic x5267) "apply"
                   [|(AnonymousInterface36.t_to_js Obj.magic Obj.magic x5262);(
                     Obj.magic x5265);(Obj.magic x5266)|])
    let (call :
      'tags this ->
        this:('A, 'T) AnonymousInterface36.t ->
          thisArg:'T -> args:any list -> unit)
      =
      fun (x5276 : 'tags this) ->
        fun ~this:(x5269 : ('A, 'T) AnonymousInterface36.t) ->
          fun ~thisArg:(x5270 : 'T) ->
            fun ~args:(x5271 : any list) ->
              ignore
                (let x5278 = this_to_js Obj.magic x5276 in
                 Ojs.call (Ojs.get_prop_ascii x5278 "call") "apply"
                   [|x5278;((let x5272 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x5272 "push"
                                  [|(AnonymousInterface36.t_to_js Obj.magic
                                       Obj.magic x5269)|]);
                             ignore
                               (Ojs.call x5272 "push" [|(Obj.magic x5270)|]);
                             List.iter
                               (fun (x5273 : any) ->
                                  ignore
                                    (Ojs.call x5272 "push"
                                       [|(any_to_js x5273)|])) x5271;
                             x5272))|])
    let (bind : 'tags this -> this:'T -> thisArg:any -> 'T) =
      fun (x5281 : 'tags this) ->
        fun ~this:(x5279 : 'T) ->
          fun ~thisArg:(x5280 : any) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic x5281) "bind"
                 [|(Obj.magic x5279);(any_to_js x5280)|])
    let (bind' :
      'tags this ->
        this:('A, 'A0, 'R) AnonymousInterface31.t ->
          thisArg:any -> arg0:'A0 -> ('A, 'R) AnonymousInterface33.t)
      =
      fun (x5289 : 'tags this) ->
        fun ~this:(x5283 : ('A, 'A0, 'R) AnonymousInterface31.t) ->
          fun ~thisArg:(x5287 : any) ->
            fun ~arg0:(x5288 : 'A0) ->
              AnonymousInterface33.t_of_js Obj.magic Obj.magic
                (Ojs.call (this_to_js Obj.magic x5289) "bind"
                   [|(AnonymousInterface31.t_to_js Obj.magic Obj.magic
                        Obj.magic x5283);(any_to_js x5287);(Obj.magic x5288)|])
    let (bind'' :
      'tags this ->
        this:('A, 'A0, 'A1, 'R) AnonymousInterface29.t ->
          thisArg:any ->
            arg0:'A0 -> arg1:'A1 -> ('A, 'R) AnonymousInterface33.t)
      =
      fun (x5301 : 'tags this) ->
        fun ~this:(x5293 : ('A, 'A0, 'A1, 'R) AnonymousInterface29.t) ->
          fun ~thisArg:(x5298 : any) ->
            fun ~arg0:(x5299 : 'A0) ->
              fun ~arg1:(x5300 : 'A1) ->
                AnonymousInterface33.t_of_js Obj.magic Obj.magic
                  (Ojs.call (this_to_js Obj.magic x5301) "bind"
                     [|(AnonymousInterface29.t_to_js Obj.magic Obj.magic
                          Obj.magic Obj.magic x5293);(any_to_js x5298);(
                       Obj.magic x5299);(Obj.magic x5300)|])
    let (bind''' :
      'tags this ->
        this:('A, 'A0, 'A1, 'A2, 'R) AnonymousInterface27.t ->
          thisArg:any ->
            arg0:'A0 ->
              arg1:'A1 -> arg2:'A2 -> ('A, 'R) AnonymousInterface33.t)
      =
      fun (x5315 : 'tags this) ->
        fun ~this:(x5305 : ('A, 'A0, 'A1, 'A2, 'R) AnonymousInterface27.t) ->
          fun ~thisArg:(x5311 : any) ->
            fun ~arg0:(x5312 : 'A0) ->
              fun ~arg1:(x5313 : 'A1) ->
                fun ~arg2:(x5314 : 'A2) ->
                  AnonymousInterface33.t_of_js Obj.magic Obj.magic
                    (Ojs.call (this_to_js Obj.magic x5315) "bind"
                       [|(AnonymousInterface27.t_to_js Obj.magic Obj.magic
                            Obj.magic Obj.magic Obj.magic x5305);(any_to_js
                                                                    x5311);(
                         Obj.magic x5312);(Obj.magic x5313);(Obj.magic x5314)|])
    let (bind'''' :
      'tags this ->
        this:('A, 'A0, 'A1, 'A2, 'A3, 'R) AnonymousInterface25.t ->
          thisArg:any ->
            arg0:'A0 ->
              arg1:'A1 ->
                arg2:'A2 -> arg3:'A3 -> ('A, 'R) AnonymousInterface33.t)
      =
      fun (x5331 : 'tags this) ->
        fun
          ~this:(x5319 : ('A, 'A0, 'A1, 'A2, 'A3, 'R) AnonymousInterface25.t)
          ->
          fun ~thisArg:(x5326 : any) ->
            fun ~arg0:(x5327 : 'A0) ->
              fun ~arg1:(x5328 : 'A1) ->
                fun ~arg2:(x5329 : 'A2) ->
                  fun ~arg3:(x5330 : 'A3) ->
                    AnonymousInterface33.t_of_js Obj.magic Obj.magic
                      (Ojs.call (this_to_js Obj.magic x5331) "bind"
                         [|(AnonymousInterface25.t_to_js Obj.magic Obj.magic
                              Obj.magic Obj.magic Obj.magic Obj.magic x5319);(
                           any_to_js x5326);(Obj.magic x5327);(Obj.magic
                                                                 x5328);(
                           Obj.magic x5329);(Obj.magic x5330)|])
    let (bind''''' :
      'tags this ->
        this:('AX, 'R) AnonymousInterface39.t ->
          thisArg:any -> args:'AX list -> ('AX, 'R) AnonymousInterface39.t)
      =
      fun (x5342 : 'tags this) ->
        fun ~this:(x5335 : ('AX, 'R) AnonymousInterface39.t) ->
          fun ~thisArg:(x5336 : any) ->
            fun ~args:(x5337 : 'AX list) ->
              AnonymousInterface39.t_of_js Obj.magic Obj.magic
                (let x5344 = this_to_js Obj.magic x5342 in
                 Ojs.call (Ojs.get_prop_ascii x5344 "bind") "apply"
                   [|x5344;((let x5338 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x5338 "push"
                                  [|(AnonymousInterface39.t_to_js Obj.magic
                                       Obj.magic x5335)|]);
                             ignore
                               (Ojs.call x5338 "push" [|(any_to_js x5336)|]);
                             List.iter
                               (fun (x5339 : 'AX) ->
                                  ignore
                                    (Ojs.call x5338 "push"
                                       [|(Obj.magic x5339)|])) x5337;
                             x5338))|])
    let cast_from = Obj.magic
  end
module TypedPropertyDescriptor =
  struct
    type 'T t = [ `TypedPropertyDescriptor of 'T ] intf
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun _T -> Obj.magic
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun _T -> Obj.magic
    type 'T t_1 = 'T t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 =
      fun (type __T) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x5349 : Ojs.t) -> t_of_js __T_of_js x5349
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t =
      fun (type __T) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x5347 : __T t) -> t_to_js __T_to_js x5347
    type 'T tags = [ `TypedPropertyDescriptor of 'T ]
    type 'T tags_1 = 'T tags
    type ('tags, 'T) this =
      'tags intf constraint 'tags = [> `TypedPropertyDescriptor of 'T ]
    let rec this_of_js :
      'tags 'T .
        (Ojs.t -> 'tags) -> (Ojs.t -> 'T) -> Ojs.t -> ('tags, 'T) this
      =
      fun (type __tags) ->
        fun (type __T) ->
          fun (__tags_of_js : Ojs.t -> __tags) ->
            fun (__T_of_js : Ojs.t -> __T) ->
              fun (x5353 : Ojs.t) -> intf_of_js __tags_of_js x5353
    and this_to_js :
      'tags 'T .
        ('tags -> Ojs.t) -> ('T -> Ojs.t) -> ('tags, 'T) this -> Ojs.t
      =
      fun (type __tags) ->
        fun (type __T) ->
          fun (__tags_to_js : __tags -> Ojs.t) ->
            fun (__T_to_js : __T -> Ojs.t) ->
              fun (x5351 : __tags intf) -> intf_to_js __tags_to_js x5351
    let (get_enumerable : ('tags, 'T) this -> bool option) =
      fun (x5355 : ('tags, 'T) this) ->
        Ojs.option_of_js Ojs.bool_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic Obj.magic x5355)
             "enumerable")
    let (set_enumerable : ('tags, 'T) this -> bool -> unit) =
      fun (x5359 : ('tags, 'T) this) ->
        fun (x5360 : bool) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic Obj.magic x5359)
            "enumerable" (Ojs.bool_to_js x5360)
    let (get_configurable : ('tags, 'T) this -> bool option) =
      fun (x5363 : ('tags, 'T) this) ->
        Ojs.option_of_js Ojs.bool_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic Obj.magic x5363)
             "configurable")
    let (set_configurable : ('tags, 'T) this -> bool -> unit) =
      fun (x5367 : ('tags, 'T) this) ->
        fun (x5368 : bool) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic Obj.magic x5367)
            "configurable" (Ojs.bool_to_js x5368)
    let (get_writable : ('tags, 'T) this -> bool option) =
      fun (x5371 : ('tags, 'T) this) ->
        Ojs.option_of_js Ojs.bool_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic Obj.magic x5371)
             "writable")
    let (set_writable : ('tags, 'T) this -> bool -> unit) =
      fun (x5375 : ('tags, 'T) this) ->
        fun (x5376 : bool) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic Obj.magic x5375)
            "writable" (Ojs.bool_to_js x5376)
    let (get_value : ('tags, 'T) this -> 'T option) =
      fun (x5379 : ('tags, 'T) this) ->
        Ojs.option_of_js Obj.magic
          (Ojs.get_prop_ascii (this_to_js Obj.magic Obj.magic x5379) "value")
    let (set_value : ('tags, 'T) this -> 'T -> unit) =
      fun (x5383 : ('tags, 'T) this) ->
        fun (x5384 : 'T) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic Obj.magic x5383) "value"
            (Obj.magic x5384)
    let (get_ : ('tags, 'T) this -> 'T) =
      fun (x5387 : ('tags, 'T) this) ->
        Obj.magic
          (Ojs.call (this_to_js Obj.magic Obj.magic x5387) "get" [||])
    let (set_ : ('tags, 'T) this -> value:'T -> unit) =
      fun (x5391 : ('tags, 'T) this) ->
        fun ~value:(x5390 : 'T) ->
          ignore
            (Ojs.call (this_to_js Obj.magic Obj.magic x5391) "set"
               [|(Obj.magic x5390)|])
    let (create :
      ?enumerable:bool ->
        ?configurable:bool ->
          ?writable:bool ->
            ?value:'T ->
              ?get_:(unit -> 'T) -> ?set_:('T -> unit) -> unit -> 'T t)
      =
      fun ?enumerable:(x5394 : bool option) ->
        fun ?configurable:(x5395 : bool option) ->
          fun ?writable:(x5396 : bool option) ->
            fun ?value:(x5397 : 'T option) ->
              fun ?get_:(x5398 : (unit -> 'T) option) ->
                fun ?set_:(x5399 : ('T -> unit) option) ->
                  fun () ->
                    let x5400 = Ojs.empty_obj () in
                    (match x5394 with
                     | Some x5408 ->
                         Ojs.set_prop_ascii x5400 "enumerable"
                           (Ojs.bool_to_js x5408)
                     | None -> ());
                    (match x5395 with
                     | Some x5407 ->
                         Ojs.set_prop_ascii x5400 "configurable"
                           (Ojs.bool_to_js x5407)
                     | None -> ());
                    (match x5396 with
                     | Some x5406 ->
                         Ojs.set_prop_ascii x5400 "writable"
                           (Ojs.bool_to_js x5406)
                     | None -> ());
                    (match x5397 with
                     | Some x5405 ->
                         Ojs.set_prop_ascii x5400 "value" (Obj.magic x5405)
                     | None -> ());
                    (match x5398 with
                     | Some x5404 ->
                         Ojs.set_prop_ascii x5400 "get"
                           (Ojs.fun_to_js 1 (fun _ -> Obj.magic (x5404 ())))
                     | None -> ());
                    (match x5399 with
                     | Some x5402 ->
                         Ojs.set_prop_ascii x5400 "set"
                           (Ojs.fun_to_js 1
                              (fun (x5403 : Ojs.t) -> x5402 (Obj.magic x5403)))
                     | None -> ());
                    t_of_js Obj.magic x5400
    let cast_from = Obj.magic
  end
module MethodDecorator =
  struct
    type t = [ `MethodDecorator ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x5410 : Ojs.t) -> t_of_js x5410
    and t_0_to_js : t_0 -> Ojs.t = fun (x5409 : t) -> t_to_js x5409
    type tags = [ `MethodDecorator ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `MethodDecorator ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x5413 : Ojs.t) -> intf_of_js __tags_of_js x5413
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x5411 : __tags intf) -> intf_to_js __tags_to_js x5411
    let (apply :
      'tags this ->
        target:Object.t ->
          propertyKey:[ `U1 of string  | `U2 of symbol ] ->
            descriptor:'T TypedPropertyDescriptor.t ->
              (unit, 'T TypedPropertyDescriptor.t) union2)
      =
      fun (x5421 : 'tags this) ->
        fun ~target:(x5415 : Object.t) ->
          fun ~propertyKey:(x5416 : [ `U1 of string  | `U2 of symbol ]) ->
            fun ~descriptor:(x5419 : 'T TypedPropertyDescriptor.t) ->
              union2_of_js Ojs.unit_of_js
                (fun (x5424 : Ojs.t) ->
                   TypedPropertyDescriptor.t_of_js Obj.magic x5424)
                (Ojs.apply (this_to_js Obj.magic x5421)
                   [|(Object.t_to_js x5415);((match x5416 with
                                              | `U1 x5417 ->
                                                  Ojs.string_to_js x5417
                                              | `U2 x5418 ->
                                                  symbol_to_js x5418));(
                     TypedPropertyDescriptor.t_to_js Obj.magic x5419)|])
    let cast_from = Obj.magic
  end
module Math =
  struct
    let (clz32 : float -> float) =
      fun (x5426 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "clz32"
             [|(Ojs.float_to_js x5426)|])
    let (imul : x:float -> y:float -> float) =
      fun ~x:(x5427 : float) ->
        fun ~y:(x5428 : float) ->
          Ojs.float_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "imul"
               [|(Ojs.float_to_js x5427);(Ojs.float_to_js x5428)|])
    let (sign : float -> float) =
      fun (x5429 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "sign"
             [|(Ojs.float_to_js x5429)|])
    let (log10 : float -> float) =
      fun (x5430 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "log10"
             [|(Ojs.float_to_js x5430)|])
    let (log2 : float -> float) =
      fun (x5431 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "log2"
             [|(Ojs.float_to_js x5431)|])
    let (log1p : float -> float) =
      fun (x5432 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "log1p"
             [|(Ojs.float_to_js x5432)|])
    let (expm1 : float -> float) =
      fun (x5433 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "expm1"
             [|(Ojs.float_to_js x5433)|])
    let (cosh : float -> float) =
      fun (x5434 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "cosh"
             [|(Ojs.float_to_js x5434)|])
    let (sinh : float -> float) =
      fun (x5435 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "sinh"
             [|(Ojs.float_to_js x5435)|])
    let (tanh : float -> float) =
      fun (x5436 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "tanh"
             [|(Ojs.float_to_js x5436)|])
    let (acosh : float -> float) =
      fun (x5437 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "acosh"
             [|(Ojs.float_to_js x5437)|])
    let (asinh : float -> float) =
      fun (x5438 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "asinh"
             [|(Ojs.float_to_js x5438)|])
    let (atanh : float -> float) =
      fun (x5439 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "atanh"
             [|(Ojs.float_to_js x5439)|])
    let (hypot : float list -> float) =
      fun (x5440 : float list) ->
        Ojs.float_of_js
          (let x5443 = Ojs.get_prop_ascii Ojs.global "Math" in
           Ojs.call (Ojs.get_prop_ascii x5443 "hypot") "apply"
             [|x5443;((let x5441 =
                         Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                           [||] in
                       List.iter
                         (fun (x5442 : float) ->
                            ignore
                              (Ojs.call x5441 "push"
                                 [|(Ojs.float_to_js x5442)|])) x5440;
                       x5441))|])
    let (trunc : float -> float) =
      fun (x5444 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "trunc"
             [|(Ojs.float_to_js x5444)|])
    let (fround : float -> float) =
      fun (x5445 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "fround"
             [|(Ojs.float_to_js x5445)|])
    let (cbrt : float -> float) =
      fun (x5446 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "cbrt"
             [|(Ojs.float_to_js x5446)|])
    let (e : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Math") "E")
    let (ln10 : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Math") "LN10")
    let (ln2 : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Math") "LN2")
    let (log2e : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Math") "LOG2E")
    let (log10e : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Math") "LOG10E")
    let (pi : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Math") "PI")
    let (sqrt1_2 : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Math")
             "SQRT1_2")
    let (sqrt2 : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Math") "SQRT2")
    let (abs : float -> float) =
      fun (x5447 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "abs"
             [|(Ojs.float_to_js x5447)|])
    let (acos : float -> float) =
      fun (x5448 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "acos"
             [|(Ojs.float_to_js x5448)|])
    let (asin : float -> float) =
      fun (x5449 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "asin"
             [|(Ojs.float_to_js x5449)|])
    let (atan : float -> float) =
      fun (x5450 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "atan"
             [|(Ojs.float_to_js x5450)|])
    let (atan2 : y:float -> x:float -> float) =
      fun ~y:(x5451 : float) ->
        fun ~x:(x5452 : float) ->
          Ojs.float_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "atan2"
               [|(Ojs.float_to_js x5451);(Ojs.float_to_js x5452)|])
    let (ceil : float -> float) =
      fun (x5453 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "ceil"
             [|(Ojs.float_to_js x5453)|])
    let (cos : float -> float) =
      fun (x5454 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "cos"
             [|(Ojs.float_to_js x5454)|])
    let (exp : float -> float) =
      fun (x5455 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "exp"
             [|(Ojs.float_to_js x5455)|])
    let (floor : float -> float) =
      fun (x5456 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "floor"
             [|(Ojs.float_to_js x5456)|])
    let (log : float -> float) =
      fun (x5457 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "log"
             [|(Ojs.float_to_js x5457)|])
    let (max : float list -> float) =
      fun (x5458 : float list) ->
        Ojs.float_of_js
          (let x5461 = Ojs.get_prop_ascii Ojs.global "Math" in
           Ojs.call (Ojs.get_prop_ascii x5461 "max") "apply"
             [|x5461;((let x5459 =
                         Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                           [||] in
                       List.iter
                         (fun (x5460 : float) ->
                            ignore
                              (Ojs.call x5459 "push"
                                 [|(Ojs.float_to_js x5460)|])) x5458;
                       x5459))|])
    let (min : float list -> float) =
      fun (x5462 : float list) ->
        Ojs.float_of_js
          (let x5465 = Ojs.get_prop_ascii Ojs.global "Math" in
           Ojs.call (Ojs.get_prop_ascii x5465 "min") "apply"
             [|x5465;((let x5463 =
                         Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                           [||] in
                       List.iter
                         (fun (x5464 : float) ->
                            ignore
                              (Ojs.call x5463 "push"
                                 [|(Ojs.float_to_js x5464)|])) x5462;
                       x5463))|])
    let (pow : x:float -> y:float -> float) =
      fun ~x:(x5466 : float) ->
        fun ~y:(x5467 : float) ->
          Ojs.float_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "pow"
               [|(Ojs.float_to_js x5466);(Ojs.float_to_js x5467)|])
    let (random : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "random" [||])
    let (round : float -> float) =
      fun (x5468 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "round"
             [|(Ojs.float_to_js x5468)|])
    let (sin : float -> float) =
      fun (x5469 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "sin"
             [|(Ojs.float_to_js x5469)|])
    let (sqrt : float -> float) =
      fun (x5470 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "sqrt"
             [|(Ojs.float_to_js x5470)|])
    let (tan : float -> float) =
      fun (x5471 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "tan"
             [|(Ojs.float_to_js x5471)|])
  end
module Map =
  struct
    type ('K, 'V) t =
      [ `Map of ('K * 'V)  | ('K * 'V) IterableIterator.tags_1] intf
    let rec t_of_js :
      'K 'V . (Ojs.t -> 'K) -> (Ojs.t -> 'V) -> Ojs.t -> ('K, 'V) t =
      fun _K -> fun _V -> Obj.magic
    and t_to_js :
      'K 'V . ('K -> Ojs.t) -> ('V -> Ojs.t) -> ('K, 'V) t -> Ojs.t =
      fun _K -> fun _V -> Obj.magic
    type ('K, 'V) t_2 = ('K, 'V) t
    let rec t_2_of_js :
      'K 'V . (Ojs.t -> 'K) -> (Ojs.t -> 'V) -> Ojs.t -> ('K, 'V) t_2 =
      fun (type __K) ->
        fun (type __V) ->
          fun (__K_of_js : Ojs.t -> __K) ->
            fun (__V_of_js : Ojs.t -> __V) ->
              fun (x5475 : Ojs.t) -> t_of_js __K_of_js __V_of_js x5475
    and t_2_to_js :
      'K 'V . ('K -> Ojs.t) -> ('V -> Ojs.t) -> ('K, 'V) t_2 -> Ojs.t =
      fun (type __K) ->
        fun (type __V) ->
          fun (__K_to_js : __K -> Ojs.t) ->
            fun (__V_to_js : __V -> Ojs.t) ->
              fun (x5472 : (__K, __V) t) -> t_to_js __K_to_js __V_to_js x5472
    type ('K, 'V) tags =
      [ `Map of ('K * 'V)  | ('K * 'V) IterableIterator.tags_1]
    type ('K, 'V) tags_2 = ('K, 'V) tags
    type ('tags, 'K, 'V) this =
      'tags intf constraint 'tags = [> `Map of ('K * 'V) ]
    let rec this_of_js :
      'tags 'K 'V .
        (Ojs.t -> 'tags) ->
          (Ojs.t -> 'K) -> (Ojs.t -> 'V) -> Ojs.t -> ('tags, 'K, 'V) this
      =
      fun (type __tags) ->
        fun (type __K) ->
          fun (type __V) ->
            fun (__tags_of_js : Ojs.t -> __tags) ->
              fun (__K_of_js : Ojs.t -> __K) ->
                fun (__V_of_js : Ojs.t -> __V) ->
                  fun (x5480 : Ojs.t) -> intf_of_js __tags_of_js x5480
    and this_to_js :
      'tags 'K 'V .
        ('tags -> Ojs.t) ->
          ('K -> Ojs.t) -> ('V -> Ojs.t) -> ('tags, 'K, 'V) this -> Ojs.t
      =
      fun (type __tags) ->
        fun (type __K) ->
          fun (type __V) ->
            fun (__tags_to_js : __tags -> Ojs.t) ->
              fun (__K_to_js : __K -> Ojs.t) ->
                fun (__V_to_js : __V -> Ojs.t) ->
                  fun (x5478 : __tags intf) -> intf_to_js __tags_to_js x5478
    let (entries : ('tags, 'K, 'V) this -> ('K * 'V) IterableIterator.t) =
      fun (x5482 : ('tags, 'K, 'V) this) ->
        IterableIterator.t_of_js
          (fun (x5486 : Ojs.t) ->
             let x5487 = x5486 in
             ((Obj.magic (Ojs.array_get x5487 0)),
               (Obj.magic (Ojs.array_get x5487 1))))
          (Ojs.call (this_to_js Obj.magic Obj.magic Obj.magic x5482)
             "entries" [||])
    let (keys : ('tags, 'K, 'V) this -> 'K IterableIterator.t) =
      fun (x5488 : ('tags, 'K, 'V) this) ->
        IterableIterator.t_of_js Obj.magic
          (Ojs.call (this_to_js Obj.magic Obj.magic Obj.magic x5488) "keys"
             [||])
    let (values : ('tags, 'K, 'V) this -> 'V IterableIterator.t) =
      fun (x5493 : ('tags, 'K, 'V) this) ->
        IterableIterator.t_of_js Obj.magic
          (Ojs.call (this_to_js Obj.magic Obj.magic Obj.magic x5493) "values"
             [||])
    let (clear : ('tags, 'K, 'V) this -> unit) =
      fun (x5498 : ('tags, 'K, 'V) this) ->
        ignore
          (Ojs.call (this_to_js Obj.magic Obj.magic Obj.magic x5498) "clear"
             [||])
    let (delete : ('tags, 'K, 'V) this -> key:'K -> bool) =
      fun (x5503 : ('tags, 'K, 'V) this) ->
        fun ~key:(x5502 : 'K) ->
          Ojs.bool_of_js
            (Ojs.call (this_to_js Obj.magic Obj.magic Obj.magic x5503)
               "delete" [|(Obj.magic x5502)|])
    let (forEach :
      ('tags, 'K, 'V) this ->
        callbackfn:(value:'V -> key:'K -> map:('K, 'V) t -> unit) ->
          ?thisArg:any -> unit -> unit)
      =
      fun (x5516 : ('tags, 'K, 'V) this) ->
        fun
          ~callbackfn:(x5507 : value:'V -> key:'K -> map:('K, 'V) t -> unit)
          ->
          fun ?thisArg:(x5508 : any option) ->
            fun () ->
              ignore
                (let x5520 = this_to_js Obj.magic Obj.magic Obj.magic x5516 in
                 Ojs.call (Ojs.get_prop_ascii x5520 "forEach") "apply"
                   [|x5520;((let x5509 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x5509 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x5511 : Ojs.t) ->
                                          fun (x5512 : Ojs.t) ->
                                            fun (x5513 : Ojs.t) ->
                                              x5507 ~value:(Obj.magic x5511)
                                                ~key:(Obj.magic x5512)
                                                ~map:(t_of_js Obj.magic
                                                        Obj.magic x5513)))|]);
                             (match x5508 with
                              | Some x5510 ->
                                  ignore
                                    (Ojs.call x5509 "push"
                                       [|(any_to_js x5510)|])
                              | None -> ());
                             x5509))|])
    let (get_ : ('tags, 'K, 'V) this -> key:'K -> 'V option) =
      fun (x5522 : ('tags, 'K, 'V) this) ->
        fun ~key:(x5521 : 'K) ->
          Ojs.option_of_js Obj.magic
            (Ojs.call (this_to_js Obj.magic Obj.magic Obj.magic x5522) "get"
               [|(Obj.magic x5521)|])
    let (has : ('tags, 'K, 'V) this -> key:'K -> bool) =
      fun (x5528 : ('tags, 'K, 'V) this) ->
        fun ~key:(x5527 : 'K) ->
          Ojs.bool_of_js
            (Ojs.call (this_to_js Obj.magic Obj.magic Obj.magic x5528) "has"
               [|(Obj.magic x5527)|])
    let (set_ :
      ('tags, 'K, 'V) this -> key:'K -> value:'V -> ('tags, 'K, 'V) this) =
      fun (x5534 : ('tags, 'K, 'V) this) ->
        fun ~key:(x5532 : 'K) ->
          fun ~value:(x5533 : 'V) ->
            this_of_js Obj.magic Obj.magic Obj.magic
              (Ojs.call (this_to_js Obj.magic Obj.magic Obj.magic x5534)
                 "set" [|(Obj.magic x5532);(Obj.magic x5533)|])
    let (get_size : ('tags, 'K, 'V) this -> float) =
      fun (x5541 : ('tags, 'K, 'V) this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii
             (this_to_js Obj.magic Obj.magic Obj.magic x5541) "size")
    let (create : unit -> (any, any) t) =
      fun () ->
        t_of_js any_of_js any_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Map") [||])
    let (create' :
      ?iterable:('K * 'V) Iterable.t option -> unit -> ('K, 'V) t) =
      fun ?iterable:(x5547 : ('K * 'V) Iterable.t option option) ->
        fun () ->
          t_of_js Obj.magic Obj.magic
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "Map")
               (let x5548 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x5547 with
                 | Some x5549 ->
                     ignore
                       (Ojs.call x5548 "push"
                          [|(Ojs.option_to_js
                               (fun (x5550 : ('K * 'V) Iterable.t) ->
                                  Iterable.t_to_js
                                    (fun (x5551 : ('K * 'V)) ->
                                       let (x5552, x5553) = x5551 in
                                       let x5554 = Ojs.array_make 2 in
                                       Ojs.array_set x5554 0
                                         (Obj.magic x5552);
                                       Ojs.array_set x5554 1
                                         (Obj.magic x5553);
                                       x5554) x5550) x5549)|])
                 | None -> ());
                x5548))
    let (create'' : unit -> (any, any) t) =
      fun () ->
        t_of_js any_of_js any_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Map") [||])
    let (create''' : ?entries:('K * 'V) list option -> unit -> ('K, 'V) t) =
      fun ?entries:(x5559 : ('K * 'V) list option option) ->
        fun () ->
          t_of_js Obj.magic Obj.magic
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "Map")
               (let x5560 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x5559 with
                 | Some x5561 ->
                     ignore
                       (Ojs.call x5560 "push"
                          [|(Ojs.option_to_js
                               (fun (x5562 : ('K * 'V) list) ->
                                  Ojs.list_to_js
                                    (fun (x5563 : ('K * 'V)) ->
                                       let (x5564, x5565) = x5563 in
                                       let x5566 = Ojs.array_make 2 in
                                       Ojs.array_set x5566 0
                                         (Obj.magic x5564);
                                       Ojs.array_set x5566 1
                                         (Obj.magic x5565);
                                       x5566) x5562) x5561)|])
                 | None -> ());
                x5560))
    let (prototype : unit -> (any, any) t) =
      fun () ->
        t_of_js any_of_js any_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Map")
             "prototype")
    let cast_from = Obj.magic
  end
module Lowercase =
  struct
    type 'S t = Ojs.t
    let rec t_of_js : 'S . (Ojs.t -> 'S) -> Ojs.t -> 'S t =
      fun (type __S) ->
        fun (__S_of_js : Ojs.t -> __S) -> fun (x5572 : Ojs.t) -> x5572
    and t_to_js : 'S . ('S -> Ojs.t) -> 'S t -> Ojs.t =
      fun (type __S) ->
        fun (__S_to_js : __S -> Ojs.t) -> fun (x5571 : Ojs.t) -> x5571
    type 'S t_1 = 'S t
    let rec t_1_of_js : 'S . (Ojs.t -> 'S) -> Ojs.t -> 'S t_1 =
      fun (type __S) ->
        fun (__S_of_js : Ojs.t -> __S) ->
          fun (x5575 : Ojs.t) -> t_of_js __S_of_js x5575
    and t_1_to_js : 'S . ('S -> Ojs.t) -> 'S t_1 -> Ojs.t =
      fun (type __S) ->
        fun (__S_to_js : __S -> Ojs.t) ->
          fun (x5573 : __S t) -> t_to_js __S_to_js x5573
  end
module JSON =
  struct
    let (parse :
      text:string ->
        ?reviver:(this:any -> key:string -> value:any -> any) -> unit -> any)
      =
      fun ~text:(x5577 : string) ->
        fun
          ?reviver:(x5578 :
                     (this:any -> key:string -> value:any -> any) option)
          ->
          fun () ->
            any_of_js
              (let x5584 = Ojs.get_prop_ascii Ojs.global "JSON" in
               Ojs.call (Ojs.get_prop_ascii x5584 "parse") "apply"
                 [|x5584;((let x5579 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           ignore
                             (Ojs.call x5579 "push"
                                [|(Ojs.string_to_js x5577)|]);
                           (match x5578 with
                            | Some x5580 ->
                                ignore
                                  (Ojs.call x5579 "push"
                                     [|(Ojs.fun_to_js 3
                                          (fun (x5581 : Ojs.t) ->
                                             fun (x5582 : Ojs.t) ->
                                               fun (x5583 : Ojs.t) ->
                                                 any_to_js
                                                   (x5580
                                                      ~this:(any_of_js x5581)
                                                      ~key:(Ojs.string_of_js
                                                              x5582)
                                                      ~value:(any_of_js x5583))))|])
                            | None -> ());
                           x5579))|])
    let (stringify :
      value:any ->
        ?replacer:(this:any -> key:string -> value:any -> any) ->
          ?space:[ `U1 of string  | `U2 of float ] -> unit -> string)
      =
      fun ~value:(x5585 : any) ->
        fun
          ?replacer:(x5586 :
                      (this:any -> key:string -> value:any -> any) option)
          ->
          fun ?space:(x5587 : [ `U1 of string  | `U2 of float ] option) ->
            fun () ->
              Ojs.string_of_js
                (let x5596 = Ojs.get_prop_ascii Ojs.global "JSON" in
                 Ojs.call (Ojs.get_prop_ascii x5596 "stringify") "apply"
                   [|x5596;((let x5588 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x5588 "push" [|(any_to_js x5585)|]);
                             (match x5586 with
                              | Some x5592 ->
                                  ignore
                                    (Ojs.call x5588 "push"
                                       [|(Ojs.fun_to_js 3
                                            (fun (x5593 : Ojs.t) ->
                                               fun (x5594 : Ojs.t) ->
                                                 fun (x5595 : Ojs.t) ->
                                                   any_to_js
                                                     (x5592
                                                        ~this:(any_of_js
                                                                 x5593)
                                                        ~key:(Ojs.string_of_js
                                                                x5594)
                                                        ~value:(any_of_js
                                                                  x5595))))|])
                              | None -> ());
                             (match x5587 with
                              | Some x5589 ->
                                  ignore
                                    (Ojs.call x5588 "push"
                                       [|((match x5589 with
                                           | `U1 x5590 ->
                                               Ojs.string_to_js x5590
                                           | `U2 x5591 ->
                                               Ojs.float_to_js x5591))|])
                              | None -> ());
                             x5588))|])
    let (stringify' :
      value:any ->
        ?replacer:[ `U1 of float  | `U2 of string ] list option ->
          ?space:[ `U1 of string  | `U2 of float ] -> unit -> string)
      =
      fun ~value:(x5597 : any) ->
        fun
          ?replacer:(x5598 :
                      [ `U1 of float  | `U2 of string ] list option option)
          ->
          fun ?space:(x5599 : [ `U1 of string  | `U2 of float ] option) ->
            fun () ->
              Ojs.string_of_js
                (let x5609 = Ojs.get_prop_ascii Ojs.global "JSON" in
                 Ojs.call (Ojs.get_prop_ascii x5609 "stringify") "apply"
                   [|x5609;((let x5600 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x5600 "push" [|(any_to_js x5597)|]);
                             (match x5598 with
                              | Some x5604 ->
                                  ignore
                                    (Ojs.call x5600 "push"
                                       [|(Ojs.option_to_js
                                            (fun
                                               (x5605 :
                                                 [ `U1 of float 
                                                 | `U2 of string ] list)
                                               ->
                                               Ojs.list_to_js
                                                 (fun
                                                    (x5606 :
                                                      [ `U1 of float 
                                                      | `U2 of string ])
                                                    ->
                                                    match x5606 with
                                                    | `U1 x5607 ->
                                                        Ojs.float_to_js x5607
                                                    | `U2 x5608 ->
                                                        Ojs.string_to_js
                                                          x5608) x5605) x5604)|])
                              | None -> ());
                             (match x5599 with
                              | Some x5601 ->
                                  ignore
                                    (Ojs.call x5600 "push"
                                       [|((match x5601 with
                                           | `U1 x5602 ->
                                               Ojs.string_to_js x5602
                                           | `U2 x5603 ->
                                               Ojs.float_to_js x5603))|])
                              | None -> ());
                             x5600))|])
  end
module InstanceType =
  struct
    module AnonymousInterface8 =
      struct
        type t = Ojs.t
        let rec t_of_js : Ojs.t -> t = fun (x5611 : Ojs.t) -> x5611
        and t_to_js : t -> Ojs.t = fun (x5610 : Ojs.t) -> x5610
        let (create : t -> args:any list -> any) =
          fun (x5615 : t) ->
            fun ~args:(x5612 : any list) ->
              any_of_js
                (Ojs.new_obj_arr (t_to_js x5615)
                   (let x5613 =
                      Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                        [||] in
                    List.iter
                      (fun (x5614 : any) ->
                         ignore (Ojs.call x5613 "push" [|(any_to_js x5614)|]))
                      x5612;
                    x5613))
      end
    type 'T t = any
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun (type __T) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x5617 : Ojs.t) -> any_of_js x5617
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t =
      fun (type __T) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x5616 : any) -> any_to_js x5616
    type 'T t_1 = 'T t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 =
      fun (type __T) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x5620 : Ojs.t) -> t_of_js __T_of_js x5620
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t =
      fun (type __T) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x5618 : __T t) -> t_to_js __T_to_js x5618
  end
module ImportMeta =
  struct
    type t = [ `ImportMeta ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x5623 : Ojs.t) -> t_of_js x5623
    and t_0_to_js : t_0 -> Ojs.t = fun (x5622 : t) -> t_to_js x5622
    type tags = [ `ImportMeta ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `ImportMeta ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x5626 : Ojs.t) -> intf_of_js __tags_of_js x5626
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x5624 : __tags intf) -> intf_to_js __tags_to_js x5624
    let cast_from = Obj.magic
  end
module ImportAssertions =
  struct
    type t = [ `ImportAssertions ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x5629 : Ojs.t) -> t_of_js x5629
    and t_0_to_js : t_0 -> Ojs.t = fun (x5628 : t) -> t_to_js x5628
    type tags = [ `ImportAssertions ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `ImportAssertions ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x5632 : Ojs.t) -> intf_of_js __tags_of_js x5632
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x5630 : __tags intf) -> intf_to_js __tags_to_js x5630
    let (get : 'tags this -> string -> string) =
      fun (x5634 : 'tags this) ->
        fun (x5636 : string) ->
          Ojs.string_of_js
            (Ojs.get_prop (this_to_js Obj.magic x5634)
               (Ojs.string_to_js x5636))
    let (set : 'tags this -> string -> string -> unit) =
      fun (x5637 : 'tags this) ->
        fun (x5639 : string) ->
          fun (x5640 : string) ->
            Ojs.set_prop (this_to_js Obj.magic x5637)
              (Ojs.string_to_js x5639) (Ojs.string_to_js x5640)
    let cast_from = Obj.magic
  end
module ImportCallOptions =
  struct
    type t = [ `ImportCallOptions ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x5642 : Ojs.t) -> t_of_js x5642
    and t_0_to_js : t_0 -> Ojs.t = fun (x5641 : t) -> t_to_js x5641
    type tags = [ `ImportCallOptions ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `ImportCallOptions ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x5645 : Ojs.t) -> intf_of_js __tags_of_js x5645
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x5643 : __tags intf) -> intf_to_js __tags_to_js x5643
    let (get_assert : 'tags this -> ImportAssertions.t option) =
      fun (x5647 : 'tags this) ->
        Ojs.option_of_js ImportAssertions.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x5647) "assert")
    let (set_assert : 'tags this -> ImportAssertions.t -> unit) =
      fun (x5650 : 'tags this) ->
        fun (x5651 : ImportAssertions.t) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x5650) "assert"
            (ImportAssertions.t_to_js x5651)
    let (create : ?assert_:ImportAssertions.t -> unit -> t) =
      fun ?assert_:(x5653 : ImportAssertions.t option) ->
        fun () ->
          let x5654 = Ojs.empty_obj () in
          (match x5653 with
           | Some x5655 ->
               Ojs.set_prop_ascii x5654 "assert"
                 (ImportAssertions.t_to_js x5655)
           | None -> ());
          t_of_js x5654
    let cast_from = Obj.magic
  end
module IArguments =
  struct
    type t =
      [ `IArguments  | any ArrayLike.tags_1 | any IterableIterator.tags_1]
        intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x5657 : Ojs.t) -> t_of_js x5657
    and t_0_to_js : t_0 -> Ojs.t = fun (x5656 : t) -> t_to_js x5656
    type tags =
      [ `IArguments  | any ArrayLike.tags_1 | any IterableIterator.tags_1]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `IArguments ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x5660 : Ojs.t) -> intf_of_js __tags_of_js x5660
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x5658 : __tags intf) -> intf_to_js __tags_to_js x5658
    let (get : 'tags this -> float -> any) =
      fun (x5662 : 'tags this) ->
        fun (x5664 : float) ->
          any_of_js
            (Ojs.get_prop (this_to_js Obj.magic x5662)
               (Ojs.float_to_js x5664))
    let (set : 'tags this -> float -> any -> unit) =
      fun (x5665 : 'tags this) ->
        fun (x5667 : float) ->
          fun (x5668 : any) ->
            Ojs.set_prop (this_to_js Obj.magic x5665) (Ojs.float_to_js x5667)
              (any_to_js x5668)
    let (get_length : 'tags this -> float) =
      fun (x5669 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x5669) "length")
    let (set_length : 'tags this -> float -> unit) =
      fun (x5671 : 'tags this) ->
        fun (x5672 : float) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x5671) "length"
            (Ojs.float_to_js x5672)
    let (get_callee : 'tags this -> Function.t) =
      fun (x5674 : 'tags this) ->
        Function.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x5674) "callee")
    let (set_callee : 'tags this -> Function.t -> unit) =
      fun (x5676 : 'tags this) ->
        fun (x5677 : Function.t) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x5676) "callee"
            (Function.t_to_js x5677)
    let cast_from = Obj.magic
  end
module Generator =
  struct
    type ('T, 'TReturn, 'TNext) t =
      [ `Generator of ('T * 'TReturn * 'TNext) 
      | `Iterator of ('T * 'TReturn * 'TNext) ] intf
    let rec t_of_js :
      'T 'TReturn 'TNext .
        (Ojs.t -> 'T) ->
          (Ojs.t -> 'TReturn) ->
            (Ojs.t -> 'TNext) -> Ojs.t -> ('T, 'TReturn, 'TNext) t
      = fun _T -> fun _TReturn -> fun _TNext -> Obj.magic
    and t_to_js :
      'T 'TReturn 'TNext .
        ('T -> Ojs.t) ->
          ('TReturn -> Ojs.t) ->
            ('TNext -> Ojs.t) -> ('T, 'TReturn, 'TNext) t -> Ojs.t
      = fun _T -> fun _TReturn -> fun _TNext -> Obj.magic
    type ('T, 'TReturn, 'TNext) t_3 = ('T, 'TReturn, 'TNext) t
    let rec t_3_of_js :
      'T 'TReturn 'TNext .
        (Ojs.t -> 'T) ->
          (Ojs.t -> 'TReturn) ->
            (Ojs.t -> 'TNext) -> Ojs.t -> ('T, 'TReturn, 'TNext) t_3
      =
      fun (type __T) ->
        fun (type __TReturn) ->
          fun (type __TNext) ->
            fun (__T_of_js : Ojs.t -> __T) ->
              fun (__TReturn_of_js : Ojs.t -> __TReturn) ->
                fun (__TNext_of_js : Ojs.t -> __TNext) ->
                  fun (x5683 : Ojs.t) ->
                    t_of_js __T_of_js __TReturn_of_js __TNext_of_js x5683
    and t_3_to_js :
      'T 'TReturn 'TNext .
        ('T -> Ojs.t) ->
          ('TReturn -> Ojs.t) ->
            ('TNext -> Ojs.t) -> ('T, 'TReturn, 'TNext) t_3 -> Ojs.t
      =
      fun (type __T) ->
        fun (type __TReturn) ->
          fun (type __TNext) ->
            fun (__T_to_js : __T -> Ojs.t) ->
              fun (__TReturn_to_js : __TReturn -> Ojs.t) ->
                fun (__TNext_to_js : __TNext -> Ojs.t) ->
                  fun (x5679 : (__T, __TReturn, __TNext) t) ->
                    t_to_js __T_to_js __TReturn_to_js __TNext_to_js x5679
    type ('T, 'TReturn) t_2 = ('T, 'TReturn, unknown) t
    let rec t_2_of_js :
      'T 'TReturn .
        (Ojs.t -> 'T) -> (Ojs.t -> 'TReturn) -> Ojs.t -> ('T, 'TReturn) t_2
      =
      fun (type __T) ->
        fun (type __TReturn) ->
          fun (__T_of_js : Ojs.t -> __T) ->
            fun (__TReturn_of_js : Ojs.t -> __TReturn) ->
              fun (x5691 : Ojs.t) ->
                t_of_js __T_of_js __TReturn_of_js unknown_of_js x5691
    and t_2_to_js :
      'T 'TReturn .
        ('T -> Ojs.t) -> ('TReturn -> Ojs.t) -> ('T, 'TReturn) t_2 -> Ojs.t
      =
      fun (type __T) ->
        fun (type __TReturn) ->
          fun (__T_to_js : __T -> Ojs.t) ->
            fun (__TReturn_to_js : __TReturn -> Ojs.t) ->
              fun (x5687 : (__T, __TReturn, unknown) t) ->
                t_to_js __T_to_js __TReturn_to_js unknown_to_js x5687
    type 'T t_1 = ('T, any, unknown) t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 =
      fun (type __T) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x5699 : Ojs.t) ->
            t_of_js __T_of_js any_of_js unknown_of_js x5699
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t =
      fun (type __T) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x5695 : (__T, any, unknown) t) ->
            t_to_js __T_to_js any_to_js unknown_to_js x5695
    type t_0 = (unknown, any, unknown) t
    let rec t_0_of_js : Ojs.t -> t_0 =
      fun (x5707 : Ojs.t) ->
        t_of_js unknown_of_js any_of_js unknown_of_js x5707
    and t_0_to_js : t_0 -> Ojs.t =
      fun (x5703 : (unknown, any, unknown) t) ->
        t_to_js unknown_to_js any_to_js unknown_to_js x5703
    type ('T, 'TReturn, 'TNext) tags =
      [ `Generator of ('T * 'TReturn * 'TNext) 
      | `Iterator of ('T * 'TReturn * 'TNext) ]
    type ('T, 'TReturn, 'TNext) tags_3 = ('T, 'TReturn, 'TNext) tags
    type ('T, 'TReturn) tags_2 = ('T, 'TReturn, unknown) tags
    type 'T tags_1 = ('T, any, unknown) tags
    type tags_0 = (unknown, any, unknown) tags
    type ('tags, 'T, 'TReturn, 'TNext) this =
      'tags intf constraint 'tags =
                  [> `Generator of ('T * 'TReturn * 'TNext) ]
    let rec this_of_js :
      'tags 'T 'TReturn 'TNext .
        (Ojs.t -> 'tags) ->
          (Ojs.t -> 'T) ->
            (Ojs.t -> 'TReturn) ->
              (Ojs.t -> 'TNext) ->
                Ojs.t -> ('tags, 'T, 'TReturn, 'TNext) this
      =
      fun (type __tags) ->
        fun (type __T) ->
          fun (type __TReturn) ->
            fun (type __TNext) ->
              fun (__tags_of_js : Ojs.t -> __tags) ->
                fun (__T_of_js : Ojs.t -> __T) ->
                  fun (__TReturn_of_js : Ojs.t -> __TReturn) ->
                    fun (__TNext_of_js : Ojs.t -> __TNext) ->
                      fun (x5713 : Ojs.t) -> intf_of_js __tags_of_js x5713
    and this_to_js :
      'tags 'T 'TReturn 'TNext .
        ('tags -> Ojs.t) ->
          ('T -> Ojs.t) ->
            ('TReturn -> Ojs.t) ->
              ('TNext -> Ojs.t) ->
                ('tags, 'T, 'TReturn, 'TNext) this -> Ojs.t
      =
      fun (type __tags) ->
        fun (type __T) ->
          fun (type __TReturn) ->
            fun (type __TNext) ->
              fun (__tags_to_js : __tags -> Ojs.t) ->
                fun (__T_to_js : __T -> Ojs.t) ->
                  fun (__TReturn_to_js : __TReturn -> Ojs.t) ->
                    fun (__TNext_to_js : __TNext -> Ojs.t) ->
                      fun (x5711 : __tags intf) ->
                        intf_to_js __tags_to_js x5711
    let (next :
      ('tags, 'T, 'TReturn, 'TNext) this ->
        args:any list -> ('T, 'TReturn) IteratorResult.t)
      =
      fun (x5718 : ('tags, 'T, 'TReturn, 'TNext) this) ->
        fun ~args:(x5715 : any list) ->
          IteratorResult.t_of_js Obj.magic Obj.magic
            (let x5723 =
               this_to_js Obj.magic Obj.magic Obj.magic Obj.magic x5718 in
             Ojs.call (Ojs.get_prop_ascii x5723 "next") "apply"
               [|x5723;((let x5716 =
                           Ojs.new_obj
                             (Ojs.get_prop_ascii Ojs.global "Array") 
                             [||] in
                         List.iter
                           (fun (x5717 : any) ->
                              ignore
                                (Ojs.call x5716 "push" [|(any_to_js x5717)|]))
                           x5715;
                         x5716))|])
    let (return :
      ('tags, 'T, 'TReturn, 'TNext) this ->
        value:'TReturn -> ('T, 'TReturn) IteratorResult.t)
      =
      fun (x5727 : ('tags, 'T, 'TReturn, 'TNext) this) ->
        fun ~value:(x5726 : 'TReturn) ->
          IteratorResult.t_of_js Obj.magic Obj.magic
            (Ojs.call
               (this_to_js Obj.magic Obj.magic Obj.magic Obj.magic x5727)
               "return" [|(Obj.magic x5726)|])
    let (throw :
      ('tags, 'T, 'TReturn, 'TNext) this ->
        e:any -> ('T, 'TReturn) IteratorResult.t)
      =
      fun (x5735 : ('tags, 'T, 'TReturn, 'TNext) this) ->
        fun ~e:(x5734 : any) ->
          IteratorResult.t_of_js Obj.magic Obj.magic
            (Ojs.call
               (this_to_js Obj.magic Obj.magic Obj.magic Obj.magic x5735)
               "throw" [|(any_to_js x5734)|])
    let cast_from = Obj.magic
  end
module GeneratorFunction =
  struct
    type t = [ `GeneratorFunction ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x5743 : Ojs.t) -> t_of_js x5743
    and t_0_to_js : t_0 -> Ojs.t = fun (x5742 : t) -> t_to_js x5742
    type tags = [ `GeneratorFunction ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `GeneratorFunction ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x5746 : Ojs.t) -> intf_of_js __tags_of_js x5746
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x5744 : __tags intf) -> intf_to_js __tags_to_js x5744
    let (create : 'tags this -> args:any list -> Generator.t_0) =
      fun (x5751 : 'tags this) ->
        fun ~args:(x5748 : any list) ->
          Generator.t_0_of_js
            (Ojs.new_obj_arr (this_to_js Obj.magic x5751)
               (let x5749 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                List.iter
                  (fun (x5750 : any) ->
                     ignore (Ojs.call x5749 "push" [|(any_to_js x5750)|]))
                  x5748;
                x5749))
    let (apply : 'tags this -> args:any list -> Generator.t_0) =
      fun (x5756 : 'tags this) ->
        fun ~args:(x5753 : any list) ->
          Generator.t_0_of_js
            (Ojs.call (this_to_js Obj.magic x5756) "apply"
               [|Ojs.null;((let x5754 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            List.iter
                              (fun (x5755 : any) ->
                                 ignore
                                   (Ojs.call x5754 "push"
                                      [|(any_to_js x5755)|])) x5753;
                            x5754))|])
    let (get_length : 'tags this -> float) =
      fun (x5758 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x5758) "length")
    let (get_name : 'tags this -> string) =
      fun (x5760 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x5760) "name")
    let (get_prototype : 'tags this -> Generator.t_0) =
      fun (x5762 : 'tags this) ->
        Generator.t_0_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x5762) "prototype")
    let cast_from = Obj.magic
  end
module GeneratorFunctionConstructor =
  struct
    type t = [ `GeneratorFunctionConstructor ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x5765 : Ojs.t) -> t_of_js x5765
    and t_0_to_js : t_0 -> Ojs.t = fun (x5764 : t) -> t_to_js x5764
    type tags = [ `GeneratorFunctionConstructor ]
    type tags_0 = tags
    type 'tags this =
      'tags intf constraint 'tags = [> `GeneratorFunctionConstructor ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x5768 : Ojs.t) -> intf_of_js __tags_of_js x5768
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x5766 : __tags intf) -> intf_to_js __tags_to_js x5766
    let (create : 'tags this -> args:string list -> GeneratorFunction.t) =
      fun (x5773 : 'tags this) ->
        fun ~args:(x5770 : string list) ->
          GeneratorFunction.t_of_js
            (Ojs.new_obj_arr (this_to_js Obj.magic x5773)
               (let x5771 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                List.iter
                  (fun (x5772 : string) ->
                     ignore
                       (Ojs.call x5771 "push" [|(Ojs.string_to_js x5772)|]))
                  x5770;
                x5771))
    let (apply : 'tags this -> args:string list -> GeneratorFunction.t) =
      fun (x5778 : 'tags this) ->
        fun ~args:(x5775 : string list) ->
          GeneratorFunction.t_of_js
            (Ojs.call (this_to_js Obj.magic x5778) "apply"
               [|Ojs.null;((let x5776 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            List.iter
                              (fun (x5777 : string) ->
                                 ignore
                                   (Ojs.call x5776 "push"
                                      [|(Ojs.string_to_js x5777)|])) x5775;
                            x5776))|])
    let (get_length : 'tags this -> float) =
      fun (x5780 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x5780) "length")
    let (get_name : 'tags this -> string) =
      fun (x5782 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x5782) "name")
    let (get_prototype : 'tags this -> GeneratorFunction.t) =
      fun (x5784 : 'tags this) ->
        GeneratorFunction.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x5784) "prototype")
    let cast_from = Obj.magic
  end
module Float64Array =
  struct
    type t =
      [ `Float64Array  | float ArrayLike.tags_1
      | float IterableIterator.tags_1] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x5787 : Ojs.t) -> t_of_js x5787
    and t_0_to_js : t_0 -> Ojs.t = fun (x5786 : t) -> t_to_js x5786
    type tags =
      [ `Float64Array  | float ArrayLike.tags_1
      | float IterableIterator.tags_1]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `Float64Array ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x5790 : Ojs.t) -> intf_of_js __tags_of_js x5790
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x5788 : __tags intf) -> intf_to_js __tags_to_js x5788
    let (at : 'tags this -> index:float -> float option) =
      fun (x5793 : 'tags this) ->
        fun ~index:(x5792 : float) ->
          Ojs.option_of_js Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x5793) "at"
               [|(Ojs.float_to_js x5792)|])
    let (includes :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> bool)
      =
      fun (x5800 : 'tags this) ->
        fun ~searchElement:(x5796 : float) ->
          fun ?fromIndex:(x5797 : float option) ->
            fun () ->
              Ojs.bool_of_js
                (let x5802 = this_to_js Obj.magic x5800 in
                 Ojs.call (Ojs.get_prop_ascii x5802 "includes") "apply"
                   [|x5802;((let x5798 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x5798 "push"
                                  [|(Ojs.float_to_js x5796)|]);
                             (match x5797 with
                              | Some x5799 ->
                                  ignore
                                    (Ojs.call x5798 "push"
                                       [|(Ojs.float_to_js x5799)|])
                              | None -> ());
                             x5798))|])
    let (entries : 'tags this -> (float * float) IterableIterator.t) =
      fun (x5803 : 'tags this) ->
        IterableIterator.t_of_js
          (fun (x5805 : Ojs.t) ->
             let x5806 = x5805 in
             ((Ojs.float_of_js (Ojs.array_get x5806 0)),
               (Ojs.float_of_js (Ojs.array_get x5806 1))))
          (Ojs.call (this_to_js Obj.magic x5803) "entries" [||])
    let (keys : 'tags this -> float IterableIterator.t) =
      fun (x5807 : 'tags this) ->
        IterableIterator.t_of_js Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x5807) "keys" [||])
    let (values : 'tags this -> float IterableIterator.t) =
      fun (x5810 : 'tags this) ->
        IterableIterator.t_of_js Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x5810) "values" [||])
    let (get_BYTES_PER_ELEMENT : 'tags this -> float) =
      fun (x5813 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x5813)
             "BYTES_PER_ELEMENT")
    let (get_buffer : 'tags this -> ArrayBufferLike.t) =
      fun (x5815 : 'tags this) ->
        ArrayBufferLike.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x5815) "buffer")
    let (get_byteLength : 'tags this -> float) =
      fun (x5817 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x5817) "byteLength")
    let (get_byteOffset : 'tags this -> float) =
      fun (x5819 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x5819) "byteOffset")
    let (copyWithin :
      'tags this ->
        target:float -> start:float -> ?end_:float -> unit -> 'tags this)
      =
      fun (x5826 : 'tags this) ->
        fun ~target:(x5821 : float) ->
          fun ~start:(x5822 : float) ->
            fun ?end_:(x5823 : float option) ->
              fun () ->
                this_of_js Obj.magic
                  (let x5828 = this_to_js Obj.magic x5826 in
                   Ojs.call (Ojs.get_prop_ascii x5828 "copyWithin") "apply"
                     [|x5828;((let x5824 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x5824 "push"
                                    [|(Ojs.float_to_js x5821)|]);
                               ignore
                                 (Ojs.call x5824 "push"
                                    [|(Ojs.float_to_js x5822)|]);
                               (match x5823 with
                                | Some x5825 ->
                                    ignore
                                      (Ojs.call x5824 "push"
                                         [|(Ojs.float_to_js x5825)|])
                                | None -> ());
                               x5824))|])
    let (every :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x5837 : 'tags this) ->
        fun
          ~predicate:(x5830 :
                       value:float -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x5831 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x5839 = this_to_js Obj.magic x5837 in
                 Ojs.call (Ojs.get_prop_ascii x5839 "every") "apply"
                   [|x5839;((let x5832 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x5832 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x5834 : Ojs.t) ->
                                          fun (x5835 : Ojs.t) ->
                                            fun (x5836 : Ojs.t) ->
                                              unknown_to_js
                                                (x5830
                                                   ~value:(Ojs.float_of_js
                                                             x5834)
                                                   ~index:(Ojs.float_of_js
                                                             x5835)
                                                   ~array:(t_of_js x5836))))|]);
                             (match x5831 with
                              | Some x5833 ->
                                  ignore
                                    (Ojs.call x5832 "push"
                                       [|(any_to_js x5833)|])
                              | None -> ());
                             x5832))|])
    let (fill :
      'tags this ->
        value:float -> ?start:float -> ?end_:float -> unit -> 'tags this)
      =
      fun (x5846 : 'tags this) ->
        fun ~value:(x5840 : float) ->
          fun ?start:(x5841 : float option) ->
            fun ?end_:(x5842 : float option) ->
              fun () ->
                this_of_js Obj.magic
                  (let x5848 = this_to_js Obj.magic x5846 in
                   Ojs.call (Ojs.get_prop_ascii x5848 "fill") "apply"
                     [|x5848;((let x5843 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x5843 "push"
                                    [|(Ojs.float_to_js x5840)|]);
                               (match x5841 with
                                | Some x5845 ->
                                    ignore
                                      (Ojs.call x5843 "push"
                                         [|(Ojs.float_to_js x5845)|])
                                | None -> ());
                               (match x5842 with
                                | Some x5844 ->
                                    ignore
                                      (Ojs.call x5843 "push"
                                         [|(Ojs.float_to_js x5844)|])
                                | None -> ());
                               x5843))|])
    let (filter :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> any) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x5857 : 'tags this) ->
        fun ~predicate:(x5850 : value:float -> index:float -> array:t -> any)
          ->
          fun ?thisArg:(x5851 : any option) ->
            fun () ->
              t_of_js
                (let x5859 = this_to_js Obj.magic x5857 in
                 Ojs.call (Ojs.get_prop_ascii x5859 "filter") "apply"
                   [|x5859;((let x5852 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x5852 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x5854 : Ojs.t) ->
                                          fun (x5855 : Ojs.t) ->
                                            fun (x5856 : Ojs.t) ->
                                              any_to_js
                                                (x5850
                                                   ~value:(Ojs.float_of_js
                                                             x5854)
                                                   ~index:(Ojs.float_of_js
                                                             x5855)
                                                   ~array:(t_of_js x5856))))|]);
                             (match x5851 with
                              | Some x5853 ->
                                  ignore
                                    (Ojs.call x5852 "push"
                                       [|(any_to_js x5853)|])
                              | None -> ());
                             x5852))|])
    let (find :
      'tags this ->
        predicate:(value:float -> index:float -> obj:t -> bool) ->
          ?thisArg:any -> unit -> float option)
      =
      fun (x5867 : 'tags this) ->
        fun ~predicate:(x5860 : value:float -> index:float -> obj:t -> bool)
          ->
          fun ?thisArg:(x5861 : any option) ->
            fun () ->
              Ojs.option_of_js Ojs.float_of_js
                (let x5869 = this_to_js Obj.magic x5867 in
                 Ojs.call (Ojs.get_prop_ascii x5869 "find") "apply"
                   [|x5869;((let x5862 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x5862 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x5864 : Ojs.t) ->
                                          fun (x5865 : Ojs.t) ->
                                            fun (x5866 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x5860
                                                   ~value:(Ojs.float_of_js
                                                             x5864)
                                                   ~index:(Ojs.float_of_js
                                                             x5865)
                                                   ~obj:(t_of_js x5866))))|]);
                             (match x5861 with
                              | Some x5863 ->
                                  ignore
                                    (Ojs.call x5862 "push"
                                       [|(any_to_js x5863)|])
                              | None -> ());
                             x5862))|])
    let (findIndex :
      'tags this ->
        predicate:(value:float -> index:float -> obj:t -> bool) ->
          ?thisArg:any -> unit -> float)
      =
      fun (x5878 : 'tags this) ->
        fun ~predicate:(x5871 : value:float -> index:float -> obj:t -> bool)
          ->
          fun ?thisArg:(x5872 : any option) ->
            fun () ->
              Ojs.float_of_js
                (let x5880 = this_to_js Obj.magic x5878 in
                 Ojs.call (Ojs.get_prop_ascii x5880 "findIndex") "apply"
                   [|x5880;((let x5873 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x5873 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x5875 : Ojs.t) ->
                                          fun (x5876 : Ojs.t) ->
                                            fun (x5877 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x5871
                                                   ~value:(Ojs.float_of_js
                                                             x5875)
                                                   ~index:(Ojs.float_of_js
                                                             x5876)
                                                   ~obj:(t_of_js x5877))))|]);
                             (match x5872 with
                              | Some x5874 ->
                                  ignore
                                    (Ojs.call x5873 "push"
                                       [|(any_to_js x5874)|])
                              | None -> ());
                             x5873))|])
    let (forEach :
      'tags this ->
        callbackfn:(value:float -> index:float -> array:t -> unit) ->
          ?thisArg:any -> unit -> unit)
      =
      fun (x5888 : 'tags this) ->
        fun
          ~callbackfn:(x5881 : value:float -> index:float -> array:t -> unit)
          ->
          fun ?thisArg:(x5882 : any option) ->
            fun () ->
              ignore
                (let x5890 = this_to_js Obj.magic x5888 in
                 Ojs.call (Ojs.get_prop_ascii x5890 "forEach") "apply"
                   [|x5890;((let x5883 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x5883 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x5885 : Ojs.t) ->
                                          fun (x5886 : Ojs.t) ->
                                            fun (x5887 : Ojs.t) ->
                                              x5881
                                                ~value:(Ojs.float_of_js x5885)
                                                ~index:(Ojs.float_of_js x5886)
                                                ~array:(t_of_js x5887)))|]);
                             (match x5882 with
                              | Some x5884 ->
                                  ignore
                                    (Ojs.call x5883 "push"
                                       [|(any_to_js x5884)|])
                              | None -> ());
                             x5883))|])
    let (indexOf :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> float)
      =
      fun (x5895 : 'tags this) ->
        fun ~searchElement:(x5891 : float) ->
          fun ?fromIndex:(x5892 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x5897 = this_to_js Obj.magic x5895 in
                 Ojs.call (Ojs.get_prop_ascii x5897 "indexOf") "apply"
                   [|x5897;((let x5893 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x5893 "push"
                                  [|(Ojs.float_to_js x5891)|]);
                             (match x5892 with
                              | Some x5894 ->
                                  ignore
                                    (Ojs.call x5893 "push"
                                       [|(Ojs.float_to_js x5894)|])
                              | None -> ());
                             x5893))|])
    let (join : 'tags this -> ?separator:string -> unit -> string) =
      fun (x5901 : 'tags this) ->
        fun ?separator:(x5898 : string option) ->
          fun () ->
            Ojs.string_of_js
              (let x5903 = this_to_js Obj.magic x5901 in
               Ojs.call (Ojs.get_prop_ascii x5903 "join") "apply"
                 [|x5903;((let x5899 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x5898 with
                            | Some x5900 ->
                                ignore
                                  (Ojs.call x5899 "push"
                                     [|(Ojs.string_to_js x5900)|])
                            | None -> ());
                           x5899))|])
    let (lastIndexOf :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> float)
      =
      fun (x5908 : 'tags this) ->
        fun ~searchElement:(x5904 : float) ->
          fun ?fromIndex:(x5905 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x5910 = this_to_js Obj.magic x5908 in
                 Ojs.call (Ojs.get_prop_ascii x5910 "lastIndexOf") "apply"
                   [|x5910;((let x5906 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x5906 "push"
                                  [|(Ojs.float_to_js x5904)|]);
                             (match x5905 with
                              | Some x5907 ->
                                  ignore
                                    (Ojs.call x5906 "push"
                                       [|(Ojs.float_to_js x5907)|])
                              | None -> ());
                             x5906))|])
    let (get_length : 'tags this -> float) =
      fun (x5911 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x5911) "length")
    let (map :
      'tags this ->
        callbackfn:(value:float -> index:float -> array:t -> float) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x5920 : 'tags this) ->
        fun
          ~callbackfn:(x5913 :
                        value:float -> index:float -> array:t -> float)
          ->
          fun ?thisArg:(x5914 : any option) ->
            fun () ->
              t_of_js
                (let x5922 = this_to_js Obj.magic x5920 in
                 Ojs.call (Ojs.get_prop_ascii x5922 "map") "apply"
                   [|x5922;((let x5915 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x5915 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x5917 : Ojs.t) ->
                                          fun (x5918 : Ojs.t) ->
                                            fun (x5919 : Ojs.t) ->
                                              Ojs.float_to_js
                                                (x5913
                                                   ~value:(Ojs.float_of_js
                                                             x5917)
                                                   ~index:(Ojs.float_of_js
                                                             x5918)
                                                   ~array:(t_of_js x5919))))|]);
                             (match x5914 with
                              | Some x5916 ->
                                  ignore
                                    (Ojs.call x5915 "push"
                                       [|(any_to_js x5916)|])
                              | None -> ());
                             x5915))|])
    let (reduce :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> float)
      =
      fun (x5928 : 'tags this) ->
        fun
          ~callbackfn:(x5923 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x5928) "reduce"
               [|(Ojs.fun_to_js 4
                    (fun (x5924 : Ojs.t) ->
                       fun (x5925 : Ojs.t) ->
                         fun (x5926 : Ojs.t) ->
                           fun (x5927 : Ojs.t) ->
                             Ojs.float_to_js
                               (x5923 ~previousValue:(Ojs.float_of_js x5924)
                                  ~currentValue:(Ojs.float_of_js x5925)
                                  ~currentIndex:(Ojs.float_of_js x5926)
                                  ~array:(t_of_js x5927))))|])
    let (reduce' :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> initialValue:float -> float)
      =
      fun (x5936 : 'tags this) ->
        fun
          ~callbackfn:(x5930 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          fun ~initialValue:(x5935 : float) ->
            Ojs.float_of_js
              (Ojs.call (this_to_js Obj.magic x5936) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x5931 : Ojs.t) ->
                         fun (x5932 : Ojs.t) ->
                           fun (x5933 : Ojs.t) ->
                             fun (x5934 : Ojs.t) ->
                               Ojs.float_to_js
                                 (x5930
                                    ~previousValue:(Ojs.float_of_js x5931)
                                    ~currentValue:(Ojs.float_of_js x5932)
                                    ~currentIndex:(Ojs.float_of_js x5933)
                                    ~array:(t_of_js x5934))));(Ojs.float_to_js
                                                                 x5935)|])
    let (reduce'' :
      'tags this ->
        callbackfn:(previousValue:'U ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x5944 : 'tags this) ->
        fun
          ~callbackfn:(x5938 :
                        previousValue:'U ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x5943 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic x5944) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x5939 : Ojs.t) ->
                         fun (x5940 : Ojs.t) ->
                           fun (x5941 : Ojs.t) ->
                             fun (x5942 : Ojs.t) ->
                               Obj.magic
                                 (x5938 ~previousValue:(Obj.magic x5939)
                                    ~currentValue:(Ojs.float_of_js x5940)
                                    ~currentIndex:(Ojs.float_of_js x5941)
                                    ~array:(t_of_js x5942))));(Obj.magic
                                                                 x5943)|])
    let (reduceRight :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> float)
      =
      fun (x5951 : 'tags this) ->
        fun
          ~callbackfn:(x5946 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x5951) "reduceRight"
               [|(Ojs.fun_to_js 4
                    (fun (x5947 : Ojs.t) ->
                       fun (x5948 : Ojs.t) ->
                         fun (x5949 : Ojs.t) ->
                           fun (x5950 : Ojs.t) ->
                             Ojs.float_to_js
                               (x5946 ~previousValue:(Ojs.float_of_js x5947)
                                  ~currentValue:(Ojs.float_of_js x5948)
                                  ~currentIndex:(Ojs.float_of_js x5949)
                                  ~array:(t_of_js x5950))))|])
    let (reduceRight' :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> initialValue:float -> float)
      =
      fun (x5959 : 'tags this) ->
        fun
          ~callbackfn:(x5953 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          fun ~initialValue:(x5958 : float) ->
            Ojs.float_of_js
              (Ojs.call (this_to_js Obj.magic x5959) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x5954 : Ojs.t) ->
                         fun (x5955 : Ojs.t) ->
                           fun (x5956 : Ojs.t) ->
                             fun (x5957 : Ojs.t) ->
                               Ojs.float_to_js
                                 (x5953
                                    ~previousValue:(Ojs.float_of_js x5954)
                                    ~currentValue:(Ojs.float_of_js x5955)
                                    ~currentIndex:(Ojs.float_of_js x5956)
                                    ~array:(t_of_js x5957))));(Ojs.float_to_js
                                                                 x5958)|])
    let (reduceRight'' :
      'tags this ->
        callbackfn:(previousValue:'U ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x5967 : 'tags this) ->
        fun
          ~callbackfn:(x5961 :
                        previousValue:'U ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x5966 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic x5967) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x5962 : Ojs.t) ->
                         fun (x5963 : Ojs.t) ->
                           fun (x5964 : Ojs.t) ->
                             fun (x5965 : Ojs.t) ->
                               Obj.magic
                                 (x5961 ~previousValue:(Obj.magic x5962)
                                    ~currentValue:(Ojs.float_of_js x5963)
                                    ~currentIndex:(Ojs.float_of_js x5964)
                                    ~array:(t_of_js x5965))));(Obj.magic
                                                                 x5966)|])
    let (reverse : 'tags this -> t) =
      fun (x5969 : 'tags this) ->
        t_of_js (Ojs.call (this_to_js Obj.magic x5969) "reverse" [||])
    let (set_ :
      'tags this -> array:float ArrayLike.t -> ?offset:float -> unit -> unit)
      =
      fun (x5976 : 'tags this) ->
        fun ~array:(x5971 : float ArrayLike.t) ->
          fun ?offset:(x5972 : float option) ->
            fun () ->
              ignore
                (let x5978 = this_to_js Obj.magic x5976 in
                 Ojs.call (Ojs.get_prop_ascii x5978 "set") "apply"
                   [|x5978;((let x5973 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x5973 "push"
                                  [|(ArrayLike.t_to_js Ojs.float_to_js x5971)|]);
                             (match x5972 with
                              | Some x5974 ->
                                  ignore
                                    (Ojs.call x5973 "push"
                                       [|(Ojs.float_to_js x5974)|])
                              | None -> ());
                             x5973))|])
    let (slice : 'tags this -> ?start:float -> ?end_:float -> unit -> t) =
      fun (x5984 : 'tags this) ->
        fun ?start:(x5979 : float option) ->
          fun ?end_:(x5980 : float option) ->
            fun () ->
              t_of_js
                (let x5986 = this_to_js Obj.magic x5984 in
                 Ojs.call (Ojs.get_prop_ascii x5986 "slice") "apply"
                   [|x5986;((let x5981 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x5979 with
                              | Some x5983 ->
                                  ignore
                                    (Ojs.call x5981 "push"
                                       [|(Ojs.float_to_js x5983)|])
                              | None -> ());
                             (match x5980 with
                              | Some x5982 ->
                                  ignore
                                    (Ojs.call x5981 "push"
                                       [|(Ojs.float_to_js x5982)|])
                              | None -> ());
                             x5981))|])
    let (some :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x5994 : 'tags this) ->
        fun
          ~predicate:(x5987 :
                       value:float -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x5988 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x5996 = this_to_js Obj.magic x5994 in
                 Ojs.call (Ojs.get_prop_ascii x5996 "some") "apply"
                   [|x5996;((let x5989 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x5989 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x5991 : Ojs.t) ->
                                          fun (x5992 : Ojs.t) ->
                                            fun (x5993 : Ojs.t) ->
                                              unknown_to_js
                                                (x5987
                                                   ~value:(Ojs.float_of_js
                                                             x5991)
                                                   ~index:(Ojs.float_of_js
                                                             x5992)
                                                   ~array:(t_of_js x5993))))|]);
                             (match x5988 with
                              | Some x5990 ->
                                  ignore
                                    (Ojs.call x5989 "push"
                                       [|(any_to_js x5990)|])
                              | None -> ());
                             x5989))|])
    let (sort :
      'tags this ->
        ?compareFn:(a:float -> b:float -> float) -> unit -> 'tags this)
      =
      fun (x6002 : 'tags this) ->
        fun ?compareFn:(x5997 : (a:float -> b:float -> float) option) ->
          fun () ->
            this_of_js Obj.magic
              (let x6004 = this_to_js Obj.magic x6002 in
               Ojs.call (Ojs.get_prop_ascii x6004 "sort") "apply"
                 [|x6004;((let x5998 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x5997 with
                            | Some x5999 ->
                                ignore
                                  (Ojs.call x5998 "push"
                                     [|(Ojs.fun_to_js 2
                                          (fun (x6000 : Ojs.t) ->
                                             fun (x6001 : Ojs.t) ->
                                               Ojs.float_to_js
                                                 (x5999
                                                    ~a:(Ojs.float_of_js x6000)
                                                    ~b:(Ojs.float_of_js x6001))))|])
                            | None -> ());
                           x5998))|])
    let (subarray : 'tags this -> ?begin_:float -> ?end_:float -> unit -> t)
      =
      fun (x6011 : 'tags this) ->
        fun ?begin_:(x6006 : float option) ->
          fun ?end_:(x6007 : float option) ->
            fun () ->
              t_of_js
                (let x6013 = this_to_js Obj.magic x6011 in
                 Ojs.call (Ojs.get_prop_ascii x6013 "subarray") "apply"
                   [|x6013;((let x6008 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x6006 with
                              | Some x6010 ->
                                  ignore
                                    (Ojs.call x6008 "push"
                                       [|(Ojs.float_to_js x6010)|])
                              | None -> ());
                             (match x6007 with
                              | Some x6009 ->
                                  ignore
                                    (Ojs.call x6008 "push"
                                       [|(Ojs.float_to_js x6009)|])
                              | None -> ());
                             x6008))|])
    let (toString : 'tags this -> string) =
      fun (x6014 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x6014) "toString" [||])
    let (valueOf : 'tags this -> t) =
      fun (x6016 : 'tags this) ->
        t_of_js (Ojs.call (this_to_js Obj.magic x6016) "valueOf" [||])
    let (get : 'tags this -> float -> float) =
      fun (x6018 : 'tags this) ->
        fun (x6020 : float) ->
          Ojs.float_of_js
            (Ojs.get_prop (this_to_js Obj.magic x6018)
               (Ojs.float_to_js x6020))
    let (set : 'tags this -> float -> float -> unit) =
      fun (x6021 : 'tags this) ->
        fun (x6023 : float) ->
          fun (x6024 : float) ->
            Ojs.set_prop (this_to_js Obj.magic x6021) (Ojs.float_to_js x6023)
              (Ojs.float_to_js x6024)
    let (create : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Float64Array") [||])
    let (create' : float Iterable.t -> t) =
      fun (x6025 : float Iterable.t) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Float64Array")
             [|(Iterable.t_to_js Ojs.float_to_js x6025)|])
    let (from :
      arrayLike:float Iterable.t ->
        ?mapfn:(v:float -> k:float -> float) -> ?thisArg:any -> unit -> t)
      =
      fun ~arrayLike:(x6027 : float Iterable.t) ->
        fun ?mapfn:(x6028 : (v:float -> k:float -> float) option) ->
          fun ?thisArg:(x6029 : any option) ->
            fun () ->
              t_of_js
                (let x6036 = Ojs.get_prop_ascii Ojs.global "Float64Array" in
                 Ojs.call (Ojs.get_prop_ascii x6036 "from") "apply"
                   [|x6036;((let x6030 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6030 "push"
                                  [|(Iterable.t_to_js Ojs.float_to_js x6027)|]);
                             (match x6028 with
                              | Some x6032 ->
                                  ignore
                                    (Ojs.call x6030 "push"
                                       [|(Ojs.fun_to_js 2
                                            (fun (x6033 : Ojs.t) ->
                                               fun (x6034 : Ojs.t) ->
                                                 Ojs.float_to_js
                                                   (x6032
                                                      ~v:(Ojs.float_of_js
                                                            x6033)
                                                      ~k:(Ojs.float_of_js
                                                            x6034))))|])
                              | None -> ());
                             (match x6029 with
                              | Some x6031 ->
                                  ignore
                                    (Ojs.call x6030 "push"
                                       [|(any_to_js x6031)|])
                              | None -> ());
                             x6030))|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Float64Array")
             "prototype")
    let (create'' : float -> t) =
      fun (x6037 : float) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Float64Array")
             [|(Ojs.float_to_js x6037)|])
    let (create''' :
      [ `U1 of float ArrayLike.t  | `U2 of ArrayBufferLike.t ] -> t) =
      fun (x6038 : [ `U1 of float ArrayLike.t  | `U2 of ArrayBufferLike.t ])
        ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Float64Array")
             [|((match x6038 with
                 | `U1 x6039 -> ArrayLike.t_to_js Ojs.float_to_js x6039
                 | `U2 x6041 -> ArrayBufferLike.t_to_js x6041))|])
    let (create'''' :
      buffer:ArrayBufferLike.t ->
        ?byteOffset:float -> ?length:float -> unit -> t)
      =
      fun ~buffer:(x6042 : ArrayBufferLike.t) ->
        fun ?byteOffset:(x6043 : float option) ->
          fun ?length:(x6044 : float option) ->
            fun () ->
              t_of_js
                (Ojs.new_obj_arr
                   (Ojs.get_prop_ascii Ojs.global "Float64Array")
                   (let x6045 =
                      Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                        [||] in
                    ignore
                      (Ojs.call x6045 "push"
                         [|(ArrayBufferLike.t_to_js x6042)|]);
                    (match x6043 with
                     | Some x6047 ->
                         ignore
                           (Ojs.call x6045 "push" [|(Ojs.float_to_js x6047)|])
                     | None -> ());
                    (match x6044 with
                     | Some x6046 ->
                         ignore
                           (Ojs.call x6045 "push" [|(Ojs.float_to_js x6046)|])
                     | None -> ());
                    x6045))
    let (bytes_per_element : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Float64Array")
             "BYTES_PER_ELEMENT")
    let (of_ : float list -> t) =
      fun (x6048 : float list) ->
        t_of_js
          (let x6051 = Ojs.get_prop_ascii Ojs.global "Float64Array" in
           Ojs.call (Ojs.get_prop_ascii x6051 "of") "apply"
             [|x6051;((let x6049 =
                         Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                           [||] in
                       List.iter
                         (fun (x6050 : float) ->
                            ignore
                              (Ojs.call x6049 "push"
                                 [|(Ojs.float_to_js x6050)|])) x6048;
                       x6049))|])
    let (from' : float ArrayLike.t -> t) =
      fun (x6052 : float ArrayLike.t) ->
        t_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Float64Array") "from"
             [|(ArrayLike.t_to_js Ojs.float_to_js x6052)|])
    let (from'' :
      arrayLike:'T ArrayLike.t ->
        mapfn:(v:'T -> k:float -> float) -> ?thisArg:any -> unit -> t)
      =
      fun ~arrayLike:(x6054 : 'T ArrayLike.t) ->
        fun ~mapfn:(x6055 : v:'T -> k:float -> float) ->
          fun ?thisArg:(x6056 : any option) ->
            fun () ->
              t_of_js
                (let x6062 = Ojs.get_prop_ascii Ojs.global "Float64Array" in
                 Ojs.call (Ojs.get_prop_ascii x6062 "from") "apply"
                   [|x6062;((let x6057 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6057 "push"
                                  [|(ArrayLike.t_to_js Obj.magic x6054)|]);
                             ignore
                               (Ojs.call x6057 "push"
                                  [|(Ojs.fun_to_js 2
                                       (fun (x6059 : Ojs.t) ->
                                          fun (x6060 : Ojs.t) ->
                                            Ojs.float_to_js
                                              (x6055 ~v:(Obj.magic x6059)
                                                 ~k:(Ojs.float_of_js x6060))))|]);
                             (match x6056 with
                              | Some x6058 ->
                                  ignore
                                    (Ojs.call x6057 "push"
                                       [|(any_to_js x6058)|])
                              | None -> ());
                             x6057))|])
    let cast_from = Obj.magic
  end
module Float32Array =
  struct
    type t =
      [ `Float32Array  | float ArrayLike.tags_1
      | float IterableIterator.tags_1] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x6064 : Ojs.t) -> t_of_js x6064
    and t_0_to_js : t_0 -> Ojs.t = fun (x6063 : t) -> t_to_js x6063
    type tags =
      [ `Float32Array  | float ArrayLike.tags_1
      | float IterableIterator.tags_1]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `Float32Array ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x6067 : Ojs.t) -> intf_of_js __tags_of_js x6067
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x6065 : __tags intf) -> intf_to_js __tags_to_js x6065
    let (at : 'tags this -> index:float -> float option) =
      fun (x6070 : 'tags this) ->
        fun ~index:(x6069 : float) ->
          Ojs.option_of_js Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x6070) "at"
               [|(Ojs.float_to_js x6069)|])
    let (includes :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> bool)
      =
      fun (x6077 : 'tags this) ->
        fun ~searchElement:(x6073 : float) ->
          fun ?fromIndex:(x6074 : float option) ->
            fun () ->
              Ojs.bool_of_js
                (let x6079 = this_to_js Obj.magic x6077 in
                 Ojs.call (Ojs.get_prop_ascii x6079 "includes") "apply"
                   [|x6079;((let x6075 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6075 "push"
                                  [|(Ojs.float_to_js x6073)|]);
                             (match x6074 with
                              | Some x6076 ->
                                  ignore
                                    (Ojs.call x6075 "push"
                                       [|(Ojs.float_to_js x6076)|])
                              | None -> ());
                             x6075))|])
    let (entries : 'tags this -> (float * float) IterableIterator.t) =
      fun (x6080 : 'tags this) ->
        IterableIterator.t_of_js
          (fun (x6082 : Ojs.t) ->
             let x6083 = x6082 in
             ((Ojs.float_of_js (Ojs.array_get x6083 0)),
               (Ojs.float_of_js (Ojs.array_get x6083 1))))
          (Ojs.call (this_to_js Obj.magic x6080) "entries" [||])
    let (keys : 'tags this -> float IterableIterator.t) =
      fun (x6084 : 'tags this) ->
        IterableIterator.t_of_js Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x6084) "keys" [||])
    let (values : 'tags this -> float IterableIterator.t) =
      fun (x6087 : 'tags this) ->
        IterableIterator.t_of_js Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x6087) "values" [||])
    let (get_BYTES_PER_ELEMENT : 'tags this -> float) =
      fun (x6090 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6090)
             "BYTES_PER_ELEMENT")
    let (get_buffer : 'tags this -> ArrayBufferLike.t) =
      fun (x6092 : 'tags this) ->
        ArrayBufferLike.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6092) "buffer")
    let (get_byteLength : 'tags this -> float) =
      fun (x6094 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6094) "byteLength")
    let (get_byteOffset : 'tags this -> float) =
      fun (x6096 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6096) "byteOffset")
    let (copyWithin :
      'tags this ->
        target:float -> start:float -> ?end_:float -> unit -> 'tags this)
      =
      fun (x6103 : 'tags this) ->
        fun ~target:(x6098 : float) ->
          fun ~start:(x6099 : float) ->
            fun ?end_:(x6100 : float option) ->
              fun () ->
                this_of_js Obj.magic
                  (let x6105 = this_to_js Obj.magic x6103 in
                   Ojs.call (Ojs.get_prop_ascii x6105 "copyWithin") "apply"
                     [|x6105;((let x6101 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x6101 "push"
                                    [|(Ojs.float_to_js x6098)|]);
                               ignore
                                 (Ojs.call x6101 "push"
                                    [|(Ojs.float_to_js x6099)|]);
                               (match x6100 with
                                | Some x6102 ->
                                    ignore
                                      (Ojs.call x6101 "push"
                                         [|(Ojs.float_to_js x6102)|])
                                | None -> ());
                               x6101))|])
    let (every :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x6114 : 'tags this) ->
        fun
          ~predicate:(x6107 :
                       value:float -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x6108 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x6116 = this_to_js Obj.magic x6114 in
                 Ojs.call (Ojs.get_prop_ascii x6116 "every") "apply"
                   [|x6116;((let x6109 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6109 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x6111 : Ojs.t) ->
                                          fun (x6112 : Ojs.t) ->
                                            fun (x6113 : Ojs.t) ->
                                              unknown_to_js
                                                (x6107
                                                   ~value:(Ojs.float_of_js
                                                             x6111)
                                                   ~index:(Ojs.float_of_js
                                                             x6112)
                                                   ~array:(t_of_js x6113))))|]);
                             (match x6108 with
                              | Some x6110 ->
                                  ignore
                                    (Ojs.call x6109 "push"
                                       [|(any_to_js x6110)|])
                              | None -> ());
                             x6109))|])
    let (fill :
      'tags this ->
        value:float -> ?start:float -> ?end_:float -> unit -> 'tags this)
      =
      fun (x6123 : 'tags this) ->
        fun ~value:(x6117 : float) ->
          fun ?start:(x6118 : float option) ->
            fun ?end_:(x6119 : float option) ->
              fun () ->
                this_of_js Obj.magic
                  (let x6125 = this_to_js Obj.magic x6123 in
                   Ojs.call (Ojs.get_prop_ascii x6125 "fill") "apply"
                     [|x6125;((let x6120 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x6120 "push"
                                    [|(Ojs.float_to_js x6117)|]);
                               (match x6118 with
                                | Some x6122 ->
                                    ignore
                                      (Ojs.call x6120 "push"
                                         [|(Ojs.float_to_js x6122)|])
                                | None -> ());
                               (match x6119 with
                                | Some x6121 ->
                                    ignore
                                      (Ojs.call x6120 "push"
                                         [|(Ojs.float_to_js x6121)|])
                                | None -> ());
                               x6120))|])
    let (filter :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> any) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x6134 : 'tags this) ->
        fun ~predicate:(x6127 : value:float -> index:float -> array:t -> any)
          ->
          fun ?thisArg:(x6128 : any option) ->
            fun () ->
              t_of_js
                (let x6136 = this_to_js Obj.magic x6134 in
                 Ojs.call (Ojs.get_prop_ascii x6136 "filter") "apply"
                   [|x6136;((let x6129 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6129 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x6131 : Ojs.t) ->
                                          fun (x6132 : Ojs.t) ->
                                            fun (x6133 : Ojs.t) ->
                                              any_to_js
                                                (x6127
                                                   ~value:(Ojs.float_of_js
                                                             x6131)
                                                   ~index:(Ojs.float_of_js
                                                             x6132)
                                                   ~array:(t_of_js x6133))))|]);
                             (match x6128 with
                              | Some x6130 ->
                                  ignore
                                    (Ojs.call x6129 "push"
                                       [|(any_to_js x6130)|])
                              | None -> ());
                             x6129))|])
    let (find :
      'tags this ->
        predicate:(value:float -> index:float -> obj:t -> bool) ->
          ?thisArg:any -> unit -> float option)
      =
      fun (x6144 : 'tags this) ->
        fun ~predicate:(x6137 : value:float -> index:float -> obj:t -> bool)
          ->
          fun ?thisArg:(x6138 : any option) ->
            fun () ->
              Ojs.option_of_js Ojs.float_of_js
                (let x6146 = this_to_js Obj.magic x6144 in
                 Ojs.call (Ojs.get_prop_ascii x6146 "find") "apply"
                   [|x6146;((let x6139 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6139 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x6141 : Ojs.t) ->
                                          fun (x6142 : Ojs.t) ->
                                            fun (x6143 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x6137
                                                   ~value:(Ojs.float_of_js
                                                             x6141)
                                                   ~index:(Ojs.float_of_js
                                                             x6142)
                                                   ~obj:(t_of_js x6143))))|]);
                             (match x6138 with
                              | Some x6140 ->
                                  ignore
                                    (Ojs.call x6139 "push"
                                       [|(any_to_js x6140)|])
                              | None -> ());
                             x6139))|])
    let (findIndex :
      'tags this ->
        predicate:(value:float -> index:float -> obj:t -> bool) ->
          ?thisArg:any -> unit -> float)
      =
      fun (x6155 : 'tags this) ->
        fun ~predicate:(x6148 : value:float -> index:float -> obj:t -> bool)
          ->
          fun ?thisArg:(x6149 : any option) ->
            fun () ->
              Ojs.float_of_js
                (let x6157 = this_to_js Obj.magic x6155 in
                 Ojs.call (Ojs.get_prop_ascii x6157 "findIndex") "apply"
                   [|x6157;((let x6150 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6150 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x6152 : Ojs.t) ->
                                          fun (x6153 : Ojs.t) ->
                                            fun (x6154 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x6148
                                                   ~value:(Ojs.float_of_js
                                                             x6152)
                                                   ~index:(Ojs.float_of_js
                                                             x6153)
                                                   ~obj:(t_of_js x6154))))|]);
                             (match x6149 with
                              | Some x6151 ->
                                  ignore
                                    (Ojs.call x6150 "push"
                                       [|(any_to_js x6151)|])
                              | None -> ());
                             x6150))|])
    let (forEach :
      'tags this ->
        callbackfn:(value:float -> index:float -> array:t -> unit) ->
          ?thisArg:any -> unit -> unit)
      =
      fun (x6165 : 'tags this) ->
        fun
          ~callbackfn:(x6158 : value:float -> index:float -> array:t -> unit)
          ->
          fun ?thisArg:(x6159 : any option) ->
            fun () ->
              ignore
                (let x6167 = this_to_js Obj.magic x6165 in
                 Ojs.call (Ojs.get_prop_ascii x6167 "forEach") "apply"
                   [|x6167;((let x6160 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6160 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x6162 : Ojs.t) ->
                                          fun (x6163 : Ojs.t) ->
                                            fun (x6164 : Ojs.t) ->
                                              x6158
                                                ~value:(Ojs.float_of_js x6162)
                                                ~index:(Ojs.float_of_js x6163)
                                                ~array:(t_of_js x6164)))|]);
                             (match x6159 with
                              | Some x6161 ->
                                  ignore
                                    (Ojs.call x6160 "push"
                                       [|(any_to_js x6161)|])
                              | None -> ());
                             x6160))|])
    let (indexOf :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> float)
      =
      fun (x6172 : 'tags this) ->
        fun ~searchElement:(x6168 : float) ->
          fun ?fromIndex:(x6169 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x6174 = this_to_js Obj.magic x6172 in
                 Ojs.call (Ojs.get_prop_ascii x6174 "indexOf") "apply"
                   [|x6174;((let x6170 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6170 "push"
                                  [|(Ojs.float_to_js x6168)|]);
                             (match x6169 with
                              | Some x6171 ->
                                  ignore
                                    (Ojs.call x6170 "push"
                                       [|(Ojs.float_to_js x6171)|])
                              | None -> ());
                             x6170))|])
    let (join : 'tags this -> ?separator:string -> unit -> string) =
      fun (x6178 : 'tags this) ->
        fun ?separator:(x6175 : string option) ->
          fun () ->
            Ojs.string_of_js
              (let x6180 = this_to_js Obj.magic x6178 in
               Ojs.call (Ojs.get_prop_ascii x6180 "join") "apply"
                 [|x6180;((let x6176 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x6175 with
                            | Some x6177 ->
                                ignore
                                  (Ojs.call x6176 "push"
                                     [|(Ojs.string_to_js x6177)|])
                            | None -> ());
                           x6176))|])
    let (lastIndexOf :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> float)
      =
      fun (x6185 : 'tags this) ->
        fun ~searchElement:(x6181 : float) ->
          fun ?fromIndex:(x6182 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x6187 = this_to_js Obj.magic x6185 in
                 Ojs.call (Ojs.get_prop_ascii x6187 "lastIndexOf") "apply"
                   [|x6187;((let x6183 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6183 "push"
                                  [|(Ojs.float_to_js x6181)|]);
                             (match x6182 with
                              | Some x6184 ->
                                  ignore
                                    (Ojs.call x6183 "push"
                                       [|(Ojs.float_to_js x6184)|])
                              | None -> ());
                             x6183))|])
    let (get_length : 'tags this -> float) =
      fun (x6188 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6188) "length")
    let (map :
      'tags this ->
        callbackfn:(value:float -> index:float -> array:t -> float) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x6197 : 'tags this) ->
        fun
          ~callbackfn:(x6190 :
                        value:float -> index:float -> array:t -> float)
          ->
          fun ?thisArg:(x6191 : any option) ->
            fun () ->
              t_of_js
                (let x6199 = this_to_js Obj.magic x6197 in
                 Ojs.call (Ojs.get_prop_ascii x6199 "map") "apply"
                   [|x6199;((let x6192 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6192 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x6194 : Ojs.t) ->
                                          fun (x6195 : Ojs.t) ->
                                            fun (x6196 : Ojs.t) ->
                                              Ojs.float_to_js
                                                (x6190
                                                   ~value:(Ojs.float_of_js
                                                             x6194)
                                                   ~index:(Ojs.float_of_js
                                                             x6195)
                                                   ~array:(t_of_js x6196))))|]);
                             (match x6191 with
                              | Some x6193 ->
                                  ignore
                                    (Ojs.call x6192 "push"
                                       [|(any_to_js x6193)|])
                              | None -> ());
                             x6192))|])
    let (reduce :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> float)
      =
      fun (x6205 : 'tags this) ->
        fun
          ~callbackfn:(x6200 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x6205) "reduce"
               [|(Ojs.fun_to_js 4
                    (fun (x6201 : Ojs.t) ->
                       fun (x6202 : Ojs.t) ->
                         fun (x6203 : Ojs.t) ->
                           fun (x6204 : Ojs.t) ->
                             Ojs.float_to_js
                               (x6200 ~previousValue:(Ojs.float_of_js x6201)
                                  ~currentValue:(Ojs.float_of_js x6202)
                                  ~currentIndex:(Ojs.float_of_js x6203)
                                  ~array:(t_of_js x6204))))|])
    let (reduce' :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> initialValue:float -> float)
      =
      fun (x6213 : 'tags this) ->
        fun
          ~callbackfn:(x6207 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          fun ~initialValue:(x6212 : float) ->
            Ojs.float_of_js
              (Ojs.call (this_to_js Obj.magic x6213) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x6208 : Ojs.t) ->
                         fun (x6209 : Ojs.t) ->
                           fun (x6210 : Ojs.t) ->
                             fun (x6211 : Ojs.t) ->
                               Ojs.float_to_js
                                 (x6207
                                    ~previousValue:(Ojs.float_of_js x6208)
                                    ~currentValue:(Ojs.float_of_js x6209)
                                    ~currentIndex:(Ojs.float_of_js x6210)
                                    ~array:(t_of_js x6211))));(Ojs.float_to_js
                                                                 x6212)|])
    let (reduce'' :
      'tags this ->
        callbackfn:(previousValue:'U ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x6221 : 'tags this) ->
        fun
          ~callbackfn:(x6215 :
                        previousValue:'U ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x6220 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic x6221) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x6216 : Ojs.t) ->
                         fun (x6217 : Ojs.t) ->
                           fun (x6218 : Ojs.t) ->
                             fun (x6219 : Ojs.t) ->
                               Obj.magic
                                 (x6215 ~previousValue:(Obj.magic x6216)
                                    ~currentValue:(Ojs.float_of_js x6217)
                                    ~currentIndex:(Ojs.float_of_js x6218)
                                    ~array:(t_of_js x6219))));(Obj.magic
                                                                 x6220)|])
    let (reduceRight :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> float)
      =
      fun (x6228 : 'tags this) ->
        fun
          ~callbackfn:(x6223 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x6228) "reduceRight"
               [|(Ojs.fun_to_js 4
                    (fun (x6224 : Ojs.t) ->
                       fun (x6225 : Ojs.t) ->
                         fun (x6226 : Ojs.t) ->
                           fun (x6227 : Ojs.t) ->
                             Ojs.float_to_js
                               (x6223 ~previousValue:(Ojs.float_of_js x6224)
                                  ~currentValue:(Ojs.float_of_js x6225)
                                  ~currentIndex:(Ojs.float_of_js x6226)
                                  ~array:(t_of_js x6227))))|])
    let (reduceRight' :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> initialValue:float -> float)
      =
      fun (x6236 : 'tags this) ->
        fun
          ~callbackfn:(x6230 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          fun ~initialValue:(x6235 : float) ->
            Ojs.float_of_js
              (Ojs.call (this_to_js Obj.magic x6236) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x6231 : Ojs.t) ->
                         fun (x6232 : Ojs.t) ->
                           fun (x6233 : Ojs.t) ->
                             fun (x6234 : Ojs.t) ->
                               Ojs.float_to_js
                                 (x6230
                                    ~previousValue:(Ojs.float_of_js x6231)
                                    ~currentValue:(Ojs.float_of_js x6232)
                                    ~currentIndex:(Ojs.float_of_js x6233)
                                    ~array:(t_of_js x6234))));(Ojs.float_to_js
                                                                 x6235)|])
    let (reduceRight'' :
      'tags this ->
        callbackfn:(previousValue:'U ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x6244 : 'tags this) ->
        fun
          ~callbackfn:(x6238 :
                        previousValue:'U ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x6243 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic x6244) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x6239 : Ojs.t) ->
                         fun (x6240 : Ojs.t) ->
                           fun (x6241 : Ojs.t) ->
                             fun (x6242 : Ojs.t) ->
                               Obj.magic
                                 (x6238 ~previousValue:(Obj.magic x6239)
                                    ~currentValue:(Ojs.float_of_js x6240)
                                    ~currentIndex:(Ojs.float_of_js x6241)
                                    ~array:(t_of_js x6242))));(Obj.magic
                                                                 x6243)|])
    let (reverse : 'tags this -> t) =
      fun (x6246 : 'tags this) ->
        t_of_js (Ojs.call (this_to_js Obj.magic x6246) "reverse" [||])
    let (set_ :
      'tags this -> array:float ArrayLike.t -> ?offset:float -> unit -> unit)
      =
      fun (x6253 : 'tags this) ->
        fun ~array:(x6248 : float ArrayLike.t) ->
          fun ?offset:(x6249 : float option) ->
            fun () ->
              ignore
                (let x6255 = this_to_js Obj.magic x6253 in
                 Ojs.call (Ojs.get_prop_ascii x6255 "set") "apply"
                   [|x6255;((let x6250 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6250 "push"
                                  [|(ArrayLike.t_to_js Ojs.float_to_js x6248)|]);
                             (match x6249 with
                              | Some x6251 ->
                                  ignore
                                    (Ojs.call x6250 "push"
                                       [|(Ojs.float_to_js x6251)|])
                              | None -> ());
                             x6250))|])
    let (slice : 'tags this -> ?start:float -> ?end_:float -> unit -> t) =
      fun (x6261 : 'tags this) ->
        fun ?start:(x6256 : float option) ->
          fun ?end_:(x6257 : float option) ->
            fun () ->
              t_of_js
                (let x6263 = this_to_js Obj.magic x6261 in
                 Ojs.call (Ojs.get_prop_ascii x6263 "slice") "apply"
                   [|x6263;((let x6258 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x6256 with
                              | Some x6260 ->
                                  ignore
                                    (Ojs.call x6258 "push"
                                       [|(Ojs.float_to_js x6260)|])
                              | None -> ());
                             (match x6257 with
                              | Some x6259 ->
                                  ignore
                                    (Ojs.call x6258 "push"
                                       [|(Ojs.float_to_js x6259)|])
                              | None -> ());
                             x6258))|])
    let (some :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x6271 : 'tags this) ->
        fun
          ~predicate:(x6264 :
                       value:float -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x6265 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x6273 = this_to_js Obj.magic x6271 in
                 Ojs.call (Ojs.get_prop_ascii x6273 "some") "apply"
                   [|x6273;((let x6266 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6266 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x6268 : Ojs.t) ->
                                          fun (x6269 : Ojs.t) ->
                                            fun (x6270 : Ojs.t) ->
                                              unknown_to_js
                                                (x6264
                                                   ~value:(Ojs.float_of_js
                                                             x6268)
                                                   ~index:(Ojs.float_of_js
                                                             x6269)
                                                   ~array:(t_of_js x6270))))|]);
                             (match x6265 with
                              | Some x6267 ->
                                  ignore
                                    (Ojs.call x6266 "push"
                                       [|(any_to_js x6267)|])
                              | None -> ());
                             x6266))|])
    let (sort :
      'tags this ->
        ?compareFn:(a:float -> b:float -> float) -> unit -> 'tags this)
      =
      fun (x6279 : 'tags this) ->
        fun ?compareFn:(x6274 : (a:float -> b:float -> float) option) ->
          fun () ->
            this_of_js Obj.magic
              (let x6281 = this_to_js Obj.magic x6279 in
               Ojs.call (Ojs.get_prop_ascii x6281 "sort") "apply"
                 [|x6281;((let x6275 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x6274 with
                            | Some x6276 ->
                                ignore
                                  (Ojs.call x6275 "push"
                                     [|(Ojs.fun_to_js 2
                                          (fun (x6277 : Ojs.t) ->
                                             fun (x6278 : Ojs.t) ->
                                               Ojs.float_to_js
                                                 (x6276
                                                    ~a:(Ojs.float_of_js x6277)
                                                    ~b:(Ojs.float_of_js x6278))))|])
                            | None -> ());
                           x6275))|])
    let (subarray : 'tags this -> ?begin_:float -> ?end_:float -> unit -> t)
      =
      fun (x6288 : 'tags this) ->
        fun ?begin_:(x6283 : float option) ->
          fun ?end_:(x6284 : float option) ->
            fun () ->
              t_of_js
                (let x6290 = this_to_js Obj.magic x6288 in
                 Ojs.call (Ojs.get_prop_ascii x6290 "subarray") "apply"
                   [|x6290;((let x6285 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x6283 with
                              | Some x6287 ->
                                  ignore
                                    (Ojs.call x6285 "push"
                                       [|(Ojs.float_to_js x6287)|])
                              | None -> ());
                             (match x6284 with
                              | Some x6286 ->
                                  ignore
                                    (Ojs.call x6285 "push"
                                       [|(Ojs.float_to_js x6286)|])
                              | None -> ());
                             x6285))|])
    let (toLocaleString : 'tags this -> string) =
      fun (x6291 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x6291) "toLocaleString" [||])
    let (toString : 'tags this -> string) =
      fun (x6293 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x6293) "toString" [||])
    let (valueOf : 'tags this -> t) =
      fun (x6295 : 'tags this) ->
        t_of_js (Ojs.call (this_to_js Obj.magic x6295) "valueOf" [||])
    let (get : 'tags this -> float -> float) =
      fun (x6297 : 'tags this) ->
        fun (x6299 : float) ->
          Ojs.float_of_js
            (Ojs.get_prop (this_to_js Obj.magic x6297)
               (Ojs.float_to_js x6299))
    let (set : 'tags this -> float -> float -> unit) =
      fun (x6300 : 'tags this) ->
        fun (x6302 : float) ->
          fun (x6303 : float) ->
            Ojs.set_prop (this_to_js Obj.magic x6300) (Ojs.float_to_js x6302)
              (Ojs.float_to_js x6303)
    let (create : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Float32Array") [||])
    let (create' : float Iterable.t -> t) =
      fun (x6304 : float Iterable.t) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Float32Array")
             [|(Iterable.t_to_js Ojs.float_to_js x6304)|])
    let (from :
      arrayLike:float Iterable.t ->
        ?mapfn:(v:float -> k:float -> float) -> ?thisArg:any -> unit -> t)
      =
      fun ~arrayLike:(x6306 : float Iterable.t) ->
        fun ?mapfn:(x6307 : (v:float -> k:float -> float) option) ->
          fun ?thisArg:(x6308 : any option) ->
            fun () ->
              t_of_js
                (let x6315 = Ojs.get_prop_ascii Ojs.global "Float32Array" in
                 Ojs.call (Ojs.get_prop_ascii x6315 "from") "apply"
                   [|x6315;((let x6309 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6309 "push"
                                  [|(Iterable.t_to_js Ojs.float_to_js x6306)|]);
                             (match x6307 with
                              | Some x6311 ->
                                  ignore
                                    (Ojs.call x6309 "push"
                                       [|(Ojs.fun_to_js 2
                                            (fun (x6312 : Ojs.t) ->
                                               fun (x6313 : Ojs.t) ->
                                                 Ojs.float_to_js
                                                   (x6311
                                                      ~v:(Ojs.float_of_js
                                                            x6312)
                                                      ~k:(Ojs.float_of_js
                                                            x6313))))|])
                              | None -> ());
                             (match x6308 with
                              | Some x6310 ->
                                  ignore
                                    (Ojs.call x6309 "push"
                                       [|(any_to_js x6310)|])
                              | None -> ());
                             x6309))|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Float32Array")
             "prototype")
    let (create'' : float -> t) =
      fun (x6316 : float) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Float32Array")
             [|(Ojs.float_to_js x6316)|])
    let (create''' :
      [ `U1 of float ArrayLike.t  | `U2 of ArrayBufferLike.t ] -> t) =
      fun (x6317 : [ `U1 of float ArrayLike.t  | `U2 of ArrayBufferLike.t ])
        ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Float32Array")
             [|((match x6317 with
                 | `U1 x6318 -> ArrayLike.t_to_js Ojs.float_to_js x6318
                 | `U2 x6320 -> ArrayBufferLike.t_to_js x6320))|])
    let (create'''' :
      buffer:ArrayBufferLike.t ->
        ?byteOffset:float -> ?length:float -> unit -> t)
      =
      fun ~buffer:(x6321 : ArrayBufferLike.t) ->
        fun ?byteOffset:(x6322 : float option) ->
          fun ?length:(x6323 : float option) ->
            fun () ->
              t_of_js
                (Ojs.new_obj_arr
                   (Ojs.get_prop_ascii Ojs.global "Float32Array")
                   (let x6324 =
                      Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                        [||] in
                    ignore
                      (Ojs.call x6324 "push"
                         [|(ArrayBufferLike.t_to_js x6321)|]);
                    (match x6322 with
                     | Some x6326 ->
                         ignore
                           (Ojs.call x6324 "push" [|(Ojs.float_to_js x6326)|])
                     | None -> ());
                    (match x6323 with
                     | Some x6325 ->
                         ignore
                           (Ojs.call x6324 "push" [|(Ojs.float_to_js x6325)|])
                     | None -> ());
                    x6324))
    let (bytes_per_element : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Float32Array")
             "BYTES_PER_ELEMENT")
    let (of_ : float list -> t) =
      fun (x6327 : float list) ->
        t_of_js
          (let x6330 = Ojs.get_prop_ascii Ojs.global "Float32Array" in
           Ojs.call (Ojs.get_prop_ascii x6330 "of") "apply"
             [|x6330;((let x6328 =
                         Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                           [||] in
                       List.iter
                         (fun (x6329 : float) ->
                            ignore
                              (Ojs.call x6328 "push"
                                 [|(Ojs.float_to_js x6329)|])) x6327;
                       x6328))|])
    let (from' : float ArrayLike.t -> t) =
      fun (x6331 : float ArrayLike.t) ->
        t_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Float32Array") "from"
             [|(ArrayLike.t_to_js Ojs.float_to_js x6331)|])
    let (from'' :
      arrayLike:'T ArrayLike.t ->
        mapfn:(v:'T -> k:float -> float) -> ?thisArg:any -> unit -> t)
      =
      fun ~arrayLike:(x6333 : 'T ArrayLike.t) ->
        fun ~mapfn:(x6334 : v:'T -> k:float -> float) ->
          fun ?thisArg:(x6335 : any option) ->
            fun () ->
              t_of_js
                (let x6341 = Ojs.get_prop_ascii Ojs.global "Float32Array" in
                 Ojs.call (Ojs.get_prop_ascii x6341 "from") "apply"
                   [|x6341;((let x6336 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6336 "push"
                                  [|(ArrayLike.t_to_js Obj.magic x6333)|]);
                             ignore
                               (Ojs.call x6336 "push"
                                  [|(Ojs.fun_to_js 2
                                       (fun (x6338 : Ojs.t) ->
                                          fun (x6339 : Ojs.t) ->
                                            Ojs.float_to_js
                                              (x6334 ~v:(Obj.magic x6338)
                                                 ~k:(Ojs.float_of_js x6339))))|]);
                             (match x6335 with
                              | Some x6337 ->
                                  ignore
                                    (Ojs.call x6336 "push"
                                       [|(any_to_js x6337)|])
                              | None -> ());
                             x6336))|])
    let cast_from = Obj.magic
  end
module FinalizationRegistry =
  struct
    type 'T t = [ `FinalizationRegistry of 'T ] intf
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun _T -> Obj.magic
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun _T -> Obj.magic
    type 'T t_1 = 'T t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 =
      fun (type __T) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x6344 : Ojs.t) -> t_of_js __T_of_js x6344
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t =
      fun (type __T) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x6342 : __T t) -> t_to_js __T_to_js x6342
    type t_0 = any t
    let rec t_0_of_js : Ojs.t -> t_0 =
      fun (x6348 : Ojs.t) -> t_of_js any_of_js x6348
    and t_0_to_js : t_0 -> Ojs.t =
      fun (x6346 : any t) -> t_to_js any_to_js x6346
    type 'T tags = [ `FinalizationRegistry of 'T ]
    type 'T tags_1 = 'T tags
    type tags_0 = any tags
    type ('tags, 'T) this =
      'tags intf constraint 'tags = [> `FinalizationRegistry of 'T ]
    let rec this_of_js :
      'tags 'T .
        (Ojs.t -> 'tags) -> (Ojs.t -> 'T) -> Ojs.t -> ('tags, 'T) this
      =
      fun (type __tags) ->
        fun (type __T) ->
          fun (__tags_of_js : Ojs.t -> __tags) ->
            fun (__T_of_js : Ojs.t -> __T) ->
              fun (x6352 : Ojs.t) -> intf_of_js __tags_of_js x6352
    and this_to_js :
      'tags 'T .
        ('tags -> Ojs.t) -> ('T -> Ojs.t) -> ('tags, 'T) this -> Ojs.t
      =
      fun (type __tags) ->
        fun (type __T) ->
          fun (__tags_to_js : __tags -> Ojs.t) ->
            fun (__T_to_js : __T -> Ojs.t) ->
              fun (x6350 : __tags intf) -> intf_to_js __tags_to_js x6350
    let (register :
      ('tags, 'T) this ->
        target:untyped_object ->
          heldValue:any -> ?unregisterToken:untyped_object -> unit -> unit)
      =
      fun (x6359 : ('tags, 'T) this) ->
        fun ~target:(x6354 : untyped_object) ->
          fun ~heldValue:(x6355 : any) ->
            fun ?unregisterToken:(x6356 : untyped_object option) ->
              fun () ->
                ignore
                  (let x6362 = this_to_js Obj.magic Obj.magic x6359 in
                   Ojs.call (Ojs.get_prop_ascii x6362 "register") "apply"
                     [|x6362;((let x6357 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x6357 "push"
                                    [|(untyped_object_to_js x6354)|]);
                               ignore
                                 (Ojs.call x6357 "push" [|(any_to_js x6355)|]);
                               (match x6356 with
                                | Some x6358 ->
                                    ignore
                                      (Ojs.call x6357 "push"
                                         [|(untyped_object_to_js x6358)|])
                                | None -> ());
                               x6357))|])
    let (unregister :
      ('tags, 'T) this -> unregisterToken:untyped_object -> unit) =
      fun (x6364 : ('tags, 'T) this) ->
        fun ~unregisterToken:(x6363 : untyped_object) ->
          ignore
            (Ojs.call (this_to_js Obj.magic Obj.magic x6364) "unregister"
               [|(untyped_object_to_js x6363)|])
    let (register' :
      ('tags, 'T) this ->
        target:untyped_object ->
          heldValue:'T -> ?unregisterToken:untyped_object -> unit -> unit)
      =
      fun (x6372 : ('tags, 'T) this) ->
        fun ~target:(x6367 : untyped_object) ->
          fun ~heldValue:(x6368 : 'T) ->
            fun ?unregisterToken:(x6369 : untyped_object option) ->
              fun () ->
                ignore
                  (let x6375 = this_to_js Obj.magic Obj.magic x6372 in
                   Ojs.call (Ojs.get_prop_ascii x6375 "register") "apply"
                     [|x6375;((let x6370 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x6370 "push"
                                    [|(untyped_object_to_js x6367)|]);
                               ignore
                                 (Ojs.call x6370 "push" [|(Obj.magic x6368)|]);
                               (match x6369 with
                                | Some x6371 ->
                                    ignore
                                      (Ojs.call x6370 "push"
                                         [|(untyped_object_to_js x6371)|])
                                | None -> ());
                               x6370))|])
    let (unregister' :
      ('tags, 'T) this -> unregisterToken:untyped_object -> unit) =
      fun (x6377 : ('tags, 'T) this) ->
        fun ~unregisterToken:(x6376 : untyped_object) ->
          ignore
            (Ojs.call (this_to_js Obj.magic Obj.magic x6377) "unregister"
               [|(untyped_object_to_js x6376)|])
    let (prototype : unit -> t_0) =
      fun () ->
        t_0_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "FinalizationRegistry")
             "prototype")
    let (create : (any -> unit) -> t_0) =
      fun (x6380 : any -> unit) ->
        t_0_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "FinalizationRegistry")
             [|(Ojs.fun_to_js 1
                  (fun (x6381 : Ojs.t) -> x6380 (any_of_js x6381)))|])
    let (prototype' : unit -> any t) =
      fun () ->
        t_of_js any_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "FinalizationRegistry")
             "prototype")
    let (create' : ('T -> unit) -> 'T t) =
      fun (x6383 : 'T -> unit) ->
        t_of_js Obj.magic
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "FinalizationRegistry")
             [|(Ojs.fun_to_js 1
                  (fun (x6384 : Ojs.t) -> x6383 (Obj.magic x6384)))|])
    let cast_from = Obj.magic
  end
module Extract =
  struct
    type ('T, 'U) t = any
    let rec t_of_js :
      'T 'U . (Ojs.t -> 'T) -> (Ojs.t -> 'U) -> Ojs.t -> ('T, 'U) t =
      fun (type __T) ->
        fun (type __U) ->
          fun (__T_of_js : Ojs.t -> __T) ->
            fun (__U_of_js : Ojs.t -> __U) ->
              fun (x6387 : Ojs.t) -> any_of_js x6387
    and t_to_js :
      'T 'U . ('T -> Ojs.t) -> ('U -> Ojs.t) -> ('T, 'U) t -> Ojs.t =
      fun (type __T) ->
        fun (type __U) ->
          fun (__T_to_js : __T -> Ojs.t) ->
            fun (__U_to_js : __U -> Ojs.t) ->
              fun (x6386 : any) -> any_to_js x6386
    type ('T, 'U) t_2 = ('T, 'U) t
    let rec t_2_of_js :
      'T 'U . (Ojs.t -> 'T) -> (Ojs.t -> 'U) -> Ojs.t -> ('T, 'U) t_2 =
      fun (type __T) ->
        fun (type __U) ->
          fun (__T_of_js : Ojs.t -> __T) ->
            fun (__U_of_js : Ojs.t -> __U) ->
              fun (x6391 : Ojs.t) -> t_of_js __T_of_js __U_of_js x6391
    and t_2_to_js :
      'T 'U . ('T -> Ojs.t) -> ('U -> Ojs.t) -> ('T, 'U) t_2 -> Ojs.t =
      fun (type __T) ->
        fun (type __U) ->
          fun (__T_to_js : __T -> Ojs.t) ->
            fun (__U_to_js : __U -> Ojs.t) ->
              fun (x6388 : (__T, __U) t) -> t_to_js __T_to_js __U_to_js x6388
  end
module EvalError =
  struct
    type t = [ `Error  | `EvalError ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x6395 : Ojs.t) -> t_of_js x6395
    and t_0_to_js : t_0 -> Ojs.t = fun (x6394 : t) -> t_to_js x6394
    type tags = [ `Error  | `EvalError ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `EvalError ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x6398 : Ojs.t) -> intf_of_js __tags_of_js x6398
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x6396 : __tags intf) -> intf_to_js __tags_to_js x6396
    let (create : ?message:string -> ?options:ErrorOptions.t -> unit -> t) =
      fun ?message:(x6400 : string option) ->
        fun ?options:(x6401 : ErrorOptions.t option) ->
          fun () ->
            t_of_js
              (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "EvalError")
                 (let x6402 =
                    Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                  (match x6400 with
                   | Some x6404 ->
                       ignore
                         (Ojs.call x6402 "push" [|(Ojs.string_to_js x6404)|])
                   | None -> ());
                  (match x6401 with
                   | Some x6403 ->
                       ignore
                         (Ojs.call x6402 "push"
                            [|(ErrorOptions.t_to_js x6403)|])
                   | None -> ());
                  x6402))
    let (invoke : ?message:string -> ?options:ErrorOptions.t -> unit -> t) =
      fun ?message:(x6405 : string option) ->
        fun ?options:(x6406 : ErrorOptions.t option) ->
          fun () ->
            t_of_js
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "EvalError") "apply"
                 [|Ojs.null;((let x6407 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              (match x6405 with
                               | Some x6409 ->
                                   ignore
                                     (Ojs.call x6407 "push"
                                        [|(Ojs.string_to_js x6409)|])
                               | None -> ());
                              (match x6406 with
                               | Some x6408 ->
                                   ignore
                                     (Ojs.call x6407 "push"
                                        [|(ErrorOptions.t_to_js x6408)|])
                               | None -> ());
                              x6407))|])
    let (create' : ?message:string -> unit -> t) =
      fun ?message:(x6410 : string option) ->
        fun () ->
          t_of_js
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "EvalError")
               (let x6411 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x6410 with
                 | Some x6412 ->
                     ignore
                       (Ojs.call x6411 "push" [|(Ojs.string_to_js x6412)|])
                 | None -> ());
                x6411))
    let (invoke' : ?message:string -> unit -> t) =
      fun ?message:(x6413 : string option) ->
        fun () ->
          t_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "EvalError") "apply"
               [|Ojs.null;((let x6414 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x6413 with
                             | Some x6415 ->
                                 ignore
                                   (Ojs.call x6414 "push"
                                      [|(Ojs.string_to_js x6415)|])
                             | None -> ());
                            x6414))|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "EvalError")
             "prototype")
    let cast_from = Obj.magic
  end
module DataView =
  struct
    type t = [ `DataView ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x6417 : Ojs.t) -> t_of_js x6417
    and t_0_to_js : t_0 -> Ojs.t = fun (x6416 : t) -> t_to_js x6416
    type tags = [ `DataView ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `DataView ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x6420 : Ojs.t) -> intf_of_js __tags_of_js x6420
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x6418 : __tags intf) -> intf_to_js __tags_to_js x6418
    let (getBigInt64 :
      'tags this -> byteOffset:float -> ?littleEndian:bool -> unit -> bigint)
      =
      fun (x6426 : 'tags this) ->
        fun ~byteOffset:(x6422 : float) ->
          fun ?littleEndian:(x6423 : bool option) ->
            fun () ->
              bigint_of_js
                (let x6428 = this_to_js Obj.magic x6426 in
                 Ojs.call (Ojs.get_prop_ascii x6428 "getBigInt64") "apply"
                   [|x6428;((let x6424 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6424 "push"
                                  [|(Ojs.float_to_js x6422)|]);
                             (match x6423 with
                              | Some x6425 ->
                                  ignore
                                    (Ojs.call x6424 "push"
                                       [|(Ojs.bool_to_js x6425)|])
                              | None -> ());
                             x6424))|])
    let (getBigUint64 :
      'tags this -> byteOffset:float -> ?littleEndian:bool -> unit -> bigint)
      =
      fun (x6433 : 'tags this) ->
        fun ~byteOffset:(x6429 : float) ->
          fun ?littleEndian:(x6430 : bool option) ->
            fun () ->
              bigint_of_js
                (let x6435 = this_to_js Obj.magic x6433 in
                 Ojs.call (Ojs.get_prop_ascii x6435 "getBigUint64") "apply"
                   [|x6435;((let x6431 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6431 "push"
                                  [|(Ojs.float_to_js x6429)|]);
                             (match x6430 with
                              | Some x6432 ->
                                  ignore
                                    (Ojs.call x6431 "push"
                                       [|(Ojs.bool_to_js x6432)|])
                              | None -> ());
                             x6431))|])
    let (setBigInt64 :
      'tags this ->
        byteOffset:float ->
          value:bigint -> ?littleEndian:bool -> unit -> unit)
      =
      fun (x6441 : 'tags this) ->
        fun ~byteOffset:(x6436 : float) ->
          fun ~value:(x6437 : bigint) ->
            fun ?littleEndian:(x6438 : bool option) ->
              fun () ->
                ignore
                  (let x6443 = this_to_js Obj.magic x6441 in
                   Ojs.call (Ojs.get_prop_ascii x6443 "setBigInt64") "apply"
                     [|x6443;((let x6439 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x6439 "push"
                                    [|(Ojs.float_to_js x6436)|]);
                               ignore
                                 (Ojs.call x6439 "push"
                                    [|(bigint_to_js x6437)|]);
                               (match x6438 with
                                | Some x6440 ->
                                    ignore
                                      (Ojs.call x6439 "push"
                                         [|(Ojs.bool_to_js x6440)|])
                                | None -> ());
                               x6439))|])
    let (setBigUint64 :
      'tags this ->
        byteOffset:float ->
          value:bigint -> ?littleEndian:bool -> unit -> unit)
      =
      fun (x6449 : 'tags this) ->
        fun ~byteOffset:(x6444 : float) ->
          fun ~value:(x6445 : bigint) ->
            fun ?littleEndian:(x6446 : bool option) ->
              fun () ->
                ignore
                  (let x6451 = this_to_js Obj.magic x6449 in
                   Ojs.call (Ojs.get_prop_ascii x6451 "setBigUint64") "apply"
                     [|x6451;((let x6447 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x6447 "push"
                                    [|(Ojs.float_to_js x6444)|]);
                               ignore
                                 (Ojs.call x6447 "push"
                                    [|(bigint_to_js x6445)|]);
                               (match x6446 with
                                | Some x6448 ->
                                    ignore
                                      (Ojs.call x6447 "push"
                                         [|(Ojs.bool_to_js x6448)|])
                                | None -> ());
                               x6447))|])
    let (get_buffer : 'tags this -> ArrayBuffer.t) =
      fun (x6452 : 'tags this) ->
        ArrayBuffer.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6452) "buffer")
    let (get_byteLength : 'tags this -> float) =
      fun (x6454 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6454) "byteLength")
    let (get_byteOffset : 'tags this -> float) =
      fun (x6456 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6456) "byteOffset")
    let (getFloat32 :
      'tags this -> byteOffset:float -> ?littleEndian:bool -> unit -> float)
      =
      fun (x6462 : 'tags this) ->
        fun ~byteOffset:(x6458 : float) ->
          fun ?littleEndian:(x6459 : bool option) ->
            fun () ->
              Ojs.float_of_js
                (let x6464 = this_to_js Obj.magic x6462 in
                 Ojs.call (Ojs.get_prop_ascii x6464 "getFloat32") "apply"
                   [|x6464;((let x6460 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6460 "push"
                                  [|(Ojs.float_to_js x6458)|]);
                             (match x6459 with
                              | Some x6461 ->
                                  ignore
                                    (Ojs.call x6460 "push"
                                       [|(Ojs.bool_to_js x6461)|])
                              | None -> ());
                             x6460))|])
    let (getFloat64 :
      'tags this -> byteOffset:float -> ?littleEndian:bool -> unit -> float)
      =
      fun (x6469 : 'tags this) ->
        fun ~byteOffset:(x6465 : float) ->
          fun ?littleEndian:(x6466 : bool option) ->
            fun () ->
              Ojs.float_of_js
                (let x6471 = this_to_js Obj.magic x6469 in
                 Ojs.call (Ojs.get_prop_ascii x6471 "getFloat64") "apply"
                   [|x6471;((let x6467 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6467 "push"
                                  [|(Ojs.float_to_js x6465)|]);
                             (match x6466 with
                              | Some x6468 ->
                                  ignore
                                    (Ojs.call x6467 "push"
                                       [|(Ojs.bool_to_js x6468)|])
                              | None -> ());
                             x6467))|])
    let (getInt8 : 'tags this -> byteOffset:float -> float) =
      fun (x6473 : 'tags this) ->
        fun ~byteOffset:(x6472 : float) ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x6473) "getInt8"
               [|(Ojs.float_to_js x6472)|])
    let (getInt16 :
      'tags this -> byteOffset:float -> ?littleEndian:bool -> unit -> float)
      =
      fun (x6479 : 'tags this) ->
        fun ~byteOffset:(x6475 : float) ->
          fun ?littleEndian:(x6476 : bool option) ->
            fun () ->
              Ojs.float_of_js
                (let x6481 = this_to_js Obj.magic x6479 in
                 Ojs.call (Ojs.get_prop_ascii x6481 "getInt16") "apply"
                   [|x6481;((let x6477 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6477 "push"
                                  [|(Ojs.float_to_js x6475)|]);
                             (match x6476 with
                              | Some x6478 ->
                                  ignore
                                    (Ojs.call x6477 "push"
                                       [|(Ojs.bool_to_js x6478)|])
                              | None -> ());
                             x6477))|])
    let (getInt32 :
      'tags this -> byteOffset:float -> ?littleEndian:bool -> unit -> float)
      =
      fun (x6486 : 'tags this) ->
        fun ~byteOffset:(x6482 : float) ->
          fun ?littleEndian:(x6483 : bool option) ->
            fun () ->
              Ojs.float_of_js
                (let x6488 = this_to_js Obj.magic x6486 in
                 Ojs.call (Ojs.get_prop_ascii x6488 "getInt32") "apply"
                   [|x6488;((let x6484 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6484 "push"
                                  [|(Ojs.float_to_js x6482)|]);
                             (match x6483 with
                              | Some x6485 ->
                                  ignore
                                    (Ojs.call x6484 "push"
                                       [|(Ojs.bool_to_js x6485)|])
                              | None -> ());
                             x6484))|])
    let (getUint8 : 'tags this -> byteOffset:float -> float) =
      fun (x6490 : 'tags this) ->
        fun ~byteOffset:(x6489 : float) ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x6490) "getUint8"
               [|(Ojs.float_to_js x6489)|])
    let (getUint16 :
      'tags this -> byteOffset:float -> ?littleEndian:bool -> unit -> float)
      =
      fun (x6496 : 'tags this) ->
        fun ~byteOffset:(x6492 : float) ->
          fun ?littleEndian:(x6493 : bool option) ->
            fun () ->
              Ojs.float_of_js
                (let x6498 = this_to_js Obj.magic x6496 in
                 Ojs.call (Ojs.get_prop_ascii x6498 "getUint16") "apply"
                   [|x6498;((let x6494 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6494 "push"
                                  [|(Ojs.float_to_js x6492)|]);
                             (match x6493 with
                              | Some x6495 ->
                                  ignore
                                    (Ojs.call x6494 "push"
                                       [|(Ojs.bool_to_js x6495)|])
                              | None -> ());
                             x6494))|])
    let (getUint32 :
      'tags this -> byteOffset:float -> ?littleEndian:bool -> unit -> float)
      =
      fun (x6503 : 'tags this) ->
        fun ~byteOffset:(x6499 : float) ->
          fun ?littleEndian:(x6500 : bool option) ->
            fun () ->
              Ojs.float_of_js
                (let x6505 = this_to_js Obj.magic x6503 in
                 Ojs.call (Ojs.get_prop_ascii x6505 "getUint32") "apply"
                   [|x6505;((let x6501 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6501 "push"
                                  [|(Ojs.float_to_js x6499)|]);
                             (match x6500 with
                              | Some x6502 ->
                                  ignore
                                    (Ojs.call x6501 "push"
                                       [|(Ojs.bool_to_js x6502)|])
                              | None -> ());
                             x6501))|])
    let (setFloat32 :
      'tags this ->
        byteOffset:float -> value:float -> ?littleEndian:bool -> unit -> unit)
      =
      fun (x6511 : 'tags this) ->
        fun ~byteOffset:(x6506 : float) ->
          fun ~value:(x6507 : float) ->
            fun ?littleEndian:(x6508 : bool option) ->
              fun () ->
                ignore
                  (let x6513 = this_to_js Obj.magic x6511 in
                   Ojs.call (Ojs.get_prop_ascii x6513 "setFloat32") "apply"
                     [|x6513;((let x6509 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x6509 "push"
                                    [|(Ojs.float_to_js x6506)|]);
                               ignore
                                 (Ojs.call x6509 "push"
                                    [|(Ojs.float_to_js x6507)|]);
                               (match x6508 with
                                | Some x6510 ->
                                    ignore
                                      (Ojs.call x6509 "push"
                                         [|(Ojs.bool_to_js x6510)|])
                                | None -> ());
                               x6509))|])
    let (setFloat64 :
      'tags this ->
        byteOffset:float -> value:float -> ?littleEndian:bool -> unit -> unit)
      =
      fun (x6519 : 'tags this) ->
        fun ~byteOffset:(x6514 : float) ->
          fun ~value:(x6515 : float) ->
            fun ?littleEndian:(x6516 : bool option) ->
              fun () ->
                ignore
                  (let x6521 = this_to_js Obj.magic x6519 in
                   Ojs.call (Ojs.get_prop_ascii x6521 "setFloat64") "apply"
                     [|x6521;((let x6517 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x6517 "push"
                                    [|(Ojs.float_to_js x6514)|]);
                               ignore
                                 (Ojs.call x6517 "push"
                                    [|(Ojs.float_to_js x6515)|]);
                               (match x6516 with
                                | Some x6518 ->
                                    ignore
                                      (Ojs.call x6517 "push"
                                         [|(Ojs.bool_to_js x6518)|])
                                | None -> ());
                               x6517))|])
    let (setInt8 : 'tags this -> byteOffset:float -> value:float -> unit) =
      fun (x6524 : 'tags this) ->
        fun ~byteOffset:(x6522 : float) ->
          fun ~value:(x6523 : float) ->
            ignore
              (Ojs.call (this_to_js Obj.magic x6524) "setInt8"
                 [|(Ojs.float_to_js x6522);(Ojs.float_to_js x6523)|])
    let (setInt16 :
      'tags this ->
        byteOffset:float -> value:float -> ?littleEndian:bool -> unit -> unit)
      =
      fun (x6531 : 'tags this) ->
        fun ~byteOffset:(x6526 : float) ->
          fun ~value:(x6527 : float) ->
            fun ?littleEndian:(x6528 : bool option) ->
              fun () ->
                ignore
                  (let x6533 = this_to_js Obj.magic x6531 in
                   Ojs.call (Ojs.get_prop_ascii x6533 "setInt16") "apply"
                     [|x6533;((let x6529 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x6529 "push"
                                    [|(Ojs.float_to_js x6526)|]);
                               ignore
                                 (Ojs.call x6529 "push"
                                    [|(Ojs.float_to_js x6527)|]);
                               (match x6528 with
                                | Some x6530 ->
                                    ignore
                                      (Ojs.call x6529 "push"
                                         [|(Ojs.bool_to_js x6530)|])
                                | None -> ());
                               x6529))|])
    let (setInt32 :
      'tags this ->
        byteOffset:float -> value:float -> ?littleEndian:bool -> unit -> unit)
      =
      fun (x6539 : 'tags this) ->
        fun ~byteOffset:(x6534 : float) ->
          fun ~value:(x6535 : float) ->
            fun ?littleEndian:(x6536 : bool option) ->
              fun () ->
                ignore
                  (let x6541 = this_to_js Obj.magic x6539 in
                   Ojs.call (Ojs.get_prop_ascii x6541 "setInt32") "apply"
                     [|x6541;((let x6537 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x6537 "push"
                                    [|(Ojs.float_to_js x6534)|]);
                               ignore
                                 (Ojs.call x6537 "push"
                                    [|(Ojs.float_to_js x6535)|]);
                               (match x6536 with
                                | Some x6538 ->
                                    ignore
                                      (Ojs.call x6537 "push"
                                         [|(Ojs.bool_to_js x6538)|])
                                | None -> ());
                               x6537))|])
    let (setUint8 : 'tags this -> byteOffset:float -> value:float -> unit) =
      fun (x6544 : 'tags this) ->
        fun ~byteOffset:(x6542 : float) ->
          fun ~value:(x6543 : float) ->
            ignore
              (Ojs.call (this_to_js Obj.magic x6544) "setUint8"
                 [|(Ojs.float_to_js x6542);(Ojs.float_to_js x6543)|])
    let (setUint16 :
      'tags this ->
        byteOffset:float -> value:float -> ?littleEndian:bool -> unit -> unit)
      =
      fun (x6551 : 'tags this) ->
        fun ~byteOffset:(x6546 : float) ->
          fun ~value:(x6547 : float) ->
            fun ?littleEndian:(x6548 : bool option) ->
              fun () ->
                ignore
                  (let x6553 = this_to_js Obj.magic x6551 in
                   Ojs.call (Ojs.get_prop_ascii x6553 "setUint16") "apply"
                     [|x6553;((let x6549 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x6549 "push"
                                    [|(Ojs.float_to_js x6546)|]);
                               ignore
                                 (Ojs.call x6549 "push"
                                    [|(Ojs.float_to_js x6547)|]);
                               (match x6548 with
                                | Some x6550 ->
                                    ignore
                                      (Ojs.call x6549 "push"
                                         [|(Ojs.bool_to_js x6550)|])
                                | None -> ());
                               x6549))|])
    let (setUint32 :
      'tags this ->
        byteOffset:float -> value:float -> ?littleEndian:bool -> unit -> unit)
      =
      fun (x6559 : 'tags this) ->
        fun ~byteOffset:(x6554 : float) ->
          fun ~value:(x6555 : float) ->
            fun ?littleEndian:(x6556 : bool option) ->
              fun () ->
                ignore
                  (let x6561 = this_to_js Obj.magic x6559 in
                   Ojs.call (Ojs.get_prop_ascii x6561 "setUint32") "apply"
                     [|x6561;((let x6557 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x6557 "push"
                                    [|(Ojs.float_to_js x6554)|]);
                               ignore
                                 (Ojs.call x6557 "push"
                                    [|(Ojs.float_to_js x6555)|]);
                               (match x6556 with
                                | Some x6558 ->
                                    ignore
                                      (Ojs.call x6557 "push"
                                         [|(Ojs.bool_to_js x6558)|])
                                | None -> ());
                               x6557))|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "DataView")
             "prototype")
    let (create :
      buffer:ArrayBufferLike.t ->
        ?byteOffset:float -> ?byteLength:float -> unit -> t)
      =
      fun ~buffer:(x6562 : ArrayBufferLike.t) ->
        fun ?byteOffset:(x6563 : float option) ->
          fun ?byteLength:(x6564 : float option) ->
            fun () ->
              t_of_js
                (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "DataView")
                   (let x6565 =
                      Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                        [||] in
                    ignore
                      (Ojs.call x6565 "push"
                         [|(ArrayBufferLike.t_to_js x6562)|]);
                    (match x6563 with
                     | Some x6567 ->
                         ignore
                           (Ojs.call x6565 "push" [|(Ojs.float_to_js x6567)|])
                     | None -> ());
                    (match x6564 with
                     | Some x6566 ->
                         ignore
                           (Ojs.call x6565 "push" [|(Ojs.float_to_js x6566)|])
                     | None -> ());
                    x6565))
    let cast_from = Obj.magic
  end
module ConstructorParameters =
  struct
    module AnonymousInterface8 =
      struct
        type t = Ojs.t
        let rec t_of_js : Ojs.t -> t = fun (x6569 : Ojs.t) -> x6569
        and t_to_js : t -> Ojs.t = fun (x6568 : Ojs.t) -> x6568
        let (create : t -> args:any list -> any) =
          fun (x6573 : t) ->
            fun ~args:(x6570 : any list) ->
              any_of_js
                (Ojs.new_obj_arr (t_to_js x6573)
                   (let x6571 =
                      Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                        [||] in
                    List.iter
                      (fun (x6572 : any) ->
                         ignore (Ojs.call x6571 "push" [|(any_to_js x6572)|]))
                      x6570;
                    x6571))
      end
    type 'T t = any
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun (type __T) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x6575 : Ojs.t) -> any_of_js x6575
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t =
      fun (type __T) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x6574 : any) -> any_to_js x6574
    type 'T t_1 = 'T t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 =
      fun (type __T) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x6578 : Ojs.t) -> t_of_js __T_of_js x6578
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t =
      fun (type __T) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x6576 : __T t) -> t_to_js __T_to_js x6576
  end
module ClassDecorator =
  struct
    type t = [ `ClassDecorator ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x6581 : Ojs.t) -> t_of_js x6581
    and t_0_to_js : t_0 -> Ojs.t = fun (x6580 : t) -> t_to_js x6580
    type tags = [ `ClassDecorator ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `ClassDecorator ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x6584 : Ojs.t) -> intf_of_js __tags_of_js x6584
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x6582 : __tags intf) -> intf_to_js __tags_to_js x6582
    let (apply :
      'tags this -> target:'TFunction -> ('TFunction, unit) union2) =
      fun (x6587 : 'tags this) ->
        fun ~target:(x6586 : 'TFunction) ->
          union2_of_js Obj.magic Ojs.unit_of_js
            (Ojs.apply (this_to_js Obj.magic x6587) [|(Obj.magic x6586)|])
    let cast_from = Obj.magic
  end
module Capitalize =
  struct
    type 'S t = Ojs.t
    let rec t_of_js : 'S . (Ojs.t -> 'S) -> Ojs.t -> 'S t =
      fun (type __S) ->
        fun (__S_of_js : Ojs.t -> __S) -> fun (x6592 : Ojs.t) -> x6592
    and t_to_js : 'S . ('S -> Ojs.t) -> 'S t -> Ojs.t =
      fun (type __S) ->
        fun (__S_to_js : __S -> Ojs.t) -> fun (x6591 : Ojs.t) -> x6591
    type 'S t_1 = 'S t
    let rec t_1_of_js : 'S . (Ojs.t -> 'S) -> Ojs.t -> 'S t_1 =
      fun (type __S) ->
        fun (__S_of_js : Ojs.t -> __S) ->
          fun (x6595 : Ojs.t) -> t_of_js __S_of_js x6595
    and t_1_to_js : 'S . ('S -> Ojs.t) -> 'S t_1 -> Ojs.t =
      fun (type __S) ->
        fun (__S_to_js : __S -> Ojs.t) ->
          fun (x6593 : __S t) -> t_to_js __S_to_js x6593
  end
module ThisParameterType =
  struct
    type 'T t = any
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun (type __T) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x6598 : Ojs.t) -> any_of_js x6598
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t =
      fun (type __T) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x6597 : any) -> any_to_js x6597
    type 'T t_1 = 'T t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 =
      fun (type __T) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x6601 : Ojs.t) -> t_of_js __T_of_js x6601
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t =
      fun (type __T) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x6599 : __T t) -> t_to_js __T_to_js x6599
  end
module OmitThisParameter =
  struct
    type 'T t = any
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun (type __T) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x6604 : Ojs.t) -> any_of_js x6604
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t =
      fun (type __T) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x6603 : any) -> any_to_js x6603
    type 'T t_1 = 'T t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 =
      fun (type __T) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x6607 : Ojs.t) -> t_of_js __T_of_js x6607
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t =
      fun (type __T) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x6605 : __T t) -> t_to_js __T_to_js x6605
  end
module CallableFunction =
  struct
    type t = [ `CallableFunction  | `Function  | `Function ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x6610 : Ojs.t) -> t_of_js x6610
    and t_0_to_js : t_0 -> Ojs.t = fun (x6609 : t) -> t_to_js x6609
    type tags = [ `CallableFunction  | `Function  | `Function ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `CallableFunction ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x6613 : Ojs.t) -> intf_of_js __tags_of_js x6613
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x6611 : __tags intf) -> intf_to_js __tags_to_js x6611
    let (apply_ : 'tags this -> this:('T -> 'R) -> thisArg:'T -> 'R) =
      fun (x6618 : 'tags this) ->
        fun ~this:(x6615 : 'T -> 'R) ->
          fun ~thisArg:(x6617 : 'T) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic x6618) "apply"
                 [|(Ojs.fun_to_js 1
                      (fun (x6616 : Ojs.t) ->
                         Obj.magic (x6615 (Obj.magic x6616))));(Obj.magic
                                                                  x6617)|])
    let (apply_' :
      'tags this ->
        this:(this:'T -> args:any list -> 'R) -> thisArg:'T -> args:'A -> 'R)
      =
      fun (x6625 : 'tags this) ->
        fun ~this:(x6620 : this:'T -> args:any list -> 'R) ->
          fun ~thisArg:(x6623 : 'T) ->
            fun ~args:(x6624 : 'A) ->
              Obj.magic
                (Ojs.call (this_to_js Obj.magic x6625) "apply"
                   [|(Ojs.fun_to_js_args
                        (fun (x6621 : _) ->
                           Obj.magic
                             (x6620 ~this:(Obj.magic (Ojs.array_get x6621 0))
                                ~args:(Ojs.list_of_js_from any_of_js x6621 1))));(
                     Obj.magic x6623);(Obj.magic x6624)|])
    let (call :
      'tags this ->
        this:(this:'T -> args:any list -> 'R) ->
          thisArg:'T -> args:any list -> 'R)
      =
      fun (x6634 : 'tags this) ->
        fun ~this:(x6627 : this:'T -> args:any list -> 'R) ->
          fun ~thisArg:(x6628 : 'T) ->
            fun ~args:(x6629 : any list) ->
              Obj.magic
                (let x6636 = this_to_js Obj.magic x6634 in
                 Ojs.call (Ojs.get_prop_ascii x6636 "call") "apply"
                   [|x6636;((let x6630 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6630 "push"
                                  [|(Ojs.fun_to_js_args
                                       (fun (x6632 : _) ->
                                          Obj.magic
                                            (x6627
                                               ~this:(Obj.magic
                                                        (Ojs.array_get x6632
                                                           0))
                                               ~args:(Ojs.list_of_js_from
                                                        any_of_js x6632 1))))|]);
                             ignore
                               (Ojs.call x6630 "push" [|(Obj.magic x6628)|]);
                             List.iter
                               (fun (x6631 : any) ->
                                  ignore
                                    (Ojs.call x6630 "push"
                                       [|(any_to_js x6631)|])) x6629;
                             x6630))|])
    let (bind :
      'tags this ->
        this:'T -> thisArg:'T ThisParameterType.t -> 'T OmitThisParameter.t)
      =
      fun (x6640 : 'tags this) ->
        fun ~this:(x6637 : 'T) ->
          fun ~thisArg:(x6638 : 'T ThisParameterType.t) ->
            OmitThisParameter.t_of_js Obj.magic
              (Ojs.call (this_to_js Obj.magic x6640) "bind"
                 [|(Obj.magic x6637);(ThisParameterType.t_to_js Obj.magic
                                        x6638)|])
    let (bind' :
      'tags this ->
        this:(this:'T -> arg0:'A0 -> args:any list -> 'R) ->
          thisArg:'T -> arg0:'A0 -> any list -> 'R)
      =
      fun (x6648 : 'tags this) ->
        fun ~this:(x6643 : this:'T -> arg0:'A0 -> args:any list -> 'R) ->
          fun ~thisArg:(x6646 : 'T) ->
            fun ~arg0:(x6647 : 'A0) ->
              fun (x6650 : any list) ->
                Obj.magic
                  (Ojs.call
                     (Ojs.call (this_to_js Obj.magic x6648) "bind"
                        [|(Ojs.fun_to_js_args
                             (fun (x6644 : _) ->
                                Obj.magic
                                  (x6643
                                     ~this:(Obj.magic (Ojs.array_get x6644 0))
                                     ~arg0:(Obj.magic (Ojs.array_get x6644 1))
                                     ~args:(Ojs.list_of_js_from any_of_js
                                              x6644 2))));(Obj.magic x6646);(
                          Obj.magic x6647)|]) "apply"
                     [|Ojs.null;((let x6651 =
                                    Ojs.new_obj
                                      (Ojs.get_prop_ascii Ojs.global "Array")
                                      [||] in
                                  List.iter
                                    (fun (x6652 : any) ->
                                       ignore
                                         (Ojs.call x6651 "push"
                                            [|(any_to_js x6652)|])) x6650;
                                  x6651))|])
    let (bind'' :
      'tags this ->
        this:(this:'T -> arg0:'A0 -> arg1:'A1 -> args:any list -> 'R) ->
          thisArg:'T -> arg0:'A0 -> arg1:'A1 -> any list -> 'R)
      =
      fun (x6659 : 'tags this) ->
        fun
          ~this:(x6653 :
                  this:'T -> arg0:'A0 -> arg1:'A1 -> args:any list -> 'R)
          ->
          fun ~thisArg:(x6656 : 'T) ->
            fun ~arg0:(x6657 : 'A0) ->
              fun ~arg1:(x6658 : 'A1) ->
                fun (x6661 : any list) ->
                  Obj.magic
                    (Ojs.call
                       (Ojs.call (this_to_js Obj.magic x6659) "bind"
                          [|(Ojs.fun_to_js_args
                               (fun (x6654 : _) ->
                                  Obj.magic
                                    (x6653
                                       ~this:(Obj.magic
                                                (Ojs.array_get x6654 0))
                                       ~arg0:(Obj.magic
                                                (Ojs.array_get x6654 1))
                                       ~arg1:(Obj.magic
                                                (Ojs.array_get x6654 2))
                                       ~args:(Ojs.list_of_js_from any_of_js
                                                x6654 3))));(Obj.magic x6656);(
                            Obj.magic x6657);(Obj.magic x6658)|]) "apply"
                       [|Ojs.null;((let x6662 =
                                      Ojs.new_obj
                                        (Ojs.get_prop_ascii Ojs.global
                                           "Array") [||] in
                                    List.iter
                                      (fun (x6663 : any) ->
                                         ignore
                                           (Ojs.call x6662 "push"
                                              [|(any_to_js x6663)|])) x6661;
                                    x6662))|])
    let (bind''' :
      'tags this ->
        this:(this:'T ->
                arg0:'A0 -> arg1:'A1 -> arg2:'A2 -> args:any list -> 'R)
          -> thisArg:'T -> arg0:'A0 -> arg1:'A1 -> arg2:'A2 -> any list -> 'R)
      =
      fun (x6671 : 'tags this) ->
        fun
          ~this:(x6664 :
                  this:'T ->
                    arg0:'A0 -> arg1:'A1 -> arg2:'A2 -> args:any list -> 'R)
          ->
          fun ~thisArg:(x6667 : 'T) ->
            fun ~arg0:(x6668 : 'A0) ->
              fun ~arg1:(x6669 : 'A1) ->
                fun ~arg2:(x6670 : 'A2) ->
                  fun (x6673 : any list) ->
                    Obj.magic
                      (Ojs.call
                         (Ojs.call (this_to_js Obj.magic x6671) "bind"
                            [|(Ojs.fun_to_js_args
                                 (fun (x6665 : _) ->
                                    Obj.magic
                                      (x6664
                                         ~this:(Obj.magic
                                                  (Ojs.array_get x6665 0))
                                         ~arg0:(Obj.magic
                                                  (Ojs.array_get x6665 1))
                                         ~arg1:(Obj.magic
                                                  (Ojs.array_get x6665 2))
                                         ~arg2:(Obj.magic
                                                  (Ojs.array_get x6665 3))
                                         ~args:(Ojs.list_of_js_from any_of_js
                                                  x6665 4))));(Obj.magic
                                                                 x6667);(
                              Obj.magic x6668);(Obj.magic x6669);(Obj.magic
                                                                    x6670)|])
                         "apply"
                         [|Ojs.null;((let x6674 =
                                        Ojs.new_obj
                                          (Ojs.get_prop_ascii Ojs.global
                                             "Array") [||] in
                                      List.iter
                                        (fun (x6675 : any) ->
                                           ignore
                                             (Ojs.call x6674 "push"
                                                [|(any_to_js x6675)|])) x6673;
                                      x6674))|])
    let (bind'''' :
      'tags this ->
        this:(this:'T ->
                arg0:'A0 ->
                  arg1:'A1 -> arg2:'A2 -> arg3:'A3 -> args:any list -> 'R)
          ->
          thisArg:'T ->
            arg0:'A0 -> arg1:'A1 -> arg2:'A2 -> arg3:'A3 -> any list -> 'R)
      =
      fun (x6684 : 'tags this) ->
        fun
          ~this:(x6676 :
                  this:'T ->
                    arg0:'A0 ->
                      arg1:'A1 -> arg2:'A2 -> arg3:'A3 -> args:any list -> 'R)
          ->
          fun ~thisArg:(x6679 : 'T) ->
            fun ~arg0:(x6680 : 'A0) ->
              fun ~arg1:(x6681 : 'A1) ->
                fun ~arg2:(x6682 : 'A2) ->
                  fun ~arg3:(x6683 : 'A3) ->
                    fun (x6686 : any list) ->
                      Obj.magic
                        (Ojs.call
                           (Ojs.call (this_to_js Obj.magic x6684) "bind"
                              [|(Ojs.fun_to_js_args
                                   (fun (x6677 : _) ->
                                      Obj.magic
                                        (x6676
                                           ~this:(Obj.magic
                                                    (Ojs.array_get x6677 0))
                                           ~arg0:(Obj.magic
                                                    (Ojs.array_get x6677 1))
                                           ~arg1:(Obj.magic
                                                    (Ojs.array_get x6677 2))
                                           ~arg2:(Obj.magic
                                                    (Ojs.array_get x6677 3))
                                           ~arg3:(Obj.magic
                                                    (Ojs.array_get x6677 4))
                                           ~args:(Ojs.list_of_js_from
                                                    any_of_js x6677 5))));(
                                Obj.magic x6679);(Obj.magic x6680);(Obj.magic
                                                                    x6681);(
                                Obj.magic x6682);(Obj.magic x6683)|]) "apply"
                           [|Ojs.null;((let x6687 =
                                          Ojs.new_obj
                                            (Ojs.get_prop_ascii Ojs.global
                                               "Array") [||] in
                                        List.iter
                                          (fun (x6688 : any) ->
                                             ignore
                                               (Ojs.call x6687 "push"
                                                  [|(any_to_js x6688)|]))
                                          x6686;
                                        x6687))|])
    let (bind''''' :
      'tags this ->
        this:(this:'T -> args:'AX list -> 'R) ->
          thisArg:'T -> args:'AX list -> 'AX list -> 'R)
      =
      fun (x6696 : 'tags this) ->
        fun ~this:(x6689 : this:'T -> args:'AX list -> 'R) ->
          fun ~thisArg:(x6690 : 'T) ->
            fun ~args:(x6691 : 'AX list) ->
              fun (x6699 : 'AX list) ->
                Obj.magic
                  (Ojs.call
                     (let x6698 = this_to_js Obj.magic x6696 in
                      Ojs.call (Ojs.get_prop_ascii x6698 "bind") "apply"
                        [|x6698;((let x6692 =
                                    Ojs.new_obj
                                      (Ojs.get_prop_ascii Ojs.global "Array")
                                      [||] in
                                  ignore
                                    (Ojs.call x6692 "push"
                                       [|(Ojs.fun_to_js_args
                                            (fun (x6694 : _) ->
                                               Obj.magic
                                                 (x6689
                                                    ~this:(Obj.magic
                                                             (Ojs.array_get
                                                                x6694 0))
                                                    ~args:(Ojs.list_of_js_from
                                                             Obj.magic x6694
                                                             1))))|]);
                                  ignore
                                    (Ojs.call x6692 "push"
                                       [|(Obj.magic x6690)|]);
                                  List.iter
                                    (fun (x6693 : 'AX) ->
                                       ignore
                                         (Ojs.call x6692 "push"
                                            [|(Obj.magic x6693)|])) x6691;
                                  x6692))|]) "apply"
                     [|Ojs.null;((let x6700 =
                                    Ojs.new_obj
                                      (Ojs.get_prop_ascii Ojs.global "Array")
                                      [||] in
                                  List.iter
                                    (fun (x6701 : 'AX) ->
                                       ignore
                                         (Ojs.call x6700 "push"
                                            [|(Obj.magic x6701)|])) x6699;
                                  x6700))|])
    let cast_from = Obj.magic
  end
module Boolean =
  struct
    type t = [ `Boolean ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x6703 : Ojs.t) -> t_of_js x6703
    and t_0_to_js : t_0 -> Ojs.t = fun (x6702 : t) -> t_to_js x6702
    type tags = [ `Boolean ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `Boolean ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x6706 : Ojs.t) -> intf_of_js __tags_of_js x6706
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x6704 : __tags intf) -> intf_to_js __tags_to_js x6704
    let (valueOf : 'tags this -> bool) =
      fun (x6708 : 'tags this) ->
        Ojs.bool_of_js (Ojs.call (this_to_js Obj.magic x6708) "valueOf" [||])
    let (create : ?value:any -> unit -> t) =
      fun ?value:(x6710 : any option) ->
        fun () ->
          t_of_js
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "Boolean")
               (let x6711 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x6710 with
                 | Some x6712 ->
                     ignore (Ojs.call x6711 "push" [|(any_to_js x6712)|])
                 | None -> ());
                x6711))
    let (invoke : ?value:'T -> unit -> bool) =
      fun ?value:(x6713 : 'T option) ->
        fun () ->
          Ojs.bool_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "Boolean") "apply"
               [|Ojs.null;((let x6714 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x6713 with
                             | Some x6715 ->
                                 ignore
                                   (Ojs.call x6714 "push"
                                      [|(Obj.magic x6715)|])
                             | None -> ());
                            x6714))|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Boolean")
             "prototype")
    let cast_from = Obj.magic
    let (of_ml : bool -> t) =
      fun (x6716 : bool) -> t_of_js (Ojs.bool_to_js x6716)
    let (to_ml : t -> bool) =
      fun (x6717 : t) ->
        Ojs.bool_of_js (Ojs.call (t_to_js x6717) "valueOf" [||])
  end
module BigIntToLocaleStringOptions =
  struct
    type t = [ `BigIntToLocaleStringOptions ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x6719 : Ojs.t) -> t_of_js x6719
    and t_0_to_js : t_0 -> Ojs.t = fun (x6718 : t) -> t_to_js x6718
    type tags = [ `BigIntToLocaleStringOptions ]
    type tags_0 = tags
    type 'tags this =
      'tags intf constraint 'tags = [> `BigIntToLocaleStringOptions ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x6722 : Ojs.t) -> intf_of_js __tags_of_js x6722
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x6720 : __tags intf) -> intf_to_js __tags_to_js x6720
    let (get_localeMatcher : 'tags this -> string option) =
      fun (x6724 : 'tags this) ->
        Ojs.option_of_js Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6724) "localeMatcher")
    let (set_localeMatcher : 'tags this -> string -> unit) =
      fun (x6727 : 'tags this) ->
        fun (x6728 : string) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x6727) "localeMatcher"
            (Ojs.string_to_js x6728)
    let (get_style : 'tags this -> string option) =
      fun (x6730 : 'tags this) ->
        Ojs.option_of_js Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6730) "style")
    let (set_style : 'tags this -> string -> unit) =
      fun (x6733 : 'tags this) ->
        fun (x6734 : string) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x6733) "style"
            (Ojs.string_to_js x6734)
    let (get_numberingSystem : 'tags this -> string option) =
      fun (x6736 : 'tags this) ->
        Ojs.option_of_js Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6736) "numberingSystem")
    let (set_numberingSystem : 'tags this -> string -> unit) =
      fun (x6739 : 'tags this) ->
        fun (x6740 : string) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x6739) "numberingSystem"
            (Ojs.string_to_js x6740)
    let (get_unit : 'tags this -> string option) =
      fun (x6742 : 'tags this) ->
        Ojs.option_of_js Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6742) "unit")
    let (set_unit : 'tags this -> string -> unit) =
      fun (x6745 : 'tags this) ->
        fun (x6746 : string) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x6745) "unit"
            (Ojs.string_to_js x6746)
    let (get_unitDisplay : 'tags this -> string option) =
      fun (x6748 : 'tags this) ->
        Ojs.option_of_js Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6748) "unitDisplay")
    let (set_unitDisplay : 'tags this -> string -> unit) =
      fun (x6751 : 'tags this) ->
        fun (x6752 : string) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x6751) "unitDisplay"
            (Ojs.string_to_js x6752)
    let (get_currency : 'tags this -> string option) =
      fun (x6754 : 'tags this) ->
        Ojs.option_of_js Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6754) "currency")
    let (set_currency : 'tags this -> string -> unit) =
      fun (x6757 : 'tags this) ->
        fun (x6758 : string) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x6757) "currency"
            (Ojs.string_to_js x6758)
    let (get_currencyDisplay : 'tags this -> string option) =
      fun (x6760 : 'tags this) ->
        Ojs.option_of_js Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6760) "currencyDisplay")
    let (set_currencyDisplay : 'tags this -> string -> unit) =
      fun (x6763 : 'tags this) ->
        fun (x6764 : string) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x6763) "currencyDisplay"
            (Ojs.string_to_js x6764)
    let (get_useGrouping : 'tags this -> bool option) =
      fun (x6766 : 'tags this) ->
        Ojs.option_of_js Ojs.bool_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6766) "useGrouping")
    let (set_useGrouping : 'tags this -> bool -> unit) =
      fun (x6769 : 'tags this) ->
        fun (x6770 : bool) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x6769) "useGrouping"
            (Ojs.bool_to_js x6770)
    let (get_minimumIntegerDigits :
      'tags this ->
        [ `L_n_1  | `L_n_10  | `L_n_11  | `L_n_12  | `L_n_13  | `L_n_14 
        | `L_n_15  | `L_n_16  | `L_n_17  | `L_n_18  | `L_n_19  | `L_n_2 
        | `L_n_20  | `L_n_21  | `L_n_3  | `L_n_4  | `L_n_5  | `L_n_6 
        | `L_n_7  | `L_n_8  | `L_n_9 ] option)
      =
      fun (x6772 : 'tags this) ->
        Ojs.option_of_js
          (fun (x6774 : Ojs.t) ->
             let x6775 = x6774 in
             match Ojs.int_of_js x6775 with
             | 1 -> `L_n_1
             | 10 -> `L_n_10
             | 11 -> `L_n_11
             | 12 -> `L_n_12
             | 13 -> `L_n_13
             | 14 -> `L_n_14
             | 15 -> `L_n_15
             | 16 -> `L_n_16
             | 17 -> `L_n_17
             | 18 -> `L_n_18
             | 19 -> `L_n_19
             | 2 -> `L_n_2
             | 20 -> `L_n_20
             | 21 -> `L_n_21
             | 3 -> `L_n_3
             | 4 -> `L_n_4
             | 5 -> `L_n_5
             | 6 -> `L_n_6
             | 7 -> `L_n_7
             | 8 -> `L_n_8
             | 9 -> `L_n_9
             | _ -> assert false)
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6772)
             "minimumIntegerDigits")
    let (set_minimumIntegerDigits :
      'tags this ->
        [ `U1 of [ `L_n_1 ]  | `U2 of [ `L_n_2 ]  | `U3 of [ `L_n_3 ] 
        | `U4 of [ `L_n_4 ]  | `U5 of [ `L_n_5 ]  | `U6 of [ `L_n_6 ] 
        | `U7 of [ `L_n_7 ]  | `U8 of [ `L_n_8 ]  | `U9 of [ `L_n_9 ] 
        | `U10 of [ `L_n_10 ]  | `U11 of [ `L_n_11 ]  | `U12 of [ `L_n_12 ] 
        | `U13 of [ `L_n_13 ]  | `U14 of [ `L_n_14 ]  | `U15 of [ `L_n_15 ] 
        | `U16 of [ `L_n_16 ]  | `U17 of [ `L_n_17 ]  | `U18 of [ `L_n_18 ] 
        | `U19 of [ `L_n_19 ]  | `U20 of [ `L_n_20 ]  | `U21 of [ `L_n_21 ] ]
          -> unit)
      =
      fun (x6776 : 'tags this) ->
        fun
          (x6777 :
            [ `U1 of [ `L_n_1 ]  | `U2 of [ `L_n_2 ]  | `U3 of [ `L_n_3 ] 
            | `U4 of [ `L_n_4 ]  | `U5 of [ `L_n_5 ]  | `U6 of [ `L_n_6 ] 
            | `U7 of [ `L_n_7 ]  | `U8 of [ `L_n_8 ]  | `U9 of [ `L_n_9 ] 
            | `U10 of [ `L_n_10 ]  | `U11 of [ `L_n_11 ] 
            | `U12 of [ `L_n_12 ]  | `U13 of [ `L_n_13 ] 
            | `U14 of [ `L_n_14 ]  | `U15 of [ `L_n_15 ] 
            | `U16 of [ `L_n_16 ]  | `U17 of [ `L_n_17 ] 
            | `U18 of [ `L_n_18 ]  | `U19 of [ `L_n_19 ] 
            | `U20 of [ `L_n_20 ]  | `U21 of [ `L_n_21 ] ])
          ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x6776)
            "minimumIntegerDigits"
            (match x6777 with
             | `U1 x6778 -> (match x6778 with | `L_n_1 -> Ojs.int_to_js 1)
             | `U2 x6779 -> (match x6779 with | `L_n_2 -> Ojs.int_to_js 2)
             | `U3 x6780 -> (match x6780 with | `L_n_3 -> Ojs.int_to_js 3)
             | `U4 x6781 -> (match x6781 with | `L_n_4 -> Ojs.int_to_js 4)
             | `U5 x6782 -> (match x6782 with | `L_n_5 -> Ojs.int_to_js 5)
             | `U6 x6783 -> (match x6783 with | `L_n_6 -> Ojs.int_to_js 6)
             | `U7 x6784 -> (match x6784 with | `L_n_7 -> Ojs.int_to_js 7)
             | `U8 x6785 -> (match x6785 with | `L_n_8 -> Ojs.int_to_js 8)
             | `U9 x6786 -> (match x6786 with | `L_n_9 -> Ojs.int_to_js 9)
             | `U10 x6787 -> (match x6787 with | `L_n_10 -> Ojs.int_to_js 10)
             | `U11 x6788 -> (match x6788 with | `L_n_11 -> Ojs.int_to_js 11)
             | `U12 x6789 -> (match x6789 with | `L_n_12 -> Ojs.int_to_js 12)
             | `U13 x6790 -> (match x6790 with | `L_n_13 -> Ojs.int_to_js 13)
             | `U14 x6791 -> (match x6791 with | `L_n_14 -> Ojs.int_to_js 14)
             | `U15 x6792 -> (match x6792 with | `L_n_15 -> Ojs.int_to_js 15)
             | `U16 x6793 -> (match x6793 with | `L_n_16 -> Ojs.int_to_js 16)
             | `U17 x6794 -> (match x6794 with | `L_n_17 -> Ojs.int_to_js 17)
             | `U18 x6795 -> (match x6795 with | `L_n_18 -> Ojs.int_to_js 18)
             | `U19 x6796 -> (match x6796 with | `L_n_19 -> Ojs.int_to_js 19)
             | `U20 x6797 -> (match x6797 with | `L_n_20 -> Ojs.int_to_js 20)
             | `U21 x6798 -> (match x6798 with | `L_n_21 -> Ojs.int_to_js 21))
    let (get_minimumFractionDigits :
      'tags this ->
        [ `L_n_0  | `L_n_1  | `L_n_10  | `L_n_11  | `L_n_12  | `L_n_13 
        | `L_n_14  | `L_n_15  | `L_n_16  | `L_n_17  | `L_n_18  | `L_n_19 
        | `L_n_2  | `L_n_20  | `L_n_3  | `L_n_4  | `L_n_5  | `L_n_6 
        | `L_n_7  | `L_n_8  | `L_n_9 ] option)
      =
      fun (x6800 : 'tags this) ->
        Ojs.option_of_js
          (fun (x6802 : Ojs.t) ->
             let x6803 = x6802 in
             match Ojs.int_of_js x6803 with
             | 0 -> `L_n_0
             | 1 -> `L_n_1
             | 10 -> `L_n_10
             | 11 -> `L_n_11
             | 12 -> `L_n_12
             | 13 -> `L_n_13
             | 14 -> `L_n_14
             | 15 -> `L_n_15
             | 16 -> `L_n_16
             | 17 -> `L_n_17
             | 18 -> `L_n_18
             | 19 -> `L_n_19
             | 2 -> `L_n_2
             | 20 -> `L_n_20
             | 3 -> `L_n_3
             | 4 -> `L_n_4
             | 5 -> `L_n_5
             | 6 -> `L_n_6
             | 7 -> `L_n_7
             | 8 -> `L_n_8
             | 9 -> `L_n_9
             | _ -> assert false)
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6800)
             "minimumFractionDigits")
    let (set_minimumFractionDigits :
      'tags this ->
        [ `U1 of [ `L_n_0 ]  | `U2 of [ `L_n_1 ]  | `U3 of [ `L_n_2 ] 
        | `U4 of [ `L_n_3 ]  | `U5 of [ `L_n_4 ]  | `U6 of [ `L_n_5 ] 
        | `U7 of [ `L_n_6 ]  | `U8 of [ `L_n_7 ]  | `U9 of [ `L_n_8 ] 
        | `U10 of [ `L_n_9 ]  | `U11 of [ `L_n_10 ]  | `U12 of [ `L_n_11 ] 
        | `U13 of [ `L_n_12 ]  | `U14 of [ `L_n_13 ]  | `U15 of [ `L_n_14 ] 
        | `U16 of [ `L_n_15 ]  | `U17 of [ `L_n_16 ]  | `U18 of [ `L_n_17 ] 
        | `U19 of [ `L_n_18 ]  | `U20 of [ `L_n_19 ]  | `U21 of [ `L_n_20 ] ]
          -> unit)
      =
      fun (x6804 : 'tags this) ->
        fun
          (x6805 :
            [ `U1 of [ `L_n_0 ]  | `U2 of [ `L_n_1 ]  | `U3 of [ `L_n_2 ] 
            | `U4 of [ `L_n_3 ]  | `U5 of [ `L_n_4 ]  | `U6 of [ `L_n_5 ] 
            | `U7 of [ `L_n_6 ]  | `U8 of [ `L_n_7 ]  | `U9 of [ `L_n_8 ] 
            | `U10 of [ `L_n_9 ]  | `U11 of [ `L_n_10 ] 
            | `U12 of [ `L_n_11 ]  | `U13 of [ `L_n_12 ] 
            | `U14 of [ `L_n_13 ]  | `U15 of [ `L_n_14 ] 
            | `U16 of [ `L_n_15 ]  | `U17 of [ `L_n_16 ] 
            | `U18 of [ `L_n_17 ]  | `U19 of [ `L_n_18 ] 
            | `U20 of [ `L_n_19 ]  | `U21 of [ `L_n_20 ] ])
          ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x6804)
            "minimumFractionDigits"
            (match x6805 with
             | `U1 x6806 -> (match x6806 with | `L_n_0 -> Ojs.int_to_js 0)
             | `U2 x6807 -> (match x6807 with | `L_n_1 -> Ojs.int_to_js 1)
             | `U3 x6808 -> (match x6808 with | `L_n_2 -> Ojs.int_to_js 2)
             | `U4 x6809 -> (match x6809 with | `L_n_3 -> Ojs.int_to_js 3)
             | `U5 x6810 -> (match x6810 with | `L_n_4 -> Ojs.int_to_js 4)
             | `U6 x6811 -> (match x6811 with | `L_n_5 -> Ojs.int_to_js 5)
             | `U7 x6812 -> (match x6812 with | `L_n_6 -> Ojs.int_to_js 6)
             | `U8 x6813 -> (match x6813 with | `L_n_7 -> Ojs.int_to_js 7)
             | `U9 x6814 -> (match x6814 with | `L_n_8 -> Ojs.int_to_js 8)
             | `U10 x6815 -> (match x6815 with | `L_n_9 -> Ojs.int_to_js 9)
             | `U11 x6816 -> (match x6816 with | `L_n_10 -> Ojs.int_to_js 10)
             | `U12 x6817 -> (match x6817 with | `L_n_11 -> Ojs.int_to_js 11)
             | `U13 x6818 -> (match x6818 with | `L_n_12 -> Ojs.int_to_js 12)
             | `U14 x6819 -> (match x6819 with | `L_n_13 -> Ojs.int_to_js 13)
             | `U15 x6820 -> (match x6820 with | `L_n_14 -> Ojs.int_to_js 14)
             | `U16 x6821 -> (match x6821 with | `L_n_15 -> Ojs.int_to_js 15)
             | `U17 x6822 -> (match x6822 with | `L_n_16 -> Ojs.int_to_js 16)
             | `U18 x6823 -> (match x6823 with | `L_n_17 -> Ojs.int_to_js 17)
             | `U19 x6824 -> (match x6824 with | `L_n_18 -> Ojs.int_to_js 18)
             | `U20 x6825 -> (match x6825 with | `L_n_19 -> Ojs.int_to_js 19)
             | `U21 x6826 -> (match x6826 with | `L_n_20 -> Ojs.int_to_js 20))
    let (get_maximumFractionDigits :
      'tags this ->
        [ `L_n_0  | `L_n_1  | `L_n_10  | `L_n_11  | `L_n_12  | `L_n_13 
        | `L_n_14  | `L_n_15  | `L_n_16  | `L_n_17  | `L_n_18  | `L_n_19 
        | `L_n_2  | `L_n_20  | `L_n_3  | `L_n_4  | `L_n_5  | `L_n_6 
        | `L_n_7  | `L_n_8  | `L_n_9 ] option)
      =
      fun (x6828 : 'tags this) ->
        Ojs.option_of_js
          (fun (x6830 : Ojs.t) ->
             let x6831 = x6830 in
             match Ojs.int_of_js x6831 with
             | 0 -> `L_n_0
             | 1 -> `L_n_1
             | 10 -> `L_n_10
             | 11 -> `L_n_11
             | 12 -> `L_n_12
             | 13 -> `L_n_13
             | 14 -> `L_n_14
             | 15 -> `L_n_15
             | 16 -> `L_n_16
             | 17 -> `L_n_17
             | 18 -> `L_n_18
             | 19 -> `L_n_19
             | 2 -> `L_n_2
             | 20 -> `L_n_20
             | 3 -> `L_n_3
             | 4 -> `L_n_4
             | 5 -> `L_n_5
             | 6 -> `L_n_6
             | 7 -> `L_n_7
             | 8 -> `L_n_8
             | 9 -> `L_n_9
             | _ -> assert false)
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6828)
             "maximumFractionDigits")
    let (set_maximumFractionDigits :
      'tags this ->
        [ `U1 of [ `L_n_0 ]  | `U2 of [ `L_n_1 ]  | `U3 of [ `L_n_2 ] 
        | `U4 of [ `L_n_3 ]  | `U5 of [ `L_n_4 ]  | `U6 of [ `L_n_5 ] 
        | `U7 of [ `L_n_6 ]  | `U8 of [ `L_n_7 ]  | `U9 of [ `L_n_8 ] 
        | `U10 of [ `L_n_9 ]  | `U11 of [ `L_n_10 ]  | `U12 of [ `L_n_11 ] 
        | `U13 of [ `L_n_12 ]  | `U14 of [ `L_n_13 ]  | `U15 of [ `L_n_14 ] 
        | `U16 of [ `L_n_15 ]  | `U17 of [ `L_n_16 ]  | `U18 of [ `L_n_17 ] 
        | `U19 of [ `L_n_18 ]  | `U20 of [ `L_n_19 ]  | `U21 of [ `L_n_20 ] ]
          -> unit)
      =
      fun (x6832 : 'tags this) ->
        fun
          (x6833 :
            [ `U1 of [ `L_n_0 ]  | `U2 of [ `L_n_1 ]  | `U3 of [ `L_n_2 ] 
            | `U4 of [ `L_n_3 ]  | `U5 of [ `L_n_4 ]  | `U6 of [ `L_n_5 ] 
            | `U7 of [ `L_n_6 ]  | `U8 of [ `L_n_7 ]  | `U9 of [ `L_n_8 ] 
            | `U10 of [ `L_n_9 ]  | `U11 of [ `L_n_10 ] 
            | `U12 of [ `L_n_11 ]  | `U13 of [ `L_n_12 ] 
            | `U14 of [ `L_n_13 ]  | `U15 of [ `L_n_14 ] 
            | `U16 of [ `L_n_15 ]  | `U17 of [ `L_n_16 ] 
            | `U18 of [ `L_n_17 ]  | `U19 of [ `L_n_18 ] 
            | `U20 of [ `L_n_19 ]  | `U21 of [ `L_n_20 ] ])
          ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x6832)
            "maximumFractionDigits"
            (match x6833 with
             | `U1 x6834 -> (match x6834 with | `L_n_0 -> Ojs.int_to_js 0)
             | `U2 x6835 -> (match x6835 with | `L_n_1 -> Ojs.int_to_js 1)
             | `U3 x6836 -> (match x6836 with | `L_n_2 -> Ojs.int_to_js 2)
             | `U4 x6837 -> (match x6837 with | `L_n_3 -> Ojs.int_to_js 3)
             | `U5 x6838 -> (match x6838 with | `L_n_4 -> Ojs.int_to_js 4)
             | `U6 x6839 -> (match x6839 with | `L_n_5 -> Ojs.int_to_js 5)
             | `U7 x6840 -> (match x6840 with | `L_n_6 -> Ojs.int_to_js 6)
             | `U8 x6841 -> (match x6841 with | `L_n_7 -> Ojs.int_to_js 7)
             | `U9 x6842 -> (match x6842 with | `L_n_8 -> Ojs.int_to_js 8)
             | `U10 x6843 -> (match x6843 with | `L_n_9 -> Ojs.int_to_js 9)
             | `U11 x6844 -> (match x6844 with | `L_n_10 -> Ojs.int_to_js 10)
             | `U12 x6845 -> (match x6845 with | `L_n_11 -> Ojs.int_to_js 11)
             | `U13 x6846 -> (match x6846 with | `L_n_12 -> Ojs.int_to_js 12)
             | `U14 x6847 -> (match x6847 with | `L_n_13 -> Ojs.int_to_js 13)
             | `U15 x6848 -> (match x6848 with | `L_n_14 -> Ojs.int_to_js 14)
             | `U16 x6849 -> (match x6849 with | `L_n_15 -> Ojs.int_to_js 15)
             | `U17 x6850 -> (match x6850 with | `L_n_16 -> Ojs.int_to_js 16)
             | `U18 x6851 -> (match x6851 with | `L_n_17 -> Ojs.int_to_js 17)
             | `U19 x6852 -> (match x6852 with | `L_n_18 -> Ojs.int_to_js 18)
             | `U20 x6853 -> (match x6853 with | `L_n_19 -> Ojs.int_to_js 19)
             | `U21 x6854 -> (match x6854 with | `L_n_20 -> Ojs.int_to_js 20))
    let (get_minimumSignificantDigits :
      'tags this ->
        [ `L_n_1  | `L_n_10  | `L_n_11  | `L_n_12  | `L_n_13  | `L_n_14 
        | `L_n_15  | `L_n_16  | `L_n_17  | `L_n_18  | `L_n_19  | `L_n_2 
        | `L_n_20  | `L_n_21  | `L_n_3  | `L_n_4  | `L_n_5  | `L_n_6 
        | `L_n_7  | `L_n_8  | `L_n_9 ] option)
      =
      fun (x6856 : 'tags this) ->
        Ojs.option_of_js
          (fun (x6858 : Ojs.t) ->
             let x6859 = x6858 in
             match Ojs.int_of_js x6859 with
             | 1 -> `L_n_1
             | 10 -> `L_n_10
             | 11 -> `L_n_11
             | 12 -> `L_n_12
             | 13 -> `L_n_13
             | 14 -> `L_n_14
             | 15 -> `L_n_15
             | 16 -> `L_n_16
             | 17 -> `L_n_17
             | 18 -> `L_n_18
             | 19 -> `L_n_19
             | 2 -> `L_n_2
             | 20 -> `L_n_20
             | 21 -> `L_n_21
             | 3 -> `L_n_3
             | 4 -> `L_n_4
             | 5 -> `L_n_5
             | 6 -> `L_n_6
             | 7 -> `L_n_7
             | 8 -> `L_n_8
             | 9 -> `L_n_9
             | _ -> assert false)
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6856)
             "minimumSignificantDigits")
    let (set_minimumSignificantDigits :
      'tags this ->
        [ `U1 of [ `L_n_1 ]  | `U2 of [ `L_n_2 ]  | `U3 of [ `L_n_3 ] 
        | `U4 of [ `L_n_4 ]  | `U5 of [ `L_n_5 ]  | `U6 of [ `L_n_6 ] 
        | `U7 of [ `L_n_7 ]  | `U8 of [ `L_n_8 ]  | `U9 of [ `L_n_9 ] 
        | `U10 of [ `L_n_10 ]  | `U11 of [ `L_n_11 ]  | `U12 of [ `L_n_12 ] 
        | `U13 of [ `L_n_13 ]  | `U14 of [ `L_n_14 ]  | `U15 of [ `L_n_15 ] 
        | `U16 of [ `L_n_16 ]  | `U17 of [ `L_n_17 ]  | `U18 of [ `L_n_18 ] 
        | `U19 of [ `L_n_19 ]  | `U20 of [ `L_n_20 ]  | `U21 of [ `L_n_21 ] ]
          -> unit)
      =
      fun (x6860 : 'tags this) ->
        fun
          (x6861 :
            [ `U1 of [ `L_n_1 ]  | `U2 of [ `L_n_2 ]  | `U3 of [ `L_n_3 ] 
            | `U4 of [ `L_n_4 ]  | `U5 of [ `L_n_5 ]  | `U6 of [ `L_n_6 ] 
            | `U7 of [ `L_n_7 ]  | `U8 of [ `L_n_8 ]  | `U9 of [ `L_n_9 ] 
            | `U10 of [ `L_n_10 ]  | `U11 of [ `L_n_11 ] 
            | `U12 of [ `L_n_12 ]  | `U13 of [ `L_n_13 ] 
            | `U14 of [ `L_n_14 ]  | `U15 of [ `L_n_15 ] 
            | `U16 of [ `L_n_16 ]  | `U17 of [ `L_n_17 ] 
            | `U18 of [ `L_n_18 ]  | `U19 of [ `L_n_19 ] 
            | `U20 of [ `L_n_20 ]  | `U21 of [ `L_n_21 ] ])
          ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x6860)
            "minimumSignificantDigits"
            (match x6861 with
             | `U1 x6862 -> (match x6862 with | `L_n_1 -> Ojs.int_to_js 1)
             | `U2 x6863 -> (match x6863 with | `L_n_2 -> Ojs.int_to_js 2)
             | `U3 x6864 -> (match x6864 with | `L_n_3 -> Ojs.int_to_js 3)
             | `U4 x6865 -> (match x6865 with | `L_n_4 -> Ojs.int_to_js 4)
             | `U5 x6866 -> (match x6866 with | `L_n_5 -> Ojs.int_to_js 5)
             | `U6 x6867 -> (match x6867 with | `L_n_6 -> Ojs.int_to_js 6)
             | `U7 x6868 -> (match x6868 with | `L_n_7 -> Ojs.int_to_js 7)
             | `U8 x6869 -> (match x6869 with | `L_n_8 -> Ojs.int_to_js 8)
             | `U9 x6870 -> (match x6870 with | `L_n_9 -> Ojs.int_to_js 9)
             | `U10 x6871 -> (match x6871 with | `L_n_10 -> Ojs.int_to_js 10)
             | `U11 x6872 -> (match x6872 with | `L_n_11 -> Ojs.int_to_js 11)
             | `U12 x6873 -> (match x6873 with | `L_n_12 -> Ojs.int_to_js 12)
             | `U13 x6874 -> (match x6874 with | `L_n_13 -> Ojs.int_to_js 13)
             | `U14 x6875 -> (match x6875 with | `L_n_14 -> Ojs.int_to_js 14)
             | `U15 x6876 -> (match x6876 with | `L_n_15 -> Ojs.int_to_js 15)
             | `U16 x6877 -> (match x6877 with | `L_n_16 -> Ojs.int_to_js 16)
             | `U17 x6878 -> (match x6878 with | `L_n_17 -> Ojs.int_to_js 17)
             | `U18 x6879 -> (match x6879 with | `L_n_18 -> Ojs.int_to_js 18)
             | `U19 x6880 -> (match x6880 with | `L_n_19 -> Ojs.int_to_js 19)
             | `U20 x6881 -> (match x6881 with | `L_n_20 -> Ojs.int_to_js 20)
             | `U21 x6882 -> (match x6882 with | `L_n_21 -> Ojs.int_to_js 21))
    let (get_maximumSignificantDigits :
      'tags this ->
        [ `L_n_1  | `L_n_10  | `L_n_11  | `L_n_12  | `L_n_13  | `L_n_14 
        | `L_n_15  | `L_n_16  | `L_n_17  | `L_n_18  | `L_n_19  | `L_n_2 
        | `L_n_20  | `L_n_21  | `L_n_3  | `L_n_4  | `L_n_5  | `L_n_6 
        | `L_n_7  | `L_n_8  | `L_n_9 ] option)
      =
      fun (x6884 : 'tags this) ->
        Ojs.option_of_js
          (fun (x6886 : Ojs.t) ->
             let x6887 = x6886 in
             match Ojs.int_of_js x6887 with
             | 1 -> `L_n_1
             | 10 -> `L_n_10
             | 11 -> `L_n_11
             | 12 -> `L_n_12
             | 13 -> `L_n_13
             | 14 -> `L_n_14
             | 15 -> `L_n_15
             | 16 -> `L_n_16
             | 17 -> `L_n_17
             | 18 -> `L_n_18
             | 19 -> `L_n_19
             | 2 -> `L_n_2
             | 20 -> `L_n_20
             | 21 -> `L_n_21
             | 3 -> `L_n_3
             | 4 -> `L_n_4
             | 5 -> `L_n_5
             | 6 -> `L_n_6
             | 7 -> `L_n_7
             | 8 -> `L_n_8
             | 9 -> `L_n_9
             | _ -> assert false)
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6884)
             "maximumSignificantDigits")
    let (set_maximumSignificantDigits :
      'tags this ->
        [ `U1 of [ `L_n_1 ]  | `U2 of [ `L_n_2 ]  | `U3 of [ `L_n_3 ] 
        | `U4 of [ `L_n_4 ]  | `U5 of [ `L_n_5 ]  | `U6 of [ `L_n_6 ] 
        | `U7 of [ `L_n_7 ]  | `U8 of [ `L_n_8 ]  | `U9 of [ `L_n_9 ] 
        | `U10 of [ `L_n_10 ]  | `U11 of [ `L_n_11 ]  | `U12 of [ `L_n_12 ] 
        | `U13 of [ `L_n_13 ]  | `U14 of [ `L_n_14 ]  | `U15 of [ `L_n_15 ] 
        | `U16 of [ `L_n_16 ]  | `U17 of [ `L_n_17 ]  | `U18 of [ `L_n_18 ] 
        | `U19 of [ `L_n_19 ]  | `U20 of [ `L_n_20 ]  | `U21 of [ `L_n_21 ] ]
          -> unit)
      =
      fun (x6888 : 'tags this) ->
        fun
          (x6889 :
            [ `U1 of [ `L_n_1 ]  | `U2 of [ `L_n_2 ]  | `U3 of [ `L_n_3 ] 
            | `U4 of [ `L_n_4 ]  | `U5 of [ `L_n_5 ]  | `U6 of [ `L_n_6 ] 
            | `U7 of [ `L_n_7 ]  | `U8 of [ `L_n_8 ]  | `U9 of [ `L_n_9 ] 
            | `U10 of [ `L_n_10 ]  | `U11 of [ `L_n_11 ] 
            | `U12 of [ `L_n_12 ]  | `U13 of [ `L_n_13 ] 
            | `U14 of [ `L_n_14 ]  | `U15 of [ `L_n_15 ] 
            | `U16 of [ `L_n_16 ]  | `U17 of [ `L_n_17 ] 
            | `U18 of [ `L_n_18 ]  | `U19 of [ `L_n_19 ] 
            | `U20 of [ `L_n_20 ]  | `U21 of [ `L_n_21 ] ])
          ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x6888)
            "maximumSignificantDigits"
            (match x6889 with
             | `U1 x6890 -> (match x6890 with | `L_n_1 -> Ojs.int_to_js 1)
             | `U2 x6891 -> (match x6891 with | `L_n_2 -> Ojs.int_to_js 2)
             | `U3 x6892 -> (match x6892 with | `L_n_3 -> Ojs.int_to_js 3)
             | `U4 x6893 -> (match x6893 with | `L_n_4 -> Ojs.int_to_js 4)
             | `U5 x6894 -> (match x6894 with | `L_n_5 -> Ojs.int_to_js 5)
             | `U6 x6895 -> (match x6895 with | `L_n_6 -> Ojs.int_to_js 6)
             | `U7 x6896 -> (match x6896 with | `L_n_7 -> Ojs.int_to_js 7)
             | `U8 x6897 -> (match x6897 with | `L_n_8 -> Ojs.int_to_js 8)
             | `U9 x6898 -> (match x6898 with | `L_n_9 -> Ojs.int_to_js 9)
             | `U10 x6899 -> (match x6899 with | `L_n_10 -> Ojs.int_to_js 10)
             | `U11 x6900 -> (match x6900 with | `L_n_11 -> Ojs.int_to_js 11)
             | `U12 x6901 -> (match x6901 with | `L_n_12 -> Ojs.int_to_js 12)
             | `U13 x6902 -> (match x6902 with | `L_n_13 -> Ojs.int_to_js 13)
             | `U14 x6903 -> (match x6903 with | `L_n_14 -> Ojs.int_to_js 14)
             | `U15 x6904 -> (match x6904 with | `L_n_15 -> Ojs.int_to_js 15)
             | `U16 x6905 -> (match x6905 with | `L_n_16 -> Ojs.int_to_js 16)
             | `U17 x6906 -> (match x6906 with | `L_n_17 -> Ojs.int_to_js 17)
             | `U18 x6907 -> (match x6907 with | `L_n_18 -> Ojs.int_to_js 18)
             | `U19 x6908 -> (match x6908 with | `L_n_19 -> Ojs.int_to_js 19)
             | `U20 x6909 -> (match x6909 with | `L_n_20 -> Ojs.int_to_js 20)
             | `U21 x6910 -> (match x6910 with | `L_n_21 -> Ojs.int_to_js 21))
    let (get_notation : 'tags this -> string option) =
      fun (x6912 : 'tags this) ->
        Ojs.option_of_js Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6912) "notation")
    let (set_notation : 'tags this -> string -> unit) =
      fun (x6915 : 'tags this) ->
        fun (x6916 : string) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x6915) "notation"
            (Ojs.string_to_js x6916)
    let (get_compactDisplay : 'tags this -> string option) =
      fun (x6918 : 'tags this) ->
        Ojs.option_of_js Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6918) "compactDisplay")
    let (set_compactDisplay : 'tags this -> string -> unit) =
      fun (x6921 : 'tags this) ->
        fun (x6922 : string) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x6921) "compactDisplay"
            (Ojs.string_to_js x6922)
    let (create :
      ?localeMatcher:string ->
        ?style:string ->
          ?numberingSystem:string ->
            ?unit:string ->
              ?unitDisplay:string ->
                ?currency:string ->
                  ?currencyDisplay:string ->
                    ?useGrouping:bool ->
                      ?minimumIntegerDigits:[ `L_n_1  | `L_n_10  | `L_n_11 
                                            | `L_n_12  | `L_n_13  | `L_n_14 
                                            | `L_n_15  | `L_n_16  | `L_n_17 
                                            | `L_n_18  | `L_n_19  | `L_n_2 
                                            | `L_n_20  | `L_n_21  | `L_n_3 
                                            | `L_n_4  | `L_n_5  | `L_n_6 
                                            | `L_n_7  | `L_n_8  | `L_n_9 ]
                        ->
                        ?minimumFractionDigits:[ `L_n_0  | `L_n_1  | 
                                                 `L_n_10 
                                               | `L_n_11  | `L_n_12 
                                               | `L_n_13  | `L_n_14 
                                               | `L_n_15  | `L_n_16 
                                               | `L_n_17  | `L_n_18 
                                               | `L_n_19  | `L_n_2 
                                               | `L_n_20  | `L_n_3  | 
                                                 `L_n_4 
                                               | `L_n_5  | `L_n_6  | 
                                                 `L_n_7 
                                               | `L_n_8  | `L_n_9 ]
                          ->
                          ?maximumFractionDigits:[ `L_n_0  | `L_n_1 
                                                 | `L_n_10  | `L_n_11 
                                                 | `L_n_12  | `L_n_13 
                                                 | `L_n_14  | `L_n_15 
                                                 | `L_n_16  | `L_n_17 
                                                 | `L_n_18  | `L_n_19 
                                                 | `L_n_2  | `L_n_20 
                                                 | `L_n_3  | `L_n_4 
                                                 | `L_n_5  | `L_n_6 
                                                 | `L_n_7  | `L_n_8 
                                                 | `L_n_9 ]
                            ->
                            ?minimumSignificantDigits:[ `L_n_1  | `L_n_10 
                                                      | `L_n_11  | `L_n_12 
                                                      | `L_n_13  | `L_n_14 
                                                      | `L_n_15  | `L_n_16 
                                                      | `L_n_17  | `L_n_18 
                                                      | `L_n_19  | `L_n_2 
                                                      | `L_n_20  | `L_n_21 
                                                      | `L_n_3  | `L_n_4 
                                                      | `L_n_5  | `L_n_6 
                                                      | `L_n_7  | `L_n_8 
                                                      | `L_n_9 ]
                              ->
                              ?maximumSignificantDigits:[ `L_n_1  | `L_n_10 
                                                        | `L_n_11  | 
                                                          `L_n_12 
                                                        | `L_n_13  | 
                                                          `L_n_14 
                                                        | `L_n_15  | 
                                                          `L_n_16 
                                                        | `L_n_17  | 
                                                          `L_n_18 
                                                        | `L_n_19  | 
                                                          `L_n_2 
                                                        | `L_n_20  | 
                                                          `L_n_21 
                                                        | `L_n_3  | `L_n_4 
                                                        | `L_n_5  | `L_n_6 
                                                        | `L_n_7  | `L_n_8 
                                                        | `L_n_9 ]
                                ->
                                ?notation:string ->
                                  ?compactDisplay:string -> unit -> t)
      =
      fun ?localeMatcher:(x6924 : string option) ->
        fun ?style:(x6925 : string option) ->
          fun ?numberingSystem:(x6926 : string option) ->
            fun ?unit:(x6927 : string option) ->
              fun ?unitDisplay:(x6928 : string option) ->
                fun ?currency:(x6929 : string option) ->
                  fun ?currencyDisplay:(x6930 : string option) ->
                    fun ?useGrouping:(x6931 : bool option) ->
                      fun
                        ?minimumIntegerDigits:(x6932 :
                                                [ `L_n_1  | `L_n_10 
                                                | `L_n_11  | `L_n_12 
                                                | `L_n_13  | `L_n_14 
                                                | `L_n_15  | `L_n_16 
                                                | `L_n_17  | `L_n_18 
                                                | `L_n_19  | `L_n_2 
                                                | `L_n_20  | `L_n_21 
                                                | `L_n_3  | `L_n_4  | 
                                                  `L_n_5 
                                                | `L_n_6  | `L_n_7  | 
                                                  `L_n_8 
                                                | `L_n_9 ] option)
                        ->
                        fun
                          ?minimumFractionDigits:(x6933 :
                                                   [ `L_n_0  | `L_n_1 
                                                   | `L_n_10  | `L_n_11 
                                                   | `L_n_12  | `L_n_13 
                                                   | `L_n_14  | `L_n_15 
                                                   | `L_n_16  | `L_n_17 
                                                   | `L_n_18  | `L_n_19 
                                                   | `L_n_2  | `L_n_20 
                                                   | `L_n_3  | `L_n_4 
                                                   | `L_n_5  | `L_n_6 
                                                   | `L_n_7  | `L_n_8 
                                                   | `L_n_9 ] option)
                          ->
                          fun
                            ?maximumFractionDigits:(x6934 :
                                                     [ `L_n_0  | `L_n_1 
                                                     | `L_n_10  | `L_n_11 
                                                     | `L_n_12  | `L_n_13 
                                                     | `L_n_14  | `L_n_15 
                                                     | `L_n_16  | `L_n_17 
                                                     | `L_n_18  | `L_n_19 
                                                     | `L_n_2  | `L_n_20 
                                                     | `L_n_3  | `L_n_4 
                                                     | `L_n_5  | `L_n_6 
                                                     | `L_n_7  | `L_n_8 
                                                     | `L_n_9 ] option)
                            ->
                            fun
                              ?minimumSignificantDigits:(x6935 :
                                                          [ `L_n_1 
                                                          | `L_n_10 
                                                          | `L_n_11 
                                                          | `L_n_12 
                                                          | `L_n_13 
                                                          | `L_n_14 
                                                          | `L_n_15 
                                                          | `L_n_16 
                                                          | `L_n_17 
                                                          | `L_n_18 
                                                          | `L_n_19 
                                                          | `L_n_2 
                                                          | `L_n_20 
                                                          | `L_n_21 
                                                          | `L_n_3  | 
                                                            `L_n_4 
                                                          | `L_n_5  | 
                                                            `L_n_6 
                                                          | `L_n_7  | 
                                                            `L_n_8 
                                                          | `L_n_9 ] option)
                              ->
                              fun
                                ?maximumSignificantDigits:(x6936 :
                                                            [ `L_n_1 
                                                            | `L_n_10 
                                                            | `L_n_11 
                                                            | `L_n_12 
                                                            | `L_n_13 
                                                            | `L_n_14 
                                                            | `L_n_15 
                                                            | `L_n_16 
                                                            | `L_n_17 
                                                            | `L_n_18 
                                                            | `L_n_19 
                                                            | `L_n_2 
                                                            | `L_n_20 
                                                            | `L_n_21 
                                                            | `L_n_3 
                                                            | `L_n_4 
                                                            | `L_n_5 
                                                            | `L_n_6 
                                                            | `L_n_7 
                                                            | `L_n_8 
                                                            | `L_n_9 ] option)
                                ->
                                fun ?notation:(x6937 : string option) ->
                                  fun ?compactDisplay:(x6938 : string option)
                                    ->
                                    fun () ->
                                      let x6939 = Ojs.empty_obj () in
                                      (match x6924 with
                                       | Some x6954 ->
                                           Ojs.set_prop_ascii x6939
                                             "localeMatcher"
                                             (Ojs.string_to_js x6954)
                                       | None -> ());
                                      (match x6925 with
                                       | Some x6953 ->
                                           Ojs.set_prop_ascii x6939 "style"
                                             (Ojs.string_to_js x6953)
                                       | None -> ());
                                      (match x6926 with
                                       | Some x6952 ->
                                           Ojs.set_prop_ascii x6939
                                             "numberingSystem"
                                             (Ojs.string_to_js x6952)
                                       | None -> ());
                                      (match x6927 with
                                       | Some x6951 ->
                                           Ojs.set_prop_ascii x6939 "unit"
                                             (Ojs.string_to_js x6951)
                                       | None -> ());
                                      (match x6928 with
                                       | Some x6950 ->
                                           Ojs.set_prop_ascii x6939
                                             "unitDisplay"
                                             (Ojs.string_to_js x6950)
                                       | None -> ());
                                      (match x6929 with
                                       | Some x6949 ->
                                           Ojs.set_prop_ascii x6939
                                             "currency"
                                             (Ojs.string_to_js x6949)
                                       | None -> ());
                                      (match x6930 with
                                       | Some x6948 ->
                                           Ojs.set_prop_ascii x6939
                                             "currencyDisplay"
                                             (Ojs.string_to_js x6948)
                                       | None -> ());
                                      (match x6931 with
                                       | Some x6947 ->
                                           Ojs.set_prop_ascii x6939
                                             "useGrouping"
                                             (Ojs.bool_to_js x6947)
                                       | None -> ());
                                      (match x6932 with
                                       | Some x6946 ->
                                           Ojs.set_prop_ascii x6939
                                             "minimumIntegerDigits"
                                             (match x6946 with
                                              | `L_n_1 -> Ojs.int_to_js 1
                                              | `L_n_10 -> Ojs.int_to_js 10
                                              | `L_n_11 -> Ojs.int_to_js 11
                                              | `L_n_12 -> Ojs.int_to_js 12
                                              | `L_n_13 -> Ojs.int_to_js 13
                                              | `L_n_14 -> Ojs.int_to_js 14
                                              | `L_n_15 -> Ojs.int_to_js 15
                                              | `L_n_16 -> Ojs.int_to_js 16
                                              | `L_n_17 -> Ojs.int_to_js 17
                                              | `L_n_18 -> Ojs.int_to_js 18
                                              | `L_n_19 -> Ojs.int_to_js 19
                                              | `L_n_2 -> Ojs.int_to_js 2
                                              | `L_n_20 -> Ojs.int_to_js 20
                                              | `L_n_21 -> Ojs.int_to_js 21
                                              | `L_n_3 -> Ojs.int_to_js 3
                                              | `L_n_4 -> Ojs.int_to_js 4
                                              | `L_n_5 -> Ojs.int_to_js 5
                                              | `L_n_6 -> Ojs.int_to_js 6
                                              | `L_n_7 -> Ojs.int_to_js 7
                                              | `L_n_8 -> Ojs.int_to_js 8
                                              | `L_n_9 -> Ojs.int_to_js 9)
                                       | None -> ());
                                      (match x6933 with
                                       | Some x6945 ->
                                           Ojs.set_prop_ascii x6939
                                             "minimumFractionDigits"
                                             (match x6945 with
                                              | `L_n_0 -> Ojs.int_to_js 0
                                              | `L_n_1 -> Ojs.int_to_js 1
                                              | `L_n_10 -> Ojs.int_to_js 10
                                              | `L_n_11 -> Ojs.int_to_js 11
                                              | `L_n_12 -> Ojs.int_to_js 12
                                              | `L_n_13 -> Ojs.int_to_js 13
                                              | `L_n_14 -> Ojs.int_to_js 14
                                              | `L_n_15 -> Ojs.int_to_js 15
                                              | `L_n_16 -> Ojs.int_to_js 16
                                              | `L_n_17 -> Ojs.int_to_js 17
                                              | `L_n_18 -> Ojs.int_to_js 18
                                              | `L_n_19 -> Ojs.int_to_js 19
                                              | `L_n_2 -> Ojs.int_to_js 2
                                              | `L_n_20 -> Ojs.int_to_js 20
                                              | `L_n_3 -> Ojs.int_to_js 3
                                              | `L_n_4 -> Ojs.int_to_js 4
                                              | `L_n_5 -> Ojs.int_to_js 5
                                              | `L_n_6 -> Ojs.int_to_js 6
                                              | `L_n_7 -> Ojs.int_to_js 7
                                              | `L_n_8 -> Ojs.int_to_js 8
                                              | `L_n_9 -> Ojs.int_to_js 9)
                                       | None -> ());
                                      (match x6934 with
                                       | Some x6944 ->
                                           Ojs.set_prop_ascii x6939
                                             "maximumFractionDigits"
                                             (match x6944 with
                                              | `L_n_0 -> Ojs.int_to_js 0
                                              | `L_n_1 -> Ojs.int_to_js 1
                                              | `L_n_10 -> Ojs.int_to_js 10
                                              | `L_n_11 -> Ojs.int_to_js 11
                                              | `L_n_12 -> Ojs.int_to_js 12
                                              | `L_n_13 -> Ojs.int_to_js 13
                                              | `L_n_14 -> Ojs.int_to_js 14
                                              | `L_n_15 -> Ojs.int_to_js 15
                                              | `L_n_16 -> Ojs.int_to_js 16
                                              | `L_n_17 -> Ojs.int_to_js 17
                                              | `L_n_18 -> Ojs.int_to_js 18
                                              | `L_n_19 -> Ojs.int_to_js 19
                                              | `L_n_2 -> Ojs.int_to_js 2
                                              | `L_n_20 -> Ojs.int_to_js 20
                                              | `L_n_3 -> Ojs.int_to_js 3
                                              | `L_n_4 -> Ojs.int_to_js 4
                                              | `L_n_5 -> Ojs.int_to_js 5
                                              | `L_n_6 -> Ojs.int_to_js 6
                                              | `L_n_7 -> Ojs.int_to_js 7
                                              | `L_n_8 -> Ojs.int_to_js 8
                                              | `L_n_9 -> Ojs.int_to_js 9)
                                       | None -> ());
                                      (match x6935 with
                                       | Some x6943 ->
                                           Ojs.set_prop_ascii x6939
                                             "minimumSignificantDigits"
                                             (match x6943 with
                                              | `L_n_1 -> Ojs.int_to_js 1
                                              | `L_n_10 -> Ojs.int_to_js 10
                                              | `L_n_11 -> Ojs.int_to_js 11
                                              | `L_n_12 -> Ojs.int_to_js 12
                                              | `L_n_13 -> Ojs.int_to_js 13
                                              | `L_n_14 -> Ojs.int_to_js 14
                                              | `L_n_15 -> Ojs.int_to_js 15
                                              | `L_n_16 -> Ojs.int_to_js 16
                                              | `L_n_17 -> Ojs.int_to_js 17
                                              | `L_n_18 -> Ojs.int_to_js 18
                                              | `L_n_19 -> Ojs.int_to_js 19
                                              | `L_n_2 -> Ojs.int_to_js 2
                                              | `L_n_20 -> Ojs.int_to_js 20
                                              | `L_n_21 -> Ojs.int_to_js 21
                                              | `L_n_3 -> Ojs.int_to_js 3
                                              | `L_n_4 -> Ojs.int_to_js 4
                                              | `L_n_5 -> Ojs.int_to_js 5
                                              | `L_n_6 -> Ojs.int_to_js 6
                                              | `L_n_7 -> Ojs.int_to_js 7
                                              | `L_n_8 -> Ojs.int_to_js 8
                                              | `L_n_9 -> Ojs.int_to_js 9)
                                       | None -> ());
                                      (match x6936 with
                                       | Some x6942 ->
                                           Ojs.set_prop_ascii x6939
                                             "maximumSignificantDigits"
                                             (match x6942 with
                                              | `L_n_1 -> Ojs.int_to_js 1
                                              | `L_n_10 -> Ojs.int_to_js 10
                                              | `L_n_11 -> Ojs.int_to_js 11
                                              | `L_n_12 -> Ojs.int_to_js 12
                                              | `L_n_13 -> Ojs.int_to_js 13
                                              | `L_n_14 -> Ojs.int_to_js 14
                                              | `L_n_15 -> Ojs.int_to_js 15
                                              | `L_n_16 -> Ojs.int_to_js 16
                                              | `L_n_17 -> Ojs.int_to_js 17
                                              | `L_n_18 -> Ojs.int_to_js 18
                                              | `L_n_19 -> Ojs.int_to_js 19
                                              | `L_n_2 -> Ojs.int_to_js 2
                                              | `L_n_20 -> Ojs.int_to_js 20
                                              | `L_n_21 -> Ojs.int_to_js 21
                                              | `L_n_3 -> Ojs.int_to_js 3
                                              | `L_n_4 -> Ojs.int_to_js 4
                                              | `L_n_5 -> Ojs.int_to_js 5
                                              | `L_n_6 -> Ojs.int_to_js 6
                                              | `L_n_7 -> Ojs.int_to_js 7
                                              | `L_n_8 -> Ojs.int_to_js 8
                                              | `L_n_9 -> Ojs.int_to_js 9)
                                       | None -> ());
                                      (match x6937 with
                                       | Some x6941 ->
                                           Ojs.set_prop_ascii x6939
                                             "notation"
                                             (Ojs.string_to_js x6941)
                                       | None -> ());
                                      (match x6938 with
                                       | Some x6940 ->
                                           Ojs.set_prop_ascii x6939
                                             "compactDisplay"
                                             (Ojs.string_to_js x6940)
                                       | None -> ());
                                      t_of_js x6939
    let cast_from = Obj.magic
  end
module BigInt =
  struct
    type t = [ `BigInt ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x6956 : Ojs.t) -> t_of_js x6956
    and t_0_to_js : t_0 -> Ojs.t = fun (x6955 : t) -> t_to_js x6955
    type tags = [ `BigInt ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `BigInt ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x6959 : Ojs.t) -> intf_of_js __tags_of_js x6959
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x6957 : __tags intf) -> intf_to_js __tags_to_js x6957
    let (toString : 'tags this -> ?radix:float -> unit -> string) =
      fun (x6964 : 'tags this) ->
        fun ?radix:(x6961 : float option) ->
          fun () ->
            Ojs.string_of_js
              (let x6966 = this_to_js Obj.magic x6964 in
               Ojs.call (Ojs.get_prop_ascii x6966 "toString") "apply"
                 [|x6966;((let x6962 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x6961 with
                            | Some x6963 ->
                                ignore
                                  (Ojs.call x6962 "push"
                                     [|(Ojs.float_to_js x6963)|])
                            | None -> ());
                           x6962))|])
    let (toLocaleString :
      'tags this ->
        ?locales:string ->
          ?options:BigIntToLocaleStringOptions.t -> unit -> string)
      =
      fun (x6972 : 'tags this) ->
        fun ?locales:(x6967 : string option) ->
          fun ?options:(x6968 : BigIntToLocaleStringOptions.t option) ->
            fun () ->
              Ojs.string_of_js
                (let x6974 = this_to_js Obj.magic x6972 in
                 Ojs.call (Ojs.get_prop_ascii x6974 "toLocaleString") "apply"
                   [|x6974;((let x6969 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x6967 with
                              | Some x6971 ->
                                  ignore
                                    (Ojs.call x6969 "push"
                                       [|(Ojs.string_to_js x6971)|])
                              | None -> ());
                             (match x6968 with
                              | Some x6970 ->
                                  ignore
                                    (Ojs.call x6969 "push"
                                       [|(BigIntToLocaleStringOptions.t_to_js
                                            x6970)|])
                              | None -> ());
                             x6969))|])
    let (valueOf : 'tags this -> bigint) =
      fun (x6975 : 'tags this) ->
        bigint_of_js (Ojs.call (this_to_js Obj.magic x6975) "valueOf" [||])
    let (invoke :
      [ `U1 of bigint  | `U2 of bool  | `U3 of float  | `U4 of string ] ->
        bigint)
      =
      fun
        (x6977 :
          [ `U1 of bigint  | `U2 of bool  | `U3 of float  | `U4 of string ])
        ->
        bigint_of_js
          (Ojs.apply (Ojs.get_prop_ascii Ojs.global "BigInt")
             [|((match x6977 with
                 | `U1 x6978 -> bigint_to_js x6978
                 | `U2 x6979 -> Ojs.bool_to_js x6979
                 | `U3 x6980 -> Ojs.float_to_js x6980
                 | `U4 x6981 -> Ojs.string_to_js x6981))|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "BigInt")
             "prototype")
    let (asIntN : bits:float -> int:bigint -> bigint) =
      fun ~bits:(x6982 : float) ->
        fun ~int:(x6983 : bigint) ->
          bigint_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "BigInt") "asIntN"
               [|(Ojs.float_to_js x6982);(bigint_to_js x6983)|])
    let (asUintN : bits:float -> int:bigint -> bigint) =
      fun ~bits:(x6984 : float) ->
        fun ~int:(x6985 : bigint) ->
          bigint_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "BigInt") "asUintN"
               [|(Ojs.float_to_js x6984);(bigint_to_js x6985)|])
    let cast_from = Obj.magic
  end
module Uint8Array =
  struct
    type t =
      [ `Uint8Array  | float ArrayLike.tags_1
      | float IterableIterator.tags_1] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x6987 : Ojs.t) -> t_of_js x6987
    and t_0_to_js : t_0 -> Ojs.t = fun (x6986 : t) -> t_to_js x6986
    type tags =
      [ `Uint8Array  | float ArrayLike.tags_1
      | float IterableIterator.tags_1]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `Uint8Array ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x6990 : Ojs.t) -> intf_of_js __tags_of_js x6990
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x6988 : __tags intf) -> intf_to_js __tags_to_js x6988
    let (at : 'tags this -> index:float -> float option) =
      fun (x6993 : 'tags this) ->
        fun ~index:(x6992 : float) ->
          Ojs.option_of_js Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x6993) "at"
               [|(Ojs.float_to_js x6992)|])
    let (includes :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> bool)
      =
      fun (x7000 : 'tags this) ->
        fun ~searchElement:(x6996 : float) ->
          fun ?fromIndex:(x6997 : float option) ->
            fun () ->
              Ojs.bool_of_js
                (let x7002 = this_to_js Obj.magic x7000 in
                 Ojs.call (Ojs.get_prop_ascii x7002 "includes") "apply"
                   [|x7002;((let x6998 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6998 "push"
                                  [|(Ojs.float_to_js x6996)|]);
                             (match x6997 with
                              | Some x6999 ->
                                  ignore
                                    (Ojs.call x6998 "push"
                                       [|(Ojs.float_to_js x6999)|])
                              | None -> ());
                             x6998))|])
    let (entries : 'tags this -> (float * float) IterableIterator.t) =
      fun (x7003 : 'tags this) ->
        IterableIterator.t_of_js
          (fun (x7005 : Ojs.t) ->
             let x7006 = x7005 in
             ((Ojs.float_of_js (Ojs.array_get x7006 0)),
               (Ojs.float_of_js (Ojs.array_get x7006 1))))
          (Ojs.call (this_to_js Obj.magic x7003) "entries" [||])
    let (keys : 'tags this -> float IterableIterator.t) =
      fun (x7007 : 'tags this) ->
        IterableIterator.t_of_js Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x7007) "keys" [||])
    let (values : 'tags this -> float IterableIterator.t) =
      fun (x7010 : 'tags this) ->
        IterableIterator.t_of_js Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x7010) "values" [||])
    let (get_BYTES_PER_ELEMENT : 'tags this -> float) =
      fun (x7013 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x7013)
             "BYTES_PER_ELEMENT")
    let (get_buffer : 'tags this -> ArrayBufferLike.t) =
      fun (x7015 : 'tags this) ->
        ArrayBufferLike.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x7015) "buffer")
    let (get_byteLength : 'tags this -> float) =
      fun (x7017 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x7017) "byteLength")
    let (get_byteOffset : 'tags this -> float) =
      fun (x7019 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x7019) "byteOffset")
    let (copyWithin :
      'tags this ->
        target:float -> start:float -> ?end_:float -> unit -> 'tags this)
      =
      fun (x7026 : 'tags this) ->
        fun ~target:(x7021 : float) ->
          fun ~start:(x7022 : float) ->
            fun ?end_:(x7023 : float option) ->
              fun () ->
                this_of_js Obj.magic
                  (let x7028 = this_to_js Obj.magic x7026 in
                   Ojs.call (Ojs.get_prop_ascii x7028 "copyWithin") "apply"
                     [|x7028;((let x7024 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x7024 "push"
                                    [|(Ojs.float_to_js x7021)|]);
                               ignore
                                 (Ojs.call x7024 "push"
                                    [|(Ojs.float_to_js x7022)|]);
                               (match x7023 with
                                | Some x7025 ->
                                    ignore
                                      (Ojs.call x7024 "push"
                                         [|(Ojs.float_to_js x7025)|])
                                | None -> ());
                               x7024))|])
    let (every :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x7037 : 'tags this) ->
        fun
          ~predicate:(x7030 :
                       value:float -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x7031 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x7039 = this_to_js Obj.magic x7037 in
                 Ojs.call (Ojs.get_prop_ascii x7039 "every") "apply"
                   [|x7039;((let x7032 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7032 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x7034 : Ojs.t) ->
                                          fun (x7035 : Ojs.t) ->
                                            fun (x7036 : Ojs.t) ->
                                              unknown_to_js
                                                (x7030
                                                   ~value:(Ojs.float_of_js
                                                             x7034)
                                                   ~index:(Ojs.float_of_js
                                                             x7035)
                                                   ~array:(t_of_js x7036))))|]);
                             (match x7031 with
                              | Some x7033 ->
                                  ignore
                                    (Ojs.call x7032 "push"
                                       [|(any_to_js x7033)|])
                              | None -> ());
                             x7032))|])
    let (fill :
      'tags this ->
        value:float -> ?start:float -> ?end_:float -> unit -> 'tags this)
      =
      fun (x7046 : 'tags this) ->
        fun ~value:(x7040 : float) ->
          fun ?start:(x7041 : float option) ->
            fun ?end_:(x7042 : float option) ->
              fun () ->
                this_of_js Obj.magic
                  (let x7048 = this_to_js Obj.magic x7046 in
                   Ojs.call (Ojs.get_prop_ascii x7048 "fill") "apply"
                     [|x7048;((let x7043 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x7043 "push"
                                    [|(Ojs.float_to_js x7040)|]);
                               (match x7041 with
                                | Some x7045 ->
                                    ignore
                                      (Ojs.call x7043 "push"
                                         [|(Ojs.float_to_js x7045)|])
                                | None -> ());
                               (match x7042 with
                                | Some x7044 ->
                                    ignore
                                      (Ojs.call x7043 "push"
                                         [|(Ojs.float_to_js x7044)|])
                                | None -> ());
                               x7043))|])
    let (filter :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> any) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x7057 : 'tags this) ->
        fun ~predicate:(x7050 : value:float -> index:float -> array:t -> any)
          ->
          fun ?thisArg:(x7051 : any option) ->
            fun () ->
              t_of_js
                (let x7059 = this_to_js Obj.magic x7057 in
                 Ojs.call (Ojs.get_prop_ascii x7059 "filter") "apply"
                   [|x7059;((let x7052 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7052 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x7054 : Ojs.t) ->
                                          fun (x7055 : Ojs.t) ->
                                            fun (x7056 : Ojs.t) ->
                                              any_to_js
                                                (x7050
                                                   ~value:(Ojs.float_of_js
                                                             x7054)
                                                   ~index:(Ojs.float_of_js
                                                             x7055)
                                                   ~array:(t_of_js x7056))))|]);
                             (match x7051 with
                              | Some x7053 ->
                                  ignore
                                    (Ojs.call x7052 "push"
                                       [|(any_to_js x7053)|])
                              | None -> ());
                             x7052))|])
    let (find :
      'tags this ->
        predicate:(value:float -> index:float -> obj:t -> bool) ->
          ?thisArg:any -> unit -> float option)
      =
      fun (x7067 : 'tags this) ->
        fun ~predicate:(x7060 : value:float -> index:float -> obj:t -> bool)
          ->
          fun ?thisArg:(x7061 : any option) ->
            fun () ->
              Ojs.option_of_js Ojs.float_of_js
                (let x7069 = this_to_js Obj.magic x7067 in
                 Ojs.call (Ojs.get_prop_ascii x7069 "find") "apply"
                   [|x7069;((let x7062 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7062 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x7064 : Ojs.t) ->
                                          fun (x7065 : Ojs.t) ->
                                            fun (x7066 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x7060
                                                   ~value:(Ojs.float_of_js
                                                             x7064)
                                                   ~index:(Ojs.float_of_js
                                                             x7065)
                                                   ~obj:(t_of_js x7066))))|]);
                             (match x7061 with
                              | Some x7063 ->
                                  ignore
                                    (Ojs.call x7062 "push"
                                       [|(any_to_js x7063)|])
                              | None -> ());
                             x7062))|])
    let (findIndex :
      'tags this ->
        predicate:(value:float -> index:float -> obj:t -> bool) ->
          ?thisArg:any -> unit -> float)
      =
      fun (x7078 : 'tags this) ->
        fun ~predicate:(x7071 : value:float -> index:float -> obj:t -> bool)
          ->
          fun ?thisArg:(x7072 : any option) ->
            fun () ->
              Ojs.float_of_js
                (let x7080 = this_to_js Obj.magic x7078 in
                 Ojs.call (Ojs.get_prop_ascii x7080 "findIndex") "apply"
                   [|x7080;((let x7073 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7073 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x7075 : Ojs.t) ->
                                          fun (x7076 : Ojs.t) ->
                                            fun (x7077 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x7071
                                                   ~value:(Ojs.float_of_js
                                                             x7075)
                                                   ~index:(Ojs.float_of_js
                                                             x7076)
                                                   ~obj:(t_of_js x7077))))|]);
                             (match x7072 with
                              | Some x7074 ->
                                  ignore
                                    (Ojs.call x7073 "push"
                                       [|(any_to_js x7074)|])
                              | None -> ());
                             x7073))|])
    let (forEach :
      'tags this ->
        callbackfn:(value:float -> index:float -> array:t -> unit) ->
          ?thisArg:any -> unit -> unit)
      =
      fun (x7088 : 'tags this) ->
        fun
          ~callbackfn:(x7081 : value:float -> index:float -> array:t -> unit)
          ->
          fun ?thisArg:(x7082 : any option) ->
            fun () ->
              ignore
                (let x7090 = this_to_js Obj.magic x7088 in
                 Ojs.call (Ojs.get_prop_ascii x7090 "forEach") "apply"
                   [|x7090;((let x7083 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7083 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x7085 : Ojs.t) ->
                                          fun (x7086 : Ojs.t) ->
                                            fun (x7087 : Ojs.t) ->
                                              x7081
                                                ~value:(Ojs.float_of_js x7085)
                                                ~index:(Ojs.float_of_js x7086)
                                                ~array:(t_of_js x7087)))|]);
                             (match x7082 with
                              | Some x7084 ->
                                  ignore
                                    (Ojs.call x7083 "push"
                                       [|(any_to_js x7084)|])
                              | None -> ());
                             x7083))|])
    let (indexOf :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> float)
      =
      fun (x7095 : 'tags this) ->
        fun ~searchElement:(x7091 : float) ->
          fun ?fromIndex:(x7092 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x7097 = this_to_js Obj.magic x7095 in
                 Ojs.call (Ojs.get_prop_ascii x7097 "indexOf") "apply"
                   [|x7097;((let x7093 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7093 "push"
                                  [|(Ojs.float_to_js x7091)|]);
                             (match x7092 with
                              | Some x7094 ->
                                  ignore
                                    (Ojs.call x7093 "push"
                                       [|(Ojs.float_to_js x7094)|])
                              | None -> ());
                             x7093))|])
    let (join : 'tags this -> ?separator:string -> unit -> string) =
      fun (x7101 : 'tags this) ->
        fun ?separator:(x7098 : string option) ->
          fun () ->
            Ojs.string_of_js
              (let x7103 = this_to_js Obj.magic x7101 in
               Ojs.call (Ojs.get_prop_ascii x7103 "join") "apply"
                 [|x7103;((let x7099 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x7098 with
                            | Some x7100 ->
                                ignore
                                  (Ojs.call x7099 "push"
                                     [|(Ojs.string_to_js x7100)|])
                            | None -> ());
                           x7099))|])
    let (lastIndexOf :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> float)
      =
      fun (x7108 : 'tags this) ->
        fun ~searchElement:(x7104 : float) ->
          fun ?fromIndex:(x7105 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x7110 = this_to_js Obj.magic x7108 in
                 Ojs.call (Ojs.get_prop_ascii x7110 "lastIndexOf") "apply"
                   [|x7110;((let x7106 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7106 "push"
                                  [|(Ojs.float_to_js x7104)|]);
                             (match x7105 with
                              | Some x7107 ->
                                  ignore
                                    (Ojs.call x7106 "push"
                                       [|(Ojs.float_to_js x7107)|])
                              | None -> ());
                             x7106))|])
    let (get_length : 'tags this -> float) =
      fun (x7111 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x7111) "length")
    let (map :
      'tags this ->
        callbackfn:(value:float -> index:float -> array:t -> float) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x7120 : 'tags this) ->
        fun
          ~callbackfn:(x7113 :
                        value:float -> index:float -> array:t -> float)
          ->
          fun ?thisArg:(x7114 : any option) ->
            fun () ->
              t_of_js
                (let x7122 = this_to_js Obj.magic x7120 in
                 Ojs.call (Ojs.get_prop_ascii x7122 "map") "apply"
                   [|x7122;((let x7115 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7115 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x7117 : Ojs.t) ->
                                          fun (x7118 : Ojs.t) ->
                                            fun (x7119 : Ojs.t) ->
                                              Ojs.float_to_js
                                                (x7113
                                                   ~value:(Ojs.float_of_js
                                                             x7117)
                                                   ~index:(Ojs.float_of_js
                                                             x7118)
                                                   ~array:(t_of_js x7119))))|]);
                             (match x7114 with
                              | Some x7116 ->
                                  ignore
                                    (Ojs.call x7115 "push"
                                       [|(any_to_js x7116)|])
                              | None -> ());
                             x7115))|])
    let (reduce :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> float)
      =
      fun (x7128 : 'tags this) ->
        fun
          ~callbackfn:(x7123 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x7128) "reduce"
               [|(Ojs.fun_to_js 4
                    (fun (x7124 : Ojs.t) ->
                       fun (x7125 : Ojs.t) ->
                         fun (x7126 : Ojs.t) ->
                           fun (x7127 : Ojs.t) ->
                             Ojs.float_to_js
                               (x7123 ~previousValue:(Ojs.float_of_js x7124)
                                  ~currentValue:(Ojs.float_of_js x7125)
                                  ~currentIndex:(Ojs.float_of_js x7126)
                                  ~array:(t_of_js x7127))))|])
    let (reduce' :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> initialValue:float -> float)
      =
      fun (x7136 : 'tags this) ->
        fun
          ~callbackfn:(x7130 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          fun ~initialValue:(x7135 : float) ->
            Ojs.float_of_js
              (Ojs.call (this_to_js Obj.magic x7136) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x7131 : Ojs.t) ->
                         fun (x7132 : Ojs.t) ->
                           fun (x7133 : Ojs.t) ->
                             fun (x7134 : Ojs.t) ->
                               Ojs.float_to_js
                                 (x7130
                                    ~previousValue:(Ojs.float_of_js x7131)
                                    ~currentValue:(Ojs.float_of_js x7132)
                                    ~currentIndex:(Ojs.float_of_js x7133)
                                    ~array:(t_of_js x7134))));(Ojs.float_to_js
                                                                 x7135)|])
    let (reduce'' :
      'tags this ->
        callbackfn:(previousValue:'U ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x7144 : 'tags this) ->
        fun
          ~callbackfn:(x7138 :
                        previousValue:'U ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x7143 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic x7144) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x7139 : Ojs.t) ->
                         fun (x7140 : Ojs.t) ->
                           fun (x7141 : Ojs.t) ->
                             fun (x7142 : Ojs.t) ->
                               Obj.magic
                                 (x7138 ~previousValue:(Obj.magic x7139)
                                    ~currentValue:(Ojs.float_of_js x7140)
                                    ~currentIndex:(Ojs.float_of_js x7141)
                                    ~array:(t_of_js x7142))));(Obj.magic
                                                                 x7143)|])
    let (reduceRight :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> float)
      =
      fun (x7151 : 'tags this) ->
        fun
          ~callbackfn:(x7146 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x7151) "reduceRight"
               [|(Ojs.fun_to_js 4
                    (fun (x7147 : Ojs.t) ->
                       fun (x7148 : Ojs.t) ->
                         fun (x7149 : Ojs.t) ->
                           fun (x7150 : Ojs.t) ->
                             Ojs.float_to_js
                               (x7146 ~previousValue:(Ojs.float_of_js x7147)
                                  ~currentValue:(Ojs.float_of_js x7148)
                                  ~currentIndex:(Ojs.float_of_js x7149)
                                  ~array:(t_of_js x7150))))|])
    let (reduceRight' :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> initialValue:float -> float)
      =
      fun (x7159 : 'tags this) ->
        fun
          ~callbackfn:(x7153 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          fun ~initialValue:(x7158 : float) ->
            Ojs.float_of_js
              (Ojs.call (this_to_js Obj.magic x7159) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x7154 : Ojs.t) ->
                         fun (x7155 : Ojs.t) ->
                           fun (x7156 : Ojs.t) ->
                             fun (x7157 : Ojs.t) ->
                               Ojs.float_to_js
                                 (x7153
                                    ~previousValue:(Ojs.float_of_js x7154)
                                    ~currentValue:(Ojs.float_of_js x7155)
                                    ~currentIndex:(Ojs.float_of_js x7156)
                                    ~array:(t_of_js x7157))));(Ojs.float_to_js
                                                                 x7158)|])
    let (reduceRight'' :
      'tags this ->
        callbackfn:(previousValue:'U ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x7167 : 'tags this) ->
        fun
          ~callbackfn:(x7161 :
                        previousValue:'U ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x7166 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic x7167) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x7162 : Ojs.t) ->
                         fun (x7163 : Ojs.t) ->
                           fun (x7164 : Ojs.t) ->
                             fun (x7165 : Ojs.t) ->
                               Obj.magic
                                 (x7161 ~previousValue:(Obj.magic x7162)
                                    ~currentValue:(Ojs.float_of_js x7163)
                                    ~currentIndex:(Ojs.float_of_js x7164)
                                    ~array:(t_of_js x7165))));(Obj.magic
                                                                 x7166)|])
    let (reverse : 'tags this -> t) =
      fun (x7169 : 'tags this) ->
        t_of_js (Ojs.call (this_to_js Obj.magic x7169) "reverse" [||])
    let (set_ :
      'tags this -> array:float ArrayLike.t -> ?offset:float -> unit -> unit)
      =
      fun (x7176 : 'tags this) ->
        fun ~array:(x7171 : float ArrayLike.t) ->
          fun ?offset:(x7172 : float option) ->
            fun () ->
              ignore
                (let x7178 = this_to_js Obj.magic x7176 in
                 Ojs.call (Ojs.get_prop_ascii x7178 "set") "apply"
                   [|x7178;((let x7173 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7173 "push"
                                  [|(ArrayLike.t_to_js Ojs.float_to_js x7171)|]);
                             (match x7172 with
                              | Some x7174 ->
                                  ignore
                                    (Ojs.call x7173 "push"
                                       [|(Ojs.float_to_js x7174)|])
                              | None -> ());
                             x7173))|])
    let (slice : 'tags this -> ?start:float -> ?end_:float -> unit -> t) =
      fun (x7184 : 'tags this) ->
        fun ?start:(x7179 : float option) ->
          fun ?end_:(x7180 : float option) ->
            fun () ->
              t_of_js
                (let x7186 = this_to_js Obj.magic x7184 in
                 Ojs.call (Ojs.get_prop_ascii x7186 "slice") "apply"
                   [|x7186;((let x7181 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x7179 with
                              | Some x7183 ->
                                  ignore
                                    (Ojs.call x7181 "push"
                                       [|(Ojs.float_to_js x7183)|])
                              | None -> ());
                             (match x7180 with
                              | Some x7182 ->
                                  ignore
                                    (Ojs.call x7181 "push"
                                       [|(Ojs.float_to_js x7182)|])
                              | None -> ());
                             x7181))|])
    let (some :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x7194 : 'tags this) ->
        fun
          ~predicate:(x7187 :
                       value:float -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x7188 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x7196 = this_to_js Obj.magic x7194 in
                 Ojs.call (Ojs.get_prop_ascii x7196 "some") "apply"
                   [|x7196;((let x7189 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7189 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x7191 : Ojs.t) ->
                                          fun (x7192 : Ojs.t) ->
                                            fun (x7193 : Ojs.t) ->
                                              unknown_to_js
                                                (x7187
                                                   ~value:(Ojs.float_of_js
                                                             x7191)
                                                   ~index:(Ojs.float_of_js
                                                             x7192)
                                                   ~array:(t_of_js x7193))))|]);
                             (match x7188 with
                              | Some x7190 ->
                                  ignore
                                    (Ojs.call x7189 "push"
                                       [|(any_to_js x7190)|])
                              | None -> ());
                             x7189))|])
    let (sort :
      'tags this ->
        ?compareFn:(a:float -> b:float -> float) -> unit -> 'tags this)
      =
      fun (x7202 : 'tags this) ->
        fun ?compareFn:(x7197 : (a:float -> b:float -> float) option) ->
          fun () ->
            this_of_js Obj.magic
              (let x7204 = this_to_js Obj.magic x7202 in
               Ojs.call (Ojs.get_prop_ascii x7204 "sort") "apply"
                 [|x7204;((let x7198 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x7197 with
                            | Some x7199 ->
                                ignore
                                  (Ojs.call x7198 "push"
                                     [|(Ojs.fun_to_js 2
                                          (fun (x7200 : Ojs.t) ->
                                             fun (x7201 : Ojs.t) ->
                                               Ojs.float_to_js
                                                 (x7199
                                                    ~a:(Ojs.float_of_js x7200)
                                                    ~b:(Ojs.float_of_js x7201))))|])
                            | None -> ());
                           x7198))|])
    let (subarray : 'tags this -> ?begin_:float -> ?end_:float -> unit -> t)
      =
      fun (x7211 : 'tags this) ->
        fun ?begin_:(x7206 : float option) ->
          fun ?end_:(x7207 : float option) ->
            fun () ->
              t_of_js
                (let x7213 = this_to_js Obj.magic x7211 in
                 Ojs.call (Ojs.get_prop_ascii x7213 "subarray") "apply"
                   [|x7213;((let x7208 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x7206 with
                              | Some x7210 ->
                                  ignore
                                    (Ojs.call x7208 "push"
                                       [|(Ojs.float_to_js x7210)|])
                              | None -> ());
                             (match x7207 with
                              | Some x7209 ->
                                  ignore
                                    (Ojs.call x7208 "push"
                                       [|(Ojs.float_to_js x7209)|])
                              | None -> ());
                             x7208))|])
    let (toLocaleString : 'tags this -> string) =
      fun (x7214 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x7214) "toLocaleString" [||])
    let (toString : 'tags this -> string) =
      fun (x7216 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x7216) "toString" [||])
    let (valueOf : 'tags this -> t) =
      fun (x7218 : 'tags this) ->
        t_of_js (Ojs.call (this_to_js Obj.magic x7218) "valueOf" [||])
    let (get : 'tags this -> float -> float) =
      fun (x7220 : 'tags this) ->
        fun (x7222 : float) ->
          Ojs.float_of_js
            (Ojs.get_prop (this_to_js Obj.magic x7220)
               (Ojs.float_to_js x7222))
    let (set : 'tags this -> float -> float -> unit) =
      fun (x7223 : 'tags this) ->
        fun (x7225 : float) ->
          fun (x7226 : float) ->
            Ojs.set_prop (this_to_js Obj.magic x7223) (Ojs.float_to_js x7225)
              (Ojs.float_to_js x7226)
    let (create : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Uint8Array") [||])
    let (create' : float Iterable.t -> t) =
      fun (x7227 : float Iterable.t) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Uint8Array")
             [|(Iterable.t_to_js Ojs.float_to_js x7227)|])
    let (from :
      arrayLike:float Iterable.t ->
        ?mapfn:(v:float -> k:float -> float) -> ?thisArg:any -> unit -> t)
      =
      fun ~arrayLike:(x7229 : float Iterable.t) ->
        fun ?mapfn:(x7230 : (v:float -> k:float -> float) option) ->
          fun ?thisArg:(x7231 : any option) ->
            fun () ->
              t_of_js
                (let x7238 = Ojs.get_prop_ascii Ojs.global "Uint8Array" in
                 Ojs.call (Ojs.get_prop_ascii x7238 "from") "apply"
                   [|x7238;((let x7232 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7232 "push"
                                  [|(Iterable.t_to_js Ojs.float_to_js x7229)|]);
                             (match x7230 with
                              | Some x7234 ->
                                  ignore
                                    (Ojs.call x7232 "push"
                                       [|(Ojs.fun_to_js 2
                                            (fun (x7235 : Ojs.t) ->
                                               fun (x7236 : Ojs.t) ->
                                                 Ojs.float_to_js
                                                   (x7234
                                                      ~v:(Ojs.float_of_js
                                                            x7235)
                                                      ~k:(Ojs.float_of_js
                                                            x7236))))|])
                              | None -> ());
                             (match x7231 with
                              | Some x7233 ->
                                  ignore
                                    (Ojs.call x7232 "push"
                                       [|(any_to_js x7233)|])
                              | None -> ());
                             x7232))|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Uint8Array")
             "prototype")
    let (create'' : float -> t) =
      fun (x7239 : float) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Uint8Array")
             [|(Ojs.float_to_js x7239)|])
    let (create''' :
      [ `U1 of float ArrayLike.t  | `U2 of ArrayBufferLike.t ] -> t) =
      fun (x7240 : [ `U1 of float ArrayLike.t  | `U2 of ArrayBufferLike.t ])
        ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Uint8Array")
             [|((match x7240 with
                 | `U1 x7241 -> ArrayLike.t_to_js Ojs.float_to_js x7241
                 | `U2 x7243 -> ArrayBufferLike.t_to_js x7243))|])
    let (create'''' :
      buffer:ArrayBufferLike.t ->
        ?byteOffset:float -> ?length:float -> unit -> t)
      =
      fun ~buffer:(x7244 : ArrayBufferLike.t) ->
        fun ?byteOffset:(x7245 : float option) ->
          fun ?length:(x7246 : float option) ->
            fun () ->
              t_of_js
                (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "Uint8Array")
                   (let x7247 =
                      Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                        [||] in
                    ignore
                      (Ojs.call x7247 "push"
                         [|(ArrayBufferLike.t_to_js x7244)|]);
                    (match x7245 with
                     | Some x7249 ->
                         ignore
                           (Ojs.call x7247 "push" [|(Ojs.float_to_js x7249)|])
                     | None -> ());
                    (match x7246 with
                     | Some x7248 ->
                         ignore
                           (Ojs.call x7247 "push" [|(Ojs.float_to_js x7248)|])
                     | None -> ());
                    x7247))
    let (bytes_per_element : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Uint8Array")
             "BYTES_PER_ELEMENT")
    let (of_ : float list -> t) =
      fun (x7250 : float list) ->
        t_of_js
          (let x7253 = Ojs.get_prop_ascii Ojs.global "Uint8Array" in
           Ojs.call (Ojs.get_prop_ascii x7253 "of") "apply"
             [|x7253;((let x7251 =
                         Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                           [||] in
                       List.iter
                         (fun (x7252 : float) ->
                            ignore
                              (Ojs.call x7251 "push"
                                 [|(Ojs.float_to_js x7252)|])) x7250;
                       x7251))|])
    let (from' : float ArrayLike.t -> t) =
      fun (x7254 : float ArrayLike.t) ->
        t_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Uint8Array") "from"
             [|(ArrayLike.t_to_js Ojs.float_to_js x7254)|])
    let (from'' :
      arrayLike:'T ArrayLike.t ->
        mapfn:(v:'T -> k:float -> float) -> ?thisArg:any -> unit -> t)
      =
      fun ~arrayLike:(x7256 : 'T ArrayLike.t) ->
        fun ~mapfn:(x7257 : v:'T -> k:float -> float) ->
          fun ?thisArg:(x7258 : any option) ->
            fun () ->
              t_of_js
                (let x7264 = Ojs.get_prop_ascii Ojs.global "Uint8Array" in
                 Ojs.call (Ojs.get_prop_ascii x7264 "from") "apply"
                   [|x7264;((let x7259 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7259 "push"
                                  [|(ArrayLike.t_to_js Obj.magic x7256)|]);
                             ignore
                               (Ojs.call x7259 "push"
                                  [|(Ojs.fun_to_js 2
                                       (fun (x7261 : Ojs.t) ->
                                          fun (x7262 : Ojs.t) ->
                                            Ojs.float_to_js
                                              (x7257 ~v:(Obj.magic x7261)
                                                 ~k:(Ojs.float_of_js x7262))))|]);
                             (match x7258 with
                              | Some x7260 ->
                                  ignore
                                    (Ojs.call x7259 "push"
                                       [|(any_to_js x7260)|])
                              | None -> ());
                             x7259))|])
    let cast_from = Obj.magic
  end
module Uint32Array =
  struct
    type t =
      [ `Uint32Array  | float ArrayLike.tags_1
      | float IterableIterator.tags_1] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x7266 : Ojs.t) -> t_of_js x7266
    and t_0_to_js : t_0 -> Ojs.t = fun (x7265 : t) -> t_to_js x7265
    type tags =
      [ `Uint32Array  | float ArrayLike.tags_1
      | float IterableIterator.tags_1]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `Uint32Array ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x7269 : Ojs.t) -> intf_of_js __tags_of_js x7269
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x7267 : __tags intf) -> intf_to_js __tags_to_js x7267
    let (at : 'tags this -> index:float -> float option) =
      fun (x7272 : 'tags this) ->
        fun ~index:(x7271 : float) ->
          Ojs.option_of_js Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x7272) "at"
               [|(Ojs.float_to_js x7271)|])
    let (includes :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> bool)
      =
      fun (x7279 : 'tags this) ->
        fun ~searchElement:(x7275 : float) ->
          fun ?fromIndex:(x7276 : float option) ->
            fun () ->
              Ojs.bool_of_js
                (let x7281 = this_to_js Obj.magic x7279 in
                 Ojs.call (Ojs.get_prop_ascii x7281 "includes") "apply"
                   [|x7281;((let x7277 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7277 "push"
                                  [|(Ojs.float_to_js x7275)|]);
                             (match x7276 with
                              | Some x7278 ->
                                  ignore
                                    (Ojs.call x7277 "push"
                                       [|(Ojs.float_to_js x7278)|])
                              | None -> ());
                             x7277))|])
    let (entries : 'tags this -> (float * float) IterableIterator.t) =
      fun (x7282 : 'tags this) ->
        IterableIterator.t_of_js
          (fun (x7284 : Ojs.t) ->
             let x7285 = x7284 in
             ((Ojs.float_of_js (Ojs.array_get x7285 0)),
               (Ojs.float_of_js (Ojs.array_get x7285 1))))
          (Ojs.call (this_to_js Obj.magic x7282) "entries" [||])
    let (keys : 'tags this -> float IterableIterator.t) =
      fun (x7286 : 'tags this) ->
        IterableIterator.t_of_js Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x7286) "keys" [||])
    let (values : 'tags this -> float IterableIterator.t) =
      fun (x7289 : 'tags this) ->
        IterableIterator.t_of_js Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x7289) "values" [||])
    let (get_BYTES_PER_ELEMENT : 'tags this -> float) =
      fun (x7292 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x7292)
             "BYTES_PER_ELEMENT")
    let (get_buffer : 'tags this -> ArrayBufferLike.t) =
      fun (x7294 : 'tags this) ->
        ArrayBufferLike.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x7294) "buffer")
    let (get_byteLength : 'tags this -> float) =
      fun (x7296 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x7296) "byteLength")
    let (get_byteOffset : 'tags this -> float) =
      fun (x7298 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x7298) "byteOffset")
    let (copyWithin :
      'tags this ->
        target:float -> start:float -> ?end_:float -> unit -> 'tags this)
      =
      fun (x7305 : 'tags this) ->
        fun ~target:(x7300 : float) ->
          fun ~start:(x7301 : float) ->
            fun ?end_:(x7302 : float option) ->
              fun () ->
                this_of_js Obj.magic
                  (let x7307 = this_to_js Obj.magic x7305 in
                   Ojs.call (Ojs.get_prop_ascii x7307 "copyWithin") "apply"
                     [|x7307;((let x7303 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x7303 "push"
                                    [|(Ojs.float_to_js x7300)|]);
                               ignore
                                 (Ojs.call x7303 "push"
                                    [|(Ojs.float_to_js x7301)|]);
                               (match x7302 with
                                | Some x7304 ->
                                    ignore
                                      (Ojs.call x7303 "push"
                                         [|(Ojs.float_to_js x7304)|])
                                | None -> ());
                               x7303))|])
    let (every :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x7316 : 'tags this) ->
        fun
          ~predicate:(x7309 :
                       value:float -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x7310 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x7318 = this_to_js Obj.magic x7316 in
                 Ojs.call (Ojs.get_prop_ascii x7318 "every") "apply"
                   [|x7318;((let x7311 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7311 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x7313 : Ojs.t) ->
                                          fun (x7314 : Ojs.t) ->
                                            fun (x7315 : Ojs.t) ->
                                              unknown_to_js
                                                (x7309
                                                   ~value:(Ojs.float_of_js
                                                             x7313)
                                                   ~index:(Ojs.float_of_js
                                                             x7314)
                                                   ~array:(t_of_js x7315))))|]);
                             (match x7310 with
                              | Some x7312 ->
                                  ignore
                                    (Ojs.call x7311 "push"
                                       [|(any_to_js x7312)|])
                              | None -> ());
                             x7311))|])
    let (fill :
      'tags this ->
        value:float -> ?start:float -> ?end_:float -> unit -> 'tags this)
      =
      fun (x7325 : 'tags this) ->
        fun ~value:(x7319 : float) ->
          fun ?start:(x7320 : float option) ->
            fun ?end_:(x7321 : float option) ->
              fun () ->
                this_of_js Obj.magic
                  (let x7327 = this_to_js Obj.magic x7325 in
                   Ojs.call (Ojs.get_prop_ascii x7327 "fill") "apply"
                     [|x7327;((let x7322 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x7322 "push"
                                    [|(Ojs.float_to_js x7319)|]);
                               (match x7320 with
                                | Some x7324 ->
                                    ignore
                                      (Ojs.call x7322 "push"
                                         [|(Ojs.float_to_js x7324)|])
                                | None -> ());
                               (match x7321 with
                                | Some x7323 ->
                                    ignore
                                      (Ojs.call x7322 "push"
                                         [|(Ojs.float_to_js x7323)|])
                                | None -> ());
                               x7322))|])
    let (filter :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> any) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x7336 : 'tags this) ->
        fun ~predicate:(x7329 : value:float -> index:float -> array:t -> any)
          ->
          fun ?thisArg:(x7330 : any option) ->
            fun () ->
              t_of_js
                (let x7338 = this_to_js Obj.magic x7336 in
                 Ojs.call (Ojs.get_prop_ascii x7338 "filter") "apply"
                   [|x7338;((let x7331 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7331 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x7333 : Ojs.t) ->
                                          fun (x7334 : Ojs.t) ->
                                            fun (x7335 : Ojs.t) ->
                                              any_to_js
                                                (x7329
                                                   ~value:(Ojs.float_of_js
                                                             x7333)
                                                   ~index:(Ojs.float_of_js
                                                             x7334)
                                                   ~array:(t_of_js x7335))))|]);
                             (match x7330 with
                              | Some x7332 ->
                                  ignore
                                    (Ojs.call x7331 "push"
                                       [|(any_to_js x7332)|])
                              | None -> ());
                             x7331))|])
    let (find :
      'tags this ->
        predicate:(value:float -> index:float -> obj:t -> bool) ->
          ?thisArg:any -> unit -> float option)
      =
      fun (x7346 : 'tags this) ->
        fun ~predicate:(x7339 : value:float -> index:float -> obj:t -> bool)
          ->
          fun ?thisArg:(x7340 : any option) ->
            fun () ->
              Ojs.option_of_js Ojs.float_of_js
                (let x7348 = this_to_js Obj.magic x7346 in
                 Ojs.call (Ojs.get_prop_ascii x7348 "find") "apply"
                   [|x7348;((let x7341 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7341 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x7343 : Ojs.t) ->
                                          fun (x7344 : Ojs.t) ->
                                            fun (x7345 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x7339
                                                   ~value:(Ojs.float_of_js
                                                             x7343)
                                                   ~index:(Ojs.float_of_js
                                                             x7344)
                                                   ~obj:(t_of_js x7345))))|]);
                             (match x7340 with
                              | Some x7342 ->
                                  ignore
                                    (Ojs.call x7341 "push"
                                       [|(any_to_js x7342)|])
                              | None -> ());
                             x7341))|])
    let (findIndex :
      'tags this ->
        predicate:(value:float -> index:float -> obj:t -> bool) ->
          ?thisArg:any -> unit -> float)
      =
      fun (x7357 : 'tags this) ->
        fun ~predicate:(x7350 : value:float -> index:float -> obj:t -> bool)
          ->
          fun ?thisArg:(x7351 : any option) ->
            fun () ->
              Ojs.float_of_js
                (let x7359 = this_to_js Obj.magic x7357 in
                 Ojs.call (Ojs.get_prop_ascii x7359 "findIndex") "apply"
                   [|x7359;((let x7352 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7352 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x7354 : Ojs.t) ->
                                          fun (x7355 : Ojs.t) ->
                                            fun (x7356 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x7350
                                                   ~value:(Ojs.float_of_js
                                                             x7354)
                                                   ~index:(Ojs.float_of_js
                                                             x7355)
                                                   ~obj:(t_of_js x7356))))|]);
                             (match x7351 with
                              | Some x7353 ->
                                  ignore
                                    (Ojs.call x7352 "push"
                                       [|(any_to_js x7353)|])
                              | None -> ());
                             x7352))|])
    let (forEach :
      'tags this ->
        callbackfn:(value:float -> index:float -> array:t -> unit) ->
          ?thisArg:any -> unit -> unit)
      =
      fun (x7367 : 'tags this) ->
        fun
          ~callbackfn:(x7360 : value:float -> index:float -> array:t -> unit)
          ->
          fun ?thisArg:(x7361 : any option) ->
            fun () ->
              ignore
                (let x7369 = this_to_js Obj.magic x7367 in
                 Ojs.call (Ojs.get_prop_ascii x7369 "forEach") "apply"
                   [|x7369;((let x7362 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7362 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x7364 : Ojs.t) ->
                                          fun (x7365 : Ojs.t) ->
                                            fun (x7366 : Ojs.t) ->
                                              x7360
                                                ~value:(Ojs.float_of_js x7364)
                                                ~index:(Ojs.float_of_js x7365)
                                                ~array:(t_of_js x7366)))|]);
                             (match x7361 with
                              | Some x7363 ->
                                  ignore
                                    (Ojs.call x7362 "push"
                                       [|(any_to_js x7363)|])
                              | None -> ());
                             x7362))|])
    let (indexOf :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> float)
      =
      fun (x7374 : 'tags this) ->
        fun ~searchElement:(x7370 : float) ->
          fun ?fromIndex:(x7371 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x7376 = this_to_js Obj.magic x7374 in
                 Ojs.call (Ojs.get_prop_ascii x7376 "indexOf") "apply"
                   [|x7376;((let x7372 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7372 "push"
                                  [|(Ojs.float_to_js x7370)|]);
                             (match x7371 with
                              | Some x7373 ->
                                  ignore
                                    (Ojs.call x7372 "push"
                                       [|(Ojs.float_to_js x7373)|])
                              | None -> ());
                             x7372))|])
    let (join : 'tags this -> ?separator:string -> unit -> string) =
      fun (x7380 : 'tags this) ->
        fun ?separator:(x7377 : string option) ->
          fun () ->
            Ojs.string_of_js
              (let x7382 = this_to_js Obj.magic x7380 in
               Ojs.call (Ojs.get_prop_ascii x7382 "join") "apply"
                 [|x7382;((let x7378 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x7377 with
                            | Some x7379 ->
                                ignore
                                  (Ojs.call x7378 "push"
                                     [|(Ojs.string_to_js x7379)|])
                            | None -> ());
                           x7378))|])
    let (lastIndexOf :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> float)
      =
      fun (x7387 : 'tags this) ->
        fun ~searchElement:(x7383 : float) ->
          fun ?fromIndex:(x7384 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x7389 = this_to_js Obj.magic x7387 in
                 Ojs.call (Ojs.get_prop_ascii x7389 "lastIndexOf") "apply"
                   [|x7389;((let x7385 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7385 "push"
                                  [|(Ojs.float_to_js x7383)|]);
                             (match x7384 with
                              | Some x7386 ->
                                  ignore
                                    (Ojs.call x7385 "push"
                                       [|(Ojs.float_to_js x7386)|])
                              | None -> ());
                             x7385))|])
    let (get_length : 'tags this -> float) =
      fun (x7390 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x7390) "length")
    let (map :
      'tags this ->
        callbackfn:(value:float -> index:float -> array:t -> float) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x7399 : 'tags this) ->
        fun
          ~callbackfn:(x7392 :
                        value:float -> index:float -> array:t -> float)
          ->
          fun ?thisArg:(x7393 : any option) ->
            fun () ->
              t_of_js
                (let x7401 = this_to_js Obj.magic x7399 in
                 Ojs.call (Ojs.get_prop_ascii x7401 "map") "apply"
                   [|x7401;((let x7394 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7394 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x7396 : Ojs.t) ->
                                          fun (x7397 : Ojs.t) ->
                                            fun (x7398 : Ojs.t) ->
                                              Ojs.float_to_js
                                                (x7392
                                                   ~value:(Ojs.float_of_js
                                                             x7396)
                                                   ~index:(Ojs.float_of_js
                                                             x7397)
                                                   ~array:(t_of_js x7398))))|]);
                             (match x7393 with
                              | Some x7395 ->
                                  ignore
                                    (Ojs.call x7394 "push"
                                       [|(any_to_js x7395)|])
                              | None -> ());
                             x7394))|])
    let (reduce :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> float)
      =
      fun (x7407 : 'tags this) ->
        fun
          ~callbackfn:(x7402 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x7407) "reduce"
               [|(Ojs.fun_to_js 4
                    (fun (x7403 : Ojs.t) ->
                       fun (x7404 : Ojs.t) ->
                         fun (x7405 : Ojs.t) ->
                           fun (x7406 : Ojs.t) ->
                             Ojs.float_to_js
                               (x7402 ~previousValue:(Ojs.float_of_js x7403)
                                  ~currentValue:(Ojs.float_of_js x7404)
                                  ~currentIndex:(Ojs.float_of_js x7405)
                                  ~array:(t_of_js x7406))))|])
    let (reduce' :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> initialValue:float -> float)
      =
      fun (x7415 : 'tags this) ->
        fun
          ~callbackfn:(x7409 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          fun ~initialValue:(x7414 : float) ->
            Ojs.float_of_js
              (Ojs.call (this_to_js Obj.magic x7415) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x7410 : Ojs.t) ->
                         fun (x7411 : Ojs.t) ->
                           fun (x7412 : Ojs.t) ->
                             fun (x7413 : Ojs.t) ->
                               Ojs.float_to_js
                                 (x7409
                                    ~previousValue:(Ojs.float_of_js x7410)
                                    ~currentValue:(Ojs.float_of_js x7411)
                                    ~currentIndex:(Ojs.float_of_js x7412)
                                    ~array:(t_of_js x7413))));(Ojs.float_to_js
                                                                 x7414)|])
    let (reduce'' :
      'tags this ->
        callbackfn:(previousValue:'U ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x7423 : 'tags this) ->
        fun
          ~callbackfn:(x7417 :
                        previousValue:'U ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x7422 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic x7423) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x7418 : Ojs.t) ->
                         fun (x7419 : Ojs.t) ->
                           fun (x7420 : Ojs.t) ->
                             fun (x7421 : Ojs.t) ->
                               Obj.magic
                                 (x7417 ~previousValue:(Obj.magic x7418)
                                    ~currentValue:(Ojs.float_of_js x7419)
                                    ~currentIndex:(Ojs.float_of_js x7420)
                                    ~array:(t_of_js x7421))));(Obj.magic
                                                                 x7422)|])
    let (reduceRight :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> float)
      =
      fun (x7430 : 'tags this) ->
        fun
          ~callbackfn:(x7425 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x7430) "reduceRight"
               [|(Ojs.fun_to_js 4
                    (fun (x7426 : Ojs.t) ->
                       fun (x7427 : Ojs.t) ->
                         fun (x7428 : Ojs.t) ->
                           fun (x7429 : Ojs.t) ->
                             Ojs.float_to_js
                               (x7425 ~previousValue:(Ojs.float_of_js x7426)
                                  ~currentValue:(Ojs.float_of_js x7427)
                                  ~currentIndex:(Ojs.float_of_js x7428)
                                  ~array:(t_of_js x7429))))|])
    let (reduceRight' :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> initialValue:float -> float)
      =
      fun (x7438 : 'tags this) ->
        fun
          ~callbackfn:(x7432 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          fun ~initialValue:(x7437 : float) ->
            Ojs.float_of_js
              (Ojs.call (this_to_js Obj.magic x7438) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x7433 : Ojs.t) ->
                         fun (x7434 : Ojs.t) ->
                           fun (x7435 : Ojs.t) ->
                             fun (x7436 : Ojs.t) ->
                               Ojs.float_to_js
                                 (x7432
                                    ~previousValue:(Ojs.float_of_js x7433)
                                    ~currentValue:(Ojs.float_of_js x7434)
                                    ~currentIndex:(Ojs.float_of_js x7435)
                                    ~array:(t_of_js x7436))));(Ojs.float_to_js
                                                                 x7437)|])
    let (reduceRight'' :
      'tags this ->
        callbackfn:(previousValue:'U ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x7446 : 'tags this) ->
        fun
          ~callbackfn:(x7440 :
                        previousValue:'U ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x7445 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic x7446) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x7441 : Ojs.t) ->
                         fun (x7442 : Ojs.t) ->
                           fun (x7443 : Ojs.t) ->
                             fun (x7444 : Ojs.t) ->
                               Obj.magic
                                 (x7440 ~previousValue:(Obj.magic x7441)
                                    ~currentValue:(Ojs.float_of_js x7442)
                                    ~currentIndex:(Ojs.float_of_js x7443)
                                    ~array:(t_of_js x7444))));(Obj.magic
                                                                 x7445)|])
    let (reverse : 'tags this -> t) =
      fun (x7448 : 'tags this) ->
        t_of_js (Ojs.call (this_to_js Obj.magic x7448) "reverse" [||])
    let (set_ :
      'tags this -> array:float ArrayLike.t -> ?offset:float -> unit -> unit)
      =
      fun (x7455 : 'tags this) ->
        fun ~array:(x7450 : float ArrayLike.t) ->
          fun ?offset:(x7451 : float option) ->
            fun () ->
              ignore
                (let x7457 = this_to_js Obj.magic x7455 in
                 Ojs.call (Ojs.get_prop_ascii x7457 "set") "apply"
                   [|x7457;((let x7452 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7452 "push"
                                  [|(ArrayLike.t_to_js Ojs.float_to_js x7450)|]);
                             (match x7451 with
                              | Some x7453 ->
                                  ignore
                                    (Ojs.call x7452 "push"
                                       [|(Ojs.float_to_js x7453)|])
                              | None -> ());
                             x7452))|])
    let (slice : 'tags this -> ?start:float -> ?end_:float -> unit -> t) =
      fun (x7463 : 'tags this) ->
        fun ?start:(x7458 : float option) ->
          fun ?end_:(x7459 : float option) ->
            fun () ->
              t_of_js
                (let x7465 = this_to_js Obj.magic x7463 in
                 Ojs.call (Ojs.get_prop_ascii x7465 "slice") "apply"
                   [|x7465;((let x7460 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x7458 with
                              | Some x7462 ->
                                  ignore
                                    (Ojs.call x7460 "push"
                                       [|(Ojs.float_to_js x7462)|])
                              | None -> ());
                             (match x7459 with
                              | Some x7461 ->
                                  ignore
                                    (Ojs.call x7460 "push"
                                       [|(Ojs.float_to_js x7461)|])
                              | None -> ());
                             x7460))|])
    let (some :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x7473 : 'tags this) ->
        fun
          ~predicate:(x7466 :
                       value:float -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x7467 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x7475 = this_to_js Obj.magic x7473 in
                 Ojs.call (Ojs.get_prop_ascii x7475 "some") "apply"
                   [|x7475;((let x7468 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7468 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x7470 : Ojs.t) ->
                                          fun (x7471 : Ojs.t) ->
                                            fun (x7472 : Ojs.t) ->
                                              unknown_to_js
                                                (x7466
                                                   ~value:(Ojs.float_of_js
                                                             x7470)
                                                   ~index:(Ojs.float_of_js
                                                             x7471)
                                                   ~array:(t_of_js x7472))))|]);
                             (match x7467 with
                              | Some x7469 ->
                                  ignore
                                    (Ojs.call x7468 "push"
                                       [|(any_to_js x7469)|])
                              | None -> ());
                             x7468))|])
    let (sort :
      'tags this ->
        ?compareFn:(a:float -> b:float -> float) -> unit -> 'tags this)
      =
      fun (x7481 : 'tags this) ->
        fun ?compareFn:(x7476 : (a:float -> b:float -> float) option) ->
          fun () ->
            this_of_js Obj.magic
              (let x7483 = this_to_js Obj.magic x7481 in
               Ojs.call (Ojs.get_prop_ascii x7483 "sort") "apply"
                 [|x7483;((let x7477 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x7476 with
                            | Some x7478 ->
                                ignore
                                  (Ojs.call x7477 "push"
                                     [|(Ojs.fun_to_js 2
                                          (fun (x7479 : Ojs.t) ->
                                             fun (x7480 : Ojs.t) ->
                                               Ojs.float_to_js
                                                 (x7478
                                                    ~a:(Ojs.float_of_js x7479)
                                                    ~b:(Ojs.float_of_js x7480))))|])
                            | None -> ());
                           x7477))|])
    let (subarray : 'tags this -> ?begin_:float -> ?end_:float -> unit -> t)
      =
      fun (x7490 : 'tags this) ->
        fun ?begin_:(x7485 : float option) ->
          fun ?end_:(x7486 : float option) ->
            fun () ->
              t_of_js
                (let x7492 = this_to_js Obj.magic x7490 in
                 Ojs.call (Ojs.get_prop_ascii x7492 "subarray") "apply"
                   [|x7492;((let x7487 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x7485 with
                              | Some x7489 ->
                                  ignore
                                    (Ojs.call x7487 "push"
                                       [|(Ojs.float_to_js x7489)|])
                              | None -> ());
                             (match x7486 with
                              | Some x7488 ->
                                  ignore
                                    (Ojs.call x7487 "push"
                                       [|(Ojs.float_to_js x7488)|])
                              | None -> ());
                             x7487))|])
    let (toLocaleString : 'tags this -> string) =
      fun (x7493 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x7493) "toLocaleString" [||])
    let (toString : 'tags this -> string) =
      fun (x7495 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x7495) "toString" [||])
    let (valueOf : 'tags this -> t) =
      fun (x7497 : 'tags this) ->
        t_of_js (Ojs.call (this_to_js Obj.magic x7497) "valueOf" [||])
    let (get : 'tags this -> float -> float) =
      fun (x7499 : 'tags this) ->
        fun (x7501 : float) ->
          Ojs.float_of_js
            (Ojs.get_prop (this_to_js Obj.magic x7499)
               (Ojs.float_to_js x7501))
    let (set : 'tags this -> float -> float -> unit) =
      fun (x7502 : 'tags this) ->
        fun (x7504 : float) ->
          fun (x7505 : float) ->
            Ojs.set_prop (this_to_js Obj.magic x7502) (Ojs.float_to_js x7504)
              (Ojs.float_to_js x7505)
    let (create : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Uint32Array") [||])
    let (create' : float Iterable.t -> t) =
      fun (x7506 : float Iterable.t) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Uint32Array")
             [|(Iterable.t_to_js Ojs.float_to_js x7506)|])
    let (from :
      arrayLike:float Iterable.t ->
        ?mapfn:(v:float -> k:float -> float) -> ?thisArg:any -> unit -> t)
      =
      fun ~arrayLike:(x7508 : float Iterable.t) ->
        fun ?mapfn:(x7509 : (v:float -> k:float -> float) option) ->
          fun ?thisArg:(x7510 : any option) ->
            fun () ->
              t_of_js
                (let x7517 = Ojs.get_prop_ascii Ojs.global "Uint32Array" in
                 Ojs.call (Ojs.get_prop_ascii x7517 "from") "apply"
                   [|x7517;((let x7511 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7511 "push"
                                  [|(Iterable.t_to_js Ojs.float_to_js x7508)|]);
                             (match x7509 with
                              | Some x7513 ->
                                  ignore
                                    (Ojs.call x7511 "push"
                                       [|(Ojs.fun_to_js 2
                                            (fun (x7514 : Ojs.t) ->
                                               fun (x7515 : Ojs.t) ->
                                                 Ojs.float_to_js
                                                   (x7513
                                                      ~v:(Ojs.float_of_js
                                                            x7514)
                                                      ~k:(Ojs.float_of_js
                                                            x7515))))|])
                              | None -> ());
                             (match x7510 with
                              | Some x7512 ->
                                  ignore
                                    (Ojs.call x7511 "push"
                                       [|(any_to_js x7512)|])
                              | None -> ());
                             x7511))|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Uint32Array")
             "prototype")
    let (create'' : float -> t) =
      fun (x7518 : float) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Uint32Array")
             [|(Ojs.float_to_js x7518)|])
    let (create''' :
      [ `U1 of float ArrayLike.t  | `U2 of ArrayBufferLike.t ] -> t) =
      fun (x7519 : [ `U1 of float ArrayLike.t  | `U2 of ArrayBufferLike.t ])
        ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Uint32Array")
             [|((match x7519 with
                 | `U1 x7520 -> ArrayLike.t_to_js Ojs.float_to_js x7520
                 | `U2 x7522 -> ArrayBufferLike.t_to_js x7522))|])
    let (create'''' :
      buffer:ArrayBufferLike.t ->
        ?byteOffset:float -> ?length:float -> unit -> t)
      =
      fun ~buffer:(x7523 : ArrayBufferLike.t) ->
        fun ?byteOffset:(x7524 : float option) ->
          fun ?length:(x7525 : float option) ->
            fun () ->
              t_of_js
                (Ojs.new_obj_arr
                   (Ojs.get_prop_ascii Ojs.global "Uint32Array")
                   (let x7526 =
                      Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                        [||] in
                    ignore
                      (Ojs.call x7526 "push"
                         [|(ArrayBufferLike.t_to_js x7523)|]);
                    (match x7524 with
                     | Some x7528 ->
                         ignore
                           (Ojs.call x7526 "push" [|(Ojs.float_to_js x7528)|])
                     | None -> ());
                    (match x7525 with
                     | Some x7527 ->
                         ignore
                           (Ojs.call x7526 "push" [|(Ojs.float_to_js x7527)|])
                     | None -> ());
                    x7526))
    let (bytes_per_element : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Uint32Array")
             "BYTES_PER_ELEMENT")
    let (of_ : float list -> t) =
      fun (x7529 : float list) ->
        t_of_js
          (let x7532 = Ojs.get_prop_ascii Ojs.global "Uint32Array" in
           Ojs.call (Ojs.get_prop_ascii x7532 "of") "apply"
             [|x7532;((let x7530 =
                         Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                           [||] in
                       List.iter
                         (fun (x7531 : float) ->
                            ignore
                              (Ojs.call x7530 "push"
                                 [|(Ojs.float_to_js x7531)|])) x7529;
                       x7530))|])
    let (from' : float ArrayLike.t -> t) =
      fun (x7533 : float ArrayLike.t) ->
        t_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Uint32Array") "from"
             [|(ArrayLike.t_to_js Ojs.float_to_js x7533)|])
    let (from'' :
      arrayLike:'T ArrayLike.t ->
        mapfn:(v:'T -> k:float -> float) -> ?thisArg:any -> unit -> t)
      =
      fun ~arrayLike:(x7535 : 'T ArrayLike.t) ->
        fun ~mapfn:(x7536 : v:'T -> k:float -> float) ->
          fun ?thisArg:(x7537 : any option) ->
            fun () ->
              t_of_js
                (let x7543 = Ojs.get_prop_ascii Ojs.global "Uint32Array" in
                 Ojs.call (Ojs.get_prop_ascii x7543 "from") "apply"
                   [|x7543;((let x7538 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7538 "push"
                                  [|(ArrayLike.t_to_js Obj.magic x7535)|]);
                             ignore
                               (Ojs.call x7538 "push"
                                  [|(Ojs.fun_to_js 2
                                       (fun (x7540 : Ojs.t) ->
                                          fun (x7541 : Ojs.t) ->
                                            Ojs.float_to_js
                                              (x7536 ~v:(Obj.magic x7540)
                                                 ~k:(Ojs.float_of_js x7541))))|]);
                             (match x7537 with
                              | Some x7539 ->
                                  ignore
                                    (Ojs.call x7538 "push"
                                       [|(any_to_js x7539)|])
                              | None -> ());
                             x7538))|])
    let cast_from = Obj.magic
  end
module Uint16Array =
  struct
    type t =
      [ `Uint16Array  | float ArrayLike.tags_1
      | float IterableIterator.tags_1] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x7545 : Ojs.t) -> t_of_js x7545
    and t_0_to_js : t_0 -> Ojs.t = fun (x7544 : t) -> t_to_js x7544
    type tags =
      [ `Uint16Array  | float ArrayLike.tags_1
      | float IterableIterator.tags_1]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `Uint16Array ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x7548 : Ojs.t) -> intf_of_js __tags_of_js x7548
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x7546 : __tags intf) -> intf_to_js __tags_to_js x7546
    let (at : 'tags this -> index:float -> float option) =
      fun (x7551 : 'tags this) ->
        fun ~index:(x7550 : float) ->
          Ojs.option_of_js Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x7551) "at"
               [|(Ojs.float_to_js x7550)|])
    let (includes :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> bool)
      =
      fun (x7558 : 'tags this) ->
        fun ~searchElement:(x7554 : float) ->
          fun ?fromIndex:(x7555 : float option) ->
            fun () ->
              Ojs.bool_of_js
                (let x7560 = this_to_js Obj.magic x7558 in
                 Ojs.call (Ojs.get_prop_ascii x7560 "includes") "apply"
                   [|x7560;((let x7556 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7556 "push"
                                  [|(Ojs.float_to_js x7554)|]);
                             (match x7555 with
                              | Some x7557 ->
                                  ignore
                                    (Ojs.call x7556 "push"
                                       [|(Ojs.float_to_js x7557)|])
                              | None -> ());
                             x7556))|])
    let (entries : 'tags this -> (float * float) IterableIterator.t) =
      fun (x7561 : 'tags this) ->
        IterableIterator.t_of_js
          (fun (x7563 : Ojs.t) ->
             let x7564 = x7563 in
             ((Ojs.float_of_js (Ojs.array_get x7564 0)),
               (Ojs.float_of_js (Ojs.array_get x7564 1))))
          (Ojs.call (this_to_js Obj.magic x7561) "entries" [||])
    let (keys : 'tags this -> float IterableIterator.t) =
      fun (x7565 : 'tags this) ->
        IterableIterator.t_of_js Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x7565) "keys" [||])
    let (values : 'tags this -> float IterableIterator.t) =
      fun (x7568 : 'tags this) ->
        IterableIterator.t_of_js Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x7568) "values" [||])
    let (get_BYTES_PER_ELEMENT : 'tags this -> float) =
      fun (x7571 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x7571)
             "BYTES_PER_ELEMENT")
    let (get_buffer : 'tags this -> ArrayBufferLike.t) =
      fun (x7573 : 'tags this) ->
        ArrayBufferLike.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x7573) "buffer")
    let (get_byteLength : 'tags this -> float) =
      fun (x7575 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x7575) "byteLength")
    let (get_byteOffset : 'tags this -> float) =
      fun (x7577 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x7577) "byteOffset")
    let (copyWithin :
      'tags this ->
        target:float -> start:float -> ?end_:float -> unit -> 'tags this)
      =
      fun (x7584 : 'tags this) ->
        fun ~target:(x7579 : float) ->
          fun ~start:(x7580 : float) ->
            fun ?end_:(x7581 : float option) ->
              fun () ->
                this_of_js Obj.magic
                  (let x7586 = this_to_js Obj.magic x7584 in
                   Ojs.call (Ojs.get_prop_ascii x7586 "copyWithin") "apply"
                     [|x7586;((let x7582 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x7582 "push"
                                    [|(Ojs.float_to_js x7579)|]);
                               ignore
                                 (Ojs.call x7582 "push"
                                    [|(Ojs.float_to_js x7580)|]);
                               (match x7581 with
                                | Some x7583 ->
                                    ignore
                                      (Ojs.call x7582 "push"
                                         [|(Ojs.float_to_js x7583)|])
                                | None -> ());
                               x7582))|])
    let (every :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x7595 : 'tags this) ->
        fun
          ~predicate:(x7588 :
                       value:float -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x7589 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x7597 = this_to_js Obj.magic x7595 in
                 Ojs.call (Ojs.get_prop_ascii x7597 "every") "apply"
                   [|x7597;((let x7590 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7590 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x7592 : Ojs.t) ->
                                          fun (x7593 : Ojs.t) ->
                                            fun (x7594 : Ojs.t) ->
                                              unknown_to_js
                                                (x7588
                                                   ~value:(Ojs.float_of_js
                                                             x7592)
                                                   ~index:(Ojs.float_of_js
                                                             x7593)
                                                   ~array:(t_of_js x7594))))|]);
                             (match x7589 with
                              | Some x7591 ->
                                  ignore
                                    (Ojs.call x7590 "push"
                                       [|(any_to_js x7591)|])
                              | None -> ());
                             x7590))|])
    let (fill :
      'tags this ->
        value:float -> ?start:float -> ?end_:float -> unit -> 'tags this)
      =
      fun (x7604 : 'tags this) ->
        fun ~value:(x7598 : float) ->
          fun ?start:(x7599 : float option) ->
            fun ?end_:(x7600 : float option) ->
              fun () ->
                this_of_js Obj.magic
                  (let x7606 = this_to_js Obj.magic x7604 in
                   Ojs.call (Ojs.get_prop_ascii x7606 "fill") "apply"
                     [|x7606;((let x7601 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x7601 "push"
                                    [|(Ojs.float_to_js x7598)|]);
                               (match x7599 with
                                | Some x7603 ->
                                    ignore
                                      (Ojs.call x7601 "push"
                                         [|(Ojs.float_to_js x7603)|])
                                | None -> ());
                               (match x7600 with
                                | Some x7602 ->
                                    ignore
                                      (Ojs.call x7601 "push"
                                         [|(Ojs.float_to_js x7602)|])
                                | None -> ());
                               x7601))|])
    let (filter :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> any) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x7615 : 'tags this) ->
        fun ~predicate:(x7608 : value:float -> index:float -> array:t -> any)
          ->
          fun ?thisArg:(x7609 : any option) ->
            fun () ->
              t_of_js
                (let x7617 = this_to_js Obj.magic x7615 in
                 Ojs.call (Ojs.get_prop_ascii x7617 "filter") "apply"
                   [|x7617;((let x7610 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7610 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x7612 : Ojs.t) ->
                                          fun (x7613 : Ojs.t) ->
                                            fun (x7614 : Ojs.t) ->
                                              any_to_js
                                                (x7608
                                                   ~value:(Ojs.float_of_js
                                                             x7612)
                                                   ~index:(Ojs.float_of_js
                                                             x7613)
                                                   ~array:(t_of_js x7614))))|]);
                             (match x7609 with
                              | Some x7611 ->
                                  ignore
                                    (Ojs.call x7610 "push"
                                       [|(any_to_js x7611)|])
                              | None -> ());
                             x7610))|])
    let (find :
      'tags this ->
        predicate:(value:float -> index:float -> obj:t -> bool) ->
          ?thisArg:any -> unit -> float option)
      =
      fun (x7625 : 'tags this) ->
        fun ~predicate:(x7618 : value:float -> index:float -> obj:t -> bool)
          ->
          fun ?thisArg:(x7619 : any option) ->
            fun () ->
              Ojs.option_of_js Ojs.float_of_js
                (let x7627 = this_to_js Obj.magic x7625 in
                 Ojs.call (Ojs.get_prop_ascii x7627 "find") "apply"
                   [|x7627;((let x7620 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7620 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x7622 : Ojs.t) ->
                                          fun (x7623 : Ojs.t) ->
                                            fun (x7624 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x7618
                                                   ~value:(Ojs.float_of_js
                                                             x7622)
                                                   ~index:(Ojs.float_of_js
                                                             x7623)
                                                   ~obj:(t_of_js x7624))))|]);
                             (match x7619 with
                              | Some x7621 ->
                                  ignore
                                    (Ojs.call x7620 "push"
                                       [|(any_to_js x7621)|])
                              | None -> ());
                             x7620))|])
    let (findIndex :
      'tags this ->
        predicate:(value:float -> index:float -> obj:t -> bool) ->
          ?thisArg:any -> unit -> float)
      =
      fun (x7636 : 'tags this) ->
        fun ~predicate:(x7629 : value:float -> index:float -> obj:t -> bool)
          ->
          fun ?thisArg:(x7630 : any option) ->
            fun () ->
              Ojs.float_of_js
                (let x7638 = this_to_js Obj.magic x7636 in
                 Ojs.call (Ojs.get_prop_ascii x7638 "findIndex") "apply"
                   [|x7638;((let x7631 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7631 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x7633 : Ojs.t) ->
                                          fun (x7634 : Ojs.t) ->
                                            fun (x7635 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x7629
                                                   ~value:(Ojs.float_of_js
                                                             x7633)
                                                   ~index:(Ojs.float_of_js
                                                             x7634)
                                                   ~obj:(t_of_js x7635))))|]);
                             (match x7630 with
                              | Some x7632 ->
                                  ignore
                                    (Ojs.call x7631 "push"
                                       [|(any_to_js x7632)|])
                              | None -> ());
                             x7631))|])
    let (forEach :
      'tags this ->
        callbackfn:(value:float -> index:float -> array:t -> unit) ->
          ?thisArg:any -> unit -> unit)
      =
      fun (x7646 : 'tags this) ->
        fun
          ~callbackfn:(x7639 : value:float -> index:float -> array:t -> unit)
          ->
          fun ?thisArg:(x7640 : any option) ->
            fun () ->
              ignore
                (let x7648 = this_to_js Obj.magic x7646 in
                 Ojs.call (Ojs.get_prop_ascii x7648 "forEach") "apply"
                   [|x7648;((let x7641 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7641 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x7643 : Ojs.t) ->
                                          fun (x7644 : Ojs.t) ->
                                            fun (x7645 : Ojs.t) ->
                                              x7639
                                                ~value:(Ojs.float_of_js x7643)
                                                ~index:(Ojs.float_of_js x7644)
                                                ~array:(t_of_js x7645)))|]);
                             (match x7640 with
                              | Some x7642 ->
                                  ignore
                                    (Ojs.call x7641 "push"
                                       [|(any_to_js x7642)|])
                              | None -> ());
                             x7641))|])
    let (indexOf :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> float)
      =
      fun (x7653 : 'tags this) ->
        fun ~searchElement:(x7649 : float) ->
          fun ?fromIndex:(x7650 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x7655 = this_to_js Obj.magic x7653 in
                 Ojs.call (Ojs.get_prop_ascii x7655 "indexOf") "apply"
                   [|x7655;((let x7651 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7651 "push"
                                  [|(Ojs.float_to_js x7649)|]);
                             (match x7650 with
                              | Some x7652 ->
                                  ignore
                                    (Ojs.call x7651 "push"
                                       [|(Ojs.float_to_js x7652)|])
                              | None -> ());
                             x7651))|])
    let (join : 'tags this -> ?separator:string -> unit -> string) =
      fun (x7659 : 'tags this) ->
        fun ?separator:(x7656 : string option) ->
          fun () ->
            Ojs.string_of_js
              (let x7661 = this_to_js Obj.magic x7659 in
               Ojs.call (Ojs.get_prop_ascii x7661 "join") "apply"
                 [|x7661;((let x7657 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x7656 with
                            | Some x7658 ->
                                ignore
                                  (Ojs.call x7657 "push"
                                     [|(Ojs.string_to_js x7658)|])
                            | None -> ());
                           x7657))|])
    let (lastIndexOf :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> float)
      =
      fun (x7666 : 'tags this) ->
        fun ~searchElement:(x7662 : float) ->
          fun ?fromIndex:(x7663 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x7668 = this_to_js Obj.magic x7666 in
                 Ojs.call (Ojs.get_prop_ascii x7668 "lastIndexOf") "apply"
                   [|x7668;((let x7664 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7664 "push"
                                  [|(Ojs.float_to_js x7662)|]);
                             (match x7663 with
                              | Some x7665 ->
                                  ignore
                                    (Ojs.call x7664 "push"
                                       [|(Ojs.float_to_js x7665)|])
                              | None -> ());
                             x7664))|])
    let (get_length : 'tags this -> float) =
      fun (x7669 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x7669) "length")
    let (map :
      'tags this ->
        callbackfn:(value:float -> index:float -> array:t -> float) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x7678 : 'tags this) ->
        fun
          ~callbackfn:(x7671 :
                        value:float -> index:float -> array:t -> float)
          ->
          fun ?thisArg:(x7672 : any option) ->
            fun () ->
              t_of_js
                (let x7680 = this_to_js Obj.magic x7678 in
                 Ojs.call (Ojs.get_prop_ascii x7680 "map") "apply"
                   [|x7680;((let x7673 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7673 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x7675 : Ojs.t) ->
                                          fun (x7676 : Ojs.t) ->
                                            fun (x7677 : Ojs.t) ->
                                              Ojs.float_to_js
                                                (x7671
                                                   ~value:(Ojs.float_of_js
                                                             x7675)
                                                   ~index:(Ojs.float_of_js
                                                             x7676)
                                                   ~array:(t_of_js x7677))))|]);
                             (match x7672 with
                              | Some x7674 ->
                                  ignore
                                    (Ojs.call x7673 "push"
                                       [|(any_to_js x7674)|])
                              | None -> ());
                             x7673))|])
    let (reduce :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> float)
      =
      fun (x7686 : 'tags this) ->
        fun
          ~callbackfn:(x7681 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x7686) "reduce"
               [|(Ojs.fun_to_js 4
                    (fun (x7682 : Ojs.t) ->
                       fun (x7683 : Ojs.t) ->
                         fun (x7684 : Ojs.t) ->
                           fun (x7685 : Ojs.t) ->
                             Ojs.float_to_js
                               (x7681 ~previousValue:(Ojs.float_of_js x7682)
                                  ~currentValue:(Ojs.float_of_js x7683)
                                  ~currentIndex:(Ojs.float_of_js x7684)
                                  ~array:(t_of_js x7685))))|])
    let (reduce' :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> initialValue:float -> float)
      =
      fun (x7694 : 'tags this) ->
        fun
          ~callbackfn:(x7688 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          fun ~initialValue:(x7693 : float) ->
            Ojs.float_of_js
              (Ojs.call (this_to_js Obj.magic x7694) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x7689 : Ojs.t) ->
                         fun (x7690 : Ojs.t) ->
                           fun (x7691 : Ojs.t) ->
                             fun (x7692 : Ojs.t) ->
                               Ojs.float_to_js
                                 (x7688
                                    ~previousValue:(Ojs.float_of_js x7689)
                                    ~currentValue:(Ojs.float_of_js x7690)
                                    ~currentIndex:(Ojs.float_of_js x7691)
                                    ~array:(t_of_js x7692))));(Ojs.float_to_js
                                                                 x7693)|])
    let (reduce'' :
      'tags this ->
        callbackfn:(previousValue:'U ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x7702 : 'tags this) ->
        fun
          ~callbackfn:(x7696 :
                        previousValue:'U ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x7701 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic x7702) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x7697 : Ojs.t) ->
                         fun (x7698 : Ojs.t) ->
                           fun (x7699 : Ojs.t) ->
                             fun (x7700 : Ojs.t) ->
                               Obj.magic
                                 (x7696 ~previousValue:(Obj.magic x7697)
                                    ~currentValue:(Ojs.float_of_js x7698)
                                    ~currentIndex:(Ojs.float_of_js x7699)
                                    ~array:(t_of_js x7700))));(Obj.magic
                                                                 x7701)|])
    let (reduceRight :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> float)
      =
      fun (x7709 : 'tags this) ->
        fun
          ~callbackfn:(x7704 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x7709) "reduceRight"
               [|(Ojs.fun_to_js 4
                    (fun (x7705 : Ojs.t) ->
                       fun (x7706 : Ojs.t) ->
                         fun (x7707 : Ojs.t) ->
                           fun (x7708 : Ojs.t) ->
                             Ojs.float_to_js
                               (x7704 ~previousValue:(Ojs.float_of_js x7705)
                                  ~currentValue:(Ojs.float_of_js x7706)
                                  ~currentIndex:(Ojs.float_of_js x7707)
                                  ~array:(t_of_js x7708))))|])
    let (reduceRight' :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> initialValue:float -> float)
      =
      fun (x7717 : 'tags this) ->
        fun
          ~callbackfn:(x7711 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          fun ~initialValue:(x7716 : float) ->
            Ojs.float_of_js
              (Ojs.call (this_to_js Obj.magic x7717) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x7712 : Ojs.t) ->
                         fun (x7713 : Ojs.t) ->
                           fun (x7714 : Ojs.t) ->
                             fun (x7715 : Ojs.t) ->
                               Ojs.float_to_js
                                 (x7711
                                    ~previousValue:(Ojs.float_of_js x7712)
                                    ~currentValue:(Ojs.float_of_js x7713)
                                    ~currentIndex:(Ojs.float_of_js x7714)
                                    ~array:(t_of_js x7715))));(Ojs.float_to_js
                                                                 x7716)|])
    let (reduceRight'' :
      'tags this ->
        callbackfn:(previousValue:'U ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x7725 : 'tags this) ->
        fun
          ~callbackfn:(x7719 :
                        previousValue:'U ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x7724 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic x7725) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x7720 : Ojs.t) ->
                         fun (x7721 : Ojs.t) ->
                           fun (x7722 : Ojs.t) ->
                             fun (x7723 : Ojs.t) ->
                               Obj.magic
                                 (x7719 ~previousValue:(Obj.magic x7720)
                                    ~currentValue:(Ojs.float_of_js x7721)
                                    ~currentIndex:(Ojs.float_of_js x7722)
                                    ~array:(t_of_js x7723))));(Obj.magic
                                                                 x7724)|])
    let (reverse : 'tags this -> t) =
      fun (x7727 : 'tags this) ->
        t_of_js (Ojs.call (this_to_js Obj.magic x7727) "reverse" [||])
    let (set_ :
      'tags this -> array:float ArrayLike.t -> ?offset:float -> unit -> unit)
      =
      fun (x7734 : 'tags this) ->
        fun ~array:(x7729 : float ArrayLike.t) ->
          fun ?offset:(x7730 : float option) ->
            fun () ->
              ignore
                (let x7736 = this_to_js Obj.magic x7734 in
                 Ojs.call (Ojs.get_prop_ascii x7736 "set") "apply"
                   [|x7736;((let x7731 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7731 "push"
                                  [|(ArrayLike.t_to_js Ojs.float_to_js x7729)|]);
                             (match x7730 with
                              | Some x7732 ->
                                  ignore
                                    (Ojs.call x7731 "push"
                                       [|(Ojs.float_to_js x7732)|])
                              | None -> ());
                             x7731))|])
    let (slice : 'tags this -> ?start:float -> ?end_:float -> unit -> t) =
      fun (x7742 : 'tags this) ->
        fun ?start:(x7737 : float option) ->
          fun ?end_:(x7738 : float option) ->
            fun () ->
              t_of_js
                (let x7744 = this_to_js Obj.magic x7742 in
                 Ojs.call (Ojs.get_prop_ascii x7744 "slice") "apply"
                   [|x7744;((let x7739 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x7737 with
                              | Some x7741 ->
                                  ignore
                                    (Ojs.call x7739 "push"
                                       [|(Ojs.float_to_js x7741)|])
                              | None -> ());
                             (match x7738 with
                              | Some x7740 ->
                                  ignore
                                    (Ojs.call x7739 "push"
                                       [|(Ojs.float_to_js x7740)|])
                              | None -> ());
                             x7739))|])
    let (some :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x7752 : 'tags this) ->
        fun
          ~predicate:(x7745 :
                       value:float -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x7746 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x7754 = this_to_js Obj.magic x7752 in
                 Ojs.call (Ojs.get_prop_ascii x7754 "some") "apply"
                   [|x7754;((let x7747 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7747 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x7749 : Ojs.t) ->
                                          fun (x7750 : Ojs.t) ->
                                            fun (x7751 : Ojs.t) ->
                                              unknown_to_js
                                                (x7745
                                                   ~value:(Ojs.float_of_js
                                                             x7749)
                                                   ~index:(Ojs.float_of_js
                                                             x7750)
                                                   ~array:(t_of_js x7751))))|]);
                             (match x7746 with
                              | Some x7748 ->
                                  ignore
                                    (Ojs.call x7747 "push"
                                       [|(any_to_js x7748)|])
                              | None -> ());
                             x7747))|])
    let (sort :
      'tags this ->
        ?compareFn:(a:float -> b:float -> float) -> unit -> 'tags this)
      =
      fun (x7760 : 'tags this) ->
        fun ?compareFn:(x7755 : (a:float -> b:float -> float) option) ->
          fun () ->
            this_of_js Obj.magic
              (let x7762 = this_to_js Obj.magic x7760 in
               Ojs.call (Ojs.get_prop_ascii x7762 "sort") "apply"
                 [|x7762;((let x7756 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x7755 with
                            | Some x7757 ->
                                ignore
                                  (Ojs.call x7756 "push"
                                     [|(Ojs.fun_to_js 2
                                          (fun (x7758 : Ojs.t) ->
                                             fun (x7759 : Ojs.t) ->
                                               Ojs.float_to_js
                                                 (x7757
                                                    ~a:(Ojs.float_of_js x7758)
                                                    ~b:(Ojs.float_of_js x7759))))|])
                            | None -> ());
                           x7756))|])
    let (subarray : 'tags this -> ?begin_:float -> ?end_:float -> unit -> t)
      =
      fun (x7769 : 'tags this) ->
        fun ?begin_:(x7764 : float option) ->
          fun ?end_:(x7765 : float option) ->
            fun () ->
              t_of_js
                (let x7771 = this_to_js Obj.magic x7769 in
                 Ojs.call (Ojs.get_prop_ascii x7771 "subarray") "apply"
                   [|x7771;((let x7766 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x7764 with
                              | Some x7768 ->
                                  ignore
                                    (Ojs.call x7766 "push"
                                       [|(Ojs.float_to_js x7768)|])
                              | None -> ());
                             (match x7765 with
                              | Some x7767 ->
                                  ignore
                                    (Ojs.call x7766 "push"
                                       [|(Ojs.float_to_js x7767)|])
                              | None -> ());
                             x7766))|])
    let (toLocaleString : 'tags this -> string) =
      fun (x7772 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x7772) "toLocaleString" [||])
    let (toString : 'tags this -> string) =
      fun (x7774 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x7774) "toString" [||])
    let (valueOf : 'tags this -> t) =
      fun (x7776 : 'tags this) ->
        t_of_js (Ojs.call (this_to_js Obj.magic x7776) "valueOf" [||])
    let (get : 'tags this -> float -> float) =
      fun (x7778 : 'tags this) ->
        fun (x7780 : float) ->
          Ojs.float_of_js
            (Ojs.get_prop (this_to_js Obj.magic x7778)
               (Ojs.float_to_js x7780))
    let (set : 'tags this -> float -> float -> unit) =
      fun (x7781 : 'tags this) ->
        fun (x7783 : float) ->
          fun (x7784 : float) ->
            Ojs.set_prop (this_to_js Obj.magic x7781) (Ojs.float_to_js x7783)
              (Ojs.float_to_js x7784)
    let (create : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Uint16Array") [||])
    let (create' : float Iterable.t -> t) =
      fun (x7785 : float Iterable.t) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Uint16Array")
             [|(Iterable.t_to_js Ojs.float_to_js x7785)|])
    let (from :
      arrayLike:float Iterable.t ->
        ?mapfn:(v:float -> k:float -> float) -> ?thisArg:any -> unit -> t)
      =
      fun ~arrayLike:(x7787 : float Iterable.t) ->
        fun ?mapfn:(x7788 : (v:float -> k:float -> float) option) ->
          fun ?thisArg:(x7789 : any option) ->
            fun () ->
              t_of_js
                (let x7796 = Ojs.get_prop_ascii Ojs.global "Uint16Array" in
                 Ojs.call (Ojs.get_prop_ascii x7796 "from") "apply"
                   [|x7796;((let x7790 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7790 "push"
                                  [|(Iterable.t_to_js Ojs.float_to_js x7787)|]);
                             (match x7788 with
                              | Some x7792 ->
                                  ignore
                                    (Ojs.call x7790 "push"
                                       [|(Ojs.fun_to_js 2
                                            (fun (x7793 : Ojs.t) ->
                                               fun (x7794 : Ojs.t) ->
                                                 Ojs.float_to_js
                                                   (x7792
                                                      ~v:(Ojs.float_of_js
                                                            x7793)
                                                      ~k:(Ojs.float_of_js
                                                            x7794))))|])
                              | None -> ());
                             (match x7789 with
                              | Some x7791 ->
                                  ignore
                                    (Ojs.call x7790 "push"
                                       [|(any_to_js x7791)|])
                              | None -> ());
                             x7790))|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Uint16Array")
             "prototype")
    let (create'' : float -> t) =
      fun (x7797 : float) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Uint16Array")
             [|(Ojs.float_to_js x7797)|])
    let (create''' :
      [ `U1 of float ArrayLike.t  | `U2 of ArrayBufferLike.t ] -> t) =
      fun (x7798 : [ `U1 of float ArrayLike.t  | `U2 of ArrayBufferLike.t ])
        ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Uint16Array")
             [|((match x7798 with
                 | `U1 x7799 -> ArrayLike.t_to_js Ojs.float_to_js x7799
                 | `U2 x7801 -> ArrayBufferLike.t_to_js x7801))|])
    let (create'''' :
      buffer:ArrayBufferLike.t ->
        ?byteOffset:float -> ?length:float -> unit -> t)
      =
      fun ~buffer:(x7802 : ArrayBufferLike.t) ->
        fun ?byteOffset:(x7803 : float option) ->
          fun ?length:(x7804 : float option) ->
            fun () ->
              t_of_js
                (Ojs.new_obj_arr
                   (Ojs.get_prop_ascii Ojs.global "Uint16Array")
                   (let x7805 =
                      Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                        [||] in
                    ignore
                      (Ojs.call x7805 "push"
                         [|(ArrayBufferLike.t_to_js x7802)|]);
                    (match x7803 with
                     | Some x7807 ->
                         ignore
                           (Ojs.call x7805 "push" [|(Ojs.float_to_js x7807)|])
                     | None -> ());
                    (match x7804 with
                     | Some x7806 ->
                         ignore
                           (Ojs.call x7805 "push" [|(Ojs.float_to_js x7806)|])
                     | None -> ());
                    x7805))
    let (bytes_per_element : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Uint16Array")
             "BYTES_PER_ELEMENT")
    let (of_ : float list -> t) =
      fun (x7808 : float list) ->
        t_of_js
          (let x7811 = Ojs.get_prop_ascii Ojs.global "Uint16Array" in
           Ojs.call (Ojs.get_prop_ascii x7811 "of") "apply"
             [|x7811;((let x7809 =
                         Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                           [||] in
                       List.iter
                         (fun (x7810 : float) ->
                            ignore
                              (Ojs.call x7809 "push"
                                 [|(Ojs.float_to_js x7810)|])) x7808;
                       x7809))|])
    let (from' : float ArrayLike.t -> t) =
      fun (x7812 : float ArrayLike.t) ->
        t_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Uint16Array") "from"
             [|(ArrayLike.t_to_js Ojs.float_to_js x7812)|])
    let (from'' :
      arrayLike:'T ArrayLike.t ->
        mapfn:(v:'T -> k:float -> float) -> ?thisArg:any -> unit -> t)
      =
      fun ~arrayLike:(x7814 : 'T ArrayLike.t) ->
        fun ~mapfn:(x7815 : v:'T -> k:float -> float) ->
          fun ?thisArg:(x7816 : any option) ->
            fun () ->
              t_of_js
                (let x7822 = Ojs.get_prop_ascii Ojs.global "Uint16Array" in
                 Ojs.call (Ojs.get_prop_ascii x7822 "from") "apply"
                   [|x7822;((let x7817 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7817 "push"
                                  [|(ArrayLike.t_to_js Obj.magic x7814)|]);
                             ignore
                               (Ojs.call x7817 "push"
                                  [|(Ojs.fun_to_js 2
                                       (fun (x7819 : Ojs.t) ->
                                          fun (x7820 : Ojs.t) ->
                                            Ojs.float_to_js
                                              (x7815 ~v:(Obj.magic x7819)
                                                 ~k:(Ojs.float_of_js x7820))))|]);
                             (match x7816 with
                              | Some x7818 ->
                                  ignore
                                    (Ojs.call x7817 "push"
                                       [|(any_to_js x7818)|])
                              | None -> ());
                             x7817))|])
    let cast_from = Obj.magic
  end
module Int8Array =
  struct
    type t =
      [ `Int8Array  | float ArrayLike.tags_1 | float IterableIterator.tags_1]
        intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x7824 : Ojs.t) -> t_of_js x7824
    and t_0_to_js : t_0 -> Ojs.t = fun (x7823 : t) -> t_to_js x7823
    type tags =
      [ `Int8Array  | float ArrayLike.tags_1 | float IterableIterator.tags_1]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `Int8Array ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x7827 : Ojs.t) -> intf_of_js __tags_of_js x7827
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x7825 : __tags intf) -> intf_to_js __tags_to_js x7825
    let (at : 'tags this -> index:float -> float option) =
      fun (x7830 : 'tags this) ->
        fun ~index:(x7829 : float) ->
          Ojs.option_of_js Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x7830) "at"
               [|(Ojs.float_to_js x7829)|])
    let (includes :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> bool)
      =
      fun (x7837 : 'tags this) ->
        fun ~searchElement:(x7833 : float) ->
          fun ?fromIndex:(x7834 : float option) ->
            fun () ->
              Ojs.bool_of_js
                (let x7839 = this_to_js Obj.magic x7837 in
                 Ojs.call (Ojs.get_prop_ascii x7839 "includes") "apply"
                   [|x7839;((let x7835 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7835 "push"
                                  [|(Ojs.float_to_js x7833)|]);
                             (match x7834 with
                              | Some x7836 ->
                                  ignore
                                    (Ojs.call x7835 "push"
                                       [|(Ojs.float_to_js x7836)|])
                              | None -> ());
                             x7835))|])
    let (entries : 'tags this -> (float * float) IterableIterator.t) =
      fun (x7840 : 'tags this) ->
        IterableIterator.t_of_js
          (fun (x7842 : Ojs.t) ->
             let x7843 = x7842 in
             ((Ojs.float_of_js (Ojs.array_get x7843 0)),
               (Ojs.float_of_js (Ojs.array_get x7843 1))))
          (Ojs.call (this_to_js Obj.magic x7840) "entries" [||])
    let (keys : 'tags this -> float IterableIterator.t) =
      fun (x7844 : 'tags this) ->
        IterableIterator.t_of_js Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x7844) "keys" [||])
    let (values : 'tags this -> float IterableIterator.t) =
      fun (x7847 : 'tags this) ->
        IterableIterator.t_of_js Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x7847) "values" [||])
    let (get_BYTES_PER_ELEMENT : 'tags this -> float) =
      fun (x7850 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x7850)
             "BYTES_PER_ELEMENT")
    let (get_buffer : 'tags this -> ArrayBufferLike.t) =
      fun (x7852 : 'tags this) ->
        ArrayBufferLike.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x7852) "buffer")
    let (get_byteLength : 'tags this -> float) =
      fun (x7854 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x7854) "byteLength")
    let (get_byteOffset : 'tags this -> float) =
      fun (x7856 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x7856) "byteOffset")
    let (copyWithin :
      'tags this ->
        target:float -> start:float -> ?end_:float -> unit -> 'tags this)
      =
      fun (x7863 : 'tags this) ->
        fun ~target:(x7858 : float) ->
          fun ~start:(x7859 : float) ->
            fun ?end_:(x7860 : float option) ->
              fun () ->
                this_of_js Obj.magic
                  (let x7865 = this_to_js Obj.magic x7863 in
                   Ojs.call (Ojs.get_prop_ascii x7865 "copyWithin") "apply"
                     [|x7865;((let x7861 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x7861 "push"
                                    [|(Ojs.float_to_js x7858)|]);
                               ignore
                                 (Ojs.call x7861 "push"
                                    [|(Ojs.float_to_js x7859)|]);
                               (match x7860 with
                                | Some x7862 ->
                                    ignore
                                      (Ojs.call x7861 "push"
                                         [|(Ojs.float_to_js x7862)|])
                                | None -> ());
                               x7861))|])
    let (every :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x7874 : 'tags this) ->
        fun
          ~predicate:(x7867 :
                       value:float -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x7868 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x7876 = this_to_js Obj.magic x7874 in
                 Ojs.call (Ojs.get_prop_ascii x7876 "every") "apply"
                   [|x7876;((let x7869 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7869 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x7871 : Ojs.t) ->
                                          fun (x7872 : Ojs.t) ->
                                            fun (x7873 : Ojs.t) ->
                                              unknown_to_js
                                                (x7867
                                                   ~value:(Ojs.float_of_js
                                                             x7871)
                                                   ~index:(Ojs.float_of_js
                                                             x7872)
                                                   ~array:(t_of_js x7873))))|]);
                             (match x7868 with
                              | Some x7870 ->
                                  ignore
                                    (Ojs.call x7869 "push"
                                       [|(any_to_js x7870)|])
                              | None -> ());
                             x7869))|])
    let (fill :
      'tags this ->
        value:float -> ?start:float -> ?end_:float -> unit -> 'tags this)
      =
      fun (x7883 : 'tags this) ->
        fun ~value:(x7877 : float) ->
          fun ?start:(x7878 : float option) ->
            fun ?end_:(x7879 : float option) ->
              fun () ->
                this_of_js Obj.magic
                  (let x7885 = this_to_js Obj.magic x7883 in
                   Ojs.call (Ojs.get_prop_ascii x7885 "fill") "apply"
                     [|x7885;((let x7880 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x7880 "push"
                                    [|(Ojs.float_to_js x7877)|]);
                               (match x7878 with
                                | Some x7882 ->
                                    ignore
                                      (Ojs.call x7880 "push"
                                         [|(Ojs.float_to_js x7882)|])
                                | None -> ());
                               (match x7879 with
                                | Some x7881 ->
                                    ignore
                                      (Ojs.call x7880 "push"
                                         [|(Ojs.float_to_js x7881)|])
                                | None -> ());
                               x7880))|])
    let (filter :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> any) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x7894 : 'tags this) ->
        fun ~predicate:(x7887 : value:float -> index:float -> array:t -> any)
          ->
          fun ?thisArg:(x7888 : any option) ->
            fun () ->
              t_of_js
                (let x7896 = this_to_js Obj.magic x7894 in
                 Ojs.call (Ojs.get_prop_ascii x7896 "filter") "apply"
                   [|x7896;((let x7889 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7889 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x7891 : Ojs.t) ->
                                          fun (x7892 : Ojs.t) ->
                                            fun (x7893 : Ojs.t) ->
                                              any_to_js
                                                (x7887
                                                   ~value:(Ojs.float_of_js
                                                             x7891)
                                                   ~index:(Ojs.float_of_js
                                                             x7892)
                                                   ~array:(t_of_js x7893))))|]);
                             (match x7888 with
                              | Some x7890 ->
                                  ignore
                                    (Ojs.call x7889 "push"
                                       [|(any_to_js x7890)|])
                              | None -> ());
                             x7889))|])
    let (find :
      'tags this ->
        predicate:(value:float -> index:float -> obj:t -> bool) ->
          ?thisArg:any -> unit -> float option)
      =
      fun (x7904 : 'tags this) ->
        fun ~predicate:(x7897 : value:float -> index:float -> obj:t -> bool)
          ->
          fun ?thisArg:(x7898 : any option) ->
            fun () ->
              Ojs.option_of_js Ojs.float_of_js
                (let x7906 = this_to_js Obj.magic x7904 in
                 Ojs.call (Ojs.get_prop_ascii x7906 "find") "apply"
                   [|x7906;((let x7899 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7899 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x7901 : Ojs.t) ->
                                          fun (x7902 : Ojs.t) ->
                                            fun (x7903 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x7897
                                                   ~value:(Ojs.float_of_js
                                                             x7901)
                                                   ~index:(Ojs.float_of_js
                                                             x7902)
                                                   ~obj:(t_of_js x7903))))|]);
                             (match x7898 with
                              | Some x7900 ->
                                  ignore
                                    (Ojs.call x7899 "push"
                                       [|(any_to_js x7900)|])
                              | None -> ());
                             x7899))|])
    let (findIndex :
      'tags this ->
        predicate:(value:float -> index:float -> obj:t -> bool) ->
          ?thisArg:any -> unit -> float)
      =
      fun (x7915 : 'tags this) ->
        fun ~predicate:(x7908 : value:float -> index:float -> obj:t -> bool)
          ->
          fun ?thisArg:(x7909 : any option) ->
            fun () ->
              Ojs.float_of_js
                (let x7917 = this_to_js Obj.magic x7915 in
                 Ojs.call (Ojs.get_prop_ascii x7917 "findIndex") "apply"
                   [|x7917;((let x7910 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7910 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x7912 : Ojs.t) ->
                                          fun (x7913 : Ojs.t) ->
                                            fun (x7914 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x7908
                                                   ~value:(Ojs.float_of_js
                                                             x7912)
                                                   ~index:(Ojs.float_of_js
                                                             x7913)
                                                   ~obj:(t_of_js x7914))))|]);
                             (match x7909 with
                              | Some x7911 ->
                                  ignore
                                    (Ojs.call x7910 "push"
                                       [|(any_to_js x7911)|])
                              | None -> ());
                             x7910))|])
    let (forEach :
      'tags this ->
        callbackfn:(value:float -> index:float -> array:t -> unit) ->
          ?thisArg:any -> unit -> unit)
      =
      fun (x7925 : 'tags this) ->
        fun
          ~callbackfn:(x7918 : value:float -> index:float -> array:t -> unit)
          ->
          fun ?thisArg:(x7919 : any option) ->
            fun () ->
              ignore
                (let x7927 = this_to_js Obj.magic x7925 in
                 Ojs.call (Ojs.get_prop_ascii x7927 "forEach") "apply"
                   [|x7927;((let x7920 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7920 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x7922 : Ojs.t) ->
                                          fun (x7923 : Ojs.t) ->
                                            fun (x7924 : Ojs.t) ->
                                              x7918
                                                ~value:(Ojs.float_of_js x7922)
                                                ~index:(Ojs.float_of_js x7923)
                                                ~array:(t_of_js x7924)))|]);
                             (match x7919 with
                              | Some x7921 ->
                                  ignore
                                    (Ojs.call x7920 "push"
                                       [|(any_to_js x7921)|])
                              | None -> ());
                             x7920))|])
    let (indexOf :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> float)
      =
      fun (x7932 : 'tags this) ->
        fun ~searchElement:(x7928 : float) ->
          fun ?fromIndex:(x7929 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x7934 = this_to_js Obj.magic x7932 in
                 Ojs.call (Ojs.get_prop_ascii x7934 "indexOf") "apply"
                   [|x7934;((let x7930 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7930 "push"
                                  [|(Ojs.float_to_js x7928)|]);
                             (match x7929 with
                              | Some x7931 ->
                                  ignore
                                    (Ojs.call x7930 "push"
                                       [|(Ojs.float_to_js x7931)|])
                              | None -> ());
                             x7930))|])
    let (join : 'tags this -> ?separator:string -> unit -> string) =
      fun (x7938 : 'tags this) ->
        fun ?separator:(x7935 : string option) ->
          fun () ->
            Ojs.string_of_js
              (let x7940 = this_to_js Obj.magic x7938 in
               Ojs.call (Ojs.get_prop_ascii x7940 "join") "apply"
                 [|x7940;((let x7936 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x7935 with
                            | Some x7937 ->
                                ignore
                                  (Ojs.call x7936 "push"
                                     [|(Ojs.string_to_js x7937)|])
                            | None -> ());
                           x7936))|])
    let (lastIndexOf :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> float)
      =
      fun (x7945 : 'tags this) ->
        fun ~searchElement:(x7941 : float) ->
          fun ?fromIndex:(x7942 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x7947 = this_to_js Obj.magic x7945 in
                 Ojs.call (Ojs.get_prop_ascii x7947 "lastIndexOf") "apply"
                   [|x7947;((let x7943 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7943 "push"
                                  [|(Ojs.float_to_js x7941)|]);
                             (match x7942 with
                              | Some x7944 ->
                                  ignore
                                    (Ojs.call x7943 "push"
                                       [|(Ojs.float_to_js x7944)|])
                              | None -> ());
                             x7943))|])
    let (get_length : 'tags this -> float) =
      fun (x7948 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x7948) "length")
    let (map :
      'tags this ->
        callbackfn:(value:float -> index:float -> array:t -> float) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x7957 : 'tags this) ->
        fun
          ~callbackfn:(x7950 :
                        value:float -> index:float -> array:t -> float)
          ->
          fun ?thisArg:(x7951 : any option) ->
            fun () ->
              t_of_js
                (let x7959 = this_to_js Obj.magic x7957 in
                 Ojs.call (Ojs.get_prop_ascii x7959 "map") "apply"
                   [|x7959;((let x7952 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7952 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x7954 : Ojs.t) ->
                                          fun (x7955 : Ojs.t) ->
                                            fun (x7956 : Ojs.t) ->
                                              Ojs.float_to_js
                                                (x7950
                                                   ~value:(Ojs.float_of_js
                                                             x7954)
                                                   ~index:(Ojs.float_of_js
                                                             x7955)
                                                   ~array:(t_of_js x7956))))|]);
                             (match x7951 with
                              | Some x7953 ->
                                  ignore
                                    (Ojs.call x7952 "push"
                                       [|(any_to_js x7953)|])
                              | None -> ());
                             x7952))|])
    let (reduce :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> float)
      =
      fun (x7965 : 'tags this) ->
        fun
          ~callbackfn:(x7960 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x7965) "reduce"
               [|(Ojs.fun_to_js 4
                    (fun (x7961 : Ojs.t) ->
                       fun (x7962 : Ojs.t) ->
                         fun (x7963 : Ojs.t) ->
                           fun (x7964 : Ojs.t) ->
                             Ojs.float_to_js
                               (x7960 ~previousValue:(Ojs.float_of_js x7961)
                                  ~currentValue:(Ojs.float_of_js x7962)
                                  ~currentIndex:(Ojs.float_of_js x7963)
                                  ~array:(t_of_js x7964))))|])
    let (reduce' :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> initialValue:float -> float)
      =
      fun (x7973 : 'tags this) ->
        fun
          ~callbackfn:(x7967 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          fun ~initialValue:(x7972 : float) ->
            Ojs.float_of_js
              (Ojs.call (this_to_js Obj.magic x7973) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x7968 : Ojs.t) ->
                         fun (x7969 : Ojs.t) ->
                           fun (x7970 : Ojs.t) ->
                             fun (x7971 : Ojs.t) ->
                               Ojs.float_to_js
                                 (x7967
                                    ~previousValue:(Ojs.float_of_js x7968)
                                    ~currentValue:(Ojs.float_of_js x7969)
                                    ~currentIndex:(Ojs.float_of_js x7970)
                                    ~array:(t_of_js x7971))));(Ojs.float_to_js
                                                                 x7972)|])
    let (reduce'' :
      'tags this ->
        callbackfn:(previousValue:'U ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x7981 : 'tags this) ->
        fun
          ~callbackfn:(x7975 :
                        previousValue:'U ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x7980 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic x7981) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x7976 : Ojs.t) ->
                         fun (x7977 : Ojs.t) ->
                           fun (x7978 : Ojs.t) ->
                             fun (x7979 : Ojs.t) ->
                               Obj.magic
                                 (x7975 ~previousValue:(Obj.magic x7976)
                                    ~currentValue:(Ojs.float_of_js x7977)
                                    ~currentIndex:(Ojs.float_of_js x7978)
                                    ~array:(t_of_js x7979))));(Obj.magic
                                                                 x7980)|])
    let (reduceRight :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> float)
      =
      fun (x7988 : 'tags this) ->
        fun
          ~callbackfn:(x7983 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x7988) "reduceRight"
               [|(Ojs.fun_to_js 4
                    (fun (x7984 : Ojs.t) ->
                       fun (x7985 : Ojs.t) ->
                         fun (x7986 : Ojs.t) ->
                           fun (x7987 : Ojs.t) ->
                             Ojs.float_to_js
                               (x7983 ~previousValue:(Ojs.float_of_js x7984)
                                  ~currentValue:(Ojs.float_of_js x7985)
                                  ~currentIndex:(Ojs.float_of_js x7986)
                                  ~array:(t_of_js x7987))))|])
    let (reduceRight' :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> initialValue:float -> float)
      =
      fun (x7996 : 'tags this) ->
        fun
          ~callbackfn:(x7990 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          fun ~initialValue:(x7995 : float) ->
            Ojs.float_of_js
              (Ojs.call (this_to_js Obj.magic x7996) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x7991 : Ojs.t) ->
                         fun (x7992 : Ojs.t) ->
                           fun (x7993 : Ojs.t) ->
                             fun (x7994 : Ojs.t) ->
                               Ojs.float_to_js
                                 (x7990
                                    ~previousValue:(Ojs.float_of_js x7991)
                                    ~currentValue:(Ojs.float_of_js x7992)
                                    ~currentIndex:(Ojs.float_of_js x7993)
                                    ~array:(t_of_js x7994))));(Ojs.float_to_js
                                                                 x7995)|])
    let (reduceRight'' :
      'tags this ->
        callbackfn:(previousValue:'U ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x8004 : 'tags this) ->
        fun
          ~callbackfn:(x7998 :
                        previousValue:'U ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x8003 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic x8004) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x7999 : Ojs.t) ->
                         fun (x8000 : Ojs.t) ->
                           fun (x8001 : Ojs.t) ->
                             fun (x8002 : Ojs.t) ->
                               Obj.magic
                                 (x7998 ~previousValue:(Obj.magic x7999)
                                    ~currentValue:(Ojs.float_of_js x8000)
                                    ~currentIndex:(Ojs.float_of_js x8001)
                                    ~array:(t_of_js x8002))));(Obj.magic
                                                                 x8003)|])
    let (reverse : 'tags this -> t) =
      fun (x8006 : 'tags this) ->
        t_of_js (Ojs.call (this_to_js Obj.magic x8006) "reverse" [||])
    let (set_ :
      'tags this -> array:float ArrayLike.t -> ?offset:float -> unit -> unit)
      =
      fun (x8013 : 'tags this) ->
        fun ~array:(x8008 : float ArrayLike.t) ->
          fun ?offset:(x8009 : float option) ->
            fun () ->
              ignore
                (let x8015 = this_to_js Obj.magic x8013 in
                 Ojs.call (Ojs.get_prop_ascii x8015 "set") "apply"
                   [|x8015;((let x8010 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8010 "push"
                                  [|(ArrayLike.t_to_js Ojs.float_to_js x8008)|]);
                             (match x8009 with
                              | Some x8011 ->
                                  ignore
                                    (Ojs.call x8010 "push"
                                       [|(Ojs.float_to_js x8011)|])
                              | None -> ());
                             x8010))|])
    let (slice : 'tags this -> ?start:float -> ?end_:float -> unit -> t) =
      fun (x8021 : 'tags this) ->
        fun ?start:(x8016 : float option) ->
          fun ?end_:(x8017 : float option) ->
            fun () ->
              t_of_js
                (let x8023 = this_to_js Obj.magic x8021 in
                 Ojs.call (Ojs.get_prop_ascii x8023 "slice") "apply"
                   [|x8023;((let x8018 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x8016 with
                              | Some x8020 ->
                                  ignore
                                    (Ojs.call x8018 "push"
                                       [|(Ojs.float_to_js x8020)|])
                              | None -> ());
                             (match x8017 with
                              | Some x8019 ->
                                  ignore
                                    (Ojs.call x8018 "push"
                                       [|(Ojs.float_to_js x8019)|])
                              | None -> ());
                             x8018))|])
    let (some :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x8031 : 'tags this) ->
        fun
          ~predicate:(x8024 :
                       value:float -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x8025 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x8033 = this_to_js Obj.magic x8031 in
                 Ojs.call (Ojs.get_prop_ascii x8033 "some") "apply"
                   [|x8033;((let x8026 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8026 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x8028 : Ojs.t) ->
                                          fun (x8029 : Ojs.t) ->
                                            fun (x8030 : Ojs.t) ->
                                              unknown_to_js
                                                (x8024
                                                   ~value:(Ojs.float_of_js
                                                             x8028)
                                                   ~index:(Ojs.float_of_js
                                                             x8029)
                                                   ~array:(t_of_js x8030))))|]);
                             (match x8025 with
                              | Some x8027 ->
                                  ignore
                                    (Ojs.call x8026 "push"
                                       [|(any_to_js x8027)|])
                              | None -> ());
                             x8026))|])
    let (sort :
      'tags this ->
        ?compareFn:(a:float -> b:float -> float) -> unit -> 'tags this)
      =
      fun (x8039 : 'tags this) ->
        fun ?compareFn:(x8034 : (a:float -> b:float -> float) option) ->
          fun () ->
            this_of_js Obj.magic
              (let x8041 = this_to_js Obj.magic x8039 in
               Ojs.call (Ojs.get_prop_ascii x8041 "sort") "apply"
                 [|x8041;((let x8035 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x8034 with
                            | Some x8036 ->
                                ignore
                                  (Ojs.call x8035 "push"
                                     [|(Ojs.fun_to_js 2
                                          (fun (x8037 : Ojs.t) ->
                                             fun (x8038 : Ojs.t) ->
                                               Ojs.float_to_js
                                                 (x8036
                                                    ~a:(Ojs.float_of_js x8037)
                                                    ~b:(Ojs.float_of_js x8038))))|])
                            | None -> ());
                           x8035))|])
    let (subarray : 'tags this -> ?begin_:float -> ?end_:float -> unit -> t)
      =
      fun (x8048 : 'tags this) ->
        fun ?begin_:(x8043 : float option) ->
          fun ?end_:(x8044 : float option) ->
            fun () ->
              t_of_js
                (let x8050 = this_to_js Obj.magic x8048 in
                 Ojs.call (Ojs.get_prop_ascii x8050 "subarray") "apply"
                   [|x8050;((let x8045 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x8043 with
                              | Some x8047 ->
                                  ignore
                                    (Ojs.call x8045 "push"
                                       [|(Ojs.float_to_js x8047)|])
                              | None -> ());
                             (match x8044 with
                              | Some x8046 ->
                                  ignore
                                    (Ojs.call x8045 "push"
                                       [|(Ojs.float_to_js x8046)|])
                              | None -> ());
                             x8045))|])
    let (toLocaleString : 'tags this -> string) =
      fun (x8051 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x8051) "toLocaleString" [||])
    let (toString : 'tags this -> string) =
      fun (x8053 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x8053) "toString" [||])
    let (valueOf : 'tags this -> t) =
      fun (x8055 : 'tags this) ->
        t_of_js (Ojs.call (this_to_js Obj.magic x8055) "valueOf" [||])
    let (get : 'tags this -> float -> float) =
      fun (x8057 : 'tags this) ->
        fun (x8059 : float) ->
          Ojs.float_of_js
            (Ojs.get_prop (this_to_js Obj.magic x8057)
               (Ojs.float_to_js x8059))
    let (set : 'tags this -> float -> float -> unit) =
      fun (x8060 : 'tags this) ->
        fun (x8062 : float) ->
          fun (x8063 : float) ->
            Ojs.set_prop (this_to_js Obj.magic x8060) (Ojs.float_to_js x8062)
              (Ojs.float_to_js x8063)
    let (create : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Int8Array") [||])
    let (create' : float Iterable.t -> t) =
      fun (x8064 : float Iterable.t) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Int8Array")
             [|(Iterable.t_to_js Ojs.float_to_js x8064)|])
    let (from :
      arrayLike:float Iterable.t ->
        ?mapfn:(v:float -> k:float -> float) -> ?thisArg:any -> unit -> t)
      =
      fun ~arrayLike:(x8066 : float Iterable.t) ->
        fun ?mapfn:(x8067 : (v:float -> k:float -> float) option) ->
          fun ?thisArg:(x8068 : any option) ->
            fun () ->
              t_of_js
                (let x8075 = Ojs.get_prop_ascii Ojs.global "Int8Array" in
                 Ojs.call (Ojs.get_prop_ascii x8075 "from") "apply"
                   [|x8075;((let x8069 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8069 "push"
                                  [|(Iterable.t_to_js Ojs.float_to_js x8066)|]);
                             (match x8067 with
                              | Some x8071 ->
                                  ignore
                                    (Ojs.call x8069 "push"
                                       [|(Ojs.fun_to_js 2
                                            (fun (x8072 : Ojs.t) ->
                                               fun (x8073 : Ojs.t) ->
                                                 Ojs.float_to_js
                                                   (x8071
                                                      ~v:(Ojs.float_of_js
                                                            x8072)
                                                      ~k:(Ojs.float_of_js
                                                            x8073))))|])
                              | None -> ());
                             (match x8068 with
                              | Some x8070 ->
                                  ignore
                                    (Ojs.call x8069 "push"
                                       [|(any_to_js x8070)|])
                              | None -> ());
                             x8069))|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Int8Array")
             "prototype")
    let (create'' : float -> t) =
      fun (x8076 : float) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Int8Array")
             [|(Ojs.float_to_js x8076)|])
    let (create''' :
      [ `U1 of float ArrayLike.t  | `U2 of ArrayBufferLike.t ] -> t) =
      fun (x8077 : [ `U1 of float ArrayLike.t  | `U2 of ArrayBufferLike.t ])
        ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Int8Array")
             [|((match x8077 with
                 | `U1 x8078 -> ArrayLike.t_to_js Ojs.float_to_js x8078
                 | `U2 x8080 -> ArrayBufferLike.t_to_js x8080))|])
    let (create'''' :
      buffer:ArrayBufferLike.t ->
        ?byteOffset:float -> ?length:float -> unit -> t)
      =
      fun ~buffer:(x8081 : ArrayBufferLike.t) ->
        fun ?byteOffset:(x8082 : float option) ->
          fun ?length:(x8083 : float option) ->
            fun () ->
              t_of_js
                (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "Int8Array")
                   (let x8084 =
                      Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                        [||] in
                    ignore
                      (Ojs.call x8084 "push"
                         [|(ArrayBufferLike.t_to_js x8081)|]);
                    (match x8082 with
                     | Some x8086 ->
                         ignore
                           (Ojs.call x8084 "push" [|(Ojs.float_to_js x8086)|])
                     | None -> ());
                    (match x8083 with
                     | Some x8085 ->
                         ignore
                           (Ojs.call x8084 "push" [|(Ojs.float_to_js x8085)|])
                     | None -> ());
                    x8084))
    let (bytes_per_element : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Int8Array")
             "BYTES_PER_ELEMENT")
    let (of_ : float list -> t) =
      fun (x8087 : float list) ->
        t_of_js
          (let x8090 = Ojs.get_prop_ascii Ojs.global "Int8Array" in
           Ojs.call (Ojs.get_prop_ascii x8090 "of") "apply"
             [|x8090;((let x8088 =
                         Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                           [||] in
                       List.iter
                         (fun (x8089 : float) ->
                            ignore
                              (Ojs.call x8088 "push"
                                 [|(Ojs.float_to_js x8089)|])) x8087;
                       x8088))|])
    let (from' : float ArrayLike.t -> t) =
      fun (x8091 : float ArrayLike.t) ->
        t_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Int8Array") "from"
             [|(ArrayLike.t_to_js Ojs.float_to_js x8091)|])
    let (from'' :
      arrayLike:'T ArrayLike.t ->
        mapfn:(v:'T -> k:float -> float) -> ?thisArg:any -> unit -> t)
      =
      fun ~arrayLike:(x8093 : 'T ArrayLike.t) ->
        fun ~mapfn:(x8094 : v:'T -> k:float -> float) ->
          fun ?thisArg:(x8095 : any option) ->
            fun () ->
              t_of_js
                (let x8101 = Ojs.get_prop_ascii Ojs.global "Int8Array" in
                 Ojs.call (Ojs.get_prop_ascii x8101 "from") "apply"
                   [|x8101;((let x8096 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8096 "push"
                                  [|(ArrayLike.t_to_js Obj.magic x8093)|]);
                             ignore
                               (Ojs.call x8096 "push"
                                  [|(Ojs.fun_to_js 2
                                       (fun (x8098 : Ojs.t) ->
                                          fun (x8099 : Ojs.t) ->
                                            Ojs.float_to_js
                                              (x8094 ~v:(Obj.magic x8098)
                                                 ~k:(Ojs.float_of_js x8099))))|]);
                             (match x8095 with
                              | Some x8097 ->
                                  ignore
                                    (Ojs.call x8096 "push"
                                       [|(any_to_js x8097)|])
                              | None -> ());
                             x8096))|])
    let cast_from = Obj.magic
  end
module Int32Array =
  struct
    type t =
      [ `Int32Array  | float ArrayLike.tags_1
      | float IterableIterator.tags_1] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x8103 : Ojs.t) -> t_of_js x8103
    and t_0_to_js : t_0 -> Ojs.t = fun (x8102 : t) -> t_to_js x8102
    type tags =
      [ `Int32Array  | float ArrayLike.tags_1
      | float IterableIterator.tags_1]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `Int32Array ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x8106 : Ojs.t) -> intf_of_js __tags_of_js x8106
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x8104 : __tags intf) -> intf_to_js __tags_to_js x8104
    let (at : 'tags this -> index:float -> float option) =
      fun (x8109 : 'tags this) ->
        fun ~index:(x8108 : float) ->
          Ojs.option_of_js Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x8109) "at"
               [|(Ojs.float_to_js x8108)|])
    let (includes :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> bool)
      =
      fun (x8116 : 'tags this) ->
        fun ~searchElement:(x8112 : float) ->
          fun ?fromIndex:(x8113 : float option) ->
            fun () ->
              Ojs.bool_of_js
                (let x8118 = this_to_js Obj.magic x8116 in
                 Ojs.call (Ojs.get_prop_ascii x8118 "includes") "apply"
                   [|x8118;((let x8114 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8114 "push"
                                  [|(Ojs.float_to_js x8112)|]);
                             (match x8113 with
                              | Some x8115 ->
                                  ignore
                                    (Ojs.call x8114 "push"
                                       [|(Ojs.float_to_js x8115)|])
                              | None -> ());
                             x8114))|])
    let (entries : 'tags this -> (float * float) IterableIterator.t) =
      fun (x8119 : 'tags this) ->
        IterableIterator.t_of_js
          (fun (x8121 : Ojs.t) ->
             let x8122 = x8121 in
             ((Ojs.float_of_js (Ojs.array_get x8122 0)),
               (Ojs.float_of_js (Ojs.array_get x8122 1))))
          (Ojs.call (this_to_js Obj.magic x8119) "entries" [||])
    let (keys : 'tags this -> float IterableIterator.t) =
      fun (x8123 : 'tags this) ->
        IterableIterator.t_of_js Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x8123) "keys" [||])
    let (values : 'tags this -> float IterableIterator.t) =
      fun (x8126 : 'tags this) ->
        IterableIterator.t_of_js Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x8126) "values" [||])
    let (get_BYTES_PER_ELEMENT : 'tags this -> float) =
      fun (x8129 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x8129)
             "BYTES_PER_ELEMENT")
    let (get_buffer : 'tags this -> ArrayBufferLike.t) =
      fun (x8131 : 'tags this) ->
        ArrayBufferLike.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x8131) "buffer")
    let (get_byteLength : 'tags this -> float) =
      fun (x8133 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x8133) "byteLength")
    let (get_byteOffset : 'tags this -> float) =
      fun (x8135 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x8135) "byteOffset")
    let (copyWithin :
      'tags this ->
        target:float -> start:float -> ?end_:float -> unit -> 'tags this)
      =
      fun (x8142 : 'tags this) ->
        fun ~target:(x8137 : float) ->
          fun ~start:(x8138 : float) ->
            fun ?end_:(x8139 : float option) ->
              fun () ->
                this_of_js Obj.magic
                  (let x8144 = this_to_js Obj.magic x8142 in
                   Ojs.call (Ojs.get_prop_ascii x8144 "copyWithin") "apply"
                     [|x8144;((let x8140 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x8140 "push"
                                    [|(Ojs.float_to_js x8137)|]);
                               ignore
                                 (Ojs.call x8140 "push"
                                    [|(Ojs.float_to_js x8138)|]);
                               (match x8139 with
                                | Some x8141 ->
                                    ignore
                                      (Ojs.call x8140 "push"
                                         [|(Ojs.float_to_js x8141)|])
                                | None -> ());
                               x8140))|])
    let (every :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x8153 : 'tags this) ->
        fun
          ~predicate:(x8146 :
                       value:float -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x8147 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x8155 = this_to_js Obj.magic x8153 in
                 Ojs.call (Ojs.get_prop_ascii x8155 "every") "apply"
                   [|x8155;((let x8148 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8148 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x8150 : Ojs.t) ->
                                          fun (x8151 : Ojs.t) ->
                                            fun (x8152 : Ojs.t) ->
                                              unknown_to_js
                                                (x8146
                                                   ~value:(Ojs.float_of_js
                                                             x8150)
                                                   ~index:(Ojs.float_of_js
                                                             x8151)
                                                   ~array:(t_of_js x8152))))|]);
                             (match x8147 with
                              | Some x8149 ->
                                  ignore
                                    (Ojs.call x8148 "push"
                                       [|(any_to_js x8149)|])
                              | None -> ());
                             x8148))|])
    let (fill :
      'tags this ->
        value:float -> ?start:float -> ?end_:float -> unit -> 'tags this)
      =
      fun (x8162 : 'tags this) ->
        fun ~value:(x8156 : float) ->
          fun ?start:(x8157 : float option) ->
            fun ?end_:(x8158 : float option) ->
              fun () ->
                this_of_js Obj.magic
                  (let x8164 = this_to_js Obj.magic x8162 in
                   Ojs.call (Ojs.get_prop_ascii x8164 "fill") "apply"
                     [|x8164;((let x8159 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x8159 "push"
                                    [|(Ojs.float_to_js x8156)|]);
                               (match x8157 with
                                | Some x8161 ->
                                    ignore
                                      (Ojs.call x8159 "push"
                                         [|(Ojs.float_to_js x8161)|])
                                | None -> ());
                               (match x8158 with
                                | Some x8160 ->
                                    ignore
                                      (Ojs.call x8159 "push"
                                         [|(Ojs.float_to_js x8160)|])
                                | None -> ());
                               x8159))|])
    let (filter :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> any) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x8173 : 'tags this) ->
        fun ~predicate:(x8166 : value:float -> index:float -> array:t -> any)
          ->
          fun ?thisArg:(x8167 : any option) ->
            fun () ->
              t_of_js
                (let x8175 = this_to_js Obj.magic x8173 in
                 Ojs.call (Ojs.get_prop_ascii x8175 "filter") "apply"
                   [|x8175;((let x8168 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8168 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x8170 : Ojs.t) ->
                                          fun (x8171 : Ojs.t) ->
                                            fun (x8172 : Ojs.t) ->
                                              any_to_js
                                                (x8166
                                                   ~value:(Ojs.float_of_js
                                                             x8170)
                                                   ~index:(Ojs.float_of_js
                                                             x8171)
                                                   ~array:(t_of_js x8172))))|]);
                             (match x8167 with
                              | Some x8169 ->
                                  ignore
                                    (Ojs.call x8168 "push"
                                       [|(any_to_js x8169)|])
                              | None -> ());
                             x8168))|])
    let (find :
      'tags this ->
        predicate:(value:float -> index:float -> obj:t -> bool) ->
          ?thisArg:any -> unit -> float option)
      =
      fun (x8183 : 'tags this) ->
        fun ~predicate:(x8176 : value:float -> index:float -> obj:t -> bool)
          ->
          fun ?thisArg:(x8177 : any option) ->
            fun () ->
              Ojs.option_of_js Ojs.float_of_js
                (let x8185 = this_to_js Obj.magic x8183 in
                 Ojs.call (Ojs.get_prop_ascii x8185 "find") "apply"
                   [|x8185;((let x8178 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8178 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x8180 : Ojs.t) ->
                                          fun (x8181 : Ojs.t) ->
                                            fun (x8182 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x8176
                                                   ~value:(Ojs.float_of_js
                                                             x8180)
                                                   ~index:(Ojs.float_of_js
                                                             x8181)
                                                   ~obj:(t_of_js x8182))))|]);
                             (match x8177 with
                              | Some x8179 ->
                                  ignore
                                    (Ojs.call x8178 "push"
                                       [|(any_to_js x8179)|])
                              | None -> ());
                             x8178))|])
    let (findIndex :
      'tags this ->
        predicate:(value:float -> index:float -> obj:t -> bool) ->
          ?thisArg:any -> unit -> float)
      =
      fun (x8194 : 'tags this) ->
        fun ~predicate:(x8187 : value:float -> index:float -> obj:t -> bool)
          ->
          fun ?thisArg:(x8188 : any option) ->
            fun () ->
              Ojs.float_of_js
                (let x8196 = this_to_js Obj.magic x8194 in
                 Ojs.call (Ojs.get_prop_ascii x8196 "findIndex") "apply"
                   [|x8196;((let x8189 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8189 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x8191 : Ojs.t) ->
                                          fun (x8192 : Ojs.t) ->
                                            fun (x8193 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x8187
                                                   ~value:(Ojs.float_of_js
                                                             x8191)
                                                   ~index:(Ojs.float_of_js
                                                             x8192)
                                                   ~obj:(t_of_js x8193))))|]);
                             (match x8188 with
                              | Some x8190 ->
                                  ignore
                                    (Ojs.call x8189 "push"
                                       [|(any_to_js x8190)|])
                              | None -> ());
                             x8189))|])
    let (forEach :
      'tags this ->
        callbackfn:(value:float -> index:float -> array:t -> unit) ->
          ?thisArg:any -> unit -> unit)
      =
      fun (x8204 : 'tags this) ->
        fun
          ~callbackfn:(x8197 : value:float -> index:float -> array:t -> unit)
          ->
          fun ?thisArg:(x8198 : any option) ->
            fun () ->
              ignore
                (let x8206 = this_to_js Obj.magic x8204 in
                 Ojs.call (Ojs.get_prop_ascii x8206 "forEach") "apply"
                   [|x8206;((let x8199 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8199 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x8201 : Ojs.t) ->
                                          fun (x8202 : Ojs.t) ->
                                            fun (x8203 : Ojs.t) ->
                                              x8197
                                                ~value:(Ojs.float_of_js x8201)
                                                ~index:(Ojs.float_of_js x8202)
                                                ~array:(t_of_js x8203)))|]);
                             (match x8198 with
                              | Some x8200 ->
                                  ignore
                                    (Ojs.call x8199 "push"
                                       [|(any_to_js x8200)|])
                              | None -> ());
                             x8199))|])
    let (indexOf :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> float)
      =
      fun (x8211 : 'tags this) ->
        fun ~searchElement:(x8207 : float) ->
          fun ?fromIndex:(x8208 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x8213 = this_to_js Obj.magic x8211 in
                 Ojs.call (Ojs.get_prop_ascii x8213 "indexOf") "apply"
                   [|x8213;((let x8209 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8209 "push"
                                  [|(Ojs.float_to_js x8207)|]);
                             (match x8208 with
                              | Some x8210 ->
                                  ignore
                                    (Ojs.call x8209 "push"
                                       [|(Ojs.float_to_js x8210)|])
                              | None -> ());
                             x8209))|])
    let (join : 'tags this -> ?separator:string -> unit -> string) =
      fun (x8217 : 'tags this) ->
        fun ?separator:(x8214 : string option) ->
          fun () ->
            Ojs.string_of_js
              (let x8219 = this_to_js Obj.magic x8217 in
               Ojs.call (Ojs.get_prop_ascii x8219 "join") "apply"
                 [|x8219;((let x8215 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x8214 with
                            | Some x8216 ->
                                ignore
                                  (Ojs.call x8215 "push"
                                     [|(Ojs.string_to_js x8216)|])
                            | None -> ());
                           x8215))|])
    let (lastIndexOf :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> float)
      =
      fun (x8224 : 'tags this) ->
        fun ~searchElement:(x8220 : float) ->
          fun ?fromIndex:(x8221 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x8226 = this_to_js Obj.magic x8224 in
                 Ojs.call (Ojs.get_prop_ascii x8226 "lastIndexOf") "apply"
                   [|x8226;((let x8222 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8222 "push"
                                  [|(Ojs.float_to_js x8220)|]);
                             (match x8221 with
                              | Some x8223 ->
                                  ignore
                                    (Ojs.call x8222 "push"
                                       [|(Ojs.float_to_js x8223)|])
                              | None -> ());
                             x8222))|])
    let (get_length : 'tags this -> float) =
      fun (x8227 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x8227) "length")
    let (map :
      'tags this ->
        callbackfn:(value:float -> index:float -> array:t -> float) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x8236 : 'tags this) ->
        fun
          ~callbackfn:(x8229 :
                        value:float -> index:float -> array:t -> float)
          ->
          fun ?thisArg:(x8230 : any option) ->
            fun () ->
              t_of_js
                (let x8238 = this_to_js Obj.magic x8236 in
                 Ojs.call (Ojs.get_prop_ascii x8238 "map") "apply"
                   [|x8238;((let x8231 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8231 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x8233 : Ojs.t) ->
                                          fun (x8234 : Ojs.t) ->
                                            fun (x8235 : Ojs.t) ->
                                              Ojs.float_to_js
                                                (x8229
                                                   ~value:(Ojs.float_of_js
                                                             x8233)
                                                   ~index:(Ojs.float_of_js
                                                             x8234)
                                                   ~array:(t_of_js x8235))))|]);
                             (match x8230 with
                              | Some x8232 ->
                                  ignore
                                    (Ojs.call x8231 "push"
                                       [|(any_to_js x8232)|])
                              | None -> ());
                             x8231))|])
    let (reduce :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> float)
      =
      fun (x8244 : 'tags this) ->
        fun
          ~callbackfn:(x8239 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x8244) "reduce"
               [|(Ojs.fun_to_js 4
                    (fun (x8240 : Ojs.t) ->
                       fun (x8241 : Ojs.t) ->
                         fun (x8242 : Ojs.t) ->
                           fun (x8243 : Ojs.t) ->
                             Ojs.float_to_js
                               (x8239 ~previousValue:(Ojs.float_of_js x8240)
                                  ~currentValue:(Ojs.float_of_js x8241)
                                  ~currentIndex:(Ojs.float_of_js x8242)
                                  ~array:(t_of_js x8243))))|])
    let (reduce' :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> initialValue:float -> float)
      =
      fun (x8252 : 'tags this) ->
        fun
          ~callbackfn:(x8246 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          fun ~initialValue:(x8251 : float) ->
            Ojs.float_of_js
              (Ojs.call (this_to_js Obj.magic x8252) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x8247 : Ojs.t) ->
                         fun (x8248 : Ojs.t) ->
                           fun (x8249 : Ojs.t) ->
                             fun (x8250 : Ojs.t) ->
                               Ojs.float_to_js
                                 (x8246
                                    ~previousValue:(Ojs.float_of_js x8247)
                                    ~currentValue:(Ojs.float_of_js x8248)
                                    ~currentIndex:(Ojs.float_of_js x8249)
                                    ~array:(t_of_js x8250))));(Ojs.float_to_js
                                                                 x8251)|])
    let (reduce'' :
      'tags this ->
        callbackfn:(previousValue:'U ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x8260 : 'tags this) ->
        fun
          ~callbackfn:(x8254 :
                        previousValue:'U ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x8259 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic x8260) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x8255 : Ojs.t) ->
                         fun (x8256 : Ojs.t) ->
                           fun (x8257 : Ojs.t) ->
                             fun (x8258 : Ojs.t) ->
                               Obj.magic
                                 (x8254 ~previousValue:(Obj.magic x8255)
                                    ~currentValue:(Ojs.float_of_js x8256)
                                    ~currentIndex:(Ojs.float_of_js x8257)
                                    ~array:(t_of_js x8258))));(Obj.magic
                                                                 x8259)|])
    let (reduceRight :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> float)
      =
      fun (x8267 : 'tags this) ->
        fun
          ~callbackfn:(x8262 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x8267) "reduceRight"
               [|(Ojs.fun_to_js 4
                    (fun (x8263 : Ojs.t) ->
                       fun (x8264 : Ojs.t) ->
                         fun (x8265 : Ojs.t) ->
                           fun (x8266 : Ojs.t) ->
                             Ojs.float_to_js
                               (x8262 ~previousValue:(Ojs.float_of_js x8263)
                                  ~currentValue:(Ojs.float_of_js x8264)
                                  ~currentIndex:(Ojs.float_of_js x8265)
                                  ~array:(t_of_js x8266))))|])
    let (reduceRight' :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> initialValue:float -> float)
      =
      fun (x8275 : 'tags this) ->
        fun
          ~callbackfn:(x8269 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          fun ~initialValue:(x8274 : float) ->
            Ojs.float_of_js
              (Ojs.call (this_to_js Obj.magic x8275) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x8270 : Ojs.t) ->
                         fun (x8271 : Ojs.t) ->
                           fun (x8272 : Ojs.t) ->
                             fun (x8273 : Ojs.t) ->
                               Ojs.float_to_js
                                 (x8269
                                    ~previousValue:(Ojs.float_of_js x8270)
                                    ~currentValue:(Ojs.float_of_js x8271)
                                    ~currentIndex:(Ojs.float_of_js x8272)
                                    ~array:(t_of_js x8273))));(Ojs.float_to_js
                                                                 x8274)|])
    let (reduceRight'' :
      'tags this ->
        callbackfn:(previousValue:'U ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x8283 : 'tags this) ->
        fun
          ~callbackfn:(x8277 :
                        previousValue:'U ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x8282 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic x8283) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x8278 : Ojs.t) ->
                         fun (x8279 : Ojs.t) ->
                           fun (x8280 : Ojs.t) ->
                             fun (x8281 : Ojs.t) ->
                               Obj.magic
                                 (x8277 ~previousValue:(Obj.magic x8278)
                                    ~currentValue:(Ojs.float_of_js x8279)
                                    ~currentIndex:(Ojs.float_of_js x8280)
                                    ~array:(t_of_js x8281))));(Obj.magic
                                                                 x8282)|])
    let (reverse : 'tags this -> t) =
      fun (x8285 : 'tags this) ->
        t_of_js (Ojs.call (this_to_js Obj.magic x8285) "reverse" [||])
    let (set_ :
      'tags this -> array:float ArrayLike.t -> ?offset:float -> unit -> unit)
      =
      fun (x8292 : 'tags this) ->
        fun ~array:(x8287 : float ArrayLike.t) ->
          fun ?offset:(x8288 : float option) ->
            fun () ->
              ignore
                (let x8294 = this_to_js Obj.magic x8292 in
                 Ojs.call (Ojs.get_prop_ascii x8294 "set") "apply"
                   [|x8294;((let x8289 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8289 "push"
                                  [|(ArrayLike.t_to_js Ojs.float_to_js x8287)|]);
                             (match x8288 with
                              | Some x8290 ->
                                  ignore
                                    (Ojs.call x8289 "push"
                                       [|(Ojs.float_to_js x8290)|])
                              | None -> ());
                             x8289))|])
    let (slice : 'tags this -> ?start:float -> ?end_:float -> unit -> t) =
      fun (x8300 : 'tags this) ->
        fun ?start:(x8295 : float option) ->
          fun ?end_:(x8296 : float option) ->
            fun () ->
              t_of_js
                (let x8302 = this_to_js Obj.magic x8300 in
                 Ojs.call (Ojs.get_prop_ascii x8302 "slice") "apply"
                   [|x8302;((let x8297 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x8295 with
                              | Some x8299 ->
                                  ignore
                                    (Ojs.call x8297 "push"
                                       [|(Ojs.float_to_js x8299)|])
                              | None -> ());
                             (match x8296 with
                              | Some x8298 ->
                                  ignore
                                    (Ojs.call x8297 "push"
                                       [|(Ojs.float_to_js x8298)|])
                              | None -> ());
                             x8297))|])
    let (some :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x8310 : 'tags this) ->
        fun
          ~predicate:(x8303 :
                       value:float -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x8304 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x8312 = this_to_js Obj.magic x8310 in
                 Ojs.call (Ojs.get_prop_ascii x8312 "some") "apply"
                   [|x8312;((let x8305 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8305 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x8307 : Ojs.t) ->
                                          fun (x8308 : Ojs.t) ->
                                            fun (x8309 : Ojs.t) ->
                                              unknown_to_js
                                                (x8303
                                                   ~value:(Ojs.float_of_js
                                                             x8307)
                                                   ~index:(Ojs.float_of_js
                                                             x8308)
                                                   ~array:(t_of_js x8309))))|]);
                             (match x8304 with
                              | Some x8306 ->
                                  ignore
                                    (Ojs.call x8305 "push"
                                       [|(any_to_js x8306)|])
                              | None -> ());
                             x8305))|])
    let (sort :
      'tags this ->
        ?compareFn:(a:float -> b:float -> float) -> unit -> 'tags this)
      =
      fun (x8318 : 'tags this) ->
        fun ?compareFn:(x8313 : (a:float -> b:float -> float) option) ->
          fun () ->
            this_of_js Obj.magic
              (let x8320 = this_to_js Obj.magic x8318 in
               Ojs.call (Ojs.get_prop_ascii x8320 "sort") "apply"
                 [|x8320;((let x8314 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x8313 with
                            | Some x8315 ->
                                ignore
                                  (Ojs.call x8314 "push"
                                     [|(Ojs.fun_to_js 2
                                          (fun (x8316 : Ojs.t) ->
                                             fun (x8317 : Ojs.t) ->
                                               Ojs.float_to_js
                                                 (x8315
                                                    ~a:(Ojs.float_of_js x8316)
                                                    ~b:(Ojs.float_of_js x8317))))|])
                            | None -> ());
                           x8314))|])
    let (subarray : 'tags this -> ?begin_:float -> ?end_:float -> unit -> t)
      =
      fun (x8327 : 'tags this) ->
        fun ?begin_:(x8322 : float option) ->
          fun ?end_:(x8323 : float option) ->
            fun () ->
              t_of_js
                (let x8329 = this_to_js Obj.magic x8327 in
                 Ojs.call (Ojs.get_prop_ascii x8329 "subarray") "apply"
                   [|x8329;((let x8324 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x8322 with
                              | Some x8326 ->
                                  ignore
                                    (Ojs.call x8324 "push"
                                       [|(Ojs.float_to_js x8326)|])
                              | None -> ());
                             (match x8323 with
                              | Some x8325 ->
                                  ignore
                                    (Ojs.call x8324 "push"
                                       [|(Ojs.float_to_js x8325)|])
                              | None -> ());
                             x8324))|])
    let (toLocaleString : 'tags this -> string) =
      fun (x8330 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x8330) "toLocaleString" [||])
    let (toString : 'tags this -> string) =
      fun (x8332 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x8332) "toString" [||])
    let (valueOf : 'tags this -> t) =
      fun (x8334 : 'tags this) ->
        t_of_js (Ojs.call (this_to_js Obj.magic x8334) "valueOf" [||])
    let (get : 'tags this -> float -> float) =
      fun (x8336 : 'tags this) ->
        fun (x8338 : float) ->
          Ojs.float_of_js
            (Ojs.get_prop (this_to_js Obj.magic x8336)
               (Ojs.float_to_js x8338))
    let (set : 'tags this -> float -> float -> unit) =
      fun (x8339 : 'tags this) ->
        fun (x8341 : float) ->
          fun (x8342 : float) ->
            Ojs.set_prop (this_to_js Obj.magic x8339) (Ojs.float_to_js x8341)
              (Ojs.float_to_js x8342)
    let (create : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Int32Array") [||])
    let (create' : float Iterable.t -> t) =
      fun (x8343 : float Iterable.t) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Int32Array")
             [|(Iterable.t_to_js Ojs.float_to_js x8343)|])
    let (from :
      arrayLike:float Iterable.t ->
        ?mapfn:(v:float -> k:float -> float) -> ?thisArg:any -> unit -> t)
      =
      fun ~arrayLike:(x8345 : float Iterable.t) ->
        fun ?mapfn:(x8346 : (v:float -> k:float -> float) option) ->
          fun ?thisArg:(x8347 : any option) ->
            fun () ->
              t_of_js
                (let x8354 = Ojs.get_prop_ascii Ojs.global "Int32Array" in
                 Ojs.call (Ojs.get_prop_ascii x8354 "from") "apply"
                   [|x8354;((let x8348 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8348 "push"
                                  [|(Iterable.t_to_js Ojs.float_to_js x8345)|]);
                             (match x8346 with
                              | Some x8350 ->
                                  ignore
                                    (Ojs.call x8348 "push"
                                       [|(Ojs.fun_to_js 2
                                            (fun (x8351 : Ojs.t) ->
                                               fun (x8352 : Ojs.t) ->
                                                 Ojs.float_to_js
                                                   (x8350
                                                      ~v:(Ojs.float_of_js
                                                            x8351)
                                                      ~k:(Ojs.float_of_js
                                                            x8352))))|])
                              | None -> ());
                             (match x8347 with
                              | Some x8349 ->
                                  ignore
                                    (Ojs.call x8348 "push"
                                       [|(any_to_js x8349)|])
                              | None -> ());
                             x8348))|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Int32Array")
             "prototype")
    let (create'' : float -> t) =
      fun (x8355 : float) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Int32Array")
             [|(Ojs.float_to_js x8355)|])
    let (create''' :
      [ `U1 of float ArrayLike.t  | `U2 of ArrayBufferLike.t ] -> t) =
      fun (x8356 : [ `U1 of float ArrayLike.t  | `U2 of ArrayBufferLike.t ])
        ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Int32Array")
             [|((match x8356 with
                 | `U1 x8357 -> ArrayLike.t_to_js Ojs.float_to_js x8357
                 | `U2 x8359 -> ArrayBufferLike.t_to_js x8359))|])
    let (create'''' :
      buffer:ArrayBufferLike.t ->
        ?byteOffset:float -> ?length:float -> unit -> t)
      =
      fun ~buffer:(x8360 : ArrayBufferLike.t) ->
        fun ?byteOffset:(x8361 : float option) ->
          fun ?length:(x8362 : float option) ->
            fun () ->
              t_of_js
                (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "Int32Array")
                   (let x8363 =
                      Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                        [||] in
                    ignore
                      (Ojs.call x8363 "push"
                         [|(ArrayBufferLike.t_to_js x8360)|]);
                    (match x8361 with
                     | Some x8365 ->
                         ignore
                           (Ojs.call x8363 "push" [|(Ojs.float_to_js x8365)|])
                     | None -> ());
                    (match x8362 with
                     | Some x8364 ->
                         ignore
                           (Ojs.call x8363 "push" [|(Ojs.float_to_js x8364)|])
                     | None -> ());
                    x8363))
    let (bytes_per_element : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Int32Array")
             "BYTES_PER_ELEMENT")
    let (of_ : float list -> t) =
      fun (x8366 : float list) ->
        t_of_js
          (let x8369 = Ojs.get_prop_ascii Ojs.global "Int32Array" in
           Ojs.call (Ojs.get_prop_ascii x8369 "of") "apply"
             [|x8369;((let x8367 =
                         Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                           [||] in
                       List.iter
                         (fun (x8368 : float) ->
                            ignore
                              (Ojs.call x8367 "push"
                                 [|(Ojs.float_to_js x8368)|])) x8366;
                       x8367))|])
    let (from' : float ArrayLike.t -> t) =
      fun (x8370 : float ArrayLike.t) ->
        t_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Int32Array") "from"
             [|(ArrayLike.t_to_js Ojs.float_to_js x8370)|])
    let (from'' :
      arrayLike:'T ArrayLike.t ->
        mapfn:(v:'T -> k:float -> float) -> ?thisArg:any -> unit -> t)
      =
      fun ~arrayLike:(x8372 : 'T ArrayLike.t) ->
        fun ~mapfn:(x8373 : v:'T -> k:float -> float) ->
          fun ?thisArg:(x8374 : any option) ->
            fun () ->
              t_of_js
                (let x8380 = Ojs.get_prop_ascii Ojs.global "Int32Array" in
                 Ojs.call (Ojs.get_prop_ascii x8380 "from") "apply"
                   [|x8380;((let x8375 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8375 "push"
                                  [|(ArrayLike.t_to_js Obj.magic x8372)|]);
                             ignore
                               (Ojs.call x8375 "push"
                                  [|(Ojs.fun_to_js 2
                                       (fun (x8377 : Ojs.t) ->
                                          fun (x8378 : Ojs.t) ->
                                            Ojs.float_to_js
                                              (x8373 ~v:(Obj.magic x8377)
                                                 ~k:(Ojs.float_of_js x8378))))|]);
                             (match x8374 with
                              | Some x8376 ->
                                  ignore
                                    (Ojs.call x8375 "push"
                                       [|(any_to_js x8376)|])
                              | None -> ());
                             x8375))|])
    let cast_from = Obj.magic
  end
module Int16Array =
  struct
    type t =
      [ `Int16Array  | float ArrayLike.tags_1
      | float IterableIterator.tags_1] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x8382 : Ojs.t) -> t_of_js x8382
    and t_0_to_js : t_0 -> Ojs.t = fun (x8381 : t) -> t_to_js x8381
    type tags =
      [ `Int16Array  | float ArrayLike.tags_1
      | float IterableIterator.tags_1]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `Int16Array ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x8385 : Ojs.t) -> intf_of_js __tags_of_js x8385
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x8383 : __tags intf) -> intf_to_js __tags_to_js x8383
    let (at : 'tags this -> index:float -> float option) =
      fun (x8388 : 'tags this) ->
        fun ~index:(x8387 : float) ->
          Ojs.option_of_js Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x8388) "at"
               [|(Ojs.float_to_js x8387)|])
    let (includes :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> bool)
      =
      fun (x8395 : 'tags this) ->
        fun ~searchElement:(x8391 : float) ->
          fun ?fromIndex:(x8392 : float option) ->
            fun () ->
              Ojs.bool_of_js
                (let x8397 = this_to_js Obj.magic x8395 in
                 Ojs.call (Ojs.get_prop_ascii x8397 "includes") "apply"
                   [|x8397;((let x8393 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8393 "push"
                                  [|(Ojs.float_to_js x8391)|]);
                             (match x8392 with
                              | Some x8394 ->
                                  ignore
                                    (Ojs.call x8393 "push"
                                       [|(Ojs.float_to_js x8394)|])
                              | None -> ());
                             x8393))|])
    let (entries : 'tags this -> (float * float) IterableIterator.t) =
      fun (x8398 : 'tags this) ->
        IterableIterator.t_of_js
          (fun (x8400 : Ojs.t) ->
             let x8401 = x8400 in
             ((Ojs.float_of_js (Ojs.array_get x8401 0)),
               (Ojs.float_of_js (Ojs.array_get x8401 1))))
          (Ojs.call (this_to_js Obj.magic x8398) "entries" [||])
    let (keys : 'tags this -> float IterableIterator.t) =
      fun (x8402 : 'tags this) ->
        IterableIterator.t_of_js Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x8402) "keys" [||])
    let (values : 'tags this -> float IterableIterator.t) =
      fun (x8405 : 'tags this) ->
        IterableIterator.t_of_js Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x8405) "values" [||])
    let (get_BYTES_PER_ELEMENT : 'tags this -> float) =
      fun (x8408 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x8408)
             "BYTES_PER_ELEMENT")
    let (get_buffer : 'tags this -> ArrayBufferLike.t) =
      fun (x8410 : 'tags this) ->
        ArrayBufferLike.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x8410) "buffer")
    let (get_byteLength : 'tags this -> float) =
      fun (x8412 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x8412) "byteLength")
    let (get_byteOffset : 'tags this -> float) =
      fun (x8414 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x8414) "byteOffset")
    let (copyWithin :
      'tags this ->
        target:float -> start:float -> ?end_:float -> unit -> 'tags this)
      =
      fun (x8421 : 'tags this) ->
        fun ~target:(x8416 : float) ->
          fun ~start:(x8417 : float) ->
            fun ?end_:(x8418 : float option) ->
              fun () ->
                this_of_js Obj.magic
                  (let x8423 = this_to_js Obj.magic x8421 in
                   Ojs.call (Ojs.get_prop_ascii x8423 "copyWithin") "apply"
                     [|x8423;((let x8419 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x8419 "push"
                                    [|(Ojs.float_to_js x8416)|]);
                               ignore
                                 (Ojs.call x8419 "push"
                                    [|(Ojs.float_to_js x8417)|]);
                               (match x8418 with
                                | Some x8420 ->
                                    ignore
                                      (Ojs.call x8419 "push"
                                         [|(Ojs.float_to_js x8420)|])
                                | None -> ());
                               x8419))|])
    let (every :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x8432 : 'tags this) ->
        fun
          ~predicate:(x8425 :
                       value:float -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x8426 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x8434 = this_to_js Obj.magic x8432 in
                 Ojs.call (Ojs.get_prop_ascii x8434 "every") "apply"
                   [|x8434;((let x8427 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8427 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x8429 : Ojs.t) ->
                                          fun (x8430 : Ojs.t) ->
                                            fun (x8431 : Ojs.t) ->
                                              unknown_to_js
                                                (x8425
                                                   ~value:(Ojs.float_of_js
                                                             x8429)
                                                   ~index:(Ojs.float_of_js
                                                             x8430)
                                                   ~array:(t_of_js x8431))))|]);
                             (match x8426 with
                              | Some x8428 ->
                                  ignore
                                    (Ojs.call x8427 "push"
                                       [|(any_to_js x8428)|])
                              | None -> ());
                             x8427))|])
    let (fill :
      'tags this ->
        value:float -> ?start:float -> ?end_:float -> unit -> 'tags this)
      =
      fun (x8441 : 'tags this) ->
        fun ~value:(x8435 : float) ->
          fun ?start:(x8436 : float option) ->
            fun ?end_:(x8437 : float option) ->
              fun () ->
                this_of_js Obj.magic
                  (let x8443 = this_to_js Obj.magic x8441 in
                   Ojs.call (Ojs.get_prop_ascii x8443 "fill") "apply"
                     [|x8443;((let x8438 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x8438 "push"
                                    [|(Ojs.float_to_js x8435)|]);
                               (match x8436 with
                                | Some x8440 ->
                                    ignore
                                      (Ojs.call x8438 "push"
                                         [|(Ojs.float_to_js x8440)|])
                                | None -> ());
                               (match x8437 with
                                | Some x8439 ->
                                    ignore
                                      (Ojs.call x8438 "push"
                                         [|(Ojs.float_to_js x8439)|])
                                | None -> ());
                               x8438))|])
    let (filter :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> any) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x8452 : 'tags this) ->
        fun ~predicate:(x8445 : value:float -> index:float -> array:t -> any)
          ->
          fun ?thisArg:(x8446 : any option) ->
            fun () ->
              t_of_js
                (let x8454 = this_to_js Obj.magic x8452 in
                 Ojs.call (Ojs.get_prop_ascii x8454 "filter") "apply"
                   [|x8454;((let x8447 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8447 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x8449 : Ojs.t) ->
                                          fun (x8450 : Ojs.t) ->
                                            fun (x8451 : Ojs.t) ->
                                              any_to_js
                                                (x8445
                                                   ~value:(Ojs.float_of_js
                                                             x8449)
                                                   ~index:(Ojs.float_of_js
                                                             x8450)
                                                   ~array:(t_of_js x8451))))|]);
                             (match x8446 with
                              | Some x8448 ->
                                  ignore
                                    (Ojs.call x8447 "push"
                                       [|(any_to_js x8448)|])
                              | None -> ());
                             x8447))|])
    let (find :
      'tags this ->
        predicate:(value:float -> index:float -> obj:t -> bool) ->
          ?thisArg:any -> unit -> float option)
      =
      fun (x8462 : 'tags this) ->
        fun ~predicate:(x8455 : value:float -> index:float -> obj:t -> bool)
          ->
          fun ?thisArg:(x8456 : any option) ->
            fun () ->
              Ojs.option_of_js Ojs.float_of_js
                (let x8464 = this_to_js Obj.magic x8462 in
                 Ojs.call (Ojs.get_prop_ascii x8464 "find") "apply"
                   [|x8464;((let x8457 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8457 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x8459 : Ojs.t) ->
                                          fun (x8460 : Ojs.t) ->
                                            fun (x8461 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x8455
                                                   ~value:(Ojs.float_of_js
                                                             x8459)
                                                   ~index:(Ojs.float_of_js
                                                             x8460)
                                                   ~obj:(t_of_js x8461))))|]);
                             (match x8456 with
                              | Some x8458 ->
                                  ignore
                                    (Ojs.call x8457 "push"
                                       [|(any_to_js x8458)|])
                              | None -> ());
                             x8457))|])
    let (findIndex :
      'tags this ->
        predicate:(value:float -> index:float -> obj:t -> bool) ->
          ?thisArg:any -> unit -> float)
      =
      fun (x8473 : 'tags this) ->
        fun ~predicate:(x8466 : value:float -> index:float -> obj:t -> bool)
          ->
          fun ?thisArg:(x8467 : any option) ->
            fun () ->
              Ojs.float_of_js
                (let x8475 = this_to_js Obj.magic x8473 in
                 Ojs.call (Ojs.get_prop_ascii x8475 "findIndex") "apply"
                   [|x8475;((let x8468 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8468 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x8470 : Ojs.t) ->
                                          fun (x8471 : Ojs.t) ->
                                            fun (x8472 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x8466
                                                   ~value:(Ojs.float_of_js
                                                             x8470)
                                                   ~index:(Ojs.float_of_js
                                                             x8471)
                                                   ~obj:(t_of_js x8472))))|]);
                             (match x8467 with
                              | Some x8469 ->
                                  ignore
                                    (Ojs.call x8468 "push"
                                       [|(any_to_js x8469)|])
                              | None -> ());
                             x8468))|])
    let (forEach :
      'tags this ->
        callbackfn:(value:float -> index:float -> array:t -> unit) ->
          ?thisArg:any -> unit -> unit)
      =
      fun (x8483 : 'tags this) ->
        fun
          ~callbackfn:(x8476 : value:float -> index:float -> array:t -> unit)
          ->
          fun ?thisArg:(x8477 : any option) ->
            fun () ->
              ignore
                (let x8485 = this_to_js Obj.magic x8483 in
                 Ojs.call (Ojs.get_prop_ascii x8485 "forEach") "apply"
                   [|x8485;((let x8478 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8478 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x8480 : Ojs.t) ->
                                          fun (x8481 : Ojs.t) ->
                                            fun (x8482 : Ojs.t) ->
                                              x8476
                                                ~value:(Ojs.float_of_js x8480)
                                                ~index:(Ojs.float_of_js x8481)
                                                ~array:(t_of_js x8482)))|]);
                             (match x8477 with
                              | Some x8479 ->
                                  ignore
                                    (Ojs.call x8478 "push"
                                       [|(any_to_js x8479)|])
                              | None -> ());
                             x8478))|])
    let (indexOf :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> float)
      =
      fun (x8490 : 'tags this) ->
        fun ~searchElement:(x8486 : float) ->
          fun ?fromIndex:(x8487 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x8492 = this_to_js Obj.magic x8490 in
                 Ojs.call (Ojs.get_prop_ascii x8492 "indexOf") "apply"
                   [|x8492;((let x8488 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8488 "push"
                                  [|(Ojs.float_to_js x8486)|]);
                             (match x8487 with
                              | Some x8489 ->
                                  ignore
                                    (Ojs.call x8488 "push"
                                       [|(Ojs.float_to_js x8489)|])
                              | None -> ());
                             x8488))|])
    let (join : 'tags this -> ?separator:string -> unit -> string) =
      fun (x8496 : 'tags this) ->
        fun ?separator:(x8493 : string option) ->
          fun () ->
            Ojs.string_of_js
              (let x8498 = this_to_js Obj.magic x8496 in
               Ojs.call (Ojs.get_prop_ascii x8498 "join") "apply"
                 [|x8498;((let x8494 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x8493 with
                            | Some x8495 ->
                                ignore
                                  (Ojs.call x8494 "push"
                                     [|(Ojs.string_to_js x8495)|])
                            | None -> ());
                           x8494))|])
    let (lastIndexOf :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> float)
      =
      fun (x8503 : 'tags this) ->
        fun ~searchElement:(x8499 : float) ->
          fun ?fromIndex:(x8500 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x8505 = this_to_js Obj.magic x8503 in
                 Ojs.call (Ojs.get_prop_ascii x8505 "lastIndexOf") "apply"
                   [|x8505;((let x8501 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8501 "push"
                                  [|(Ojs.float_to_js x8499)|]);
                             (match x8500 with
                              | Some x8502 ->
                                  ignore
                                    (Ojs.call x8501 "push"
                                       [|(Ojs.float_to_js x8502)|])
                              | None -> ());
                             x8501))|])
    let (get_length : 'tags this -> float) =
      fun (x8506 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x8506) "length")
    let (map :
      'tags this ->
        callbackfn:(value:float -> index:float -> array:t -> float) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x8515 : 'tags this) ->
        fun
          ~callbackfn:(x8508 :
                        value:float -> index:float -> array:t -> float)
          ->
          fun ?thisArg:(x8509 : any option) ->
            fun () ->
              t_of_js
                (let x8517 = this_to_js Obj.magic x8515 in
                 Ojs.call (Ojs.get_prop_ascii x8517 "map") "apply"
                   [|x8517;((let x8510 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8510 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x8512 : Ojs.t) ->
                                          fun (x8513 : Ojs.t) ->
                                            fun (x8514 : Ojs.t) ->
                                              Ojs.float_to_js
                                                (x8508
                                                   ~value:(Ojs.float_of_js
                                                             x8512)
                                                   ~index:(Ojs.float_of_js
                                                             x8513)
                                                   ~array:(t_of_js x8514))))|]);
                             (match x8509 with
                              | Some x8511 ->
                                  ignore
                                    (Ojs.call x8510 "push"
                                       [|(any_to_js x8511)|])
                              | None -> ());
                             x8510))|])
    let (reduce :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> float)
      =
      fun (x8523 : 'tags this) ->
        fun
          ~callbackfn:(x8518 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x8523) "reduce"
               [|(Ojs.fun_to_js 4
                    (fun (x8519 : Ojs.t) ->
                       fun (x8520 : Ojs.t) ->
                         fun (x8521 : Ojs.t) ->
                           fun (x8522 : Ojs.t) ->
                             Ojs.float_to_js
                               (x8518 ~previousValue:(Ojs.float_of_js x8519)
                                  ~currentValue:(Ojs.float_of_js x8520)
                                  ~currentIndex:(Ojs.float_of_js x8521)
                                  ~array:(t_of_js x8522))))|])
    let (reduce' :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> initialValue:float -> float)
      =
      fun (x8531 : 'tags this) ->
        fun
          ~callbackfn:(x8525 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          fun ~initialValue:(x8530 : float) ->
            Ojs.float_of_js
              (Ojs.call (this_to_js Obj.magic x8531) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x8526 : Ojs.t) ->
                         fun (x8527 : Ojs.t) ->
                           fun (x8528 : Ojs.t) ->
                             fun (x8529 : Ojs.t) ->
                               Ojs.float_to_js
                                 (x8525
                                    ~previousValue:(Ojs.float_of_js x8526)
                                    ~currentValue:(Ojs.float_of_js x8527)
                                    ~currentIndex:(Ojs.float_of_js x8528)
                                    ~array:(t_of_js x8529))));(Ojs.float_to_js
                                                                 x8530)|])
    let (reduce'' :
      'tags this ->
        callbackfn:(previousValue:'U ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x8539 : 'tags this) ->
        fun
          ~callbackfn:(x8533 :
                        previousValue:'U ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x8538 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic x8539) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x8534 : Ojs.t) ->
                         fun (x8535 : Ojs.t) ->
                           fun (x8536 : Ojs.t) ->
                             fun (x8537 : Ojs.t) ->
                               Obj.magic
                                 (x8533 ~previousValue:(Obj.magic x8534)
                                    ~currentValue:(Ojs.float_of_js x8535)
                                    ~currentIndex:(Ojs.float_of_js x8536)
                                    ~array:(t_of_js x8537))));(Obj.magic
                                                                 x8538)|])
    let (reduceRight :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> float)
      =
      fun (x8546 : 'tags this) ->
        fun
          ~callbackfn:(x8541 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x8546) "reduceRight"
               [|(Ojs.fun_to_js 4
                    (fun (x8542 : Ojs.t) ->
                       fun (x8543 : Ojs.t) ->
                         fun (x8544 : Ojs.t) ->
                           fun (x8545 : Ojs.t) ->
                             Ojs.float_to_js
                               (x8541 ~previousValue:(Ojs.float_of_js x8542)
                                  ~currentValue:(Ojs.float_of_js x8543)
                                  ~currentIndex:(Ojs.float_of_js x8544)
                                  ~array:(t_of_js x8545))))|])
    let (reduceRight' :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> initialValue:float -> float)
      =
      fun (x8554 : 'tags this) ->
        fun
          ~callbackfn:(x8548 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          fun ~initialValue:(x8553 : float) ->
            Ojs.float_of_js
              (Ojs.call (this_to_js Obj.magic x8554) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x8549 : Ojs.t) ->
                         fun (x8550 : Ojs.t) ->
                           fun (x8551 : Ojs.t) ->
                             fun (x8552 : Ojs.t) ->
                               Ojs.float_to_js
                                 (x8548
                                    ~previousValue:(Ojs.float_of_js x8549)
                                    ~currentValue:(Ojs.float_of_js x8550)
                                    ~currentIndex:(Ojs.float_of_js x8551)
                                    ~array:(t_of_js x8552))));(Ojs.float_to_js
                                                                 x8553)|])
    let (reduceRight'' :
      'tags this ->
        callbackfn:(previousValue:'U ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x8562 : 'tags this) ->
        fun
          ~callbackfn:(x8556 :
                        previousValue:'U ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x8561 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic x8562) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x8557 : Ojs.t) ->
                         fun (x8558 : Ojs.t) ->
                           fun (x8559 : Ojs.t) ->
                             fun (x8560 : Ojs.t) ->
                               Obj.magic
                                 (x8556 ~previousValue:(Obj.magic x8557)
                                    ~currentValue:(Ojs.float_of_js x8558)
                                    ~currentIndex:(Ojs.float_of_js x8559)
                                    ~array:(t_of_js x8560))));(Obj.magic
                                                                 x8561)|])
    let (reverse : 'tags this -> t) =
      fun (x8564 : 'tags this) ->
        t_of_js (Ojs.call (this_to_js Obj.magic x8564) "reverse" [||])
    let (set_ :
      'tags this -> array:float ArrayLike.t -> ?offset:float -> unit -> unit)
      =
      fun (x8571 : 'tags this) ->
        fun ~array:(x8566 : float ArrayLike.t) ->
          fun ?offset:(x8567 : float option) ->
            fun () ->
              ignore
                (let x8573 = this_to_js Obj.magic x8571 in
                 Ojs.call (Ojs.get_prop_ascii x8573 "set") "apply"
                   [|x8573;((let x8568 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8568 "push"
                                  [|(ArrayLike.t_to_js Ojs.float_to_js x8566)|]);
                             (match x8567 with
                              | Some x8569 ->
                                  ignore
                                    (Ojs.call x8568 "push"
                                       [|(Ojs.float_to_js x8569)|])
                              | None -> ());
                             x8568))|])
    let (slice : 'tags this -> ?start:float -> ?end_:float -> unit -> t) =
      fun (x8579 : 'tags this) ->
        fun ?start:(x8574 : float option) ->
          fun ?end_:(x8575 : float option) ->
            fun () ->
              t_of_js
                (let x8581 = this_to_js Obj.magic x8579 in
                 Ojs.call (Ojs.get_prop_ascii x8581 "slice") "apply"
                   [|x8581;((let x8576 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x8574 with
                              | Some x8578 ->
                                  ignore
                                    (Ojs.call x8576 "push"
                                       [|(Ojs.float_to_js x8578)|])
                              | None -> ());
                             (match x8575 with
                              | Some x8577 ->
                                  ignore
                                    (Ojs.call x8576 "push"
                                       [|(Ojs.float_to_js x8577)|])
                              | None -> ());
                             x8576))|])
    let (some :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x8589 : 'tags this) ->
        fun
          ~predicate:(x8582 :
                       value:float -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x8583 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x8591 = this_to_js Obj.magic x8589 in
                 Ojs.call (Ojs.get_prop_ascii x8591 "some") "apply"
                   [|x8591;((let x8584 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8584 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x8586 : Ojs.t) ->
                                          fun (x8587 : Ojs.t) ->
                                            fun (x8588 : Ojs.t) ->
                                              unknown_to_js
                                                (x8582
                                                   ~value:(Ojs.float_of_js
                                                             x8586)
                                                   ~index:(Ojs.float_of_js
                                                             x8587)
                                                   ~array:(t_of_js x8588))))|]);
                             (match x8583 with
                              | Some x8585 ->
                                  ignore
                                    (Ojs.call x8584 "push"
                                       [|(any_to_js x8585)|])
                              | None -> ());
                             x8584))|])
    let (sort :
      'tags this ->
        ?compareFn:(a:float -> b:float -> float) -> unit -> 'tags this)
      =
      fun (x8597 : 'tags this) ->
        fun ?compareFn:(x8592 : (a:float -> b:float -> float) option) ->
          fun () ->
            this_of_js Obj.magic
              (let x8599 = this_to_js Obj.magic x8597 in
               Ojs.call (Ojs.get_prop_ascii x8599 "sort") "apply"
                 [|x8599;((let x8593 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x8592 with
                            | Some x8594 ->
                                ignore
                                  (Ojs.call x8593 "push"
                                     [|(Ojs.fun_to_js 2
                                          (fun (x8595 : Ojs.t) ->
                                             fun (x8596 : Ojs.t) ->
                                               Ojs.float_to_js
                                                 (x8594
                                                    ~a:(Ojs.float_of_js x8595)
                                                    ~b:(Ojs.float_of_js x8596))))|])
                            | None -> ());
                           x8593))|])
    let (subarray : 'tags this -> ?begin_:float -> ?end_:float -> unit -> t)
      =
      fun (x8606 : 'tags this) ->
        fun ?begin_:(x8601 : float option) ->
          fun ?end_:(x8602 : float option) ->
            fun () ->
              t_of_js
                (let x8608 = this_to_js Obj.magic x8606 in
                 Ojs.call (Ojs.get_prop_ascii x8608 "subarray") "apply"
                   [|x8608;((let x8603 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x8601 with
                              | Some x8605 ->
                                  ignore
                                    (Ojs.call x8603 "push"
                                       [|(Ojs.float_to_js x8605)|])
                              | None -> ());
                             (match x8602 with
                              | Some x8604 ->
                                  ignore
                                    (Ojs.call x8603 "push"
                                       [|(Ojs.float_to_js x8604)|])
                              | None -> ());
                             x8603))|])
    let (toLocaleString : 'tags this -> string) =
      fun (x8609 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x8609) "toLocaleString" [||])
    let (toString : 'tags this -> string) =
      fun (x8611 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x8611) "toString" [||])
    let (valueOf : 'tags this -> t) =
      fun (x8613 : 'tags this) ->
        t_of_js (Ojs.call (this_to_js Obj.magic x8613) "valueOf" [||])
    let (get : 'tags this -> float -> float) =
      fun (x8615 : 'tags this) ->
        fun (x8617 : float) ->
          Ojs.float_of_js
            (Ojs.get_prop (this_to_js Obj.magic x8615)
               (Ojs.float_to_js x8617))
    let (set : 'tags this -> float -> float -> unit) =
      fun (x8618 : 'tags this) ->
        fun (x8620 : float) ->
          fun (x8621 : float) ->
            Ojs.set_prop (this_to_js Obj.magic x8618) (Ojs.float_to_js x8620)
              (Ojs.float_to_js x8621)
    let (create : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Int16Array") [||])
    let (create' : float Iterable.t -> t) =
      fun (x8622 : float Iterable.t) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Int16Array")
             [|(Iterable.t_to_js Ojs.float_to_js x8622)|])
    let (from :
      arrayLike:float Iterable.t ->
        ?mapfn:(v:float -> k:float -> float) -> ?thisArg:any -> unit -> t)
      =
      fun ~arrayLike:(x8624 : float Iterable.t) ->
        fun ?mapfn:(x8625 : (v:float -> k:float -> float) option) ->
          fun ?thisArg:(x8626 : any option) ->
            fun () ->
              t_of_js
                (let x8633 = Ojs.get_prop_ascii Ojs.global "Int16Array" in
                 Ojs.call (Ojs.get_prop_ascii x8633 "from") "apply"
                   [|x8633;((let x8627 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8627 "push"
                                  [|(Iterable.t_to_js Ojs.float_to_js x8624)|]);
                             (match x8625 with
                              | Some x8629 ->
                                  ignore
                                    (Ojs.call x8627 "push"
                                       [|(Ojs.fun_to_js 2
                                            (fun (x8630 : Ojs.t) ->
                                               fun (x8631 : Ojs.t) ->
                                                 Ojs.float_to_js
                                                   (x8629
                                                      ~v:(Ojs.float_of_js
                                                            x8630)
                                                      ~k:(Ojs.float_of_js
                                                            x8631))))|])
                              | None -> ());
                             (match x8626 with
                              | Some x8628 ->
                                  ignore
                                    (Ojs.call x8627 "push"
                                       [|(any_to_js x8628)|])
                              | None -> ());
                             x8627))|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Int16Array")
             "prototype")
    let (create'' : float -> t) =
      fun (x8634 : float) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Int16Array")
             [|(Ojs.float_to_js x8634)|])
    let (create''' :
      [ `U1 of float ArrayLike.t  | `U2 of ArrayBufferLike.t ] -> t) =
      fun (x8635 : [ `U1 of float ArrayLike.t  | `U2 of ArrayBufferLike.t ])
        ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Int16Array")
             [|((match x8635 with
                 | `U1 x8636 -> ArrayLike.t_to_js Ojs.float_to_js x8636
                 | `U2 x8638 -> ArrayBufferLike.t_to_js x8638))|])
    let (create'''' :
      buffer:ArrayBufferLike.t ->
        ?byteOffset:float -> ?length:float -> unit -> t)
      =
      fun ~buffer:(x8639 : ArrayBufferLike.t) ->
        fun ?byteOffset:(x8640 : float option) ->
          fun ?length:(x8641 : float option) ->
            fun () ->
              t_of_js
                (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "Int16Array")
                   (let x8642 =
                      Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                        [||] in
                    ignore
                      (Ojs.call x8642 "push"
                         [|(ArrayBufferLike.t_to_js x8639)|]);
                    (match x8640 with
                     | Some x8644 ->
                         ignore
                           (Ojs.call x8642 "push" [|(Ojs.float_to_js x8644)|])
                     | None -> ());
                    (match x8641 with
                     | Some x8643 ->
                         ignore
                           (Ojs.call x8642 "push" [|(Ojs.float_to_js x8643)|])
                     | None -> ());
                    x8642))
    let (bytes_per_element : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Int16Array")
             "BYTES_PER_ELEMENT")
    let (of_ : float list -> t) =
      fun (x8645 : float list) ->
        t_of_js
          (let x8648 = Ojs.get_prop_ascii Ojs.global "Int16Array" in
           Ojs.call (Ojs.get_prop_ascii x8648 "of") "apply"
             [|x8648;((let x8646 =
                         Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                           [||] in
                       List.iter
                         (fun (x8647 : float) ->
                            ignore
                              (Ojs.call x8646 "push"
                                 [|(Ojs.float_to_js x8647)|])) x8645;
                       x8646))|])
    let (from' : float ArrayLike.t -> t) =
      fun (x8649 : float ArrayLike.t) ->
        t_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Int16Array") "from"
             [|(ArrayLike.t_to_js Ojs.float_to_js x8649)|])
    let (from'' :
      arrayLike:'T ArrayLike.t ->
        mapfn:(v:'T -> k:float -> float) -> ?thisArg:any -> unit -> t)
      =
      fun ~arrayLike:(x8651 : 'T ArrayLike.t) ->
        fun ~mapfn:(x8652 : v:'T -> k:float -> float) ->
          fun ?thisArg:(x8653 : any option) ->
            fun () ->
              t_of_js
                (let x8659 = Ojs.get_prop_ascii Ojs.global "Int16Array" in
                 Ojs.call (Ojs.get_prop_ascii x8659 "from") "apply"
                   [|x8659;((let x8654 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8654 "push"
                                  [|(ArrayLike.t_to_js Obj.magic x8651)|]);
                             ignore
                               (Ojs.call x8654 "push"
                                  [|(Ojs.fun_to_js 2
                                       (fun (x8656 : Ojs.t) ->
                                          fun (x8657 : Ojs.t) ->
                                            Ojs.float_to_js
                                              (x8652 ~v:(Obj.magic x8656)
                                                 ~k:(Ojs.float_of_js x8657))))|]);
                             (match x8653 with
                              | Some x8655 ->
                                  ignore
                                    (Ojs.call x8654 "push"
                                       [|(any_to_js x8655)|])
                              | None -> ());
                             x8654))|])
    let cast_from = Obj.magic
  end
module BigUint64Array =
  struct
    type t =
      [ `BigUint64Array  | bigint ArrayLike.tags_1
      | bigint IterableIterator.tags_1] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x8661 : Ojs.t) -> t_of_js x8661
    and t_0_to_js : t_0 -> Ojs.t = fun (x8660 : t) -> t_to_js x8660
    type tags =
      [ `BigUint64Array  | bigint ArrayLike.tags_1
      | bigint IterableIterator.tags_1]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `BigUint64Array ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x8664 : Ojs.t) -> intf_of_js __tags_of_js x8664
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x8662 : __tags intf) -> intf_to_js __tags_to_js x8662
    let (at : 'tags this -> index:float -> bigint option) =
      fun (x8667 : 'tags this) ->
        fun ~index:(x8666 : float) ->
          Ojs.option_of_js bigint_of_js
            (Ojs.call (this_to_js Obj.magic x8667) "at"
               [|(Ojs.float_to_js x8666)|])
    let (get_BYTES_PER_ELEMENT : 'tags this -> float) =
      fun (x8670 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x8670)
             "BYTES_PER_ELEMENT")
    let (get_buffer : 'tags this -> ArrayBufferLike.t) =
      fun (x8672 : 'tags this) ->
        ArrayBufferLike.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x8672) "buffer")
    let (get_byteLength : 'tags this -> float) =
      fun (x8674 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x8674) "byteLength")
    let (get_byteOffset : 'tags this -> float) =
      fun (x8676 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x8676) "byteOffset")
    let (copyWithin :
      'tags this ->
        target:float -> start:float -> ?end_:float -> unit -> 'tags this)
      =
      fun (x8683 : 'tags this) ->
        fun ~target:(x8678 : float) ->
          fun ~start:(x8679 : float) ->
            fun ?end_:(x8680 : float option) ->
              fun () ->
                this_of_js Obj.magic
                  (let x8685 = this_to_js Obj.magic x8683 in
                   Ojs.call (Ojs.get_prop_ascii x8685 "copyWithin") "apply"
                     [|x8685;((let x8681 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x8681 "push"
                                    [|(Ojs.float_to_js x8678)|]);
                               ignore
                                 (Ojs.call x8681 "push"
                                    [|(Ojs.float_to_js x8679)|]);
                               (match x8680 with
                                | Some x8682 ->
                                    ignore
                                      (Ojs.call x8681 "push"
                                         [|(Ojs.float_to_js x8682)|])
                                | None -> ());
                               x8681))|])
    let (entries : 'tags this -> (float * bigint) IterableIterator.t) =
      fun (x8687 : 'tags this) ->
        IterableIterator.t_of_js
          (fun (x8689 : Ojs.t) ->
             let x8690 = x8689 in
             ((Ojs.float_of_js (Ojs.array_get x8690 0)),
               (bigint_of_js (Ojs.array_get x8690 1))))
          (Ojs.call (this_to_js Obj.magic x8687) "entries" [||])
    let (every :
      'tags this ->
        predicate:(value:bigint -> index:float -> array:t -> bool) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x8698 : 'tags this) ->
        fun
          ~predicate:(x8691 : value:bigint -> index:float -> array:t -> bool)
          ->
          fun ?thisArg:(x8692 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x8700 = this_to_js Obj.magic x8698 in
                 Ojs.call (Ojs.get_prop_ascii x8700 "every") "apply"
                   [|x8700;((let x8693 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8693 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x8695 : Ojs.t) ->
                                          fun (x8696 : Ojs.t) ->
                                            fun (x8697 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x8691
                                                   ~value:(bigint_of_js x8695)
                                                   ~index:(Ojs.float_of_js
                                                             x8696)
                                                   ~array:(t_of_js x8697))))|]);
                             (match x8692 with
                              | Some x8694 ->
                                  ignore
                                    (Ojs.call x8693 "push"
                                       [|(any_to_js x8694)|])
                              | None -> ());
                             x8693))|])
    let (fill :
      'tags this ->
        value:bigint -> ?start:float -> ?end_:float -> unit -> 'tags this)
      =
      fun (x8707 : 'tags this) ->
        fun ~value:(x8701 : bigint) ->
          fun ?start:(x8702 : float option) ->
            fun ?end_:(x8703 : float option) ->
              fun () ->
                this_of_js Obj.magic
                  (let x8709 = this_to_js Obj.magic x8707 in
                   Ojs.call (Ojs.get_prop_ascii x8709 "fill") "apply"
                     [|x8709;((let x8704 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x8704 "push"
                                    [|(bigint_to_js x8701)|]);
                               (match x8702 with
                                | Some x8706 ->
                                    ignore
                                      (Ojs.call x8704 "push"
                                         [|(Ojs.float_to_js x8706)|])
                                | None -> ());
                               (match x8703 with
                                | Some x8705 ->
                                    ignore
                                      (Ojs.call x8704 "push"
                                         [|(Ojs.float_to_js x8705)|])
                                | None -> ());
                               x8704))|])
    let (filter :
      'tags this ->
        predicate:(value:bigint -> index:float -> array:t -> any) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x8718 : 'tags this) ->
        fun
          ~predicate:(x8711 : value:bigint -> index:float -> array:t -> any)
          ->
          fun ?thisArg:(x8712 : any option) ->
            fun () ->
              t_of_js
                (let x8720 = this_to_js Obj.magic x8718 in
                 Ojs.call (Ojs.get_prop_ascii x8720 "filter") "apply"
                   [|x8720;((let x8713 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8713 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x8715 : Ojs.t) ->
                                          fun (x8716 : Ojs.t) ->
                                            fun (x8717 : Ojs.t) ->
                                              any_to_js
                                                (x8711
                                                   ~value:(bigint_of_js x8715)
                                                   ~index:(Ojs.float_of_js
                                                             x8716)
                                                   ~array:(t_of_js x8717))))|]);
                             (match x8712 with
                              | Some x8714 ->
                                  ignore
                                    (Ojs.call x8713 "push"
                                       [|(any_to_js x8714)|])
                              | None -> ());
                             x8713))|])
    let (find :
      'tags this ->
        predicate:(value:bigint -> index:float -> array:t -> bool) ->
          ?thisArg:any -> unit -> bigint option)
      =
      fun (x8728 : 'tags this) ->
        fun
          ~predicate:(x8721 : value:bigint -> index:float -> array:t -> bool)
          ->
          fun ?thisArg:(x8722 : any option) ->
            fun () ->
              Ojs.option_of_js bigint_of_js
                (let x8730 = this_to_js Obj.magic x8728 in
                 Ojs.call (Ojs.get_prop_ascii x8730 "find") "apply"
                   [|x8730;((let x8723 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8723 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x8725 : Ojs.t) ->
                                          fun (x8726 : Ojs.t) ->
                                            fun (x8727 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x8721
                                                   ~value:(bigint_of_js x8725)
                                                   ~index:(Ojs.float_of_js
                                                             x8726)
                                                   ~array:(t_of_js x8727))))|]);
                             (match x8722 with
                              | Some x8724 ->
                                  ignore
                                    (Ojs.call x8723 "push"
                                       [|(any_to_js x8724)|])
                              | None -> ());
                             x8723))|])
    let (findIndex :
      'tags this ->
        predicate:(value:bigint -> index:float -> array:t -> bool) ->
          ?thisArg:any -> unit -> float)
      =
      fun (x8739 : 'tags this) ->
        fun
          ~predicate:(x8732 : value:bigint -> index:float -> array:t -> bool)
          ->
          fun ?thisArg:(x8733 : any option) ->
            fun () ->
              Ojs.float_of_js
                (let x8741 = this_to_js Obj.magic x8739 in
                 Ojs.call (Ojs.get_prop_ascii x8741 "findIndex") "apply"
                   [|x8741;((let x8734 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8734 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x8736 : Ojs.t) ->
                                          fun (x8737 : Ojs.t) ->
                                            fun (x8738 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x8732
                                                   ~value:(bigint_of_js x8736)
                                                   ~index:(Ojs.float_of_js
                                                             x8737)
                                                   ~array:(t_of_js x8738))))|]);
                             (match x8733 with
                              | Some x8735 ->
                                  ignore
                                    (Ojs.call x8734 "push"
                                       [|(any_to_js x8735)|])
                              | None -> ());
                             x8734))|])
    let (forEach :
      'tags this ->
        callbackfn:(value:bigint -> index:float -> array:t -> unit) ->
          ?thisArg:any -> unit -> unit)
      =
      fun (x8749 : 'tags this) ->
        fun
          ~callbackfn:(x8742 :
                        value:bigint -> index:float -> array:t -> unit)
          ->
          fun ?thisArg:(x8743 : any option) ->
            fun () ->
              ignore
                (let x8751 = this_to_js Obj.magic x8749 in
                 Ojs.call (Ojs.get_prop_ascii x8751 "forEach") "apply"
                   [|x8751;((let x8744 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8744 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x8746 : Ojs.t) ->
                                          fun (x8747 : Ojs.t) ->
                                            fun (x8748 : Ojs.t) ->
                                              x8742
                                                ~value:(bigint_of_js x8746)
                                                ~index:(Ojs.float_of_js x8747)
                                                ~array:(t_of_js x8748)))|]);
                             (match x8743 with
                              | Some x8745 ->
                                  ignore
                                    (Ojs.call x8744 "push"
                                       [|(any_to_js x8745)|])
                              | None -> ());
                             x8744))|])
    let (includes :
      'tags this -> searchElement:bigint -> ?fromIndex:float -> unit -> bool)
      =
      fun (x8756 : 'tags this) ->
        fun ~searchElement:(x8752 : bigint) ->
          fun ?fromIndex:(x8753 : float option) ->
            fun () ->
              Ojs.bool_of_js
                (let x8758 = this_to_js Obj.magic x8756 in
                 Ojs.call (Ojs.get_prop_ascii x8758 "includes") "apply"
                   [|x8758;((let x8754 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8754 "push"
                                  [|(bigint_to_js x8752)|]);
                             (match x8753 with
                              | Some x8755 ->
                                  ignore
                                    (Ojs.call x8754 "push"
                                       [|(Ojs.float_to_js x8755)|])
                              | None -> ());
                             x8754))|])
    let (indexOf :
      'tags this -> searchElement:bigint -> ?fromIndex:float -> unit -> float)
      =
      fun (x8763 : 'tags this) ->
        fun ~searchElement:(x8759 : bigint) ->
          fun ?fromIndex:(x8760 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x8765 = this_to_js Obj.magic x8763 in
                 Ojs.call (Ojs.get_prop_ascii x8765 "indexOf") "apply"
                   [|x8765;((let x8761 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8761 "push"
                                  [|(bigint_to_js x8759)|]);
                             (match x8760 with
                              | Some x8762 ->
                                  ignore
                                    (Ojs.call x8761 "push"
                                       [|(Ojs.float_to_js x8762)|])
                              | None -> ());
                             x8761))|])
    let (join : 'tags this -> ?separator:string -> unit -> string) =
      fun (x8769 : 'tags this) ->
        fun ?separator:(x8766 : string option) ->
          fun () ->
            Ojs.string_of_js
              (let x8771 = this_to_js Obj.magic x8769 in
               Ojs.call (Ojs.get_prop_ascii x8771 "join") "apply"
                 [|x8771;((let x8767 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x8766 with
                            | Some x8768 ->
                                ignore
                                  (Ojs.call x8767 "push"
                                     [|(Ojs.string_to_js x8768)|])
                            | None -> ());
                           x8767))|])
    let (keys : 'tags this -> float IterableIterator.t) =
      fun (x8772 : 'tags this) ->
        IterableIterator.t_of_js Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x8772) "keys" [||])
    let (lastIndexOf :
      'tags this -> searchElement:bigint -> ?fromIndex:float -> unit -> float)
      =
      fun (x8779 : 'tags this) ->
        fun ~searchElement:(x8775 : bigint) ->
          fun ?fromIndex:(x8776 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x8781 = this_to_js Obj.magic x8779 in
                 Ojs.call (Ojs.get_prop_ascii x8781 "lastIndexOf") "apply"
                   [|x8781;((let x8777 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8777 "push"
                                  [|(bigint_to_js x8775)|]);
                             (match x8776 with
                              | Some x8778 ->
                                  ignore
                                    (Ojs.call x8777 "push"
                                       [|(Ojs.float_to_js x8778)|])
                              | None -> ());
                             x8777))|])
    let (get_length : 'tags this -> float) =
      fun (x8782 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x8782) "length")
    let (map :
      'tags this ->
        callbackfn:(value:bigint -> index:float -> array:t -> bigint) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x8791 : 'tags this) ->
        fun
          ~callbackfn:(x8784 :
                        value:bigint -> index:float -> array:t -> bigint)
          ->
          fun ?thisArg:(x8785 : any option) ->
            fun () ->
              t_of_js
                (let x8793 = this_to_js Obj.magic x8791 in
                 Ojs.call (Ojs.get_prop_ascii x8793 "map") "apply"
                   [|x8793;((let x8786 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8786 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x8788 : Ojs.t) ->
                                          fun (x8789 : Ojs.t) ->
                                            fun (x8790 : Ojs.t) ->
                                              bigint_to_js
                                                (x8784
                                                   ~value:(bigint_of_js x8788)
                                                   ~index:(Ojs.float_of_js
                                                             x8789)
                                                   ~array:(t_of_js x8790))))|]);
                             (match x8785 with
                              | Some x8787 ->
                                  ignore
                                    (Ojs.call x8786 "push"
                                       [|(any_to_js x8787)|])
                              | None -> ());
                             x8786))|])
    let (reduce :
      'tags this ->
        callbackfn:(previousValue:bigint ->
                      currentValue:bigint ->
                        currentIndex:float -> array:t -> bigint)
          -> bigint)
      =
      fun (x8799 : 'tags this) ->
        fun
          ~callbackfn:(x8794 :
                        previousValue:bigint ->
                          currentValue:bigint ->
                            currentIndex:float -> array:t -> bigint)
          ->
          bigint_of_js
            (Ojs.call (this_to_js Obj.magic x8799) "reduce"
               [|(Ojs.fun_to_js 4
                    (fun (x8795 : Ojs.t) ->
                       fun (x8796 : Ojs.t) ->
                         fun (x8797 : Ojs.t) ->
                           fun (x8798 : Ojs.t) ->
                             bigint_to_js
                               (x8794 ~previousValue:(bigint_of_js x8795)
                                  ~currentValue:(bigint_of_js x8796)
                                  ~currentIndex:(Ojs.float_of_js x8797)
                                  ~array:(t_of_js x8798))))|])
    let (reduce' :
      'tags this ->
        callbackfn:(previousValue:'U ->
                      currentValue:bigint ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x8807 : 'tags this) ->
        fun
          ~callbackfn:(x8801 :
                        previousValue:'U ->
                          currentValue:bigint ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x8806 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic x8807) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x8802 : Ojs.t) ->
                         fun (x8803 : Ojs.t) ->
                           fun (x8804 : Ojs.t) ->
                             fun (x8805 : Ojs.t) ->
                               Obj.magic
                                 (x8801 ~previousValue:(Obj.magic x8802)
                                    ~currentValue:(bigint_of_js x8803)
                                    ~currentIndex:(Ojs.float_of_js x8804)
                                    ~array:(t_of_js x8805))));(Obj.magic
                                                                 x8806)|])
    let (reduceRight :
      'tags this ->
        callbackfn:(previousValue:bigint ->
                      currentValue:bigint ->
                        currentIndex:float -> array:t -> bigint)
          -> bigint)
      =
      fun (x8814 : 'tags this) ->
        fun
          ~callbackfn:(x8809 :
                        previousValue:bigint ->
                          currentValue:bigint ->
                            currentIndex:float -> array:t -> bigint)
          ->
          bigint_of_js
            (Ojs.call (this_to_js Obj.magic x8814) "reduceRight"
               [|(Ojs.fun_to_js 4
                    (fun (x8810 : Ojs.t) ->
                       fun (x8811 : Ojs.t) ->
                         fun (x8812 : Ojs.t) ->
                           fun (x8813 : Ojs.t) ->
                             bigint_to_js
                               (x8809 ~previousValue:(bigint_of_js x8810)
                                  ~currentValue:(bigint_of_js x8811)
                                  ~currentIndex:(Ojs.float_of_js x8812)
                                  ~array:(t_of_js x8813))))|])
    let (reduceRight' :
      'tags this ->
        callbackfn:(previousValue:'U ->
                      currentValue:bigint ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x8822 : 'tags this) ->
        fun
          ~callbackfn:(x8816 :
                        previousValue:'U ->
                          currentValue:bigint ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x8821 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic x8822) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x8817 : Ojs.t) ->
                         fun (x8818 : Ojs.t) ->
                           fun (x8819 : Ojs.t) ->
                             fun (x8820 : Ojs.t) ->
                               Obj.magic
                                 (x8816 ~previousValue:(Obj.magic x8817)
                                    ~currentValue:(bigint_of_js x8818)
                                    ~currentIndex:(Ojs.float_of_js x8819)
                                    ~array:(t_of_js x8820))));(Obj.magic
                                                                 x8821)|])
    let (reverse : 'tags this -> 'tags this) =
      fun (x8824 : 'tags this) ->
        this_of_js Obj.magic
          (Ojs.call (this_to_js Obj.magic x8824) "reverse" [||])
    let (set_ :
      'tags this -> array:bigint ArrayLike.t -> ?offset:float -> unit -> unit)
      =
      fun (x8832 : 'tags this) ->
        fun ~array:(x8827 : bigint ArrayLike.t) ->
          fun ?offset:(x8828 : float option) ->
            fun () ->
              ignore
                (let x8834 = this_to_js Obj.magic x8832 in
                 Ojs.call (Ojs.get_prop_ascii x8834 "set") "apply"
                   [|x8834;((let x8829 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8829 "push"
                                  [|(ArrayLike.t_to_js bigint_to_js x8827)|]);
                             (match x8828 with
                              | Some x8830 ->
                                  ignore
                                    (Ojs.call x8829 "push"
                                       [|(Ojs.float_to_js x8830)|])
                              | None -> ());
                             x8829))|])
    let (slice : 'tags this -> ?start:float -> ?end_:float -> unit -> t) =
      fun (x8840 : 'tags this) ->
        fun ?start:(x8835 : float option) ->
          fun ?end_:(x8836 : float option) ->
            fun () ->
              t_of_js
                (let x8842 = this_to_js Obj.magic x8840 in
                 Ojs.call (Ojs.get_prop_ascii x8842 "slice") "apply"
                   [|x8842;((let x8837 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x8835 with
                              | Some x8839 ->
                                  ignore
                                    (Ojs.call x8837 "push"
                                       [|(Ojs.float_to_js x8839)|])
                              | None -> ());
                             (match x8836 with
                              | Some x8838 ->
                                  ignore
                                    (Ojs.call x8837 "push"
                                       [|(Ojs.float_to_js x8838)|])
                              | None -> ());
                             x8837))|])
    let (some :
      'tags this ->
        predicate:(value:bigint -> index:float -> array:t -> bool) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x8850 : 'tags this) ->
        fun
          ~predicate:(x8843 : value:bigint -> index:float -> array:t -> bool)
          ->
          fun ?thisArg:(x8844 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x8852 = this_to_js Obj.magic x8850 in
                 Ojs.call (Ojs.get_prop_ascii x8852 "some") "apply"
                   [|x8852;((let x8845 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8845 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x8847 : Ojs.t) ->
                                          fun (x8848 : Ojs.t) ->
                                            fun (x8849 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x8843
                                                   ~value:(bigint_of_js x8847)
                                                   ~index:(Ojs.float_of_js
                                                             x8848)
                                                   ~array:(t_of_js x8849))))|]);
                             (match x8844 with
                              | Some x8846 ->
                                  ignore
                                    (Ojs.call x8845 "push"
                                       [|(any_to_js x8846)|])
                              | None -> ());
                             x8845))|])
    let (sort :
      'tags this ->
        ?compareFn:(a:bigint -> b:bigint -> [ `U1 of float  | `U2 of bigint ])
          -> unit -> 'tags this)
      =
      fun (x8860 : 'tags this) ->
        fun
          ?compareFn:(x8853 :
                       (a:bigint ->
                          b:bigint -> [ `U1 of float  | `U2 of bigint ])
                         option)
          ->
          fun () ->
            this_of_js Obj.magic
              (let x8862 = this_to_js Obj.magic x8860 in
               Ojs.call (Ojs.get_prop_ascii x8862 "sort") "apply"
                 [|x8862;((let x8854 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x8853 with
                            | Some x8855 ->
                                ignore
                                  (Ojs.call x8854 "push"
                                     [|(Ojs.fun_to_js 2
                                          (fun (x8856 : Ojs.t) ->
                                             fun (x8857 : Ojs.t) ->
                                               match x8855
                                                       ~a:(bigint_of_js x8856)
                                                       ~b:(bigint_of_js x8857)
                                               with
                                               | `U1 x8858 ->
                                                   Ojs.float_to_js x8858
                                               | `U2 x8859 ->
                                                   bigint_to_js x8859))|])
                            | None -> ());
                           x8854))|])
    let (subarray : 'tags this -> ?begin_:float -> ?end_:float -> unit -> t)
      =
      fun (x8869 : 'tags this) ->
        fun ?begin_:(x8864 : float option) ->
          fun ?end_:(x8865 : float option) ->
            fun () ->
              t_of_js
                (let x8871 = this_to_js Obj.magic x8869 in
                 Ojs.call (Ojs.get_prop_ascii x8871 "subarray") "apply"
                   [|x8871;((let x8866 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x8864 with
                              | Some x8868 ->
                                  ignore
                                    (Ojs.call x8866 "push"
                                       [|(Ojs.float_to_js x8868)|])
                              | None -> ());
                             (match x8865 with
                              | Some x8867 ->
                                  ignore
                                    (Ojs.call x8866 "push"
                                       [|(Ojs.float_to_js x8867)|])
                              | None -> ());
                             x8866))|])
    let (toLocaleString : 'tags this -> string) =
      fun (x8872 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x8872) "toLocaleString" [||])
    let (toString : 'tags this -> string) =
      fun (x8874 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x8874) "toString" [||])
    let (valueOf : 'tags this -> t) =
      fun (x8876 : 'tags this) ->
        t_of_js (Ojs.call (this_to_js Obj.magic x8876) "valueOf" [||])
    let (values : 'tags this -> bigint IterableIterator.t) =
      fun (x8878 : 'tags this) ->
        IterableIterator.t_of_js bigint_of_js
          (Ojs.call (this_to_js Obj.magic x8878) "values" [||])
    let (get : 'tags this -> float -> bigint) =
      fun (x8881 : 'tags this) ->
        fun (x8883 : float) ->
          bigint_of_js
            (Ojs.get_prop (this_to_js Obj.magic x8881)
               (Ojs.float_to_js x8883))
    let (set : 'tags this -> float -> bigint -> unit) =
      fun (x8884 : 'tags this) ->
        fun (x8886 : float) ->
          fun (x8887 : bigint) ->
            Ojs.set_prop (this_to_js Obj.magic x8884) (Ojs.float_to_js x8886)
              (bigint_to_js x8887)
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "BigUint64Array") "prototype")
    let (create : ?length:float -> unit -> t) =
      fun ?length:(x8888 : float option) ->
        fun () ->
          t_of_js
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "BigUint64Array")
               (let x8889 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x8888 with
                 | Some x8890 ->
                     ignore
                       (Ojs.call x8889 "push" [|(Ojs.float_to_js x8890)|])
                 | None -> ());
                x8889))
    let (create' : bigint Iterable.t -> t) =
      fun (x8891 : bigint Iterable.t) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "BigUint64Array")
             [|(Iterable.t_to_js bigint_to_js x8891)|])
    let (create'' :
      buffer:ArrayBufferLike.t ->
        ?byteOffset:float -> ?length:float -> unit -> t)
      =
      fun ~buffer:(x8893 : ArrayBufferLike.t) ->
        fun ?byteOffset:(x8894 : float option) ->
          fun ?length:(x8895 : float option) ->
            fun () ->
              t_of_js
                (Ojs.new_obj_arr
                   (Ojs.get_prop_ascii Ojs.global "BigUint64Array")
                   (let x8896 =
                      Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                        [||] in
                    ignore
                      (Ojs.call x8896 "push"
                         [|(ArrayBufferLike.t_to_js x8893)|]);
                    (match x8894 with
                     | Some x8898 ->
                         ignore
                           (Ojs.call x8896 "push" [|(Ojs.float_to_js x8898)|])
                     | None -> ());
                    (match x8895 with
                     | Some x8897 ->
                         ignore
                           (Ojs.call x8896 "push" [|(Ojs.float_to_js x8897)|])
                     | None -> ());
                    x8896))
    let (bytes_per_element : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "BigUint64Array")
             "BYTES_PER_ELEMENT")
    let (of_ : bigint list -> t) =
      fun (x8899 : bigint list) ->
        t_of_js
          (let x8902 = Ojs.get_prop_ascii Ojs.global "BigUint64Array" in
           Ojs.call (Ojs.get_prop_ascii x8902 "of") "apply"
             [|x8902;((let x8900 =
                         Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                           [||] in
                       List.iter
                         (fun (x8901 : bigint) ->
                            ignore
                              (Ojs.call x8900 "push" [|(bigint_to_js x8901)|]))
                         x8899;
                       x8900))|])
    let (from : bigint ArrayLike.t -> t) =
      fun (x8903 : bigint ArrayLike.t) ->
        t_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "BigUint64Array") "from"
             [|(ArrayLike.t_to_js bigint_to_js x8903)|])
    let (from' :
      arrayLike:'U ArrayLike.t ->
        mapfn:(v:'U -> k:float -> bigint) -> ?thisArg:any -> unit -> t)
      =
      fun ~arrayLike:(x8905 : 'U ArrayLike.t) ->
        fun ~mapfn:(x8906 : v:'U -> k:float -> bigint) ->
          fun ?thisArg:(x8907 : any option) ->
            fun () ->
              t_of_js
                (let x8913 = Ojs.get_prop_ascii Ojs.global "BigUint64Array" in
                 Ojs.call (Ojs.get_prop_ascii x8913 "from") "apply"
                   [|x8913;((let x8908 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8908 "push"
                                  [|(ArrayLike.t_to_js Obj.magic x8905)|]);
                             ignore
                               (Ojs.call x8908 "push"
                                  [|(Ojs.fun_to_js 2
                                       (fun (x8910 : Ojs.t) ->
                                          fun (x8911 : Ojs.t) ->
                                            bigint_to_js
                                              (x8906 ~v:(Obj.magic x8910)
                                                 ~k:(Ojs.float_of_js x8911))))|]);
                             (match x8907 with
                              | Some x8909 ->
                                  ignore
                                    (Ojs.call x8908 "push"
                                       [|(any_to_js x8909)|])
                              | None -> ());
                             x8908))|])
    let cast_from = Obj.magic
  end
module BigInt64Array =
  struct
    type t =
      [ `BigInt64Array  | bigint ArrayLike.tags_1
      | bigint IterableIterator.tags_1] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x8915 : Ojs.t) -> t_of_js x8915
    and t_0_to_js : t_0 -> Ojs.t = fun (x8914 : t) -> t_to_js x8914
    type tags =
      [ `BigInt64Array  | bigint ArrayLike.tags_1
      | bigint IterableIterator.tags_1]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `BigInt64Array ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x8918 : Ojs.t) -> intf_of_js __tags_of_js x8918
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x8916 : __tags intf) -> intf_to_js __tags_to_js x8916
    let (at : 'tags this -> index:float -> bigint option) =
      fun (x8921 : 'tags this) ->
        fun ~index:(x8920 : float) ->
          Ojs.option_of_js bigint_of_js
            (Ojs.call (this_to_js Obj.magic x8921) "at"
               [|(Ojs.float_to_js x8920)|])
    let (get_BYTES_PER_ELEMENT : 'tags this -> float) =
      fun (x8924 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x8924)
             "BYTES_PER_ELEMENT")
    let (get_buffer : 'tags this -> ArrayBufferLike.t) =
      fun (x8926 : 'tags this) ->
        ArrayBufferLike.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x8926) "buffer")
    let (get_byteLength : 'tags this -> float) =
      fun (x8928 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x8928) "byteLength")
    let (get_byteOffset : 'tags this -> float) =
      fun (x8930 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x8930) "byteOffset")
    let (copyWithin :
      'tags this ->
        target:float -> start:float -> ?end_:float -> unit -> 'tags this)
      =
      fun (x8937 : 'tags this) ->
        fun ~target:(x8932 : float) ->
          fun ~start:(x8933 : float) ->
            fun ?end_:(x8934 : float option) ->
              fun () ->
                this_of_js Obj.magic
                  (let x8939 = this_to_js Obj.magic x8937 in
                   Ojs.call (Ojs.get_prop_ascii x8939 "copyWithin") "apply"
                     [|x8939;((let x8935 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x8935 "push"
                                    [|(Ojs.float_to_js x8932)|]);
                               ignore
                                 (Ojs.call x8935 "push"
                                    [|(Ojs.float_to_js x8933)|]);
                               (match x8934 with
                                | Some x8936 ->
                                    ignore
                                      (Ojs.call x8935 "push"
                                         [|(Ojs.float_to_js x8936)|])
                                | None -> ());
                               x8935))|])
    let (entries : 'tags this -> (float * bigint) IterableIterator.t) =
      fun (x8941 : 'tags this) ->
        IterableIterator.t_of_js
          (fun (x8943 : Ojs.t) ->
             let x8944 = x8943 in
             ((Ojs.float_of_js (Ojs.array_get x8944 0)),
               (bigint_of_js (Ojs.array_get x8944 1))))
          (Ojs.call (this_to_js Obj.magic x8941) "entries" [||])
    let (every :
      'tags this ->
        predicate:(value:bigint -> index:float -> array:t -> bool) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x8952 : 'tags this) ->
        fun
          ~predicate:(x8945 : value:bigint -> index:float -> array:t -> bool)
          ->
          fun ?thisArg:(x8946 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x8954 = this_to_js Obj.magic x8952 in
                 Ojs.call (Ojs.get_prop_ascii x8954 "every") "apply"
                   [|x8954;((let x8947 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8947 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x8949 : Ojs.t) ->
                                          fun (x8950 : Ojs.t) ->
                                            fun (x8951 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x8945
                                                   ~value:(bigint_of_js x8949)
                                                   ~index:(Ojs.float_of_js
                                                             x8950)
                                                   ~array:(t_of_js x8951))))|]);
                             (match x8946 with
                              | Some x8948 ->
                                  ignore
                                    (Ojs.call x8947 "push"
                                       [|(any_to_js x8948)|])
                              | None -> ());
                             x8947))|])
    let (fill :
      'tags this ->
        value:bigint -> ?start:float -> ?end_:float -> unit -> 'tags this)
      =
      fun (x8961 : 'tags this) ->
        fun ~value:(x8955 : bigint) ->
          fun ?start:(x8956 : float option) ->
            fun ?end_:(x8957 : float option) ->
              fun () ->
                this_of_js Obj.magic
                  (let x8963 = this_to_js Obj.magic x8961 in
                   Ojs.call (Ojs.get_prop_ascii x8963 "fill") "apply"
                     [|x8963;((let x8958 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x8958 "push"
                                    [|(bigint_to_js x8955)|]);
                               (match x8956 with
                                | Some x8960 ->
                                    ignore
                                      (Ojs.call x8958 "push"
                                         [|(Ojs.float_to_js x8960)|])
                                | None -> ());
                               (match x8957 with
                                | Some x8959 ->
                                    ignore
                                      (Ojs.call x8958 "push"
                                         [|(Ojs.float_to_js x8959)|])
                                | None -> ());
                               x8958))|])
    let (filter :
      'tags this ->
        predicate:(value:bigint -> index:float -> array:t -> any) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x8972 : 'tags this) ->
        fun
          ~predicate:(x8965 : value:bigint -> index:float -> array:t -> any)
          ->
          fun ?thisArg:(x8966 : any option) ->
            fun () ->
              t_of_js
                (let x8974 = this_to_js Obj.magic x8972 in
                 Ojs.call (Ojs.get_prop_ascii x8974 "filter") "apply"
                   [|x8974;((let x8967 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8967 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x8969 : Ojs.t) ->
                                          fun (x8970 : Ojs.t) ->
                                            fun (x8971 : Ojs.t) ->
                                              any_to_js
                                                (x8965
                                                   ~value:(bigint_of_js x8969)
                                                   ~index:(Ojs.float_of_js
                                                             x8970)
                                                   ~array:(t_of_js x8971))))|]);
                             (match x8966 with
                              | Some x8968 ->
                                  ignore
                                    (Ojs.call x8967 "push"
                                       [|(any_to_js x8968)|])
                              | None -> ());
                             x8967))|])
    let (find :
      'tags this ->
        predicate:(value:bigint -> index:float -> array:t -> bool) ->
          ?thisArg:any -> unit -> bigint option)
      =
      fun (x8982 : 'tags this) ->
        fun
          ~predicate:(x8975 : value:bigint -> index:float -> array:t -> bool)
          ->
          fun ?thisArg:(x8976 : any option) ->
            fun () ->
              Ojs.option_of_js bigint_of_js
                (let x8984 = this_to_js Obj.magic x8982 in
                 Ojs.call (Ojs.get_prop_ascii x8984 "find") "apply"
                   [|x8984;((let x8977 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8977 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x8979 : Ojs.t) ->
                                          fun (x8980 : Ojs.t) ->
                                            fun (x8981 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x8975
                                                   ~value:(bigint_of_js x8979)
                                                   ~index:(Ojs.float_of_js
                                                             x8980)
                                                   ~array:(t_of_js x8981))))|]);
                             (match x8976 with
                              | Some x8978 ->
                                  ignore
                                    (Ojs.call x8977 "push"
                                       [|(any_to_js x8978)|])
                              | None -> ());
                             x8977))|])
    let (findIndex :
      'tags this ->
        predicate:(value:bigint -> index:float -> array:t -> bool) ->
          ?thisArg:any -> unit -> float)
      =
      fun (x8993 : 'tags this) ->
        fun
          ~predicate:(x8986 : value:bigint -> index:float -> array:t -> bool)
          ->
          fun ?thisArg:(x8987 : any option) ->
            fun () ->
              Ojs.float_of_js
                (let x8995 = this_to_js Obj.magic x8993 in
                 Ojs.call (Ojs.get_prop_ascii x8995 "findIndex") "apply"
                   [|x8995;((let x8988 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8988 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x8990 : Ojs.t) ->
                                          fun (x8991 : Ojs.t) ->
                                            fun (x8992 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x8986
                                                   ~value:(bigint_of_js x8990)
                                                   ~index:(Ojs.float_of_js
                                                             x8991)
                                                   ~array:(t_of_js x8992))))|]);
                             (match x8987 with
                              | Some x8989 ->
                                  ignore
                                    (Ojs.call x8988 "push"
                                       [|(any_to_js x8989)|])
                              | None -> ());
                             x8988))|])
    let (forEach :
      'tags this ->
        callbackfn:(value:bigint -> index:float -> array:t -> unit) ->
          ?thisArg:any -> unit -> unit)
      =
      fun (x9003 : 'tags this) ->
        fun
          ~callbackfn:(x8996 :
                        value:bigint -> index:float -> array:t -> unit)
          ->
          fun ?thisArg:(x8997 : any option) ->
            fun () ->
              ignore
                (let x9005 = this_to_js Obj.magic x9003 in
                 Ojs.call (Ojs.get_prop_ascii x9005 "forEach") "apply"
                   [|x9005;((let x8998 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8998 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x9000 : Ojs.t) ->
                                          fun (x9001 : Ojs.t) ->
                                            fun (x9002 : Ojs.t) ->
                                              x8996
                                                ~value:(bigint_of_js x9000)
                                                ~index:(Ojs.float_of_js x9001)
                                                ~array:(t_of_js x9002)))|]);
                             (match x8997 with
                              | Some x8999 ->
                                  ignore
                                    (Ojs.call x8998 "push"
                                       [|(any_to_js x8999)|])
                              | None -> ());
                             x8998))|])
    let (includes :
      'tags this -> searchElement:bigint -> ?fromIndex:float -> unit -> bool)
      =
      fun (x9010 : 'tags this) ->
        fun ~searchElement:(x9006 : bigint) ->
          fun ?fromIndex:(x9007 : float option) ->
            fun () ->
              Ojs.bool_of_js
                (let x9012 = this_to_js Obj.magic x9010 in
                 Ojs.call (Ojs.get_prop_ascii x9012 "includes") "apply"
                   [|x9012;((let x9008 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x9008 "push"
                                  [|(bigint_to_js x9006)|]);
                             (match x9007 with
                              | Some x9009 ->
                                  ignore
                                    (Ojs.call x9008 "push"
                                       [|(Ojs.float_to_js x9009)|])
                              | None -> ());
                             x9008))|])
    let (indexOf :
      'tags this -> searchElement:bigint -> ?fromIndex:float -> unit -> float)
      =
      fun (x9017 : 'tags this) ->
        fun ~searchElement:(x9013 : bigint) ->
          fun ?fromIndex:(x9014 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x9019 = this_to_js Obj.magic x9017 in
                 Ojs.call (Ojs.get_prop_ascii x9019 "indexOf") "apply"
                   [|x9019;((let x9015 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x9015 "push"
                                  [|(bigint_to_js x9013)|]);
                             (match x9014 with
                              | Some x9016 ->
                                  ignore
                                    (Ojs.call x9015 "push"
                                       [|(Ojs.float_to_js x9016)|])
                              | None -> ());
                             x9015))|])
    let (join : 'tags this -> ?separator:string -> unit -> string) =
      fun (x9023 : 'tags this) ->
        fun ?separator:(x9020 : string option) ->
          fun () ->
            Ojs.string_of_js
              (let x9025 = this_to_js Obj.magic x9023 in
               Ojs.call (Ojs.get_prop_ascii x9025 "join") "apply"
                 [|x9025;((let x9021 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x9020 with
                            | Some x9022 ->
                                ignore
                                  (Ojs.call x9021 "push"
                                     [|(Ojs.string_to_js x9022)|])
                            | None -> ());
                           x9021))|])
    let (keys : 'tags this -> float IterableIterator.t) =
      fun (x9026 : 'tags this) ->
        IterableIterator.t_of_js Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x9026) "keys" [||])
    let (lastIndexOf :
      'tags this -> searchElement:bigint -> ?fromIndex:float -> unit -> float)
      =
      fun (x9033 : 'tags this) ->
        fun ~searchElement:(x9029 : bigint) ->
          fun ?fromIndex:(x9030 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x9035 = this_to_js Obj.magic x9033 in
                 Ojs.call (Ojs.get_prop_ascii x9035 "lastIndexOf") "apply"
                   [|x9035;((let x9031 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x9031 "push"
                                  [|(bigint_to_js x9029)|]);
                             (match x9030 with
                              | Some x9032 ->
                                  ignore
                                    (Ojs.call x9031 "push"
                                       [|(Ojs.float_to_js x9032)|])
                              | None -> ());
                             x9031))|])
    let (get_length : 'tags this -> float) =
      fun (x9036 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x9036) "length")
    let (map :
      'tags this ->
        callbackfn:(value:bigint -> index:float -> array:t -> bigint) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x9045 : 'tags this) ->
        fun
          ~callbackfn:(x9038 :
                        value:bigint -> index:float -> array:t -> bigint)
          ->
          fun ?thisArg:(x9039 : any option) ->
            fun () ->
              t_of_js
                (let x9047 = this_to_js Obj.magic x9045 in
                 Ojs.call (Ojs.get_prop_ascii x9047 "map") "apply"
                   [|x9047;((let x9040 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x9040 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x9042 : Ojs.t) ->
                                          fun (x9043 : Ojs.t) ->
                                            fun (x9044 : Ojs.t) ->
                                              bigint_to_js
                                                (x9038
                                                   ~value:(bigint_of_js x9042)
                                                   ~index:(Ojs.float_of_js
                                                             x9043)
                                                   ~array:(t_of_js x9044))))|]);
                             (match x9039 with
                              | Some x9041 ->
                                  ignore
                                    (Ojs.call x9040 "push"
                                       [|(any_to_js x9041)|])
                              | None -> ());
                             x9040))|])
    let (reduce :
      'tags this ->
        callbackfn:(previousValue:bigint ->
                      currentValue:bigint ->
                        currentIndex:float -> array:t -> bigint)
          -> bigint)
      =
      fun (x9053 : 'tags this) ->
        fun
          ~callbackfn:(x9048 :
                        previousValue:bigint ->
                          currentValue:bigint ->
                            currentIndex:float -> array:t -> bigint)
          ->
          bigint_of_js
            (Ojs.call (this_to_js Obj.magic x9053) "reduce"
               [|(Ojs.fun_to_js 4
                    (fun (x9049 : Ojs.t) ->
                       fun (x9050 : Ojs.t) ->
                         fun (x9051 : Ojs.t) ->
                           fun (x9052 : Ojs.t) ->
                             bigint_to_js
                               (x9048 ~previousValue:(bigint_of_js x9049)
                                  ~currentValue:(bigint_of_js x9050)
                                  ~currentIndex:(Ojs.float_of_js x9051)
                                  ~array:(t_of_js x9052))))|])
    let (reduce' :
      'tags this ->
        callbackfn:(previousValue:'U ->
                      currentValue:bigint ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x9061 : 'tags this) ->
        fun
          ~callbackfn:(x9055 :
                        previousValue:'U ->
                          currentValue:bigint ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x9060 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic x9061) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x9056 : Ojs.t) ->
                         fun (x9057 : Ojs.t) ->
                           fun (x9058 : Ojs.t) ->
                             fun (x9059 : Ojs.t) ->
                               Obj.magic
                                 (x9055 ~previousValue:(Obj.magic x9056)
                                    ~currentValue:(bigint_of_js x9057)
                                    ~currentIndex:(Ojs.float_of_js x9058)
                                    ~array:(t_of_js x9059))));(Obj.magic
                                                                 x9060)|])
    let (reduceRight :
      'tags this ->
        callbackfn:(previousValue:bigint ->
                      currentValue:bigint ->
                        currentIndex:float -> array:t -> bigint)
          -> bigint)
      =
      fun (x9068 : 'tags this) ->
        fun
          ~callbackfn:(x9063 :
                        previousValue:bigint ->
                          currentValue:bigint ->
                            currentIndex:float -> array:t -> bigint)
          ->
          bigint_of_js
            (Ojs.call (this_to_js Obj.magic x9068) "reduceRight"
               [|(Ojs.fun_to_js 4
                    (fun (x9064 : Ojs.t) ->
                       fun (x9065 : Ojs.t) ->
                         fun (x9066 : Ojs.t) ->
                           fun (x9067 : Ojs.t) ->
                             bigint_to_js
                               (x9063 ~previousValue:(bigint_of_js x9064)
                                  ~currentValue:(bigint_of_js x9065)
                                  ~currentIndex:(Ojs.float_of_js x9066)
                                  ~array:(t_of_js x9067))))|])
    let (reduceRight' :
      'tags this ->
        callbackfn:(previousValue:'U ->
                      currentValue:bigint ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x9076 : 'tags this) ->
        fun
          ~callbackfn:(x9070 :
                        previousValue:'U ->
                          currentValue:bigint ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x9075 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic x9076) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x9071 : Ojs.t) ->
                         fun (x9072 : Ojs.t) ->
                           fun (x9073 : Ojs.t) ->
                             fun (x9074 : Ojs.t) ->
                               Obj.magic
                                 (x9070 ~previousValue:(Obj.magic x9071)
                                    ~currentValue:(bigint_of_js x9072)
                                    ~currentIndex:(Ojs.float_of_js x9073)
                                    ~array:(t_of_js x9074))));(Obj.magic
                                                                 x9075)|])
    let (reverse : 'tags this -> 'tags this) =
      fun (x9078 : 'tags this) ->
        this_of_js Obj.magic
          (Ojs.call (this_to_js Obj.magic x9078) "reverse" [||])
    let (set_ :
      'tags this -> array:bigint ArrayLike.t -> ?offset:float -> unit -> unit)
      =
      fun (x9086 : 'tags this) ->
        fun ~array:(x9081 : bigint ArrayLike.t) ->
          fun ?offset:(x9082 : float option) ->
            fun () ->
              ignore
                (let x9088 = this_to_js Obj.magic x9086 in
                 Ojs.call (Ojs.get_prop_ascii x9088 "set") "apply"
                   [|x9088;((let x9083 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x9083 "push"
                                  [|(ArrayLike.t_to_js bigint_to_js x9081)|]);
                             (match x9082 with
                              | Some x9084 ->
                                  ignore
                                    (Ojs.call x9083 "push"
                                       [|(Ojs.float_to_js x9084)|])
                              | None -> ());
                             x9083))|])
    let (slice : 'tags this -> ?start:float -> ?end_:float -> unit -> t) =
      fun (x9094 : 'tags this) ->
        fun ?start:(x9089 : float option) ->
          fun ?end_:(x9090 : float option) ->
            fun () ->
              t_of_js
                (let x9096 = this_to_js Obj.magic x9094 in
                 Ojs.call (Ojs.get_prop_ascii x9096 "slice") "apply"
                   [|x9096;((let x9091 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x9089 with
                              | Some x9093 ->
                                  ignore
                                    (Ojs.call x9091 "push"
                                       [|(Ojs.float_to_js x9093)|])
                              | None -> ());
                             (match x9090 with
                              | Some x9092 ->
                                  ignore
                                    (Ojs.call x9091 "push"
                                       [|(Ojs.float_to_js x9092)|])
                              | None -> ());
                             x9091))|])
    let (some :
      'tags this ->
        predicate:(value:bigint -> index:float -> array:t -> bool) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x9104 : 'tags this) ->
        fun
          ~predicate:(x9097 : value:bigint -> index:float -> array:t -> bool)
          ->
          fun ?thisArg:(x9098 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x9106 = this_to_js Obj.magic x9104 in
                 Ojs.call (Ojs.get_prop_ascii x9106 "some") "apply"
                   [|x9106;((let x9099 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x9099 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x9101 : Ojs.t) ->
                                          fun (x9102 : Ojs.t) ->
                                            fun (x9103 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x9097
                                                   ~value:(bigint_of_js x9101)
                                                   ~index:(Ojs.float_of_js
                                                             x9102)
                                                   ~array:(t_of_js x9103))))|]);
                             (match x9098 with
                              | Some x9100 ->
                                  ignore
                                    (Ojs.call x9099 "push"
                                       [|(any_to_js x9100)|])
                              | None -> ());
                             x9099))|])
    let (sort :
      'tags this ->
        ?compareFn:(a:bigint -> b:bigint -> [ `U1 of float  | `U2 of bigint ])
          -> unit -> 'tags this)
      =
      fun (x9114 : 'tags this) ->
        fun
          ?compareFn:(x9107 :
                       (a:bigint ->
                          b:bigint -> [ `U1 of float  | `U2 of bigint ])
                         option)
          ->
          fun () ->
            this_of_js Obj.magic
              (let x9116 = this_to_js Obj.magic x9114 in
               Ojs.call (Ojs.get_prop_ascii x9116 "sort") "apply"
                 [|x9116;((let x9108 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x9107 with
                            | Some x9109 ->
                                ignore
                                  (Ojs.call x9108 "push"
                                     [|(Ojs.fun_to_js 2
                                          (fun (x9110 : Ojs.t) ->
                                             fun (x9111 : Ojs.t) ->
                                               match x9109
                                                       ~a:(bigint_of_js x9110)
                                                       ~b:(bigint_of_js x9111)
                                               with
                                               | `U1 x9112 ->
                                                   Ojs.float_to_js x9112
                                               | `U2 x9113 ->
                                                   bigint_to_js x9113))|])
                            | None -> ());
                           x9108))|])
    let (subarray : 'tags this -> ?begin_:float -> ?end_:float -> unit -> t)
      =
      fun (x9123 : 'tags this) ->
        fun ?begin_:(x9118 : float option) ->
          fun ?end_:(x9119 : float option) ->
            fun () ->
              t_of_js
                (let x9125 = this_to_js Obj.magic x9123 in
                 Ojs.call (Ojs.get_prop_ascii x9125 "subarray") "apply"
                   [|x9125;((let x9120 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x9118 with
                              | Some x9122 ->
                                  ignore
                                    (Ojs.call x9120 "push"
                                       [|(Ojs.float_to_js x9122)|])
                              | None -> ());
                             (match x9119 with
                              | Some x9121 ->
                                  ignore
                                    (Ojs.call x9120 "push"
                                       [|(Ojs.float_to_js x9121)|])
                              | None -> ());
                             x9120))|])
    let (toLocaleString : 'tags this -> string) =
      fun (x9126 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x9126) "toLocaleString" [||])
    let (toString : 'tags this -> string) =
      fun (x9128 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x9128) "toString" [||])
    let (valueOf : 'tags this -> t) =
      fun (x9130 : 'tags this) ->
        t_of_js (Ojs.call (this_to_js Obj.magic x9130) "valueOf" [||])
    let (values : 'tags this -> bigint IterableIterator.t) =
      fun (x9132 : 'tags this) ->
        IterableIterator.t_of_js bigint_of_js
          (Ojs.call (this_to_js Obj.magic x9132) "values" [||])
    let (get : 'tags this -> float -> bigint) =
      fun (x9135 : 'tags this) ->
        fun (x9137 : float) ->
          bigint_of_js
            (Ojs.get_prop (this_to_js Obj.magic x9135)
               (Ojs.float_to_js x9137))
    let (set : 'tags this -> float -> bigint -> unit) =
      fun (x9138 : 'tags this) ->
        fun (x9140 : float) ->
          fun (x9141 : bigint) ->
            Ojs.set_prop (this_to_js Obj.magic x9138) (Ojs.float_to_js x9140)
              (bigint_to_js x9141)
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "BigInt64Array")
             "prototype")
    let (create : ?length:float -> unit -> t) =
      fun ?length:(x9142 : float option) ->
        fun () ->
          t_of_js
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "BigInt64Array")
               (let x9143 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x9142 with
                 | Some x9144 ->
                     ignore
                       (Ojs.call x9143 "push" [|(Ojs.float_to_js x9144)|])
                 | None -> ());
                x9143))
    let (create' : bigint Iterable.t -> t) =
      fun (x9145 : bigint Iterable.t) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "BigInt64Array")
             [|(Iterable.t_to_js bigint_to_js x9145)|])
    let (create'' :
      buffer:ArrayBufferLike.t ->
        ?byteOffset:float -> ?length:float -> unit -> t)
      =
      fun ~buffer:(x9147 : ArrayBufferLike.t) ->
        fun ?byteOffset:(x9148 : float option) ->
          fun ?length:(x9149 : float option) ->
            fun () ->
              t_of_js
                (Ojs.new_obj_arr
                   (Ojs.get_prop_ascii Ojs.global "BigInt64Array")
                   (let x9150 =
                      Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                        [||] in
                    ignore
                      (Ojs.call x9150 "push"
                         [|(ArrayBufferLike.t_to_js x9147)|]);
                    (match x9148 with
                     | Some x9152 ->
                         ignore
                           (Ojs.call x9150 "push" [|(Ojs.float_to_js x9152)|])
                     | None -> ());
                    (match x9149 with
                     | Some x9151 ->
                         ignore
                           (Ojs.call x9150 "push" [|(Ojs.float_to_js x9151)|])
                     | None -> ());
                    x9150))
    let (bytes_per_element : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "BigInt64Array")
             "BYTES_PER_ELEMENT")
    let (of_ : bigint list -> t) =
      fun (x9153 : bigint list) ->
        t_of_js
          (let x9156 = Ojs.get_prop_ascii Ojs.global "BigInt64Array" in
           Ojs.call (Ojs.get_prop_ascii x9156 "of") "apply"
             [|x9156;((let x9154 =
                         Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                           [||] in
                       List.iter
                         (fun (x9155 : bigint) ->
                            ignore
                              (Ojs.call x9154 "push" [|(bigint_to_js x9155)|]))
                         x9153;
                       x9154))|])
    let (from : bigint ArrayLike.t -> t) =
      fun (x9157 : bigint ArrayLike.t) ->
        t_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "BigInt64Array") "from"
             [|(ArrayLike.t_to_js bigint_to_js x9157)|])
    let (from' :
      arrayLike:'U ArrayLike.t ->
        mapfn:(v:'U -> k:float -> bigint) -> ?thisArg:any -> unit -> t)
      =
      fun ~arrayLike:(x9159 : 'U ArrayLike.t) ->
        fun ~mapfn:(x9160 : v:'U -> k:float -> bigint) ->
          fun ?thisArg:(x9161 : any option) ->
            fun () ->
              t_of_js
                (let x9167 = Ojs.get_prop_ascii Ojs.global "BigInt64Array" in
                 Ojs.call (Ojs.get_prop_ascii x9167 "from") "apply"
                   [|x9167;((let x9162 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x9162 "push"
                                  [|(ArrayLike.t_to_js Obj.magic x9159)|]);
                             ignore
                               (Ojs.call x9162 "push"
                                  [|(Ojs.fun_to_js 2
                                       (fun (x9164 : Ojs.t) ->
                                          fun (x9165 : Ojs.t) ->
                                            bigint_to_js
                                              (x9160 ~v:(Obj.magic x9164)
                                                 ~k:(Ojs.float_of_js x9165))))|]);
                             (match x9161 with
                              | Some x9163 ->
                                  ignore
                                    (Ojs.call x9162 "push"
                                       [|(any_to_js x9163)|])
                              | None -> ());
                             x9162))|])
    let cast_from = Obj.magic
  end
module Atomics =
  struct
    let (add :
      typedArray:[ `U1 of BigInt64Array.t  | `U2 of BigUint64Array.t ] ->
        index:float -> value:bigint -> bigint)
      =
      fun
        ~typedArray:(x9168 :
                      [ `U1 of BigInt64Array.t  | `U2 of BigUint64Array.t ])
        ->
        fun ~index:(x9171 : float) ->
          fun ~value:(x9172 : bigint) ->
            bigint_of_js
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "Atomics") "add"
                 [|((match x9168 with
                     | `U1 x9169 -> BigInt64Array.t_to_js x9169
                     | `U2 x9170 -> BigUint64Array.t_to_js x9170));(Ojs.float_to_js
                                                                    x9171);(
                   bigint_to_js x9172)|])
    let (and_ :
      typedArray:[ `U1 of BigInt64Array.t  | `U2 of BigUint64Array.t ] ->
        index:float -> value:bigint -> bigint)
      =
      fun
        ~typedArray:(x9173 :
                      [ `U1 of BigInt64Array.t  | `U2 of BigUint64Array.t ])
        ->
        fun ~index:(x9176 : float) ->
          fun ~value:(x9177 : bigint) ->
            bigint_of_js
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "Atomics") "and"
                 [|((match x9173 with
                     | `U1 x9174 -> BigInt64Array.t_to_js x9174
                     | `U2 x9175 -> BigUint64Array.t_to_js x9175));(Ojs.float_to_js
                                                                    x9176);(
                   bigint_to_js x9177)|])
    let (compareExchange :
      typedArray:[ `U1 of BigInt64Array.t  | `U2 of BigUint64Array.t ] ->
        index:float ->
          expectedValue:bigint -> replacementValue:bigint -> bigint)
      =
      fun
        ~typedArray:(x9178 :
                      [ `U1 of BigInt64Array.t  | `U2 of BigUint64Array.t ])
        ->
        fun ~index:(x9181 : float) ->
          fun ~expectedValue:(x9182 : bigint) ->
            fun ~replacementValue:(x9183 : bigint) ->
              bigint_of_js
                (Ojs.call (Ojs.get_prop_ascii Ojs.global "Atomics")
                   "compareExchange"
                   [|((match x9178 with
                       | `U1 x9179 -> BigInt64Array.t_to_js x9179
                       | `U2 x9180 -> BigUint64Array.t_to_js x9180));(
                     Ojs.float_to_js x9181);(bigint_to_js x9182);(bigint_to_js
                                                                    x9183)|])
    let (exchange :
      typedArray:[ `U1 of BigInt64Array.t  | `U2 of BigUint64Array.t ] ->
        index:float -> value:bigint -> bigint)
      =
      fun
        ~typedArray:(x9184 :
                      [ `U1 of BigInt64Array.t  | `U2 of BigUint64Array.t ])
        ->
        fun ~index:(x9187 : float) ->
          fun ~value:(x9188 : bigint) ->
            bigint_of_js
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "Atomics") "exchange"
                 [|((match x9184 with
                     | `U1 x9185 -> BigInt64Array.t_to_js x9185
                     | `U2 x9186 -> BigUint64Array.t_to_js x9186));(Ojs.float_to_js
                                                                    x9187);(
                   bigint_to_js x9188)|])
    let (load :
      typedArray:[ `U1 of BigInt64Array.t  | `U2 of BigUint64Array.t ] ->
        index:float -> bigint)
      =
      fun
        ~typedArray:(x9189 :
                      [ `U1 of BigInt64Array.t  | `U2 of BigUint64Array.t ])
        ->
        fun ~index:(x9192 : float) ->
          bigint_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "Atomics") "load"
               [|((match x9189 with
                   | `U1 x9190 -> BigInt64Array.t_to_js x9190
                   | `U2 x9191 -> BigUint64Array.t_to_js x9191));(Ojs.float_to_js
                                                                    x9192)|])
    let (or_ :
      typedArray:[ `U1 of BigInt64Array.t  | `U2 of BigUint64Array.t ] ->
        index:float -> value:bigint -> bigint)
      =
      fun
        ~typedArray:(x9193 :
                      [ `U1 of BigInt64Array.t  | `U2 of BigUint64Array.t ])
        ->
        fun ~index:(x9196 : float) ->
          fun ~value:(x9197 : bigint) ->
            bigint_of_js
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "Atomics") "or"
                 [|((match x9193 with
                     | `U1 x9194 -> BigInt64Array.t_to_js x9194
                     | `U2 x9195 -> BigUint64Array.t_to_js x9195));(Ojs.float_to_js
                                                                    x9196);(
                   bigint_to_js x9197)|])
    let (store :
      typedArray:[ `U1 of BigInt64Array.t  | `U2 of BigUint64Array.t ] ->
        index:float -> value:bigint -> bigint)
      =
      fun
        ~typedArray:(x9198 :
                      [ `U1 of BigInt64Array.t  | `U2 of BigUint64Array.t ])
        ->
        fun ~index:(x9201 : float) ->
          fun ~value:(x9202 : bigint) ->
            bigint_of_js
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "Atomics") "store"
                 [|((match x9198 with
                     | `U1 x9199 -> BigInt64Array.t_to_js x9199
                     | `U2 x9200 -> BigUint64Array.t_to_js x9200));(Ojs.float_to_js
                                                                    x9201);(
                   bigint_to_js x9202)|])
    let (sub :
      typedArray:[ `U1 of BigInt64Array.t  | `U2 of BigUint64Array.t ] ->
        index:float -> value:bigint -> bigint)
      =
      fun
        ~typedArray:(x9203 :
                      [ `U1 of BigInt64Array.t  | `U2 of BigUint64Array.t ])
        ->
        fun ~index:(x9206 : float) ->
          fun ~value:(x9207 : bigint) ->
            bigint_of_js
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "Atomics") "sub"
                 [|((match x9203 with
                     | `U1 x9204 -> BigInt64Array.t_to_js x9204
                     | `U2 x9205 -> BigUint64Array.t_to_js x9205));(Ojs.float_to_js
                                                                    x9206);(
                   bigint_to_js x9207)|])
    let (wait :
      typedArray:BigInt64Array.t ->
        index:float ->
          value:bigint ->
            ?timeout:float ->
              unit -> [ `L_s71_not_equal  | `L_s74_ok  | `L_s94_timed_out ])
      =
      fun ~typedArray:(x9208 : BigInt64Array.t) ->
        fun ~index:(x9209 : float) ->
          fun ~value:(x9210 : bigint) ->
            fun ?timeout:(x9211 : float option) ->
              fun () ->
                let x9215 =
                  let x9214 = Ojs.get_prop_ascii Ojs.global "Atomics" in
                  Ojs.call (Ojs.get_prop_ascii x9214 "wait") "apply"
                    [|x9214;((let x9212 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x9212 "push"
                                   [|(BigInt64Array.t_to_js x9208)|]);
                              ignore
                                (Ojs.call x9212 "push"
                                   [|(Ojs.float_to_js x9209)|]);
                              ignore
                                (Ojs.call x9212 "push"
                                   [|(bigint_to_js x9210)|]);
                              (match x9211 with
                               | Some x9213 ->
                                   ignore
                                     (Ojs.call x9212 "push"
                                        [|(Ojs.float_to_js x9213)|])
                               | None -> ());
                              x9212))|] in
                match Ojs.string_of_js x9215 with
                | "not-equal" -> `L_s71_not_equal
                | "ok" -> `L_s74_ok
                | "timed-out" -> `L_s94_timed_out
                | _ -> assert false
    let (notify :
      typedArray:BigInt64Array.t ->
        index:float -> ?count:float -> unit -> float)
      =
      fun ~typedArray:(x9216 : BigInt64Array.t) ->
        fun ~index:(x9217 : float) ->
          fun ?count:(x9218 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x9221 = Ojs.get_prop_ascii Ojs.global "Atomics" in
                 Ojs.call (Ojs.get_prop_ascii x9221 "notify") "apply"
                   [|x9221;((let x9219 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x9219 "push"
                                  [|(BigInt64Array.t_to_js x9216)|]);
                             ignore
                               (Ojs.call x9219 "push"
                                  [|(Ojs.float_to_js x9217)|]);
                             (match x9218 with
                              | Some x9220 ->
                                  ignore
                                    (Ojs.call x9219 "push"
                                       [|(Ojs.float_to_js x9220)|])
                              | None -> ());
                             x9219))|])
    let (xor :
      typedArray:[ `U1 of BigInt64Array.t  | `U2 of BigUint64Array.t ] ->
        index:float -> value:bigint -> bigint)
      =
      fun
        ~typedArray:(x9222 :
                      [ `U1 of BigInt64Array.t  | `U2 of BigUint64Array.t ])
        ->
        fun ~index:(x9225 : float) ->
          fun ~value:(x9226 : bigint) ->
            bigint_of_js
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "Atomics") "xor"
                 [|((match x9222 with
                     | `U1 x9223 -> BigInt64Array.t_to_js x9223
                     | `U2 x9224 -> BigUint64Array.t_to_js x9224));(Ojs.float_to_js
                                                                    x9225);(
                   bigint_to_js x9226)|])
    let (add' :
      typedArray:[ `U1 of Int8Array.t  | `U2 of Uint8Array.t 
                 | `U3 of Int16Array.t  | `U4 of Uint16Array.t 
                 | `U5 of Int32Array.t  | `U6 of Uint32Array.t ]
        -> index:float -> value:float -> float)
      =
      fun
        ~typedArray:(x9227 :
                      [ `U1 of Int8Array.t  | `U2 of Uint8Array.t 
                      | `U3 of Int16Array.t  | `U4 of Uint16Array.t 
                      | `U5 of Int32Array.t  | `U6 of Uint32Array.t ])
        ->
        fun ~index:(x9234 : float) ->
          fun ~value:(x9235 : float) ->
            Ojs.float_of_js
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "Atomics") "add"
                 [|((match x9227 with
                     | `U1 x9228 -> Int8Array.t_to_js x9228
                     | `U2 x9229 -> Uint8Array.t_to_js x9229
                     | `U3 x9230 -> Int16Array.t_to_js x9230
                     | `U4 x9231 -> Uint16Array.t_to_js x9231
                     | `U5 x9232 -> Int32Array.t_to_js x9232
                     | `U6 x9233 -> Uint32Array.t_to_js x9233));(Ojs.float_to_js
                                                                   x9234);(
                   Ojs.float_to_js x9235)|])
    let (and_' :
      typedArray:[ `U1 of Int8Array.t  | `U2 of Uint8Array.t 
                 | `U3 of Int16Array.t  | `U4 of Uint16Array.t 
                 | `U5 of Int32Array.t  | `U6 of Uint32Array.t ]
        -> index:float -> value:float -> float)
      =
      fun
        ~typedArray:(x9236 :
                      [ `U1 of Int8Array.t  | `U2 of Uint8Array.t 
                      | `U3 of Int16Array.t  | `U4 of Uint16Array.t 
                      | `U5 of Int32Array.t  | `U6 of Uint32Array.t ])
        ->
        fun ~index:(x9243 : float) ->
          fun ~value:(x9244 : float) ->
            Ojs.float_of_js
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "Atomics") "and"
                 [|((match x9236 with
                     | `U1 x9237 -> Int8Array.t_to_js x9237
                     | `U2 x9238 -> Uint8Array.t_to_js x9238
                     | `U3 x9239 -> Int16Array.t_to_js x9239
                     | `U4 x9240 -> Uint16Array.t_to_js x9240
                     | `U5 x9241 -> Int32Array.t_to_js x9241
                     | `U6 x9242 -> Uint32Array.t_to_js x9242));(Ojs.float_to_js
                                                                   x9243);(
                   Ojs.float_to_js x9244)|])
    let (compareExchange' :
      typedArray:[ `U1 of Int8Array.t  | `U2 of Uint8Array.t 
                 | `U3 of Int16Array.t  | `U4 of Uint16Array.t 
                 | `U5 of Int32Array.t  | `U6 of Uint32Array.t ]
        ->
        index:float -> expectedValue:float -> replacementValue:float -> float)
      =
      fun
        ~typedArray:(x9245 :
                      [ `U1 of Int8Array.t  | `U2 of Uint8Array.t 
                      | `U3 of Int16Array.t  | `U4 of Uint16Array.t 
                      | `U5 of Int32Array.t  | `U6 of Uint32Array.t ])
        ->
        fun ~index:(x9252 : float) ->
          fun ~expectedValue:(x9253 : float) ->
            fun ~replacementValue:(x9254 : float) ->
              Ojs.float_of_js
                (Ojs.call (Ojs.get_prop_ascii Ojs.global "Atomics")
                   "compareExchange"
                   [|((match x9245 with
                       | `U1 x9246 -> Int8Array.t_to_js x9246
                       | `U2 x9247 -> Uint8Array.t_to_js x9247
                       | `U3 x9248 -> Int16Array.t_to_js x9248
                       | `U4 x9249 -> Uint16Array.t_to_js x9249
                       | `U5 x9250 -> Int32Array.t_to_js x9250
                       | `U6 x9251 -> Uint32Array.t_to_js x9251));(Ojs.float_to_js
                                                                    x9252);(
                     Ojs.float_to_js x9253);(Ojs.float_to_js x9254)|])
    let (exchange' :
      typedArray:[ `U1 of Int8Array.t  | `U2 of Uint8Array.t 
                 | `U3 of Int16Array.t  | `U4 of Uint16Array.t 
                 | `U5 of Int32Array.t  | `U6 of Uint32Array.t ]
        -> index:float -> value:float -> float)
      =
      fun
        ~typedArray:(x9255 :
                      [ `U1 of Int8Array.t  | `U2 of Uint8Array.t 
                      | `U3 of Int16Array.t  | `U4 of Uint16Array.t 
                      | `U5 of Int32Array.t  | `U6 of Uint32Array.t ])
        ->
        fun ~index:(x9262 : float) ->
          fun ~value:(x9263 : float) ->
            Ojs.float_of_js
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "Atomics") "exchange"
                 [|((match x9255 with
                     | `U1 x9256 -> Int8Array.t_to_js x9256
                     | `U2 x9257 -> Uint8Array.t_to_js x9257
                     | `U3 x9258 -> Int16Array.t_to_js x9258
                     | `U4 x9259 -> Uint16Array.t_to_js x9259
                     | `U5 x9260 -> Int32Array.t_to_js x9260
                     | `U6 x9261 -> Uint32Array.t_to_js x9261));(Ojs.float_to_js
                                                                   x9262);(
                   Ojs.float_to_js x9263)|])
    let (isLockFree : float -> bool) =
      fun (x9264 : float) ->
        Ojs.bool_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Atomics") "isLockFree"
             [|(Ojs.float_to_js x9264)|])
    let (load' :
      typedArray:[ `U1 of Int8Array.t  | `U2 of Uint8Array.t 
                 | `U3 of Int16Array.t  | `U4 of Uint16Array.t 
                 | `U5 of Int32Array.t  | `U6 of Uint32Array.t ]
        -> index:float -> float)
      =
      fun
        ~typedArray:(x9265 :
                      [ `U1 of Int8Array.t  | `U2 of Uint8Array.t 
                      | `U3 of Int16Array.t  | `U4 of Uint16Array.t 
                      | `U5 of Int32Array.t  | `U6 of Uint32Array.t ])
        ->
        fun ~index:(x9272 : float) ->
          Ojs.float_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "Atomics") "load"
               [|((match x9265 with
                   | `U1 x9266 -> Int8Array.t_to_js x9266
                   | `U2 x9267 -> Uint8Array.t_to_js x9267
                   | `U3 x9268 -> Int16Array.t_to_js x9268
                   | `U4 x9269 -> Uint16Array.t_to_js x9269
                   | `U5 x9270 -> Int32Array.t_to_js x9270
                   | `U6 x9271 -> Uint32Array.t_to_js x9271));(Ojs.float_to_js
                                                                 x9272)|])
    let (or_' :
      typedArray:[ `U1 of Int8Array.t  | `U2 of Uint8Array.t 
                 | `U3 of Int16Array.t  | `U4 of Uint16Array.t 
                 | `U5 of Int32Array.t  | `U6 of Uint32Array.t ]
        -> index:float -> value:float -> float)
      =
      fun
        ~typedArray:(x9273 :
                      [ `U1 of Int8Array.t  | `U2 of Uint8Array.t 
                      | `U3 of Int16Array.t  | `U4 of Uint16Array.t 
                      | `U5 of Int32Array.t  | `U6 of Uint32Array.t ])
        ->
        fun ~index:(x9280 : float) ->
          fun ~value:(x9281 : float) ->
            Ojs.float_of_js
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "Atomics") "or"
                 [|((match x9273 with
                     | `U1 x9274 -> Int8Array.t_to_js x9274
                     | `U2 x9275 -> Uint8Array.t_to_js x9275
                     | `U3 x9276 -> Int16Array.t_to_js x9276
                     | `U4 x9277 -> Uint16Array.t_to_js x9277
                     | `U5 x9278 -> Int32Array.t_to_js x9278
                     | `U6 x9279 -> Uint32Array.t_to_js x9279));(Ojs.float_to_js
                                                                   x9280);(
                   Ojs.float_to_js x9281)|])
    let (store' :
      typedArray:[ `U1 of Int8Array.t  | `U2 of Uint8Array.t 
                 | `U3 of Int16Array.t  | `U4 of Uint16Array.t 
                 | `U5 of Int32Array.t  | `U6 of Uint32Array.t ]
        -> index:float -> value:float -> float)
      =
      fun
        ~typedArray:(x9282 :
                      [ `U1 of Int8Array.t  | `U2 of Uint8Array.t 
                      | `U3 of Int16Array.t  | `U4 of Uint16Array.t 
                      | `U5 of Int32Array.t  | `U6 of Uint32Array.t ])
        ->
        fun ~index:(x9289 : float) ->
          fun ~value:(x9290 : float) ->
            Ojs.float_of_js
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "Atomics") "store"
                 [|((match x9282 with
                     | `U1 x9283 -> Int8Array.t_to_js x9283
                     | `U2 x9284 -> Uint8Array.t_to_js x9284
                     | `U3 x9285 -> Int16Array.t_to_js x9285
                     | `U4 x9286 -> Uint16Array.t_to_js x9286
                     | `U5 x9287 -> Int32Array.t_to_js x9287
                     | `U6 x9288 -> Uint32Array.t_to_js x9288));(Ojs.float_to_js
                                                                   x9289);(
                   Ojs.float_to_js x9290)|])
    let (sub' :
      typedArray:[ `U1 of Int8Array.t  | `U2 of Uint8Array.t 
                 | `U3 of Int16Array.t  | `U4 of Uint16Array.t 
                 | `U5 of Int32Array.t  | `U6 of Uint32Array.t ]
        -> index:float -> value:float -> float)
      =
      fun
        ~typedArray:(x9291 :
                      [ `U1 of Int8Array.t  | `U2 of Uint8Array.t 
                      | `U3 of Int16Array.t  | `U4 of Uint16Array.t 
                      | `U5 of Int32Array.t  | `U6 of Uint32Array.t ])
        ->
        fun ~index:(x9298 : float) ->
          fun ~value:(x9299 : float) ->
            Ojs.float_of_js
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "Atomics") "sub"
                 [|((match x9291 with
                     | `U1 x9292 -> Int8Array.t_to_js x9292
                     | `U2 x9293 -> Uint8Array.t_to_js x9293
                     | `U3 x9294 -> Int16Array.t_to_js x9294
                     | `U4 x9295 -> Uint16Array.t_to_js x9295
                     | `U5 x9296 -> Int32Array.t_to_js x9296
                     | `U6 x9297 -> Uint32Array.t_to_js x9297));(Ojs.float_to_js
                                                                   x9298);(
                   Ojs.float_to_js x9299)|])
    let (wait' :
      typedArray:Int32Array.t ->
        index:float ->
          value:float ->
            ?timeout:float ->
              unit -> [ `L_s71_not_equal  | `L_s74_ok  | `L_s94_timed_out ])
      =
      fun ~typedArray:(x9300 : Int32Array.t) ->
        fun ~index:(x9301 : float) ->
          fun ~value:(x9302 : float) ->
            fun ?timeout:(x9303 : float option) ->
              fun () ->
                let x9307 =
                  let x9306 = Ojs.get_prop_ascii Ojs.global "Atomics" in
                  Ojs.call (Ojs.get_prop_ascii x9306 "wait") "apply"
                    [|x9306;((let x9304 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x9304 "push"
                                   [|(Int32Array.t_to_js x9300)|]);
                              ignore
                                (Ojs.call x9304 "push"
                                   [|(Ojs.float_to_js x9301)|]);
                              ignore
                                (Ojs.call x9304 "push"
                                   [|(Ojs.float_to_js x9302)|]);
                              (match x9303 with
                               | Some x9305 ->
                                   ignore
                                     (Ojs.call x9304 "push"
                                        [|(Ojs.float_to_js x9305)|])
                               | None -> ());
                              x9304))|] in
                match Ojs.string_of_js x9307 with
                | "not-equal" -> `L_s71_not_equal
                | "ok" -> `L_s74_ok
                | "timed-out" -> `L_s94_timed_out
                | _ -> assert false
    let (notify' :
      typedArray:Int32Array.t -> index:float -> ?count:float -> unit -> float)
      =
      fun ~typedArray:(x9308 : Int32Array.t) ->
        fun ~index:(x9309 : float) ->
          fun ?count:(x9310 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x9313 = Ojs.get_prop_ascii Ojs.global "Atomics" in
                 Ojs.call (Ojs.get_prop_ascii x9313 "notify") "apply"
                   [|x9313;((let x9311 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x9311 "push"
                                  [|(Int32Array.t_to_js x9308)|]);
                             ignore
                               (Ojs.call x9311 "push"
                                  [|(Ojs.float_to_js x9309)|]);
                             (match x9310 with
                              | Some x9312 ->
                                  ignore
                                    (Ojs.call x9311 "push"
                                       [|(Ojs.float_to_js x9312)|])
                              | None -> ());
                             x9311))|])
    let (xor' :
      typedArray:[ `U1 of Int8Array.t  | `U2 of Uint8Array.t 
                 | `U3 of Int16Array.t  | `U4 of Uint16Array.t 
                 | `U5 of Int32Array.t  | `U6 of Uint32Array.t ]
        -> index:float -> value:float -> float)
      =
      fun
        ~typedArray:(x9314 :
                      [ `U1 of Int8Array.t  | `U2 of Uint8Array.t 
                      | `U3 of Int16Array.t  | `U4 of Uint16Array.t 
                      | `U5 of Int32Array.t  | `U6 of Uint32Array.t ])
        ->
        fun ~index:(x9321 : float) ->
          fun ~value:(x9322 : float) ->
            Ojs.float_of_js
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "Atomics") "xor"
                 [|((match x9314 with
                     | `U1 x9315 -> Int8Array.t_to_js x9315
                     | `U2 x9316 -> Uint8Array.t_to_js x9316
                     | `U3 x9317 -> Int16Array.t_to_js x9317
                     | `U4 x9318 -> Uint16Array.t_to_js x9318
                     | `U5 x9319 -> Int32Array.t_to_js x9319
                     | `U6 x9320 -> Uint32Array.t_to_js x9320));(Ojs.float_to_js
                                                                   x9321);(
                   Ojs.float_to_js x9322)|])
  end
module PromiseRejectedResult =
  struct
    type t = [ `PromiseRejectedResult ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x9324 : Ojs.t) -> t_of_js x9324
    and t_0_to_js : t_0 -> Ojs.t = fun (x9323 : t) -> t_to_js x9323
    type tags = [ `PromiseRejectedResult ]
    type tags_0 = tags
    type 'tags this =
      'tags intf constraint 'tags = [> `PromiseRejectedResult ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x9327 : Ojs.t) -> intf_of_js __tags_of_js x9327
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x9325 : __tags intf) -> intf_to_js __tags_to_js x9325
    let (get_status : 'tags this -> [ `L_s84_rejected ]) =
      fun (x9329 : 'tags this) ->
        let x9331 = Ojs.get_prop_ascii (this_to_js Obj.magic x9329) "status" in
        match Ojs.string_of_js x9331 with
        | "rejected" -> `L_s84_rejected
        | _ -> assert false
    let (set_status : 'tags this -> [ `L_s84_rejected ] -> unit) =
      fun (x9332 : 'tags this) ->
        fun (x9333 : [ `L_s84_rejected ]) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x9332) "status"
            (match x9333 with
             | `L_s84_rejected -> Ojs.string_to_js "rejected")
    let (get_reason : 'tags this -> any) =
      fun (x9335 : 'tags this) ->
        any_of_js (Ojs.get_prop_ascii (this_to_js Obj.magic x9335) "reason")
    let (set_reason : 'tags this -> any -> unit) =
      fun (x9337 : 'tags this) ->
        fun (x9338 : any) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x9337) "reason"
            (any_to_js x9338)
    let (create : status:[ `L_s84_rejected ] -> reason:any -> unit -> t) =
      fun ~status:(x9340 : [ `L_s84_rejected ]) ->
        fun ~reason:(x9341 : any) ->
          fun () ->
            let x9342 = Ojs.empty_obj () in
            Ojs.set_prop_ascii x9342 "status"
              (match x9340 with
               | `L_s84_rejected -> Ojs.string_to_js "rejected");
            Ojs.set_prop_ascii x9342 "reason" (any_to_js x9341);
            t_of_js x9342
    let cast_from = Obj.magic
  end
module PromiseFulfilledResult =
  struct
    type 'T t = [ `PromiseFulfilledResult of 'T ] intf
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun _T -> Obj.magic
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun _T -> Obj.magic
    type 'T t_1 = 'T t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 =
      fun (type __T) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x9345 : Ojs.t) -> t_of_js __T_of_js x9345
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t =
      fun (type __T) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x9343 : __T t) -> t_to_js __T_to_js x9343
    type 'T tags = [ `PromiseFulfilledResult of 'T ]
    type 'T tags_1 = 'T tags
    type ('tags, 'T) this =
      'tags intf constraint 'tags = [> `PromiseFulfilledResult of 'T ]
    let rec this_of_js :
      'tags 'T .
        (Ojs.t -> 'tags) -> (Ojs.t -> 'T) -> Ojs.t -> ('tags, 'T) this
      =
      fun (type __tags) ->
        fun (type __T) ->
          fun (__tags_of_js : Ojs.t -> __tags) ->
            fun (__T_of_js : Ojs.t -> __T) ->
              fun (x9349 : Ojs.t) -> intf_of_js __tags_of_js x9349
    and this_to_js :
      'tags 'T .
        ('tags -> Ojs.t) -> ('T -> Ojs.t) -> ('tags, 'T) this -> Ojs.t
      =
      fun (type __tags) ->
        fun (type __T) ->
          fun (__tags_to_js : __tags -> Ojs.t) ->
            fun (__T_to_js : __T -> Ojs.t) ->
              fun (x9347 : __tags intf) -> intf_to_js __tags_to_js x9347
    let (get_status : ('tags, 'T) this -> [ `L_s43_fulfilled ]) =
      fun (x9351 : ('tags, 'T) this) ->
        let x9354 =
          Ojs.get_prop_ascii (this_to_js Obj.magic Obj.magic x9351) "status" in
        match Ojs.string_of_js x9354 with
        | "fulfilled" -> `L_s43_fulfilled
        | _ -> assert false
    let (set_status : ('tags, 'T) this -> [ `L_s43_fulfilled ] -> unit) =
      fun (x9355 : ('tags, 'T) this) ->
        fun (x9356 : [ `L_s43_fulfilled ]) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic Obj.magic x9355) "status"
            (match x9356 with
             | `L_s43_fulfilled -> Ojs.string_to_js "fulfilled")
    let (get_value : ('tags, 'T) this -> 'T) =
      fun (x9359 : ('tags, 'T) this) ->
        Obj.magic
          (Ojs.get_prop_ascii (this_to_js Obj.magic Obj.magic x9359) "value")
    let (set_value : ('tags, 'T) this -> 'T -> unit) =
      fun (x9362 : ('tags, 'T) this) ->
        fun (x9363 : 'T) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic Obj.magic x9362) "value"
            (Obj.magic x9363)
    let (create : status:[ `L_s43_fulfilled ] -> value:'T -> unit -> 'T t) =
      fun ~status:(x9366 : [ `L_s43_fulfilled ]) ->
        fun ~value:(x9367 : 'T) ->
          fun () ->
            let x9368 = Ojs.empty_obj () in
            Ojs.set_prop_ascii x9368 "status"
              (match x9366 with
               | `L_s43_fulfilled -> Ojs.string_to_js "fulfilled");
            Ojs.set_prop_ascii x9368 "value" (Obj.magic x9367);
            t_of_js Obj.magic x9368
    let cast_from = Obj.magic
  end
module PromiseSettledResult =
  struct
    type 'T t =
      [ `U_s43_fulfilled of 'T PromiseFulfilledResult.t 
      | `U_s84_rejected of PromiseRejectedResult.t ]
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun (type __T) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x9374 : Ojs.t) ->
            let x9375 = x9374 in
            match Ojs.string_of_js (Ojs.get_prop_ascii x9375 "status") with
            | "fulfilled" ->
                `U_s43_fulfilled
                  (PromiseFulfilledResult.t_of_js __T_of_js x9375)
            | "rejected" ->
                `U_s84_rejected (PromiseRejectedResult.t_of_js x9375)
            | _ -> assert false
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t =
      fun (type __T) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun
            (x9370 :
              [ `U_s43_fulfilled of __T PromiseFulfilledResult.t 
              | `U_s84_rejected of PromiseRejectedResult.t ])
            ->
            match x9370 with
            | `U_s43_fulfilled x9371 ->
                PromiseFulfilledResult.t_to_js __T_to_js x9371
            | `U_s84_rejected x9373 -> PromiseRejectedResult.t_to_js x9373
    type 'T t_1 = 'T t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 =
      fun (type __T) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x9379 : Ojs.t) -> t_of_js __T_of_js x9379
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t =
      fun (type __T) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x9377 : __T t) -> t_to_js __T_to_js x9377
  end
module Awaited =
  struct
    type 'T t = any
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun (type __T) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x9382 : Ojs.t) -> any_of_js x9382
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t =
      fun (type __T) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x9381 : any) -> any_to_js x9381
    type 'T t_1 = 'T t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 =
      fun (type __T) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x9385 : Ojs.t) -> t_of_js __T_of_js x9385
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t =
      fun (type __T) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x9383 : __T t) -> t_to_js __T_to_js x9383
  end
module Promise =
  struct
    type 'T t = [ `Promise of 'T  | 'T PromiseLike.tags_1] intf
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun _T -> Obj.magic
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun _T -> Obj.magic
    type 'T t_1 = 'T t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 =
      fun (type __T) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x9389 : Ojs.t) -> t_of_js __T_of_js x9389
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t =
      fun (type __T) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x9387 : __T t) -> t_to_js __T_to_js x9387
    type 'T tags = [ `Promise of 'T  | 'T PromiseLike.tags_1]
    type 'T tags_1 = 'T tags
    type ('tags, 'T) this = 'tags intf constraint 'tags = [> `Promise of 'T ]
    let rec this_of_js :
      'tags 'T .
        (Ojs.t -> 'tags) -> (Ojs.t -> 'T) -> Ojs.t -> ('tags, 'T) this
      =
      fun (type __tags) ->
        fun (type __T) ->
          fun (__tags_of_js : Ojs.t -> __tags) ->
            fun (__T_of_js : Ojs.t -> __T) ->
              fun (x9393 : Ojs.t) -> intf_of_js __tags_of_js x9393
    and this_to_js :
      'tags 'T .
        ('tags -> Ojs.t) -> ('T -> Ojs.t) -> ('tags, 'T) this -> Ojs.t
      =
      fun (type __tags) ->
        fun (type __T) ->
          fun (__tags_to_js : __tags -> Ojs.t) ->
            fun (__T_to_js : __T -> Ojs.t) ->
              fun (x9391 : __tags intf) -> intf_to_js __tags_to_js x9391
    let (finally :
      ('tags, 'T) this ->
        ?onfinally:[ `Null  | `Undefined of undefined 
                   | `U1 of unit -> unit ]
          -> unit -> 'T t)
      =
      fun (x9400 : ('tags, 'T) this) ->
        fun
          ?onfinally:(x9395 :
                       [ `Null  | `Undefined of undefined 
                       | `U1 of unit -> unit ] option)
          ->
          fun () ->
            t_of_js Obj.magic
              (let x9403 = this_to_js Obj.magic Obj.magic x9400 in
               Ojs.call (Ojs.get_prop_ascii x9403 "finally") "apply"
                 [|x9403;((let x9396 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x9395 with
                            | Some x9397 ->
                                ignore
                                  (Ojs.call x9396 "push"
                                     [|((match x9397 with
                                         | `Null -> Ojs.null
                                         | `Undefined x9398 ->
                                             undefined_to_js x9398
                                         | `U1 x9399 ->
                                             Ojs.fun_to_js 1
                                               (fun _ -> x9399 ())))|])
                            | None -> ());
                           x9396))|])
    let (then_ :
      ('tags, 'T) this ->
        ?onfulfilled:[ `Null  | `Undefined of undefined 
                     | `U1 of
                         'T ->
                           [ `U1 of 'TResult1 
                           | `U2 of 'TResult1 PromiseLike.t ]
                         ]
          ->
          ?onrejected:[ `Null  | `Undefined of undefined 
                      | `U1 of
                          any ->
                            [ `U1 of 'TResult2 
                            | `U2 of 'TResult2 PromiseLike.t ]
                          ]
            -> unit -> ('TResult1, 'TResult2) union2 t)
      =
      fun (x9422 : ('tags, 'T) this) ->
        fun
          ?onfulfilled:(x9405 :
                         [ `Null  | `Undefined of undefined 
                         | `U1 of
                             'T ->
                               [ `U1 of 'TResult1 
                               | `U2 of 'TResult1 PromiseLike.t ]
                             ]
                           option)
          ->
          fun
            ?onrejected:(x9406 :
                          [ `Null  | `Undefined of undefined 
                          | `U1 of
                              any ->
                                [ `U1 of 'TResult2 
                                | `U2 of 'TResult2 PromiseLike.t ]
                              ]
                            option)
            ->
            fun () ->
              t_of_js
                (fun (x9426 : Ojs.t) ->
                   union2_of_js Obj.magic Obj.magic x9426)
                (let x9425 = this_to_js Obj.magic Obj.magic x9422 in
                 Ojs.call (Ojs.get_prop_ascii x9425 "then") "apply"
                   [|x9425;((let x9407 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x9405 with
                              | Some x9415 ->
                                  ignore
                                    (Ojs.call x9407 "push"
                                       [|((match x9415 with
                                           | `Null -> Ojs.null
                                           | `Undefined x9416 ->
                                               undefined_to_js x9416
                                           | `U1 x9417 ->
                                               Ojs.fun_to_js 1
                                                 (fun (x9418 : Ojs.t) ->
                                                    match x9417
                                                            (Obj.magic x9418)
                                                    with
                                                    | `U1 x9419 ->
                                                        Obj.magic x9419
                                                    | `U2 x9420 ->
                                                        PromiseLike.t_to_js
                                                          Obj.magic x9420)))|])
                              | None -> ());
                             (match x9406 with
                              | Some x9408 ->
                                  ignore
                                    (Ojs.call x9407 "push"
                                       [|((match x9408 with
                                           | `Null -> Ojs.null
                                           | `Undefined x9409 ->
                                               undefined_to_js x9409
                                           | `U1 x9410 ->
                                               Ojs.fun_to_js 1
                                                 (fun (x9411 : Ojs.t) ->
                                                    match x9410
                                                            (any_of_js x9411)
                                                    with
                                                    | `U1 x9412 ->
                                                        Obj.magic x9412
                                                    | `U2 x9413 ->
                                                        PromiseLike.t_to_js
                                                          Obj.magic x9413)))|])
                              | None -> ());
                             x9407))|])
    let (catch :
      ('tags, 'T) this ->
        ?onrejected:[ `Null  | `Undefined of undefined 
                    | `U1 of
                        any ->
                          [ `U1 of 'TResult 
                          | `U2 of 'TResult PromiseLike.t ]
                        ]
          -> unit -> ('T, 'TResult) union2 t)
      =
      fun (x9438 : ('tags, 'T) this) ->
        fun
          ?onrejected:(x9429 :
                        [ `Null  | `Undefined of undefined 
                        | `U1 of
                            any ->
                              [ `U1 of 'TResult 
                              | `U2 of 'TResult PromiseLike.t ]
                            ]
                          option)
          ->
          fun () ->
            t_of_js
              (fun (x9442 : Ojs.t) -> union2_of_js Obj.magic Obj.magic x9442)
              (let x9441 = this_to_js Obj.magic Obj.magic x9438 in
               Ojs.call (Ojs.get_prop_ascii x9441 "catch") "apply"
                 [|x9441;((let x9430 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x9429 with
                            | Some x9431 ->
                                ignore
                                  (Ojs.call x9430 "push"
                                     [|((match x9431 with
                                         | `Null -> Ojs.null
                                         | `Undefined x9432 ->
                                             undefined_to_js x9432
                                         | `U1 x9433 ->
                                             Ojs.fun_to_js 1
                                               (fun (x9434 : Ojs.t) ->
                                                  match x9433
                                                          (any_of_js x9434)
                                                  with
                                                  | `U1 x9435 ->
                                                      Obj.magic x9435
                                                  | `U2 x9436 ->
                                                      PromiseLike.t_to_js
                                                        Obj.magic x9436)))|])
                            | None -> ());
                           x9430))|])
    let (any :
      [ `U1 of [ `U1 of 'T  | `U2 of 'T PromiseLike.t ] list 
      | `U2 of [ `U1 of 'T  | `U2 of 'T PromiseLike.t ] Iterable.t ] -> 
        'T t)
      =
      fun
        (x9445 :
          [ `U1 of [ `U1 of 'T  | `U2 of 'T PromiseLike.t ] list 
          | `U2 of [ `U1 of 'T  | `U2 of 'T PromiseLike.t ] Iterable.t ])
        ->
        t_of_js Obj.magic
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Promise") "any"
             [|((match x9445 with
                 | `U1 x9446 ->
                     Ojs.list_to_js
                       (fun
                          (x9447 : [ `U1 of 'T  | `U2 of 'T PromiseLike.t ])
                          ->
                          match x9447 with
                          | `U1 x9448 -> Obj.magic x9448
                          | `U2 x9449 -> PromiseLike.t_to_js Obj.magic x9449)
                       x9446
                 | `U2 x9451 ->
                     Iterable.t_to_js
                       (fun
                          (x9452 : [ `U1 of 'T  | `U2 of 'T PromiseLike.t ])
                          ->
                          match x9452 with
                          | `U1 x9453 -> Obj.magic x9453
                          | `U2 x9454 -> PromiseLike.t_to_js Obj.magic x9454)
                       x9451))|])
    let (allSettled : 'T -> any t) =
      fun (x9457 : 'T) ->
        t_of_js any_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Promise") "allSettled"
             [|(Obj.magic x9457)|])
    let (allSettled' :
      [ `U1 of 'T  | `U2 of 'T PromiseLike.t ] Iterable.t ->
        'T Awaited.t PromiseSettledResult.t list t)
      =
      fun (x9459 : [ `U1 of 'T  | `U2 of 'T PromiseLike.t ] Iterable.t) ->
        t_of_js
          (fun (x9464 : Ojs.t) ->
             Ojs.list_of_js
               (fun (x9465 : Ojs.t) ->
                  PromiseSettledResult.t_of_js
                    (fun (x9466 : Ojs.t) -> Awaited.t_of_js Obj.magic x9466)
                    x9465) x9464)
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Promise") "allSettled"
             [|(Iterable.t_to_js
                  (fun (x9460 : [ `U1 of 'T  | `U2 of 'T PromiseLike.t ]) ->
                     match x9460 with
                     | `U1 x9461 -> Obj.magic x9461
                     | `U2 x9462 -> PromiseLike.t_to_js Obj.magic x9462)
                  x9459)|])
    let (any' : 'T -> any Awaited.t t) =
      fun (x9468 : 'T) ->
        t_of_js (fun (x9469 : Ojs.t) -> Awaited.t_of_js any_of_js x9469)
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Promise") "any"
             [|(Obj.magic x9468)|])
    let (any'' :
      [ `U1 of 'T  | `U2 of 'T PromiseLike.t ] Iterable.t -> 'T Awaited.t t)
      =
      fun (x9471 : [ `U1 of 'T  | `U2 of 'T PromiseLike.t ] Iterable.t) ->
        t_of_js (fun (x9476 : Ojs.t) -> Awaited.t_of_js Obj.magic x9476)
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Promise") "any"
             [|(Iterable.t_to_js
                  (fun (x9472 : [ `U1 of 'T  | `U2 of 'T PromiseLike.t ]) ->
                     match x9472 with
                     | `U1 x9473 -> Obj.magic x9473
                     | `U2 x9474 -> PromiseLike.t_to_js Obj.magic x9474)
                  x9471)|])
    let (prototype : unit -> any t) =
      fun () ->
        t_of_js any_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Promise")
             "prototype")
    let (create :
      (resolve:([ `U1 of 'T  | `U2 of 'T PromiseLike.t ] -> unit) ->
         reject:(?reason:any -> unit -> unit) -> unit)
        -> 'T t)
      =
      fun
        (x9479 :
          resolve:([ `U1 of 'T  | `U2 of 'T PromiseLike.t ] -> unit) ->
            reject:(?reason:any -> unit -> unit) -> unit)
        ->
        t_of_js Obj.magic
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Promise")
             [|(Ojs.fun_to_js 2
                  (fun (x9480 : Ojs.t) ->
                     fun (x9485 : Ojs.t) ->
                       x9479
                         ~resolve:(fun
                                     (x9481 :
                                       [ `U1 of 'T 
                                       | `U2 of 'T PromiseLike.t ])
                                     ->
                                     ignore
                                       (Ojs.apply x9480
                                          [|((match x9481 with
                                              | `U1 x9482 -> Obj.magic x9482
                                              | `U2 x9483 ->
                                                  PromiseLike.t_to_js
                                                    Obj.magic x9483))|]))
                         ~reject:(fun ?reason:(x9486 : any option) ->
                                    fun () ->
                                      ignore
                                        (Ojs.call x9485 "apply"
                                           [|Ojs.null;((let x9487 =
                                                          Ojs.new_obj
                                                            (Ojs.get_prop_ascii
                                                               Ojs.global
                                                               "Array") 
                                                            [||] in
                                                        (match x9486 with
                                                         | Some x9488 ->
                                                             ignore
                                                               (Ojs.call
                                                                  x9487
                                                                  "push"
                                                                  [|(
                                                                    any_to_js
                                                                    x9488)|])
                                                         | None -> ());
                                                        x9487))|]))))|])
    let (all : 'T -> any t) =
      fun (x9490 : 'T) ->
        t_of_js any_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Promise") "all"
             [|(Obj.magic x9490)|])
    let (race : 'T -> any Awaited.t t) =
      fun (x9492 : 'T) ->
        t_of_js (fun (x9493 : Ojs.t) -> Awaited.t_of_js any_of_js x9493)
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Promise") "race"
             [|(Obj.magic x9492)|])
    let (reject : ?reason:any -> unit -> 'T t) =
      fun ?reason:(x9495 : any option) ->
        fun () ->
          t_of_js Obj.magic
            (let x9498 = Ojs.get_prop_ascii Ojs.global "Promise" in
             Ojs.call (Ojs.get_prop_ascii x9498 "reject") "apply"
               [|x9498;((let x9496 =
                           Ojs.new_obj
                             (Ojs.get_prop_ascii Ojs.global "Array") 
                             [||] in
                         (match x9495 with
                          | Some x9497 ->
                              ignore
                                (Ojs.call x9496 "push" [|(any_to_js x9497)|])
                          | None -> ());
                         x9496))|])
    let (resolve : unit -> unit t) =
      fun () ->
        t_of_js Ojs.unit_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Promise") "resolve" [||])
    let (resolve' : [ `U1 of 'T  | `U2 of 'T PromiseLike.t ] -> 'T t) =
      fun (x9501 : [ `U1 of 'T  | `U2 of 'T PromiseLike.t ]) ->
        t_of_js Obj.magic
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Promise") "resolve"
             [|((match x9501 with
                 | `U1 x9502 -> Obj.magic x9502
                 | `U2 x9503 -> PromiseLike.t_to_js Obj.magic x9503))|])
    let (all' :
      [ `U1 of 'T  | `U2 of 'T PromiseLike.t ] Iterable.t ->
        'T Awaited.t list t)
      =
      fun (x9506 : [ `U1 of 'T  | `U2 of 'T PromiseLike.t ] Iterable.t) ->
        t_of_js
          (fun (x9511 : Ojs.t) ->
             Ojs.list_of_js
               (fun (x9512 : Ojs.t) -> Awaited.t_of_js Obj.magic x9512) x9511)
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Promise") "all"
             [|(Iterable.t_to_js
                  (fun (x9507 : [ `U1 of 'T  | `U2 of 'T PromiseLike.t ]) ->
                     match x9507 with
                     | `U1 x9508 -> Obj.magic x9508
                     | `U2 x9509 -> PromiseLike.t_to_js Obj.magic x9509)
                  x9506)|])
    let (race' :
      [ `U1 of 'T  | `U2 of 'T PromiseLike.t ] Iterable.t -> 'T Awaited.t t)
      =
      fun (x9514 : [ `U1 of 'T  | `U2 of 'T PromiseLike.t ] Iterable.t) ->
        t_of_js (fun (x9519 : Ojs.t) -> Awaited.t_of_js Obj.magic x9519)
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Promise") "race"
             [|(Iterable.t_to_js
                  (fun (x9515 : [ `U1 of 'T  | `U2 of 'T PromiseLike.t ]) ->
                     match x9515 with
                     | `U1 x9516 -> Obj.magic x9516
                     | `U2 x9517 -> PromiseLike.t_to_js Obj.magic x9517)
                  x9514)|])
    let cast_from = Obj.magic
  end
module AsyncIterator =
  struct
    type ('T, 'TReturn, 'TNext) t =
      [ `AsyncIterator of ('T * 'TReturn * 'TNext) ] intf
    let rec t_of_js :
      'T 'TReturn 'TNext .
        (Ojs.t -> 'T) ->
          (Ojs.t -> 'TReturn) ->
            (Ojs.t -> 'TNext) -> Ojs.t -> ('T, 'TReturn, 'TNext) t
      = fun _T -> fun _TReturn -> fun _TNext -> Obj.magic
    and t_to_js :
      'T 'TReturn 'TNext .
        ('T -> Ojs.t) ->
          ('TReturn -> Ojs.t) ->
            ('TNext -> Ojs.t) -> ('T, 'TReturn, 'TNext) t -> Ojs.t
      = fun _T -> fun _TReturn -> fun _TNext -> Obj.magic
    type ('T, 'TReturn, 'TNext) t_3 = ('T, 'TReturn, 'TNext) t
    let rec t_3_of_js :
      'T 'TReturn 'TNext .
        (Ojs.t -> 'T) ->
          (Ojs.t -> 'TReturn) ->
            (Ojs.t -> 'TNext) -> Ojs.t -> ('T, 'TReturn, 'TNext) t_3
      =
      fun (type __T) ->
        fun (type __TReturn) ->
          fun (type __TNext) ->
            fun (__T_of_js : Ojs.t -> __T) ->
              fun (__TReturn_of_js : Ojs.t -> __TReturn) ->
                fun (__TNext_of_js : Ojs.t -> __TNext) ->
                  fun (x9525 : Ojs.t) ->
                    t_of_js __T_of_js __TReturn_of_js __TNext_of_js x9525
    and t_3_to_js :
      'T 'TReturn 'TNext .
        ('T -> Ojs.t) ->
          ('TReturn -> Ojs.t) ->
            ('TNext -> Ojs.t) -> ('T, 'TReturn, 'TNext) t_3 -> Ojs.t
      =
      fun (type __T) ->
        fun (type __TReturn) ->
          fun (type __TNext) ->
            fun (__T_to_js : __T -> Ojs.t) ->
              fun (__TReturn_to_js : __TReturn -> Ojs.t) ->
                fun (__TNext_to_js : __TNext -> Ojs.t) ->
                  fun (x9521 : (__T, __TReturn, __TNext) t) ->
                    t_to_js __T_to_js __TReturn_to_js __TNext_to_js x9521
    type ('T, 'TReturn) t_2 = ('T, 'TReturn, undefined) t
    let rec t_2_of_js :
      'T 'TReturn .
        (Ojs.t -> 'T) -> (Ojs.t -> 'TReturn) -> Ojs.t -> ('T, 'TReturn) t_2
      =
      fun (type __T) ->
        fun (type __TReturn) ->
          fun (__T_of_js : Ojs.t -> __T) ->
            fun (__TReturn_of_js : Ojs.t -> __TReturn) ->
              fun (x9533 : Ojs.t) ->
                t_of_js __T_of_js __TReturn_of_js undefined_of_js x9533
    and t_2_to_js :
      'T 'TReturn .
        ('T -> Ojs.t) -> ('TReturn -> Ojs.t) -> ('T, 'TReturn) t_2 -> Ojs.t
      =
      fun (type __T) ->
        fun (type __TReturn) ->
          fun (__T_to_js : __T -> Ojs.t) ->
            fun (__TReturn_to_js : __TReturn -> Ojs.t) ->
              fun (x9529 : (__T, __TReturn, undefined) t) ->
                t_to_js __T_to_js __TReturn_to_js undefined_to_js x9529
    type 'T t_1 = ('T, any, undefined) t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 =
      fun (type __T) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x9541 : Ojs.t) ->
            t_of_js __T_of_js any_of_js undefined_of_js x9541
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t =
      fun (type __T) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x9537 : (__T, any, undefined) t) ->
            t_to_js __T_to_js any_to_js undefined_to_js x9537
    type ('T, 'TReturn, 'TNext) tags =
      [ `AsyncIterator of ('T * 'TReturn * 'TNext) ]
    type ('T, 'TReturn, 'TNext) tags_3 = ('T, 'TReturn, 'TNext) tags
    type ('T, 'TReturn) tags_2 = ('T, 'TReturn, undefined) tags
    type 'T tags_1 = ('T, any, undefined) tags
    type ('tags, 'T, 'TReturn, 'TNext) this =
      'tags intf constraint 'tags =
                  [> `AsyncIterator of ('T * 'TReturn * 'TNext) ]
    let rec this_of_js :
      'tags 'T 'TReturn 'TNext .
        (Ojs.t -> 'tags) ->
          (Ojs.t -> 'T) ->
            (Ojs.t -> 'TReturn) ->
              (Ojs.t -> 'TNext) ->
                Ojs.t -> ('tags, 'T, 'TReturn, 'TNext) this
      =
      fun (type __tags) ->
        fun (type __T) ->
          fun (type __TReturn) ->
            fun (type __TNext) ->
              fun (__tags_of_js : Ojs.t -> __tags) ->
                fun (__T_of_js : Ojs.t -> __T) ->
                  fun (__TReturn_of_js : Ojs.t -> __TReturn) ->
                    fun (__TNext_of_js : Ojs.t -> __TNext) ->
                      fun (x9547 : Ojs.t) -> intf_of_js __tags_of_js x9547
    and this_to_js :
      'tags 'T 'TReturn 'TNext .
        ('tags -> Ojs.t) ->
          ('T -> Ojs.t) ->
            ('TReturn -> Ojs.t) ->
              ('TNext -> Ojs.t) ->
                ('tags, 'T, 'TReturn, 'TNext) this -> Ojs.t
      =
      fun (type __tags) ->
        fun (type __T) ->
          fun (type __TReturn) ->
            fun (type __TNext) ->
              fun (__tags_to_js : __tags -> Ojs.t) ->
                fun (__T_to_js : __T -> Ojs.t) ->
                  fun (__TReturn_to_js : __TReturn -> Ojs.t) ->
                    fun (__TNext_to_js : __TNext -> Ojs.t) ->
                      fun (x9545 : __tags intf) ->
                        intf_to_js __tags_to_js x9545
    let (next :
      ('tags, 'T, 'TReturn, 'TNext) this ->
        args:any list -> ('T, 'TReturn) IteratorResult.t Promise.t)
      =
      fun (x9552 : ('tags, 'T, 'TReturn, 'TNext) this) ->
        fun ~args:(x9549 : any list) ->
          Promise.t_of_js
            (fun (x9558 : Ojs.t) ->
               IteratorResult.t_of_js Obj.magic Obj.magic x9558)
            (let x9557 =
               this_to_js Obj.magic Obj.magic Obj.magic Obj.magic x9552 in
             Ojs.call (Ojs.get_prop_ascii x9557 "next") "apply"
               [|x9557;((let x9550 =
                           Ojs.new_obj
                             (Ojs.get_prop_ascii Ojs.global "Array") 
                             [||] in
                         List.iter
                           (fun (x9551 : any) ->
                              ignore
                                (Ojs.call x9550 "push" [|(any_to_js x9551)|]))
                           x9549;
                         x9550))|])
    let (return :
      ('tags, 'T, 'TReturn, 'TNext) this ->
        ?value:[ `U1 of 'TReturn  | `U2 of 'TReturn PromiseLike.t ] ->
          unit -> ('T, 'TReturn) IteratorResult.t Promise.t)
      =
      fun (x9567 : ('tags, 'T, 'TReturn, 'TNext) this) ->
        fun
          ?value:(x9561 :
                   [ `U1 of 'TReturn  | `U2 of 'TReturn PromiseLike.t ]
                     option)
          ->
          fun () ->
            Promise.t_of_js
              (fun (x9573 : Ojs.t) ->
                 IteratorResult.t_of_js Obj.magic Obj.magic x9573)
              (let x9572 =
                 this_to_js Obj.magic Obj.magic Obj.magic Obj.magic x9567 in
               Ojs.call (Ojs.get_prop_ascii x9572 "return") "apply"
                 [|x9572;((let x9562 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x9561 with
                            | Some x9563 ->
                                ignore
                                  (Ojs.call x9562 "push"
                                     [|((match x9563 with
                                         | `U1 x9564 -> Obj.magic x9564
                                         | `U2 x9565 ->
                                             PromiseLike.t_to_js Obj.magic
                                               x9565))|])
                            | None -> ());
                           x9562))|])
    let (throw :
      ('tags, 'T, 'TReturn, 'TNext) this ->
        ?e:any -> unit -> ('T, 'TReturn) IteratorResult.t Promise.t)
      =
      fun (x9579 : ('tags, 'T, 'TReturn, 'TNext) this) ->
        fun ?e:(x9576 : any option) ->
          fun () ->
            Promise.t_of_js
              (fun (x9585 : Ojs.t) ->
                 IteratorResult.t_of_js Obj.magic Obj.magic x9585)
              (let x9584 =
                 this_to_js Obj.magic Obj.magic Obj.magic Obj.magic x9579 in
               Ojs.call (Ojs.get_prop_ascii x9584 "throw") "apply"
                 [|x9584;((let x9577 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x9576 with
                            | Some x9578 ->
                                ignore
                                  (Ojs.call x9577 "push"
                                     [|(any_to_js x9578)|])
                            | None -> ());
                           x9577))|])
    let cast_from = Obj.magic
  end
module AsyncIterableIterator =
  struct
    type 'T t =
      [ `AsyncIterableIterator of 'T 
      | `AsyncIterator of ('T * any * undefined) ] intf
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun _T -> Obj.magic
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun _T -> Obj.magic
    type 'T t_1 = 'T t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 =
      fun (type __T) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x9590 : Ojs.t) -> t_of_js __T_of_js x9590
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t =
      fun (type __T) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x9588 : __T t) -> t_to_js __T_to_js x9588
    type 'T tags =
      [ `AsyncIterableIterator of 'T 
      | `AsyncIterator of ('T * any * undefined) ]
    type 'T tags_1 = 'T tags
    type ('tags, 'T) this =
      'tags intf constraint 'tags = [> `AsyncIterableIterator of 'T ]
    let rec this_of_js :
      'tags 'T .
        (Ojs.t -> 'tags) -> (Ojs.t -> 'T) -> Ojs.t -> ('tags, 'T) this
      =
      fun (type __tags) ->
        fun (type __T) ->
          fun (__tags_of_js : Ojs.t -> __tags) ->
            fun (__T_of_js : Ojs.t -> __T) ->
              fun (x9594 : Ojs.t) -> intf_of_js __tags_of_js x9594
    and this_to_js :
      'tags 'T .
        ('tags -> Ojs.t) -> ('T -> Ojs.t) -> ('tags, 'T) this -> Ojs.t
      =
      fun (type __tags) ->
        fun (type __T) ->
          fun (__tags_to_js : __tags -> Ojs.t) ->
            fun (__T_to_js : __T -> Ojs.t) ->
              fun (x9592 : __tags intf) -> intf_to_js __tags_to_js x9592
    let cast_from = Obj.magic
  end
module AsyncIterable =
  struct
    type 'T t = [ `AsyncIterable of 'T ] intf
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun _T -> Obj.magic
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun _T -> Obj.magic
    type 'T t_1 = 'T t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 =
      fun (type __T) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x9598 : Ojs.t) -> t_of_js __T_of_js x9598
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t =
      fun (type __T) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x9596 : __T t) -> t_to_js __T_to_js x9596
    type 'T tags = [ `AsyncIterable of 'T ]
    type 'T tags_1 = 'T tags
    type ('tags, 'T) this =
      'tags intf constraint 'tags = [> `AsyncIterable of 'T ]
    let rec this_of_js :
      'tags 'T .
        (Ojs.t -> 'tags) -> (Ojs.t -> 'T) -> Ojs.t -> ('tags, 'T) this
      =
      fun (type __tags) ->
        fun (type __T) ->
          fun (__tags_of_js : Ojs.t -> __tags) ->
            fun (__T_of_js : Ojs.t -> __T) ->
              fun (x9602 : Ojs.t) -> intf_of_js __tags_of_js x9602
    and this_to_js :
      'tags 'T .
        ('tags -> Ojs.t) -> ('T -> Ojs.t) -> ('tags, 'T) this -> Ojs.t
      =
      fun (type __tags) ->
        fun (type __T) ->
          fun (__tags_to_js : __tags -> Ojs.t) ->
            fun (__T_to_js : __T -> Ojs.t) ->
              fun (x9600 : __tags intf) -> intf_to_js __tags_to_js x9600
    let cast_from = Obj.magic
  end
module AsyncGenerator =
  struct
    type ('T, 'TReturn, 'TNext) t =
      [ `AsyncGenerator of ('T * 'TReturn * 'TNext) 
      | `AsyncIterator of ('T * 'TReturn * 'TNext) ] intf
    let rec t_of_js :
      'T 'TReturn 'TNext .
        (Ojs.t -> 'T) ->
          (Ojs.t -> 'TReturn) ->
            (Ojs.t -> 'TNext) -> Ojs.t -> ('T, 'TReturn, 'TNext) t
      = fun _T -> fun _TReturn -> fun _TNext -> Obj.magic
    and t_to_js :
      'T 'TReturn 'TNext .
        ('T -> Ojs.t) ->
          ('TReturn -> Ojs.t) ->
            ('TNext -> Ojs.t) -> ('T, 'TReturn, 'TNext) t -> Ojs.t
      = fun _T -> fun _TReturn -> fun _TNext -> Obj.magic
    type ('T, 'TReturn, 'TNext) t_3 = ('T, 'TReturn, 'TNext) t
    let rec t_3_of_js :
      'T 'TReturn 'TNext .
        (Ojs.t -> 'T) ->
          (Ojs.t -> 'TReturn) ->
            (Ojs.t -> 'TNext) -> Ojs.t -> ('T, 'TReturn, 'TNext) t_3
      =
      fun (type __T) ->
        fun (type __TReturn) ->
          fun (type __TNext) ->
            fun (__T_of_js : Ojs.t -> __T) ->
              fun (__TReturn_of_js : Ojs.t -> __TReturn) ->
                fun (__TNext_of_js : Ojs.t -> __TNext) ->
                  fun (x9608 : Ojs.t) ->
                    t_of_js __T_of_js __TReturn_of_js __TNext_of_js x9608
    and t_3_to_js :
      'T 'TReturn 'TNext .
        ('T -> Ojs.t) ->
          ('TReturn -> Ojs.t) ->
            ('TNext -> Ojs.t) -> ('T, 'TReturn, 'TNext) t_3 -> Ojs.t
      =
      fun (type __T) ->
        fun (type __TReturn) ->
          fun (type __TNext) ->
            fun (__T_to_js : __T -> Ojs.t) ->
              fun (__TReturn_to_js : __TReturn -> Ojs.t) ->
                fun (__TNext_to_js : __TNext -> Ojs.t) ->
                  fun (x9604 : (__T, __TReturn, __TNext) t) ->
                    t_to_js __T_to_js __TReturn_to_js __TNext_to_js x9604
    type ('T, 'TReturn) t_2 = ('T, 'TReturn, unknown) t
    let rec t_2_of_js :
      'T 'TReturn .
        (Ojs.t -> 'T) -> (Ojs.t -> 'TReturn) -> Ojs.t -> ('T, 'TReturn) t_2
      =
      fun (type __T) ->
        fun (type __TReturn) ->
          fun (__T_of_js : Ojs.t -> __T) ->
            fun (__TReturn_of_js : Ojs.t -> __TReturn) ->
              fun (x9616 : Ojs.t) ->
                t_of_js __T_of_js __TReturn_of_js unknown_of_js x9616
    and t_2_to_js :
      'T 'TReturn .
        ('T -> Ojs.t) -> ('TReturn -> Ojs.t) -> ('T, 'TReturn) t_2 -> Ojs.t
      =
      fun (type __T) ->
        fun (type __TReturn) ->
          fun (__T_to_js : __T -> Ojs.t) ->
            fun (__TReturn_to_js : __TReturn -> Ojs.t) ->
              fun (x9612 : (__T, __TReturn, unknown) t) ->
                t_to_js __T_to_js __TReturn_to_js unknown_to_js x9612
    type 'T t_1 = ('T, any, unknown) t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 =
      fun (type __T) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x9624 : Ojs.t) ->
            t_of_js __T_of_js any_of_js unknown_of_js x9624
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t =
      fun (type __T) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x9620 : (__T, any, unknown) t) ->
            t_to_js __T_to_js any_to_js unknown_to_js x9620
    type t_0 = (unknown, any, unknown) t
    let rec t_0_of_js : Ojs.t -> t_0 =
      fun (x9632 : Ojs.t) ->
        t_of_js unknown_of_js any_of_js unknown_of_js x9632
    and t_0_to_js : t_0 -> Ojs.t =
      fun (x9628 : (unknown, any, unknown) t) ->
        t_to_js unknown_to_js any_to_js unknown_to_js x9628
    type ('T, 'TReturn, 'TNext) tags =
      [ `AsyncGenerator of ('T * 'TReturn * 'TNext) 
      | `AsyncIterator of ('T * 'TReturn * 'TNext) ]
    type ('T, 'TReturn, 'TNext) tags_3 = ('T, 'TReturn, 'TNext) tags
    type ('T, 'TReturn) tags_2 = ('T, 'TReturn, unknown) tags
    type 'T tags_1 = ('T, any, unknown) tags
    type tags_0 = (unknown, any, unknown) tags
    type ('tags, 'T, 'TReturn, 'TNext) this =
      'tags intf constraint 'tags =
                  [> `AsyncGenerator of ('T * 'TReturn * 'TNext) ]
    let rec this_of_js :
      'tags 'T 'TReturn 'TNext .
        (Ojs.t -> 'tags) ->
          (Ojs.t -> 'T) ->
            (Ojs.t -> 'TReturn) ->
              (Ojs.t -> 'TNext) ->
                Ojs.t -> ('tags, 'T, 'TReturn, 'TNext) this
      =
      fun (type __tags) ->
        fun (type __T) ->
          fun (type __TReturn) ->
            fun (type __TNext) ->
              fun (__tags_of_js : Ojs.t -> __tags) ->
                fun (__T_of_js : Ojs.t -> __T) ->
                  fun (__TReturn_of_js : Ojs.t -> __TReturn) ->
                    fun (__TNext_of_js : Ojs.t -> __TNext) ->
                      fun (x9638 : Ojs.t) -> intf_of_js __tags_of_js x9638
    and this_to_js :
      'tags 'T 'TReturn 'TNext .
        ('tags -> Ojs.t) ->
          ('T -> Ojs.t) ->
            ('TReturn -> Ojs.t) ->
              ('TNext -> Ojs.t) ->
                ('tags, 'T, 'TReturn, 'TNext) this -> Ojs.t
      =
      fun (type __tags) ->
        fun (type __T) ->
          fun (type __TReturn) ->
            fun (type __TNext) ->
              fun (__tags_to_js : __tags -> Ojs.t) ->
                fun (__T_to_js : __T -> Ojs.t) ->
                  fun (__TReturn_to_js : __TReturn -> Ojs.t) ->
                    fun (__TNext_to_js : __TNext -> Ojs.t) ->
                      fun (x9636 : __tags intf) ->
                        intf_to_js __tags_to_js x9636
    let (next :
      ('tags, 'T, 'TReturn, 'TNext) this ->
        args:any list -> ('T, 'TReturn) IteratorResult.t Promise.t)
      =
      fun (x9643 : ('tags, 'T, 'TReturn, 'TNext) this) ->
        fun ~args:(x9640 : any list) ->
          Promise.t_of_js
            (fun (x9649 : Ojs.t) ->
               IteratorResult.t_of_js Obj.magic Obj.magic x9649)
            (let x9648 =
               this_to_js Obj.magic Obj.magic Obj.magic Obj.magic x9643 in
             Ojs.call (Ojs.get_prop_ascii x9648 "next") "apply"
               [|x9648;((let x9641 =
                           Ojs.new_obj
                             (Ojs.get_prop_ascii Ojs.global "Array") 
                             [||] in
                         List.iter
                           (fun (x9642 : any) ->
                              ignore
                                (Ojs.call x9641 "push" [|(any_to_js x9642)|]))
                           x9640;
                         x9641))|])
    let (return :
      ('tags, 'T, 'TReturn, 'TNext) this ->
        value:[ `U1 of 'TReturn  | `U2 of 'TReturn PromiseLike.t ] ->
          ('T, 'TReturn) IteratorResult.t Promise.t)
      =
      fun (x9656 : ('tags, 'T, 'TReturn, 'TNext) this) ->
        fun
          ~value:(x9652 :
                   [ `U1 of 'TReturn  | `U2 of 'TReturn PromiseLike.t ])
          ->
          Promise.t_of_js
            (fun (x9661 : Ojs.t) ->
               IteratorResult.t_of_js Obj.magic Obj.magic x9661)
            (Ojs.call
               (this_to_js Obj.magic Obj.magic Obj.magic Obj.magic x9656)
               "return"
               [|((match x9652 with
                   | `U1 x9653 -> Obj.magic x9653
                   | `U2 x9654 -> PromiseLike.t_to_js Obj.magic x9654))|])
    let (throw :
      ('tags, 'T, 'TReturn, 'TNext) this ->
        e:any -> ('T, 'TReturn) IteratorResult.t Promise.t)
      =
      fun (x9665 : ('tags, 'T, 'TReturn, 'TNext) this) ->
        fun ~e:(x9664 : any) ->
          Promise.t_of_js
            (fun (x9670 : Ojs.t) ->
               IteratorResult.t_of_js Obj.magic Obj.magic x9670)
            (Ojs.call
               (this_to_js Obj.magic Obj.magic Obj.magic Obj.magic x9665)
               "throw" [|(any_to_js x9664)|])
    let cast_from = Obj.magic
  end
module AsyncGeneratorFunction =
  struct
    type t = [ `AsyncGeneratorFunction ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x9674 : Ojs.t) -> t_of_js x9674
    and t_0_to_js : t_0 -> Ojs.t = fun (x9673 : t) -> t_to_js x9673
    type tags = [ `AsyncGeneratorFunction ]
    type tags_0 = tags
    type 'tags this =
      'tags intf constraint 'tags = [> `AsyncGeneratorFunction ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x9677 : Ojs.t) -> intf_of_js __tags_of_js x9677
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x9675 : __tags intf) -> intf_to_js __tags_to_js x9675
    let (create : 'tags this -> args:any list -> AsyncGenerator.t_0) =
      fun (x9682 : 'tags this) ->
        fun ~args:(x9679 : any list) ->
          AsyncGenerator.t_0_of_js
            (Ojs.new_obj_arr (this_to_js Obj.magic x9682)
               (let x9680 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                List.iter
                  (fun (x9681 : any) ->
                     ignore (Ojs.call x9680 "push" [|(any_to_js x9681)|]))
                  x9679;
                x9680))
    let (apply : 'tags this -> args:any list -> AsyncGenerator.t_0) =
      fun (x9687 : 'tags this) ->
        fun ~args:(x9684 : any list) ->
          AsyncGenerator.t_0_of_js
            (Ojs.call (this_to_js Obj.magic x9687) "apply"
               [|Ojs.null;((let x9685 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            List.iter
                              (fun (x9686 : any) ->
                                 ignore
                                   (Ojs.call x9685 "push"
                                      [|(any_to_js x9686)|])) x9684;
                            x9685))|])
    let (get_length : 'tags this -> float) =
      fun (x9689 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x9689) "length")
    let (get_name : 'tags this -> string) =
      fun (x9691 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x9691) "name")
    let (get_prototype : 'tags this -> AsyncGenerator.t_0) =
      fun (x9693 : 'tags this) ->
        AsyncGenerator.t_0_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x9693) "prototype")
    let cast_from = Obj.magic
  end
module AsyncGeneratorFunctionConstructor =
  struct
    type t = [ `AsyncGeneratorFunctionConstructor ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x9696 : Ojs.t) -> t_of_js x9696
    and t_0_to_js : t_0 -> Ojs.t = fun (x9695 : t) -> t_to_js x9695
    type tags = [ `AsyncGeneratorFunctionConstructor ]
    type tags_0 = tags
    type 'tags this =
      'tags intf constraint 'tags = [> `AsyncGeneratorFunctionConstructor ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x9699 : Ojs.t) -> intf_of_js __tags_of_js x9699
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x9697 : __tags intf) -> intf_to_js __tags_to_js x9697
    let (create : 'tags this -> args:string list -> AsyncGeneratorFunction.t)
      =
      fun (x9704 : 'tags this) ->
        fun ~args:(x9701 : string list) ->
          AsyncGeneratorFunction.t_of_js
            (Ojs.new_obj_arr (this_to_js Obj.magic x9704)
               (let x9702 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                List.iter
                  (fun (x9703 : string) ->
                     ignore
                       (Ojs.call x9702 "push" [|(Ojs.string_to_js x9703)|]))
                  x9701;
                x9702))
    let (apply : 'tags this -> args:string list -> AsyncGeneratorFunction.t)
      =
      fun (x9709 : 'tags this) ->
        fun ~args:(x9706 : string list) ->
          AsyncGeneratorFunction.t_of_js
            (Ojs.call (this_to_js Obj.magic x9709) "apply"
               [|Ojs.null;((let x9707 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            List.iter
                              (fun (x9708 : string) ->
                                 ignore
                                   (Ojs.call x9707 "push"
                                      [|(Ojs.string_to_js x9708)|])) x9706;
                            x9707))|])
    let (get_length : 'tags this -> float) =
      fun (x9711 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x9711) "length")
    let (get_name : 'tags this -> string) =
      fun (x9713 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x9713) "name")
    let (get_prototype : 'tags this -> AsyncGeneratorFunction.t) =
      fun (x9715 : 'tags this) ->
        AsyncGeneratorFunction.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x9715) "prototype")
    let cast_from = Obj.magic
  end
module ArrayBufferView =
  struct
    type t = [ `ArrayBufferView ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x9718 : Ojs.t) -> t_of_js x9718
    and t_0_to_js : t_0 -> Ojs.t = fun (x9717 : t) -> t_to_js x9717
    type tags = [ `ArrayBufferView ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `ArrayBufferView ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x9721 : Ojs.t) -> intf_of_js __tags_of_js x9721
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x9719 : __tags intf) -> intf_to_js __tags_to_js x9719
    let (get_buffer : 'tags this -> ArrayBufferLike.t) =
      fun (x9723 : 'tags this) ->
        ArrayBufferLike.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x9723) "buffer")
    let (set_buffer : 'tags this -> ArrayBufferLike.t -> unit) =
      fun (x9725 : 'tags this) ->
        fun (x9726 : ArrayBufferLike.t) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x9725) "buffer"
            (ArrayBufferLike.t_to_js x9726)
    let (get_byteLength : 'tags this -> float) =
      fun (x9728 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x9728) "byteLength")
    let (set_byteLength : 'tags this -> float -> unit) =
      fun (x9730 : 'tags this) ->
        fun (x9731 : float) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x9730) "byteLength"
            (Ojs.float_to_js x9731)
    let (get_byteOffset : 'tags this -> float) =
      fun (x9733 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x9733) "byteOffset")
    let (set_byteOffset : 'tags this -> float -> unit) =
      fun (x9735 : 'tags this) ->
        fun (x9736 : float) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x9735) "byteOffset"
            (Ojs.float_to_js x9736)
    let (create :
      buffer:ArrayBufferLike.t ->
        byteLength:float -> byteOffset:float -> unit -> t)
      =
      fun ~buffer:(x9738 : ArrayBufferLike.t) ->
        fun ~byteLength:(x9739 : float) ->
          fun ~byteOffset:(x9740 : float) ->
            fun () ->
              let x9741 = Ojs.empty_obj () in
              Ojs.set_prop_ascii x9741 "buffer"
                (ArrayBufferLike.t_to_js x9738);
              Ojs.set_prop_ascii x9741 "byteLength" (Ojs.float_to_js x9739);
              Ojs.set_prop_ascii x9741 "byteOffset" (Ojs.float_to_js x9740);
              t_of_js x9741
    let cast_from = Obj.magic
  end
module ArrayBufferTypes =
  struct
    type t = [ `ArrayBufferTypes ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x9743 : Ojs.t) -> t_of_js x9743
    and t_0_to_js : t_0 -> Ojs.t = fun (x9742 : t) -> t_to_js x9742
    type tags = [ `ArrayBufferTypes ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `ArrayBufferTypes ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x9746 : Ojs.t) -> intf_of_js __tags_of_js x9746
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x9744 : __tags intf) -> intf_to_js __tags_to_js x9744
    let (get_SharedArrayBuffer : 'tags this -> SharedArrayBuffer.t) =
      fun (x9748 : 'tags this) ->
        SharedArrayBuffer.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x9748)
             "SharedArrayBuffer")
    let (set_SharedArrayBuffer : 'tags this -> SharedArrayBuffer.t -> unit) =
      fun (x9750 : 'tags this) ->
        fun (x9751 : SharedArrayBuffer.t) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x9750) "SharedArrayBuffer"
            (SharedArrayBuffer.t_to_js x9751)
    let (get_ArrayBuffer : 'tags this -> ArrayBuffer.t) =
      fun (x9753 : 'tags this) ->
        ArrayBuffer.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x9753) "ArrayBuffer")
    let (set_ArrayBuffer : 'tags this -> ArrayBuffer.t -> unit) =
      fun (x9755 : 'tags this) ->
        fun (x9756 : ArrayBuffer.t) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x9755) "ArrayBuffer"
            (ArrayBuffer.t_to_js x9756)
    let (create :
      sharedArrayBuffer:SharedArrayBuffer.t ->
        arrayBuffer:ArrayBuffer.t -> unit -> t)
      =
      fun ~sharedArrayBuffer:(x9758 : SharedArrayBuffer.t) ->
        fun ~arrayBuffer:(x9759 : ArrayBuffer.t) ->
          fun () ->
            let x9760 = Ojs.empty_obj () in
            Ojs.set_prop_ascii x9760 "SharedArrayBuffer"
              (SharedArrayBuffer.t_to_js x9758);
            Ojs.set_prop_ascii x9760 "ArrayBuffer"
              (ArrayBuffer.t_to_js x9759);
            t_of_js x9760
    let cast_from = Obj.magic
  end
module AggregateError =
  struct
    type t = [ `AggregateError  | `Error ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x9762 : Ojs.t) -> t_of_js x9762
    and t_0_to_js : t_0 -> Ojs.t = fun (x9761 : t) -> t_to_js x9761
    type tags = [ `AggregateError  | `Error ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `AggregateError ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x9765 : Ojs.t) -> intf_of_js __tags_of_js x9765
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x9763 : __tags intf) -> intf_to_js __tags_to_js x9763
    let (get_errors : 'tags this -> any list) =
      fun (x9767 : 'tags this) ->
        Ojs.list_of_js any_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x9767) "errors")
    let (set_errors : 'tags this -> any list -> unit) =
      fun (x9770 : 'tags this) ->
        fun (x9771 : any list) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x9770) "errors"
            (Ojs.list_to_js any_to_js x9771)
    let (get_errors' : 'tags this -> any list) =
      fun (x9774 : 'tags this) ->
        Ojs.list_of_js any_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x9774) "errors")
    let (set_errors' : 'tags this -> any list -> unit) =
      fun (x9777 : 'tags this) ->
        fun (x9778 : any list) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x9777) "errors"
            (Ojs.list_to_js any_to_js x9778)
    let (create : errors:any Iterable.t -> ?message:string -> unit -> t) =
      fun ~errors:(x9781 : any Iterable.t) ->
        fun ?message:(x9782 : string option) ->
          fun () ->
            t_of_js
              (Ojs.new_obj_arr
                 (Ojs.get_prop_ascii Ojs.global "AggregateError")
                 (let x9783 =
                    Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                  ignore
                    (Ojs.call x9783 "push"
                       [|(Iterable.t_to_js any_to_js x9781)|]);
                  (match x9782 with
                   | Some x9784 ->
                       ignore
                         (Ojs.call x9783 "push" [|(Ojs.string_to_js x9784)|])
                   | None -> ());
                  x9783))
    let (invoke : errors:any Iterable.t -> ?message:string -> unit -> t) =
      fun ~errors:(x9786 : any Iterable.t) ->
        fun ?message:(x9787 : string option) ->
          fun () ->
            t_of_js
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "AggregateError")
                 "apply"
                 [|Ojs.null;((let x9788 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x9788 "push"
                                   [|(Iterable.t_to_js any_to_js x9786)|]);
                              (match x9787 with
                               | Some x9789 ->
                                   ignore
                                     (Ojs.call x9788 "push"
                                        [|(Ojs.string_to_js x9789)|])
                               | None -> ());
                              x9788))|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "AggregateError") "prototype")
    let (create' :
      errors:any Iterable.t ->
        ?message:string -> ?options:ErrorOptions.t -> unit -> t)
      =
      fun ~errors:(x9791 : any Iterable.t) ->
        fun ?message:(x9792 : string option) ->
          fun ?options:(x9793 : ErrorOptions.t option) ->
            fun () ->
              t_of_js
                (Ojs.new_obj_arr
                   (Ojs.get_prop_ascii Ojs.global "AggregateError")
                   (let x9794 =
                      Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                        [||] in
                    ignore
                      (Ojs.call x9794 "push"
                         [|(Iterable.t_to_js any_to_js x9791)|]);
                    (match x9792 with
                     | Some x9796 ->
                         ignore
                           (Ojs.call x9794 "push"
                              [|(Ojs.string_to_js x9796)|])
                     | None -> ());
                    (match x9793 with
                     | Some x9795 ->
                         ignore
                           (Ojs.call x9794 "push"
                              [|(ErrorOptions.t_to_js x9795)|])
                     | None -> ());
                    x9794))
    let (invoke' :
      errors:any Iterable.t ->
        ?message:string -> ?options:ErrorOptions.t -> unit -> t)
      =
      fun ~errors:(x9798 : any Iterable.t) ->
        fun ?message:(x9799 : string option) ->
          fun ?options:(x9800 : ErrorOptions.t option) ->
            fun () ->
              t_of_js
                (Ojs.call (Ojs.get_prop_ascii Ojs.global "AggregateError")
                   "apply"
                   [|Ojs.null;((let x9801 =
                                  Ojs.new_obj
                                    (Ojs.get_prop_ascii Ojs.global "Array")
                                    [||] in
                                ignore
                                  (Ojs.call x9801 "push"
                                     [|(Iterable.t_to_js any_to_js x9798)|]);
                                (match x9799 with
                                 | Some x9803 ->
                                     ignore
                                       (Ojs.call x9801 "push"
                                          [|(Ojs.string_to_js x9803)|])
                                 | None -> ());
                                (match x9800 with
                                 | Some x9802 ->
                                     ignore
                                       (Ojs.call x9801 "push"
                                          [|(ErrorOptions.t_to_js x9802)|])
                                 | None -> ());
                                x9801))|])
    let (create'' : errors:any Iterable.t -> ?message:string -> unit -> t) =
      fun ~errors:(x9805 : any Iterable.t) ->
        fun ?message:(x9806 : string option) ->
          fun () ->
            t_of_js
              (Ojs.new_obj_arr
                 (Ojs.get_prop_ascii Ojs.global "AggregateError")
                 (let x9807 =
                    Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                  ignore
                    (Ojs.call x9807 "push"
                       [|(Iterable.t_to_js any_to_js x9805)|]);
                  (match x9806 with
                   | Some x9808 ->
                       ignore
                         (Ojs.call x9807 "push" [|(Ojs.string_to_js x9808)|])
                   | None -> ());
                  x9807))
    let (invoke'' : errors:any Iterable.t -> ?message:string -> unit -> t) =
      fun ~errors:(x9810 : any Iterable.t) ->
        fun ?message:(x9811 : string option) ->
          fun () ->
            t_of_js
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "AggregateError")
                 "apply"
                 [|Ojs.null;((let x9812 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x9812 "push"
                                   [|(Iterable.t_to_js any_to_js x9810)|]);
                              (match x9811 with
                               | Some x9813 ->
                                   ignore
                                     (Ojs.call x9812 "push"
                                        [|(Ojs.string_to_js x9813)|])
                               | None -> ());
                              x9812))|])
    let (prototype' : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "AggregateError") "prototype")
    let (create''' : errors:any list -> errors:any list -> unit -> t) =
      fun ~errors:(x9815 : any list) ->
        fun ~errors:(x9816 : any list) ->
          fun () ->
            let x9817 = Ojs.empty_obj () in
            Ojs.set_prop_ascii x9817 "errors"
              (Ojs.list_to_js any_to_js x9815);
            Ojs.set_prop_ascii x9817 "errors"
              (Ojs.list_to_js any_to_js x9816);
            t_of_js x9817
    let cast_from = Obj.magic
  end
module ReadonlyArray_Make(T:Ojs.T) =
  struct
    type 'T parent = 'T ReadonlyArray.t
    let rec parent_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T parent =
      fun (type __T) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x9822 : Ojs.t) -> ReadonlyArray.t_of_js __T_of_js x9822
    and parent_to_js : 'T . ('T -> Ojs.t) -> 'T parent -> Ojs.t =
      fun (type __T) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x9820 : __T ReadonlyArray.t) ->
            ReadonlyArray.t_to_js __T_to_js x9820
    type t = T.t parent
    let rec t_of_js : Ojs.t -> t =
      fun (x9826 : Ojs.t) -> parent_of_js T.t_of_js x9826
    and t_to_js : t -> Ojs.t =
      fun (x9824 : T.t parent) -> parent_to_js T.t_to_js x9824
    let (at : t -> index:float -> T.t option) =
      fun (x9829 : t) ->
        fun ~index:(x9828 : float) ->
          Ojs.option_of_js T.t_of_js
            (Ojs.call (t_to_js x9829) "at" [|(Ojs.float_to_js x9828)|])
    let (flatMap :
      t ->
        callback:(this:'This ->
                    value:T.t ->
                      index:float ->
                        array:T.t list -> [ `U1 of 'U  | `U2 of 'U parent ])
          -> ?thisArg:'This -> unit -> 'U list)
      =
      fun (x9843 : t) ->
        fun
          ~callback:(x9831 :
                      this:'This ->
                        value:T.t ->
                          index:float ->
                            array:T.t list ->
                              [ `U1 of 'U  | `U2 of 'U parent ])
          ->
          fun ?thisArg:(x9832 : 'This option) ->
            fun () ->
              Ojs.list_of_js Obj.magic
                (let x9844 = t_to_js x9843 in
                 Ojs.call (Ojs.get_prop_ascii x9844 "flatMap") "apply"
                   [|x9844;((let x9833 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x9833 "push"
                                  [|(Ojs.fun_to_js 4
                                       (fun (x9835 : Ojs.t) ->
                                          fun (x9836 : Ojs.t) ->
                                            fun (x9837 : Ojs.t) ->
                                              fun (x9838 : Ojs.t) ->
                                                match x9831
                                                        ~this:(Obj.magic
                                                                 x9835)
                                                        ~value:(T.t_of_js
                                                                  x9836)
                                                        ~index:(Ojs.float_of_js
                                                                  x9837)
                                                        ~array:(Ojs.list_of_js
                                                                  T.t_of_js
                                                                  x9838)
                                                with
                                                | `U1 x9840 ->
                                                    Obj.magic x9840
                                                | `U2 x9841 ->
                                                    parent_to_js Obj.magic
                                                      x9841))|]);
                             (match x9832 with
                              | Some x9834 ->
                                  ignore
                                    (Ojs.call x9833 "push"
                                       [|(Obj.magic x9834)|])
                              | None -> ());
                             x9833))|])
    let (flat :
      t -> this:'A -> ?depth:'D -> unit -> ('A, 'D) FlatArray.t list) =
      fun (x9850 : t) ->
        fun ~this:(x9846 : 'A) ->
          fun ?depth:(x9847 : 'D option) ->
            fun () ->
              Ojs.list_of_js
                (fun (x9852 : Ojs.t) ->
                   FlatArray.t_of_js Obj.magic Obj.magic x9852)
                (let x9851 = t_to_js x9850 in
                 Ojs.call (Ojs.get_prop_ascii x9851 "flat") "apply"
                   [|x9851;((let x9848 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x9848 "push" [|(Obj.magic x9846)|]);
                             (match x9847 with
                              | Some x9849 ->
                                  ignore
                                    (Ojs.call x9848 "push"
                                       [|(Obj.magic x9849)|])
                              | None -> ());
                             x9848))|])
    let (includes :
      t -> searchElement:T.t -> ?fromIndex:float -> unit -> bool) =
      fun (x9859 : t) ->
        fun ~searchElement:(x9855 : T.t) ->
          fun ?fromIndex:(x9856 : float option) ->
            fun () ->
              Ojs.bool_of_js
                (let x9860 = t_to_js x9859 in
                 Ojs.call (Ojs.get_prop_ascii x9860 "includes") "apply"
                   [|x9860;((let x9857 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x9857 "push" [|(T.t_to_js x9855)|]);
                             (match x9856 with
                              | Some x9858 ->
                                  ignore
                                    (Ojs.call x9857 "push"
                                       [|(Ojs.float_to_js x9858)|])
                              | None -> ());
                             x9857))|])
    let (entries : t -> (float * T.t) IterableIterator.t) =
      fun (x9861 : t) ->
        IterableIterator.t_of_js
          (fun (x9862 : Ojs.t) ->
             let x9863 = x9862 in
             ((Ojs.float_of_js (Ojs.array_get x9863 0)),
               (T.t_of_js (Ojs.array_get x9863 1))))
          (Ojs.call (t_to_js x9861) "entries" [||])
    let (keys : t -> float IterableIterator.t) =
      fun (x9864 : t) ->
        IterableIterator.t_of_js Ojs.float_of_js
          (Ojs.call (t_to_js x9864) "keys" [||])
    let (values : t -> T.t IterableIterator.t) =
      fun (x9866 : t) ->
        IterableIterator.t_of_js T.t_of_js
          (Ojs.call (t_to_js x9866) "values" [||])
    let (find :
      t ->
        predicate:(this:unit ->
                     value:T.t -> index:float -> obj:T.t list -> bool)
          -> ?thisArg:any -> unit -> 'S option)
      =
      fun (x9877 : t) ->
        fun
          ~predicate:(x9868 :
                       this:unit ->
                         value:T.t -> index:float -> obj:T.t list -> bool)
          ->
          fun ?thisArg:(x9869 : any option) ->
            fun () ->
              Ojs.option_of_js Obj.magic
                (let x9878 = t_to_js x9877 in
                 Ojs.call (Ojs.get_prop_ascii x9878 "find") "apply"
                   [|x9878;((let x9870 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x9870 "push"
                                  [|(Ojs.fun_to_js 4
                                       (fun (x9872 : Ojs.t) ->
                                          fun (x9873 : Ojs.t) ->
                                            fun (x9874 : Ojs.t) ->
                                              fun (x9875 : Ojs.t) ->
                                                Ojs.bool_to_js
                                                  (x9868
                                                     ~this:(Ojs.unit_of_js
                                                              x9872)
                                                     ~value:(T.t_of_js x9873)
                                                     ~index:(Ojs.float_of_js
                                                               x9874)
                                                     ~obj:(Ojs.list_of_js
                                                             T.t_of_js x9875))))|]);
                             (match x9869 with
                              | Some x9871 ->
                                  ignore
                                    (Ojs.call x9870 "push"
                                       [|(any_to_js x9871)|])
                              | None -> ());
                             x9870))|])
    let (find :
      t ->
        predicate:(value:T.t -> index:float -> obj:T.t list -> unknown) ->
          ?thisArg:any -> unit -> T.t option)
      =
      fun (x9888 : t) ->
        fun
          ~predicate:(x9880 :
                       value:T.t -> index:float -> obj:T.t list -> unknown)
          ->
          fun ?thisArg:(x9881 : any option) ->
            fun () ->
              Ojs.option_of_js T.t_of_js
                (let x9889 = t_to_js x9888 in
                 Ojs.call (Ojs.get_prop_ascii x9889 "find") "apply"
                   [|x9889;((let x9882 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x9882 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x9884 : Ojs.t) ->
                                          fun (x9885 : Ojs.t) ->
                                            fun (x9886 : Ojs.t) ->
                                              unknown_to_js
                                                (x9880
                                                   ~value:(T.t_of_js x9884)
                                                   ~index:(Ojs.float_of_js
                                                             x9885)
                                                   ~obj:(Ojs.list_of_js
                                                           T.t_of_js x9886))))|]);
                             (match x9881 with
                              | Some x9883 ->
                                  ignore
                                    (Ojs.call x9882 "push"
                                       [|(any_to_js x9883)|])
                              | None -> ());
                             x9882))|])
    let (findIndex :
      t ->
        predicate:(value:T.t -> index:float -> obj:T.t list -> unknown) ->
          ?thisArg:any -> unit -> float)
      =
      fun (x9899 : t) ->
        fun
          ~predicate:(x9891 :
                       value:T.t -> index:float -> obj:T.t list -> unknown)
          ->
          fun ?thisArg:(x9892 : any option) ->
            fun () ->
              Ojs.float_of_js
                (let x9900 = t_to_js x9899 in
                 Ojs.call (Ojs.get_prop_ascii x9900 "findIndex") "apply"
                   [|x9900;((let x9893 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x9893 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x9895 : Ojs.t) ->
                                          fun (x9896 : Ojs.t) ->
                                            fun (x9897 : Ojs.t) ->
                                              unknown_to_js
                                                (x9891
                                                   ~value:(T.t_of_js x9895)
                                                   ~index:(Ojs.float_of_js
                                                             x9896)
                                                   ~obj:(Ojs.list_of_js
                                                           T.t_of_js x9897))))|]);
                             (match x9892 with
                              | Some x9894 ->
                                  ignore
                                    (Ojs.call x9893 "push"
                                       [|(any_to_js x9894)|])
                              | None -> ());
                             x9893))|])
    let (get_length : t -> float) =
      fun (x9901 : t) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x9901) "length")
    let (toString : t -> string) =
      fun (x9902 : t) ->
        Ojs.string_of_js (Ojs.call (t_to_js x9902) "toString" [||])
    let (toLocaleString : t -> string) =
      fun (x9903 : t) ->
        Ojs.string_of_js (Ojs.call (t_to_js x9903) "toLocaleString" [||])
    let (concat : t -> items:T.t ConcatArray.t list -> T.t list) =
      fun (x9908 : t) ->
        fun ~items:(x9904 : T.t ConcatArray.t list) ->
          Ojs.list_of_js T.t_of_js
            (let x9909 = t_to_js x9908 in
             Ojs.call (Ojs.get_prop_ascii x9909 "concat") "apply"
               [|x9909;((let x9905 =
                           Ojs.new_obj
                             (Ojs.get_prop_ascii Ojs.global "Array") 
                             [||] in
                         List.iter
                           (fun (x9906 : T.t ConcatArray.t) ->
                              ignore
                                (Ojs.call x9905 "push"
                                   [|(ConcatArray.t_to_js T.t_to_js x9906)|]))
                           x9904;
                         x9905))|])
    let (concat :
      t -> items:[ `U1 of T.t  | `U2 of T.t ConcatArray.t ] list -> T.t list)
      =
      fun (x9917 : t) ->
        fun ~items:(x9911 : [ `U1 of T.t  | `U2 of T.t ConcatArray.t ] list)
          ->
          Ojs.list_of_js T.t_of_js
            (let x9918 = t_to_js x9917 in
             Ojs.call (Ojs.get_prop_ascii x9918 "concat") "apply"
               [|x9918;((let x9912 =
                           Ojs.new_obj
                             (Ojs.get_prop_ascii Ojs.global "Array") 
                             [||] in
                         List.iter
                           (fun
                              (x9913 :
                                [ `U1 of T.t  | `U2 of T.t ConcatArray.t ])
                              ->
                              ignore
                                (Ojs.call x9912 "push"
                                   [|((match x9913 with
                                       | `U1 x9914 -> T.t_to_js x9914
                                       | `U2 x9915 ->
                                           ConcatArray.t_to_js T.t_to_js
                                             x9915))|])) x9911;
                         x9912))|])
    let (join : t -> ?separator:string -> unit -> string) =
      fun (x9923 : t) ->
        fun ?separator:(x9920 : string option) ->
          fun () ->
            Ojs.string_of_js
              (let x9924 = t_to_js x9923 in
               Ojs.call (Ojs.get_prop_ascii x9924 "join") "apply"
                 [|x9924;((let x9921 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x9920 with
                            | Some x9922 ->
                                ignore
                                  (Ojs.call x9921 "push"
                                     [|(Ojs.string_to_js x9922)|])
                            | None -> ());
                           x9921))|])
    let (slice : t -> ?start:float -> ?end_:float -> unit -> T.t list) =
      fun (x9930 : t) ->
        fun ?start:(x9925 : float option) ->
          fun ?end_:(x9926 : float option) ->
            fun () ->
              Ojs.list_of_js T.t_of_js
                (let x9931 = t_to_js x9930 in
                 Ojs.call (Ojs.get_prop_ascii x9931 "slice") "apply"
                   [|x9931;((let x9927 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x9925 with
                              | Some x9929 ->
                                  ignore
                                    (Ojs.call x9927 "push"
                                       [|(Ojs.float_to_js x9929)|])
                              | None -> ());
                             (match x9926 with
                              | Some x9928 ->
                                  ignore
                                    (Ojs.call x9927 "push"
                                       [|(Ojs.float_to_js x9928)|])
                              | None -> ());
                             x9927))|])
    let (indexOf :
      t -> searchElement:T.t -> ?fromIndex:float -> unit -> float) =
      fun (x9937 : t) ->
        fun ~searchElement:(x9933 : T.t) ->
          fun ?fromIndex:(x9934 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x9938 = t_to_js x9937 in
                 Ojs.call (Ojs.get_prop_ascii x9938 "indexOf") "apply"
                   [|x9938;((let x9935 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x9935 "push" [|(T.t_to_js x9933)|]);
                             (match x9934 with
                              | Some x9936 ->
                                  ignore
                                    (Ojs.call x9935 "push"
                                       [|(Ojs.float_to_js x9936)|])
                              | None -> ());
                             x9935))|])
    let (lastIndexOf :
      t -> searchElement:T.t -> ?fromIndex:float -> unit -> float) =
      fun (x9943 : t) ->
        fun ~searchElement:(x9939 : T.t) ->
          fun ?fromIndex:(x9940 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x9944 = t_to_js x9943 in
                 Ojs.call (Ojs.get_prop_ascii x9944 "lastIndexOf") "apply"
                   [|x9944;((let x9941 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x9941 "push" [|(T.t_to_js x9939)|]);
                             (match x9940 with
                              | Some x9942 ->
                                  ignore
                                    (Ojs.call x9941 "push"
                                       [|(Ojs.float_to_js x9942)|])
                              | None -> ());
                             x9941))|])
    let (every :
      t ->
        predicate:(value:T.t -> index:float -> array:T.t list -> bool) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x9953 : t) ->
        fun
          ~predicate:(x9945 :
                       value:T.t -> index:float -> array:T.t list -> bool)
          ->
          fun ?thisArg:(x9946 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x9954 = t_to_js x9953 in
                 Ojs.call (Ojs.get_prop_ascii x9954 "every") "apply"
                   [|x9954;((let x9947 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x9947 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x9949 : Ojs.t) ->
                                          fun (x9950 : Ojs.t) ->
                                            fun (x9951 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x9945
                                                   ~value:(T.t_of_js x9949)
                                                   ~index:(Ojs.float_of_js
                                                             x9950)
                                                   ~array:(Ojs.list_of_js
                                                             T.t_of_js x9951))))|]);
                             (match x9946 with
                              | Some x9948 ->
                                  ignore
                                    (Ojs.call x9947 "push"
                                       [|(any_to_js x9948)|])
                              | None -> ());
                             x9947))|])
    let (every :
      t ->
        predicate:(value:T.t -> index:float -> array:T.t list -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x9963 : t) ->
        fun
          ~predicate:(x9955 :
                       value:T.t -> index:float -> array:T.t list -> unknown)
          ->
          fun ?thisArg:(x9956 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x9964 = t_to_js x9963 in
                 Ojs.call (Ojs.get_prop_ascii x9964 "every") "apply"
                   [|x9964;((let x9957 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x9957 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x9959 : Ojs.t) ->
                                          fun (x9960 : Ojs.t) ->
                                            fun (x9961 : Ojs.t) ->
                                              unknown_to_js
                                                (x9955
                                                   ~value:(T.t_of_js x9959)
                                                   ~index:(Ojs.float_of_js
                                                             x9960)
                                                   ~array:(Ojs.list_of_js
                                                             T.t_of_js x9961))))|]);
                             (match x9956 with
                              | Some x9958 ->
                                  ignore
                                    (Ojs.call x9957 "push"
                                       [|(any_to_js x9958)|])
                              | None -> ());
                             x9957))|])
    let (some :
      t ->
        predicate:(value:T.t -> index:float -> array:T.t list -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x9973 : t) ->
        fun
          ~predicate:(x9965 :
                       value:T.t -> index:float -> array:T.t list -> unknown)
          ->
          fun ?thisArg:(x9966 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x9974 = t_to_js x9973 in
                 Ojs.call (Ojs.get_prop_ascii x9974 "some") "apply"
                   [|x9974;((let x9967 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x9967 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x9969 : Ojs.t) ->
                                          fun (x9970 : Ojs.t) ->
                                            fun (x9971 : Ojs.t) ->
                                              unknown_to_js
                                                (x9965
                                                   ~value:(T.t_of_js x9969)
                                                   ~index:(Ojs.float_of_js
                                                             x9970)
                                                   ~array:(Ojs.list_of_js
                                                             T.t_of_js x9971))))|]);
                             (match x9966 with
                              | Some x9968 ->
                                  ignore
                                    (Ojs.call x9967 "push"
                                       [|(any_to_js x9968)|])
                              | None -> ());
                             x9967))|])
    let (forEach :
      t ->
        callbackfn:(value:T.t -> index:float -> array:T.t list -> unit) ->
          ?thisArg:any -> unit -> unit)
      =
      fun (x9983 : t) ->
        fun
          ~callbackfn:(x9975 :
                        value:T.t -> index:float -> array:T.t list -> unit)
          ->
          fun ?thisArg:(x9976 : any option) ->
            fun () ->
              ignore
                (let x9984 = t_to_js x9983 in
                 Ojs.call (Ojs.get_prop_ascii x9984 "forEach") "apply"
                   [|x9984;((let x9977 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x9977 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x9979 : Ojs.t) ->
                                          fun (x9980 : Ojs.t) ->
                                            fun (x9981 : Ojs.t) ->
                                              x9975 ~value:(T.t_of_js x9979)
                                                ~index:(Ojs.float_of_js x9980)
                                                ~array:(Ojs.list_of_js
                                                          T.t_of_js x9981)))|]);
                             (match x9976 with
                              | Some x9978 ->
                                  ignore
                                    (Ojs.call x9977 "push"
                                       [|(any_to_js x9978)|])
                              | None -> ());
                             x9977))|])
    let (map :
      t ->
        callbackfn:(value:T.t -> index:float -> array:T.t list -> 'U) ->
          ?thisArg:any -> unit -> 'U list)
      =
      fun (x9993 : t) ->
        fun
          ~callbackfn:(x9985 :
                        value:T.t -> index:float -> array:T.t list -> 'U)
          ->
          fun ?thisArg:(x9986 : any option) ->
            fun () ->
              Ojs.list_of_js Obj.magic
                (let x9994 = t_to_js x9993 in
                 Ojs.call (Ojs.get_prop_ascii x9994 "map") "apply"
                   [|x9994;((let x9987 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x9987 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x9989 : Ojs.t) ->
                                          fun (x9990 : Ojs.t) ->
                                            fun (x9991 : Ojs.t) ->
                                              Obj.magic
                                                (x9985
                                                   ~value:(T.t_of_js x9989)
                                                   ~index:(Ojs.float_of_js
                                                             x9990)
                                                   ~array:(Ojs.list_of_js
                                                             T.t_of_js x9991))))|]);
                             (match x9986 with
                              | Some x9988 ->
                                  ignore
                                    (Ojs.call x9987 "push"
                                       [|(any_to_js x9988)|])
                              | None -> ());
                             x9987))|])
    let (filter :
      t ->
        predicate:(value:T.t -> index:float -> array:T.t list -> bool) ->
          ?thisArg:any -> unit -> 'S list)
      =
      fun (x10004 : t) ->
        fun
          ~predicate:(x9996 :
                       value:T.t -> index:float -> array:T.t list -> bool)
          ->
          fun ?thisArg:(x9997 : any option) ->
            fun () ->
              Ojs.list_of_js Obj.magic
                (let x10005 = t_to_js x10004 in
                 Ojs.call (Ojs.get_prop_ascii x10005 "filter") "apply"
                   [|x10005;((let x9998 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x9998 "push"
                                   [|(Ojs.fun_to_js 3
                                        (fun (x10000 : Ojs.t) ->
                                           fun (x10001 : Ojs.t) ->
                                             fun (x10002 : Ojs.t) ->
                                               Ojs.bool_to_js
                                                 (x9996
                                                    ~value:(T.t_of_js x10000)
                                                    ~index:(Ojs.float_of_js
                                                              x10001)
                                                    ~array:(Ojs.list_of_js
                                                              T.t_of_js
                                                              x10002))))|]);
                              (match x9997 with
                               | Some x9999 ->
                                   ignore
                                     (Ojs.call x9998 "push"
                                        [|(any_to_js x9999)|])
                               | None -> ());
                              x9998))|])
    let (filter :
      t ->
        predicate:(value:T.t -> index:float -> array:T.t list -> unknown) ->
          ?thisArg:any -> unit -> T.t list)
      =
      fun (x10015 : t) ->
        fun
          ~predicate:(x10007 :
                       value:T.t -> index:float -> array:T.t list -> unknown)
          ->
          fun ?thisArg:(x10008 : any option) ->
            fun () ->
              Ojs.list_of_js T.t_of_js
                (let x10016 = t_to_js x10015 in
                 Ojs.call (Ojs.get_prop_ascii x10016 "filter") "apply"
                   [|x10016;((let x10009 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x10009 "push"
                                   [|(Ojs.fun_to_js 3
                                        (fun (x10011 : Ojs.t) ->
                                           fun (x10012 : Ojs.t) ->
                                             fun (x10013 : Ojs.t) ->
                                               unknown_to_js
                                                 (x10007
                                                    ~value:(T.t_of_js x10011)
                                                    ~index:(Ojs.float_of_js
                                                              x10012)
                                                    ~array:(Ojs.list_of_js
                                                              T.t_of_js
                                                              x10013))))|]);
                              (match x10008 with
                               | Some x10010 ->
                                   ignore
                                     (Ojs.call x10009 "push"
                                        [|(any_to_js x10010)|])
                               | None -> ());
                              x10009))|])
    let (reduce :
      t ->
        callbackfn:(previousValue:T.t ->
                      currentValue:T.t ->
                        currentIndex:float -> array:T.t list -> T.t)
          -> T.t)
      =
      fun (x10024 : t) ->
        fun
          ~callbackfn:(x10018 :
                        previousValue:T.t ->
                          currentValue:T.t ->
                            currentIndex:float -> array:T.t list -> T.t)
          ->
          T.t_of_js
            (Ojs.call (t_to_js x10024) "reduce"
               [|(Ojs.fun_to_js 4
                    (fun (x10019 : Ojs.t) ->
                       fun (x10020 : Ojs.t) ->
                         fun (x10021 : Ojs.t) ->
                           fun (x10022 : Ojs.t) ->
                             T.t_to_js
                               (x10018 ~previousValue:(T.t_of_js x10019)
                                  ~currentValue:(T.t_of_js x10020)
                                  ~currentIndex:(Ojs.float_of_js x10021)
                                  ~array:(Ojs.list_of_js T.t_of_js x10022))))|])
    let (reduce :
      t ->
        callbackfn:(previousValue:T.t ->
                      currentValue:T.t ->
                        currentIndex:float -> array:T.t list -> T.t)
          -> initialValue:T.t -> T.t)
      =
      fun (x10032 : t) ->
        fun
          ~callbackfn:(x10025 :
                        previousValue:T.t ->
                          currentValue:T.t ->
                            currentIndex:float -> array:T.t list -> T.t)
          ->
          fun ~initialValue:(x10031 : T.t) ->
            T.t_of_js
              (Ojs.call (t_to_js x10032) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x10026 : Ojs.t) ->
                         fun (x10027 : Ojs.t) ->
                           fun (x10028 : Ojs.t) ->
                             fun (x10029 : Ojs.t) ->
                               T.t_to_js
                                 (x10025 ~previousValue:(T.t_of_js x10026)
                                    ~currentValue:(T.t_of_js x10027)
                                    ~currentIndex:(Ojs.float_of_js x10028)
                                    ~array:(Ojs.list_of_js T.t_of_js x10029))));(
                   T.t_to_js x10031)|])
    let (reduce :
      t ->
        callbackfn:(previousValue:'U ->
                      currentValue:T.t ->
                        currentIndex:float -> array:T.t list -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x10040 : t) ->
        fun
          ~callbackfn:(x10033 :
                        previousValue:'U ->
                          currentValue:T.t ->
                            currentIndex:float -> array:T.t list -> 'U)
          ->
          fun ~initialValue:(x10039 : 'U) ->
            Obj.magic
              (Ojs.call (t_to_js x10040) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x10034 : Ojs.t) ->
                         fun (x10035 : Ojs.t) ->
                           fun (x10036 : Ojs.t) ->
                             fun (x10037 : Ojs.t) ->
                               Obj.magic
                                 (x10033 ~previousValue:(Obj.magic x10034)
                                    ~currentValue:(T.t_of_js x10035)
                                    ~currentIndex:(Ojs.float_of_js x10036)
                                    ~array:(Ojs.list_of_js T.t_of_js x10037))));(
                   Obj.magic x10039)|])
    let (reduceRight :
      t ->
        callbackfn:(previousValue:T.t ->
                      currentValue:T.t ->
                        currentIndex:float -> array:T.t list -> T.t)
          -> T.t)
      =
      fun (x10047 : t) ->
        fun
          ~callbackfn:(x10041 :
                        previousValue:T.t ->
                          currentValue:T.t ->
                            currentIndex:float -> array:T.t list -> T.t)
          ->
          T.t_of_js
            (Ojs.call (t_to_js x10047) "reduceRight"
               [|(Ojs.fun_to_js 4
                    (fun (x10042 : Ojs.t) ->
                       fun (x10043 : Ojs.t) ->
                         fun (x10044 : Ojs.t) ->
                           fun (x10045 : Ojs.t) ->
                             T.t_to_js
                               (x10041 ~previousValue:(T.t_of_js x10042)
                                  ~currentValue:(T.t_of_js x10043)
                                  ~currentIndex:(Ojs.float_of_js x10044)
                                  ~array:(Ojs.list_of_js T.t_of_js x10045))))|])
    let (reduceRight :
      t ->
        callbackfn:(previousValue:T.t ->
                      currentValue:T.t ->
                        currentIndex:float -> array:T.t list -> T.t)
          -> initialValue:T.t -> T.t)
      =
      fun (x10055 : t) ->
        fun
          ~callbackfn:(x10048 :
                        previousValue:T.t ->
                          currentValue:T.t ->
                            currentIndex:float -> array:T.t list -> T.t)
          ->
          fun ~initialValue:(x10054 : T.t) ->
            T.t_of_js
              (Ojs.call (t_to_js x10055) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x10049 : Ojs.t) ->
                         fun (x10050 : Ojs.t) ->
                           fun (x10051 : Ojs.t) ->
                             fun (x10052 : Ojs.t) ->
                               T.t_to_js
                                 (x10048 ~previousValue:(T.t_of_js x10049)
                                    ~currentValue:(T.t_of_js x10050)
                                    ~currentIndex:(Ojs.float_of_js x10051)
                                    ~array:(Ojs.list_of_js T.t_of_js x10052))));(
                   T.t_to_js x10054)|])
    let (reduceRight :
      t ->
        callbackfn:(previousValue:'U ->
                      currentValue:T.t ->
                        currentIndex:float -> array:T.t list -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x10063 : t) ->
        fun
          ~callbackfn:(x10056 :
                        previousValue:'U ->
                          currentValue:T.t ->
                            currentIndex:float -> array:T.t list -> 'U)
          ->
          fun ~initialValue:(x10062 : 'U) ->
            Obj.magic
              (Ojs.call (t_to_js x10063) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x10057 : Ojs.t) ->
                         fun (x10058 : Ojs.t) ->
                           fun (x10059 : Ojs.t) ->
                             fun (x10060 : Ojs.t) ->
                               Obj.magic
                                 (x10056 ~previousValue:(Obj.magic x10057)
                                    ~currentValue:(T.t_of_js x10058)
                                    ~currentIndex:(Ojs.float_of_js x10059)
                                    ~array:(Ojs.list_of_js T.t_of_js x10060))));(
                   Obj.magic x10062)|])
    let (get : t -> float -> T.t) =
      fun (x10064 : t) ->
        fun (x10065 : float) ->
          T.t_of_js (Ojs.get_prop (t_to_js x10064) (Ojs.float_to_js x10065))
  end
module ConcatArray_Make(T:Ojs.T) =
  struct
    type 'T parent = 'T ConcatArray.t
    let rec parent_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T parent =
      fun (type __T) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x10068 : Ojs.t) -> ConcatArray.t_of_js __T_of_js x10068
    and parent_to_js : 'T . ('T -> Ojs.t) -> 'T parent -> Ojs.t =
      fun (type __T) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x10066 : __T ConcatArray.t) ->
            ConcatArray.t_to_js __T_to_js x10066
    type t = T.t parent
    let rec t_of_js : Ojs.t -> t =
      fun (x10072 : Ojs.t) -> parent_of_js T.t_of_js x10072
    and t_to_js : t -> Ojs.t =
      fun (x10070 : T.t parent) -> parent_to_js T.t_to_js x10070
    let (get_length : t -> float) =
      fun (x10074 : t) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x10074) "length")
    let (get : t -> float -> T.t) =
      fun (x10075 : t) ->
        fun (x10076 : float) ->
          T.t_of_js (Ojs.get_prop (t_to_js x10075) (Ojs.float_to_js x10076))
    let (join : t -> ?separator:string -> unit -> string) =
      fun (x10080 : t) ->
        fun ?separator:(x10077 : string option) ->
          fun () ->
            Ojs.string_of_js
              (let x10081 = t_to_js x10080 in
               Ojs.call (Ojs.get_prop_ascii x10081 "join") "apply"
                 [|x10081;((let x10078 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x10077 with
                             | Some x10079 ->
                                 ignore
                                   (Ojs.call x10078 "push"
                                      [|(Ojs.string_to_js x10079)|])
                             | None -> ());
                            x10078))|])
    let (slice : t -> ?start:float -> ?end_:float -> unit -> T.t list) =
      fun (x10087 : t) ->
        fun ?start:(x10082 : float option) ->
          fun ?end_:(x10083 : float option) ->
            fun () ->
              Ojs.list_of_js T.t_of_js
                (let x10088 = t_to_js x10087 in
                 Ojs.call (Ojs.get_prop_ascii x10088 "slice") "apply"
                   [|x10088;((let x10084 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              (match x10082 with
                               | Some x10086 ->
                                   ignore
                                     (Ojs.call x10084 "push"
                                        [|(Ojs.float_to_js x10086)|])
                               | None -> ());
                              (match x10083 with
                               | Some x10085 ->
                                   ignore
                                     (Ojs.call x10084 "push"
                                        [|(Ojs.float_to_js x10085)|])
                               | None -> ());
                              x10084))|])
  end
module Array_Make(T:Ojs.T) =
  struct
    module AnonymousInterface0 =
      struct
        type t = Ojs.t
        let rec t_of_js : Ojs.t -> t = fun (x10091 : Ojs.t) -> x10091
        and t_to_js : t -> Ojs.t = fun (x10090 : Ojs.t) -> x10090
        let (get_copyWithin : t -> bool) =
          fun (x10092 : t) ->
            Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x10092) "copyWithin")
        let (set_copyWithin : t -> bool -> unit) =
          fun (x10093 : t) ->
            fun (x10094 : bool) ->
              Ojs.set_prop_ascii (t_to_js x10093) "copyWithin"
                (Ojs.bool_to_js x10094)
        let (get_entries : t -> bool) =
          fun (x10095 : t) ->
            Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x10095) "entries")
        let (set_entries : t -> bool -> unit) =
          fun (x10096 : t) ->
            fun (x10097 : bool) ->
              Ojs.set_prop_ascii (t_to_js x10096) "entries"
                (Ojs.bool_to_js x10097)
        let (get_fill : t -> bool) =
          fun (x10098 : t) ->
            Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x10098) "fill")
        let (set_fill : t -> bool -> unit) =
          fun (x10099 : t) ->
            fun (x10100 : bool) ->
              Ojs.set_prop_ascii (t_to_js x10099) "fill"
                (Ojs.bool_to_js x10100)
        let (get_find : t -> bool) =
          fun (x10101 : t) ->
            Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x10101) "find")
        let (set_find : t -> bool -> unit) =
          fun (x10102 : t) ->
            fun (x10103 : bool) ->
              Ojs.set_prop_ascii (t_to_js x10102) "find"
                (Ojs.bool_to_js x10103)
        let (get_findIndex : t -> bool) =
          fun (x10104 : t) ->
            Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x10104) "findIndex")
        let (set_findIndex : t -> bool -> unit) =
          fun (x10105 : t) ->
            fun (x10106 : bool) ->
              Ojs.set_prop_ascii (t_to_js x10105) "findIndex"
                (Ojs.bool_to_js x10106)
        let (get_keys : t -> bool) =
          fun (x10107 : t) ->
            Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x10107) "keys")
        let (set_keys : t -> bool -> unit) =
          fun (x10108 : t) ->
            fun (x10109 : bool) ->
              Ojs.set_prop_ascii (t_to_js x10108) "keys"
                (Ojs.bool_to_js x10109)
        let (get_values : t -> bool) =
          fun (x10110 : t) ->
            Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x10110) "values")
        let (set_values : t -> bool -> unit) =
          fun (x10111 : t) ->
            fun (x10112 : bool) ->
              Ojs.set_prop_ascii (t_to_js x10111) "values"
                (Ojs.bool_to_js x10112)
        let (create :
          copyWithin:bool ->
            entries:bool ->
              fill:bool ->
                find:bool ->
                  findIndex:bool -> keys:bool -> values:bool -> unit -> t)
          =
          fun ~copyWithin:(x10113 : bool) ->
            fun ~entries:(x10114 : bool) ->
              fun ~fill:(x10115 : bool) ->
                fun ~find:(x10116 : bool) ->
                  fun ~findIndex:(x10117 : bool) ->
                    fun ~keys:(x10118 : bool) ->
                      fun ~values:(x10119 : bool) ->
                        fun () ->
                          let x10120 = Ojs.empty_obj () in
                          Ojs.set_prop_ascii x10120 "copyWithin"
                            (Ojs.bool_to_js x10113);
                          Ojs.set_prop_ascii x10120 "entries"
                            (Ojs.bool_to_js x10114);
                          Ojs.set_prop_ascii x10120 "fill"
                            (Ojs.bool_to_js x10115);
                          Ojs.set_prop_ascii x10120 "find"
                            (Ojs.bool_to_js x10116);
                          Ojs.set_prop_ascii x10120 "findIndex"
                            (Ojs.bool_to_js x10117);
                          Ojs.set_prop_ascii x10120 "keys"
                            (Ojs.bool_to_js x10118);
                          Ojs.set_prop_ascii x10120 "values"
                            (Ojs.bool_to_js x10119);
                          t_of_js x10120
      end
    type 'T parent = 'T Array.t
    let rec parent_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T parent =
      fun (type __T) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x10123 : Ojs.t) -> Array.t_of_js __T_of_js x10123
    and parent_to_js : 'T . ('T -> Ojs.t) -> 'T parent -> Ojs.t =
      fun (type __T) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x10121 : __T Array.t) -> Array.t_to_js __T_to_js x10121
    type t = T.t parent
    let rec t_of_js : Ojs.t -> t =
      fun (x10127 : Ojs.t) -> parent_of_js T.t_of_js x10127
    and t_to_js : t -> Ojs.t =
      fun (x10125 : T.t parent) -> parent_to_js T.t_to_js x10125
    let (at : t -> index:float -> T.t option) =
      fun (x10130 : t) ->
        fun ~index:(x10129 : float) ->
          Ojs.option_of_js T.t_of_js
            (Ojs.call (t_to_js x10130) "at" [|(Ojs.float_to_js x10129)|])
    let (flatMap :
      t ->
        callback:(this:'This ->
                    value:T.t ->
                      index:float ->
                        array:T.t list ->
                          [ `U1 of 'U  | `U2 of 'U ReadonlyArray.t ])
          -> ?thisArg:'This -> unit -> 'U list)
      =
      fun (x10144 : t) ->
        fun
          ~callback:(x10132 :
                      this:'This ->
                        value:T.t ->
                          index:float ->
                            array:T.t list ->
                              [ `U1 of 'U  | `U2 of 'U ReadonlyArray.t ])
          ->
          fun ?thisArg:(x10133 : 'This option) ->
            fun () ->
              Ojs.list_of_js Obj.magic
                (let x10145 = t_to_js x10144 in
                 Ojs.call (Ojs.get_prop_ascii x10145 "flatMap") "apply"
                   [|x10145;((let x10134 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x10134 "push"
                                   [|(Ojs.fun_to_js 4
                                        (fun (x10136 : Ojs.t) ->
                                           fun (x10137 : Ojs.t) ->
                                             fun (x10138 : Ojs.t) ->
                                               fun (x10139 : Ojs.t) ->
                                                 match x10132
                                                         ~this:(Obj.magic
                                                                  x10136)
                                                         ~value:(T.t_of_js
                                                                   x10137)
                                                         ~index:(Ojs.float_of_js
                                                                   x10138)
                                                         ~array:(Ojs.list_of_js
                                                                   T.t_of_js
                                                                   x10139)
                                                 with
                                                 | `U1 x10141 ->
                                                     Obj.magic x10141
                                                 | `U2 x10142 ->
                                                     ReadonlyArray.t_to_js
                                                       Obj.magic x10142))|]);
                              (match x10133 with
                               | Some x10135 ->
                                   ignore
                                     (Ojs.call x10134 "push"
                                        [|(Obj.magic x10135)|])
                               | None -> ());
                              x10134))|])
    let (flat :
      t -> this:'A -> ?depth:'D -> unit -> ('A, 'D) FlatArray.t list) =
      fun (x10151 : t) ->
        fun ~this:(x10147 : 'A) ->
          fun ?depth:(x10148 : 'D option) ->
            fun () ->
              Ojs.list_of_js
                (fun (x10153 : Ojs.t) ->
                   FlatArray.t_of_js Obj.magic Obj.magic x10153)
                (let x10152 = t_to_js x10151 in
                 Ojs.call (Ojs.get_prop_ascii x10152 "flat") "apply"
                   [|x10152;((let x10149 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x10149 "push"
                                   [|(Obj.magic x10147)|]);
                              (match x10148 with
                               | Some x10150 ->
                                   ignore
                                     (Ojs.call x10149 "push"
                                        [|(Obj.magic x10150)|])
                               | None -> ());
                              x10149))|])
    let (includes :
      t -> searchElement:T.t -> ?fromIndex:float -> unit -> bool) =
      fun (x10160 : t) ->
        fun ~searchElement:(x10156 : T.t) ->
          fun ?fromIndex:(x10157 : float option) ->
            fun () ->
              Ojs.bool_of_js
                (let x10161 = t_to_js x10160 in
                 Ojs.call (Ojs.get_prop_ascii x10161 "includes") "apply"
                   [|x10161;((let x10158 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x10158 "push"
                                   [|(T.t_to_js x10156)|]);
                              (match x10157 with
                               | Some x10159 ->
                                   ignore
                                     (Ojs.call x10158 "push"
                                        [|(Ojs.float_to_js x10159)|])
                               | None -> ());
                              x10158))|])
    let (entries : t -> (float * T.t) IterableIterator.t) =
      fun (x10162 : t) ->
        IterableIterator.t_of_js
          (fun (x10163 : Ojs.t) ->
             let x10164 = x10163 in
             ((Ojs.float_of_js (Ojs.array_get x10164 0)),
               (T.t_of_js (Ojs.array_get x10164 1))))
          (Ojs.call (t_to_js x10162) "entries" [||])
    let (keys : t -> float IterableIterator.t) =
      fun (x10165 : t) ->
        IterableIterator.t_of_js Ojs.float_of_js
          (Ojs.call (t_to_js x10165) "keys" [||])
    let (values : t -> T.t IterableIterator.t) =
      fun (x10167 : t) ->
        IterableIterator.t_of_js T.t_of_js
          (Ojs.call (t_to_js x10167) "values" [||])
    let (find :
      t ->
        predicate:(this:unit ->
                     value:T.t -> index:float -> obj:T.t list -> bool)
          -> ?thisArg:any -> unit -> 'S option)
      =
      fun (x10178 : t) ->
        fun
          ~predicate:(x10169 :
                       this:unit ->
                         value:T.t -> index:float -> obj:T.t list -> bool)
          ->
          fun ?thisArg:(x10170 : any option) ->
            fun () ->
              Ojs.option_of_js Obj.magic
                (let x10179 = t_to_js x10178 in
                 Ojs.call (Ojs.get_prop_ascii x10179 "find") "apply"
                   [|x10179;((let x10171 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x10171 "push"
                                   [|(Ojs.fun_to_js 4
                                        (fun (x10173 : Ojs.t) ->
                                           fun (x10174 : Ojs.t) ->
                                             fun (x10175 : Ojs.t) ->
                                               fun (x10176 : Ojs.t) ->
                                                 Ojs.bool_to_js
                                                   (x10169
                                                      ~this:(Ojs.unit_of_js
                                                               x10173)
                                                      ~value:(T.t_of_js
                                                                x10174)
                                                      ~index:(Ojs.float_of_js
                                                                x10175)
                                                      ~obj:(Ojs.list_of_js
                                                              T.t_of_js
                                                              x10176))))|]);
                              (match x10170 with
                               | Some x10172 ->
                                   ignore
                                     (Ojs.call x10171 "push"
                                        [|(any_to_js x10172)|])
                               | None -> ());
                              x10171))|])
    let (find :
      t ->
        predicate:(value:T.t -> index:float -> obj:T.t list -> unknown) ->
          ?thisArg:any -> unit -> T.t option)
      =
      fun (x10189 : t) ->
        fun
          ~predicate:(x10181 :
                       value:T.t -> index:float -> obj:T.t list -> unknown)
          ->
          fun ?thisArg:(x10182 : any option) ->
            fun () ->
              Ojs.option_of_js T.t_of_js
                (let x10190 = t_to_js x10189 in
                 Ojs.call (Ojs.get_prop_ascii x10190 "find") "apply"
                   [|x10190;((let x10183 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x10183 "push"
                                   [|(Ojs.fun_to_js 3
                                        (fun (x10185 : Ojs.t) ->
                                           fun (x10186 : Ojs.t) ->
                                             fun (x10187 : Ojs.t) ->
                                               unknown_to_js
                                                 (x10181
                                                    ~value:(T.t_of_js x10185)
                                                    ~index:(Ojs.float_of_js
                                                              x10186)
                                                    ~obj:(Ojs.list_of_js
                                                            T.t_of_js x10187))))|]);
                              (match x10182 with
                               | Some x10184 ->
                                   ignore
                                     (Ojs.call x10183 "push"
                                        [|(any_to_js x10184)|])
                               | None -> ());
                              x10183))|])
    let (findIndex :
      t ->
        predicate:(value:T.t -> index:float -> obj:T.t list -> unknown) ->
          ?thisArg:any -> unit -> float)
      =
      fun (x10200 : t) ->
        fun
          ~predicate:(x10192 :
                       value:T.t -> index:float -> obj:T.t list -> unknown)
          ->
          fun ?thisArg:(x10193 : any option) ->
            fun () ->
              Ojs.float_of_js
                (let x10201 = t_to_js x10200 in
                 Ojs.call (Ojs.get_prop_ascii x10201 "findIndex") "apply"
                   [|x10201;((let x10194 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x10194 "push"
                                   [|(Ojs.fun_to_js 3
                                        (fun (x10196 : Ojs.t) ->
                                           fun (x10197 : Ojs.t) ->
                                             fun (x10198 : Ojs.t) ->
                                               unknown_to_js
                                                 (x10192
                                                    ~value:(T.t_of_js x10196)
                                                    ~index:(Ojs.float_of_js
                                                              x10197)
                                                    ~obj:(Ojs.list_of_js
                                                            T.t_of_js x10198))))|]);
                              (match x10193 with
                               | Some x10195 ->
                                   ignore
                                     (Ojs.call x10194 "push"
                                        [|(any_to_js x10195)|])
                               | None -> ());
                              x10194))|])
    let (fill : t -> value:T.t -> ?start:float -> ?end_:float -> unit -> t) =
      fun (x10208 : t) ->
        fun ~value:(x10202 : T.t) ->
          fun ?start:(x10203 : float option) ->
            fun ?end_:(x10204 : float option) ->
              fun () ->
                t_of_js
                  (let x10209 = t_to_js x10208 in
                   Ojs.call (Ojs.get_prop_ascii x10209 "fill") "apply"
                     [|x10209;((let x10205 =
                                  Ojs.new_obj
                                    (Ojs.get_prop_ascii Ojs.global "Array")
                                    [||] in
                                ignore
                                  (Ojs.call x10205 "push"
                                     [|(T.t_to_js x10202)|]);
                                (match x10203 with
                                 | Some x10207 ->
                                     ignore
                                       (Ojs.call x10205 "push"
                                          [|(Ojs.float_to_js x10207)|])
                                 | None -> ());
                                (match x10204 with
                                 | Some x10206 ->
                                     ignore
                                       (Ojs.call x10205 "push"
                                          [|(Ojs.float_to_js x10206)|])
                                 | None -> ());
                                x10205))|])
    let (copyWithin :
      t -> target:float -> start:float -> ?end_:float -> unit -> t) =
      fun (x10215 : t) ->
        fun ~target:(x10210 : float) ->
          fun ~start:(x10211 : float) ->
            fun ?end_:(x10212 : float option) ->
              fun () ->
                t_of_js
                  (let x10216 = t_to_js x10215 in
                   Ojs.call (Ojs.get_prop_ascii x10216 "copyWithin") "apply"
                     [|x10216;((let x10213 =
                                  Ojs.new_obj
                                    (Ojs.get_prop_ascii Ojs.global "Array")
                                    [||] in
                                ignore
                                  (Ojs.call x10213 "push"
                                     [|(Ojs.float_to_js x10210)|]);
                                ignore
                                  (Ojs.call x10213 "push"
                                     [|(Ojs.float_to_js x10211)|]);
                                (match x10212 with
                                 | Some x10214 ->
                                     ignore
                                       (Ojs.call x10213 "push"
                                          [|(Ojs.float_to_js x10214)|])
                                 | None -> ());
                                x10213))|])
    let (get_length : t -> float) =
      fun (x10217 : t) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x10217) "length")
    let (set_length : t -> float -> unit) =
      fun (x10218 : t) ->
        fun (x10219 : float) ->
          Ojs.set_prop_ascii (t_to_js x10218) "length"
            (Ojs.float_to_js x10219)
    let (toString : t -> string) =
      fun (x10220 : t) ->
        Ojs.string_of_js (Ojs.call (t_to_js x10220) "toString" [||])
    let (toLocaleString : t -> string) =
      fun (x10221 : t) ->
        Ojs.string_of_js (Ojs.call (t_to_js x10221) "toLocaleString" [||])
    let (pop : t -> T.t option) =
      fun (x10222 : t) ->
        Ojs.option_of_js T.t_of_js (Ojs.call (t_to_js x10222) "pop" [||])
    let (push : t -> items:T.t list -> float) =
      fun (x10227 : t) ->
        fun ~items:(x10224 : T.t list) ->
          Ojs.float_of_js
            (let x10228 = t_to_js x10227 in
             Ojs.call (Ojs.get_prop_ascii x10228 "push") "apply"
               [|x10228;((let x10225 =
                            Ojs.new_obj
                              (Ojs.get_prop_ascii Ojs.global "Array") 
                              [||] in
                          List.iter
                            (fun (x10226 : T.t) ->
                               ignore
                                 (Ojs.call x10225 "push"
                                    [|(T.t_to_js x10226)|])) x10224;
                          x10225))|])
    let (concat : t -> items:T.t ConcatArray.t list -> T.t list) =
      fun (x10233 : t) ->
        fun ~items:(x10229 : T.t ConcatArray.t list) ->
          Ojs.list_of_js T.t_of_js
            (let x10234 = t_to_js x10233 in
             Ojs.call (Ojs.get_prop_ascii x10234 "concat") "apply"
               [|x10234;((let x10230 =
                            Ojs.new_obj
                              (Ojs.get_prop_ascii Ojs.global "Array") 
                              [||] in
                          List.iter
                            (fun (x10231 : T.t ConcatArray.t) ->
                               ignore
                                 (Ojs.call x10230 "push"
                                    [|(ConcatArray.t_to_js T.t_to_js x10231)|]))
                            x10229;
                          x10230))|])
    let (concat :
      t -> items:[ `U1 of T.t  | `U2 of T.t ConcatArray.t ] list -> T.t list)
      =
      fun (x10242 : t) ->
        fun ~items:(x10236 : [ `U1 of T.t  | `U2 of T.t ConcatArray.t ] list)
          ->
          Ojs.list_of_js T.t_of_js
            (let x10243 = t_to_js x10242 in
             Ojs.call (Ojs.get_prop_ascii x10243 "concat") "apply"
               [|x10243;((let x10237 =
                            Ojs.new_obj
                              (Ojs.get_prop_ascii Ojs.global "Array") 
                              [||] in
                          List.iter
                            (fun
                               (x10238 :
                                 [ `U1 of T.t  | `U2 of T.t ConcatArray.t ])
                               ->
                               ignore
                                 (Ojs.call x10237 "push"
                                    [|((match x10238 with
                                        | `U1 x10239 -> T.t_to_js x10239
                                        | `U2 x10240 ->
                                            ConcatArray.t_to_js T.t_to_js
                                              x10240))|])) x10236;
                          x10237))|])
    let (join : t -> ?separator:string -> unit -> string) =
      fun (x10248 : t) ->
        fun ?separator:(x10245 : string option) ->
          fun () ->
            Ojs.string_of_js
              (let x10249 = t_to_js x10248 in
               Ojs.call (Ojs.get_prop_ascii x10249 "join") "apply"
                 [|x10249;((let x10246 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x10245 with
                             | Some x10247 ->
                                 ignore
                                   (Ojs.call x10246 "push"
                                      [|(Ojs.string_to_js x10247)|])
                             | None -> ());
                            x10246))|])
    let (reverse : t -> T.t list) =
      fun (x10250 : t) ->
        Ojs.list_of_js T.t_of_js (Ojs.call (t_to_js x10250) "reverse" [||])
    let (shift : t -> T.t option) =
      fun (x10252 : t) ->
        Ojs.option_of_js T.t_of_js (Ojs.call (t_to_js x10252) "shift" [||])
    let (slice : t -> ?start:float -> ?end_:float -> unit -> T.t list) =
      fun (x10259 : t) ->
        fun ?start:(x10254 : float option) ->
          fun ?end_:(x10255 : float option) ->
            fun () ->
              Ojs.list_of_js T.t_of_js
                (let x10260 = t_to_js x10259 in
                 Ojs.call (Ojs.get_prop_ascii x10260 "slice") "apply"
                   [|x10260;((let x10256 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              (match x10254 with
                               | Some x10258 ->
                                   ignore
                                     (Ojs.call x10256 "push"
                                        [|(Ojs.float_to_js x10258)|])
                               | None -> ());
                              (match x10255 with
                               | Some x10257 ->
                                   ignore
                                     (Ojs.call x10256 "push"
                                        [|(Ojs.float_to_js x10257)|])
                               | None -> ());
                              x10256))|])
    let (sort : t -> ?compareFn:(a:T.t -> b:T.t -> float) -> unit -> t) =
      fun (x10267 : t) ->
        fun ?compareFn:(x10262 : (a:T.t -> b:T.t -> float) option) ->
          fun () ->
            t_of_js
              (let x10268 = t_to_js x10267 in
               Ojs.call (Ojs.get_prop_ascii x10268 "sort") "apply"
                 [|x10268;((let x10263 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x10262 with
                             | Some x10264 ->
                                 ignore
                                   (Ojs.call x10263 "push"
                                      [|(Ojs.fun_to_js 2
                                           (fun (x10265 : Ojs.t) ->
                                              fun (x10266 : Ojs.t) ->
                                                Ojs.float_to_js
                                                  (x10264
                                                     ~a:(T.t_of_js x10265)
                                                     ~b:(T.t_of_js x10266))))|])
                             | None -> ());
                            x10263))|])
    let (splice : t -> start:float -> ?deleteCount:float -> unit -> T.t list)
      =
      fun (x10273 : t) ->
        fun ~start:(x10269 : float) ->
          fun ?deleteCount:(x10270 : float option) ->
            fun () ->
              Ojs.list_of_js T.t_of_js
                (let x10274 = t_to_js x10273 in
                 Ojs.call (Ojs.get_prop_ascii x10274 "splice") "apply"
                   [|x10274;((let x10271 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x10271 "push"
                                   [|(Ojs.float_to_js x10269)|]);
                              (match x10270 with
                               | Some x10272 ->
                                   ignore
                                     (Ojs.call x10271 "push"
                                        [|(Ojs.float_to_js x10272)|])
                               | None -> ());
                              x10271))|])
    let (splice :
      t -> start:float -> deleteCount:float -> items:T.t list -> T.t list) =
      fun (x10281 : t) ->
        fun ~start:(x10276 : float) ->
          fun ~deleteCount:(x10277 : float) ->
            fun ~items:(x10278 : T.t list) ->
              Ojs.list_of_js T.t_of_js
                (let x10282 = t_to_js x10281 in
                 Ojs.call (Ojs.get_prop_ascii x10282 "splice") "apply"
                   [|x10282;((let x10279 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x10279 "push"
                                   [|(Ojs.float_to_js x10276)|]);
                              ignore
                                (Ojs.call x10279 "push"
                                   [|(Ojs.float_to_js x10277)|]);
                              List.iter
                                (fun (x10280 : T.t) ->
                                   ignore
                                     (Ojs.call x10279 "push"
                                        [|(T.t_to_js x10280)|])) x10278;
                              x10279))|])
    let (unshift : t -> items:T.t list -> float) =
      fun (x10287 : t) ->
        fun ~items:(x10284 : T.t list) ->
          Ojs.float_of_js
            (let x10288 = t_to_js x10287 in
             Ojs.call (Ojs.get_prop_ascii x10288 "unshift") "apply"
               [|x10288;((let x10285 =
                            Ojs.new_obj
                              (Ojs.get_prop_ascii Ojs.global "Array") 
                              [||] in
                          List.iter
                            (fun (x10286 : T.t) ->
                               ignore
                                 (Ojs.call x10285 "push"
                                    [|(T.t_to_js x10286)|])) x10284;
                          x10285))|])
    let (indexOf :
      t -> searchElement:T.t -> ?fromIndex:float -> unit -> float) =
      fun (x10293 : t) ->
        fun ~searchElement:(x10289 : T.t) ->
          fun ?fromIndex:(x10290 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x10294 = t_to_js x10293 in
                 Ojs.call (Ojs.get_prop_ascii x10294 "indexOf") "apply"
                   [|x10294;((let x10291 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x10291 "push"
                                   [|(T.t_to_js x10289)|]);
                              (match x10290 with
                               | Some x10292 ->
                                   ignore
                                     (Ojs.call x10291 "push"
                                        [|(Ojs.float_to_js x10292)|])
                               | None -> ());
                              x10291))|])
    let (lastIndexOf :
      t -> searchElement:T.t -> ?fromIndex:float -> unit -> float) =
      fun (x10299 : t) ->
        fun ~searchElement:(x10295 : T.t) ->
          fun ?fromIndex:(x10296 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x10300 = t_to_js x10299 in
                 Ojs.call (Ojs.get_prop_ascii x10300 "lastIndexOf") "apply"
                   [|x10300;((let x10297 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x10297 "push"
                                   [|(T.t_to_js x10295)|]);
                              (match x10296 with
                               | Some x10298 ->
                                   ignore
                                     (Ojs.call x10297 "push"
                                        [|(Ojs.float_to_js x10298)|])
                               | None -> ());
                              x10297))|])
    let (every :
      t ->
        predicate:(value:T.t -> index:float -> array:T.t list -> bool) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x10309 : t) ->
        fun
          ~predicate:(x10301 :
                       value:T.t -> index:float -> array:T.t list -> bool)
          ->
          fun ?thisArg:(x10302 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x10310 = t_to_js x10309 in
                 Ojs.call (Ojs.get_prop_ascii x10310 "every") "apply"
                   [|x10310;((let x10303 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x10303 "push"
                                   [|(Ojs.fun_to_js 3
                                        (fun (x10305 : Ojs.t) ->
                                           fun (x10306 : Ojs.t) ->
                                             fun (x10307 : Ojs.t) ->
                                               Ojs.bool_to_js
                                                 (x10301
                                                    ~value:(T.t_of_js x10305)
                                                    ~index:(Ojs.float_of_js
                                                              x10306)
                                                    ~array:(Ojs.list_of_js
                                                              T.t_of_js
                                                              x10307))))|]);
                              (match x10302 with
                               | Some x10304 ->
                                   ignore
                                     (Ojs.call x10303 "push"
                                        [|(any_to_js x10304)|])
                               | None -> ());
                              x10303))|])
    let (every :
      t ->
        predicate:(value:T.t -> index:float -> array:T.t list -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x10319 : t) ->
        fun
          ~predicate:(x10311 :
                       value:T.t -> index:float -> array:T.t list -> unknown)
          ->
          fun ?thisArg:(x10312 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x10320 = t_to_js x10319 in
                 Ojs.call (Ojs.get_prop_ascii x10320 "every") "apply"
                   [|x10320;((let x10313 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x10313 "push"
                                   [|(Ojs.fun_to_js 3
                                        (fun (x10315 : Ojs.t) ->
                                           fun (x10316 : Ojs.t) ->
                                             fun (x10317 : Ojs.t) ->
                                               unknown_to_js
                                                 (x10311
                                                    ~value:(T.t_of_js x10315)
                                                    ~index:(Ojs.float_of_js
                                                              x10316)
                                                    ~array:(Ojs.list_of_js
                                                              T.t_of_js
                                                              x10317))))|]);
                              (match x10312 with
                               | Some x10314 ->
                                   ignore
                                     (Ojs.call x10313 "push"
                                        [|(any_to_js x10314)|])
                               | None -> ());
                              x10313))|])
    let (some :
      t ->
        predicate:(value:T.t -> index:float -> array:T.t list -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x10329 : t) ->
        fun
          ~predicate:(x10321 :
                       value:T.t -> index:float -> array:T.t list -> unknown)
          ->
          fun ?thisArg:(x10322 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x10330 = t_to_js x10329 in
                 Ojs.call (Ojs.get_prop_ascii x10330 "some") "apply"
                   [|x10330;((let x10323 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x10323 "push"
                                   [|(Ojs.fun_to_js 3
                                        (fun (x10325 : Ojs.t) ->
                                           fun (x10326 : Ojs.t) ->
                                             fun (x10327 : Ojs.t) ->
                                               unknown_to_js
                                                 (x10321
                                                    ~value:(T.t_of_js x10325)
                                                    ~index:(Ojs.float_of_js
                                                              x10326)
                                                    ~array:(Ojs.list_of_js
                                                              T.t_of_js
                                                              x10327))))|]);
                              (match x10322 with
                               | Some x10324 ->
                                   ignore
                                     (Ojs.call x10323 "push"
                                        [|(any_to_js x10324)|])
                               | None -> ());
                              x10323))|])
    let (forEach :
      t ->
        callbackfn:(value:T.t -> index:float -> array:T.t list -> unit) ->
          ?thisArg:any -> unit -> unit)
      =
      fun (x10339 : t) ->
        fun
          ~callbackfn:(x10331 :
                        value:T.t -> index:float -> array:T.t list -> unit)
          ->
          fun ?thisArg:(x10332 : any option) ->
            fun () ->
              ignore
                (let x10340 = t_to_js x10339 in
                 Ojs.call (Ojs.get_prop_ascii x10340 "forEach") "apply"
                   [|x10340;((let x10333 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x10333 "push"
                                   [|(Ojs.fun_to_js 3
                                        (fun (x10335 : Ojs.t) ->
                                           fun (x10336 : Ojs.t) ->
                                             fun (x10337 : Ojs.t) ->
                                               x10331
                                                 ~value:(T.t_of_js x10335)
                                                 ~index:(Ojs.float_of_js
                                                           x10336)
                                                 ~array:(Ojs.list_of_js
                                                           T.t_of_js x10337)))|]);
                              (match x10332 with
                               | Some x10334 ->
                                   ignore
                                     (Ojs.call x10333 "push"
                                        [|(any_to_js x10334)|])
                               | None -> ());
                              x10333))|])
    let (map :
      t ->
        callbackfn:(value:T.t -> index:float -> array:T.t list -> 'U) ->
          ?thisArg:any -> unit -> 'U list)
      =
      fun (x10349 : t) ->
        fun
          ~callbackfn:(x10341 :
                        value:T.t -> index:float -> array:T.t list -> 'U)
          ->
          fun ?thisArg:(x10342 : any option) ->
            fun () ->
              Ojs.list_of_js Obj.magic
                (let x10350 = t_to_js x10349 in
                 Ojs.call (Ojs.get_prop_ascii x10350 "map") "apply"
                   [|x10350;((let x10343 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x10343 "push"
                                   [|(Ojs.fun_to_js 3
                                        (fun (x10345 : Ojs.t) ->
                                           fun (x10346 : Ojs.t) ->
                                             fun (x10347 : Ojs.t) ->
                                               Obj.magic
                                                 (x10341
                                                    ~value:(T.t_of_js x10345)
                                                    ~index:(Ojs.float_of_js
                                                              x10346)
                                                    ~array:(Ojs.list_of_js
                                                              T.t_of_js
                                                              x10347))))|]);
                              (match x10342 with
                               | Some x10344 ->
                                   ignore
                                     (Ojs.call x10343 "push"
                                        [|(any_to_js x10344)|])
                               | None -> ());
                              x10343))|])
    let (filter :
      t ->
        predicate:(value:T.t -> index:float -> array:T.t list -> bool) ->
          ?thisArg:any -> unit -> 'S list)
      =
      fun (x10360 : t) ->
        fun
          ~predicate:(x10352 :
                       value:T.t -> index:float -> array:T.t list -> bool)
          ->
          fun ?thisArg:(x10353 : any option) ->
            fun () ->
              Ojs.list_of_js Obj.magic
                (let x10361 = t_to_js x10360 in
                 Ojs.call (Ojs.get_prop_ascii x10361 "filter") "apply"
                   [|x10361;((let x10354 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x10354 "push"
                                   [|(Ojs.fun_to_js 3
                                        (fun (x10356 : Ojs.t) ->
                                           fun (x10357 : Ojs.t) ->
                                             fun (x10358 : Ojs.t) ->
                                               Ojs.bool_to_js
                                                 (x10352
                                                    ~value:(T.t_of_js x10356)
                                                    ~index:(Ojs.float_of_js
                                                              x10357)
                                                    ~array:(Ojs.list_of_js
                                                              T.t_of_js
                                                              x10358))))|]);
                              (match x10353 with
                               | Some x10355 ->
                                   ignore
                                     (Ojs.call x10354 "push"
                                        [|(any_to_js x10355)|])
                               | None -> ());
                              x10354))|])
    let (filter :
      t ->
        predicate:(value:T.t -> index:float -> array:T.t list -> unknown) ->
          ?thisArg:any -> unit -> T.t list)
      =
      fun (x10371 : t) ->
        fun
          ~predicate:(x10363 :
                       value:T.t -> index:float -> array:T.t list -> unknown)
          ->
          fun ?thisArg:(x10364 : any option) ->
            fun () ->
              Ojs.list_of_js T.t_of_js
                (let x10372 = t_to_js x10371 in
                 Ojs.call (Ojs.get_prop_ascii x10372 "filter") "apply"
                   [|x10372;((let x10365 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x10365 "push"
                                   [|(Ojs.fun_to_js 3
                                        (fun (x10367 : Ojs.t) ->
                                           fun (x10368 : Ojs.t) ->
                                             fun (x10369 : Ojs.t) ->
                                               unknown_to_js
                                                 (x10363
                                                    ~value:(T.t_of_js x10367)
                                                    ~index:(Ojs.float_of_js
                                                              x10368)
                                                    ~array:(Ojs.list_of_js
                                                              T.t_of_js
                                                              x10369))))|]);
                              (match x10364 with
                               | Some x10366 ->
                                   ignore
                                     (Ojs.call x10365 "push"
                                        [|(any_to_js x10366)|])
                               | None -> ());
                              x10365))|])
    let (reduce :
      t ->
        callbackfn:(previousValue:T.t ->
                      currentValue:T.t ->
                        currentIndex:float -> array:T.t list -> T.t)
          -> T.t)
      =
      fun (x10380 : t) ->
        fun
          ~callbackfn:(x10374 :
                        previousValue:T.t ->
                          currentValue:T.t ->
                            currentIndex:float -> array:T.t list -> T.t)
          ->
          T.t_of_js
            (Ojs.call (t_to_js x10380) "reduce"
               [|(Ojs.fun_to_js 4
                    (fun (x10375 : Ojs.t) ->
                       fun (x10376 : Ojs.t) ->
                         fun (x10377 : Ojs.t) ->
                           fun (x10378 : Ojs.t) ->
                             T.t_to_js
                               (x10374 ~previousValue:(T.t_of_js x10375)
                                  ~currentValue:(T.t_of_js x10376)
                                  ~currentIndex:(Ojs.float_of_js x10377)
                                  ~array:(Ojs.list_of_js T.t_of_js x10378))))|])
    let (reduce :
      t ->
        callbackfn:(previousValue:T.t ->
                      currentValue:T.t ->
                        currentIndex:float -> array:T.t list -> T.t)
          -> initialValue:T.t -> T.t)
      =
      fun (x10388 : t) ->
        fun
          ~callbackfn:(x10381 :
                        previousValue:T.t ->
                          currentValue:T.t ->
                            currentIndex:float -> array:T.t list -> T.t)
          ->
          fun ~initialValue:(x10387 : T.t) ->
            T.t_of_js
              (Ojs.call (t_to_js x10388) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x10382 : Ojs.t) ->
                         fun (x10383 : Ojs.t) ->
                           fun (x10384 : Ojs.t) ->
                             fun (x10385 : Ojs.t) ->
                               T.t_to_js
                                 (x10381 ~previousValue:(T.t_of_js x10382)
                                    ~currentValue:(T.t_of_js x10383)
                                    ~currentIndex:(Ojs.float_of_js x10384)
                                    ~array:(Ojs.list_of_js T.t_of_js x10385))));(
                   T.t_to_js x10387)|])
    let (reduce :
      t ->
        callbackfn:(previousValue:'U ->
                      currentValue:T.t ->
                        currentIndex:float -> array:T.t list -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x10396 : t) ->
        fun
          ~callbackfn:(x10389 :
                        previousValue:'U ->
                          currentValue:T.t ->
                            currentIndex:float -> array:T.t list -> 'U)
          ->
          fun ~initialValue:(x10395 : 'U) ->
            Obj.magic
              (Ojs.call (t_to_js x10396) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x10390 : Ojs.t) ->
                         fun (x10391 : Ojs.t) ->
                           fun (x10392 : Ojs.t) ->
                             fun (x10393 : Ojs.t) ->
                               Obj.magic
                                 (x10389 ~previousValue:(Obj.magic x10390)
                                    ~currentValue:(T.t_of_js x10391)
                                    ~currentIndex:(Ojs.float_of_js x10392)
                                    ~array:(Ojs.list_of_js T.t_of_js x10393))));(
                   Obj.magic x10395)|])
    let (reduceRight :
      t ->
        callbackfn:(previousValue:T.t ->
                      currentValue:T.t ->
                        currentIndex:float -> array:T.t list -> T.t)
          -> T.t)
      =
      fun (x10403 : t) ->
        fun
          ~callbackfn:(x10397 :
                        previousValue:T.t ->
                          currentValue:T.t ->
                            currentIndex:float -> array:T.t list -> T.t)
          ->
          T.t_of_js
            (Ojs.call (t_to_js x10403) "reduceRight"
               [|(Ojs.fun_to_js 4
                    (fun (x10398 : Ojs.t) ->
                       fun (x10399 : Ojs.t) ->
                         fun (x10400 : Ojs.t) ->
                           fun (x10401 : Ojs.t) ->
                             T.t_to_js
                               (x10397 ~previousValue:(T.t_of_js x10398)
                                  ~currentValue:(T.t_of_js x10399)
                                  ~currentIndex:(Ojs.float_of_js x10400)
                                  ~array:(Ojs.list_of_js T.t_of_js x10401))))|])
    let (reduceRight :
      t ->
        callbackfn:(previousValue:T.t ->
                      currentValue:T.t ->
                        currentIndex:float -> array:T.t list -> T.t)
          -> initialValue:T.t -> T.t)
      =
      fun (x10411 : t) ->
        fun
          ~callbackfn:(x10404 :
                        previousValue:T.t ->
                          currentValue:T.t ->
                            currentIndex:float -> array:T.t list -> T.t)
          ->
          fun ~initialValue:(x10410 : T.t) ->
            T.t_of_js
              (Ojs.call (t_to_js x10411) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x10405 : Ojs.t) ->
                         fun (x10406 : Ojs.t) ->
                           fun (x10407 : Ojs.t) ->
                             fun (x10408 : Ojs.t) ->
                               T.t_to_js
                                 (x10404 ~previousValue:(T.t_of_js x10405)
                                    ~currentValue:(T.t_of_js x10406)
                                    ~currentIndex:(Ojs.float_of_js x10407)
                                    ~array:(Ojs.list_of_js T.t_of_js x10408))));(
                   T.t_to_js x10410)|])
    let (reduceRight :
      t ->
        callbackfn:(previousValue:'U ->
                      currentValue:T.t ->
                        currentIndex:float -> array:T.t list -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x10419 : t) ->
        fun
          ~callbackfn:(x10412 :
                        previousValue:'U ->
                          currentValue:T.t ->
                            currentIndex:float -> array:T.t list -> 'U)
          ->
          fun ~initialValue:(x10418 : 'U) ->
            Obj.magic
              (Ojs.call (t_to_js x10419) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x10413 : Ojs.t) ->
                         fun (x10414 : Ojs.t) ->
                           fun (x10415 : Ojs.t) ->
                             fun (x10416 : Ojs.t) ->
                               Obj.magic
                                 (x10412 ~previousValue:(Obj.magic x10413)
                                    ~currentValue:(T.t_of_js x10414)
                                    ~currentIndex:(Ojs.float_of_js x10415)
                                    ~array:(Ojs.list_of_js T.t_of_js x10416))));(
                   Obj.magic x10418)|])
    let (get : t -> float -> T.t) =
      fun (x10420 : t) ->
        fun (x10421 : float) ->
          T.t_of_js (Ojs.get_prop (t_to_js x10420) (Ojs.float_to_js x10421))
    let (set : t -> float -> T.t -> unit) =
      fun (x10422 : t) ->
        fun (x10423 : float) ->
          fun (x10424 : T.t) ->
            Ojs.set_prop (t_to_js x10422) (Ojs.float_to_js x10423)
              (T.t_to_js x10424)
    let (from :
      [ `U1 of T.t Iterable.t  | `U2 of T.t ArrayLike.t ] -> T.t list) =
      fun (x10425 : [ `U1 of T.t Iterable.t  | `U2 of T.t ArrayLike.t ]) ->
        Ojs.list_of_js T.t_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Array") "from"
             [|((match x10425 with
                 | `U1 x10426 -> Iterable.t_to_js T.t_to_js x10426
                 | `U2 x10428 -> ArrayLike.t_to_js T.t_to_js x10428))|])
    let (from :
      iterable:[ `U1 of T.t Iterable.t  | `U2 of T.t ArrayLike.t ] ->
        mapfn:(v:T.t -> k:float -> 'U) -> ?thisArg:any -> unit -> 'U list)
      =
      fun
        ~iterable:(x10431 :
                    [ `U1 of T.t Iterable.t  | `U2 of T.t ArrayLike.t ])
        ->
        fun ~mapfn:(x10432 : v:T.t -> k:float -> 'U) ->
          fun ?thisArg:(x10433 : any option) ->
            fun () ->
              Ojs.list_of_js Obj.magic
                (let x10442 = Ojs.get_prop_ascii Ojs.global "Array" in
                 Ojs.call (Ojs.get_prop_ascii x10442 "from") "apply"
                   [|x10442;((let x10434 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x10434 "push"
                                   [|((match x10431 with
                                       | `U1 x10438 ->
                                           Iterable.t_to_js T.t_to_js x10438
                                       | `U2 x10440 ->
                                           ArrayLike.t_to_js T.t_to_js x10440))|]);
                              ignore
                                (Ojs.call x10434 "push"
                                   [|(Ojs.fun_to_js 2
                                        (fun (x10436 : Ojs.t) ->
                                           fun (x10437 : Ojs.t) ->
                                             Obj.magic
                                               (x10432 ~v:(T.t_of_js x10436)
                                                  ~k:(Ojs.float_of_js x10437))))|]);
                              (match x10433 with
                               | Some x10435 ->
                                   ignore
                                     (Ojs.call x10434 "push"
                                        [|(any_to_js x10435)|])
                               | None -> ());
                              x10434))|])
    let (from : T.t ArrayLike.t -> T.t list) =
      fun (x10444 : T.t ArrayLike.t) ->
        Ojs.list_of_js T.t_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Array") "from"
             [|(ArrayLike.t_to_js T.t_to_js x10444)|])
    let (from :
      arrayLike:T.t ArrayLike.t ->
        mapfn:(v:T.t -> k:float -> 'U) -> ?thisArg:any -> unit -> 'U list)
      =
      fun ~arrayLike:(x10447 : T.t ArrayLike.t) ->
        fun ~mapfn:(x10448 : v:T.t -> k:float -> 'U) ->
          fun ?thisArg:(x10449 : any option) ->
            fun () ->
              Ojs.list_of_js Obj.magic
                (let x10455 = Ojs.get_prop_ascii Ojs.global "Array" in
                 Ojs.call (Ojs.get_prop_ascii x10455 "from") "apply"
                   [|x10455;((let x10450 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x10450 "push"
                                   [|(ArrayLike.t_to_js T.t_to_js x10447)|]);
                              ignore
                                (Ojs.call x10450 "push"
                                   [|(Ojs.fun_to_js 2
                                        (fun (x10452 : Ojs.t) ->
                                           fun (x10453 : Ojs.t) ->
                                             Obj.magic
                                               (x10448 ~v:(T.t_of_js x10452)
                                                  ~k:(Ojs.float_of_js x10453))))|]);
                              (match x10449 with
                               | Some x10451 ->
                                   ignore
                                     (Ojs.call x10450 "push"
                                        [|(any_to_js x10451)|])
                               | None -> ());
                              x10450))|])
    let (of_ : T.t list -> T.t list) =
      fun (x10457 : T.t list) ->
        Ojs.list_of_js T.t_of_js
          (let x10460 = Ojs.get_prop_ascii Ojs.global "Array" in
           Ojs.call (Ojs.get_prop_ascii x10460 "of") "apply"
             [|x10460;((let x10458 =
                          Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                            [||] in
                        List.iter
                          (fun (x10459 : T.t) ->
                             ignore
                               (Ojs.call x10458 "push" [|(T.t_to_js x10459)|]))
                          x10457;
                        x10458))|])
    let (create : ?arrayLength:float -> unit -> any list) =
      fun ?arrayLength:(x10462 : float option) ->
        fun () ->
          Ojs.list_of_js any_of_js
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "Array")
               (let x10463 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x10462 with
                 | Some x10464 ->
                     ignore
                       (Ojs.call x10463 "push" [|(Ojs.float_to_js x10464)|])
                 | None -> ());
                x10463))
    let (create : float -> T.t list) =
      fun (x10466 : float) ->
        Ojs.list_of_js T.t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
             [|(Ojs.float_to_js x10466)|])
    let (create : T.t list -> T.t list) =
      fun (x10468 : T.t list) ->
        Ojs.list_of_js T.t_of_js
          (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "Array")
             (let x10469 =
                Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
              List.iter
                (fun (x10470 : T.t) ->
                   ignore (Ojs.call x10469 "push" [|(T.t_to_js x10470)|]))
                x10468;
              x10469))
    let (invoke : ?arrayLength:float -> unit -> any list) =
      fun ?arrayLength:(x10472 : float option) ->
        fun () ->
          Ojs.list_of_js any_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "Array") "apply"
               [|Ojs.null;((let x10473 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x10472 with
                             | Some x10474 ->
                                 ignore
                                   (Ojs.call x10473 "push"
                                      [|(Ojs.float_to_js x10474)|])
                             | None -> ());
                            x10473))|])
    let (invoke : float -> T.t list) =
      fun (x10476 : float) ->
        Ojs.list_of_js T.t_of_js
          (Ojs.apply (Ojs.get_prop_ascii Ojs.global "Array")
             [|(Ojs.float_to_js x10476)|])
    let (invoke : T.t list -> T.t list) =
      fun (x10478 : T.t list) ->
        Ojs.list_of_js T.t_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Array") "apply"
             [|Ojs.null;((let x10479 =
                            Ojs.new_obj
                              (Ojs.get_prop_ascii Ojs.global "Array") 
                              [||] in
                          List.iter
                            (fun (x10480 : T.t) ->
                               ignore
                                 (Ojs.call x10479 "push"
                                    [|(T.t_to_js x10480)|])) x10478;
                          x10479))|])
    let (isArray : any -> bool) =
      fun (x10482 : any) ->
        Ojs.bool_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Array") "isArray"
             [|(any_to_js x10482)|])
    let (prototype : unit -> any list) =
      fun () ->
        Ojs.list_of_js any_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Array")
             "prototype")
  end
module TypedPropertyDescriptor_Make(T:Ojs.T) =
  struct
    type 'T parent = 'T TypedPropertyDescriptor.t
    let rec parent_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T parent =
      fun (type __T) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x10486 : Ojs.t) ->
            TypedPropertyDescriptor.t_of_js __T_of_js x10486
    and parent_to_js : 'T . ('T -> Ojs.t) -> 'T parent -> Ojs.t =
      fun (type __T) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x10484 : __T TypedPropertyDescriptor.t) ->
            TypedPropertyDescriptor.t_to_js __T_to_js x10484
    type t = T.t parent
    let rec t_of_js : Ojs.t -> t =
      fun (x10490 : Ojs.t) -> parent_of_js T.t_of_js x10490
    and t_to_js : t -> Ojs.t =
      fun (x10488 : T.t parent) -> parent_to_js T.t_to_js x10488
    let (get_enumerable : t -> bool option) =
      fun (x10492 : t) ->
        Ojs.option_of_js Ojs.bool_of_js
          (Ojs.get_prop_ascii (t_to_js x10492) "enumerable")
    let (set_enumerable : t -> bool -> unit) =
      fun (x10494 : t) ->
        fun (x10495 : bool) ->
          Ojs.set_prop_ascii (t_to_js x10494) "enumerable"
            (Ojs.bool_to_js x10495)
    let (get_configurable : t -> bool option) =
      fun (x10496 : t) ->
        Ojs.option_of_js Ojs.bool_of_js
          (Ojs.get_prop_ascii (t_to_js x10496) "configurable")
    let (set_configurable : t -> bool -> unit) =
      fun (x10498 : t) ->
        fun (x10499 : bool) ->
          Ojs.set_prop_ascii (t_to_js x10498) "configurable"
            (Ojs.bool_to_js x10499)
    let (get_writable : t -> bool option) =
      fun (x10500 : t) ->
        Ojs.option_of_js Ojs.bool_of_js
          (Ojs.get_prop_ascii (t_to_js x10500) "writable")
    let (set_writable : t -> bool -> unit) =
      fun (x10502 : t) ->
        fun (x10503 : bool) ->
          Ojs.set_prop_ascii (t_to_js x10502) "writable"
            (Ojs.bool_to_js x10503)
    let (get_value : t -> T.t option) =
      fun (x10504 : t) ->
        Ojs.option_of_js T.t_of_js
          (Ojs.get_prop_ascii (t_to_js x10504) "value")
    let (set_value : t -> T.t -> unit) =
      fun (x10506 : t) ->
        fun (x10507 : T.t) ->
          Ojs.set_prop_ascii (t_to_js x10506) "value" (T.t_to_js x10507)
    let (get_ : t -> T.t) =
      fun (x10508 : t) -> T.t_of_js (Ojs.call (t_to_js x10508) "get" [||])
    let (set_ : t -> value:T.t -> unit) =
      fun (x10510 : t) ->
        fun ~value:(x10509 : T.t) ->
          ignore (Ojs.call (t_to_js x10510) "set" [|(T.t_to_js x10509)|])
  end
module PromiseLike_Make(T:Ojs.T) =
  struct
    type 'T parent = 'T PromiseLike.t
    let rec parent_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T parent =
      fun (type __T) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x10513 : Ojs.t) -> PromiseLike.t_of_js __T_of_js x10513
    and parent_to_js : 'T . ('T -> Ojs.t) -> 'T parent -> Ojs.t =
      fun (type __T) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x10511 : __T PromiseLike.t) ->
            PromiseLike.t_to_js __T_to_js x10511
    type t = T.t parent
    let rec t_of_js : Ojs.t -> t =
      fun (x10517 : Ojs.t) -> parent_of_js T.t_of_js x10517
    and t_to_js : t -> Ojs.t =
      fun (x10515 : T.t parent) -> parent_to_js T.t_to_js x10515
    let (then_ :
      t ->
        ?onfulfilled:[ `Null  | `Undefined of undefined 
                     | `U1 of
                         T.t ->
                           [ `U1 of 'TResult1  | `U2 of 'TResult1 parent ]
                         ]
          ->
          ?onrejected:[ `Null  | `Undefined of undefined 
                      | `U1 of
                          any ->
                            [ `U1 of 'TResult2  | `U2 of 'TResult2 parent ]
                          ]
            -> unit -> ('TResult1, 'TResult2) union2 parent)
      =
      fun (x10536 : t) ->
        fun
          ?onfulfilled:(x10519 :
                         [ `Null  | `Undefined of undefined 
                         | `U1 of
                             T.t ->
                               [ `U1 of 'TResult1 
                               | `U2 of 'TResult1 parent ]
                             ]
                           option)
          ->
          fun
            ?onrejected:(x10520 :
                          [ `Null  | `Undefined of undefined 
                          | `U1 of
                              any ->
                                [ `U1 of 'TResult2 
                                | `U2 of 'TResult2 parent ]
                              ]
                            option)
            ->
            fun () ->
              parent_of_js
                (fun (x10538 : Ojs.t) ->
                   union2_of_js Obj.magic Obj.magic x10538)
                (let x10537 = t_to_js x10536 in
                 Ojs.call (Ojs.get_prop_ascii x10537 "then") "apply"
                   [|x10537;((let x10521 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              (match x10519 with
                               | Some x10529 ->
                                   ignore
                                     (Ojs.call x10521 "push"
                                        [|((match x10529 with
                                            | `Null -> Ojs.null
                                            | `Undefined x10530 ->
                                                undefined_to_js x10530
                                            | `U1 x10531 ->
                                                Ojs.fun_to_js 1
                                                  (fun (x10532 : Ojs.t) ->
                                                     match x10531
                                                             (T.t_of_js
                                                                x10532)
                                                     with
                                                     | `U1 x10533 ->
                                                         Obj.magic x10533
                                                     | `U2 x10534 ->
                                                         parent_to_js
                                                           Obj.magic x10534)))|])
                               | None -> ());
                              (match x10520 with
                               | Some x10522 ->
                                   ignore
                                     (Ojs.call x10521 "push"
                                        [|((match x10522 with
                                            | `Null -> Ojs.null
                                            | `Undefined x10523 ->
                                                undefined_to_js x10523
                                            | `U1 x10524 ->
                                                Ojs.fun_to_js 1
                                                  (fun (x10525 : Ojs.t) ->
                                                     match x10524
                                                             (any_of_js
                                                                x10525)
                                                     with
                                                     | `U1 x10526 ->
                                                         Obj.magic x10526
                                                     | `U2 x10527 ->
                                                         parent_to_js
                                                           Obj.magic x10527)))|])
                               | None -> ());
                              x10521))|])
  end
module ArrayLike_Make(T:Ojs.T) =
  struct
    type 'T parent = 'T ArrayLike.t
    let rec parent_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T parent =
      fun (type __T) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x10543 : Ojs.t) -> ArrayLike.t_of_js __T_of_js x10543
    and parent_to_js : 'T . ('T -> Ojs.t) -> 'T parent -> Ojs.t =
      fun (type __T) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x10541 : __T ArrayLike.t) ->
            ArrayLike.t_to_js __T_to_js x10541
    type t = T.t parent
    let rec t_of_js : Ojs.t -> t =
      fun (x10547 : Ojs.t) -> parent_of_js T.t_of_js x10547
    and t_to_js : t -> Ojs.t =
      fun (x10545 : T.t parent) -> parent_to_js T.t_to_js x10545
    let (get_length : t -> float) =
      fun (x10549 : t) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x10549) "length")
    let (get : t -> float -> T.t) =
      fun (x10550 : t) ->
        fun (x10551 : float) ->
          T.t_of_js (Ojs.get_prop (t_to_js x10550) (Ojs.float_to_js x10551))
  end
module Map_Make(K:Ojs.T)(V:Ojs.T) =
  struct
    type ('K, 'V) parent = ('K, 'V) Map.t
    let rec parent_of_js :
      'K 'V . (Ojs.t -> 'K) -> (Ojs.t -> 'V) -> Ojs.t -> ('K, 'V) parent =
      fun (type __K) ->
        fun (type __V) ->
          fun (__K_of_js : Ojs.t -> __K) ->
            fun (__V_of_js : Ojs.t -> __V) ->
              fun (x10555 : Ojs.t) -> Map.t_of_js __K_of_js __V_of_js x10555
    and parent_to_js :
      'K 'V . ('K -> Ojs.t) -> ('V -> Ojs.t) -> ('K, 'V) parent -> Ojs.t =
      fun (type __K) ->
        fun (type __V) ->
          fun (__K_to_js : __K -> Ojs.t) ->
            fun (__V_to_js : __V -> Ojs.t) ->
              fun (x10552 : (__K, __V) Map.t) ->
                Map.t_to_js __K_to_js __V_to_js x10552
    type t = (K.t, V.t) parent
    let rec t_of_js : Ojs.t -> t =
      fun (x10561 : Ojs.t) -> parent_of_js K.t_of_js V.t_of_js x10561
    and t_to_js : t -> Ojs.t =
      fun (x10558 : (K.t, V.t) parent) ->
        parent_to_js K.t_to_js V.t_to_js x10558
    let (entries : t -> (K.t * V.t) IterableIterator.t) =
      fun (x10564 : t) ->
        IterableIterator.t_of_js
          (fun (x10565 : Ojs.t) ->
             let x10566 = x10565 in
             ((K.t_of_js (Ojs.array_get x10566 0)),
               (V.t_of_js (Ojs.array_get x10566 1))))
          (Ojs.call (t_to_js x10564) "entries" [||])
    let (keys : t -> K.t IterableIterator.t) =
      fun (x10567 : t) ->
        IterableIterator.t_of_js K.t_of_js
          (Ojs.call (t_to_js x10567) "keys" [||])
    let (values : t -> V.t IterableIterator.t) =
      fun (x10569 : t) ->
        IterableIterator.t_of_js V.t_of_js
          (Ojs.call (t_to_js x10569) "values" [||])
    let (clear : t -> unit) =
      fun (x10571 : t) -> ignore (Ojs.call (t_to_js x10571) "clear" [||])
    let (delete : t -> key:K.t -> bool) =
      fun (x10573 : t) ->
        fun ~key:(x10572 : K.t) ->
          Ojs.bool_of_js
            (Ojs.call (t_to_js x10573) "delete" [|(K.t_to_js x10572)|])
    let (forEach :
      t ->
        callbackfn:(value:V.t -> key:K.t -> map:t -> unit) ->
          ?thisArg:any -> unit -> unit)
      =
      fun (x10581 : t) ->
        fun ~callbackfn:(x10574 : value:V.t -> key:K.t -> map:t -> unit) ->
          fun ?thisArg:(x10575 : any option) ->
            fun () ->
              ignore
                (let x10582 = t_to_js x10581 in
                 Ojs.call (Ojs.get_prop_ascii x10582 "forEach") "apply"
                   [|x10582;((let x10576 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x10576 "push"
                                   [|(Ojs.fun_to_js 3
                                        (fun (x10578 : Ojs.t) ->
                                           fun (x10579 : Ojs.t) ->
                                             fun (x10580 : Ojs.t) ->
                                               x10574
                                                 ~value:(V.t_of_js x10578)
                                                 ~key:(K.t_of_js x10579)
                                                 ~map:(t_of_js x10580)))|]);
                              (match x10575 with
                               | Some x10577 ->
                                   ignore
                                     (Ojs.call x10576 "push"
                                        [|(any_to_js x10577)|])
                               | None -> ());
                              x10576))|])
    let (get_ : t -> key:K.t -> V.t option) =
      fun (x10584 : t) ->
        fun ~key:(x10583 : K.t) ->
          Ojs.option_of_js V.t_of_js
            (Ojs.call (t_to_js x10584) "get" [|(K.t_to_js x10583)|])
    let (has : t -> key:K.t -> bool) =
      fun (x10587 : t) ->
        fun ~key:(x10586 : K.t) ->
          Ojs.bool_of_js
            (Ojs.call (t_to_js x10587) "has" [|(K.t_to_js x10586)|])
    let (set_ : t -> key:K.t -> value:V.t -> t) =
      fun (x10590 : t) ->
        fun ~key:(x10588 : K.t) ->
          fun ~value:(x10589 : V.t) ->
            t_of_js
              (Ojs.call (t_to_js x10590) "set"
                 [|(K.t_to_js x10588);(V.t_to_js x10589)|])
    let (get_size : t -> float) =
      fun (x10591 : t) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x10591) "size")
    let (create : unit -> (any, any) parent) =
      fun () ->
        parent_of_js any_of_js any_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Map") [||])
    let (create : ?iterable:(K.t * V.t) Iterable.t option -> unit -> t) =
      fun ?iterable:(x10594 : (K.t * V.t) Iterable.t option option) ->
        fun () ->
          t_of_js
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "Map")
               (let x10595 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x10594 with
                 | Some x10596 ->
                     ignore
                       (Ojs.call x10595 "push"
                          [|(Ojs.option_to_js
                               (fun (x10597 : (K.t * V.t) Iterable.t) ->
                                  Iterable.t_to_js
                                    (fun (x10598 : (K.t * V.t)) ->
                                       let (x10599, x10600) = x10598 in
                                       let x10601 = Ojs.array_make 2 in
                                       Ojs.array_set x10601 0
                                         (K.t_to_js x10599);
                                       Ojs.array_set x10601 1
                                         (V.t_to_js x10600);
                                       x10601) x10597) x10596)|])
                 | None -> ());
                x10595))
    let (create : unit -> (any, any) parent) =
      fun () ->
        parent_of_js any_of_js any_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Map") [||])
    let (create : ?entries:(K.t * V.t) list option -> unit -> t) =
      fun ?entries:(x10604 : (K.t * V.t) list option option) ->
        fun () ->
          t_of_js
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "Map")
               (let x10605 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x10604 with
                 | Some x10606 ->
                     ignore
                       (Ojs.call x10605 "push"
                          [|(Ojs.option_to_js
                               (fun (x10607 : (K.t * V.t) list) ->
                                  Ojs.list_to_js
                                    (fun (x10608 : (K.t * V.t)) ->
                                       let (x10609, x10610) = x10608 in
                                       let x10611 = Ojs.array_make 2 in
                                       Ojs.array_set x10611 0
                                         (K.t_to_js x10609);
                                       Ojs.array_set x10611 1
                                         (V.t_to_js x10610);
                                       x10611) x10607) x10606)|])
                 | None -> ());
                x10605))
    let (prototype : unit -> (any, any) parent) =
      fun () ->
        parent_of_js any_of_js any_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Map")
             "prototype")
  end
module ReadonlyMap_Make(K:Ojs.T)(V:Ojs.T) =
  struct
    type ('K, 'V) parent = ('K, 'V) ReadonlyMap.t
    let rec parent_of_js :
      'K 'V . (Ojs.t -> 'K) -> (Ojs.t -> 'V) -> Ojs.t -> ('K, 'V) parent =
      fun (type __K) ->
        fun (type __V) ->
          fun (__K_of_js : Ojs.t -> __K) ->
            fun (__V_of_js : Ojs.t -> __V) ->
              fun (x10617 : Ojs.t) ->
                ReadonlyMap.t_of_js __K_of_js __V_of_js x10617
    and parent_to_js :
      'K 'V . ('K -> Ojs.t) -> ('V -> Ojs.t) -> ('K, 'V) parent -> Ojs.t =
      fun (type __K) ->
        fun (type __V) ->
          fun (__K_to_js : __K -> Ojs.t) ->
            fun (__V_to_js : __V -> Ojs.t) ->
              fun (x10614 : (__K, __V) ReadonlyMap.t) ->
                ReadonlyMap.t_to_js __K_to_js __V_to_js x10614
    type t = (K.t, V.t) parent
    let rec t_of_js : Ojs.t -> t =
      fun (x10623 : Ojs.t) -> parent_of_js K.t_of_js V.t_of_js x10623
    and t_to_js : t -> Ojs.t =
      fun (x10620 : (K.t, V.t) parent) ->
        parent_to_js K.t_to_js V.t_to_js x10620
    let (entries : t -> (K.t * V.t) IterableIterator.t) =
      fun (x10626 : t) ->
        IterableIterator.t_of_js
          (fun (x10627 : Ojs.t) ->
             let x10628 = x10627 in
             ((K.t_of_js (Ojs.array_get x10628 0)),
               (V.t_of_js (Ojs.array_get x10628 1))))
          (Ojs.call (t_to_js x10626) "entries" [||])
    let (keys : t -> K.t IterableIterator.t) =
      fun (x10629 : t) ->
        IterableIterator.t_of_js K.t_of_js
          (Ojs.call (t_to_js x10629) "keys" [||])
    let (values : t -> V.t IterableIterator.t) =
      fun (x10631 : t) ->
        IterableIterator.t_of_js V.t_of_js
          (Ojs.call (t_to_js x10631) "values" [||])
    let (forEach :
      t ->
        callbackfn:(value:V.t -> key:K.t -> map:t -> unit) ->
          ?thisArg:any -> unit -> unit)
      =
      fun (x10640 : t) ->
        fun ~callbackfn:(x10633 : value:V.t -> key:K.t -> map:t -> unit) ->
          fun ?thisArg:(x10634 : any option) ->
            fun () ->
              ignore
                (let x10641 = t_to_js x10640 in
                 Ojs.call (Ojs.get_prop_ascii x10641 "forEach") "apply"
                   [|x10641;((let x10635 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x10635 "push"
                                   [|(Ojs.fun_to_js 3
                                        (fun (x10637 : Ojs.t) ->
                                           fun (x10638 : Ojs.t) ->
                                             fun (x10639 : Ojs.t) ->
                                               x10633
                                                 ~value:(V.t_of_js x10637)
                                                 ~key:(K.t_of_js x10638)
                                                 ~map:(t_of_js x10639)))|]);
                              (match x10634 with
                               | Some x10636 ->
                                   ignore
                                     (Ojs.call x10635 "push"
                                        [|(any_to_js x10636)|])
                               | None -> ());
                              x10635))|])
    let (get_ : t -> key:K.t -> V.t option) =
      fun (x10643 : t) ->
        fun ~key:(x10642 : K.t) ->
          Ojs.option_of_js V.t_of_js
            (Ojs.call (t_to_js x10643) "get" [|(K.t_to_js x10642)|])
    let (has : t -> key:K.t -> bool) =
      fun (x10646 : t) ->
        fun ~key:(x10645 : K.t) ->
          Ojs.bool_of_js
            (Ojs.call (t_to_js x10646) "has" [|(K.t_to_js x10645)|])
    let (get_size : t -> float) =
      fun (x10647 : t) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x10647) "size")
  end
module WeakMap_Make(K:Ojs.T)(V:Ojs.T) =
  struct
    type ('K, 'V) parent = ('K, 'V) WeakMap.t
    let rec parent_of_js :
      'K 'V . (Ojs.t -> 'K) -> (Ojs.t -> 'V) -> Ojs.t -> ('K, 'V) parent =
      fun (type __K) ->
        fun (type __V) ->
          fun (__K_of_js : Ojs.t -> __K) ->
            fun (__V_of_js : Ojs.t -> __V) ->
              fun (x10651 : Ojs.t) ->
                WeakMap.t_of_js __K_of_js __V_of_js x10651
    and parent_to_js :
      'K 'V . ('K -> Ojs.t) -> ('V -> Ojs.t) -> ('K, 'V) parent -> Ojs.t =
      fun (type __K) ->
        fun (type __V) ->
          fun (__K_to_js : __K -> Ojs.t) ->
            fun (__V_to_js : __V -> Ojs.t) ->
              fun (x10648 : (__K, __V) WeakMap.t) ->
                WeakMap.t_to_js __K_to_js __V_to_js x10648
    type t = (K.t, V.t) parent
    let rec t_of_js : Ojs.t -> t =
      fun (x10657 : Ojs.t) -> parent_of_js K.t_of_js V.t_of_js x10657
    and t_to_js : t -> Ojs.t =
      fun (x10654 : (K.t, V.t) parent) ->
        parent_to_js K.t_to_js V.t_to_js x10654
    let (delete : t -> key:K.t -> bool) =
      fun (x10661 : t) ->
        fun ~key:(x10660 : K.t) ->
          Ojs.bool_of_js
            (Ojs.call (t_to_js x10661) "delete" [|(K.t_to_js x10660)|])
    let (get_ : t -> key:K.t -> V.t option) =
      fun (x10663 : t) ->
        fun ~key:(x10662 : K.t) ->
          Ojs.option_of_js V.t_of_js
            (Ojs.call (t_to_js x10663) "get" [|(K.t_to_js x10662)|])
    let (has : t -> key:K.t -> bool) =
      fun (x10666 : t) ->
        fun ~key:(x10665 : K.t) ->
          Ojs.bool_of_js
            (Ojs.call (t_to_js x10666) "has" [|(K.t_to_js x10665)|])
    let (set_ : t -> key:K.t -> value:V.t -> t) =
      fun (x10669 : t) ->
        fun ~key:(x10667 : K.t) ->
          fun ~value:(x10668 : V.t) ->
            t_of_js
              (Ojs.call (t_to_js x10669) "set"
                 [|(K.t_to_js x10667);(V.t_to_js x10668)|])
    let (create : (K.t * V.t) Iterable.t -> t) =
      fun (x10670 : (K.t * V.t) Iterable.t) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "WeakMap")
             [|(Iterable.t_to_js
                  (fun (x10671 : (K.t * V.t)) ->
                     let (x10672, x10673) = x10671 in
                     let x10674 = Ojs.array_make 2 in
                     Ojs.array_set x10674 0 (K.t_to_js x10672);
                     Ojs.array_set x10674 1 (V.t_to_js x10673);
                     x10674) x10670)|])
    let (create : ?entries:(K.t * V.t) list option -> unit -> t) =
      fun ?entries:(x10675 : (K.t * V.t) list option option) ->
        fun () ->
          t_of_js
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "WeakMap")
               (let x10676 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x10675 with
                 | Some x10677 ->
                     ignore
                       (Ojs.call x10676 "push"
                          [|(Ojs.option_to_js
                               (fun (x10678 : (K.t * V.t) list) ->
                                  Ojs.list_to_js
                                    (fun (x10679 : (K.t * V.t)) ->
                                       let (x10680, x10681) = x10679 in
                                       let x10682 = Ojs.array_make 2 in
                                       Ojs.array_set x10682 0
                                         (K.t_to_js x10680);
                                       Ojs.array_set x10682 1
                                         (V.t_to_js x10681);
                                       x10682) x10678) x10677)|])
                 | None -> ());
                x10676))
    let (prototype : unit -> (untyped_object, any) parent) =
      fun () ->
        parent_of_js untyped_object_of_js any_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "WeakMap")
             "prototype")
  end
module Set_Make(T:Ojs.T) =
  struct
    type 'T parent = 'T Set.t
    let rec parent_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T parent =
      fun (type __T) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x10687 : Ojs.t) -> Set.t_of_js __T_of_js x10687
    and parent_to_js : 'T . ('T -> Ojs.t) -> 'T parent -> Ojs.t =
      fun (type __T) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x10685 : __T Set.t) -> Set.t_to_js __T_to_js x10685
    type t = T.t parent
    let rec t_of_js : Ojs.t -> t =
      fun (x10691 : Ojs.t) -> parent_of_js T.t_of_js x10691
    and t_to_js : t -> Ojs.t =
      fun (x10689 : T.t parent) -> parent_to_js T.t_to_js x10689
    let (entries : t -> (T.t * T.t) IterableIterator.t) =
      fun (x10693 : t) ->
        IterableIterator.t_of_js
          (fun (x10694 : Ojs.t) ->
             let x10695 = x10694 in
             ((T.t_of_js (Ojs.array_get x10695 0)),
               (T.t_of_js (Ojs.array_get x10695 1))))
          (Ojs.call (t_to_js x10693) "entries" [||])
    let (keys : t -> T.t IterableIterator.t) =
      fun (x10696 : t) ->
        IterableIterator.t_of_js T.t_of_js
          (Ojs.call (t_to_js x10696) "keys" [||])
    let (values : t -> T.t IterableIterator.t) =
      fun (x10698 : t) ->
        IterableIterator.t_of_js T.t_of_js
          (Ojs.call (t_to_js x10698) "values" [||])
    let (add : t -> value:T.t -> t) =
      fun (x10701 : t) ->
        fun ~value:(x10700 : T.t) ->
          t_of_js (Ojs.call (t_to_js x10701) "add" [|(T.t_to_js x10700)|])
    let (clear : t -> unit) =
      fun (x10702 : t) -> ignore (Ojs.call (t_to_js x10702) "clear" [||])
    let (delete : t -> value:T.t -> bool) =
      fun (x10704 : t) ->
        fun ~value:(x10703 : T.t) ->
          Ojs.bool_of_js
            (Ojs.call (t_to_js x10704) "delete" [|(T.t_to_js x10703)|])
    let (forEach :
      t ->
        callbackfn:(value:T.t -> value2:T.t -> set_:t -> unit) ->
          ?thisArg:any -> unit -> unit)
      =
      fun (x10712 : t) ->
        fun ~callbackfn:(x10705 : value:T.t -> value2:T.t -> set_:t -> unit)
          ->
          fun ?thisArg:(x10706 : any option) ->
            fun () ->
              ignore
                (let x10713 = t_to_js x10712 in
                 Ojs.call (Ojs.get_prop_ascii x10713 "forEach") "apply"
                   [|x10713;((let x10707 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x10707 "push"
                                   [|(Ojs.fun_to_js 3
                                        (fun (x10709 : Ojs.t) ->
                                           fun (x10710 : Ojs.t) ->
                                             fun (x10711 : Ojs.t) ->
                                               x10705
                                                 ~value:(T.t_of_js x10709)
                                                 ~value2:(T.t_of_js x10710)
                                                 ~set_:(t_of_js x10711)))|]);
                              (match x10706 with
                               | Some x10708 ->
                                   ignore
                                     (Ojs.call x10707 "push"
                                        [|(any_to_js x10708)|])
                               | None -> ());
                              x10707))|])
    let (has : t -> value:T.t -> bool) =
      fun (x10715 : t) ->
        fun ~value:(x10714 : T.t) ->
          Ojs.bool_of_js
            (Ojs.call (t_to_js x10715) "has" [|(T.t_to_js x10714)|])
    let (get_size : t -> float) =
      fun (x10716 : t) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x10716) "size")
    let (create : ?iterable:T.t Iterable.t option -> unit -> t) =
      fun ?iterable:(x10717 : T.t Iterable.t option option) ->
        fun () ->
          t_of_js
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "Set")
               (let x10718 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x10717 with
                 | Some x10719 ->
                     ignore
                       (Ojs.call x10718 "push"
                          [|(Ojs.option_to_js
                               (fun (x10720 : T.t Iterable.t) ->
                                  Iterable.t_to_js T.t_to_js x10720) x10719)|])
                 | None -> ());
                x10718))
    let (create : ?values:T.t list option -> unit -> t) =
      fun ?values:(x10722 : T.t list option option) ->
        fun () ->
          t_of_js
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "Set")
               (let x10723 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x10722 with
                 | Some x10724 ->
                     ignore
                       (Ojs.call x10723 "push"
                          [|(Ojs.option_to_js
                               (fun (x10725 : T.t list) ->
                                  Ojs.list_to_js T.t_to_js x10725) x10724)|])
                 | None -> ());
                x10723))
    let (prototype : unit -> any parent) =
      fun () ->
        parent_of_js any_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Set")
             "prototype")
  end
module ReadonlySet_Make(T:Ojs.T) =
  struct
    type 'T parent = 'T ReadonlySet.t
    let rec parent_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T parent =
      fun (type __T) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x10730 : Ojs.t) -> ReadonlySet.t_of_js __T_of_js x10730
    and parent_to_js : 'T . ('T -> Ojs.t) -> 'T parent -> Ojs.t =
      fun (type __T) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x10728 : __T ReadonlySet.t) ->
            ReadonlySet.t_to_js __T_to_js x10728
    type t = T.t parent
    let rec t_of_js : Ojs.t -> t =
      fun (x10734 : Ojs.t) -> parent_of_js T.t_of_js x10734
    and t_to_js : t -> Ojs.t =
      fun (x10732 : T.t parent) -> parent_to_js T.t_to_js x10732
    let (entries : t -> (T.t * T.t) IterableIterator.t) =
      fun (x10736 : t) ->
        IterableIterator.t_of_js
          (fun (x10737 : Ojs.t) ->
             let x10738 = x10737 in
             ((T.t_of_js (Ojs.array_get x10738 0)),
               (T.t_of_js (Ojs.array_get x10738 1))))
          (Ojs.call (t_to_js x10736) "entries" [||])
    let (keys : t -> T.t IterableIterator.t) =
      fun (x10739 : t) ->
        IterableIterator.t_of_js T.t_of_js
          (Ojs.call (t_to_js x10739) "keys" [||])
    let (values : t -> T.t IterableIterator.t) =
      fun (x10741 : t) ->
        IterableIterator.t_of_js T.t_of_js
          (Ojs.call (t_to_js x10741) "values" [||])
    let (forEach :
      t ->
        callbackfn:(value:T.t -> value2:T.t -> set_:t -> unit) ->
          ?thisArg:any -> unit -> unit)
      =
      fun (x10750 : t) ->
        fun ~callbackfn:(x10743 : value:T.t -> value2:T.t -> set_:t -> unit)
          ->
          fun ?thisArg:(x10744 : any option) ->
            fun () ->
              ignore
                (let x10751 = t_to_js x10750 in
                 Ojs.call (Ojs.get_prop_ascii x10751 "forEach") "apply"
                   [|x10751;((let x10745 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x10745 "push"
                                   [|(Ojs.fun_to_js 3
                                        (fun (x10747 : Ojs.t) ->
                                           fun (x10748 : Ojs.t) ->
                                             fun (x10749 : Ojs.t) ->
                                               x10743
                                                 ~value:(T.t_of_js x10747)
                                                 ~value2:(T.t_of_js x10748)
                                                 ~set_:(t_of_js x10749)))|]);
                              (match x10744 with
                               | Some x10746 ->
                                   ignore
                                     (Ojs.call x10745 "push"
                                        [|(any_to_js x10746)|])
                               | None -> ());
                              x10745))|])
    let (has : t -> value:T.t -> bool) =
      fun (x10753 : t) ->
        fun ~value:(x10752 : T.t) ->
          Ojs.bool_of_js
            (Ojs.call (t_to_js x10753) "has" [|(T.t_to_js x10752)|])
    let (get_size : t -> float) =
      fun (x10754 : t) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x10754) "size")
  end
module WeakSet_Make(T:Ojs.T) =
  struct
    type 'T parent = 'T WeakSet.t
    let rec parent_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T parent =
      fun (type __T) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x10757 : Ojs.t) -> WeakSet.t_of_js __T_of_js x10757
    and parent_to_js : 'T . ('T -> Ojs.t) -> 'T parent -> Ojs.t =
      fun (type __T) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x10755 : __T WeakSet.t) -> WeakSet.t_to_js __T_to_js x10755
    type t = T.t parent
    let rec t_of_js : Ojs.t -> t =
      fun (x10761 : Ojs.t) -> parent_of_js T.t_of_js x10761
    and t_to_js : t -> Ojs.t =
      fun (x10759 : T.t parent) -> parent_to_js T.t_to_js x10759
    let (add : t -> value:T.t -> t) =
      fun (x10764 : t) ->
        fun ~value:(x10763 : T.t) ->
          t_of_js (Ojs.call (t_to_js x10764) "add" [|(T.t_to_js x10763)|])
    let (delete : t -> value:T.t -> bool) =
      fun (x10766 : t) ->
        fun ~value:(x10765 : T.t) ->
          Ojs.bool_of_js
            (Ojs.call (t_to_js x10766) "delete" [|(T.t_to_js x10765)|])
    let (has : t -> value:T.t -> bool) =
      fun (x10768 : t) ->
        fun ~value:(x10767 : T.t) ->
          Ojs.bool_of_js
            (Ojs.call (t_to_js x10768) "has" [|(T.t_to_js x10767)|])
    let (create : T.t Iterable.t -> t) =
      fun (x10769 : T.t Iterable.t) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "WeakSet")
             [|(Iterable.t_to_js T.t_to_js x10769)|])
    let (create : ?values:T.t list option -> unit -> t) =
      fun ?values:(x10771 : T.t list option option) ->
        fun () ->
          t_of_js
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "WeakSet")
               (let x10772 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x10771 with
                 | Some x10773 ->
                     ignore
                       (Ojs.call x10772 "push"
                          [|(Ojs.option_to_js
                               (fun (x10774 : T.t list) ->
                                  Ojs.list_to_js T.t_to_js x10774) x10773)|])
                 | None -> ());
                x10772))
    let (prototype : unit -> untyped_object parent) =
      fun () ->
        parent_of_js untyped_object_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "WeakSet")
             "prototype")
  end
module Generator_Make(T:Ojs.T)(TReturn:Ojs.T)(TNext:Ojs.T) =
  struct
    type ('T, 'TReturn, 'TNext) parent = ('T, 'TReturn, 'TNext) Generator.t
    let rec parent_of_js :
      'T 'TReturn 'TNext .
        (Ojs.t -> 'T) ->
          (Ojs.t -> 'TReturn) ->
            (Ojs.t -> 'TNext) -> Ojs.t -> ('T, 'TReturn, 'TNext) parent
      =
      fun (type __T) ->
        fun (type __TReturn) ->
          fun (type __TNext) ->
            fun (__T_of_js : Ojs.t -> __T) ->
              fun (__TReturn_of_js : Ojs.t -> __TReturn) ->
                fun (__TNext_of_js : Ojs.t -> __TNext) ->
                  fun (x10781 : Ojs.t) ->
                    Generator.t_of_js __T_of_js __TReturn_of_js __TNext_of_js
                      x10781
    and parent_to_js :
      'T 'TReturn 'TNext .
        ('T -> Ojs.t) ->
          ('TReturn -> Ojs.t) ->
            ('TNext -> Ojs.t) -> ('T, 'TReturn, 'TNext) parent -> Ojs.t
      =
      fun (type __T) ->
        fun (type __TReturn) ->
          fun (type __TNext) ->
            fun (__T_to_js : __T -> Ojs.t) ->
              fun (__TReturn_to_js : __TReturn -> Ojs.t) ->
                fun (__TNext_to_js : __TNext -> Ojs.t) ->
                  fun (x10777 : (__T, __TReturn, __TNext) Generator.t) ->
                    Generator.t_to_js __T_to_js __TReturn_to_js __TNext_to_js
                      x10777
    type t = (T.t, TReturn.t, TNext.t) parent
    let rec t_of_js : Ojs.t -> t =
      fun (x10789 : Ojs.t) ->
        parent_of_js T.t_of_js TReturn.t_of_js TNext.t_of_js x10789
    and t_to_js : t -> Ojs.t =
      fun (x10785 : (T.t, TReturn.t, TNext.t) parent) ->
        parent_to_js T.t_to_js TReturn.t_to_js TNext.t_to_js x10785
    let (next : t -> args:any list -> (T.t, TReturn.t) IteratorResult.t) =
      fun (x10796 : t) ->
        fun ~args:(x10793 : any list) ->
          IteratorResult.t_of_js T.t_of_js TReturn.t_of_js
            (let x10797 = t_to_js x10796 in
             Ojs.call (Ojs.get_prop_ascii x10797 "next") "apply"
               [|x10797;((let x10794 =
                            Ojs.new_obj
                              (Ojs.get_prop_ascii Ojs.global "Array") 
                              [||] in
                          List.iter
                            (fun (x10795 : any) ->
                               ignore
                                 (Ojs.call x10794 "push"
                                    [|(any_to_js x10795)|])) x10793;
                          x10794))|])
    let (return : t -> value:TReturn.t -> (T.t, TReturn.t) IteratorResult.t)
      =
      fun (x10801 : t) ->
        fun ~value:(x10800 : TReturn.t) ->
          IteratorResult.t_of_js T.t_of_js TReturn.t_of_js
            (Ojs.call (t_to_js x10801) "return" [|(TReturn.t_to_js x10800)|])
    let (throw : t -> e:any -> (T.t, TReturn.t) IteratorResult.t) =
      fun (x10805 : t) ->
        fun ~e:(x10804 : any) ->
          IteratorResult.t_of_js T.t_of_js TReturn.t_of_js
            (Ojs.call (t_to_js x10805) "throw" [|(any_to_js x10804)|])
  end
module IteratorYieldResult_Make(TYield:Ojs.T) =
  struct
    type 'TYield parent = 'TYield IteratorYieldResult.t
    let rec parent_of_js :
      'TYield . (Ojs.t -> 'TYield) -> Ojs.t -> 'TYield parent =
      fun (type __TYield) ->
        fun (__TYield_of_js : Ojs.t -> __TYield) ->
          fun (x10810 : Ojs.t) ->
            IteratorYieldResult.t_of_js __TYield_of_js x10810
    and parent_to_js :
      'TYield . ('TYield -> Ojs.t) -> 'TYield parent -> Ojs.t =
      fun (type __TYield) ->
        fun (__TYield_to_js : __TYield -> Ojs.t) ->
          fun (x10808 : __TYield IteratorYieldResult.t) ->
            IteratorYieldResult.t_to_js __TYield_to_js x10808
    type t = TYield.t parent
    let rec t_of_js : Ojs.t -> t =
      fun (x10814 : Ojs.t) -> parent_of_js TYield.t_of_js x10814
    and t_to_js : t -> Ojs.t =
      fun (x10812 : TYield.t parent) -> parent_to_js TYield.t_to_js x10812
    let (get_done : t -> [ `L_b_false ] option) =
      fun (x10816 : t) ->
        Ojs.option_of_js
          (fun (x10817 : Ojs.t) ->
             let x10818 = x10817 in
             match Ojs.bool_of_js x10818 with
             | false -> `L_b_false
             | _ -> assert false)
          (Ojs.get_prop_ascii (t_to_js x10816) "done")
    let (set_done : t -> [ `L_b_false ] -> unit) =
      fun (x10819 : t) ->
        fun (x10820 : [ `L_b_false ]) ->
          Ojs.set_prop_ascii (t_to_js x10819) "done"
            (match x10820 with | `L_b_false -> Ojs.bool_to_js false)
    let (get_value : t -> TYield.t) =
      fun (x10821 : t) ->
        TYield.t_of_js (Ojs.get_prop_ascii (t_to_js x10821) "value")
    let (set_value : t -> TYield.t -> unit) =
      fun (x10822 : t) ->
        fun (x10823 : TYield.t) ->
          Ojs.set_prop_ascii (t_to_js x10822) "value" (TYield.t_to_js x10823)
  end
module IteratorReturnResult_Make(TReturn:Ojs.T) =
  struct
    type 'TReturn parent = 'TReturn IteratorReturnResult.t
    let rec parent_of_js :
      'TReturn . (Ojs.t -> 'TReturn) -> Ojs.t -> 'TReturn parent =
      fun (type __TReturn) ->
        fun (__TReturn_of_js : Ojs.t -> __TReturn) ->
          fun (x10826 : Ojs.t) ->
            IteratorReturnResult.t_of_js __TReturn_of_js x10826
    and parent_to_js :
      'TReturn . ('TReturn -> Ojs.t) -> 'TReturn parent -> Ojs.t =
      fun (type __TReturn) ->
        fun (__TReturn_to_js : __TReturn -> Ojs.t) ->
          fun (x10824 : __TReturn IteratorReturnResult.t) ->
            IteratorReturnResult.t_to_js __TReturn_to_js x10824
    type t = TReturn.t parent
    let rec t_of_js : Ojs.t -> t =
      fun (x10830 : Ojs.t) -> parent_of_js TReturn.t_of_js x10830
    and t_to_js : t -> Ojs.t =
      fun (x10828 : TReturn.t parent) -> parent_to_js TReturn.t_to_js x10828
    let (get_done : t -> [ `L_b_true ]) =
      fun (x10832 : t) ->
        let x10833 = Ojs.get_prop_ascii (t_to_js x10832) "done" in
        match Ojs.bool_of_js x10833 with
        | true -> `L_b_true
        | _ -> assert false
    let (set_done : t -> [ `L_b_true ] -> unit) =
      fun (x10834 : t) ->
        fun (x10835 : [ `L_b_true ]) ->
          Ojs.set_prop_ascii (t_to_js x10834) "done"
            (match x10835 with | `L_b_true -> Ojs.bool_to_js true)
    let (get_value : t -> TReturn.t) =
      fun (x10836 : t) ->
        TReturn.t_of_js (Ojs.get_prop_ascii (t_to_js x10836) "value")
    let (set_value : t -> TReturn.t -> unit) =
      fun (x10837 : t) ->
        fun (x10838 : TReturn.t) ->
          Ojs.set_prop_ascii (t_to_js x10837) "value"
            (TReturn.t_to_js x10838)
  end
module Iterator_Make(T:Ojs.T)(TReturn:Ojs.T)(TNext:Ojs.T) =
  struct
    type ('T, 'TReturn, 'TNext) parent = ('T, 'TReturn, 'TNext) Iterator.t
    let rec parent_of_js :
      'T 'TReturn 'TNext .
        (Ojs.t -> 'T) ->
          (Ojs.t -> 'TReturn) ->
            (Ojs.t -> 'TNext) -> Ojs.t -> ('T, 'TReturn, 'TNext) parent
      =
      fun (type __T) ->
        fun (type __TReturn) ->
          fun (type __TNext) ->
            fun (__T_of_js : Ojs.t -> __T) ->
              fun (__TReturn_of_js : Ojs.t -> __TReturn) ->
                fun (__TNext_of_js : Ojs.t -> __TNext) ->
                  fun (x10843 : Ojs.t) ->
                    Iterator.t_of_js __T_of_js __TReturn_of_js __TNext_of_js
                      x10843
    and parent_to_js :
      'T 'TReturn 'TNext .
        ('T -> Ojs.t) ->
          ('TReturn -> Ojs.t) ->
            ('TNext -> Ojs.t) -> ('T, 'TReturn, 'TNext) parent -> Ojs.t
      =
      fun (type __T) ->
        fun (type __TReturn) ->
          fun (type __TNext) ->
            fun (__T_to_js : __T -> Ojs.t) ->
              fun (__TReturn_to_js : __TReturn -> Ojs.t) ->
                fun (__TNext_to_js : __TNext -> Ojs.t) ->
                  fun (x10839 : (__T, __TReturn, __TNext) Iterator.t) ->
                    Iterator.t_to_js __T_to_js __TReturn_to_js __TNext_to_js
                      x10839
    type t = (T.t, TReturn.t, TNext.t) parent
    let rec t_of_js : Ojs.t -> t =
      fun (x10851 : Ojs.t) ->
        parent_of_js T.t_of_js TReturn.t_of_js TNext.t_of_js x10851
    and t_to_js : t -> Ojs.t =
      fun (x10847 : (T.t, TReturn.t, TNext.t) parent) ->
        parent_to_js T.t_to_js TReturn.t_to_js TNext.t_to_js x10847
    let (next : t -> args:any list -> (T.t, TReturn.t) IteratorResult.t) =
      fun (x10858 : t) ->
        fun ~args:(x10855 : any list) ->
          IteratorResult.t_of_js T.t_of_js TReturn.t_of_js
            (let x10859 = t_to_js x10858 in
             Ojs.call (Ojs.get_prop_ascii x10859 "next") "apply"
               [|x10859;((let x10856 =
                            Ojs.new_obj
                              (Ojs.get_prop_ascii Ojs.global "Array") 
                              [||] in
                          List.iter
                            (fun (x10857 : any) ->
                               ignore
                                 (Ojs.call x10856 "push"
                                    [|(any_to_js x10857)|])) x10855;
                          x10856))|])
    let (return :
      t -> ?value:TReturn.t -> unit -> (T.t, TReturn.t) IteratorResult.t) =
      fun (x10865 : t) ->
        fun ?value:(x10862 : TReturn.t option) ->
          fun () ->
            IteratorResult.t_of_js T.t_of_js TReturn.t_of_js
              (let x10866 = t_to_js x10865 in
               Ojs.call (Ojs.get_prop_ascii x10866 "return") "apply"
                 [|x10866;((let x10863 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x10862 with
                             | Some x10864 ->
                                 ignore
                                   (Ojs.call x10863 "push"
                                      [|(TReturn.t_to_js x10864)|])
                             | None -> ());
                            x10863))|])
    let (throw : t -> ?e:any -> unit -> (T.t, TReturn.t) IteratorResult.t) =
      fun (x10872 : t) ->
        fun ?e:(x10869 : any option) ->
          fun () ->
            IteratorResult.t_of_js T.t_of_js TReturn.t_of_js
              (let x10873 = t_to_js x10872 in
               Ojs.call (Ojs.get_prop_ascii x10873 "throw") "apply"
                 [|x10873;((let x10870 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x10869 with
                             | Some x10871 ->
                                 ignore
                                   (Ojs.call x10870 "push"
                                      [|(any_to_js x10871)|])
                             | None -> ());
                            x10870))|])
  end
module Promise_Make(T:Ojs.T) =
  struct
    type 'T parent = 'T Promise.t
    let rec parent_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T parent =
      fun (type __T) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x10878 : Ojs.t) -> Promise.t_of_js __T_of_js x10878
    and parent_to_js : 'T . ('T -> Ojs.t) -> 'T parent -> Ojs.t =
      fun (type __T) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x10876 : __T Promise.t) -> Promise.t_to_js __T_to_js x10876
    type t = T.t parent
    let rec t_of_js : Ojs.t -> t =
      fun (x10882 : Ojs.t) -> parent_of_js T.t_of_js x10882
    and t_to_js : t -> Ojs.t =
      fun (x10880 : T.t parent) -> parent_to_js T.t_to_js x10880
    let (finally :
      t ->
        ?onfinally:[ `Null  | `Undefined of undefined 
                   | `U1 of unit -> unit ]
          -> unit -> t)
      =
      fun (x10889 : t) ->
        fun
          ?onfinally:(x10884 :
                       [ `Null  | `Undefined of undefined 
                       | `U1 of unit -> unit ] option)
          ->
          fun () ->
            t_of_js
              (let x10890 = t_to_js x10889 in
               Ojs.call (Ojs.get_prop_ascii x10890 "finally") "apply"
                 [|x10890;((let x10885 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x10884 with
                             | Some x10886 ->
                                 ignore
                                   (Ojs.call x10885 "push"
                                      [|((match x10886 with
                                          | `Null -> Ojs.null
                                          | `Undefined x10887 ->
                                              undefined_to_js x10887
                                          | `U1 x10888 ->
                                              Ojs.fun_to_js 1
                                                (fun _ -> x10888 ())))|])
                             | None -> ());
                            x10885))|])
    let (then_ :
      t ->
        ?onfulfilled:[ `Null  | `Undefined of undefined 
                     | `U1 of
                         T.t ->
                           [ `U1 of 'TResult1 
                           | `U2 of 'TResult1 PromiseLike.t ]
                         ]
          ->
          ?onrejected:[ `Null  | `Undefined of undefined 
                      | `U1 of
                          any ->
                            [ `U1 of 'TResult2 
                            | `U2 of 'TResult2 PromiseLike.t ]
                          ]
            -> unit -> ('TResult1, 'TResult2) union2 parent)
      =
      fun (x10908 : t) ->
        fun
          ?onfulfilled:(x10891 :
                         [ `Null  | `Undefined of undefined 
                         | `U1 of
                             T.t ->
                               [ `U1 of 'TResult1 
                               | `U2 of 'TResult1 PromiseLike.t ]
                             ]
                           option)
          ->
          fun
            ?onrejected:(x10892 :
                          [ `Null  | `Undefined of undefined 
                          | `U1 of
                              any ->
                                [ `U1 of 'TResult2 
                                | `U2 of 'TResult2 PromiseLike.t ]
                              ]
                            option)
            ->
            fun () ->
              parent_of_js
                (fun (x10910 : Ojs.t) ->
                   union2_of_js Obj.magic Obj.magic x10910)
                (let x10909 = t_to_js x10908 in
                 Ojs.call (Ojs.get_prop_ascii x10909 "then") "apply"
                   [|x10909;((let x10893 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              (match x10891 with
                               | Some x10901 ->
                                   ignore
                                     (Ojs.call x10893 "push"
                                        [|((match x10901 with
                                            | `Null -> Ojs.null
                                            | `Undefined x10902 ->
                                                undefined_to_js x10902
                                            | `U1 x10903 ->
                                                Ojs.fun_to_js 1
                                                  (fun (x10904 : Ojs.t) ->
                                                     match x10903
                                                             (T.t_of_js
                                                                x10904)
                                                     with
                                                     | `U1 x10905 ->
                                                         Obj.magic x10905
                                                     | `U2 x10906 ->
                                                         PromiseLike.t_to_js
                                                           Obj.magic x10906)))|])
                               | None -> ());
                              (match x10892 with
                               | Some x10894 ->
                                   ignore
                                     (Ojs.call x10893 "push"
                                        [|((match x10894 with
                                            | `Null -> Ojs.null
                                            | `Undefined x10895 ->
                                                undefined_to_js x10895
                                            | `U1 x10896 ->
                                                Ojs.fun_to_js 1
                                                  (fun (x10897 : Ojs.t) ->
                                                     match x10896
                                                             (any_of_js
                                                                x10897)
                                                     with
                                                     | `U1 x10898 ->
                                                         Obj.magic x10898
                                                     | `U2 x10899 ->
                                                         PromiseLike.t_to_js
                                                           Obj.magic x10899)))|])
                               | None -> ());
                              x10893))|])
    let (catch :
      t ->
        ?onrejected:[ `Null  | `Undefined of undefined 
                    | `U1 of
                        any ->
                          [ `U1 of 'TResult 
                          | `U2 of 'TResult PromiseLike.t ]
                        ]
          -> unit -> ('TResult, (T.t, 'TResult) union2) union2 parent)
      =
      fun (x10922 : t) ->
        fun
          ?onrejected:(x10913 :
                        [ `Null  | `Undefined of undefined 
                        | `U1 of
                            any ->
                              [ `U1 of 'TResult 
                              | `U2 of 'TResult PromiseLike.t ]
                            ]
                          option)
          ->
          fun () ->
            parent_of_js
              (fun (x10924 : Ojs.t) ->
                 union2_of_js Obj.magic
                   (fun (x10926 : Ojs.t) ->
                      union2_of_js T.t_of_js Obj.magic x10926) x10924)
              (let x10923 = t_to_js x10922 in
               Ojs.call (Ojs.get_prop_ascii x10923 "catch") "apply"
                 [|x10923;((let x10914 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x10913 with
                             | Some x10915 ->
                                 ignore
                                   (Ojs.call x10914 "push"
                                      [|((match x10915 with
                                          | `Null -> Ojs.null
                                          | `Undefined x10916 ->
                                              undefined_to_js x10916
                                          | `U1 x10917 ->
                                              Ojs.fun_to_js 1
                                                (fun (x10918 : Ojs.t) ->
                                                   match x10917
                                                           (any_of_js x10918)
                                                   with
                                                   | `U1 x10919 ->
                                                       Obj.magic x10919
                                                   | `U2 x10920 ->
                                                       PromiseLike.t_to_js
                                                         Obj.magic x10920)))|])
                             | None -> ());
                            x10914))|])
    let (any :
      [ `U1 of [ `U1 of T.t  | `U2 of T.t PromiseLike.t ] list 
      | `U2 of [ `U1 of T.t  | `U2 of T.t PromiseLike.t ] Iterable.t ] -> 
        t)
      =
      fun
        (x10929 :
          [ `U1 of [ `U1 of T.t  | `U2 of T.t PromiseLike.t ] list 
          | `U2 of [ `U1 of T.t  | `U2 of T.t PromiseLike.t ] Iterable.t ])
        ->
        t_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Promise") "any"
             [|((match x10929 with
                 | `U1 x10930 ->
                     Ojs.list_to_js
                       (fun
                          (x10931 :
                            [ `U1 of T.t  | `U2 of T.t PromiseLike.t ])
                          ->
                          match x10931 with
                          | `U1 x10932 -> T.t_to_js x10932
                          | `U2 x10933 ->
                              PromiseLike.t_to_js T.t_to_js x10933) x10930
                 | `U2 x10935 ->
                     Iterable.t_to_js
                       (fun
                          (x10936 :
                            [ `U1 of T.t  | `U2 of T.t PromiseLike.t ])
                          ->
                          match x10936 with
                          | `U1 x10937 -> T.t_to_js x10937
                          | `U2 x10938 ->
                              PromiseLike.t_to_js T.t_to_js x10938) x10935))|])
    let (allSettled : T.t -> any parent) =
      fun (x10940 : T.t) ->
        parent_of_js any_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Promise") "allSettled"
             [|(T.t_to_js x10940)|])
    let (allSettled :
      [ `U1 of T.t  | `U2 of T.t PromiseLike.t ] Iterable.t ->
        T.t Awaited.t PromiseSettledResult.t list Awaited.t
          PromiseSettledResult.t list parent)
      =
      fun (x10942 : [ `U1 of T.t  | `U2 of T.t PromiseLike.t ] Iterable.t) ->
        parent_of_js
          (fun (x10947 : Ojs.t) ->
             Ojs.list_of_js
               (fun (x10948 : Ojs.t) ->
                  PromiseSettledResult.t_of_js
                    (fun (x10949 : Ojs.t) ->
                       Awaited.t_of_js
                         (fun (x10950 : Ojs.t) ->
                            Ojs.list_of_js
                              (fun (x10951 : Ojs.t) ->
                                 PromiseSettledResult.t_of_js
                                   (fun (x10952 : Ojs.t) ->
                                      Awaited.t_of_js T.t_of_js x10952)
                                   x10951) x10950) x10949) x10948) x10947)
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Promise") "allSettled"
             [|(Iterable.t_to_js
                  (fun (x10943 : [ `U1 of T.t  | `U2 of T.t PromiseLike.t ])
                     ->
                     match x10943 with
                     | `U1 x10944 -> T.t_to_js x10944
                     | `U2 x10945 -> PromiseLike.t_to_js T.t_to_js x10945)
                  x10942)|])
    let (any : T.t -> any Awaited.t parent) =
      fun (x10954 : T.t) ->
        parent_of_js
          (fun (x10955 : Ojs.t) -> Awaited.t_of_js any_of_js x10955)
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Promise") "any"
             [|(T.t_to_js x10954)|])
    let (any :
      [ `U1 of T.t  | `U2 of T.t PromiseLike.t ] Iterable.t ->
        T.t Awaited.t Awaited.t parent)
      =
      fun (x10957 : [ `U1 of T.t  | `U2 of T.t PromiseLike.t ] Iterable.t) ->
        parent_of_js
          (fun (x10962 : Ojs.t) ->
             Awaited.t_of_js
               (fun (x10963 : Ojs.t) -> Awaited.t_of_js T.t_of_js x10963)
               x10962)
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Promise") "any"
             [|(Iterable.t_to_js
                  (fun (x10958 : [ `U1 of T.t  | `U2 of T.t PromiseLike.t ])
                     ->
                     match x10958 with
                     | `U1 x10959 -> T.t_to_js x10959
                     | `U2 x10960 -> PromiseLike.t_to_js T.t_to_js x10960)
                  x10957)|])
    let (prototype : unit -> any parent) =
      fun () ->
        parent_of_js any_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Promise")
             "prototype")
    let (create :
      (resolve:([ `U1 of T.t  | `U2 of T.t PromiseLike.t ] -> unit) ->
         reject:(?reason:any -> unit -> unit) -> unit)
        -> t)
      =
      fun
        (x10966 :
          resolve:([ `U1 of T.t  | `U2 of T.t PromiseLike.t ] -> unit) ->
            reject:(?reason:any -> unit -> unit) -> unit)
        ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Promise")
             [|(Ojs.fun_to_js 2
                  (fun (x10967 : Ojs.t) ->
                     fun (x10972 : Ojs.t) ->
                       x10966
                         ~resolve:(fun
                                     (x10968 :
                                       [ `U1 of T.t 
                                       | `U2 of T.t PromiseLike.t ])
                                     ->
                                     ignore
                                       (Ojs.apply x10967
                                          [|((match x10968 with
                                              | `U1 x10969 ->
                                                  T.t_to_js x10969
                                              | `U2 x10970 ->
                                                  PromiseLike.t_to_js
                                                    T.t_to_js x10970))|]))
                         ~reject:(fun ?reason:(x10973 : any option) ->
                                    fun () ->
                                      ignore
                                        (Ojs.call x10972 "apply"
                                           [|Ojs.null;((let x10974 =
                                                          Ojs.new_obj
                                                            (Ojs.get_prop_ascii
                                                               Ojs.global
                                                               "Array") 
                                                            [||] in
                                                        (match x10973 with
                                                         | Some x10975 ->
                                                             ignore
                                                               (Ojs.call
                                                                  x10974
                                                                  "push"
                                                                  [|(
                                                                    any_to_js
                                                                    x10975)|])
                                                         | None -> ());
                                                        x10974))|]))))|])
    let (all : T.t -> any parent) =
      fun (x10976 : T.t) ->
        parent_of_js any_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Promise") "all"
             [|(T.t_to_js x10976)|])
    let (race : T.t -> any Awaited.t parent) =
      fun (x10978 : T.t) ->
        parent_of_js
          (fun (x10979 : Ojs.t) -> Awaited.t_of_js any_of_js x10979)
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Promise") "race"
             [|(T.t_to_js x10978)|])
    let (reject : ?reason:any -> unit -> t) =
      fun ?reason:(x10981 : any option) ->
        fun () ->
          t_of_js
            (let x10984 = Ojs.get_prop_ascii Ojs.global "Promise" in
             Ojs.call (Ojs.get_prop_ascii x10984 "reject") "apply"
               [|x10984;((let x10982 =
                            Ojs.new_obj
                              (Ojs.get_prop_ascii Ojs.global "Array") 
                              [||] in
                          (match x10981 with
                           | Some x10983 ->
                               ignore
                                 (Ojs.call x10982 "push"
                                    [|(any_to_js x10983)|])
                           | None -> ());
                          x10982))|])
    let (resolve : unit -> unit parent) =
      fun () ->
        parent_of_js Ojs.unit_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Promise") "resolve" [||])
    let (resolve : [ `U1 of T.t  | `U2 of T.t PromiseLike.t ] -> t) =
      fun (x10986 : [ `U1 of T.t  | `U2 of T.t PromiseLike.t ]) ->
        t_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Promise") "resolve"
             [|((match x10986 with
                 | `U1 x10987 -> T.t_to_js x10987
                 | `U2 x10988 -> PromiseLike.t_to_js T.t_to_js x10988))|])
    let (all :
      [ `U1 of T.t  | `U2 of T.t PromiseLike.t ] Iterable.t ->
        T.t Awaited.t list Awaited.t list parent)
      =
      fun (x10990 : [ `U1 of T.t  | `U2 of T.t PromiseLike.t ] Iterable.t) ->
        parent_of_js
          (fun (x10995 : Ojs.t) ->
             Ojs.list_of_js
               (fun (x10996 : Ojs.t) ->
                  Awaited.t_of_js
                    (fun (x10997 : Ojs.t) ->
                       Ojs.list_of_js
                         (fun (x10998 : Ojs.t) ->
                            Awaited.t_of_js T.t_of_js x10998) x10997) x10996)
               x10995)
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Promise") "all"
             [|(Iterable.t_to_js
                  (fun (x10991 : [ `U1 of T.t  | `U2 of T.t PromiseLike.t ])
                     ->
                     match x10991 with
                     | `U1 x10992 -> T.t_to_js x10992
                     | `U2 x10993 -> PromiseLike.t_to_js T.t_to_js x10993)
                  x10990)|])
    let (race :
      [ `U1 of T.t  | `U2 of T.t PromiseLike.t ] Iterable.t ->
        T.t Awaited.t Awaited.t parent)
      =
      fun (x11000 : [ `U1 of T.t  | `U2 of T.t PromiseLike.t ] Iterable.t) ->
        parent_of_js
          (fun (x11005 : Ojs.t) ->
             Awaited.t_of_js
               (fun (x11006 : Ojs.t) -> Awaited.t_of_js T.t_of_js x11006)
               x11005)
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Promise") "race"
             [|(Iterable.t_to_js
                  (fun (x11001 : [ `U1 of T.t  | `U2 of T.t PromiseLike.t ])
                     ->
                     match x11001 with
                     | `U1 x11002 -> T.t_to_js x11002
                     | `U2 x11003 -> PromiseLike.t_to_js T.t_to_js x11003)
                  x11000)|])
  end
module ProxyHandler_Make(T:Ojs.T) =
  struct
    type 'T parent = 'T ProxyHandler.t
    let rec parent_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T parent =
      fun (type __T) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x11010 : Ojs.t) -> ProxyHandler.t_of_js __T_of_js x11010
    and parent_to_js : 'T . ('T -> Ojs.t) -> 'T parent -> Ojs.t =
      fun (type __T) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x11008 : __T ProxyHandler.t) ->
            ProxyHandler.t_to_js __T_to_js x11008
    type t = T.t parent
    let rec t_of_js : Ojs.t -> t =
      fun (x11014 : Ojs.t) -> parent_of_js T.t_of_js x11014
    and t_to_js : t -> Ojs.t =
      fun (x11012 : T.t parent) -> parent_to_js T.t_to_js x11012
    let (apply_ : t -> target:T.t -> thisArg:any -> argArray:any list -> any)
      =
      fun (x11020 : t) ->
        fun ~target:(x11016 : T.t) ->
          fun ~thisArg:(x11017 : any) ->
            fun ~argArray:(x11018 : any list) ->
              any_of_js
                (Ojs.call (t_to_js x11020) "apply"
                   [|(T.t_to_js x11016);(any_to_js x11017);(Ojs.list_to_js
                                                              any_to_js
                                                              x11018)|])
    let (construct :
      t ->
        target:T.t ->
          argArray:any list -> newTarget:Function.t -> untyped_object)
      =
      fun (x11025 : t) ->
        fun ~target:(x11021 : T.t) ->
          fun ~argArray:(x11022 : any list) ->
            fun ~newTarget:(x11024 : Function.t) ->
              untyped_object_of_js
                (Ojs.call (t_to_js x11025) "construct"
                   [|(T.t_to_js x11021);(Ojs.list_to_js any_to_js x11022);(
                     Function.t_to_js x11024)|])
    let (defineProperty :
      t ->
        target:T.t ->
          p:[ `U1 of string  | `U2 of symbol ] ->
            attributes:PropertyDescriptor.t -> bool)
      =
      fun (x11031 : t) ->
        fun ~target:(x11026 : T.t) ->
          fun ~p:(x11027 : [ `U1 of string  | `U2 of symbol ]) ->
            fun ~attributes:(x11030 : PropertyDescriptor.t) ->
              Ojs.bool_of_js
                (Ojs.call (t_to_js x11031) "defineProperty"
                   [|(T.t_to_js x11026);((match x11027 with
                                          | `U1 x11028 ->
                                              Ojs.string_to_js x11028
                                          | `U2 x11029 -> symbol_to_js x11029));(
                     PropertyDescriptor.t_to_js x11030)|])
    let (deleteProperty :
      t -> target:T.t -> p:[ `U1 of string  | `U2 of symbol ] -> bool) =
      fun (x11036 : t) ->
        fun ~target:(x11032 : T.t) ->
          fun ~p:(x11033 : [ `U1 of string  | `U2 of symbol ]) ->
            Ojs.bool_of_js
              (Ojs.call (t_to_js x11036) "deleteProperty"
                 [|(T.t_to_js x11032);((match x11033 with
                                        | `U1 x11034 ->
                                            Ojs.string_to_js x11034
                                        | `U2 x11035 -> symbol_to_js x11035))|])
    let (get_ :
      t ->
        target:T.t ->
          p:[ `U1 of string  | `U2 of symbol ] -> receiver:any -> any)
      =
      fun (x11042 : t) ->
        fun ~target:(x11037 : T.t) ->
          fun ~p:(x11038 : [ `U1 of string  | `U2 of symbol ]) ->
            fun ~receiver:(x11041 : any) ->
              any_of_js
                (Ojs.call (t_to_js x11042) "get"
                   [|(T.t_to_js x11037);((match x11038 with
                                          | `U1 x11039 ->
                                              Ojs.string_to_js x11039
                                          | `U2 x11040 -> symbol_to_js x11040));(
                     any_to_js x11041)|])
    let (getOwnPropertyDescriptor :
      t ->
        target:T.t ->
          p:[ `U1 of string  | `U2 of symbol ] -> PropertyDescriptor.t option)
      =
      fun (x11047 : t) ->
        fun ~target:(x11043 : T.t) ->
          fun ~p:(x11044 : [ `U1 of string  | `U2 of symbol ]) ->
            Ojs.option_of_js PropertyDescriptor.t_of_js
              (Ojs.call (t_to_js x11047) "getOwnPropertyDescriptor"
                 [|(T.t_to_js x11043);((match x11044 with
                                        | `U1 x11045 ->
                                            Ojs.string_to_js x11045
                                        | `U2 x11046 -> symbol_to_js x11046))|])
    let (getPrototypeOf : t -> target:T.t -> untyped_object option) =
      fun (x11050 : t) ->
        fun ~target:(x11049 : T.t) ->
          Ojs.option_of_js untyped_object_of_js
            (Ojs.call (t_to_js x11050) "getPrototypeOf"
               [|(T.t_to_js x11049)|])
    let (has :
      t -> target:T.t -> p:[ `U1 of string  | `U2 of symbol ] -> bool) =
      fun (x11056 : t) ->
        fun ~target:(x11052 : T.t) ->
          fun ~p:(x11053 : [ `U1 of string  | `U2 of symbol ]) ->
            Ojs.bool_of_js
              (Ojs.call (t_to_js x11056) "has"
                 [|(T.t_to_js x11052);((match x11053 with
                                        | `U1 x11054 ->
                                            Ojs.string_to_js x11054
                                        | `U2 x11055 -> symbol_to_js x11055))|])
    let (isExtensible : t -> target:T.t -> bool) =
      fun (x11058 : t) ->
        fun ~target:(x11057 : T.t) ->
          Ojs.bool_of_js
            (Ojs.call (t_to_js x11058) "isExtensible" [|(T.t_to_js x11057)|])
    let (ownKeys :
      t ->
        target:T.t ->
          [ `String of string  | `Symbol of symbol ] Primitive.t ArrayLike.t)
      =
      fun (x11060 : t) ->
        fun ~target:(x11059 : T.t) ->
          ArrayLike.t_of_js
            (fun (x11061 : Ojs.t) ->
               Primitive.t_of_js
                 (fun (x11062 : Ojs.t) ->
                    let x11063 = x11062 in
                    match Ojs.string_of_js
                            (Ojs.get_prop_ascii x11063 "dummy")
                    with
                    | "String" -> `String (Ojs.string_of_js x11063)
                    | "Symbol" -> `Symbol (symbol_of_js x11063)
                    | _ -> assert false) x11061)
            (Ojs.call (t_to_js x11060) "ownKeys" [|(T.t_to_js x11059)|])
    let (preventExtensions : t -> target:T.t -> bool) =
      fun (x11065 : t) ->
        fun ~target:(x11064 : T.t) ->
          Ojs.bool_of_js
            (Ojs.call (t_to_js x11065) "preventExtensions"
               [|(T.t_to_js x11064)|])
    let (set_ :
      t ->
        target:T.t ->
          p:[ `U1 of string  | `U2 of symbol ] ->
            value:any -> receiver:any -> bool)
      =
      fun (x11072 : t) ->
        fun ~target:(x11066 : T.t) ->
          fun ~p:(x11067 : [ `U1 of string  | `U2 of symbol ]) ->
            fun ~value:(x11070 : any) ->
              fun ~receiver:(x11071 : any) ->
                Ojs.bool_of_js
                  (Ojs.call (t_to_js x11072) "set"
                     [|(T.t_to_js x11066);((match x11067 with
                                            | `U1 x11068 ->
                                                Ojs.string_to_js x11068
                                            | `U2 x11069 ->
                                                symbol_to_js x11069));(
                       any_to_js x11070);(any_to_js x11071)|])
    let (setPrototypeOf : t -> target:T.t -> v:untyped_object option -> bool)
      =
      fun (x11076 : t) ->
        fun ~target:(x11073 : T.t) ->
          fun ~v:(x11074 : untyped_object option) ->
            Ojs.bool_of_js
              (Ojs.call (t_to_js x11076) "setPrototypeOf"
                 [|(T.t_to_js x11073);(Ojs.option_to_js untyped_object_to_js
                                         x11074)|])
  end
module AsyncGenerator_Make(T:Ojs.T)(TReturn:Ojs.T)(TNext:Ojs.T) =
  struct
    type ('T, 'TReturn, 'TNext) parent =
      ('T, 'TReturn, 'TNext) AsyncGenerator.t
    let rec parent_of_js :
      'T 'TReturn 'TNext .
        (Ojs.t -> 'T) ->
          (Ojs.t -> 'TReturn) ->
            (Ojs.t -> 'TNext) -> Ojs.t -> ('T, 'TReturn, 'TNext) parent
      =
      fun (type __T) ->
        fun (type __TReturn) ->
          fun (type __TNext) ->
            fun (__T_of_js : Ojs.t -> __T) ->
              fun (__TReturn_of_js : Ojs.t -> __TReturn) ->
                fun (__TNext_of_js : Ojs.t -> __TNext) ->
                  fun (x11081 : Ojs.t) ->
                    AsyncGenerator.t_of_js __T_of_js __TReturn_of_js
                      __TNext_of_js x11081
    and parent_to_js :
      'T 'TReturn 'TNext .
        ('T -> Ojs.t) ->
          ('TReturn -> Ojs.t) ->
            ('TNext -> Ojs.t) -> ('T, 'TReturn, 'TNext) parent -> Ojs.t
      =
      fun (type __T) ->
        fun (type __TReturn) ->
          fun (type __TNext) ->
            fun (__T_to_js : __T -> Ojs.t) ->
              fun (__TReturn_to_js : __TReturn -> Ojs.t) ->
                fun (__TNext_to_js : __TNext -> Ojs.t) ->
                  fun (x11077 : (__T, __TReturn, __TNext) AsyncGenerator.t)
                    ->
                    AsyncGenerator.t_to_js __T_to_js __TReturn_to_js
                      __TNext_to_js x11077
    type t = (T.t, TReturn.t, TNext.t) parent
    let rec t_of_js : Ojs.t -> t =
      fun (x11089 : Ojs.t) ->
        parent_of_js T.t_of_js TReturn.t_of_js TNext.t_of_js x11089
    and t_to_js : t -> Ojs.t =
      fun (x11085 : (T.t, TReturn.t, TNext.t) parent) ->
        parent_to_js T.t_to_js TReturn.t_to_js TNext.t_to_js x11085
    let (next :
      t -> args:any list -> (T.t, TReturn.t) IteratorResult.t Promise.t) =
      fun (x11096 : t) ->
        fun ~args:(x11093 : any list) ->
          Promise.t_of_js
            (fun (x11098 : Ojs.t) ->
               IteratorResult.t_of_js T.t_of_js TReturn.t_of_js x11098)
            (let x11097 = t_to_js x11096 in
             Ojs.call (Ojs.get_prop_ascii x11097 "next") "apply"
               [|x11097;((let x11094 =
                            Ojs.new_obj
                              (Ojs.get_prop_ascii Ojs.global "Array") 
                              [||] in
                          List.iter
                            (fun (x11095 : any) ->
                               ignore
                                 (Ojs.call x11094 "push"
                                    [|(any_to_js x11095)|])) x11093;
                          x11094))|])
    let (return :
      t ->
        value:[ `U1 of TReturn.t  | `U2 of TReturn.t PromiseLike.t ] ->
          (T.t, TReturn.t) IteratorResult.t Promise.t)
      =
      fun (x11105 : t) ->
        fun
          ~value:(x11101 :
                   [ `U1 of TReturn.t  | `U2 of TReturn.t PromiseLike.t ])
          ->
          Promise.t_of_js
            (fun (x11106 : Ojs.t) ->
               IteratorResult.t_of_js T.t_of_js TReturn.t_of_js x11106)
            (Ojs.call (t_to_js x11105) "return"
               [|((match x11101 with
                   | `U1 x11102 -> TReturn.t_to_js x11102
                   | `U2 x11103 -> PromiseLike.t_to_js TReturn.t_to_js x11103))|])
    let (throw : t -> e:any -> (T.t, TReturn.t) IteratorResult.t Promise.t) =
      fun (x11110 : t) ->
        fun ~e:(x11109 : any) ->
          Promise.t_of_js
            (fun (x11111 : Ojs.t) ->
               IteratorResult.t_of_js T.t_of_js TReturn.t_of_js x11111)
            (Ojs.call (t_to_js x11110) "throw" [|(any_to_js x11109)|])
  end
module AsyncIterator_Make(T:Ojs.T)(TReturn:Ojs.T)(TNext:Ojs.T) =
  struct
    type ('T, 'TReturn, 'TNext) parent =
      ('T, 'TReturn, 'TNext) AsyncIterator.t
    let rec parent_of_js :
      'T 'TReturn 'TNext .
        (Ojs.t -> 'T) ->
          (Ojs.t -> 'TReturn) ->
            (Ojs.t -> 'TNext) -> Ojs.t -> ('T, 'TReturn, 'TNext) parent
      =
      fun (type __T) ->
        fun (type __TReturn) ->
          fun (type __TNext) ->
            fun (__T_of_js : Ojs.t -> __T) ->
              fun (__TReturn_of_js : Ojs.t -> __TReturn) ->
                fun (__TNext_of_js : Ojs.t -> __TNext) ->
                  fun (x11118 : Ojs.t) ->
                    AsyncIterator.t_of_js __T_of_js __TReturn_of_js
                      __TNext_of_js x11118
    and parent_to_js :
      'T 'TReturn 'TNext .
        ('T -> Ojs.t) ->
          ('TReturn -> Ojs.t) ->
            ('TNext -> Ojs.t) -> ('T, 'TReturn, 'TNext) parent -> Ojs.t
      =
      fun (type __T) ->
        fun (type __TReturn) ->
          fun (type __TNext) ->
            fun (__T_to_js : __T -> Ojs.t) ->
              fun (__TReturn_to_js : __TReturn -> Ojs.t) ->
                fun (__TNext_to_js : __TNext -> Ojs.t) ->
                  fun (x11114 : (__T, __TReturn, __TNext) AsyncIterator.t) ->
                    AsyncIterator.t_to_js __T_to_js __TReturn_to_js
                      __TNext_to_js x11114
    type t = (T.t, TReturn.t, TNext.t) parent
    let rec t_of_js : Ojs.t -> t =
      fun (x11126 : Ojs.t) ->
        parent_of_js T.t_of_js TReturn.t_of_js TNext.t_of_js x11126
    and t_to_js : t -> Ojs.t =
      fun (x11122 : (T.t, TReturn.t, TNext.t) parent) ->
        parent_to_js T.t_to_js TReturn.t_to_js TNext.t_to_js x11122
    let (next :
      t -> args:any list -> (T.t, TReturn.t) IteratorResult.t Promise.t) =
      fun (x11133 : t) ->
        fun ~args:(x11130 : any list) ->
          Promise.t_of_js
            (fun (x11135 : Ojs.t) ->
               IteratorResult.t_of_js T.t_of_js TReturn.t_of_js x11135)
            (let x11134 = t_to_js x11133 in
             Ojs.call (Ojs.get_prop_ascii x11134 "next") "apply"
               [|x11134;((let x11131 =
                            Ojs.new_obj
                              (Ojs.get_prop_ascii Ojs.global "Array") 
                              [||] in
                          List.iter
                            (fun (x11132 : any) ->
                               ignore
                                 (Ojs.call x11131 "push"
                                    [|(any_to_js x11132)|])) x11130;
                          x11131))|])
    let (return :
      t ->
        ?value:[ `U1 of TReturn.t  | `U2 of TReturn.t PromiseLike.t ] ->
          unit -> (T.t, TReturn.t) IteratorResult.t Promise.t)
      =
      fun (x11144 : t) ->
        fun
          ?value:(x11138 :
                   [ `U1 of TReturn.t  | `U2 of TReturn.t PromiseLike.t ]
                     option)
          ->
          fun () ->
            Promise.t_of_js
              (fun (x11146 : Ojs.t) ->
                 IteratorResult.t_of_js T.t_of_js TReturn.t_of_js x11146)
              (let x11145 = t_to_js x11144 in
               Ojs.call (Ojs.get_prop_ascii x11145 "return") "apply"
                 [|x11145;((let x11139 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x11138 with
                             | Some x11140 ->
                                 ignore
                                   (Ojs.call x11139 "push"
                                      [|((match x11140 with
                                          | `U1 x11141 ->
                                              TReturn.t_to_js x11141
                                          | `U2 x11142 ->
                                              PromiseLike.t_to_js
                                                TReturn.t_to_js x11142))|])
                             | None -> ());
                            x11139))|])
    let (throw :
      t -> ?e:any -> unit -> (T.t, TReturn.t) IteratorResult.t Promise.t) =
      fun (x11152 : t) ->
        fun ?e:(x11149 : any option) ->
          fun () ->
            Promise.t_of_js
              (fun (x11154 : Ojs.t) ->
                 IteratorResult.t_of_js T.t_of_js TReturn.t_of_js x11154)
              (let x11153 = t_to_js x11152 in
               Ojs.call (Ojs.get_prop_ascii x11153 "throw") "apply"
                 [|x11153;((let x11150 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x11149 with
                             | Some x11151 ->
                                 ignore
                                   (Ojs.call x11150 "push"
                                      [|(any_to_js x11151)|])
                             | None -> ());
                            x11150))|])
  end
module WeakRef_Make(T:Ojs.T) =
  struct
    type 'T parent = 'T WeakRef.t
    let rec parent_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T parent =
      fun (type __T) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x11159 : Ojs.t) -> WeakRef.t_of_js __T_of_js x11159
    and parent_to_js : 'T . ('T -> Ojs.t) -> 'T parent -> Ojs.t =
      fun (type __T) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x11157 : __T WeakRef.t) -> WeakRef.t_to_js __T_to_js x11157
    type t = T.t parent
    let rec t_of_js : Ojs.t -> t =
      fun (x11163 : Ojs.t) -> parent_of_js T.t_of_js x11163
    and t_to_js : t -> Ojs.t =
      fun (x11161 : T.t parent) -> parent_to_js T.t_to_js x11161
    let (deref : t -> T.t option) =
      fun (x11165 : t) ->
        Ojs.option_of_js T.t_of_js (Ojs.call (t_to_js x11165) "deref" [||])
    let (deref : t -> T.t option) =
      fun (x11167 : t) ->
        Ojs.option_of_js T.t_of_js (Ojs.call (t_to_js x11167) "deref" [||])
    let (prototype : unit -> any parent) =
      fun () ->
        parent_of_js any_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "WeakRef")
             "prototype")
    let (create : ?target:T.t -> unit -> t) =
      fun ?target:(x11170 : T.t option) ->
        fun () ->
          t_of_js
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "WeakRef")
               (let x11171 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x11170 with
                 | Some x11172 ->
                     ignore (Ojs.call x11171 "push" [|(T.t_to_js x11172)|])
                 | None -> ());
                x11171))
    let (prototype : unit -> any parent) =
      fun () ->
        parent_of_js any_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "WeakRef")
             "prototype")
    let (create : T.t -> t) =
      fun (x11174 : T.t) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "WeakRef")
             [|(T.t_to_js x11174)|])
  end
module FinalizationRegistry_Make(T:Ojs.T) =
  struct
    type 'T parent = 'T FinalizationRegistry.t
    let rec parent_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T parent =
      fun (type __T) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x11177 : Ojs.t) ->
            FinalizationRegistry.t_of_js __T_of_js x11177
    and parent_to_js : 'T . ('T -> Ojs.t) -> 'T parent -> Ojs.t =
      fun (type __T) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x11175 : __T FinalizationRegistry.t) ->
            FinalizationRegistry.t_to_js __T_to_js x11175
    type t = T.t parent
    let rec t_of_js : Ojs.t -> t =
      fun (x11181 : Ojs.t) -> parent_of_js T.t_of_js x11181
    and t_to_js : t -> Ojs.t =
      fun (x11179 : T.t parent) -> parent_to_js T.t_to_js x11179
    let (register :
      t ->
        target:untyped_object ->
          heldValue:any -> ?unregisterToken:untyped_object -> unit -> unit)
      =
      fun (x11188 : t) ->
        fun ~target:(x11183 : untyped_object) ->
          fun ~heldValue:(x11184 : any) ->
            fun ?unregisterToken:(x11185 : untyped_object option) ->
              fun () ->
                ignore
                  (let x11189 = t_to_js x11188 in
                   Ojs.call (Ojs.get_prop_ascii x11189 "register") "apply"
                     [|x11189;((let x11186 =
                                  Ojs.new_obj
                                    (Ojs.get_prop_ascii Ojs.global "Array")
                                    [||] in
                                ignore
                                  (Ojs.call x11186 "push"
                                     [|(untyped_object_to_js x11183)|]);
                                ignore
                                  (Ojs.call x11186 "push"
                                     [|(any_to_js x11184)|]);
                                (match x11185 with
                                 | Some x11187 ->
                                     ignore
                                       (Ojs.call x11186 "push"
                                          [|(untyped_object_to_js x11187)|])
                                 | None -> ());
                                x11186))|])
    let (unregister : t -> unregisterToken:untyped_object -> unit) =
      fun (x11191 : t) ->
        fun ~unregisterToken:(x11190 : untyped_object) ->
          ignore
            (Ojs.call (t_to_js x11191) "unregister"
               [|(untyped_object_to_js x11190)|])
    let (register :
      t ->
        target:untyped_object ->
          heldValue:T.t -> ?unregisterToken:untyped_object -> unit -> unit)
      =
      fun (x11197 : t) ->
        fun ~target:(x11192 : untyped_object) ->
          fun ~heldValue:(x11193 : T.t) ->
            fun ?unregisterToken:(x11194 : untyped_object option) ->
              fun () ->
                ignore
                  (let x11198 = t_to_js x11197 in
                   Ojs.call (Ojs.get_prop_ascii x11198 "register") "apply"
                     [|x11198;((let x11195 =
                                  Ojs.new_obj
                                    (Ojs.get_prop_ascii Ojs.global "Array")
                                    [||] in
                                ignore
                                  (Ojs.call x11195 "push"
                                     [|(untyped_object_to_js x11192)|]);
                                ignore
                                  (Ojs.call x11195 "push"
                                     [|(T.t_to_js x11193)|]);
                                (match x11194 with
                                 | Some x11196 ->
                                     ignore
                                       (Ojs.call x11195 "push"
                                          [|(untyped_object_to_js x11196)|])
                                 | None -> ());
                                x11195))|])
    let (unregister : t -> unregisterToken:untyped_object -> unit) =
      fun (x11200 : t) ->
        fun ~unregisterToken:(x11199 : untyped_object) ->
          ignore
            (Ojs.call (t_to_js x11200) "unregister"
               [|(untyped_object_to_js x11199)|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "FinalizationRegistry")
             "prototype")
    let (create : (any -> unit) -> t) =
      fun (x11201 : any -> unit) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "FinalizationRegistry")
             [|(Ojs.fun_to_js 1
                  (fun (x11202 : Ojs.t) -> x11201 (any_of_js x11202)))|])
    let (prototype : unit -> any parent) =
      fun () ->
        parent_of_js any_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "FinalizationRegistry")
             "prototype")
    let (create : (T.t -> unit) -> t) =
      fun (x11204 : T.t -> unit) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "FinalizationRegistry")
             [|(Ojs.fun_to_js 1
                  (fun (x11205 : Ojs.t) -> x11204 (T.t_of_js x11205)))|])
  end
module PromiseFulfilledResult_Make(T:Ojs.T) =
  struct
    type 'T parent = 'T PromiseFulfilledResult.t
    let rec parent_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T parent =
      fun (type __T) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x11208 : Ojs.t) ->
            PromiseFulfilledResult.t_of_js __T_of_js x11208
    and parent_to_js : 'T . ('T -> Ojs.t) -> 'T parent -> Ojs.t =
      fun (type __T) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x11206 : __T PromiseFulfilledResult.t) ->
            PromiseFulfilledResult.t_to_js __T_to_js x11206
    type t = T.t parent
    let rec t_of_js : Ojs.t -> t =
      fun (x11212 : Ojs.t) -> parent_of_js T.t_of_js x11212
    and t_to_js : t -> Ojs.t =
      fun (x11210 : T.t parent) -> parent_to_js T.t_to_js x11210
    let (get_status : t -> [ `L_s43_fulfilled ]) =
      fun (x11214 : t) ->
        let x11215 = Ojs.get_prop_ascii (t_to_js x11214) "status" in
        match Ojs.string_of_js x11215 with
        | "fulfilled" -> `L_s43_fulfilled
        | _ -> assert false
    let (set_status : t -> [ `L_s43_fulfilled ] -> unit) =
      fun (x11216 : t) ->
        fun (x11217 : [ `L_s43_fulfilled ]) ->
          Ojs.set_prop_ascii (t_to_js x11216) "status"
            (match x11217 with
             | `L_s43_fulfilled -> Ojs.string_to_js "fulfilled")
    let (get_value : t -> T.t) =
      fun (x11218 : t) ->
        T.t_of_js (Ojs.get_prop_ascii (t_to_js x11218) "value")
    let (set_value : t -> T.t -> unit) =
      fun (x11219 : t) ->
        fun (x11220 : T.t) ->
          Ojs.set_prop_ascii (t_to_js x11219) "value" (T.t_to_js x11220)
  end
let (nan : unit -> float) =
  fun () -> Ojs.float_of_js (Ojs.get_prop_ascii Ojs.global "NaN")
let (infinity : unit -> float) =
  fun () -> Ojs.float_of_js (Ojs.get_prop_ascii Ojs.global "Infinity")
let (eval : string -> any) =
  fun (x11221 : string) ->
    any_of_js (Ojs.call Ojs.global "eval" [|(Ojs.string_to_js x11221)|])
let (parseInt : string:string -> ?radix:float -> unit -> float) =
  fun ~string:(x11222 : string) ->
    fun ?radix:(x11223 : float option) ->
      fun () ->
        Ojs.float_of_js
          (let x11226 = Ojs.global in
           Ojs.call (Ojs.get_prop_ascii x11226 "parseInt") "apply"
             [|x11226;((let x11224 =
                          Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                            [||] in
                        ignore
                          (Ojs.call x11224 "push"
                             [|(Ojs.string_to_js x11222)|]);
                        (match x11223 with
                         | Some x11225 ->
                             ignore
                               (Ojs.call x11224 "push"
                                  [|(Ojs.float_to_js x11225)|])
                         | None -> ());
                        x11224))|])
let (parseFloat : string -> float) =
  fun (x11227 : string) ->
    Ojs.float_of_js
      (Ojs.call Ojs.global "parseFloat" [|(Ojs.string_to_js x11227)|])
let (isNaN : float -> bool) =
  fun (x11228 : float) ->
    Ojs.bool_of_js (Ojs.call Ojs.global "isNaN" [|(Ojs.float_to_js x11228)|])
let (isFinite : float -> bool) =
  fun (x11229 : float) ->
    Ojs.bool_of_js
      (Ojs.call Ojs.global "isFinite" [|(Ojs.float_to_js x11229)|])
let (decodeURI : string -> string) =
  fun (x11230 : string) ->
    Ojs.string_of_js
      (Ojs.call Ojs.global "decodeURI" [|(Ojs.string_to_js x11230)|])
let (decodeURIComponent : string -> string) =
  fun (x11231 : string) ->
    Ojs.string_of_js
      (Ojs.call Ojs.global "decodeURIComponent" [|(Ojs.string_to_js x11231)|])
let (encodeURI : string -> string) =
  fun (x11232 : string) ->
    Ojs.string_of_js
      (Ojs.call Ojs.global "encodeURI" [|(Ojs.string_to_js x11232)|])
let (encodeURIComponent :
  [ `Number of float  | `String of string  | `Boolean of bool ] Primitive.t
    -> string)
  =
  fun
    (x11233 :
      [ `Number of float  | `String of string  | `Boolean of bool ]
        Primitive.t)
    ->
    Ojs.string_of_js
      (Ojs.call Ojs.global "encodeURIComponent"
         [|(Primitive.t_to_js
              (fun
                 (x11234 :
                   [ `Number of float  | `String of string 
                   | `Boolean of bool ])
                 ->
                 match x11234 with
                 | `Number x11235 -> Ojs.float_to_js x11235
                 | `String x11236 -> Ojs.string_to_js x11236
                 | `Boolean x11237 -> Ojs.bool_to_js x11237) x11233)|])
let (escape : string -> string) =
  fun (x11238 : string) ->
    Ojs.string_of_js
      (Ojs.call Ojs.global "escape" [|(Ojs.string_to_js x11238)|])
let (unescape : string -> string) =
  fun (x11239 : string) ->
    Ojs.string_of_js
      (Ojs.call Ojs.global "unescape" [|(Ojs.string_to_js x11239)|])
let (proxy : unit -> ProxyConstructor.t) =
  fun () -> ProxyConstructor.t_of_js (Ojs.get_prop_ascii Ojs.global "Proxy")
