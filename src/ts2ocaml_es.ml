[@@@js.dummy "!! This code has been generated by gen_js_api !!"]
[@@@ocaml.warning "-7-32-39"]
[@@@ocaml.warning "-7-11-32-33-39"]
open Ts2ocaml_min
module IteratorYieldResult =
  struct
    type 'TYield t = [ `IteratorYieldResult of 'TYield ] intf
    let rec t_of_js : 'TYield . (Ojs.t -> 'TYield) -> Ojs.t -> 'TYield t =
      fun _TYield -> Obj.magic
    and t_to_js : 'TYield . ('TYield -> Ojs.t) -> 'TYield t -> Ojs.t =
      fun _TYield -> Obj.magic
    type 'TYield tags = [ `IteratorYieldResult of 'TYield ]
    type ('tags, 'TYield) this =
      'tags intf constraint 'tags = [> `IteratorYieldResult of 'TYield ]
    let rec this_of_js :
      'tags 'TYield .
        (Ojs.t -> 'tags) ->
          (Ojs.t -> 'TYield) -> Ojs.t -> ('tags, 'TYield) this
      =
      fun (type __tags) ->
        fun (type __TYield) ->
          fun (__tags_of_js : Ojs.t -> __tags) ->
            fun (__TYield_of_js : Ojs.t -> __TYield) ->
              fun (x3 : Ojs.t) -> intf_of_js __tags_of_js x3
    and this_to_js :
      'tags 'TYield .
        ('tags -> Ojs.t) ->
          ('TYield -> Ojs.t) -> ('tags, 'TYield) this -> Ojs.t
      =
      fun (type __tags) ->
        fun (type __TYield) ->
          fun (__tags_to_js : __tags -> Ojs.t) ->
            fun (__TYield_to_js : __TYield -> Ojs.t) ->
              fun (x1 : __tags intf) -> intf_to_js __tags_to_js x1
    let (get_done : ('tags, 'TYield) this -> [ `L_b_false ] option) =
      fun (x5 : ('tags, 'TYield) this) ->
        Ojs.option_of_js
          (fun (x8 : Ojs.t) ->
             let x9 = x8 in
             match Ojs.bool_of_js x9 with
             | false -> `L_b_false
             | _ -> assert false)
          (Ojs.get_prop_ascii (this_to_js Obj.magic Obj.magic x5) "done")
    let (set_done : ('tags, 'TYield) this -> [ `L_b_false ] -> unit) =
      fun (x10 : ('tags, 'TYield) this) ->
        fun (x11 : [ `L_b_false ]) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic Obj.magic x10) "done"
            (match x11 with | `L_b_false -> Ojs.bool_to_js false)
    let (get_value : ('tags, 'TYield) this -> 'TYield) =
      fun (x14 : ('tags, 'TYield) this) ->
        Obj.magic
          (Ojs.get_prop_ascii (this_to_js Obj.magic Obj.magic x14) "value")
    let (set_value : ('tags, 'TYield) this -> 'TYield -> unit) =
      fun (x17 : ('tags, 'TYield) this) ->
        fun (x18 : 'TYield) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic Obj.magic x17) "value"
            (Obj.magic x18)
    let (create :
      ?done_:[ `L_b_false ] -> value:'TYield -> unit -> 'TYield t) =
      fun ?done_:(x21 : [ `L_b_false ] option) ->
        fun ~value:(x22 : 'TYield) ->
          fun () ->
            let x23 = Ojs.empty_obj () in
            (match x21 with
             | Some x25 ->
                 Ojs.set_prop_ascii x23 "done"
                   (match x25 with | `L_b_false -> Ojs.bool_to_js false)
             | None -> ());
            Ojs.set_prop_ascii x23 "value" (Obj.magic x22);
            t_of_js Obj.magic x23
    let cast_from = Obj.magic
  end
module IteratorReturnResult =
  struct
    type 'TReturn t = [ `IteratorReturnResult of 'TReturn ] intf
    let rec t_of_js : 'TReturn . (Ojs.t -> 'TReturn) -> Ojs.t -> 'TReturn t =
      fun _TReturn -> Obj.magic
    and t_to_js : 'TReturn . ('TReturn -> Ojs.t) -> 'TReturn t -> Ojs.t =
      fun _TReturn -> Obj.magic
    type 'TReturn tags = [ `IteratorReturnResult of 'TReturn ]
    type ('tags, 'TReturn) this =
      'tags intf constraint 'tags = [> `IteratorReturnResult of 'TReturn ]
    let rec this_of_js :
      'tags 'TReturn .
        (Ojs.t -> 'tags) ->
          (Ojs.t -> 'TReturn) -> Ojs.t -> ('tags, 'TReturn) this
      =
      fun (type __tags) ->
        fun (type __TReturn) ->
          fun (__tags_of_js : Ojs.t -> __tags) ->
            fun (__TReturn_of_js : Ojs.t -> __TReturn) ->
              fun (x28 : Ojs.t) -> intf_of_js __tags_of_js x28
    and this_to_js :
      'tags 'TReturn .
        ('tags -> Ojs.t) ->
          ('TReturn -> Ojs.t) -> ('tags, 'TReturn) this -> Ojs.t
      =
      fun (type __tags) ->
        fun (type __TReturn) ->
          fun (__tags_to_js : __tags -> Ojs.t) ->
            fun (__TReturn_to_js : __TReturn -> Ojs.t) ->
              fun (x26 : __tags intf) -> intf_to_js __tags_to_js x26
    let (get_done : ('tags, 'TReturn) this -> [ `L_b_true ]) =
      fun (x30 : ('tags, 'TReturn) this) ->
        let x33 =
          Ojs.get_prop_ascii (this_to_js Obj.magic Obj.magic x30) "done" in
        match Ojs.bool_of_js x33 with | true -> `L_b_true | _ -> assert false
    let (set_done : ('tags, 'TReturn) this -> [ `L_b_true ] -> unit) =
      fun (x34 : ('tags, 'TReturn) this) ->
        fun (x35 : [ `L_b_true ]) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic Obj.magic x34) "done"
            (match x35 with | `L_b_true -> Ojs.bool_to_js true)
    let (get_value : ('tags, 'TReturn) this -> 'TReturn) =
      fun (x38 : ('tags, 'TReturn) this) ->
        Obj.magic
          (Ojs.get_prop_ascii (this_to_js Obj.magic Obj.magic x38) "value")
    let (set_value : ('tags, 'TReturn) this -> 'TReturn -> unit) =
      fun (x41 : ('tags, 'TReturn) this) ->
        fun (x42 : 'TReturn) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic Obj.magic x41) "value"
            (Obj.magic x42)
    let (create :
      done_:[ `L_b_true ] -> value:'TReturn -> unit -> 'TReturn t) =
      fun ~done_:(x45 : [ `L_b_true ]) ->
        fun ~value:(x46 : 'TReturn) ->
          fun () ->
            let x47 = Ojs.empty_obj () in
            Ojs.set_prop_ascii x47 "done"
              (match x45 with | `L_b_true -> Ojs.bool_to_js true);
            Ojs.set_prop_ascii x47 "value" (Obj.magic x46);
            t_of_js Obj.magic x47
    let cast_from = Obj.magic
  end
module IteratorResult =
  struct
    type ('T, 'TReturn) t =
      [ `U_b_false of 'T IteratorYieldResult.t 
      | `U_b_true of 'TReturn IteratorReturnResult.t ]
    let rec t_of_js :
      'T 'TReturn .
        (Ojs.t -> 'T) -> (Ojs.t -> 'TReturn) -> Ojs.t -> ('T, 'TReturn) t
      =
      fun (type __T) ->
        fun (type __TReturn) ->
          fun (__T_of_js : Ojs.t -> __T) ->
            fun (__TReturn_of_js : Ojs.t -> __TReturn) ->
              fun (x54 : Ojs.t) ->
                let x55 = x54 in
                match Ojs.bool_of_js (Ojs.get_prop_ascii x55 "done") with
                | false ->
                    `U_b_false (IteratorYieldResult.t_of_js __T_of_js x55)
                | true ->
                    `U_b_true
                      (IteratorReturnResult.t_of_js __TReturn_of_js x55)
    and t_to_js :
      'T 'TReturn .
        ('T -> Ojs.t) -> ('TReturn -> Ojs.t) -> ('T, 'TReturn) t -> Ojs.t
      =
      fun (type __T) ->
        fun (type __TReturn) ->
          fun (__T_to_js : __T -> Ojs.t) ->
            fun (__TReturn_to_js : __TReturn -> Ojs.t) ->
              fun
                (x49 :
                  [ `U_b_false of __T IteratorYieldResult.t 
                  | `U_b_true of __TReturn IteratorReturnResult.t ])
                ->
                match x49 with
                | `U_b_false x50 -> IteratorYieldResult.t_to_js __T_to_js x50
                | `U_b_true x52 ->
                    IteratorReturnResult.t_to_js __TReturn_to_js x52
    type 'T t_1 = ('T, any) t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 =
      fun (type __T) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x61 : Ojs.t) -> t_of_js __T_of_js any_of_js x61
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t =
      fun (type __T) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x58 : (__T, any) t) -> t_to_js __T_to_js any_to_js x58
  end
module Iterator =
  struct
    type ('T, 'TReturn, 'TNext) t =
      [ `Iterator of ('T * 'TReturn * 'TNext) ] intf
    let rec t_of_js :
      'T 'TReturn 'TNext .
        (Ojs.t -> 'T) ->
          (Ojs.t -> 'TReturn) ->
            (Ojs.t -> 'TNext) -> Ojs.t -> ('T, 'TReturn, 'TNext) t
      = fun _T -> fun _TReturn -> fun _TNext -> Obj.magic
    and t_to_js :
      'T 'TReturn 'TNext .
        ('T -> Ojs.t) ->
          ('TReturn -> Ojs.t) ->
            ('TNext -> Ojs.t) -> ('T, 'TReturn, 'TNext) t -> Ojs.t
      = fun _T -> fun _TReturn -> fun _TNext -> Obj.magic
    type ('T, 'TReturn) t_2 = ('T, 'TReturn, undefined) t
    let rec t_2_of_js :
      'T 'TReturn .
        (Ojs.t -> 'T) -> (Ojs.t -> 'TReturn) -> Ojs.t -> ('T, 'TReturn) t_2
      =
      fun (type __T) ->
        fun (type __TReturn) ->
          fun (__T_of_js : Ojs.t -> __T) ->
            fun (__TReturn_of_js : Ojs.t -> __TReturn) ->
              fun (x68 : Ojs.t) ->
                t_of_js __T_of_js __TReturn_of_js undefined_of_js x68
    and t_2_to_js :
      'T 'TReturn .
        ('T -> Ojs.t) -> ('TReturn -> Ojs.t) -> ('T, 'TReturn) t_2 -> Ojs.t
      =
      fun (type __T) ->
        fun (type __TReturn) ->
          fun (__T_to_js : __T -> Ojs.t) ->
            fun (__TReturn_to_js : __TReturn -> Ojs.t) ->
              fun (x64 : (__T, __TReturn, undefined) t) ->
                t_to_js __T_to_js __TReturn_to_js undefined_to_js x64
    type 'T t_1 = ('T, any, undefined) t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 =
      fun (type __T) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x76 : Ojs.t) ->
            t_of_js __T_of_js any_of_js undefined_of_js x76
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t =
      fun (type __T) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x72 : (__T, any, undefined) t) ->
            t_to_js __T_to_js any_to_js undefined_to_js x72
    type ('T, 'TReturn, 'TNext) tags =
      [ `Iterator of ('T * 'TReturn * 'TNext) ]
    type ('T, 'TReturn) tags_2 = ('T, 'TReturn, undefined) tags
    type 'T tags_1 = ('T, any, undefined) tags
    type ('tags, 'T, 'TReturn, 'TNext) this =
      'tags intf constraint 'tags =
                  [> `Iterator of ('T * 'TReturn * 'TNext) ]
    let rec this_of_js :
      'tags 'T 'TReturn 'TNext .
        (Ojs.t -> 'tags) ->
          (Ojs.t -> 'T) ->
            (Ojs.t -> 'TReturn) ->
              (Ojs.t -> 'TNext) ->
                Ojs.t -> ('tags, 'T, 'TReturn, 'TNext) this
      =
      fun (type __tags) ->
        fun (type __T) ->
          fun (type __TReturn) ->
            fun (type __TNext) ->
              fun (__tags_of_js : Ojs.t -> __tags) ->
                fun (__T_of_js : Ojs.t -> __T) ->
                  fun (__TReturn_of_js : Ojs.t -> __TReturn) ->
                    fun (__TNext_of_js : Ojs.t -> __TNext) ->
                      fun (x82 : Ojs.t) -> intf_of_js __tags_of_js x82
    and this_to_js :
      'tags 'T 'TReturn 'TNext .
        ('tags -> Ojs.t) ->
          ('T -> Ojs.t) ->
            ('TReturn -> Ojs.t) ->
              ('TNext -> Ojs.t) ->
                ('tags, 'T, 'TReturn, 'TNext) this -> Ojs.t
      =
      fun (type __tags) ->
        fun (type __T) ->
          fun (type __TReturn) ->
            fun (type __TNext) ->
              fun (__tags_to_js : __tags -> Ojs.t) ->
                fun (__T_to_js : __T -> Ojs.t) ->
                  fun (__TReturn_to_js : __TReturn -> Ojs.t) ->
                    fun (__TNext_to_js : __TNext -> Ojs.t) ->
                      fun (x80 : __tags intf) -> intf_to_js __tags_to_js x80
    let (next :
      ('tags, 'T, 'TReturn, 'TNext) this ->
        args:any list -> ('T, 'TReturn) IteratorResult.t)
      =
      fun (x87 : ('tags, 'T, 'TReturn, 'TNext) this) ->
        fun ~args:(x84 : any list) ->
          IteratorResult.t_of_js Obj.magic Obj.magic
            (let x92 = this_to_js Obj.magic Obj.magic Obj.magic Obj.magic x87 in
             Ojs.call (Ojs.get_prop_ascii x92 "next") "apply"
               [|x92;((let x85 =
                         Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                           [||] in
                       List.iter
                         (fun (x86 : any) ->
                            ignore (Ojs.call x85 "push" [|(any_to_js x86)|]))
                         x84;
                       x85))|])
    let (return :
      ('tags, 'T, 'TReturn, 'TNext) this ->
        ?value:'TReturn -> unit -> ('T, 'TReturn) IteratorResult.t)
      =
      fun (x98 : ('tags, 'T, 'TReturn, 'TNext) this) ->
        fun ?value:(x95 : 'TReturn option) ->
          fun () ->
            IteratorResult.t_of_js Obj.magic Obj.magic
              (let x103 =
                 this_to_js Obj.magic Obj.magic Obj.magic Obj.magic x98 in
               Ojs.call (Ojs.get_prop_ascii x103 "return") "apply"
                 [|x103;((let x96 =
                            Ojs.new_obj
                              (Ojs.get_prop_ascii Ojs.global "Array") 
                              [||] in
                          (match x95 with
                           | Some x97 ->
                               ignore
                                 (Ojs.call x96 "push" [|(Obj.magic x97)|])
                           | None -> ());
                          x96))|])
    let (throw :
      ('tags, 'T, 'TReturn, 'TNext) this ->
        ?e:any -> unit -> ('T, 'TReturn) IteratorResult.t)
      =
      fun (x109 : ('tags, 'T, 'TReturn, 'TNext) this) ->
        fun ?e:(x106 : any option) ->
          fun () ->
            IteratorResult.t_of_js Obj.magic Obj.magic
              (let x114 =
                 this_to_js Obj.magic Obj.magic Obj.magic Obj.magic x109 in
               Ojs.call (Ojs.get_prop_ascii x114 "throw") "apply"
                 [|x114;((let x107 =
                            Ojs.new_obj
                              (Ojs.get_prop_ascii Ojs.global "Array") 
                              [||] in
                          (match x106 with
                           | Some x108 ->
                               ignore
                                 (Ojs.call x107 "push" [|(any_to_js x108)|])
                           | None -> ());
                          x107))|])
    let cast_from = Obj.magic
  end
module Iterable =
  struct
    type 'T t = [ `Iterable of 'T ] intf
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun _T -> Obj.magic
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun _T -> Obj.magic
    type 'T tags = [ `Iterable of 'T ]
    type ('tags, 'T) this =
      'tags intf constraint 'tags = [> `Iterable of 'T ]
    let rec this_of_js :
      'tags 'T .
        (Ojs.t -> 'tags) -> (Ojs.t -> 'T) -> Ojs.t -> ('tags, 'T) this
      =
      fun (type __tags) ->
        fun (type __T) ->
          fun (__tags_of_js : Ojs.t -> __tags) ->
            fun (__T_of_js : Ojs.t -> __T) ->
              fun (x119 : Ojs.t) -> intf_of_js __tags_of_js x119
    and this_to_js :
      'tags 'T .
        ('tags -> Ojs.t) -> ('T -> Ojs.t) -> ('tags, 'T) this -> Ojs.t
      =
      fun (type __tags) ->
        fun (type __T) ->
          fun (__tags_to_js : __tags -> Ojs.t) ->
            fun (__T_to_js : __T -> Ojs.t) ->
              fun (x117 : __tags intf) -> intf_to_js __tags_to_js x117
    let cast_from = Obj.magic
  end
module WeakSet =
  struct
    type 'T t = [ `WeakSet of 'T ] intf
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun _T -> Obj.magic
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun _T -> Obj.magic
    type 'T tags = [ `WeakSet of 'T ]
    type ('tags, 'T) this = 'tags intf constraint 'tags = [> `WeakSet of 'T ]
    let rec this_of_js :
      'tags 'T .
        (Ojs.t -> 'tags) -> (Ojs.t -> 'T) -> Ojs.t -> ('tags, 'T) this
      =
      fun (type __tags) ->
        fun (type __T) ->
          fun (__tags_of_js : Ojs.t -> __tags) ->
            fun (__T_of_js : Ojs.t -> __T) ->
              fun (x123 : Ojs.t) -> intf_of_js __tags_of_js x123
    and this_to_js :
      'tags 'T .
        ('tags -> Ojs.t) -> ('T -> Ojs.t) -> ('tags, 'T) this -> Ojs.t
      =
      fun (type __tags) ->
        fun (type __T) ->
          fun (__tags_to_js : __tags -> Ojs.t) ->
            fun (__T_to_js : __T -> Ojs.t) ->
              fun (x121 : __tags intf) -> intf_to_js __tags_to_js x121
    let (add : ('tags, 'T) this -> value:'T -> ('tags, 'T) this) =
      fun (x126 : ('tags, 'T) this) ->
        fun ~value:(x125 : 'T) ->
          this_of_js Obj.magic Obj.magic
            (Ojs.call (this_to_js Obj.magic Obj.magic x126) "add"
               [|(Obj.magic x125)|])
    let (delete : ('tags, 'T) this -> value:'T -> bool) =
      fun (x132 : ('tags, 'T) this) ->
        fun ~value:(x131 : 'T) ->
          Ojs.bool_of_js
            (Ojs.call (this_to_js Obj.magic Obj.magic x132) "delete"
               [|(Obj.magic x131)|])
    let (has : ('tags, 'T) this -> value:'T -> bool) =
      fun (x136 : ('tags, 'T) this) ->
        fun ~value:(x135 : 'T) ->
          Ojs.bool_of_js
            (Ojs.call (this_to_js Obj.magic Obj.magic x136) "has"
               [|(Obj.magic x135)|])
    let (create : 'T Iterable.t -> 'T t) =
      fun (x139 : 'T Iterable.t) ->
        t_of_js Obj.magic
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "WeakSet")
             [|(Iterable.t_to_js Obj.magic x139)|])
    let (create' : ?values:'T list option -> unit -> 'T t) =
      fun ?values:(x142 : 'T list option option) ->
        fun () ->
          t_of_js Obj.magic
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "WeakSet")
               (let x143 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x142 with
                 | Some x144 ->
                     ignore
                       (Ojs.call x143 "push"
                          [|(Ojs.option_to_js
                               (fun (x145 : 'T list) ->
                                  Ojs.list_to_js Obj.magic x145) x144)|])
                 | None -> ());
                x143))
    let (prototype : unit -> untyped_object t) =
      fun () ->
        t_of_js untyped_object_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "WeakSet")
             "prototype")
    let cast_from = Obj.magic
  end
module WeakRef =
  struct
    type 'T t = [ `WeakRef of 'T ] intf
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun _T -> Obj.magic
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun _T -> Obj.magic
    type 'T tags = [ `WeakRef of 'T ]
    type ('tags, 'T) this = 'tags intf constraint 'tags = [> `WeakRef of 'T ]
    let rec this_of_js :
      'tags 'T .
        (Ojs.t -> 'tags) -> (Ojs.t -> 'T) -> Ojs.t -> ('tags, 'T) this
      =
      fun (type __tags) ->
        fun (type __T) ->
          fun (__tags_of_js : Ojs.t -> __tags) ->
            fun (__T_of_js : Ojs.t -> __T) ->
              fun (x151 : Ojs.t) -> intf_of_js __tags_of_js x151
    and this_to_js :
      'tags 'T .
        ('tags -> Ojs.t) -> ('T -> Ojs.t) -> ('tags, 'T) this -> Ojs.t
      =
      fun (type __tags) ->
        fun (type __T) ->
          fun (__tags_to_js : __tags -> Ojs.t) ->
            fun (__T_to_js : __T -> Ojs.t) ->
              fun (x149 : __tags intf) -> intf_to_js __tags_to_js x149
    let (deref : ('tags, 'T) this -> 'T option) =
      fun (x153 : ('tags, 'T) this) ->
        Ojs.option_of_js Obj.magic
          (Ojs.call (this_to_js Obj.magic Obj.magic x153) "deref" [||])
    let (prototype : unit -> any t) =
      fun () ->
        t_of_js any_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "WeakRef")
             "prototype")
    let (create : 'T -> 'T t) =
      fun (x158 : 'T) ->
        t_of_js Obj.magic
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "WeakRef")
             [|(Obj.magic x158)|])
    let cast_from = Obj.magic
  end
module WeakMap =
  struct
    type ('K, 'V) t = [ `WeakMap of ('K * 'V) ] intf
    let rec t_of_js :
      'K 'V . (Ojs.t -> 'K) -> (Ojs.t -> 'V) -> Ojs.t -> ('K, 'V) t =
      fun _K -> fun _V -> Obj.magic
    and t_to_js :
      'K 'V . ('K -> Ojs.t) -> ('V -> Ojs.t) -> ('K, 'V) t -> Ojs.t =
      fun _K -> fun _V -> Obj.magic
    type ('K, 'V) tags = [ `WeakMap of ('K * 'V) ]
    type ('tags, 'K, 'V) this =
      'tags intf constraint 'tags = [> `WeakMap of ('K * 'V) ]
    let rec this_of_js :
      'tags 'K 'V .
        (Ojs.t -> 'tags) ->
          (Ojs.t -> 'K) -> (Ojs.t -> 'V) -> Ojs.t -> ('tags, 'K, 'V) this
      =
      fun (type __tags) ->
        fun (type __K) ->
          fun (type __V) ->
            fun (__tags_of_js : Ojs.t -> __tags) ->
              fun (__K_of_js : Ojs.t -> __K) ->
                fun (__V_of_js : Ojs.t -> __V) ->
                  fun (x162 : Ojs.t) -> intf_of_js __tags_of_js x162
    and this_to_js :
      'tags 'K 'V .
        ('tags -> Ojs.t) ->
          ('K -> Ojs.t) -> ('V -> Ojs.t) -> ('tags, 'K, 'V) this -> Ojs.t
      =
      fun (type __tags) ->
        fun (type __K) ->
          fun (type __V) ->
            fun (__tags_to_js : __tags -> Ojs.t) ->
              fun (__K_to_js : __K -> Ojs.t) ->
                fun (__V_to_js : __V -> Ojs.t) ->
                  fun (x160 : __tags intf) -> intf_to_js __tags_to_js x160
    let (delete : ('tags, 'K, 'V) this -> key:'K -> bool) =
      fun (x165 : ('tags, 'K, 'V) this) ->
        fun ~key:(x164 : 'K) ->
          Ojs.bool_of_js
            (Ojs.call (this_to_js Obj.magic Obj.magic Obj.magic x165)
               "delete" [|(Obj.magic x164)|])
    let (get_ : ('tags, 'K, 'V) this -> key:'K -> 'V option) =
      fun (x170 : ('tags, 'K, 'V) this) ->
        fun ~key:(x169 : 'K) ->
          Ojs.option_of_js Obj.magic
            (Ojs.call (this_to_js Obj.magic Obj.magic Obj.magic x170) "get"
               [|(Obj.magic x169)|])
    let (has : ('tags, 'K, 'V) this -> key:'K -> bool) =
      fun (x176 : ('tags, 'K, 'V) this) ->
        fun ~key:(x175 : 'K) ->
          Ojs.bool_of_js
            (Ojs.call (this_to_js Obj.magic Obj.magic Obj.magic x176) "has"
               [|(Obj.magic x175)|])
    let (set_ :
      ('tags, 'K, 'V) this -> key:'K -> value:'V -> ('tags, 'K, 'V) this) =
      fun (x182 : ('tags, 'K, 'V) this) ->
        fun ~key:(x180 : 'K) ->
          fun ~value:(x181 : 'V) ->
            this_of_js Obj.magic Obj.magic Obj.magic
              (Ojs.call (this_to_js Obj.magic Obj.magic Obj.magic x182) "set"
                 [|(Obj.magic x180);(Obj.magic x181)|])
    let (create : ('K * 'V) Iterable.t -> ('K, 'V) t) =
      fun (x189 : ('K * 'V) Iterable.t) ->
        t_of_js Obj.magic Obj.magic
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "WeakMap")
             [|(Iterable.t_to_js
                  (fun (x190 : ('K * 'V)) ->
                     let (x191, x192) = x190 in
                     let x193 = Ojs.array_make 2 in
                     Ojs.array_set x193 0 (Obj.magic x191);
                     Ojs.array_set x193 1 (Obj.magic x192);
                     x193) x189)|])
    let (create' : ?entries:('K * 'V) list option -> unit -> ('K, 'V) t) =
      fun ?entries:(x196 : ('K * 'V) list option option) ->
        fun () ->
          t_of_js Obj.magic Obj.magic
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "WeakMap")
               (let x197 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x196 with
                 | Some x198 ->
                     ignore
                       (Ojs.call x197 "push"
                          [|(Ojs.option_to_js
                               (fun (x199 : ('K * 'V) list) ->
                                  Ojs.list_to_js
                                    (fun (x200 : ('K * 'V)) ->
                                       let (x201, x202) = x200 in
                                       let x203 = Ojs.array_make 2 in
                                       Ojs.array_set x203 0 (Obj.magic x201);
                                       Ojs.array_set x203 1 (Obj.magic x202);
                                       x203) x199) x198)|])
                 | None -> ());
                x197))
    let (prototype : unit -> (untyped_object, any) t) =
      fun () ->
        t_of_js untyped_object_of_js any_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "WeakMap")
             "prototype")
    let cast_from = Obj.magic
  end
module Uppercase =
  struct
    type 'S t = Ojs.t
    let rec t_of_js : 'S . (Ojs.t -> 'S) -> Ojs.t -> 'S t =
      fun (type __S) ->
        fun (__S_of_js : Ojs.t -> __S) -> fun (x209 : Ojs.t) -> x209
    and t_to_js : 'S . ('S -> Ojs.t) -> 'S t -> Ojs.t =
      fun (type __S) ->
        fun (__S_to_js : __S -> Ojs.t) -> fun (x208 : Ojs.t) -> x208
  end
module Uncapitalize =
  struct
    type 'S t = Ojs.t
    let rec t_of_js : 'S . (Ojs.t -> 'S) -> Ojs.t -> 'S t =
      fun (type __S) ->
        fun (__S_of_js : Ojs.t -> __S) -> fun (x211 : Ojs.t) -> x211
    and t_to_js : 'S . ('S -> Ojs.t) -> 'S t -> Ojs.t =
      fun (type __S) ->
        fun (__S_to_js : __S -> Ojs.t) -> fun (x210 : Ojs.t) -> x210
  end
module SharedArrayBuffer =
  struct
    type t = [ `SharedArrayBuffer ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type tags = [ `SharedArrayBuffer ]
    type 'tags this = 'tags intf constraint 'tags = [> `SharedArrayBuffer ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x214 : Ojs.t) -> intf_of_js __tags_of_js x214
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x212 : __tags intf) -> intf_to_js __tags_to_js x212
    let (get_byteLength : 'tags this -> float) =
      fun (x216 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x216) "byteLength")
    let (slice : 'tags this -> begin_:float -> ?end_:float -> unit -> t) =
      fun (x222 : 'tags this) ->
        fun ~begin_:(x218 : float) ->
          fun ?end_:(x219 : float option) ->
            fun () ->
              t_of_js
                (let x224 = this_to_js Obj.magic x222 in
                 Ojs.call (Ojs.get_prop_ascii x224 "slice") "apply"
                   [|x224;((let x220 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x220 "push"
                                 [|(Ojs.float_to_js x218)|]);
                            (match x219 with
                             | Some x221 ->
                                 ignore
                                   (Ojs.call x220 "push"
                                      [|(Ojs.float_to_js x221)|])
                             | None -> ());
                            x220))|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "SharedArrayBuffer") "prototype")
    let (create : float -> t) =
      fun (x225 : float) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "SharedArrayBuffer")
             [|(Ojs.float_to_js x225)|])
    let cast_from = Obj.magic
  end
module ArrayBuffer =
  struct
    type t = [ `ArrayBuffer ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type tags = [ `ArrayBuffer ]
    type 'tags this = 'tags intf constraint 'tags = [> `ArrayBuffer ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x228 : Ojs.t) -> intf_of_js __tags_of_js x228
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x226 : __tags intf) -> intf_to_js __tags_to_js x226
    let (get_byteLength : 'tags this -> float) =
      fun (x230 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x230) "byteLength")
    let (slice : 'tags this -> begin_:float -> ?end_:float -> unit -> t) =
      fun (x236 : 'tags this) ->
        fun ~begin_:(x232 : float) ->
          fun ?end_:(x233 : float option) ->
            fun () ->
              t_of_js
                (let x238 = this_to_js Obj.magic x236 in
                 Ojs.call (Ojs.get_prop_ascii x238 "slice") "apply"
                   [|x238;((let x234 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x234 "push"
                                 [|(Ojs.float_to_js x232)|]);
                            (match x233 with
                             | Some x235 ->
                                 ignore
                                   (Ojs.call x234 "push"
                                      [|(Ojs.float_to_js x235)|])
                             | None -> ());
                            x234))|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "ArrayBuffer")
             "prototype")
    let (create : float -> t) =
      fun (x239 : float) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "ArrayBuffer")
             [|(Ojs.float_to_js x239)|])
    let (isView : any -> bool) =
      fun (x240 : any) ->
        Ojs.bool_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "ArrayBuffer") "isView"
             [|(any_to_js x240)|])
    let cast_from = Obj.magic
  end
module ArrayBufferLike =
  struct
    type t = (ArrayBuffer.t, SharedArrayBuffer.t) union2
    let rec t_of_js : Ojs.t -> t =
      fun (x244 : Ojs.t) ->
        union2_of_js ArrayBuffer.t_of_js SharedArrayBuffer.t_of_js x244
    and t_to_js : t -> Ojs.t =
      fun (x241 : (ArrayBuffer.t, SharedArrayBuffer.t) union2) ->
        union2_to_js ArrayBuffer.t_to_js SharedArrayBuffer.t_to_js x241
  end
module IterableIterator =
  struct
    type 'T t =
      [ `IterableIterator of 'T  | `Iterator of ('T * any * undefined) ] intf
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun _T -> Obj.magic
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun _T -> Obj.magic
    type 'T tags =
      [ `IterableIterator of 'T  | `Iterator of ('T * any * undefined) ]
    type ('tags, 'T) this =
      'tags intf constraint 'tags = [> `IterableIterator of 'T ]
    let rec this_of_js :
      'tags 'T .
        (Ojs.t -> 'tags) -> (Ojs.t -> 'T) -> Ojs.t -> ('tags, 'T) this
      =
      fun (type __tags) ->
        fun (type __T) ->
          fun (__tags_of_js : Ojs.t -> __tags) ->
            fun (__T_of_js : Ojs.t -> __T) ->
              fun (x249 : Ojs.t) -> intf_of_js __tags_of_js x249
    and this_to_js :
      'tags 'T .
        ('tags -> Ojs.t) -> ('T -> Ojs.t) -> ('tags, 'T) this -> Ojs.t
      =
      fun (type __tags) ->
        fun (type __T) ->
          fun (__tags_to_js : __tags -> Ojs.t) ->
            fun (__T_to_js : __T -> Ojs.t) ->
              fun (x247 : __tags intf) -> intf_to_js __tags_to_js x247
    let cast_from = Obj.magic
  end
module ArrayLike =
  struct
    type 'T t = [ `ArrayLike of 'T ] intf
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun _T -> Obj.magic
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun _T -> Obj.magic
    type 'T tags = [ `ArrayLike of 'T ]
    type ('tags, 'T) this =
      'tags intf constraint 'tags = [> `ArrayLike of 'T ]
    let rec this_of_js :
      'tags 'T .
        (Ojs.t -> 'tags) -> (Ojs.t -> 'T) -> Ojs.t -> ('tags, 'T) this
      =
      fun (type __tags) ->
        fun (type __T) ->
          fun (__tags_of_js : Ojs.t -> __tags) ->
            fun (__T_of_js : Ojs.t -> __T) ->
              fun (x253 : Ojs.t) -> intf_of_js __tags_of_js x253
    and this_to_js :
      'tags 'T .
        ('tags -> Ojs.t) -> ('T -> Ojs.t) -> ('tags, 'T) this -> Ojs.t
      =
      fun (type __tags) ->
        fun (type __T) ->
          fun (__tags_to_js : __tags -> Ojs.t) ->
            fun (__T_to_js : __T -> Ojs.t) ->
              fun (x251 : __tags intf) -> intf_to_js __tags_to_js x251
    let (get_length : ('tags, 'T) this -> float) =
      fun (x255 : ('tags, 'T) this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic Obj.magic x255) "length")
    let (get : ('tags, 'T) this -> float -> 'T) =
      fun (x258 : ('tags, 'T) this) ->
        fun (x261 : float) ->
          Obj.magic
            (Ojs.get_prop (this_to_js Obj.magic Obj.magic x258)
               (Ojs.float_to_js x261))
    let (create : length:float -> unit -> 'T t) =
      fun ~length:(x262 : float) ->
        fun () ->
          let x263 = Ojs.empty_obj () in
          Ojs.set_prop_ascii x263 "length" (Ojs.float_to_js x262);
          t_of_js Obj.magic x263
    let cast_from = Obj.magic
    let (of_ml : 'T list -> 'T t) =
      fun (x265 : 'T list) ->
        t_of_js Obj.magic (Ojs.list_to_js Obj.magic x265)
    let (to_ml : 'T t -> 'T list) =
      fun (x268 : 'T t) -> Ojs.list_of_js Obj.magic (t_to_js Obj.magic x268)
  end
module Uint8ClampedArray =
  struct
    type t = [ `Uint8ClampedArray ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type tags = [ `Uint8ClampedArray ]
    type 'tags this = 'tags intf constraint 'tags = [> `Uint8ClampedArray ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x273 : Ojs.t) -> intf_of_js __tags_of_js x273
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x271 : __tags intf) -> intf_to_js __tags_to_js x271
    let (findLast :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> bool) ->
          ?thisArg:any -> unit -> 'S option)
      =
      fun (x282 : 'tags this) ->
        fun ~predicate:(x275 : value:float -> index:float -> array:t -> bool)
          ->
          fun ?thisArg:(x276 : any option) ->
            fun () ->
              Ojs.option_of_js Obj.magic
                (let x284 = this_to_js Obj.magic x282 in
                 Ojs.call (Ojs.get_prop_ascii x284 "findLast") "apply"
                   [|x284;((let x277 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x277 "push"
                                 [|(Ojs.fun_to_js 3
                                      (fun (x279 : Ojs.t) ->
                                         fun (x280 : Ojs.t) ->
                                           fun (x281 : Ojs.t) ->
                                             Ojs.bool_to_js
                                               (x275
                                                  ~value:(Ojs.float_of_js
                                                            x279)
                                                  ~index:(Ojs.float_of_js
                                                            x280)
                                                  ~array:(t_of_js x281))))|]);
                            (match x276 with
                             | Some x278 ->
                                 ignore
                                   (Ojs.call x277 "push" [|(any_to_js x278)|])
                             | None -> ());
                            x277))|])
    let (findLast' :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> float option)
      =
      fun (x293 : 'tags this) ->
        fun
          ~predicate:(x286 :
                       value:float -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x287 : any option) ->
            fun () ->
              Ojs.option_of_js Ojs.float_of_js
                (let x295 = this_to_js Obj.magic x293 in
                 Ojs.call (Ojs.get_prop_ascii x295 "findLast") "apply"
                   [|x295;((let x288 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x288 "push"
                                 [|(Ojs.fun_to_js 3
                                      (fun (x290 : Ojs.t) ->
                                         fun (x291 : Ojs.t) ->
                                           fun (x292 : Ojs.t) ->
                                             unknown_to_js
                                               (x286
                                                  ~value:(Ojs.float_of_js
                                                            x290)
                                                  ~index:(Ojs.float_of_js
                                                            x291)
                                                  ~array:(t_of_js x292))))|]);
                            (match x287 with
                             | Some x289 ->
                                 ignore
                                   (Ojs.call x288 "push" [|(any_to_js x289)|])
                             | None -> ());
                            x288))|])
    let (findLastIndex :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> float)
      =
      fun (x304 : 'tags this) ->
        fun
          ~predicate:(x297 :
                       value:float -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x298 : any option) ->
            fun () ->
              Ojs.float_of_js
                (let x306 = this_to_js Obj.magic x304 in
                 Ojs.call (Ojs.get_prop_ascii x306 "findLastIndex") "apply"
                   [|x306;((let x299 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x299 "push"
                                 [|(Ojs.fun_to_js 3
                                      (fun (x301 : Ojs.t) ->
                                         fun (x302 : Ojs.t) ->
                                           fun (x303 : Ojs.t) ->
                                             unknown_to_js
                                               (x297
                                                  ~value:(Ojs.float_of_js
                                                            x301)
                                                  ~index:(Ojs.float_of_js
                                                            x302)
                                                  ~array:(t_of_js x303))))|]);
                            (match x298 with
                             | Some x300 ->
                                 ignore
                                   (Ojs.call x299 "push" [|(any_to_js x300)|])
                             | None -> ());
                            x299))|])
    let (at : 'tags this -> index:float -> float option) =
      fun (x308 : 'tags this) ->
        fun ~index:(x307 : float) ->
          Ojs.option_of_js Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x308) "at"
               [|(Ojs.float_to_js x307)|])
    let (includes :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> bool)
      =
      fun (x315 : 'tags this) ->
        fun ~searchElement:(x311 : float) ->
          fun ?fromIndex:(x312 : float option) ->
            fun () ->
              Ojs.bool_of_js
                (let x317 = this_to_js Obj.magic x315 in
                 Ojs.call (Ojs.get_prop_ascii x317 "includes") "apply"
                   [|x317;((let x313 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x313 "push"
                                 [|(Ojs.float_to_js x311)|]);
                            (match x312 with
                             | Some x314 ->
                                 ignore
                                   (Ojs.call x313 "push"
                                      [|(Ojs.float_to_js x314)|])
                             | None -> ());
                            x313))|])
    let (entries : 'tags this -> (float * float) IterableIterator.t) =
      fun (x318 : 'tags this) ->
        IterableIterator.t_of_js
          (fun (x320 : Ojs.t) ->
             let x321 = x320 in
             ((Ojs.float_of_js (Ojs.array_get x321 0)),
               (Ojs.float_of_js (Ojs.array_get x321 1))))
          (Ojs.call (this_to_js Obj.magic x318) "entries" [||])
    let (keys : 'tags this -> float IterableIterator.t) =
      fun (x322 : 'tags this) ->
        IterableIterator.t_of_js Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x322) "keys" [||])
    let (values : 'tags this -> float IterableIterator.t) =
      fun (x325 : 'tags this) ->
        IterableIterator.t_of_js Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x325) "values" [||])
    let (get_BYTES_PER_ELEMENT : 'tags this -> float) =
      fun (x328 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x328) "BYTES_PER_ELEMENT")
    let (get_buffer : 'tags this -> ArrayBufferLike.t) =
      fun (x330 : 'tags this) ->
        ArrayBufferLike.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x330) "buffer")
    let (get_byteLength : 'tags this -> float) =
      fun (x332 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x332) "byteLength")
    let (get_byteOffset : 'tags this -> float) =
      fun (x334 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x334) "byteOffset")
    let (copyWithin :
      'tags this ->
        target:float -> ?start:float -> ?end_:float -> unit -> 'tags this)
      =
      fun (x342 : 'tags this) ->
        fun ~target:(x336 : float) ->
          fun ?start:(x337 : float option) ->
            fun ?end_:(x338 : float option) ->
              fun () ->
                this_of_js Obj.magic
                  (let x344 = this_to_js Obj.magic x342 in
                   Ojs.call (Ojs.get_prop_ascii x344 "copyWithin") "apply"
                     [|x344;((let x339 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x339 "push"
                                   [|(Ojs.float_to_js x336)|]);
                              (match x337 with
                               | Some x341 ->
                                   ignore
                                     (Ojs.call x339 "push"
                                        [|(Ojs.float_to_js x341)|])
                               | None -> ());
                              (match x338 with
                               | Some x340 ->
                                   ignore
                                     (Ojs.call x339 "push"
                                        [|(Ojs.float_to_js x340)|])
                               | None -> ());
                              x339))|])
    let (every :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x353 : 'tags this) ->
        fun
          ~predicate:(x346 :
                       value:float -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x347 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x355 = this_to_js Obj.magic x353 in
                 Ojs.call (Ojs.get_prop_ascii x355 "every") "apply"
                   [|x355;((let x348 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x348 "push"
                                 [|(Ojs.fun_to_js 3
                                      (fun (x350 : Ojs.t) ->
                                         fun (x351 : Ojs.t) ->
                                           fun (x352 : Ojs.t) ->
                                             unknown_to_js
                                               (x346
                                                  ~value:(Ojs.float_of_js
                                                            x350)
                                                  ~index:(Ojs.float_of_js
                                                            x351)
                                                  ~array:(t_of_js x352))))|]);
                            (match x347 with
                             | Some x349 ->
                                 ignore
                                   (Ojs.call x348 "push" [|(any_to_js x349)|])
                             | None -> ());
                            x348))|])
    let (fill :
      'tags this ->
        value:float -> ?start:float -> ?end_:float -> unit -> 'tags this)
      =
      fun (x362 : 'tags this) ->
        fun ~value:(x356 : float) ->
          fun ?start:(x357 : float option) ->
            fun ?end_:(x358 : float option) ->
              fun () ->
                this_of_js Obj.magic
                  (let x364 = this_to_js Obj.magic x362 in
                   Ojs.call (Ojs.get_prop_ascii x364 "fill") "apply"
                     [|x364;((let x359 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x359 "push"
                                   [|(Ojs.float_to_js x356)|]);
                              (match x357 with
                               | Some x361 ->
                                   ignore
                                     (Ojs.call x359 "push"
                                        [|(Ojs.float_to_js x361)|])
                               | None -> ());
                              (match x358 with
                               | Some x360 ->
                                   ignore
                                     (Ojs.call x359 "push"
                                        [|(Ojs.float_to_js x360)|])
                               | None -> ());
                              x359))|])
    let (filter :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> any) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x373 : 'tags this) ->
        fun ~predicate:(x366 : value:float -> index:float -> array:t -> any)
          ->
          fun ?thisArg:(x367 : any option) ->
            fun () ->
              t_of_js
                (let x375 = this_to_js Obj.magic x373 in
                 Ojs.call (Ojs.get_prop_ascii x375 "filter") "apply"
                   [|x375;((let x368 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x368 "push"
                                 [|(Ojs.fun_to_js 3
                                      (fun (x370 : Ojs.t) ->
                                         fun (x371 : Ojs.t) ->
                                           fun (x372 : Ojs.t) ->
                                             any_to_js
                                               (x366
                                                  ~value:(Ojs.float_of_js
                                                            x370)
                                                  ~index:(Ojs.float_of_js
                                                            x371)
                                                  ~array:(t_of_js x372))))|]);
                            (match x367 with
                             | Some x369 ->
                                 ignore
                                   (Ojs.call x368 "push" [|(any_to_js x369)|])
                             | None -> ());
                            x368))|])
    let (find :
      'tags this ->
        predicate:(value:float -> index:float -> obj:t -> bool) ->
          ?thisArg:any -> unit -> float option)
      =
      fun (x383 : 'tags this) ->
        fun ~predicate:(x376 : value:float -> index:float -> obj:t -> bool)
          ->
          fun ?thisArg:(x377 : any option) ->
            fun () ->
              Ojs.option_of_js Ojs.float_of_js
                (let x385 = this_to_js Obj.magic x383 in
                 Ojs.call (Ojs.get_prop_ascii x385 "find") "apply"
                   [|x385;((let x378 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x378 "push"
                                 [|(Ojs.fun_to_js 3
                                      (fun (x380 : Ojs.t) ->
                                         fun (x381 : Ojs.t) ->
                                           fun (x382 : Ojs.t) ->
                                             Ojs.bool_to_js
                                               (x376
                                                  ~value:(Ojs.float_of_js
                                                            x380)
                                                  ~index:(Ojs.float_of_js
                                                            x381)
                                                  ~obj:(t_of_js x382))))|]);
                            (match x377 with
                             | Some x379 ->
                                 ignore
                                   (Ojs.call x378 "push" [|(any_to_js x379)|])
                             | None -> ());
                            x378))|])
    let (findIndex :
      'tags this ->
        predicate:(value:float -> index:float -> obj:t -> bool) ->
          ?thisArg:any -> unit -> float)
      =
      fun (x394 : 'tags this) ->
        fun ~predicate:(x387 : value:float -> index:float -> obj:t -> bool)
          ->
          fun ?thisArg:(x388 : any option) ->
            fun () ->
              Ojs.float_of_js
                (let x396 = this_to_js Obj.magic x394 in
                 Ojs.call (Ojs.get_prop_ascii x396 "findIndex") "apply"
                   [|x396;((let x389 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x389 "push"
                                 [|(Ojs.fun_to_js 3
                                      (fun (x391 : Ojs.t) ->
                                         fun (x392 : Ojs.t) ->
                                           fun (x393 : Ojs.t) ->
                                             Ojs.bool_to_js
                                               (x387
                                                  ~value:(Ojs.float_of_js
                                                            x391)
                                                  ~index:(Ojs.float_of_js
                                                            x392)
                                                  ~obj:(t_of_js x393))))|]);
                            (match x388 with
                             | Some x390 ->
                                 ignore
                                   (Ojs.call x389 "push" [|(any_to_js x390)|])
                             | None -> ());
                            x389))|])
    let (forEach :
      'tags this ->
        callbackfn:(value:float -> index:float -> array:t -> unit) ->
          ?thisArg:any -> unit -> unit)
      =
      fun (x404 : 'tags this) ->
        fun
          ~callbackfn:(x397 : value:float -> index:float -> array:t -> unit)
          ->
          fun ?thisArg:(x398 : any option) ->
            fun () ->
              ignore
                (let x406 = this_to_js Obj.magic x404 in
                 Ojs.call (Ojs.get_prop_ascii x406 "forEach") "apply"
                   [|x406;((let x399 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x399 "push"
                                 [|(Ojs.fun_to_js 3
                                      (fun (x401 : Ojs.t) ->
                                         fun (x402 : Ojs.t) ->
                                           fun (x403 : Ojs.t) ->
                                             x397
                                               ~value:(Ojs.float_of_js x401)
                                               ~index:(Ojs.float_of_js x402)
                                               ~array:(t_of_js x403)))|]);
                            (match x398 with
                             | Some x400 ->
                                 ignore
                                   (Ojs.call x399 "push" [|(any_to_js x400)|])
                             | None -> ());
                            x399))|])
    let (indexOf :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> float)
      =
      fun (x411 : 'tags this) ->
        fun ~searchElement:(x407 : float) ->
          fun ?fromIndex:(x408 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x413 = this_to_js Obj.magic x411 in
                 Ojs.call (Ojs.get_prop_ascii x413 "indexOf") "apply"
                   [|x413;((let x409 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x409 "push"
                                 [|(Ojs.float_to_js x407)|]);
                            (match x408 with
                             | Some x410 ->
                                 ignore
                                   (Ojs.call x409 "push"
                                      [|(Ojs.float_to_js x410)|])
                             | None -> ());
                            x409))|])
    let (join : 'tags this -> ?separator:string -> unit -> string) =
      fun (x417 : 'tags this) ->
        fun ?separator:(x414 : string option) ->
          fun () ->
            Ojs.string_of_js
              (let x419 = this_to_js Obj.magic x417 in
               Ojs.call (Ojs.get_prop_ascii x419 "join") "apply"
                 [|x419;((let x415 =
                            Ojs.new_obj
                              (Ojs.get_prop_ascii Ojs.global "Array") 
                              [||] in
                          (match x414 with
                           | Some x416 ->
                               ignore
                                 (Ojs.call x415 "push"
                                    [|(Ojs.string_to_js x416)|])
                           | None -> ());
                          x415))|])
    let (lastIndexOf :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> float)
      =
      fun (x424 : 'tags this) ->
        fun ~searchElement:(x420 : float) ->
          fun ?fromIndex:(x421 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x426 = this_to_js Obj.magic x424 in
                 Ojs.call (Ojs.get_prop_ascii x426 "lastIndexOf") "apply"
                   [|x426;((let x422 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x422 "push"
                                 [|(Ojs.float_to_js x420)|]);
                            (match x421 with
                             | Some x423 ->
                                 ignore
                                   (Ojs.call x422 "push"
                                      [|(Ojs.float_to_js x423)|])
                             | None -> ());
                            x422))|])
    let (get_length : 'tags this -> float) =
      fun (x427 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x427) "length")
    let (map :
      'tags this ->
        callbackfn:(value:float -> index:float -> array:t -> float) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x436 : 'tags this) ->
        fun
          ~callbackfn:(x429 : value:float -> index:float -> array:t -> float)
          ->
          fun ?thisArg:(x430 : any option) ->
            fun () ->
              t_of_js
                (let x438 = this_to_js Obj.magic x436 in
                 Ojs.call (Ojs.get_prop_ascii x438 "map") "apply"
                   [|x438;((let x431 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x431 "push"
                                 [|(Ojs.fun_to_js 3
                                      (fun (x433 : Ojs.t) ->
                                         fun (x434 : Ojs.t) ->
                                           fun (x435 : Ojs.t) ->
                                             Ojs.float_to_js
                                               (x429
                                                  ~value:(Ojs.float_of_js
                                                            x433)
                                                  ~index:(Ojs.float_of_js
                                                            x434)
                                                  ~array:(t_of_js x435))))|]);
                            (match x430 with
                             | Some x432 ->
                                 ignore
                                   (Ojs.call x431 "push" [|(any_to_js x432)|])
                             | None -> ());
                            x431))|])
    let (reduce :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> float)
      =
      fun (x444 : 'tags this) ->
        fun
          ~callbackfn:(x439 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x444) "reduce"
               [|(Ojs.fun_to_js 4
                    (fun (x440 : Ojs.t) ->
                       fun (x441 : Ojs.t) ->
                         fun (x442 : Ojs.t) ->
                           fun (x443 : Ojs.t) ->
                             Ojs.float_to_js
                               (x439 ~previousValue:(Ojs.float_of_js x440)
                                  ~currentValue:(Ojs.float_of_js x441)
                                  ~currentIndex:(Ojs.float_of_js x442)
                                  ~array:(t_of_js x443))))|])
    let (reduce' :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> initialValue:float -> float)
      =
      fun (x452 : 'tags this) ->
        fun
          ~callbackfn:(x446 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          fun ~initialValue:(x451 : float) ->
            Ojs.float_of_js
              (Ojs.call (this_to_js Obj.magic x452) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x447 : Ojs.t) ->
                         fun (x448 : Ojs.t) ->
                           fun (x449 : Ojs.t) ->
                             fun (x450 : Ojs.t) ->
                               Ojs.float_to_js
                                 (x446 ~previousValue:(Ojs.float_of_js x447)
                                    ~currentValue:(Ojs.float_of_js x448)
                                    ~currentIndex:(Ojs.float_of_js x449)
                                    ~array:(t_of_js x450))));(Ojs.float_to_js
                                                                x451)|])
    let (reduce'' :
      'tags this ->
        callbackfn:(previousValue:'U ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x460 : 'tags this) ->
        fun
          ~callbackfn:(x454 :
                        previousValue:'U ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x459 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic x460) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x455 : Ojs.t) ->
                         fun (x456 : Ojs.t) ->
                           fun (x457 : Ojs.t) ->
                             fun (x458 : Ojs.t) ->
                               Obj.magic
                                 (x454 ~previousValue:(Obj.magic x455)
                                    ~currentValue:(Ojs.float_of_js x456)
                                    ~currentIndex:(Ojs.float_of_js x457)
                                    ~array:(t_of_js x458))));(Obj.magic x459)|])
    let (reduceRight :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> float)
      =
      fun (x467 : 'tags this) ->
        fun
          ~callbackfn:(x462 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x467) "reduceRight"
               [|(Ojs.fun_to_js 4
                    (fun (x463 : Ojs.t) ->
                       fun (x464 : Ojs.t) ->
                         fun (x465 : Ojs.t) ->
                           fun (x466 : Ojs.t) ->
                             Ojs.float_to_js
                               (x462 ~previousValue:(Ojs.float_of_js x463)
                                  ~currentValue:(Ojs.float_of_js x464)
                                  ~currentIndex:(Ojs.float_of_js x465)
                                  ~array:(t_of_js x466))))|])
    let (reduceRight' :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> initialValue:float -> float)
      =
      fun (x475 : 'tags this) ->
        fun
          ~callbackfn:(x469 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          fun ~initialValue:(x474 : float) ->
            Ojs.float_of_js
              (Ojs.call (this_to_js Obj.magic x475) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x470 : Ojs.t) ->
                         fun (x471 : Ojs.t) ->
                           fun (x472 : Ojs.t) ->
                             fun (x473 : Ojs.t) ->
                               Ojs.float_to_js
                                 (x469 ~previousValue:(Ojs.float_of_js x470)
                                    ~currentValue:(Ojs.float_of_js x471)
                                    ~currentIndex:(Ojs.float_of_js x472)
                                    ~array:(t_of_js x473))));(Ojs.float_to_js
                                                                x474)|])
    let (reduceRight'' :
      'tags this ->
        callbackfn:(previousValue:'U ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x483 : 'tags this) ->
        fun
          ~callbackfn:(x477 :
                        previousValue:'U ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x482 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic x483) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x478 : Ojs.t) ->
                         fun (x479 : Ojs.t) ->
                           fun (x480 : Ojs.t) ->
                             fun (x481 : Ojs.t) ->
                               Obj.magic
                                 (x477 ~previousValue:(Obj.magic x478)
                                    ~currentValue:(Ojs.float_of_js x479)
                                    ~currentIndex:(Ojs.float_of_js x480)
                                    ~array:(t_of_js x481))));(Obj.magic x482)|])
    let (reverse : 'tags this -> t) =
      fun (x485 : 'tags this) ->
        t_of_js (Ojs.call (this_to_js Obj.magic x485) "reverse" [||])
    let (set_ :
      'tags this -> array:float ArrayLike.t -> ?offset:float -> unit -> unit)
      =
      fun (x492 : 'tags this) ->
        fun ~array:(x487 : float ArrayLike.t) ->
          fun ?offset:(x488 : float option) ->
            fun () ->
              ignore
                (let x494 = this_to_js Obj.magic x492 in
                 Ojs.call (Ojs.get_prop_ascii x494 "set") "apply"
                   [|x494;((let x489 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x489 "push"
                                 [|(ArrayLike.t_to_js Ojs.float_to_js x487)|]);
                            (match x488 with
                             | Some x490 ->
                                 ignore
                                   (Ojs.call x489 "push"
                                      [|(Ojs.float_to_js x490)|])
                             | None -> ());
                            x489))|])
    let (slice : 'tags this -> ?start:float -> ?end_:float -> unit -> t) =
      fun (x500 : 'tags this) ->
        fun ?start:(x495 : float option) ->
          fun ?end_:(x496 : float option) ->
            fun () ->
              t_of_js
                (let x502 = this_to_js Obj.magic x500 in
                 Ojs.call (Ojs.get_prop_ascii x502 "slice") "apply"
                   [|x502;((let x497 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x495 with
                             | Some x499 ->
                                 ignore
                                   (Ojs.call x497 "push"
                                      [|(Ojs.float_to_js x499)|])
                             | None -> ());
                            (match x496 with
                             | Some x498 ->
                                 ignore
                                   (Ojs.call x497 "push"
                                      [|(Ojs.float_to_js x498)|])
                             | None -> ());
                            x497))|])
    let (some :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x510 : 'tags this) ->
        fun
          ~predicate:(x503 :
                       value:float -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x504 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x512 = this_to_js Obj.magic x510 in
                 Ojs.call (Ojs.get_prop_ascii x512 "some") "apply"
                   [|x512;((let x505 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x505 "push"
                                 [|(Ojs.fun_to_js 3
                                      (fun (x507 : Ojs.t) ->
                                         fun (x508 : Ojs.t) ->
                                           fun (x509 : Ojs.t) ->
                                             unknown_to_js
                                               (x503
                                                  ~value:(Ojs.float_of_js
                                                            x507)
                                                  ~index:(Ojs.float_of_js
                                                            x508)
                                                  ~array:(t_of_js x509))))|]);
                            (match x504 with
                             | Some x506 ->
                                 ignore
                                   (Ojs.call x505 "push" [|(any_to_js x506)|])
                             | None -> ());
                            x505))|])
    let (sort :
      'tags this ->
        ?compareFn:(a:float -> b:float -> float) -> unit -> 'tags this)
      =
      fun (x518 : 'tags this) ->
        fun ?compareFn:(x513 : (a:float -> b:float -> float) option) ->
          fun () ->
            this_of_js Obj.magic
              (let x520 = this_to_js Obj.magic x518 in
               Ojs.call (Ojs.get_prop_ascii x520 "sort") "apply"
                 [|x520;((let x514 =
                            Ojs.new_obj
                              (Ojs.get_prop_ascii Ojs.global "Array") 
                              [||] in
                          (match x513 with
                           | Some x515 ->
                               ignore
                                 (Ojs.call x514 "push"
                                    [|(Ojs.fun_to_js 2
                                         (fun (x516 : Ojs.t) ->
                                            fun (x517 : Ojs.t) ->
                                              Ojs.float_to_js
                                                (x515
                                                   ~a:(Ojs.float_of_js x516)
                                                   ~b:(Ojs.float_of_js x517))))|])
                           | None -> ());
                          x514))|])
    let (subarray : 'tags this -> ?begin_:float -> ?end_:float -> unit -> t)
      =
      fun (x527 : 'tags this) ->
        fun ?begin_:(x522 : float option) ->
          fun ?end_:(x523 : float option) ->
            fun () ->
              t_of_js
                (let x529 = this_to_js Obj.magic x527 in
                 Ojs.call (Ojs.get_prop_ascii x529 "subarray") "apply"
                   [|x529;((let x524 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x522 with
                             | Some x526 ->
                                 ignore
                                   (Ojs.call x524 "push"
                                      [|(Ojs.float_to_js x526)|])
                             | None -> ());
                            (match x523 with
                             | Some x525 ->
                                 ignore
                                   (Ojs.call x524 "push"
                                      [|(Ojs.float_to_js x525)|])
                             | None -> ());
                            x524))|])
    let (toLocaleString : 'tags this -> string) =
      fun (x530 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x530) "toLocaleString" [||])
    let (toString : 'tags this -> string) =
      fun (x532 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x532) "toString" [||])
    let (valueOf : 'tags this -> t) =
      fun (x534 : 'tags this) ->
        t_of_js (Ojs.call (this_to_js Obj.magic x534) "valueOf" [||])
    let (get : 'tags this -> float -> float) =
      fun (x536 : 'tags this) ->
        fun (x538 : float) ->
          Ojs.float_of_js
            (Ojs.get_prop (this_to_js Obj.magic x536) (Ojs.float_to_js x538))
    let (set : 'tags this -> float -> float -> unit) =
      fun (x539 : 'tags this) ->
        fun (x541 : float) ->
          fun (x542 : float) ->
            Ojs.set_prop (this_to_js Obj.magic x539) (Ojs.float_to_js x541)
              (Ojs.float_to_js x542)
    let (create : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Uint8ClampedArray")
             [||])
    let (create' : float Iterable.t -> t) =
      fun (x543 : float Iterable.t) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Uint8ClampedArray")
             [|(Iterable.t_to_js Ojs.float_to_js x543)|])
    let (from :
      arrayLike:float Iterable.t ->
        ?mapfn:(v:float -> k:float -> float) -> ?thisArg:any -> unit -> t)
      =
      fun ~arrayLike:(x545 : float Iterable.t) ->
        fun ?mapfn:(x546 : (v:float -> k:float -> float) option) ->
          fun ?thisArg:(x547 : any option) ->
            fun () ->
              t_of_js
                (let x554 = Ojs.get_prop_ascii Ojs.global "Uint8ClampedArray" in
                 Ojs.call (Ojs.get_prop_ascii x554 "from") "apply"
                   [|x554;((let x548 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x548 "push"
                                 [|(Iterable.t_to_js Ojs.float_to_js x545)|]);
                            (match x546 with
                             | Some x550 ->
                                 ignore
                                   (Ojs.call x548 "push"
                                      [|(Ojs.fun_to_js 2
                                           (fun (x551 : Ojs.t) ->
                                              fun (x552 : Ojs.t) ->
                                                Ojs.float_to_js
                                                  (x550
                                                     ~v:(Ojs.float_of_js x551)
                                                     ~k:(Ojs.float_of_js x552))))|])
                             | None -> ());
                            (match x547 with
                             | Some x549 ->
                                 ignore
                                   (Ojs.call x548 "push" [|(any_to_js x549)|])
                             | None -> ());
                            x548))|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "Uint8ClampedArray") "prototype")
    let (create'' : float -> t) =
      fun (x555 : float) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Uint8ClampedArray")
             [|(Ojs.float_to_js x555)|])
    let (create''' :
      [ `U1 of float ArrayLike.t  | `U2 of ArrayBufferLike.t ] -> t) =
      fun (x556 : [ `U1 of float ArrayLike.t  | `U2 of ArrayBufferLike.t ])
        ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Uint8ClampedArray")
             [|((match x556 with
                 | `U1 x557 -> ArrayLike.t_to_js Ojs.float_to_js x557
                 | `U2 x559 -> ArrayBufferLike.t_to_js x559))|])
    let (create'''' :
      buffer:ArrayBufferLike.t ->
        ?byteOffset:float -> ?length:float -> unit -> t)
      =
      fun ~buffer:(x560 : ArrayBufferLike.t) ->
        fun ?byteOffset:(x561 : float option) ->
          fun ?length:(x562 : float option) ->
            fun () ->
              t_of_js
                (Ojs.new_obj_arr
                   (Ojs.get_prop_ascii Ojs.global "Uint8ClampedArray")
                   (let x563 =
                      Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                        [||] in
                    ignore
                      (Ojs.call x563 "push"
                         [|(ArrayBufferLike.t_to_js x560)|]);
                    (match x561 with
                     | Some x565 ->
                         ignore
                           (Ojs.call x563 "push" [|(Ojs.float_to_js x565)|])
                     | None -> ());
                    (match x562 with
                     | Some x564 ->
                         ignore
                           (Ojs.call x563 "push" [|(Ojs.float_to_js x564)|])
                     | None -> ());
                    x563))
    let (bytes_per_element : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "Uint8ClampedArray")
             "BYTES_PER_ELEMENT")
    let (of_ : float list -> t) =
      fun (x566 : float list) ->
        t_of_js
          (let x569 = Ojs.get_prop_ascii Ojs.global "Uint8ClampedArray" in
           Ojs.call (Ojs.get_prop_ascii x569 "of") "apply"
             [|x569;((let x567 =
                        Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                          [||] in
                      List.iter
                        (fun (x568 : float) ->
                           ignore
                             (Ojs.call x567 "push" [|(Ojs.float_to_js x568)|]))
                        x566;
                      x567))|])
    let (from' : float ArrayLike.t -> t) =
      fun (x570 : float ArrayLike.t) ->
        t_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Uint8ClampedArray")
             "from" [|(ArrayLike.t_to_js Ojs.float_to_js x570)|])
    let (from'' :
      arrayLike:'T ArrayLike.t ->
        mapfn:(v:'T -> k:float -> float) -> ?thisArg:any -> unit -> t)
      =
      fun ~arrayLike:(x572 : 'T ArrayLike.t) ->
        fun ~mapfn:(x573 : v:'T -> k:float -> float) ->
          fun ?thisArg:(x574 : any option) ->
            fun () ->
              t_of_js
                (let x580 = Ojs.get_prop_ascii Ojs.global "Uint8ClampedArray" in
                 Ojs.call (Ojs.get_prop_ascii x580 "from") "apply"
                   [|x580;((let x575 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x575 "push"
                                 [|(ArrayLike.t_to_js Obj.magic x572)|]);
                            ignore
                              (Ojs.call x575 "push"
                                 [|(Ojs.fun_to_js 2
                                      (fun (x577 : Ojs.t) ->
                                         fun (x578 : Ojs.t) ->
                                           Ojs.float_to_js
                                             (x573 ~v:(Obj.magic x577)
                                                ~k:(Ojs.float_of_js x578))))|]);
                            (match x574 with
                             | Some x576 ->
                                 ignore
                                   (Ojs.call x575 "push" [|(any_to_js x576)|])
                             | None -> ());
                            x575))|])
    let cast_from = Obj.magic
  end
module ErrorOptions =
  struct
    type t = [ `ErrorOptions ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type tags = [ `ErrorOptions ]
    type 'tags this = 'tags intf constraint 'tags = [> `ErrorOptions ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x583 : Ojs.t) -> intf_of_js __tags_of_js x583
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x581 : __tags intf) -> intf_to_js __tags_to_js x581
    let (get_cause : 'tags this -> unknown option) =
      fun (x585 : 'tags this) ->
        Ojs.option_of_js unknown_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x585) "cause")
    let (set_cause : 'tags this -> unknown -> unit) =
      fun (x588 : 'tags this) ->
        fun (x589 : unknown) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x588) "cause"
            (unknown_to_js x589)
    let (create : ?cause:unknown -> unit -> t) =
      fun ?cause:(x591 : unknown option) ->
        fun () ->
          let x592 = Ojs.empty_obj () in
          (match x591 with
           | Some x593 ->
               Ojs.set_prop_ascii x592 "cause" (unknown_to_js x593)
           | None -> ());
          t_of_js x592
    let cast_from = Obj.magic
  end
module Error =
  struct
    type t = [ `Error ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type tags = [ `Error ]
    type 'tags this = 'tags intf constraint 'tags = [> `Error ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x596 : Ojs.t) -> intf_of_js __tags_of_js x596
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x594 : __tags intf) -> intf_to_js __tags_to_js x594
    let (get_cause : 'tags this -> unknown option) =
      fun (x598 : 'tags this) ->
        Ojs.option_of_js unknown_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x598) "cause")
    let (set_cause : 'tags this -> unknown -> unit) =
      fun (x601 : 'tags this) ->
        fun (x602 : unknown) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x601) "cause"
            (unknown_to_js x602)
    let (get_name : 'tags this -> string) =
      fun (x604 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x604) "name")
    let (set_name : 'tags this -> string -> unit) =
      fun (x606 : 'tags this) ->
        fun (x607 : string) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x606) "name"
            (Ojs.string_to_js x607)
    let (get_message : 'tags this -> string) =
      fun (x609 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x609) "message")
    let (set_message : 'tags this -> string -> unit) =
      fun (x611 : 'tags this) ->
        fun (x612 : string) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x611) "message"
            (Ojs.string_to_js x612)
    let (get_stack : 'tags this -> string option) =
      fun (x614 : 'tags this) ->
        Ojs.option_of_js Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x614) "stack")
    let (set_stack : 'tags this -> string -> unit) =
      fun (x617 : 'tags this) ->
        fun (x618 : string) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x617) "stack"
            (Ojs.string_to_js x618)
    let (create : ?message:string -> ?options:ErrorOptions.t -> unit -> t) =
      fun ?message:(x620 : string option) ->
        fun ?options:(x621 : ErrorOptions.t option) ->
          fun () ->
            t_of_js
              (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "Error")
                 (let x622 =
                    Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                  (match x620 with
                   | Some x624 ->
                       ignore
                         (Ojs.call x622 "push" [|(Ojs.string_to_js x624)|])
                   | None -> ());
                  (match x621 with
                   | Some x623 ->
                       ignore
                         (Ojs.call x622 "push"
                            [|(ErrorOptions.t_to_js x623)|])
                   | None -> ());
                  x622))
    let (invoke : ?message:string -> ?options:ErrorOptions.t -> unit -> t) =
      fun ?message:(x625 : string option) ->
        fun ?options:(x626 : ErrorOptions.t option) ->
          fun () ->
            t_of_js
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "Error") "apply"
                 [|Ojs.null;((let x627 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              (match x625 with
                               | Some x629 ->
                                   ignore
                                     (Ojs.call x627 "push"
                                        [|(Ojs.string_to_js x629)|])
                               | None -> ());
                              (match x626 with
                               | Some x628 ->
                                   ignore
                                     (Ojs.call x627 "push"
                                        [|(ErrorOptions.t_to_js x628)|])
                               | None -> ());
                              x627))|])
    let (create' : ?message:string -> unit -> t) =
      fun ?message:(x630 : string option) ->
        fun () ->
          t_of_js
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "Error")
               (let x631 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x630 with
                 | Some x632 ->
                     ignore
                       (Ojs.call x631 "push" [|(Ojs.string_to_js x632)|])
                 | None -> ());
                x631))
    let (invoke' : ?message:string -> unit -> t) =
      fun ?message:(x633 : string option) ->
        fun () ->
          t_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "Error") "apply"
               [|Ojs.null;((let x634 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x633 with
                             | Some x635 ->
                                 ignore
                                   (Ojs.call x634 "push"
                                      [|(Ojs.string_to_js x635)|])
                             | None -> ());
                            x634))|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Error")
             "prototype")
    let (create'' :
      ?cause:unknown ->
        name:string -> message:string -> ?stack:string -> unit -> t)
      =
      fun ?cause:(x636 : unknown option) ->
        fun ~name:(x637 : string) ->
          fun ~message:(x638 : string) ->
            fun ?stack:(x639 : string option) ->
              fun () ->
                let x640 = Ojs.empty_obj () in
                (match x636 with
                 | Some x642 ->
                     Ojs.set_prop_ascii x640 "cause" (unknown_to_js x642)
                 | None -> ());
                Ojs.set_prop_ascii x640 "name" (Ojs.string_to_js x637);
                Ojs.set_prop_ascii x640 "message" (Ojs.string_to_js x638);
                (match x639 with
                 | Some x641 ->
                     Ojs.set_prop_ascii x640 "stack" (Ojs.string_to_js x641)
                 | None -> ());
                t_of_js x640
    let cast_from = Obj.magic
  end
module URIError =
  struct
    type t = [ `Error  | `URIError ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type tags = [ `Error  | `URIError ]
    type 'tags this = 'tags intf constraint 'tags = [> `URIError ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x645 : Ojs.t) -> intf_of_js __tags_of_js x645
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x643 : __tags intf) -> intf_to_js __tags_to_js x643
    let (create : ?message:string -> ?options:ErrorOptions.t -> unit -> t) =
      fun ?message:(x647 : string option) ->
        fun ?options:(x648 : ErrorOptions.t option) ->
          fun () ->
            t_of_js
              (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "URIError")
                 (let x649 =
                    Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                  (match x647 with
                   | Some x651 ->
                       ignore
                         (Ojs.call x649 "push" [|(Ojs.string_to_js x651)|])
                   | None -> ());
                  (match x648 with
                   | Some x650 ->
                       ignore
                         (Ojs.call x649 "push"
                            [|(ErrorOptions.t_to_js x650)|])
                   | None -> ());
                  x649))
    let (invoke : ?message:string -> ?options:ErrorOptions.t -> unit -> t) =
      fun ?message:(x652 : string option) ->
        fun ?options:(x653 : ErrorOptions.t option) ->
          fun () ->
            t_of_js
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "URIError") "apply"
                 [|Ojs.null;((let x654 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              (match x652 with
                               | Some x656 ->
                                   ignore
                                     (Ojs.call x654 "push"
                                        [|(Ojs.string_to_js x656)|])
                               | None -> ());
                              (match x653 with
                               | Some x655 ->
                                   ignore
                                     (Ojs.call x654 "push"
                                        [|(ErrorOptions.t_to_js x655)|])
                               | None -> ());
                              x654))|])
    let (create' : ?message:string -> unit -> t) =
      fun ?message:(x657 : string option) ->
        fun () ->
          t_of_js
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "URIError")
               (let x658 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x657 with
                 | Some x659 ->
                     ignore
                       (Ojs.call x658 "push" [|(Ojs.string_to_js x659)|])
                 | None -> ());
                x658))
    let (invoke' : ?message:string -> unit -> t) =
      fun ?message:(x660 : string option) ->
        fun () ->
          t_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "URIError") "apply"
               [|Ojs.null;((let x661 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x660 with
                             | Some x662 ->
                                 ignore
                                   (Ojs.call x661 "push"
                                      [|(Ojs.string_to_js x662)|])
                             | None -> ());
                            x661))|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "URIError")
             "prototype")
    let cast_from = Obj.magic
  end
module TypeError =
  struct
    type t = [ `Error  | `TypeError ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type tags = [ `Error  | `TypeError ]
    type 'tags this = 'tags intf constraint 'tags = [> `TypeError ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x665 : Ojs.t) -> intf_of_js __tags_of_js x665
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x663 : __tags intf) -> intf_to_js __tags_to_js x663
    let (create : ?message:string -> ?options:ErrorOptions.t -> unit -> t) =
      fun ?message:(x667 : string option) ->
        fun ?options:(x668 : ErrorOptions.t option) ->
          fun () ->
            t_of_js
              (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "TypeError")
                 (let x669 =
                    Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                  (match x667 with
                   | Some x671 ->
                       ignore
                         (Ojs.call x669 "push" [|(Ojs.string_to_js x671)|])
                   | None -> ());
                  (match x668 with
                   | Some x670 ->
                       ignore
                         (Ojs.call x669 "push"
                            [|(ErrorOptions.t_to_js x670)|])
                   | None -> ());
                  x669))
    let (invoke : ?message:string -> ?options:ErrorOptions.t -> unit -> t) =
      fun ?message:(x672 : string option) ->
        fun ?options:(x673 : ErrorOptions.t option) ->
          fun () ->
            t_of_js
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "TypeError") "apply"
                 [|Ojs.null;((let x674 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              (match x672 with
                               | Some x676 ->
                                   ignore
                                     (Ojs.call x674 "push"
                                        [|(Ojs.string_to_js x676)|])
                               | None -> ());
                              (match x673 with
                               | Some x675 ->
                                   ignore
                                     (Ojs.call x674 "push"
                                        [|(ErrorOptions.t_to_js x675)|])
                               | None -> ());
                              x674))|])
    let (create' : ?message:string -> unit -> t) =
      fun ?message:(x677 : string option) ->
        fun () ->
          t_of_js
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "TypeError")
               (let x678 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x677 with
                 | Some x679 ->
                     ignore
                       (Ojs.call x678 "push" [|(Ojs.string_to_js x679)|])
                 | None -> ());
                x678))
    let (invoke' : ?message:string -> unit -> t) =
      fun ?message:(x680 : string option) ->
        fun () ->
          t_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "TypeError") "apply"
               [|Ojs.null;((let x681 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x680 with
                             | Some x682 ->
                                 ignore
                                   (Ojs.call x681 "push"
                                      [|(Ojs.string_to_js x682)|])
                             | None -> ());
                            x681))|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "TypeError")
             "prototype")
    let cast_from = Obj.magic
  end
module FlatArray =
  struct
    type ('Arr, 'Depth) t = any
    let rec t_of_js :
      'Arr 'Depth .
        (Ojs.t -> 'Arr) -> (Ojs.t -> 'Depth) -> Ojs.t -> ('Arr, 'Depth) t
      =
      fun (type __Arr) ->
        fun (type __Depth) ->
          fun (__Arr_of_js : Ojs.t -> __Arr) ->
            fun (__Depth_of_js : Ojs.t -> __Depth) ->
              fun (x684 : Ojs.t) -> any_of_js x684
    and t_to_js :
      'Arr 'Depth .
        ('Arr -> Ojs.t) -> ('Depth -> Ojs.t) -> ('Arr, 'Depth) t -> Ojs.t
      =
      fun (type __Arr) ->
        fun (type __Depth) ->
          fun (__Arr_to_js : __Arr -> Ojs.t) ->
            fun (__Depth_to_js : __Depth -> Ojs.t) ->
              fun (x683 : any) -> any_to_js x683
  end
module ConcatArray =
  struct
    type 'T t = [ `ConcatArray of 'T ] intf
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun _T -> Obj.magic
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun _T -> Obj.magic
    type 'T tags = [ `ConcatArray of 'T ]
    type ('tags, 'T) this =
      'tags intf constraint 'tags = [> `ConcatArray of 'T ]
    let rec this_of_js :
      'tags 'T .
        (Ojs.t -> 'tags) -> (Ojs.t -> 'T) -> Ojs.t -> ('tags, 'T) this
      =
      fun (type __tags) ->
        fun (type __T) ->
          fun (__tags_of_js : Ojs.t -> __tags) ->
            fun (__T_of_js : Ojs.t -> __T) ->
              fun (x687 : Ojs.t) -> intf_of_js __tags_of_js x687
    and this_to_js :
      'tags 'T .
        ('tags -> Ojs.t) -> ('T -> Ojs.t) -> ('tags, 'T) this -> Ojs.t
      =
      fun (type __tags) ->
        fun (type __T) ->
          fun (__tags_to_js : __tags -> Ojs.t) ->
            fun (__T_to_js : __T -> Ojs.t) ->
              fun (x685 : __tags intf) -> intf_to_js __tags_to_js x685
    let (get_length : ('tags, 'T) this -> float) =
      fun (x689 : ('tags, 'T) this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic Obj.magic x689) "length")
    let (get : ('tags, 'T) this -> float -> 'T) =
      fun (x692 : ('tags, 'T) this) ->
        fun (x695 : float) ->
          Obj.magic
            (Ojs.get_prop (this_to_js Obj.magic Obj.magic x692)
               (Ojs.float_to_js x695))
    let (join : ('tags, 'T) this -> ?separator:string -> unit -> string) =
      fun (x699 : ('tags, 'T) this) ->
        fun ?separator:(x696 : string option) ->
          fun () ->
            Ojs.string_of_js
              (let x702 = this_to_js Obj.magic Obj.magic x699 in
               Ojs.call (Ojs.get_prop_ascii x702 "join") "apply"
                 [|x702;((let x697 =
                            Ojs.new_obj
                              (Ojs.get_prop_ascii Ojs.global "Array") 
                              [||] in
                          (match x696 with
                           | Some x698 ->
                               ignore
                                 (Ojs.call x697 "push"
                                    [|(Ojs.string_to_js x698)|])
                           | None -> ());
                          x697))|])
    let (slice :
      ('tags, 'T) this -> ?start:float -> ?end_:float -> unit -> 'T list) =
      fun (x708 : ('tags, 'T) this) ->
        fun ?start:(x703 : float option) ->
          fun ?end_:(x704 : float option) ->
            fun () ->
              Ojs.list_of_js Obj.magic
                (let x711 = this_to_js Obj.magic Obj.magic x708 in
                 Ojs.call (Ojs.get_prop_ascii x711 "slice") "apply"
                   [|x711;((let x705 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x703 with
                             | Some x707 ->
                                 ignore
                                   (Ojs.call x705 "push"
                                      [|(Ojs.float_to_js x707)|])
                             | None -> ());
                            (match x704 with
                             | Some x706 ->
                                 ignore
                                   (Ojs.call x705 "push"
                                      [|(Ojs.float_to_js x706)|])
                             | None -> ());
                            x705))|])
    let cast_from = Obj.magic
  end
module ReadonlyArray =
  struct
    type 'T t = [ `ReadonlyArray of 'T ] intf
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun _T -> Obj.magic
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun _T -> Obj.magic
    type 'T tags = [ `ReadonlyArray of 'T ]
    type ('tags, 'T) this =
      'tags intf constraint 'tags = [> `ReadonlyArray of 'T ]
    let rec this_of_js :
      'tags 'T .
        (Ojs.t -> 'tags) -> (Ojs.t -> 'T) -> Ojs.t -> ('tags, 'T) this
      =
      fun (type __tags) ->
        fun (type __T) ->
          fun (__tags_of_js : Ojs.t -> __tags) ->
            fun (__T_of_js : Ojs.t -> __T) ->
              fun (x715 : Ojs.t) -> intf_of_js __tags_of_js x715
    and this_to_js :
      'tags 'T .
        ('tags -> Ojs.t) -> ('T -> Ojs.t) -> ('tags, 'T) this -> Ojs.t
      =
      fun (type __tags) ->
        fun (type __T) ->
          fun (__tags_to_js : __tags -> Ojs.t) ->
            fun (__T_to_js : __T -> Ojs.t) ->
              fun (x713 : __tags intf) -> intf_to_js __tags_to_js x713
    let (findLast :
      ('tags, 'T) this ->
        predicate:(value:'T -> index:float -> array:'T list -> bool) ->
          ?thisArg:any -> unit -> 'S option)
      =
      fun (x725 : ('tags, 'T) this) ->
        fun
          ~predicate:(x717 :
                       value:'T -> index:float -> array:'T list -> bool)
          ->
          fun ?thisArg:(x718 : any option) ->
            fun () ->
              Ojs.option_of_js Obj.magic
                (let x728 = this_to_js Obj.magic Obj.magic x725 in
                 Ojs.call (Ojs.get_prop_ascii x728 "findLast") "apply"
                   [|x728;((let x719 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x719 "push"
                                 [|(Ojs.fun_to_js 3
                                      (fun (x721 : Ojs.t) ->
                                         fun (x722 : Ojs.t) ->
                                           fun (x723 : Ojs.t) ->
                                             Ojs.bool_to_js
                                               (x717 ~value:(Obj.magic x721)
                                                  ~index:(Ojs.float_of_js
                                                            x722)
                                                  ~array:(Ojs.list_of_js
                                                            Obj.magic x723))))|]);
                            (match x718 with
                             | Some x720 ->
                                 ignore
                                   (Ojs.call x719 "push" [|(any_to_js x720)|])
                             | None -> ());
                            x719))|])
    let (findLast' :
      ('tags, 'T) this ->
        predicate:(value:'T -> index:float -> array:'T list -> unknown) ->
          ?thisArg:any -> unit -> 'T option)
      =
      fun (x738 : ('tags, 'T) this) ->
        fun
          ~predicate:(x730 :
                       value:'T -> index:float -> array:'T list -> unknown)
          ->
          fun ?thisArg:(x731 : any option) ->
            fun () ->
              Ojs.option_of_js Obj.magic
                (let x741 = this_to_js Obj.magic Obj.magic x738 in
                 Ojs.call (Ojs.get_prop_ascii x741 "findLast") "apply"
                   [|x741;((let x732 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x732 "push"
                                 [|(Ojs.fun_to_js 3
                                      (fun (x734 : Ojs.t) ->
                                         fun (x735 : Ojs.t) ->
                                           fun (x736 : Ojs.t) ->
                                             unknown_to_js
                                               (x730 ~value:(Obj.magic x734)
                                                  ~index:(Ojs.float_of_js
                                                            x735)
                                                  ~array:(Ojs.list_of_js
                                                            Obj.magic x736))))|]);
                            (match x731 with
                             | Some x733 ->
                                 ignore
                                   (Ojs.call x732 "push" [|(any_to_js x733)|])
                             | None -> ());
                            x732))|])
    let (findLastIndex :
      ('tags, 'T) this ->
        predicate:(value:'T -> index:float -> array:'T list -> unknown) ->
          ?thisArg:any -> unit -> float)
      =
      fun (x751 : ('tags, 'T) this) ->
        fun
          ~predicate:(x743 :
                       value:'T -> index:float -> array:'T list -> unknown)
          ->
          fun ?thisArg:(x744 : any option) ->
            fun () ->
              Ojs.float_of_js
                (let x754 = this_to_js Obj.magic Obj.magic x751 in
                 Ojs.call (Ojs.get_prop_ascii x754 "findLastIndex") "apply"
                   [|x754;((let x745 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x745 "push"
                                 [|(Ojs.fun_to_js 3
                                      (fun (x747 : Ojs.t) ->
                                         fun (x748 : Ojs.t) ->
                                           fun (x749 : Ojs.t) ->
                                             unknown_to_js
                                               (x743 ~value:(Obj.magic x747)
                                                  ~index:(Ojs.float_of_js
                                                            x748)
                                                  ~array:(Ojs.list_of_js
                                                            Obj.magic x749))))|]);
                            (match x744 with
                             | Some x746 ->
                                 ignore
                                   (Ojs.call x745 "push" [|(any_to_js x746)|])
                             | None -> ());
                            x745))|])
    let (at : ('tags, 'T) this -> index:float -> 'T option) =
      fun (x756 : ('tags, 'T) this) ->
        fun ~index:(x755 : float) ->
          Ojs.option_of_js Obj.magic
            (Ojs.call (this_to_js Obj.magic Obj.magic x756) "at"
               [|(Ojs.float_to_js x755)|])
    let (flatMap :
      ('tags, 'T) this ->
        callback:(this:'This ->
                    value:'T ->
                      index:float ->
                        array:'T list -> [ `U1 of 'U  | `U2 of 'U t ])
          -> ?thisArg:'This -> unit -> 'U list)
      =
      fun (x772 : ('tags, 'T) this) ->
        fun
          ~callback:(x760 :
                      this:'This ->
                        value:'T ->
                          index:float ->
                            array:'T list -> [ `U1 of 'U  | `U2 of 'U t ])
          ->
          fun ?thisArg:(x761 : 'This option) ->
            fun () ->
              Ojs.list_of_js Obj.magic
                (let x775 = this_to_js Obj.magic Obj.magic x772 in
                 Ojs.call (Ojs.get_prop_ascii x775 "flatMap") "apply"
                   [|x775;((let x762 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x762 "push"
                                 [|(Ojs.fun_to_js 4
                                      (fun (x764 : Ojs.t) ->
                                         fun (x765 : Ojs.t) ->
                                           fun (x766 : Ojs.t) ->
                                             fun (x767 : Ojs.t) ->
                                               match x760
                                                       ~this:(Obj.magic x764)
                                                       ~value:(Obj.magic x765)
                                                       ~index:(Ojs.float_of_js
                                                                 x766)
                                                       ~array:(Ojs.list_of_js
                                                                 Obj.magic
                                                                 x767)
                                               with
                                               | `U1 x769 -> Obj.magic x769
                                               | `U2 x770 ->
                                                   t_to_js Obj.magic x770))|]);
                            (match x761 with
                             | Some x763 ->
                                 ignore
                                   (Ojs.call x762 "push" [|(Obj.magic x763)|])
                             | None -> ());
                            x762))|])
    let (flat :
      ('tags, 'T) this ->
        this:'A -> ?depth:'D -> unit -> ('A, 'D) FlatArray.t list)
      =
      fun (x781 : ('tags, 'T) this) ->
        fun ~this:(x777 : 'A) ->
          fun ?depth:(x778 : 'D option) ->
            fun () ->
              Ojs.list_of_js
                (fun (x785 : Ojs.t) ->
                   FlatArray.t_of_js Obj.magic Obj.magic x785)
                (let x784 = this_to_js Obj.magic Obj.magic x781 in
                 Ojs.call (Ojs.get_prop_ascii x784 "flat") "apply"
                   [|x784;((let x779 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x779 "push" [|(Obj.magic x777)|]);
                            (match x778 with
                             | Some x780 ->
                                 ignore
                                   (Ojs.call x779 "push" [|(Obj.magic x780)|])
                             | None -> ());
                            x779))|])
    let (includes :
      ('tags, 'T) this ->
        searchElement:'T -> ?fromIndex:float -> unit -> bool)
      =
      fun (x792 : ('tags, 'T) this) ->
        fun ~searchElement:(x788 : 'T) ->
          fun ?fromIndex:(x789 : float option) ->
            fun () ->
              Ojs.bool_of_js
                (let x795 = this_to_js Obj.magic Obj.magic x792 in
                 Ojs.call (Ojs.get_prop_ascii x795 "includes") "apply"
                   [|x795;((let x790 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x790 "push" [|(Obj.magic x788)|]);
                            (match x789 with
                             | Some x791 ->
                                 ignore
                                   (Ojs.call x790 "push"
                                      [|(Ojs.float_to_js x791)|])
                             | None -> ());
                            x790))|])
    let (entries : ('tags, 'T) this -> (float * 'T) IterableIterator.t) =
      fun (x796 : ('tags, 'T) this) ->
        IterableIterator.t_of_js
          (fun (x799 : Ojs.t) ->
             let x800 = x799 in
             ((Ojs.float_of_js (Ojs.array_get x800 0)),
               (Obj.magic (Ojs.array_get x800 1))))
          (Ojs.call (this_to_js Obj.magic Obj.magic x796) "entries" [||])
    let (keys : ('tags, 'T) this -> float IterableIterator.t) =
      fun (x801 : ('tags, 'T) this) ->
        IterableIterator.t_of_js Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic Obj.magic x801) "keys" [||])
    let (values : ('tags, 'T) this -> 'T IterableIterator.t) =
      fun (x805 : ('tags, 'T) this) ->
        IterableIterator.t_of_js Obj.magic
          (Ojs.call (this_to_js Obj.magic Obj.magic x805) "values" [||])
    let (find :
      ('tags, 'T) this ->
        predicate:(value:'T -> index:float -> obj:'T list -> bool) ->
          ?thisArg:any -> unit -> 'S option)
      =
      fun (x817 : ('tags, 'T) this) ->
        fun
          ~predicate:(x809 : value:'T -> index:float -> obj:'T list -> bool)
          ->
          fun ?thisArg:(x810 : any option) ->
            fun () ->
              Ojs.option_of_js Obj.magic
                (let x820 = this_to_js Obj.magic Obj.magic x817 in
                 Ojs.call (Ojs.get_prop_ascii x820 "find") "apply"
                   [|x820;((let x811 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x811 "push"
                                 [|(Ojs.fun_to_js 3
                                      (fun (x813 : Ojs.t) ->
                                         fun (x814 : Ojs.t) ->
                                           fun (x815 : Ojs.t) ->
                                             Ojs.bool_to_js
                                               (x809 ~value:(Obj.magic x813)
                                                  ~index:(Ojs.float_of_js
                                                            x814)
                                                  ~obj:(Ojs.list_of_js
                                                          Obj.magic x815))))|]);
                            (match x810 with
                             | Some x812 ->
                                 ignore
                                   (Ojs.call x811 "push" [|(any_to_js x812)|])
                             | None -> ());
                            x811))|])
    let (find' :
      ('tags, 'T) this ->
        predicate:(value:'T -> index:float -> obj:'T list -> unknown) ->
          ?thisArg:any -> unit -> 'T option)
      =
      fun (x830 : ('tags, 'T) this) ->
        fun
          ~predicate:(x822 :
                       value:'T -> index:float -> obj:'T list -> unknown)
          ->
          fun ?thisArg:(x823 : any option) ->
            fun () ->
              Ojs.option_of_js Obj.magic
                (let x833 = this_to_js Obj.magic Obj.magic x830 in
                 Ojs.call (Ojs.get_prop_ascii x833 "find") "apply"
                   [|x833;((let x824 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x824 "push"
                                 [|(Ojs.fun_to_js 3
                                      (fun (x826 : Ojs.t) ->
                                         fun (x827 : Ojs.t) ->
                                           fun (x828 : Ojs.t) ->
                                             unknown_to_js
                                               (x822 ~value:(Obj.magic x826)
                                                  ~index:(Ojs.float_of_js
                                                            x827)
                                                  ~obj:(Ojs.list_of_js
                                                          Obj.magic x828))))|]);
                            (match x823 with
                             | Some x825 ->
                                 ignore
                                   (Ojs.call x824 "push" [|(any_to_js x825)|])
                             | None -> ());
                            x824))|])
    let (findIndex :
      ('tags, 'T) this ->
        predicate:(value:'T -> index:float -> obj:'T list -> unknown) ->
          ?thisArg:any -> unit -> float)
      =
      fun (x843 : ('tags, 'T) this) ->
        fun
          ~predicate:(x835 :
                       value:'T -> index:float -> obj:'T list -> unknown)
          ->
          fun ?thisArg:(x836 : any option) ->
            fun () ->
              Ojs.float_of_js
                (let x846 = this_to_js Obj.magic Obj.magic x843 in
                 Ojs.call (Ojs.get_prop_ascii x846 "findIndex") "apply"
                   [|x846;((let x837 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x837 "push"
                                 [|(Ojs.fun_to_js 3
                                      (fun (x839 : Ojs.t) ->
                                         fun (x840 : Ojs.t) ->
                                           fun (x841 : Ojs.t) ->
                                             unknown_to_js
                                               (x835 ~value:(Obj.magic x839)
                                                  ~index:(Ojs.float_of_js
                                                            x840)
                                                  ~obj:(Ojs.list_of_js
                                                          Obj.magic x841))))|]);
                            (match x836 with
                             | Some x838 ->
                                 ignore
                                   (Ojs.call x837 "push" [|(any_to_js x838)|])
                             | None -> ());
                            x837))|])
    let (get_length : ('tags, 'T) this -> float) =
      fun (x847 : ('tags, 'T) this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic Obj.magic x847) "length")
    let (toString : ('tags, 'T) this -> string) =
      fun (x850 : ('tags, 'T) this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic Obj.magic x850) "toString" [||])
    let (toLocaleString : ('tags, 'T) this -> string) =
      fun (x853 : ('tags, 'T) this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic Obj.magic x853) "toLocaleString"
             [||])
    let (concat : ('tags, 'T) this -> items:'T ConcatArray.t list -> 'T list)
      =
      fun (x860 : ('tags, 'T) this) ->
        fun ~items:(x856 : 'T ConcatArray.t list) ->
          Ojs.list_of_js Obj.magic
            (let x863 = this_to_js Obj.magic Obj.magic x860 in
             Ojs.call (Ojs.get_prop_ascii x863 "concat") "apply"
               [|x863;((let x857 =
                          Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                            [||] in
                        List.iter
                          (fun (x858 : 'T ConcatArray.t) ->
                             ignore
                               (Ojs.call x857 "push"
                                  [|(ConcatArray.t_to_js Obj.magic x858)|]))
                          x856;
                        x857))|])
    let (concat' :
      ('tags, 'T) this ->
        items:[ `U1 of 'T  | `U2 of 'T ConcatArray.t ] list -> 'T list)
      =
      fun (x871 : ('tags, 'T) this) ->
        fun ~items:(x865 : [ `U1 of 'T  | `U2 of 'T ConcatArray.t ] list) ->
          Ojs.list_of_js Obj.magic
            (let x874 = this_to_js Obj.magic Obj.magic x871 in
             Ojs.call (Ojs.get_prop_ascii x874 "concat") "apply"
               [|x874;((let x866 =
                          Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                            [||] in
                        List.iter
                          (fun
                             (x867 :
                               [ `U1 of 'T  | `U2 of 'T ConcatArray.t ])
                             ->
                             ignore
                               (Ojs.call x866 "push"
                                  [|((match x867 with
                                      | `U1 x868 -> Obj.magic x868
                                      | `U2 x869 ->
                                          ConcatArray.t_to_js Obj.magic x869))|]))
                          x865;
                        x866))|])
    let (join : ('tags, 'T) this -> ?separator:string -> unit -> string) =
      fun (x879 : ('tags, 'T) this) ->
        fun ?separator:(x876 : string option) ->
          fun () ->
            Ojs.string_of_js
              (let x882 = this_to_js Obj.magic Obj.magic x879 in
               Ojs.call (Ojs.get_prop_ascii x882 "join") "apply"
                 [|x882;((let x877 =
                            Ojs.new_obj
                              (Ojs.get_prop_ascii Ojs.global "Array") 
                              [||] in
                          (match x876 with
                           | Some x878 ->
                               ignore
                                 (Ojs.call x877 "push"
                                    [|(Ojs.string_to_js x878)|])
                           | None -> ());
                          x877))|])
    let (slice :
      ('tags, 'T) this -> ?start:float -> ?end_:float -> unit -> 'T list) =
      fun (x888 : ('tags, 'T) this) ->
        fun ?start:(x883 : float option) ->
          fun ?end_:(x884 : float option) ->
            fun () ->
              Ojs.list_of_js Obj.magic
                (let x891 = this_to_js Obj.magic Obj.magic x888 in
                 Ojs.call (Ojs.get_prop_ascii x891 "slice") "apply"
                   [|x891;((let x885 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x883 with
                             | Some x887 ->
                                 ignore
                                   (Ojs.call x885 "push"
                                      [|(Ojs.float_to_js x887)|])
                             | None -> ());
                            (match x884 with
                             | Some x886 ->
                                 ignore
                                   (Ojs.call x885 "push"
                                      [|(Ojs.float_to_js x886)|])
                             | None -> ());
                            x885))|])
    let (indexOf :
      ('tags, 'T) this ->
        searchElement:'T -> ?fromIndex:float -> unit -> float)
      =
      fun (x897 : ('tags, 'T) this) ->
        fun ~searchElement:(x893 : 'T) ->
          fun ?fromIndex:(x894 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x900 = this_to_js Obj.magic Obj.magic x897 in
                 Ojs.call (Ojs.get_prop_ascii x900 "indexOf") "apply"
                   [|x900;((let x895 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x895 "push" [|(Obj.magic x893)|]);
                            (match x894 with
                             | Some x896 ->
                                 ignore
                                   (Ojs.call x895 "push"
                                      [|(Ojs.float_to_js x896)|])
                             | None -> ());
                            x895))|])
    let (lastIndexOf :
      ('tags, 'T) this ->
        searchElement:'T -> ?fromIndex:float -> unit -> float)
      =
      fun (x905 : ('tags, 'T) this) ->
        fun ~searchElement:(x901 : 'T) ->
          fun ?fromIndex:(x902 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x908 = this_to_js Obj.magic Obj.magic x905 in
                 Ojs.call (Ojs.get_prop_ascii x908 "lastIndexOf") "apply"
                   [|x908;((let x903 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x903 "push" [|(Obj.magic x901)|]);
                            (match x902 with
                             | Some x904 ->
                                 ignore
                                   (Ojs.call x903 "push"
                                      [|(Ojs.float_to_js x904)|])
                             | None -> ());
                            x903))|])
    let (every :
      ('tags, 'T) this ->
        predicate:(value:'T -> index:float -> array:'T list -> bool) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x917 : ('tags, 'T) this) ->
        fun
          ~predicate:(x909 :
                       value:'T -> index:float -> array:'T list -> bool)
          ->
          fun ?thisArg:(x910 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x920 = this_to_js Obj.magic Obj.magic x917 in
                 Ojs.call (Ojs.get_prop_ascii x920 "every") "apply"
                   [|x920;((let x911 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x911 "push"
                                 [|(Ojs.fun_to_js 3
                                      (fun (x913 : Ojs.t) ->
                                         fun (x914 : Ojs.t) ->
                                           fun (x915 : Ojs.t) ->
                                             Ojs.bool_to_js
                                               (x909 ~value:(Obj.magic x913)
                                                  ~index:(Ojs.float_of_js
                                                            x914)
                                                  ~array:(Ojs.list_of_js
                                                            Obj.magic x915))))|]);
                            (match x910 with
                             | Some x912 ->
                                 ignore
                                   (Ojs.call x911 "push" [|(any_to_js x912)|])
                             | None -> ());
                            x911))|])
    let (every' :
      ('tags, 'T) this ->
        predicate:(value:'T -> index:float -> array:'T list -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x929 : ('tags, 'T) this) ->
        fun
          ~predicate:(x921 :
                       value:'T -> index:float -> array:'T list -> unknown)
          ->
          fun ?thisArg:(x922 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x932 = this_to_js Obj.magic Obj.magic x929 in
                 Ojs.call (Ojs.get_prop_ascii x932 "every") "apply"
                   [|x932;((let x923 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x923 "push"
                                 [|(Ojs.fun_to_js 3
                                      (fun (x925 : Ojs.t) ->
                                         fun (x926 : Ojs.t) ->
                                           fun (x927 : Ojs.t) ->
                                             unknown_to_js
                                               (x921 ~value:(Obj.magic x925)
                                                  ~index:(Ojs.float_of_js
                                                            x926)
                                                  ~array:(Ojs.list_of_js
                                                            Obj.magic x927))))|]);
                            (match x922 with
                             | Some x924 ->
                                 ignore
                                   (Ojs.call x923 "push" [|(any_to_js x924)|])
                             | None -> ());
                            x923))|])
    let (some :
      ('tags, 'T) this ->
        predicate:(value:'T -> index:float -> array:'T list -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x941 : ('tags, 'T) this) ->
        fun
          ~predicate:(x933 :
                       value:'T -> index:float -> array:'T list -> unknown)
          ->
          fun ?thisArg:(x934 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x944 = this_to_js Obj.magic Obj.magic x941 in
                 Ojs.call (Ojs.get_prop_ascii x944 "some") "apply"
                   [|x944;((let x935 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x935 "push"
                                 [|(Ojs.fun_to_js 3
                                      (fun (x937 : Ojs.t) ->
                                         fun (x938 : Ojs.t) ->
                                           fun (x939 : Ojs.t) ->
                                             unknown_to_js
                                               (x933 ~value:(Obj.magic x937)
                                                  ~index:(Ojs.float_of_js
                                                            x938)
                                                  ~array:(Ojs.list_of_js
                                                            Obj.magic x939))))|]);
                            (match x934 with
                             | Some x936 ->
                                 ignore
                                   (Ojs.call x935 "push" [|(any_to_js x936)|])
                             | None -> ());
                            x935))|])
    let (forEach :
      ('tags, 'T) this ->
        callbackfn:(value:'T -> index:float -> array:'T list -> unit) ->
          ?thisArg:any -> unit -> unit)
      =
      fun (x953 : ('tags, 'T) this) ->
        fun
          ~callbackfn:(x945 :
                        value:'T -> index:float -> array:'T list -> unit)
          ->
          fun ?thisArg:(x946 : any option) ->
            fun () ->
              ignore
                (let x956 = this_to_js Obj.magic Obj.magic x953 in
                 Ojs.call (Ojs.get_prop_ascii x956 "forEach") "apply"
                   [|x956;((let x947 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x947 "push"
                                 [|(Ojs.fun_to_js 3
                                      (fun (x949 : Ojs.t) ->
                                         fun (x950 : Ojs.t) ->
                                           fun (x951 : Ojs.t) ->
                                             x945 ~value:(Obj.magic x949)
                                               ~index:(Ojs.float_of_js x950)
                                               ~array:(Ojs.list_of_js
                                                         Obj.magic x951)))|]);
                            (match x946 with
                             | Some x948 ->
                                 ignore
                                   (Ojs.call x947 "push" [|(any_to_js x948)|])
                             | None -> ());
                            x947))|])
    let (map :
      ('tags, 'T) this ->
        callbackfn:(value:'T -> index:float -> array:'T list -> 'U) ->
          ?thisArg:any -> unit -> 'U list)
      =
      fun (x965 : ('tags, 'T) this) ->
        fun
          ~callbackfn:(x957 : value:'T -> index:float -> array:'T list -> 'U)
          ->
          fun ?thisArg:(x958 : any option) ->
            fun () ->
              Ojs.list_of_js Obj.magic
                (let x968 = this_to_js Obj.magic Obj.magic x965 in
                 Ojs.call (Ojs.get_prop_ascii x968 "map") "apply"
                   [|x968;((let x959 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x959 "push"
                                 [|(Ojs.fun_to_js 3
                                      (fun (x961 : Ojs.t) ->
                                         fun (x962 : Ojs.t) ->
                                           fun (x963 : Ojs.t) ->
                                             Obj.magic
                                               (x957 ~value:(Obj.magic x961)
                                                  ~index:(Ojs.float_of_js
                                                            x962)
                                                  ~array:(Ojs.list_of_js
                                                            Obj.magic x963))))|]);
                            (match x958 with
                             | Some x960 ->
                                 ignore
                                   (Ojs.call x959 "push" [|(any_to_js x960)|])
                             | None -> ());
                            x959))|])
    let (filter :
      ('tags, 'T) this ->
        predicate:(value:'T -> index:float -> array:'T list -> bool) ->
          ?thisArg:any -> unit -> 'S list)
      =
      fun (x978 : ('tags, 'T) this) ->
        fun
          ~predicate:(x970 :
                       value:'T -> index:float -> array:'T list -> bool)
          ->
          fun ?thisArg:(x971 : any option) ->
            fun () ->
              Ojs.list_of_js Obj.magic
                (let x981 = this_to_js Obj.magic Obj.magic x978 in
                 Ojs.call (Ojs.get_prop_ascii x981 "filter") "apply"
                   [|x981;((let x972 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x972 "push"
                                 [|(Ojs.fun_to_js 3
                                      (fun (x974 : Ojs.t) ->
                                         fun (x975 : Ojs.t) ->
                                           fun (x976 : Ojs.t) ->
                                             Ojs.bool_to_js
                                               (x970 ~value:(Obj.magic x974)
                                                  ~index:(Ojs.float_of_js
                                                            x975)
                                                  ~array:(Ojs.list_of_js
                                                            Obj.magic x976))))|]);
                            (match x971 with
                             | Some x973 ->
                                 ignore
                                   (Ojs.call x972 "push" [|(any_to_js x973)|])
                             | None -> ());
                            x972))|])
    let (filter' :
      ('tags, 'T) this ->
        predicate:(value:'T -> index:float -> array:'T list -> unknown) ->
          ?thisArg:any -> unit -> 'T list)
      =
      fun (x991 : ('tags, 'T) this) ->
        fun
          ~predicate:(x983 :
                       value:'T -> index:float -> array:'T list -> unknown)
          ->
          fun ?thisArg:(x984 : any option) ->
            fun () ->
              Ojs.list_of_js Obj.magic
                (let x994 = this_to_js Obj.magic Obj.magic x991 in
                 Ojs.call (Ojs.get_prop_ascii x994 "filter") "apply"
                   [|x994;((let x985 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x985 "push"
                                 [|(Ojs.fun_to_js 3
                                      (fun (x987 : Ojs.t) ->
                                         fun (x988 : Ojs.t) ->
                                           fun (x989 : Ojs.t) ->
                                             unknown_to_js
                                               (x983 ~value:(Obj.magic x987)
                                                  ~index:(Ojs.float_of_js
                                                            x988)
                                                  ~array:(Ojs.list_of_js
                                                            Obj.magic x989))))|]);
                            (match x984 with
                             | Some x986 ->
                                 ignore
                                   (Ojs.call x985 "push" [|(any_to_js x986)|])
                             | None -> ());
                            x985))|])
    let (reduce :
      ('tags, 'T) this ->
        callbackfn:(previousValue:'T ->
                      currentValue:'T ->
                        currentIndex:float -> array:'T list -> 'T)
          -> 'T)
      =
      fun (x1002 : ('tags, 'T) this) ->
        fun
          ~callbackfn:(x996 :
                        previousValue:'T ->
                          currentValue:'T ->
                            currentIndex:float -> array:'T list -> 'T)
          ->
          Obj.magic
            (Ojs.call (this_to_js Obj.magic Obj.magic x1002) "reduce"
               [|(Ojs.fun_to_js 4
                    (fun (x997 : Ojs.t) ->
                       fun (x998 : Ojs.t) ->
                         fun (x999 : Ojs.t) ->
                           fun (x1000 : Ojs.t) ->
                             Obj.magic
                               (x996 ~previousValue:(Obj.magic x997)
                                  ~currentValue:(Obj.magic x998)
                                  ~currentIndex:(Ojs.float_of_js x999)
                                  ~array:(Ojs.list_of_js Obj.magic x1000))))|])
    let (reduce' :
      ('tags, 'T) this ->
        callbackfn:(previousValue:'T ->
                      currentValue:'T ->
                        currentIndex:float -> array:'T list -> 'T)
          -> initialValue:'T -> 'T)
      =
      fun (x1012 : ('tags, 'T) this) ->
        fun
          ~callbackfn:(x1005 :
                        previousValue:'T ->
                          currentValue:'T ->
                            currentIndex:float -> array:'T list -> 'T)
          ->
          fun ~initialValue:(x1011 : 'T) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic Obj.magic x1012) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x1006 : Ojs.t) ->
                         fun (x1007 : Ojs.t) ->
                           fun (x1008 : Ojs.t) ->
                             fun (x1009 : Ojs.t) ->
                               Obj.magic
                                 (x1005 ~previousValue:(Obj.magic x1006)
                                    ~currentValue:(Obj.magic x1007)
                                    ~currentIndex:(Ojs.float_of_js x1008)
                                    ~array:(Ojs.list_of_js Obj.magic x1009))));(
                   Obj.magic x1011)|])
    let (reduce'' :
      ('tags, 'T) this ->
        callbackfn:(previousValue:'U ->
                      currentValue:'T ->
                        currentIndex:float -> array:'T list -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x1022 : ('tags, 'T) this) ->
        fun
          ~callbackfn:(x1015 :
                        previousValue:'U ->
                          currentValue:'T ->
                            currentIndex:float -> array:'T list -> 'U)
          ->
          fun ~initialValue:(x1021 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic Obj.magic x1022) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x1016 : Ojs.t) ->
                         fun (x1017 : Ojs.t) ->
                           fun (x1018 : Ojs.t) ->
                             fun (x1019 : Ojs.t) ->
                               Obj.magic
                                 (x1015 ~previousValue:(Obj.magic x1016)
                                    ~currentValue:(Obj.magic x1017)
                                    ~currentIndex:(Ojs.float_of_js x1018)
                                    ~array:(Ojs.list_of_js Obj.magic x1019))));(
                   Obj.magic x1021)|])
    let (reduceRight :
      ('tags, 'T) this ->
        callbackfn:(previousValue:'T ->
                      currentValue:'T ->
                        currentIndex:float -> array:'T list -> 'T)
          -> 'T)
      =
      fun (x1031 : ('tags, 'T) this) ->
        fun
          ~callbackfn:(x1025 :
                        previousValue:'T ->
                          currentValue:'T ->
                            currentIndex:float -> array:'T list -> 'T)
          ->
          Obj.magic
            (Ojs.call (this_to_js Obj.magic Obj.magic x1031) "reduceRight"
               [|(Ojs.fun_to_js 4
                    (fun (x1026 : Ojs.t) ->
                       fun (x1027 : Ojs.t) ->
                         fun (x1028 : Ojs.t) ->
                           fun (x1029 : Ojs.t) ->
                             Obj.magic
                               (x1025 ~previousValue:(Obj.magic x1026)
                                  ~currentValue:(Obj.magic x1027)
                                  ~currentIndex:(Ojs.float_of_js x1028)
                                  ~array:(Ojs.list_of_js Obj.magic x1029))))|])
    let (reduceRight' :
      ('tags, 'T) this ->
        callbackfn:(previousValue:'T ->
                      currentValue:'T ->
                        currentIndex:float -> array:'T list -> 'T)
          -> initialValue:'T -> 'T)
      =
      fun (x1041 : ('tags, 'T) this) ->
        fun
          ~callbackfn:(x1034 :
                        previousValue:'T ->
                          currentValue:'T ->
                            currentIndex:float -> array:'T list -> 'T)
          ->
          fun ~initialValue:(x1040 : 'T) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic Obj.magic x1041) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x1035 : Ojs.t) ->
                         fun (x1036 : Ojs.t) ->
                           fun (x1037 : Ojs.t) ->
                             fun (x1038 : Ojs.t) ->
                               Obj.magic
                                 (x1034 ~previousValue:(Obj.magic x1035)
                                    ~currentValue:(Obj.magic x1036)
                                    ~currentIndex:(Ojs.float_of_js x1037)
                                    ~array:(Ojs.list_of_js Obj.magic x1038))));(
                   Obj.magic x1040)|])
    let (reduceRight'' :
      ('tags, 'T) this ->
        callbackfn:(previousValue:'U ->
                      currentValue:'T ->
                        currentIndex:float -> array:'T list -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x1051 : ('tags, 'T) this) ->
        fun
          ~callbackfn:(x1044 :
                        previousValue:'U ->
                          currentValue:'T ->
                            currentIndex:float -> array:'T list -> 'U)
          ->
          fun ~initialValue:(x1050 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic Obj.magic x1051) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x1045 : Ojs.t) ->
                         fun (x1046 : Ojs.t) ->
                           fun (x1047 : Ojs.t) ->
                             fun (x1048 : Ojs.t) ->
                               Obj.magic
                                 (x1044 ~previousValue:(Obj.magic x1045)
                                    ~currentValue:(Obj.magic x1046)
                                    ~currentIndex:(Ojs.float_of_js x1047)
                                    ~array:(Ojs.list_of_js Obj.magic x1048))));(
                   Obj.magic x1050)|])
    let (get : ('tags, 'T) this -> float -> 'T) =
      fun (x1054 : ('tags, 'T) this) ->
        fun (x1057 : float) ->
          Obj.magic
            (Ojs.get_prop (this_to_js Obj.magic Obj.magic x1054)
               (Ojs.float_to_js x1057))
    let cast_from = Obj.magic
    let (of_ml : 'T list -> 'T t) =
      fun (x1058 : 'T list) ->
        t_of_js Obj.magic (Ojs.list_to_js Obj.magic x1058)
    let (to_ml : 'T t -> 'T list) =
      fun (x1061 : 'T t) ->
        Ojs.list_of_js Obj.magic (t_to_js Obj.magic x1061)
  end
module TemplateStringsArray =
  struct
    type t =
      [ `ReadonlyArray of string  | `ReadonlyArray of string 
      | `TemplateStringsArray ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type tags =
      [ `ReadonlyArray of string  | `ReadonlyArray of string 
      | `TemplateStringsArray ]
    type 'tags this =
      'tags intf constraint 'tags = [> `TemplateStringsArray ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x1066 : Ojs.t) -> intf_of_js __tags_of_js x1066
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x1064 : __tags intf) -> intf_to_js __tags_to_js x1064
    let (get_raw : 'tags this -> string list) =
      fun (x1068 : 'tags this) ->
        Ojs.list_of_js Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x1068) "raw")
    let (create : raw:string list -> unit -> t) =
      fun ~raw:(x1071 : string list) ->
        fun () ->
          let x1072 = Ojs.empty_obj () in
          Ojs.set_prop_ascii x1072 "raw"
            (Ojs.list_to_js Ojs.string_to_js x1071);
          t_of_js x1072
    let cast_from = Obj.magic
  end
module SyntaxError =
  struct
    type t = [ `Error  | `SyntaxError ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type tags = [ `Error  | `SyntaxError ]
    type 'tags this = 'tags intf constraint 'tags = [> `SyntaxError ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x1076 : Ojs.t) -> intf_of_js __tags_of_js x1076
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x1074 : __tags intf) -> intf_to_js __tags_to_js x1074
    let (create : ?message:string -> ?options:ErrorOptions.t -> unit -> t) =
      fun ?message:(x1078 : string option) ->
        fun ?options:(x1079 : ErrorOptions.t option) ->
          fun () ->
            t_of_js
              (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "SyntaxError")
                 (let x1080 =
                    Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                  (match x1078 with
                   | Some x1082 ->
                       ignore
                         (Ojs.call x1080 "push" [|(Ojs.string_to_js x1082)|])
                   | None -> ());
                  (match x1079 with
                   | Some x1081 ->
                       ignore
                         (Ojs.call x1080 "push"
                            [|(ErrorOptions.t_to_js x1081)|])
                   | None -> ());
                  x1080))
    let (invoke : ?message:string -> ?options:ErrorOptions.t -> unit -> t) =
      fun ?message:(x1083 : string option) ->
        fun ?options:(x1084 : ErrorOptions.t option) ->
          fun () ->
            t_of_js
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "SyntaxError") "apply"
                 [|Ojs.null;((let x1085 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              (match x1083 with
                               | Some x1087 ->
                                   ignore
                                     (Ojs.call x1085 "push"
                                        [|(Ojs.string_to_js x1087)|])
                               | None -> ());
                              (match x1084 with
                               | Some x1086 ->
                                   ignore
                                     (Ojs.call x1085 "push"
                                        [|(ErrorOptions.t_to_js x1086)|])
                               | None -> ());
                              x1085))|])
    let (create' : ?message:string -> unit -> t) =
      fun ?message:(x1088 : string option) ->
        fun () ->
          t_of_js
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "SyntaxError")
               (let x1089 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x1088 with
                 | Some x1090 ->
                     ignore
                       (Ojs.call x1089 "push" [|(Ojs.string_to_js x1090)|])
                 | None -> ());
                x1089))
    let (invoke' : ?message:string -> unit -> t) =
      fun ?message:(x1091 : string option) ->
        fun () ->
          t_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "SyntaxError") "apply"
               [|Ojs.null;((let x1092 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x1091 with
                             | Some x1093 ->
                                 ignore
                                   (Ojs.call x1092 "push"
                                      [|(Ojs.string_to_js x1093)|])
                             | None -> ());
                            x1092))|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "SyntaxError")
             "prototype")
    let cast_from = Obj.magic
  end
module Symbol =
  struct
    type t = [ `Symbol ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type tags = [ `Symbol ]
    type 'tags this = 'tags intf constraint 'tags = [> `Symbol ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x1096 : Ojs.t) -> intf_of_js __tags_of_js x1096
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x1094 : __tags intf) -> intf_to_js __tags_to_js x1094
    let (get_description : 'tags this -> string option) =
      fun (x1098 : 'tags this) ->
        Ojs.option_of_js Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x1098) "description")
    let (toString : 'tags this -> string) =
      fun (x1101 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x1101) "toString" [||])
    let (valueOf : 'tags this -> symbol) =
      fun (x1103 : 'tags this) ->
        symbol_of_js (Ojs.call (this_to_js Obj.magic x1103) "valueOf" [||])
    let (matchAll : unit -> symbol) =
      fun () ->
        symbol_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Symbol")
             "matchAll")
    let (asyncIterator : unit -> symbol) =
      fun () ->
        symbol_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Symbol")
             "asyncIterator")
    let (hasInstance : unit -> symbol) =
      fun () ->
        symbol_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Symbol")
             "hasInstance")
    let (isConcatSpreadable : unit -> symbol) =
      fun () ->
        symbol_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Symbol")
             "isConcatSpreadable")
    let (match_ : unit -> symbol) =
      fun () ->
        symbol_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Symbol")
             "match")
    let (replace : unit -> symbol) =
      fun () ->
        symbol_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Symbol")
             "replace")
    let (search : unit -> symbol) =
      fun () ->
        symbol_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Symbol")
             "search")
    let (species : unit -> symbol) =
      fun () ->
        symbol_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Symbol")
             "species")
    let (split : unit -> symbol) =
      fun () ->
        symbol_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Symbol")
             "split")
    let (toPrimitive : unit -> symbol) =
      fun () ->
        symbol_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Symbol")
             "toPrimitive")
    let (toStringTag : unit -> symbol) =
      fun () ->
        symbol_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Symbol")
             "toStringTag")
    let (unscopables : unit -> symbol) =
      fun () ->
        symbol_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Symbol")
             "unscopables")
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Symbol")
             "prototype")
    let (invoke :
      ?description:[ `U1 of string  | `U2 of float ] -> unit -> symbol) =
      fun ?description:(x1105 : [ `U1 of string  | `U2 of float ] option) ->
        fun () ->
          symbol_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "Symbol") "apply"
               [|Ojs.null;((let x1106 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x1105 with
                             | Some x1107 ->
                                 ignore
                                   (Ojs.call x1106 "push"
                                      [|((match x1107 with
                                          | `U1 x1108 ->
                                              Ojs.string_to_js x1108
                                          | `U2 x1109 ->
                                              Ojs.float_to_js x1109))|])
                             | None -> ());
                            x1106))|])
    let (for_ : string -> symbol) =
      fun (x1110 : string) ->
        symbol_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Symbol") "for"
             [|(Ojs.string_to_js x1110)|])
    let (keyFor : symbol -> string option) =
      fun (x1111 : symbol) ->
        Ojs.option_of_js Ojs.string_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Symbol") "keyFor"
             [|(symbol_to_js x1111)|])
    let (iterator : unit -> symbol) =
      fun () ->
        symbol_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Symbol")
             "iterator")
    let cast_from = Obj.magic
  end
module Array =
  struct
    type 'T t = [ `Array of 'T ] intf
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun _T -> Obj.magic
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun _T -> Obj.magic
    type 'T tags = [ `Array of 'T ]
    type ('tags, 'T) this = 'tags intf constraint 'tags = [> `Array of 'T ]
    let rec this_of_js :
      'tags 'T .
        (Ojs.t -> 'tags) -> (Ojs.t -> 'T) -> Ojs.t -> ('tags, 'T) this
      =
      fun (type __tags) ->
        fun (type __T) ->
          fun (__tags_of_js : Ojs.t -> __tags) ->
            fun (__T_of_js : Ojs.t -> __T) ->
              fun (x1115 : Ojs.t) -> intf_of_js __tags_of_js x1115
    and this_to_js :
      'tags 'T .
        ('tags -> Ojs.t) -> ('T -> Ojs.t) -> ('tags, 'T) this -> Ojs.t
      =
      fun (type __tags) ->
        fun (type __T) ->
          fun (__tags_to_js : __tags -> Ojs.t) ->
            fun (__T_to_js : __T -> Ojs.t) ->
              fun (x1113 : __tags intf) -> intf_to_js __tags_to_js x1113
    let (findLast :
      ('tags, 'T) this ->
        predicate:(value:'T -> index:float -> array:'T list -> bool) ->
          ?thisArg:any -> unit -> 'S option)
      =
      fun (x1125 : ('tags, 'T) this) ->
        fun
          ~predicate:(x1117 :
                       value:'T -> index:float -> array:'T list -> bool)
          ->
          fun ?thisArg:(x1118 : any option) ->
            fun () ->
              Ojs.option_of_js Obj.magic
                (let x1128 = this_to_js Obj.magic Obj.magic x1125 in
                 Ojs.call (Ojs.get_prop_ascii x1128 "findLast") "apply"
                   [|x1128;((let x1119 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1119 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x1121 : Ojs.t) ->
                                          fun (x1122 : Ojs.t) ->
                                            fun (x1123 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x1117
                                                   ~value:(Obj.magic x1121)
                                                   ~index:(Ojs.float_of_js
                                                             x1122)
                                                   ~array:(Ojs.list_of_js
                                                             Obj.magic x1123))))|]);
                             (match x1118 with
                              | Some x1120 ->
                                  ignore
                                    (Ojs.call x1119 "push"
                                       [|(any_to_js x1120)|])
                              | None -> ());
                             x1119))|])
    let (findLast' :
      ('tags, 'T) this ->
        predicate:(value:'T -> index:float -> array:'T list -> unknown) ->
          ?thisArg:any -> unit -> 'T option)
      =
      fun (x1138 : ('tags, 'T) this) ->
        fun
          ~predicate:(x1130 :
                       value:'T -> index:float -> array:'T list -> unknown)
          ->
          fun ?thisArg:(x1131 : any option) ->
            fun () ->
              Ojs.option_of_js Obj.magic
                (let x1141 = this_to_js Obj.magic Obj.magic x1138 in
                 Ojs.call (Ojs.get_prop_ascii x1141 "findLast") "apply"
                   [|x1141;((let x1132 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1132 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x1134 : Ojs.t) ->
                                          fun (x1135 : Ojs.t) ->
                                            fun (x1136 : Ojs.t) ->
                                              unknown_to_js
                                                (x1130
                                                   ~value:(Obj.magic x1134)
                                                   ~index:(Ojs.float_of_js
                                                             x1135)
                                                   ~array:(Ojs.list_of_js
                                                             Obj.magic x1136))))|]);
                             (match x1131 with
                              | Some x1133 ->
                                  ignore
                                    (Ojs.call x1132 "push"
                                       [|(any_to_js x1133)|])
                              | None -> ());
                             x1132))|])
    let (findLastIndex :
      ('tags, 'T) this ->
        predicate:(value:'T -> index:float -> array:'T list -> unknown) ->
          ?thisArg:any -> unit -> float)
      =
      fun (x1151 : ('tags, 'T) this) ->
        fun
          ~predicate:(x1143 :
                       value:'T -> index:float -> array:'T list -> unknown)
          ->
          fun ?thisArg:(x1144 : any option) ->
            fun () ->
              Ojs.float_of_js
                (let x1154 = this_to_js Obj.magic Obj.magic x1151 in
                 Ojs.call (Ojs.get_prop_ascii x1154 "findLastIndex") "apply"
                   [|x1154;((let x1145 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1145 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x1147 : Ojs.t) ->
                                          fun (x1148 : Ojs.t) ->
                                            fun (x1149 : Ojs.t) ->
                                              unknown_to_js
                                                (x1143
                                                   ~value:(Obj.magic x1147)
                                                   ~index:(Ojs.float_of_js
                                                             x1148)
                                                   ~array:(Ojs.list_of_js
                                                             Obj.magic x1149))))|]);
                             (match x1144 with
                              | Some x1146 ->
                                  ignore
                                    (Ojs.call x1145 "push"
                                       [|(any_to_js x1146)|])
                              | None -> ());
                             x1145))|])
    let (at : ('tags, 'T) this -> index:float -> 'T option) =
      fun (x1156 : ('tags, 'T) this) ->
        fun ~index:(x1155 : float) ->
          Ojs.option_of_js Obj.magic
            (Ojs.call (this_to_js Obj.magic Obj.magic x1156) "at"
               [|(Ojs.float_to_js x1155)|])
    let (flatMap :
      ('tags, 'T) this ->
        callback:(this:'This ->
                    value:'T ->
                      index:float ->
                        array:'T list ->
                          [ `U1 of 'U  | `U2 of 'U ReadonlyArray.t ])
          -> ?thisArg:'This -> unit -> 'U list)
      =
      fun (x1172 : ('tags, 'T) this) ->
        fun
          ~callback:(x1160 :
                      this:'This ->
                        value:'T ->
                          index:float ->
                            array:'T list ->
                              [ `U1 of 'U  | `U2 of 'U ReadonlyArray.t ])
          ->
          fun ?thisArg:(x1161 : 'This option) ->
            fun () ->
              Ojs.list_of_js Obj.magic
                (let x1175 = this_to_js Obj.magic Obj.magic x1172 in
                 Ojs.call (Ojs.get_prop_ascii x1175 "flatMap") "apply"
                   [|x1175;((let x1162 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1162 "push"
                                  [|(Ojs.fun_to_js 4
                                       (fun (x1164 : Ojs.t) ->
                                          fun (x1165 : Ojs.t) ->
                                            fun (x1166 : Ojs.t) ->
                                              fun (x1167 : Ojs.t) ->
                                                match x1160
                                                        ~this:(Obj.magic
                                                                 x1164)
                                                        ~value:(Obj.magic
                                                                  x1165)
                                                        ~index:(Ojs.float_of_js
                                                                  x1166)
                                                        ~array:(Ojs.list_of_js
                                                                  Obj.magic
                                                                  x1167)
                                                with
                                                | `U1 x1169 ->
                                                    Obj.magic x1169
                                                | `U2 x1170 ->
                                                    ReadonlyArray.t_to_js
                                                      Obj.magic x1170))|]);
                             (match x1161 with
                              | Some x1163 ->
                                  ignore
                                    (Ojs.call x1162 "push"
                                       [|(Obj.magic x1163)|])
                              | None -> ());
                             x1162))|])
    let (flat :
      ('tags, 'T) this ->
        this:'A -> ?depth:'D -> unit -> ('A, 'D) FlatArray.t list)
      =
      fun (x1181 : ('tags, 'T) this) ->
        fun ~this:(x1177 : 'A) ->
          fun ?depth:(x1178 : 'D option) ->
            fun () ->
              Ojs.list_of_js
                (fun (x1185 : Ojs.t) ->
                   FlatArray.t_of_js Obj.magic Obj.magic x1185)
                (let x1184 = this_to_js Obj.magic Obj.magic x1181 in
                 Ojs.call (Ojs.get_prop_ascii x1184 "flat") "apply"
                   [|x1184;((let x1179 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1179 "push" [|(Obj.magic x1177)|]);
                             (match x1178 with
                              | Some x1180 ->
                                  ignore
                                    (Ojs.call x1179 "push"
                                       [|(Obj.magic x1180)|])
                              | None -> ());
                             x1179))|])
    let (includes :
      ('tags, 'T) this ->
        searchElement:'T -> ?fromIndex:float -> unit -> bool)
      =
      fun (x1192 : ('tags, 'T) this) ->
        fun ~searchElement:(x1188 : 'T) ->
          fun ?fromIndex:(x1189 : float option) ->
            fun () ->
              Ojs.bool_of_js
                (let x1195 = this_to_js Obj.magic Obj.magic x1192 in
                 Ojs.call (Ojs.get_prop_ascii x1195 "includes") "apply"
                   [|x1195;((let x1190 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1190 "push" [|(Obj.magic x1188)|]);
                             (match x1189 with
                              | Some x1191 ->
                                  ignore
                                    (Ojs.call x1190 "push"
                                       [|(Ojs.float_to_js x1191)|])
                              | None -> ());
                             x1190))|])
    let (entries : ('tags, 'T) this -> (float * 'T) IterableIterator.t) =
      fun (x1196 : ('tags, 'T) this) ->
        IterableIterator.t_of_js
          (fun (x1199 : Ojs.t) ->
             let x1200 = x1199 in
             ((Ojs.float_of_js (Ojs.array_get x1200 0)),
               (Obj.magic (Ojs.array_get x1200 1))))
          (Ojs.call (this_to_js Obj.magic Obj.magic x1196) "entries" [||])
    let (keys : ('tags, 'T) this -> float IterableIterator.t) =
      fun (x1201 : ('tags, 'T) this) ->
        IterableIterator.t_of_js Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic Obj.magic x1201) "keys" [||])
    let (values : ('tags, 'T) this -> 'T IterableIterator.t) =
      fun (x1205 : ('tags, 'T) this) ->
        IterableIterator.t_of_js Obj.magic
          (Ojs.call (this_to_js Obj.magic Obj.magic x1205) "values" [||])
    let (find :
      ('tags, 'T) this ->
        predicate:(value:'T -> index:float -> obj:'T list -> bool) ->
          ?thisArg:any -> unit -> 'S option)
      =
      fun (x1217 : ('tags, 'T) this) ->
        fun
          ~predicate:(x1209 : value:'T -> index:float -> obj:'T list -> bool)
          ->
          fun ?thisArg:(x1210 : any option) ->
            fun () ->
              Ojs.option_of_js Obj.magic
                (let x1220 = this_to_js Obj.magic Obj.magic x1217 in
                 Ojs.call (Ojs.get_prop_ascii x1220 "find") "apply"
                   [|x1220;((let x1211 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1211 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x1213 : Ojs.t) ->
                                          fun (x1214 : Ojs.t) ->
                                            fun (x1215 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x1209
                                                   ~value:(Obj.magic x1213)
                                                   ~index:(Ojs.float_of_js
                                                             x1214)
                                                   ~obj:(Ojs.list_of_js
                                                           Obj.magic x1215))))|]);
                             (match x1210 with
                              | Some x1212 ->
                                  ignore
                                    (Ojs.call x1211 "push"
                                       [|(any_to_js x1212)|])
                              | None -> ());
                             x1211))|])
    let (find' :
      ('tags, 'T) this ->
        predicate:(value:'T -> index:float -> obj:'T list -> unknown) ->
          ?thisArg:any -> unit -> 'T option)
      =
      fun (x1230 : ('tags, 'T) this) ->
        fun
          ~predicate:(x1222 :
                       value:'T -> index:float -> obj:'T list -> unknown)
          ->
          fun ?thisArg:(x1223 : any option) ->
            fun () ->
              Ojs.option_of_js Obj.magic
                (let x1233 = this_to_js Obj.magic Obj.magic x1230 in
                 Ojs.call (Ojs.get_prop_ascii x1233 "find") "apply"
                   [|x1233;((let x1224 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1224 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x1226 : Ojs.t) ->
                                          fun (x1227 : Ojs.t) ->
                                            fun (x1228 : Ojs.t) ->
                                              unknown_to_js
                                                (x1222
                                                   ~value:(Obj.magic x1226)
                                                   ~index:(Ojs.float_of_js
                                                             x1227)
                                                   ~obj:(Ojs.list_of_js
                                                           Obj.magic x1228))))|]);
                             (match x1223 with
                              | Some x1225 ->
                                  ignore
                                    (Ojs.call x1224 "push"
                                       [|(any_to_js x1225)|])
                              | None -> ());
                             x1224))|])
    let (findIndex :
      ('tags, 'T) this ->
        predicate:(value:'T -> index:float -> obj:'T list -> unknown) ->
          ?thisArg:any -> unit -> float)
      =
      fun (x1243 : ('tags, 'T) this) ->
        fun
          ~predicate:(x1235 :
                       value:'T -> index:float -> obj:'T list -> unknown)
          ->
          fun ?thisArg:(x1236 : any option) ->
            fun () ->
              Ojs.float_of_js
                (let x1246 = this_to_js Obj.magic Obj.magic x1243 in
                 Ojs.call (Ojs.get_prop_ascii x1246 "findIndex") "apply"
                   [|x1246;((let x1237 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1237 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x1239 : Ojs.t) ->
                                          fun (x1240 : Ojs.t) ->
                                            fun (x1241 : Ojs.t) ->
                                              unknown_to_js
                                                (x1235
                                                   ~value:(Obj.magic x1239)
                                                   ~index:(Ojs.float_of_js
                                                             x1240)
                                                   ~obj:(Ojs.list_of_js
                                                           Obj.magic x1241))))|]);
                             (match x1236 with
                              | Some x1238 ->
                                  ignore
                                    (Ojs.call x1237 "push"
                                       [|(any_to_js x1238)|])
                              | None -> ());
                             x1237))|])
    let (fill :
      ('tags, 'T) this ->
        value:'T -> ?start:float -> ?end_:float -> unit -> ('tags, 'T) this)
      =
      fun (x1253 : ('tags, 'T) this) ->
        fun ~value:(x1247 : 'T) ->
          fun ?start:(x1248 : float option) ->
            fun ?end_:(x1249 : float option) ->
              fun () ->
                this_of_js Obj.magic Obj.magic
                  (let x1256 = this_to_js Obj.magic Obj.magic x1253 in
                   Ojs.call (Ojs.get_prop_ascii x1256 "fill") "apply"
                     [|x1256;((let x1250 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x1250 "push" [|(Obj.magic x1247)|]);
                               (match x1248 with
                                | Some x1252 ->
                                    ignore
                                      (Ojs.call x1250 "push"
                                         [|(Ojs.float_to_js x1252)|])
                                | None -> ());
                               (match x1249 with
                                | Some x1251 ->
                                    ignore
                                      (Ojs.call x1250 "push"
                                         [|(Ojs.float_to_js x1251)|])
                                | None -> ());
                               x1250))|])
    let (copyWithin :
      ('tags, 'T) this ->
        target:float ->
          ?start:float -> ?end_:float -> unit -> ('tags, 'T) this)
      =
      fun (x1265 : ('tags, 'T) this) ->
        fun ~target:(x1259 : float) ->
          fun ?start:(x1260 : float option) ->
            fun ?end_:(x1261 : float option) ->
              fun () ->
                this_of_js Obj.magic Obj.magic
                  (let x1268 = this_to_js Obj.magic Obj.magic x1265 in
                   Ojs.call (Ojs.get_prop_ascii x1268 "copyWithin") "apply"
                     [|x1268;((let x1262 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x1262 "push"
                                    [|(Ojs.float_to_js x1259)|]);
                               (match x1260 with
                                | Some x1264 ->
                                    ignore
                                      (Ojs.call x1262 "push"
                                         [|(Ojs.float_to_js x1264)|])
                                | None -> ());
                               (match x1261 with
                                | Some x1263 ->
                                    ignore
                                      (Ojs.call x1262 "push"
                                         [|(Ojs.float_to_js x1263)|])
                                | None -> ());
                               x1262))|])
    let (get_length : ('tags, 'T) this -> float) =
      fun (x1271 : ('tags, 'T) this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic Obj.magic x1271) "length")
    let (set_length : ('tags, 'T) this -> float -> unit) =
      fun (x1274 : ('tags, 'T) this) ->
        fun (x1275 : float) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic Obj.magic x1274) "length"
            (Ojs.float_to_js x1275)
    let (toString : ('tags, 'T) this -> string) =
      fun (x1278 : ('tags, 'T) this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic Obj.magic x1278) "toString" [||])
    let (toLocaleString : ('tags, 'T) this -> string) =
      fun (x1281 : ('tags, 'T) this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic Obj.magic x1281) "toLocaleString"
             [||])
    let (pop : ('tags, 'T) this -> 'T option) =
      fun (x1284 : ('tags, 'T) this) ->
        Ojs.option_of_js Obj.magic
          (Ojs.call (this_to_js Obj.magic Obj.magic x1284) "pop" [||])
    let (push : ('tags, 'T) this -> items:'T list -> float) =
      fun (x1291 : ('tags, 'T) this) ->
        fun ~items:(x1288 : 'T list) ->
          Ojs.float_of_js
            (let x1294 = this_to_js Obj.magic Obj.magic x1291 in
             Ojs.call (Ojs.get_prop_ascii x1294 "push") "apply"
               [|x1294;((let x1289 =
                           Ojs.new_obj
                             (Ojs.get_prop_ascii Ojs.global "Array") 
                             [||] in
                         List.iter
                           (fun (x1290 : 'T) ->
                              ignore
                                (Ojs.call x1289 "push" [|(Obj.magic x1290)|]))
                           x1288;
                         x1289))|])
    let (concat : ('tags, 'T) this -> items:'T ConcatArray.t list -> 'T list)
      =
      fun (x1299 : ('tags, 'T) this) ->
        fun ~items:(x1295 : 'T ConcatArray.t list) ->
          Ojs.list_of_js Obj.magic
            (let x1302 = this_to_js Obj.magic Obj.magic x1299 in
             Ojs.call (Ojs.get_prop_ascii x1302 "concat") "apply"
               [|x1302;((let x1296 =
                           Ojs.new_obj
                             (Ojs.get_prop_ascii Ojs.global "Array") 
                             [||] in
                         List.iter
                           (fun (x1297 : 'T ConcatArray.t) ->
                              ignore
                                (Ojs.call x1296 "push"
                                   [|(ConcatArray.t_to_js Obj.magic x1297)|]))
                           x1295;
                         x1296))|])
    let (concat' :
      ('tags, 'T) this ->
        items:[ `U1 of 'T  | `U2 of 'T ConcatArray.t ] list -> 'T list)
      =
      fun (x1310 : ('tags, 'T) this) ->
        fun ~items:(x1304 : [ `U1 of 'T  | `U2 of 'T ConcatArray.t ] list) ->
          Ojs.list_of_js Obj.magic
            (let x1313 = this_to_js Obj.magic Obj.magic x1310 in
             Ojs.call (Ojs.get_prop_ascii x1313 "concat") "apply"
               [|x1313;((let x1305 =
                           Ojs.new_obj
                             (Ojs.get_prop_ascii Ojs.global "Array") 
                             [||] in
                         List.iter
                           (fun
                              (x1306 :
                                [ `U1 of 'T  | `U2 of 'T ConcatArray.t ])
                              ->
                              ignore
                                (Ojs.call x1305 "push"
                                   [|((match x1306 with
                                       | `U1 x1307 -> Obj.magic x1307
                                       | `U2 x1308 ->
                                           ConcatArray.t_to_js Obj.magic
                                             x1308))|])) x1304;
                         x1305))|])
    let (join : ('tags, 'T) this -> ?separator:string -> unit -> string) =
      fun (x1318 : ('tags, 'T) this) ->
        fun ?separator:(x1315 : string option) ->
          fun () ->
            Ojs.string_of_js
              (let x1321 = this_to_js Obj.magic Obj.magic x1318 in
               Ojs.call (Ojs.get_prop_ascii x1321 "join") "apply"
                 [|x1321;((let x1316 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x1315 with
                            | Some x1317 ->
                                ignore
                                  (Ojs.call x1316 "push"
                                     [|(Ojs.string_to_js x1317)|])
                            | None -> ());
                           x1316))|])
    let (reverse : ('tags, 'T) this -> 'T list) =
      fun (x1322 : ('tags, 'T) this) ->
        Ojs.list_of_js Obj.magic
          (Ojs.call (this_to_js Obj.magic Obj.magic x1322) "reverse" [||])
    let (shift : ('tags, 'T) this -> 'T option) =
      fun (x1326 : ('tags, 'T) this) ->
        Ojs.option_of_js Obj.magic
          (Ojs.call (this_to_js Obj.magic Obj.magic x1326) "shift" [||])
    let (slice :
      ('tags, 'T) this -> ?start:float -> ?end_:float -> unit -> 'T list) =
      fun (x1335 : ('tags, 'T) this) ->
        fun ?start:(x1330 : float option) ->
          fun ?end_:(x1331 : float option) ->
            fun () ->
              Ojs.list_of_js Obj.magic
                (let x1338 = this_to_js Obj.magic Obj.magic x1335 in
                 Ojs.call (Ojs.get_prop_ascii x1338 "slice") "apply"
                   [|x1338;((let x1332 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x1330 with
                              | Some x1334 ->
                                  ignore
                                    (Ojs.call x1332 "push"
                                       [|(Ojs.float_to_js x1334)|])
                              | None -> ());
                             (match x1331 with
                              | Some x1333 ->
                                  ignore
                                    (Ojs.call x1332 "push"
                                       [|(Ojs.float_to_js x1333)|])
                              | None -> ());
                             x1332))|])
    let (sort :
      ('tags, 'T) this ->
        ?compareFn:(a:'T -> b:'T -> float) -> unit -> ('tags, 'T) this)
      =
      fun (x1345 : ('tags, 'T) this) ->
        fun ?compareFn:(x1340 : (a:'T -> b:'T -> float) option) ->
          fun () ->
            this_of_js Obj.magic Obj.magic
              (let x1348 = this_to_js Obj.magic Obj.magic x1345 in
               Ojs.call (Ojs.get_prop_ascii x1348 "sort") "apply"
                 [|x1348;((let x1341 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x1340 with
                            | Some x1342 ->
                                ignore
                                  (Ojs.call x1341 "push"
                                     [|(Ojs.fun_to_js 2
                                          (fun (x1343 : Ojs.t) ->
                                             fun (x1344 : Ojs.t) ->
                                               Ojs.float_to_js
                                                 (x1342 ~a:(Obj.magic x1343)
                                                    ~b:(Obj.magic x1344))))|])
                            | None -> ());
                           x1341))|])
    let (splice :
      ('tags, 'T) this ->
        start:float -> ?deleteCount:float -> unit -> 'T list)
      =
      fun (x1355 : ('tags, 'T) this) ->
        fun ~start:(x1351 : float) ->
          fun ?deleteCount:(x1352 : float option) ->
            fun () ->
              Ojs.list_of_js Obj.magic
                (let x1358 = this_to_js Obj.magic Obj.magic x1355 in
                 Ojs.call (Ojs.get_prop_ascii x1358 "splice") "apply"
                   [|x1358;((let x1353 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1353 "push"
                                  [|(Ojs.float_to_js x1351)|]);
                             (match x1352 with
                              | Some x1354 ->
                                  ignore
                                    (Ojs.call x1353 "push"
                                       [|(Ojs.float_to_js x1354)|])
                              | None -> ());
                             x1353))|])
    let (splice' :
      ('tags, 'T) this ->
        start:float -> deleteCount:float -> items:'T list -> 'T list)
      =
      fun (x1365 : ('tags, 'T) this) ->
        fun ~start:(x1360 : float) ->
          fun ~deleteCount:(x1361 : float) ->
            fun ~items:(x1362 : 'T list) ->
              Ojs.list_of_js Obj.magic
                (let x1368 = this_to_js Obj.magic Obj.magic x1365 in
                 Ojs.call (Ojs.get_prop_ascii x1368 "splice") "apply"
                   [|x1368;((let x1363 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1363 "push"
                                  [|(Ojs.float_to_js x1360)|]);
                             ignore
                               (Ojs.call x1363 "push"
                                  [|(Ojs.float_to_js x1361)|]);
                             List.iter
                               (fun (x1364 : 'T) ->
                                  ignore
                                    (Ojs.call x1363 "push"
                                       [|(Obj.magic x1364)|])) x1362;
                             x1363))|])
    let (unshift : ('tags, 'T) this -> items:'T list -> float) =
      fun (x1373 : ('tags, 'T) this) ->
        fun ~items:(x1370 : 'T list) ->
          Ojs.float_of_js
            (let x1376 = this_to_js Obj.magic Obj.magic x1373 in
             Ojs.call (Ojs.get_prop_ascii x1376 "unshift") "apply"
               [|x1376;((let x1371 =
                           Ojs.new_obj
                             (Ojs.get_prop_ascii Ojs.global "Array") 
                             [||] in
                         List.iter
                           (fun (x1372 : 'T) ->
                              ignore
                                (Ojs.call x1371 "push" [|(Obj.magic x1372)|]))
                           x1370;
                         x1371))|])
    let (indexOf :
      ('tags, 'T) this ->
        searchElement:'T -> ?fromIndex:float -> unit -> float)
      =
      fun (x1381 : ('tags, 'T) this) ->
        fun ~searchElement:(x1377 : 'T) ->
          fun ?fromIndex:(x1378 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x1384 = this_to_js Obj.magic Obj.magic x1381 in
                 Ojs.call (Ojs.get_prop_ascii x1384 "indexOf") "apply"
                   [|x1384;((let x1379 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1379 "push" [|(Obj.magic x1377)|]);
                             (match x1378 with
                              | Some x1380 ->
                                  ignore
                                    (Ojs.call x1379 "push"
                                       [|(Ojs.float_to_js x1380)|])
                              | None -> ());
                             x1379))|])
    let (lastIndexOf :
      ('tags, 'T) this ->
        searchElement:'T -> ?fromIndex:float -> unit -> float)
      =
      fun (x1389 : ('tags, 'T) this) ->
        fun ~searchElement:(x1385 : 'T) ->
          fun ?fromIndex:(x1386 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x1392 = this_to_js Obj.magic Obj.magic x1389 in
                 Ojs.call (Ojs.get_prop_ascii x1392 "lastIndexOf") "apply"
                   [|x1392;((let x1387 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1387 "push" [|(Obj.magic x1385)|]);
                             (match x1386 with
                              | Some x1388 ->
                                  ignore
                                    (Ojs.call x1387 "push"
                                       [|(Ojs.float_to_js x1388)|])
                              | None -> ());
                             x1387))|])
    let (every :
      ('tags, 'T) this ->
        predicate:(value:'T -> index:float -> array:'T list -> bool) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x1401 : ('tags, 'T) this) ->
        fun
          ~predicate:(x1393 :
                       value:'T -> index:float -> array:'T list -> bool)
          ->
          fun ?thisArg:(x1394 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x1404 = this_to_js Obj.magic Obj.magic x1401 in
                 Ojs.call (Ojs.get_prop_ascii x1404 "every") "apply"
                   [|x1404;((let x1395 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1395 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x1397 : Ojs.t) ->
                                          fun (x1398 : Ojs.t) ->
                                            fun (x1399 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x1393
                                                   ~value:(Obj.magic x1397)
                                                   ~index:(Ojs.float_of_js
                                                             x1398)
                                                   ~array:(Ojs.list_of_js
                                                             Obj.magic x1399))))|]);
                             (match x1394 with
                              | Some x1396 ->
                                  ignore
                                    (Ojs.call x1395 "push"
                                       [|(any_to_js x1396)|])
                              | None -> ());
                             x1395))|])
    let (every' :
      ('tags, 'T) this ->
        predicate:(value:'T -> index:float -> array:'T list -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x1413 : ('tags, 'T) this) ->
        fun
          ~predicate:(x1405 :
                       value:'T -> index:float -> array:'T list -> unknown)
          ->
          fun ?thisArg:(x1406 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x1416 = this_to_js Obj.magic Obj.magic x1413 in
                 Ojs.call (Ojs.get_prop_ascii x1416 "every") "apply"
                   [|x1416;((let x1407 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1407 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x1409 : Ojs.t) ->
                                          fun (x1410 : Ojs.t) ->
                                            fun (x1411 : Ojs.t) ->
                                              unknown_to_js
                                                (x1405
                                                   ~value:(Obj.magic x1409)
                                                   ~index:(Ojs.float_of_js
                                                             x1410)
                                                   ~array:(Ojs.list_of_js
                                                             Obj.magic x1411))))|]);
                             (match x1406 with
                              | Some x1408 ->
                                  ignore
                                    (Ojs.call x1407 "push"
                                       [|(any_to_js x1408)|])
                              | None -> ());
                             x1407))|])
    let (some :
      ('tags, 'T) this ->
        predicate:(value:'T -> index:float -> array:'T list -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x1425 : ('tags, 'T) this) ->
        fun
          ~predicate:(x1417 :
                       value:'T -> index:float -> array:'T list -> unknown)
          ->
          fun ?thisArg:(x1418 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x1428 = this_to_js Obj.magic Obj.magic x1425 in
                 Ojs.call (Ojs.get_prop_ascii x1428 "some") "apply"
                   [|x1428;((let x1419 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1419 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x1421 : Ojs.t) ->
                                          fun (x1422 : Ojs.t) ->
                                            fun (x1423 : Ojs.t) ->
                                              unknown_to_js
                                                (x1417
                                                   ~value:(Obj.magic x1421)
                                                   ~index:(Ojs.float_of_js
                                                             x1422)
                                                   ~array:(Ojs.list_of_js
                                                             Obj.magic x1423))))|]);
                             (match x1418 with
                              | Some x1420 ->
                                  ignore
                                    (Ojs.call x1419 "push"
                                       [|(any_to_js x1420)|])
                              | None -> ());
                             x1419))|])
    let (forEach :
      ('tags, 'T) this ->
        callbackfn:(value:'T -> index:float -> array:'T list -> unit) ->
          ?thisArg:any -> unit -> unit)
      =
      fun (x1437 : ('tags, 'T) this) ->
        fun
          ~callbackfn:(x1429 :
                        value:'T -> index:float -> array:'T list -> unit)
          ->
          fun ?thisArg:(x1430 : any option) ->
            fun () ->
              ignore
                (let x1440 = this_to_js Obj.magic Obj.magic x1437 in
                 Ojs.call (Ojs.get_prop_ascii x1440 "forEach") "apply"
                   [|x1440;((let x1431 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1431 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x1433 : Ojs.t) ->
                                          fun (x1434 : Ojs.t) ->
                                            fun (x1435 : Ojs.t) ->
                                              x1429 ~value:(Obj.magic x1433)
                                                ~index:(Ojs.float_of_js x1434)
                                                ~array:(Ojs.list_of_js
                                                          Obj.magic x1435)))|]);
                             (match x1430 with
                              | Some x1432 ->
                                  ignore
                                    (Ojs.call x1431 "push"
                                       [|(any_to_js x1432)|])
                              | None -> ());
                             x1431))|])
    let (map :
      ('tags, 'T) this ->
        callbackfn:(value:'T -> index:float -> array:'T list -> 'U) ->
          ?thisArg:any -> unit -> 'U list)
      =
      fun (x1449 : ('tags, 'T) this) ->
        fun
          ~callbackfn:(x1441 :
                        value:'T -> index:float -> array:'T list -> 'U)
          ->
          fun ?thisArg:(x1442 : any option) ->
            fun () ->
              Ojs.list_of_js Obj.magic
                (let x1452 = this_to_js Obj.magic Obj.magic x1449 in
                 Ojs.call (Ojs.get_prop_ascii x1452 "map") "apply"
                   [|x1452;((let x1443 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1443 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x1445 : Ojs.t) ->
                                          fun (x1446 : Ojs.t) ->
                                            fun (x1447 : Ojs.t) ->
                                              Obj.magic
                                                (x1441
                                                   ~value:(Obj.magic x1445)
                                                   ~index:(Ojs.float_of_js
                                                             x1446)
                                                   ~array:(Ojs.list_of_js
                                                             Obj.magic x1447))))|]);
                             (match x1442 with
                              | Some x1444 ->
                                  ignore
                                    (Ojs.call x1443 "push"
                                       [|(any_to_js x1444)|])
                              | None -> ());
                             x1443))|])
    let (filter :
      ('tags, 'T) this ->
        predicate:(value:'T -> index:float -> array:'T list -> bool) ->
          ?thisArg:any -> unit -> 'S list)
      =
      fun (x1462 : ('tags, 'T) this) ->
        fun
          ~predicate:(x1454 :
                       value:'T -> index:float -> array:'T list -> bool)
          ->
          fun ?thisArg:(x1455 : any option) ->
            fun () ->
              Ojs.list_of_js Obj.magic
                (let x1465 = this_to_js Obj.magic Obj.magic x1462 in
                 Ojs.call (Ojs.get_prop_ascii x1465 "filter") "apply"
                   [|x1465;((let x1456 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1456 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x1458 : Ojs.t) ->
                                          fun (x1459 : Ojs.t) ->
                                            fun (x1460 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x1454
                                                   ~value:(Obj.magic x1458)
                                                   ~index:(Ojs.float_of_js
                                                             x1459)
                                                   ~array:(Ojs.list_of_js
                                                             Obj.magic x1460))))|]);
                             (match x1455 with
                              | Some x1457 ->
                                  ignore
                                    (Ojs.call x1456 "push"
                                       [|(any_to_js x1457)|])
                              | None -> ());
                             x1456))|])
    let (filter' :
      ('tags, 'T) this ->
        predicate:(value:'T -> index:float -> array:'T list -> unknown) ->
          ?thisArg:any -> unit -> 'T list)
      =
      fun (x1475 : ('tags, 'T) this) ->
        fun
          ~predicate:(x1467 :
                       value:'T -> index:float -> array:'T list -> unknown)
          ->
          fun ?thisArg:(x1468 : any option) ->
            fun () ->
              Ojs.list_of_js Obj.magic
                (let x1478 = this_to_js Obj.magic Obj.magic x1475 in
                 Ojs.call (Ojs.get_prop_ascii x1478 "filter") "apply"
                   [|x1478;((let x1469 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1469 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x1471 : Ojs.t) ->
                                          fun (x1472 : Ojs.t) ->
                                            fun (x1473 : Ojs.t) ->
                                              unknown_to_js
                                                (x1467
                                                   ~value:(Obj.magic x1471)
                                                   ~index:(Ojs.float_of_js
                                                             x1472)
                                                   ~array:(Ojs.list_of_js
                                                             Obj.magic x1473))))|]);
                             (match x1468 with
                              | Some x1470 ->
                                  ignore
                                    (Ojs.call x1469 "push"
                                       [|(any_to_js x1470)|])
                              | None -> ());
                             x1469))|])
    let (reduce :
      ('tags, 'T) this ->
        callbackfn:(previousValue:'T ->
                      currentValue:'T ->
                        currentIndex:float -> array:'T list -> 'T)
          -> 'T)
      =
      fun (x1486 : ('tags, 'T) this) ->
        fun
          ~callbackfn:(x1480 :
                        previousValue:'T ->
                          currentValue:'T ->
                            currentIndex:float -> array:'T list -> 'T)
          ->
          Obj.magic
            (Ojs.call (this_to_js Obj.magic Obj.magic x1486) "reduce"
               [|(Ojs.fun_to_js 4
                    (fun (x1481 : Ojs.t) ->
                       fun (x1482 : Ojs.t) ->
                         fun (x1483 : Ojs.t) ->
                           fun (x1484 : Ojs.t) ->
                             Obj.magic
                               (x1480 ~previousValue:(Obj.magic x1481)
                                  ~currentValue:(Obj.magic x1482)
                                  ~currentIndex:(Ojs.float_of_js x1483)
                                  ~array:(Ojs.list_of_js Obj.magic x1484))))|])
    let (reduce' :
      ('tags, 'T) this ->
        callbackfn:(previousValue:'T ->
                      currentValue:'T ->
                        currentIndex:float -> array:'T list -> 'T)
          -> initialValue:'T -> 'T)
      =
      fun (x1496 : ('tags, 'T) this) ->
        fun
          ~callbackfn:(x1489 :
                        previousValue:'T ->
                          currentValue:'T ->
                            currentIndex:float -> array:'T list -> 'T)
          ->
          fun ~initialValue:(x1495 : 'T) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic Obj.magic x1496) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x1490 : Ojs.t) ->
                         fun (x1491 : Ojs.t) ->
                           fun (x1492 : Ojs.t) ->
                             fun (x1493 : Ojs.t) ->
                               Obj.magic
                                 (x1489 ~previousValue:(Obj.magic x1490)
                                    ~currentValue:(Obj.magic x1491)
                                    ~currentIndex:(Ojs.float_of_js x1492)
                                    ~array:(Ojs.list_of_js Obj.magic x1493))));(
                   Obj.magic x1495)|])
    let (reduce'' :
      ('tags, 'T) this ->
        callbackfn:(previousValue:'U ->
                      currentValue:'T ->
                        currentIndex:float -> array:'T list -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x1506 : ('tags, 'T) this) ->
        fun
          ~callbackfn:(x1499 :
                        previousValue:'U ->
                          currentValue:'T ->
                            currentIndex:float -> array:'T list -> 'U)
          ->
          fun ~initialValue:(x1505 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic Obj.magic x1506) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x1500 : Ojs.t) ->
                         fun (x1501 : Ojs.t) ->
                           fun (x1502 : Ojs.t) ->
                             fun (x1503 : Ojs.t) ->
                               Obj.magic
                                 (x1499 ~previousValue:(Obj.magic x1500)
                                    ~currentValue:(Obj.magic x1501)
                                    ~currentIndex:(Ojs.float_of_js x1502)
                                    ~array:(Ojs.list_of_js Obj.magic x1503))));(
                   Obj.magic x1505)|])
    let (reduceRight :
      ('tags, 'T) this ->
        callbackfn:(previousValue:'T ->
                      currentValue:'T ->
                        currentIndex:float -> array:'T list -> 'T)
          -> 'T)
      =
      fun (x1515 : ('tags, 'T) this) ->
        fun
          ~callbackfn:(x1509 :
                        previousValue:'T ->
                          currentValue:'T ->
                            currentIndex:float -> array:'T list -> 'T)
          ->
          Obj.magic
            (Ojs.call (this_to_js Obj.magic Obj.magic x1515) "reduceRight"
               [|(Ojs.fun_to_js 4
                    (fun (x1510 : Ojs.t) ->
                       fun (x1511 : Ojs.t) ->
                         fun (x1512 : Ojs.t) ->
                           fun (x1513 : Ojs.t) ->
                             Obj.magic
                               (x1509 ~previousValue:(Obj.magic x1510)
                                  ~currentValue:(Obj.magic x1511)
                                  ~currentIndex:(Ojs.float_of_js x1512)
                                  ~array:(Ojs.list_of_js Obj.magic x1513))))|])
    let (reduceRight' :
      ('tags, 'T) this ->
        callbackfn:(previousValue:'T ->
                      currentValue:'T ->
                        currentIndex:float -> array:'T list -> 'T)
          -> initialValue:'T -> 'T)
      =
      fun (x1525 : ('tags, 'T) this) ->
        fun
          ~callbackfn:(x1518 :
                        previousValue:'T ->
                          currentValue:'T ->
                            currentIndex:float -> array:'T list -> 'T)
          ->
          fun ~initialValue:(x1524 : 'T) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic Obj.magic x1525) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x1519 : Ojs.t) ->
                         fun (x1520 : Ojs.t) ->
                           fun (x1521 : Ojs.t) ->
                             fun (x1522 : Ojs.t) ->
                               Obj.magic
                                 (x1518 ~previousValue:(Obj.magic x1519)
                                    ~currentValue:(Obj.magic x1520)
                                    ~currentIndex:(Ojs.float_of_js x1521)
                                    ~array:(Ojs.list_of_js Obj.magic x1522))));(
                   Obj.magic x1524)|])
    let (reduceRight'' :
      ('tags, 'T) this ->
        callbackfn:(previousValue:'U ->
                      currentValue:'T ->
                        currentIndex:float -> array:'T list -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x1535 : ('tags, 'T) this) ->
        fun
          ~callbackfn:(x1528 :
                        previousValue:'U ->
                          currentValue:'T ->
                            currentIndex:float -> array:'T list -> 'U)
          ->
          fun ~initialValue:(x1534 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic Obj.magic x1535) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x1529 : Ojs.t) ->
                         fun (x1530 : Ojs.t) ->
                           fun (x1531 : Ojs.t) ->
                             fun (x1532 : Ojs.t) ->
                               Obj.magic
                                 (x1528 ~previousValue:(Obj.magic x1529)
                                    ~currentValue:(Obj.magic x1530)
                                    ~currentIndex:(Ojs.float_of_js x1531)
                                    ~array:(Ojs.list_of_js Obj.magic x1532))));(
                   Obj.magic x1534)|])
    let (get : ('tags, 'T) this -> float -> 'T) =
      fun (x1538 : ('tags, 'T) this) ->
        fun (x1541 : float) ->
          Obj.magic
            (Ojs.get_prop (this_to_js Obj.magic Obj.magic x1538)
               (Ojs.float_to_js x1541))
    let (set : ('tags, 'T) this -> float -> 'T -> unit) =
      fun (x1542 : ('tags, 'T) this) ->
        fun (x1545 : float) ->
          fun (x1546 : 'T) ->
            Ojs.set_prop (this_to_js Obj.magic Obj.magic x1542)
              (Ojs.float_to_js x1545) (Obj.magic x1546)
    let (from : [ `U1 of 'T Iterable.t  | `U2 of 'T ArrayLike.t ] -> 'T list)
      =
      fun (x1547 : [ `U1 of 'T Iterable.t  | `U2 of 'T ArrayLike.t ]) ->
        Ojs.list_of_js Obj.magic
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Array") "from"
             [|((match x1547 with
                 | `U1 x1548 -> Iterable.t_to_js Obj.magic x1548
                 | `U2 x1550 -> ArrayLike.t_to_js Obj.magic x1550))|])
    let (from' :
      iterable:[ `U1 of 'T Iterable.t  | `U2 of 'T ArrayLike.t ] ->
        mapfn:(v:'T -> k:float -> 'U) -> ?thisArg:any -> unit -> 'U list)
      =
      fun
        ~iterable:(x1553 : [ `U1 of 'T Iterable.t  | `U2 of 'T ArrayLike.t ])
        ->
        fun ~mapfn:(x1554 : v:'T -> k:float -> 'U) ->
          fun ?thisArg:(x1555 : any option) ->
            fun () ->
              Ojs.list_of_js Obj.magic
                (let x1564 = Ojs.get_prop_ascii Ojs.global "Array" in
                 Ojs.call (Ojs.get_prop_ascii x1564 "from") "apply"
                   [|x1564;((let x1556 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1556 "push"
                                  [|((match x1553 with
                                      | `U1 x1560 ->
                                          Iterable.t_to_js Obj.magic x1560
                                      | `U2 x1562 ->
                                          ArrayLike.t_to_js Obj.magic x1562))|]);
                             ignore
                               (Ojs.call x1556 "push"
                                  [|(Ojs.fun_to_js 2
                                       (fun (x1558 : Ojs.t) ->
                                          fun (x1559 : Ojs.t) ->
                                            Obj.magic
                                              (x1554 ~v:(Obj.magic x1558)
                                                 ~k:(Ojs.float_of_js x1559))))|]);
                             (match x1555 with
                              | Some x1557 ->
                                  ignore
                                    (Ojs.call x1556 "push"
                                       [|(any_to_js x1557)|])
                              | None -> ());
                             x1556))|])
    let (from'' : 'T ArrayLike.t -> 'T list) =
      fun (x1566 : 'T ArrayLike.t) ->
        Ojs.list_of_js Obj.magic
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Array") "from"
             [|(ArrayLike.t_to_js Obj.magic x1566)|])
    let (from''' :
      arrayLike:'T ArrayLike.t ->
        mapfn:(v:'T -> k:float -> 'U) -> ?thisArg:any -> unit -> 'U list)
      =
      fun ~arrayLike:(x1569 : 'T ArrayLike.t) ->
        fun ~mapfn:(x1570 : v:'T -> k:float -> 'U) ->
          fun ?thisArg:(x1571 : any option) ->
            fun () ->
              Ojs.list_of_js Obj.magic
                (let x1577 = Ojs.get_prop_ascii Ojs.global "Array" in
                 Ojs.call (Ojs.get_prop_ascii x1577 "from") "apply"
                   [|x1577;((let x1572 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1572 "push"
                                  [|(ArrayLike.t_to_js Obj.magic x1569)|]);
                             ignore
                               (Ojs.call x1572 "push"
                                  [|(Ojs.fun_to_js 2
                                       (fun (x1574 : Ojs.t) ->
                                          fun (x1575 : Ojs.t) ->
                                            Obj.magic
                                              (x1570 ~v:(Obj.magic x1574)
                                                 ~k:(Ojs.float_of_js x1575))))|]);
                             (match x1571 with
                              | Some x1573 ->
                                  ignore
                                    (Ojs.call x1572 "push"
                                       [|(any_to_js x1573)|])
                              | None -> ());
                             x1572))|])
    let (of_ : 'T list -> 'T list) =
      fun (x1579 : 'T list) ->
        Ojs.list_of_js Obj.magic
          (let x1582 = Ojs.get_prop_ascii Ojs.global "Array" in
           Ojs.call (Ojs.get_prop_ascii x1582 "of") "apply"
             [|x1582;((let x1580 =
                         Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                           [||] in
                       List.iter
                         (fun (x1581 : 'T) ->
                            ignore
                              (Ojs.call x1580 "push" [|(Obj.magic x1581)|]))
                         x1579;
                       x1580))|])
    let (create : ?arrayLength:float -> unit -> any list) =
      fun ?arrayLength:(x1584 : float option) ->
        fun () ->
          Ojs.list_of_js any_of_js
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "Array")
               (let x1585 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x1584 with
                 | Some x1586 ->
                     ignore
                       (Ojs.call x1585 "push" [|(Ojs.float_to_js x1586)|])
                 | None -> ());
                x1585))
    let (create' : float -> 'T list) =
      fun (x1588 : float) ->
        Ojs.list_of_js Obj.magic
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
             [|(Ojs.float_to_js x1588)|])
    let (create'' : 'T list -> 'T list) =
      fun (x1590 : 'T list) ->
        Ojs.list_of_js Obj.magic
          (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "Array")
             (let x1591 =
                Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
              List.iter
                (fun (x1592 : 'T) ->
                   ignore (Ojs.call x1591 "push" [|(Obj.magic x1592)|]))
                x1590;
              x1591))
    let (invoke : ?arrayLength:float -> unit -> any list) =
      fun ?arrayLength:(x1594 : float option) ->
        fun () ->
          Ojs.list_of_js any_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "Array") "apply"
               [|Ojs.null;((let x1595 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x1594 with
                             | Some x1596 ->
                                 ignore
                                   (Ojs.call x1595 "push"
                                      [|(Ojs.float_to_js x1596)|])
                             | None -> ());
                            x1595))|])
    let (invoke' : float -> 'T list) =
      fun (x1598 : float) ->
        Ojs.list_of_js Obj.magic
          (Ojs.apply (Ojs.get_prop_ascii Ojs.global "Array")
             [|(Ojs.float_to_js x1598)|])
    let (invoke'' : 'T list -> 'T list) =
      fun (x1600 : 'T list) ->
        Ojs.list_of_js Obj.magic
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Array") "apply"
             [|Ojs.null;((let x1601 =
                            Ojs.new_obj
                              (Ojs.get_prop_ascii Ojs.global "Array") 
                              [||] in
                          List.iter
                            (fun (x1602 : 'T) ->
                               ignore
                                 (Ojs.call x1601 "push" [|(Obj.magic x1602)|]))
                            x1600;
                          x1601))|])
    let (isArray : any -> bool) =
      fun (x1604 : any) ->
        Ojs.bool_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Array") "isArray"
             [|(any_to_js x1604)|])
    let (prototype : unit -> any list) =
      fun () ->
        Ojs.list_of_js any_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Array")
             "prototype")
    let cast_from = Obj.magic
    let (of_ml : 'T list -> 'T t) =
      fun (x1606 : 'T list) ->
        t_of_js Obj.magic (Ojs.list_to_js Obj.magic x1606)
    let (to_ml : 'T t -> 'T list) =
      fun (x1609 : 'T t) ->
        Ojs.list_of_js Obj.magic (t_to_js Obj.magic x1609)
  end
module RegExpIndicesArray =
  struct
    module AnonymousInterface25 =
      struct
        type t = Ojs.t
        let rec t_of_js : Ojs.t -> t = fun (x1613 : Ojs.t) -> x1613
        and t_to_js : t -> Ojs.t = fun (x1612 : Ojs.t) -> x1612
        let (get : t -> string -> (float * float)) =
          fun (x1614 : t) ->
            fun (x1615 : string) ->
              let x1616 =
                Ojs.get_prop (t_to_js x1614) (Ojs.string_to_js x1615) in
              ((Ojs.float_of_js (Ojs.array_get x1616 0)),
                (Ojs.float_of_js (Ojs.array_get x1616 1)))
        let (set : t -> string -> (float * float) -> unit) =
          fun (x1617 : t) ->
            fun (x1618 : string) ->
              fun (x1619 : (float * float)) ->
                Ojs.set_prop (t_to_js x1617) (Ojs.string_to_js x1618)
                  (let (x1620, x1621) = x1619 in
                   let x1622 = Ojs.array_make 2 in
                   Ojs.array_set x1622 0 (Ojs.float_to_js x1620);
                   Ojs.array_set x1622 1 (Ojs.float_to_js x1621);
                   x1622)
      end
    type t =
      [ `Array of (float * float)  | `Array of (float * float) 
      | `RegExpIndicesArray ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type tags =
      [ `Array of (float * float)  | `Array of (float * float) 
      | `RegExpIndicesArray ]
    type 'tags this = 'tags intf constraint 'tags = [> `RegExpIndicesArray ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x1625 : Ojs.t) -> intf_of_js __tags_of_js x1625
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x1623 : __tags intf) -> intf_to_js __tags_to_js x1623
    let (get_groups : 'tags this -> AnonymousInterface25.t option) =
      fun (x1627 : 'tags this) ->
        Ojs.option_of_js AnonymousInterface25.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x1627) "groups")
    let (set_groups : 'tags this -> AnonymousInterface25.t -> unit) =
      fun (x1630 : 'tags this) ->
        fun (x1631 : AnonymousInterface25.t) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x1630) "groups"
            (AnonymousInterface25.t_to_js x1631)
    let (create : ?groups:AnonymousInterface25.t -> unit -> t) =
      fun ?groups:(x1633 : AnonymousInterface25.t option) ->
        fun () ->
          let x1634 = Ojs.empty_obj () in
          (match x1633 with
           | Some x1635 ->
               Ojs.set_prop_ascii x1634 "groups"
                 (AnonymousInterface25.t_to_js x1635)
           | None -> ());
          t_of_js x1634
    let cast_from = Obj.magic
  end
module RegExpMatchArray =
  struct
    module AnonymousInterface24 =
      struct
        type t = Ojs.t
        let rec t_of_js : Ojs.t -> t = fun (x1637 : Ojs.t) -> x1637
        and t_to_js : t -> Ojs.t = fun (x1636 : Ojs.t) -> x1636
        let (get : t -> string -> string) =
          fun (x1638 : t) ->
            fun (x1639 : string) ->
              Ojs.string_of_js
                (Ojs.get_prop (t_to_js x1638) (Ojs.string_to_js x1639))
        let (set : t -> string -> string -> unit) =
          fun (x1640 : t) ->
            fun (x1641 : string) ->
              fun (x1642 : string) ->
                Ojs.set_prop (t_to_js x1640) (Ojs.string_to_js x1641)
                  (Ojs.string_to_js x1642)
      end
    type t =
      [ `Array of string  | `Array of string  | `RegExpMatchArray ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type tags = [ `Array of string  | `Array of string  | `RegExpMatchArray ]
    type 'tags this = 'tags intf constraint 'tags = [> `RegExpMatchArray ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x1645 : Ojs.t) -> intf_of_js __tags_of_js x1645
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x1643 : __tags intf) -> intf_to_js __tags_to_js x1643
    let (get_indices : 'tags this -> RegExpIndicesArray.t option) =
      fun (x1647 : 'tags this) ->
        Ojs.option_of_js RegExpIndicesArray.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x1647) "indices")
    let (set_indices : 'tags this -> RegExpIndicesArray.t -> unit) =
      fun (x1650 : 'tags this) ->
        fun (x1651 : RegExpIndicesArray.t) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x1650) "indices"
            (RegExpIndicesArray.t_to_js x1651)
    let (get_groups : 'tags this -> AnonymousInterface24.t option) =
      fun (x1653 : 'tags this) ->
        Ojs.option_of_js AnonymousInterface24.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x1653) "groups")
    let (set_groups : 'tags this -> AnonymousInterface24.t -> unit) =
      fun (x1656 : 'tags this) ->
        fun (x1657 : AnonymousInterface24.t) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x1656) "groups"
            (AnonymousInterface24.t_to_js x1657)
    let (get_index : 'tags this -> float option) =
      fun (x1659 : 'tags this) ->
        Ojs.option_of_js Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x1659) "index")
    let (set_index : 'tags this -> float -> unit) =
      fun (x1662 : 'tags this) ->
        fun (x1663 : float) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x1662) "index"
            (Ojs.float_to_js x1663)
    let (get_input : 'tags this -> string option) =
      fun (x1665 : 'tags this) ->
        Ojs.option_of_js Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x1665) "input")
    let (set_input : 'tags this -> string -> unit) =
      fun (x1668 : 'tags this) ->
        fun (x1669 : string) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x1668) "input"
            (Ojs.string_to_js x1669)
    let (get_0 : 'tags this -> string) =
      fun (x1671 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x1671) "0")
    let (set_0 : 'tags this -> string -> unit) =
      fun (x1673 : 'tags this) ->
        fun (x1674 : string) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x1673) "0"
            (Ojs.string_to_js x1674)
    let (create :
      ?indices:RegExpIndicesArray.t ->
        ?groups:AnonymousInterface24.t ->
          ?index:float -> ?input:string -> _0:string -> unit -> t)
      =
      fun ?indices:(x1676 : RegExpIndicesArray.t option) ->
        fun ?groups:(x1677 : AnonymousInterface24.t option) ->
          fun ?index:(x1678 : float option) ->
            fun ?input:(x1679 : string option) ->
              fun ~_0:(x1680 : string) ->
                fun () ->
                  let x1681 = Ojs.empty_obj () in
                  (match x1676 with
                   | Some x1685 ->
                       Ojs.set_prop_ascii x1681 "indices"
                         (RegExpIndicesArray.t_to_js x1685)
                   | None -> ());
                  (match x1677 with
                   | Some x1684 ->
                       Ojs.set_prop_ascii x1681 "groups"
                         (AnonymousInterface24.t_to_js x1684)
                   | None -> ());
                  (match x1678 with
                   | Some x1683 ->
                       Ojs.set_prop_ascii x1681 "index"
                         (Ojs.float_to_js x1683)
                   | None -> ());
                  (match x1679 with
                   | Some x1682 ->
                       Ojs.set_prop_ascii x1681 "input"
                         (Ojs.string_to_js x1682)
                   | None -> ());
                  Ojs.set_prop_ascii x1681 "0" (Ojs.string_to_js x1680);
                  t_of_js x1681
    let cast_from = Obj.magic
  end
module RegExpExecArray =
  struct
    module AnonymousInterface24 =
      struct
        type t = Ojs.t
        let rec t_of_js : Ojs.t -> t = fun (x1687 : Ojs.t) -> x1687
        and t_to_js : t -> Ojs.t = fun (x1686 : Ojs.t) -> x1686
        let (get : t -> string -> string) =
          fun (x1688 : t) ->
            fun (x1689 : string) ->
              Ojs.string_of_js
                (Ojs.get_prop (t_to_js x1688) (Ojs.string_to_js x1689))
        let (set : t -> string -> string -> unit) =
          fun (x1690 : t) ->
            fun (x1691 : string) ->
              fun (x1692 : string) ->
                Ojs.set_prop (t_to_js x1690) (Ojs.string_to_js x1691)
                  (Ojs.string_to_js x1692)
      end
    type t =
      [ `Array of string  | `Array of string  | `RegExpExecArray ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type tags = [ `Array of string  | `Array of string  | `RegExpExecArray ]
    type 'tags this = 'tags intf constraint 'tags = [> `RegExpExecArray ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x1695 : Ojs.t) -> intf_of_js __tags_of_js x1695
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x1693 : __tags intf) -> intf_to_js __tags_to_js x1693
    let (get_indices : 'tags this -> RegExpIndicesArray.t option) =
      fun (x1697 : 'tags this) ->
        Ojs.option_of_js RegExpIndicesArray.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x1697) "indices")
    let (set_indices : 'tags this -> RegExpIndicesArray.t -> unit) =
      fun (x1700 : 'tags this) ->
        fun (x1701 : RegExpIndicesArray.t) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x1700) "indices"
            (RegExpIndicesArray.t_to_js x1701)
    let (get_groups : 'tags this -> AnonymousInterface24.t option) =
      fun (x1703 : 'tags this) ->
        Ojs.option_of_js AnonymousInterface24.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x1703) "groups")
    let (set_groups : 'tags this -> AnonymousInterface24.t -> unit) =
      fun (x1706 : 'tags this) ->
        fun (x1707 : AnonymousInterface24.t) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x1706) "groups"
            (AnonymousInterface24.t_to_js x1707)
    let (get_index : 'tags this -> float) =
      fun (x1709 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x1709) "index")
    let (set_index : 'tags this -> float -> unit) =
      fun (x1711 : 'tags this) ->
        fun (x1712 : float) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x1711) "index"
            (Ojs.float_to_js x1712)
    let (get_input : 'tags this -> string) =
      fun (x1714 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x1714) "input")
    let (set_input : 'tags this -> string -> unit) =
      fun (x1716 : 'tags this) ->
        fun (x1717 : string) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x1716) "input"
            (Ojs.string_to_js x1717)
    let (get_0 : 'tags this -> string) =
      fun (x1719 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x1719) "0")
    let (set_0 : 'tags this -> string -> unit) =
      fun (x1721 : 'tags this) ->
        fun (x1722 : string) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x1721) "0"
            (Ojs.string_to_js x1722)
    let (create :
      ?indices:RegExpIndicesArray.t ->
        ?groups:AnonymousInterface24.t ->
          index:float -> input:string -> _0:string -> unit -> t)
      =
      fun ?indices:(x1724 : RegExpIndicesArray.t option) ->
        fun ?groups:(x1725 : AnonymousInterface24.t option) ->
          fun ~index:(x1726 : float) ->
            fun ~input:(x1727 : string) ->
              fun ~_0:(x1728 : string) ->
                fun () ->
                  let x1729 = Ojs.empty_obj () in
                  (match x1724 with
                   | Some x1731 ->
                       Ojs.set_prop_ascii x1729 "indices"
                         (RegExpIndicesArray.t_to_js x1731)
                   | None -> ());
                  (match x1725 with
                   | Some x1730 ->
                       Ojs.set_prop_ascii x1729 "groups"
                         (AnonymousInterface24.t_to_js x1730)
                   | None -> ());
                  Ojs.set_prop_ascii x1729 "index" (Ojs.float_to_js x1726);
                  Ojs.set_prop_ascii x1729 "input" (Ojs.string_to_js x1727);
                  Ojs.set_prop_ascii x1729 "0" (Ojs.string_to_js x1728);
                  t_of_js x1729
    let cast_from = Obj.magic
  end
module RegExp =
  struct
    type t = [ `RegExp ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type tags = [ `RegExp ]
    type 'tags this = 'tags intf constraint 'tags = [> `RegExp ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x1734 : Ojs.t) -> intf_of_js __tags_of_js x1734
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x1732 : __tags intf) -> intf_to_js __tags_to_js x1732
    let (get_hasIndices : 'tags this -> bool) =
      fun (x1736 : 'tags this) ->
        Ojs.bool_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x1736) "hasIndices")
    let (get_dotAll : 'tags this -> bool) =
      fun (x1738 : 'tags this) ->
        Ojs.bool_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x1738) "dotAll")
    let (get_flags : 'tags this -> string) =
      fun (x1740 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x1740) "flags")
    let (get_sticky : 'tags this -> bool) =
      fun (x1742 : 'tags this) ->
        Ojs.bool_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x1742) "sticky")
    let (get_unicode : 'tags this -> bool) =
      fun (x1744 : 'tags this) ->
        Ojs.bool_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x1744) "unicode")
    let (exec : 'tags this -> string:string -> RegExpExecArray.t option) =
      fun (x1747 : 'tags this) ->
        fun ~string:(x1746 : string) ->
          Ojs.option_of_js RegExpExecArray.t_of_js
            (Ojs.call (this_to_js Obj.magic x1747) "exec"
               [|(Ojs.string_to_js x1746)|])
    let (test : 'tags this -> string:string -> bool) =
      fun (x1751 : 'tags this) ->
        fun ~string:(x1750 : string) ->
          Ojs.bool_of_js
            (Ojs.call (this_to_js Obj.magic x1751) "test"
               [|(Ojs.string_to_js x1750)|])
    let (get_source : 'tags this -> string) =
      fun (x1753 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x1753) "source")
    let (get_global : 'tags this -> bool) =
      fun (x1755 : 'tags this) ->
        Ojs.bool_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x1755) "global")
    let (get_ignoreCase : 'tags this -> bool) =
      fun (x1757 : 'tags this) ->
        Ojs.bool_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x1757) "ignoreCase")
    let (get_multiline : 'tags this -> bool) =
      fun (x1759 : 'tags this) ->
        Ojs.bool_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x1759) "multiline")
    let (get_lastIndex : 'tags this -> float) =
      fun (x1761 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x1761) "lastIndex")
    let (set_lastIndex : 'tags this -> float -> unit) =
      fun (x1763 : 'tags this) ->
        fun (x1764 : float) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x1763) "lastIndex"
            (Ojs.float_to_js x1764)
    let (compile :
      'tags this -> pattern:string -> ?flags:string -> unit -> 'tags this) =
      fun (x1770 : 'tags this) ->
        fun ~pattern:(x1766 : string) ->
          fun ?flags:(x1767 : string option) ->
            fun () ->
              this_of_js Obj.magic
                (let x1772 = this_to_js Obj.magic x1770 in
                 Ojs.call (Ojs.get_prop_ascii x1772 "compile") "apply"
                   [|x1772;((let x1768 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1768 "push"
                                  [|(Ojs.string_to_js x1766)|]);
                             (match x1767 with
                              | Some x1769 ->
                                  ignore
                                    (Ojs.call x1768 "push"
                                       [|(Ojs.string_to_js x1769)|])
                              | None -> ());
                             x1768))|])
    let (create :
      pattern:[ `U1 of t  | `U2 of string ] -> ?flags:string -> unit -> t) =
      fun ~pattern:(x1774 : [ `U1 of t  | `U2 of string ]) ->
        fun ?flags:(x1775 : string option) ->
          fun () ->
            t_of_js
              (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "RegExp")
                 (let x1776 =
                    Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                  ignore
                    (Ojs.call x1776 "push"
                       [|((match x1774 with
                           | `U1 x1778 -> t_to_js x1778
                           | `U2 x1779 -> Ojs.string_to_js x1779))|]);
                  (match x1775 with
                   | Some x1777 ->
                       ignore
                         (Ojs.call x1776 "push" [|(Ojs.string_to_js x1777)|])
                   | None -> ());
                  x1776))
    let (invoke :
      pattern:[ `U1 of t  | `U2 of string ] -> ?flags:string -> unit -> t) =
      fun ~pattern:(x1780 : [ `U1 of t  | `U2 of string ]) ->
        fun ?flags:(x1781 : string option) ->
          fun () ->
            t_of_js
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "RegExp") "apply"
                 [|Ojs.null;((let x1782 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x1782 "push"
                                   [|((match x1780 with
                                       | `U1 x1784 -> t_to_js x1784
                                       | `U2 x1785 -> Ojs.string_to_js x1785))|]);
                              (match x1781 with
                               | Some x1783 ->
                                   ignore
                                     (Ojs.call x1782 "push"
                                        [|(Ojs.string_to_js x1783)|])
                               | None -> ());
                              x1782))|])
    let (create' : [ `U1 of t  | `U2 of string ] -> t) =
      fun (x1786 : [ `U1 of t  | `U2 of string ]) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "RegExp")
             [|((match x1786 with
                 | `U1 x1787 -> t_to_js x1787
                 | `U2 x1788 -> Ojs.string_to_js x1788))|])
    let (create'' : pattern:string -> ?flags:string -> unit -> t) =
      fun ~pattern:(x1789 : string) ->
        fun ?flags:(x1790 : string option) ->
          fun () ->
            t_of_js
              (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "RegExp")
                 (let x1791 =
                    Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                  ignore (Ojs.call x1791 "push" [|(Ojs.string_to_js x1789)|]);
                  (match x1790 with
                   | Some x1792 ->
                       ignore
                         (Ojs.call x1791 "push" [|(Ojs.string_to_js x1792)|])
                   | None -> ());
                  x1791))
    let (invoke' : [ `U1 of t  | `U2 of string ] -> t) =
      fun (x1793 : [ `U1 of t  | `U2 of string ]) ->
        t_of_js
          (Ojs.apply (Ojs.get_prop_ascii Ojs.global "RegExp")
             [|((match x1793 with
                 | `U1 x1794 -> t_to_js x1794
                 | `U2 x1795 -> Ojs.string_to_js x1795))|])
    let (invoke'' : pattern:string -> ?flags:string -> unit -> t) =
      fun ~pattern:(x1796 : string) ->
        fun ?flags:(x1797 : string option) ->
          fun () ->
            t_of_js
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "RegExp") "apply"
                 [|Ojs.null;((let x1798 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x1798 "push"
                                   [|(Ojs.string_to_js x1796)|]);
                              (match x1797 with
                               | Some x1799 ->
                                   ignore
                                     (Ojs.call x1798 "push"
                                        [|(Ojs.string_to_js x1799)|])
                               | None -> ());
                              x1798))|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "RegExp")
             "prototype")
    let (_1 : unit -> string) =
      fun () ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "RegExp") "$1")
    let (_2 : unit -> string) =
      fun () ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "RegExp") "$2")
    let (_3 : unit -> string) =
      fun () ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "RegExp") "$3")
    let (_4 : unit -> string) =
      fun () ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "RegExp") "$4")
    let (_5 : unit -> string) =
      fun () ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "RegExp") "$5")
    let (_6 : unit -> string) =
      fun () ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "RegExp") "$6")
    let (_7 : unit -> string) =
      fun () ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "RegExp") "$7")
    let (_8 : unit -> string) =
      fun () ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "RegExp") "$8")
    let (_9 : unit -> string) =
      fun () ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "RegExp") "$9")
    let (input : unit -> string) =
      fun () ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "RegExp")
             "input")
    let (__ : unit -> string) =
      fun () ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "RegExp") "$_")
    let (lastMatch : unit -> string) =
      fun () ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "RegExp")
             "lastMatch")
    let (__' : unit -> string) =
      fun () ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "RegExp") "$&")
    let (lastParen : unit -> string) =
      fun () ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "RegExp")
             "lastParen")
    let (__'' : unit -> string) =
      fun () ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "RegExp") "$+")
    let (leftContext : unit -> string) =
      fun () ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "RegExp")
             "leftContext")
    let (__''' : unit -> string) =
      fun () ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "RegExp") "$`")
    let (rightContext : unit -> string) =
      fun () ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "RegExp")
             "rightContext")
    let (__'''' : unit -> string) =
      fun () ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "RegExp") "$'")
    let cast_from = Obj.magic
  end
module Pick =
  struct
    type ('T, 'K) t = any
    let rec t_of_js :
      'T 'K . (Ojs.t -> 'T) -> (Ojs.t -> 'K) -> Ojs.t -> ('T, 'K) t =
      fun (type __T) ->
        fun (type __K) ->
          fun (__T_of_js : Ojs.t -> __T) ->
            fun (__K_of_js : Ojs.t -> __K) ->
              fun (x1801 : Ojs.t) -> any_of_js x1801
    and t_to_js :
      'T 'K . ('T -> Ojs.t) -> ('K -> Ojs.t) -> ('T, 'K) t -> Ojs.t =
      fun (type __T) ->
        fun (type __K) ->
          fun (__T_to_js : __T -> Ojs.t) ->
            fun (__K_to_js : __K -> Ojs.t) ->
              fun (x1800 : any) -> any_to_js x1800
  end
module Exclude =
  struct
    type ('T, 'U) t = any
    let rec t_of_js :
      'T 'U . (Ojs.t -> 'T) -> (Ojs.t -> 'U) -> Ojs.t -> ('T, 'U) t =
      fun (type __T) ->
        fun (type __U) ->
          fun (__T_of_js : Ojs.t -> __T) ->
            fun (__U_of_js : Ojs.t -> __U) ->
              fun (x1803 : Ojs.t) -> any_of_js x1803
    and t_to_js :
      'T 'U . ('T -> Ojs.t) -> ('U -> Ojs.t) -> ('T, 'U) t -> Ojs.t =
      fun (type __T) ->
        fun (type __U) ->
          fun (__T_to_js : __T -> Ojs.t) ->
            fun (__U_to_js : __U -> Ojs.t) ->
              fun (x1802 : any) -> any_to_js x1802
  end
module rec
  Date:sig
         type t = [ `Date ] intf
         [@@@js.stop ]
         type tags = [ `Date ]
         [@@@js.start ]
         [@@@js.implem type tags = [ `Date ]]
         type 'tags this = 'tags intf constraint 'tags = [> `Date ]
         val t_to_js : t -> Ojs.t
         val t_of_js : Ojs.t -> t
         val toLocaleString :
           'tags this ->
             ?locales:Intl.LocalesArgument.t ->
               ?options:Intl.DateTimeFormatOptions.t -> unit -> string
         val toLocaleDateString :
           'tags this ->
             ?locales:Intl.LocalesArgument.t ->
               ?options:Intl.DateTimeFormatOptions.t -> unit -> string
         val toLocaleTimeString :
           'tags this ->
             ?locales:Intl.LocalesArgument.t ->
               ?options:Intl.DateTimeFormatOptions.t -> unit -> string
         val toLocaleString' :
           'tags this ->
             ?locales:[ `U1 of string  | `U2 of string list ] ->
               ?options:Intl.DateTimeFormatOptions.t -> unit -> string
         val toLocaleDateString' :
           'tags this ->
             ?locales:[ `U1 of string  | `U2 of string list ] ->
               ?options:Intl.DateTimeFormatOptions.t -> unit -> string
         val toLocaleTimeString' :
           'tags this ->
             ?locales:[ `U1 of string  | `U2 of string list ] ->
               ?options:Intl.DateTimeFormatOptions.t -> unit -> string
         val toString : 'tags this -> string
         val toDateString : 'tags this -> string
         val toTimeString : 'tags this -> string
         val toLocaleString'' : 'tags this -> string
         val toLocaleDateString'' : 'tags this -> string
         val toLocaleTimeString'' : 'tags this -> string
         val valueOf : 'tags this -> float
         val getTime : 'tags this -> float
         val getFullYear : 'tags this -> float
         val getUTCFullYear : 'tags this -> float
         val getMonth : 'tags this -> float
         val getUTCMonth : 'tags this -> float
         val getDate : 'tags this -> float
         val getUTCDate : 'tags this -> float
         val getDay : 'tags this -> float
         val getUTCDay : 'tags this -> float
         val getHours : 'tags this -> float
         val getUTCHours : 'tags this -> float
         val getMinutes : 'tags this -> float
         val getUTCMinutes : 'tags this -> float
         val getSeconds : 'tags this -> float
         val getUTCSeconds : 'tags this -> float
         val getMilliseconds : 'tags this -> float
         val getUTCMilliseconds : 'tags this -> float
         val getTimezoneOffset : 'tags this -> float
         val setTime : 'tags this -> time:float -> float
         val setMilliseconds : 'tags this -> ms:float -> float
         val setUTCMilliseconds : 'tags this -> ms:float -> float
         val setSeconds :
           'tags this -> sec:float -> ?ms:float -> unit -> float
         val setUTCSeconds :
           'tags this -> sec:float -> ?ms:float -> unit -> float
         val setMinutes :
           'tags this ->
             min:float -> ?sec:float -> ?ms:float -> unit -> float
         val setUTCMinutes :
           'tags this ->
             min:float -> ?sec:float -> ?ms:float -> unit -> float
         val setHours :
           'tags this ->
             hours:float ->
               ?min:float -> ?sec:float -> ?ms:float -> unit -> float
         val setUTCHours :
           'tags this ->
             hours:float ->
               ?min:float -> ?sec:float -> ?ms:float -> unit -> float
         val setDate : 'tags this -> date:float -> float
         val setUTCDate : 'tags this -> date:float -> float
         val setMonth :
           'tags this -> month:float -> ?date:float -> unit -> float
         val setUTCMonth :
           'tags this -> month:float -> ?date:float -> unit -> float
         val setFullYear :
           'tags this ->
             year:float -> ?month:float -> ?date:float -> unit -> float
         val setUTCFullYear :
           'tags this ->
             year:float -> ?month:float -> ?date:float -> unit -> float
         val toUTCString : 'tags this -> string
         val toISOString : 'tags this -> string
         val toJSON : 'tags this -> ?key:any -> unit -> string
         val create : [ `U1 of float  | `U2 of string  | `U3 of t ] -> t
         val create' : unit -> t
         val create'' : [ `U1 of float  | `U2 of string ] -> t
         val create''' :
           year:float ->
             monthIndex:float ->
               ?date:float ->
                 ?hours:float ->
                   ?minutes:float -> ?seconds:float -> ?ms:float -> unit -> t
         val invoke : unit -> string
         val prototype : unit -> t
         val parse : string -> float
         val utc :
           year:float ->
             monthIndex:float ->
               ?date:float ->
                 ?hours:float ->
                   ?minutes:float ->
                     ?seconds:float -> ?ms:float -> unit -> float
         val now : unit -> float
         val cast_from : 'tags this -> t
       end =
  struct
    type t = [ `Date ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type tags = [ `Date ]
    type 'tags this = 'tags intf constraint 'tags = [> `Date ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x1806 : Ojs.t) -> intf_of_js __tags_of_js x1806
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x1804 : __tags intf) -> intf_to_js __tags_to_js x1804
    let (toLocaleString :
      'tags this ->
        ?locales:Intl.LocalesArgument.t ->
          ?options:Intl.DateTimeFormatOptions.t -> unit -> string)
      =
      fun (x1813 : 'tags this) ->
        fun ?locales:(x1808 : Intl.LocalesArgument.t option) ->
          fun ?options:(x1809 : Intl.DateTimeFormatOptions.t option) ->
            fun () ->
              Ojs.string_of_js
                (let x1815 = this_to_js Obj.magic x1813 in
                 Ojs.call (Ojs.get_prop_ascii x1815 "toLocaleString") "apply"
                   [|x1815;((let x1810 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x1808 with
                              | Some x1812 ->
                                  ignore
                                    (Ojs.call x1810 "push"
                                       [|(Intl.LocalesArgument.t_to_js x1812)|])
                              | None -> ());
                             (match x1809 with
                              | Some x1811 ->
                                  ignore
                                    (Ojs.call x1810 "push"
                                       [|(Intl.DateTimeFormatOptions.t_to_js
                                            x1811)|])
                              | None -> ());
                             x1810))|])
    let (toLocaleDateString :
      'tags this ->
        ?locales:Intl.LocalesArgument.t ->
          ?options:Intl.DateTimeFormatOptions.t -> unit -> string)
      =
      fun (x1821 : 'tags this) ->
        fun ?locales:(x1816 : Intl.LocalesArgument.t option) ->
          fun ?options:(x1817 : Intl.DateTimeFormatOptions.t option) ->
            fun () ->
              Ojs.string_of_js
                (let x1823 = this_to_js Obj.magic x1821 in
                 Ojs.call (Ojs.get_prop_ascii x1823 "toLocaleDateString")
                   "apply"
                   [|x1823;((let x1818 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x1816 with
                              | Some x1820 ->
                                  ignore
                                    (Ojs.call x1818 "push"
                                       [|(Intl.LocalesArgument.t_to_js x1820)|])
                              | None -> ());
                             (match x1817 with
                              | Some x1819 ->
                                  ignore
                                    (Ojs.call x1818 "push"
                                       [|(Intl.DateTimeFormatOptions.t_to_js
                                            x1819)|])
                              | None -> ());
                             x1818))|])
    let (toLocaleTimeString :
      'tags this ->
        ?locales:Intl.LocalesArgument.t ->
          ?options:Intl.DateTimeFormatOptions.t -> unit -> string)
      =
      fun (x1829 : 'tags this) ->
        fun ?locales:(x1824 : Intl.LocalesArgument.t option) ->
          fun ?options:(x1825 : Intl.DateTimeFormatOptions.t option) ->
            fun () ->
              Ojs.string_of_js
                (let x1831 = this_to_js Obj.magic x1829 in
                 Ojs.call (Ojs.get_prop_ascii x1831 "toLocaleTimeString")
                   "apply"
                   [|x1831;((let x1826 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x1824 with
                              | Some x1828 ->
                                  ignore
                                    (Ojs.call x1826 "push"
                                       [|(Intl.LocalesArgument.t_to_js x1828)|])
                              | None -> ());
                             (match x1825 with
                              | Some x1827 ->
                                  ignore
                                    (Ojs.call x1826 "push"
                                       [|(Intl.DateTimeFormatOptions.t_to_js
                                            x1827)|])
                              | None -> ());
                             x1826))|])
    let (toLocaleString' :
      'tags this ->
        ?locales:[ `U1 of string  | `U2 of string list ] ->
          ?options:Intl.DateTimeFormatOptions.t -> unit -> string)
      =
      fun (x1840 : 'tags this) ->
        fun ?locales:(x1832 : [ `U1 of string  | `U2 of string list ] option)
          ->
          fun ?options:(x1833 : Intl.DateTimeFormatOptions.t option) ->
            fun () ->
              Ojs.string_of_js
                (let x1842 = this_to_js Obj.magic x1840 in
                 Ojs.call (Ojs.get_prop_ascii x1842 "toLocaleString") "apply"
                   [|x1842;((let x1834 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x1832 with
                              | Some x1836 ->
                                  ignore
                                    (Ojs.call x1834 "push"
                                       [|((match x1836 with
                                           | `U1 x1837 ->
                                               Ojs.string_to_js x1837
                                           | `U2 x1838 ->
                                               Ojs.list_to_js
                                                 Ojs.string_to_js x1838))|])
                              | None -> ());
                             (match x1833 with
                              | Some x1835 ->
                                  ignore
                                    (Ojs.call x1834 "push"
                                       [|(Intl.DateTimeFormatOptions.t_to_js
                                            x1835)|])
                              | None -> ());
                             x1834))|])
    let (toLocaleDateString' :
      'tags this ->
        ?locales:[ `U1 of string  | `U2 of string list ] ->
          ?options:Intl.DateTimeFormatOptions.t -> unit -> string)
      =
      fun (x1851 : 'tags this) ->
        fun ?locales:(x1843 : [ `U1 of string  | `U2 of string list ] option)
          ->
          fun ?options:(x1844 : Intl.DateTimeFormatOptions.t option) ->
            fun () ->
              Ojs.string_of_js
                (let x1853 = this_to_js Obj.magic x1851 in
                 Ojs.call (Ojs.get_prop_ascii x1853 "toLocaleDateString")
                   "apply"
                   [|x1853;((let x1845 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x1843 with
                              | Some x1847 ->
                                  ignore
                                    (Ojs.call x1845 "push"
                                       [|((match x1847 with
                                           | `U1 x1848 ->
                                               Ojs.string_to_js x1848
                                           | `U2 x1849 ->
                                               Ojs.list_to_js
                                                 Ojs.string_to_js x1849))|])
                              | None -> ());
                             (match x1844 with
                              | Some x1846 ->
                                  ignore
                                    (Ojs.call x1845 "push"
                                       [|(Intl.DateTimeFormatOptions.t_to_js
                                            x1846)|])
                              | None -> ());
                             x1845))|])
    let (toLocaleTimeString' :
      'tags this ->
        ?locales:[ `U1 of string  | `U2 of string list ] ->
          ?options:Intl.DateTimeFormatOptions.t -> unit -> string)
      =
      fun (x1862 : 'tags this) ->
        fun ?locales:(x1854 : [ `U1 of string  | `U2 of string list ] option)
          ->
          fun ?options:(x1855 : Intl.DateTimeFormatOptions.t option) ->
            fun () ->
              Ojs.string_of_js
                (let x1864 = this_to_js Obj.magic x1862 in
                 Ojs.call (Ojs.get_prop_ascii x1864 "toLocaleTimeString")
                   "apply"
                   [|x1864;((let x1856 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x1854 with
                              | Some x1858 ->
                                  ignore
                                    (Ojs.call x1856 "push"
                                       [|((match x1858 with
                                           | `U1 x1859 ->
                                               Ojs.string_to_js x1859
                                           | `U2 x1860 ->
                                               Ojs.list_to_js
                                                 Ojs.string_to_js x1860))|])
                              | None -> ());
                             (match x1855 with
                              | Some x1857 ->
                                  ignore
                                    (Ojs.call x1856 "push"
                                       [|(Intl.DateTimeFormatOptions.t_to_js
                                            x1857)|])
                              | None -> ());
                             x1856))|])
    let (toString : 'tags this -> string) =
      fun (x1865 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x1865) "toString" [||])
    let (toDateString : 'tags this -> string) =
      fun (x1867 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x1867) "toDateString" [||])
    let (toTimeString : 'tags this -> string) =
      fun (x1869 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x1869) "toTimeString" [||])
    let (toLocaleString'' : 'tags this -> string) =
      fun (x1871 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x1871) "toLocaleString" [||])
    let (toLocaleDateString'' : 'tags this -> string) =
      fun (x1873 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x1873) "toLocaleDateString" [||])
    let (toLocaleTimeString'' : 'tags this -> string) =
      fun (x1875 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x1875) "toLocaleTimeString" [||])
    let (valueOf : 'tags this -> float) =
      fun (x1877 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x1877) "valueOf" [||])
    let (getTime : 'tags this -> float) =
      fun (x1879 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x1879) "getTime" [||])
    let (getFullYear : 'tags this -> float) =
      fun (x1881 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x1881) "getFullYear" [||])
    let (getUTCFullYear : 'tags this -> float) =
      fun (x1883 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x1883) "getUTCFullYear" [||])
    let (getMonth : 'tags this -> float) =
      fun (x1885 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x1885) "getMonth" [||])
    let (getUTCMonth : 'tags this -> float) =
      fun (x1887 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x1887) "getUTCMonth" [||])
    let (getDate : 'tags this -> float) =
      fun (x1889 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x1889) "getDate" [||])
    let (getUTCDate : 'tags this -> float) =
      fun (x1891 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x1891) "getUTCDate" [||])
    let (getDay : 'tags this -> float) =
      fun (x1893 : 'tags this) ->
        Ojs.float_of_js (Ojs.call (this_to_js Obj.magic x1893) "getDay" [||])
    let (getUTCDay : 'tags this -> float) =
      fun (x1895 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x1895) "getUTCDay" [||])
    let (getHours : 'tags this -> float) =
      fun (x1897 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x1897) "getHours" [||])
    let (getUTCHours : 'tags this -> float) =
      fun (x1899 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x1899) "getUTCHours" [||])
    let (getMinutes : 'tags this -> float) =
      fun (x1901 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x1901) "getMinutes" [||])
    let (getUTCMinutes : 'tags this -> float) =
      fun (x1903 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x1903) "getUTCMinutes" [||])
    let (getSeconds : 'tags this -> float) =
      fun (x1905 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x1905) "getSeconds" [||])
    let (getUTCSeconds : 'tags this -> float) =
      fun (x1907 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x1907) "getUTCSeconds" [||])
    let (getMilliseconds : 'tags this -> float) =
      fun (x1909 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x1909) "getMilliseconds" [||])
    let (getUTCMilliseconds : 'tags this -> float) =
      fun (x1911 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x1911) "getUTCMilliseconds" [||])
    let (getTimezoneOffset : 'tags this -> float) =
      fun (x1913 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x1913) "getTimezoneOffset" [||])
    let (setTime : 'tags this -> time:float -> float) =
      fun (x1916 : 'tags this) ->
        fun ~time:(x1915 : float) ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x1916) "setTime"
               [|(Ojs.float_to_js x1915)|])
    let (setMilliseconds : 'tags this -> ms:float -> float) =
      fun (x1919 : 'tags this) ->
        fun ~ms:(x1918 : float) ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x1919) "setMilliseconds"
               [|(Ojs.float_to_js x1918)|])
    let (setUTCMilliseconds : 'tags this -> ms:float -> float) =
      fun (x1922 : 'tags this) ->
        fun ~ms:(x1921 : float) ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x1922) "setUTCMilliseconds"
               [|(Ojs.float_to_js x1921)|])
    let (setSeconds : 'tags this -> sec:float -> ?ms:float -> unit -> float)
      =
      fun (x1928 : 'tags this) ->
        fun ~sec:(x1924 : float) ->
          fun ?ms:(x1925 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x1930 = this_to_js Obj.magic x1928 in
                 Ojs.call (Ojs.get_prop_ascii x1930 "setSeconds") "apply"
                   [|x1930;((let x1926 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1926 "push"
                                  [|(Ojs.float_to_js x1924)|]);
                             (match x1925 with
                              | Some x1927 ->
                                  ignore
                                    (Ojs.call x1926 "push"
                                       [|(Ojs.float_to_js x1927)|])
                              | None -> ());
                             x1926))|])
    let (setUTCSeconds :
      'tags this -> sec:float -> ?ms:float -> unit -> float) =
      fun (x1935 : 'tags this) ->
        fun ~sec:(x1931 : float) ->
          fun ?ms:(x1932 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x1937 = this_to_js Obj.magic x1935 in
                 Ojs.call (Ojs.get_prop_ascii x1937 "setUTCSeconds") "apply"
                   [|x1937;((let x1933 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1933 "push"
                                  [|(Ojs.float_to_js x1931)|]);
                             (match x1932 with
                              | Some x1934 ->
                                  ignore
                                    (Ojs.call x1933 "push"
                                       [|(Ojs.float_to_js x1934)|])
                              | None -> ());
                             x1933))|])
    let (setMinutes :
      'tags this -> min:float -> ?sec:float -> ?ms:float -> unit -> float) =
      fun (x1944 : 'tags this) ->
        fun ~min:(x1938 : float) ->
          fun ?sec:(x1939 : float option) ->
            fun ?ms:(x1940 : float option) ->
              fun () ->
                Ojs.float_of_js
                  (let x1946 = this_to_js Obj.magic x1944 in
                   Ojs.call (Ojs.get_prop_ascii x1946 "setMinutes") "apply"
                     [|x1946;((let x1941 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x1941 "push"
                                    [|(Ojs.float_to_js x1938)|]);
                               (match x1939 with
                                | Some x1943 ->
                                    ignore
                                      (Ojs.call x1941 "push"
                                         [|(Ojs.float_to_js x1943)|])
                                | None -> ());
                               (match x1940 with
                                | Some x1942 ->
                                    ignore
                                      (Ojs.call x1941 "push"
                                         [|(Ojs.float_to_js x1942)|])
                                | None -> ());
                               x1941))|])
    let (setUTCMinutes :
      'tags this -> min:float -> ?sec:float -> ?ms:float -> unit -> float) =
      fun (x1953 : 'tags this) ->
        fun ~min:(x1947 : float) ->
          fun ?sec:(x1948 : float option) ->
            fun ?ms:(x1949 : float option) ->
              fun () ->
                Ojs.float_of_js
                  (let x1955 = this_to_js Obj.magic x1953 in
                   Ojs.call (Ojs.get_prop_ascii x1955 "setUTCMinutes")
                     "apply"
                     [|x1955;((let x1950 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x1950 "push"
                                    [|(Ojs.float_to_js x1947)|]);
                               (match x1948 with
                                | Some x1952 ->
                                    ignore
                                      (Ojs.call x1950 "push"
                                         [|(Ojs.float_to_js x1952)|])
                                | None -> ());
                               (match x1949 with
                                | Some x1951 ->
                                    ignore
                                      (Ojs.call x1950 "push"
                                         [|(Ojs.float_to_js x1951)|])
                                | None -> ());
                               x1950))|])
    let (setHours :
      'tags this ->
        hours:float -> ?min:float -> ?sec:float -> ?ms:float -> unit -> float)
      =
      fun (x1964 : 'tags this) ->
        fun ~hours:(x1956 : float) ->
          fun ?min:(x1957 : float option) ->
            fun ?sec:(x1958 : float option) ->
              fun ?ms:(x1959 : float option) ->
                fun () ->
                  Ojs.float_of_js
                    (let x1966 = this_to_js Obj.magic x1964 in
                     Ojs.call (Ojs.get_prop_ascii x1966 "setHours") "apply"
                       [|x1966;((let x1960 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x1960 "push"
                                      [|(Ojs.float_to_js x1956)|]);
                                 (match x1957 with
                                  | Some x1963 ->
                                      ignore
                                        (Ojs.call x1960 "push"
                                           [|(Ojs.float_to_js x1963)|])
                                  | None -> ());
                                 (match x1958 with
                                  | Some x1962 ->
                                      ignore
                                        (Ojs.call x1960 "push"
                                           [|(Ojs.float_to_js x1962)|])
                                  | None -> ());
                                 (match x1959 with
                                  | Some x1961 ->
                                      ignore
                                        (Ojs.call x1960 "push"
                                           [|(Ojs.float_to_js x1961)|])
                                  | None -> ());
                                 x1960))|])
    let (setUTCHours :
      'tags this ->
        hours:float -> ?min:float -> ?sec:float -> ?ms:float -> unit -> float)
      =
      fun (x1975 : 'tags this) ->
        fun ~hours:(x1967 : float) ->
          fun ?min:(x1968 : float option) ->
            fun ?sec:(x1969 : float option) ->
              fun ?ms:(x1970 : float option) ->
                fun () ->
                  Ojs.float_of_js
                    (let x1977 = this_to_js Obj.magic x1975 in
                     Ojs.call (Ojs.get_prop_ascii x1977 "setUTCHours")
                       "apply"
                       [|x1977;((let x1971 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x1971 "push"
                                      [|(Ojs.float_to_js x1967)|]);
                                 (match x1968 with
                                  | Some x1974 ->
                                      ignore
                                        (Ojs.call x1971 "push"
                                           [|(Ojs.float_to_js x1974)|])
                                  | None -> ());
                                 (match x1969 with
                                  | Some x1973 ->
                                      ignore
                                        (Ojs.call x1971 "push"
                                           [|(Ojs.float_to_js x1973)|])
                                  | None -> ());
                                 (match x1970 with
                                  | Some x1972 ->
                                      ignore
                                        (Ojs.call x1971 "push"
                                           [|(Ojs.float_to_js x1972)|])
                                  | None -> ());
                                 x1971))|])
    let (setDate : 'tags this -> date:float -> float) =
      fun (x1979 : 'tags this) ->
        fun ~date:(x1978 : float) ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x1979) "setDate"
               [|(Ojs.float_to_js x1978)|])
    let (setUTCDate : 'tags this -> date:float -> float) =
      fun (x1982 : 'tags this) ->
        fun ~date:(x1981 : float) ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x1982) "setUTCDate"
               [|(Ojs.float_to_js x1981)|])
    let (setMonth :
      'tags this -> month:float -> ?date:float -> unit -> float) =
      fun (x1988 : 'tags this) ->
        fun ~month:(x1984 : float) ->
          fun ?date:(x1985 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x1990 = this_to_js Obj.magic x1988 in
                 Ojs.call (Ojs.get_prop_ascii x1990 "setMonth") "apply"
                   [|x1990;((let x1986 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1986 "push"
                                  [|(Ojs.float_to_js x1984)|]);
                             (match x1985 with
                              | Some x1987 ->
                                  ignore
                                    (Ojs.call x1986 "push"
                                       [|(Ojs.float_to_js x1987)|])
                              | None -> ());
                             x1986))|])
    let (setUTCMonth :
      'tags this -> month:float -> ?date:float -> unit -> float) =
      fun (x1995 : 'tags this) ->
        fun ~month:(x1991 : float) ->
          fun ?date:(x1992 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x1997 = this_to_js Obj.magic x1995 in
                 Ojs.call (Ojs.get_prop_ascii x1997 "setUTCMonth") "apply"
                   [|x1997;((let x1993 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1993 "push"
                                  [|(Ojs.float_to_js x1991)|]);
                             (match x1992 with
                              | Some x1994 ->
                                  ignore
                                    (Ojs.call x1993 "push"
                                       [|(Ojs.float_to_js x1994)|])
                              | None -> ());
                             x1993))|])
    let (setFullYear :
      'tags this ->
        year:float -> ?month:float -> ?date:float -> unit -> float)
      =
      fun (x2004 : 'tags this) ->
        fun ~year:(x1998 : float) ->
          fun ?month:(x1999 : float option) ->
            fun ?date:(x2000 : float option) ->
              fun () ->
                Ojs.float_of_js
                  (let x2006 = this_to_js Obj.magic x2004 in
                   Ojs.call (Ojs.get_prop_ascii x2006 "setFullYear") "apply"
                     [|x2006;((let x2001 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x2001 "push"
                                    [|(Ojs.float_to_js x1998)|]);
                               (match x1999 with
                                | Some x2003 ->
                                    ignore
                                      (Ojs.call x2001 "push"
                                         [|(Ojs.float_to_js x2003)|])
                                | None -> ());
                               (match x2000 with
                                | Some x2002 ->
                                    ignore
                                      (Ojs.call x2001 "push"
                                         [|(Ojs.float_to_js x2002)|])
                                | None -> ());
                               x2001))|])
    let (setUTCFullYear :
      'tags this ->
        year:float -> ?month:float -> ?date:float -> unit -> float)
      =
      fun (x2013 : 'tags this) ->
        fun ~year:(x2007 : float) ->
          fun ?month:(x2008 : float option) ->
            fun ?date:(x2009 : float option) ->
              fun () ->
                Ojs.float_of_js
                  (let x2015 = this_to_js Obj.magic x2013 in
                   Ojs.call (Ojs.get_prop_ascii x2015 "setUTCFullYear")
                     "apply"
                     [|x2015;((let x2010 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x2010 "push"
                                    [|(Ojs.float_to_js x2007)|]);
                               (match x2008 with
                                | Some x2012 ->
                                    ignore
                                      (Ojs.call x2010 "push"
                                         [|(Ojs.float_to_js x2012)|])
                                | None -> ());
                               (match x2009 with
                                | Some x2011 ->
                                    ignore
                                      (Ojs.call x2010 "push"
                                         [|(Ojs.float_to_js x2011)|])
                                | None -> ());
                               x2010))|])
    let (toUTCString : 'tags this -> string) =
      fun (x2016 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x2016) "toUTCString" [||])
    let (toISOString : 'tags this -> string) =
      fun (x2018 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x2018) "toISOString" [||])
    let (toJSON : 'tags this -> ?key:any -> unit -> string) =
      fun (x2023 : 'tags this) ->
        fun ?key:(x2020 : any option) ->
          fun () ->
            Ojs.string_of_js
              (let x2025 = this_to_js Obj.magic x2023 in
               Ojs.call (Ojs.get_prop_ascii x2025 "toJSON") "apply"
                 [|x2025;((let x2021 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x2020 with
                            | Some x2022 ->
                                ignore
                                  (Ojs.call x2021 "push"
                                     [|(any_to_js x2022)|])
                            | None -> ());
                           x2021))|])
    let (create : [ `U1 of float  | `U2 of string  | `U3 of t ] -> t) =
      fun (x2026 : [ `U1 of float  | `U2 of string  | `U3 of t ]) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Date")
             [|((match x2026 with
                 | `U1 x2027 -> Ojs.float_to_js x2027
                 | `U2 x2028 -> Ojs.string_to_js x2028
                 | `U3 x2029 -> t_to_js x2029))|])
    let (create' : unit -> t) =
      fun () ->
        t_of_js (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Date") [||])
    let (create'' : [ `U1 of float  | `U2 of string ] -> t) =
      fun (x2030 : [ `U1 of float  | `U2 of string ]) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Date")
             [|((match x2030 with
                 | `U1 x2031 -> Ojs.float_to_js x2031
                 | `U2 x2032 -> Ojs.string_to_js x2032))|])
    let (create''' :
      year:float ->
        monthIndex:float ->
          ?date:float ->
            ?hours:float ->
              ?minutes:float -> ?seconds:float -> ?ms:float -> unit -> t)
      =
      fun ~year:(x2033 : float) ->
        fun ~monthIndex:(x2034 : float) ->
          fun ?date:(x2035 : float option) ->
            fun ?hours:(x2036 : float option) ->
              fun ?minutes:(x2037 : float option) ->
                fun ?seconds:(x2038 : float option) ->
                  fun ?ms:(x2039 : float option) ->
                    fun () ->
                      t_of_js
                        (Ojs.new_obj_arr
                           (Ojs.get_prop_ascii Ojs.global "Date")
                           (let x2040 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x2040 "push"
                                 [|(Ojs.float_to_js x2033)|]);
                            ignore
                              (Ojs.call x2040 "push"
                                 [|(Ojs.float_to_js x2034)|]);
                            (match x2035 with
                             | Some x2045 ->
                                 ignore
                                   (Ojs.call x2040 "push"
                                      [|(Ojs.float_to_js x2045)|])
                             | None -> ());
                            (match x2036 with
                             | Some x2044 ->
                                 ignore
                                   (Ojs.call x2040 "push"
                                      [|(Ojs.float_to_js x2044)|])
                             | None -> ());
                            (match x2037 with
                             | Some x2043 ->
                                 ignore
                                   (Ojs.call x2040 "push"
                                      [|(Ojs.float_to_js x2043)|])
                             | None -> ());
                            (match x2038 with
                             | Some x2042 ->
                                 ignore
                                   (Ojs.call x2040 "push"
                                      [|(Ojs.float_to_js x2042)|])
                             | None -> ());
                            (match x2039 with
                             | Some x2041 ->
                                 ignore
                                   (Ojs.call x2040 "push"
                                      [|(Ojs.float_to_js x2041)|])
                             | None -> ());
                            x2040))
    let (invoke : unit -> string) =
      fun () ->
        Ojs.string_of_js
          (Ojs.apply (Ojs.get_prop_ascii Ojs.global "Date") [||])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Date")
             "prototype")
    let (parse : string -> float) =
      fun (x2046 : string) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Date") "parse"
             [|(Ojs.string_to_js x2046)|])
    let (utc :
      year:float ->
        monthIndex:float ->
          ?date:float ->
            ?hours:float ->
              ?minutes:float -> ?seconds:float -> ?ms:float -> unit -> float)
      =
      fun ~year:(x2047 : float) ->
        fun ~monthIndex:(x2048 : float) ->
          fun ?date:(x2049 : float option) ->
            fun ?hours:(x2050 : float option) ->
              fun ?minutes:(x2051 : float option) ->
                fun ?seconds:(x2052 : float option) ->
                  fun ?ms:(x2053 : float option) ->
                    fun () ->
                      Ojs.float_of_js
                        (let x2060 = Ojs.get_prop_ascii Ojs.global "Date" in
                         Ojs.call (Ojs.get_prop_ascii x2060 "UTC") "apply"
                           [|x2060;((let x2054 =
                                       Ojs.new_obj
                                         (Ojs.get_prop_ascii Ojs.global
                                            "Array") [||] in
                                     ignore
                                       (Ojs.call x2054 "push"
                                          [|(Ojs.float_to_js x2047)|]);
                                     ignore
                                       (Ojs.call x2054 "push"
                                          [|(Ojs.float_to_js x2048)|]);
                                     (match x2049 with
                                      | Some x2059 ->
                                          ignore
                                            (Ojs.call x2054 "push"
                                               [|(Ojs.float_to_js x2059)|])
                                      | None -> ());
                                     (match x2050 with
                                      | Some x2058 ->
                                          ignore
                                            (Ojs.call x2054 "push"
                                               [|(Ojs.float_to_js x2058)|])
                                      | None -> ());
                                     (match x2051 with
                                      | Some x2057 ->
                                          ignore
                                            (Ojs.call x2054 "push"
                                               [|(Ojs.float_to_js x2057)|])
                                      | None -> ());
                                     (match x2052 with
                                      | Some x2056 ->
                                          ignore
                                            (Ojs.call x2054 "push"
                                               [|(Ojs.float_to_js x2056)|])
                                      | None -> ());
                                     (match x2053 with
                                      | Some x2055 ->
                                          ignore
                                            (Ojs.call x2054 "push"
                                               [|(Ojs.float_to_js x2055)|])
                                      | None -> ());
                                     x2054))|])
    let (now : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Date") "now" [||])
    let cast_from = Obj.magic
  end
 and
  Intl:sig
         module SegmentData :
         sig
           type t = [ `Intl_SegmentData ] intf
           [@@@js.stop ]
           type tags = [ `Intl_SegmentData ]
           [@@@js.start ]
           [@@@js.implem type tags = [ `Intl_SegmentData ]]
           type 'tags this =
             'tags intf constraint 'tags = [> `Intl_SegmentData ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val get_segment : 'tags this -> string
           val set_segment : 'tags this -> string -> unit
           val get_index : 'tags this -> float
           val set_index : 'tags this -> float -> unit
           val get_input : 'tags this -> string
           val set_input : 'tags this -> string -> unit
           val get_isWordLike : 'tags this -> bool option
           val set_isWordLike : 'tags this -> bool -> unit
           val create :
             segment:string ->
               index:float -> input:string -> ?isWordLike:bool -> unit -> t
           val cast_from : 'tags this -> t
         end
         module Segments :
         sig
           type t = [ `Intl_Segments ] intf
           [@@@js.stop ]
           type tags = [ `Intl_Segments ]
           [@@@js.start ]
           [@@@js.implem type tags = [ `Intl_Segments ]]
           type 'tags this =
             'tags intf constraint 'tags = [> `Intl_Segments ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val containing :
             'tags this -> ?codeUnitIndex:float -> unit -> SegmentData.t
           val cast_from : 'tags this -> t
         end
         module SegmenterOptions :
         sig
           type t = [ `Intl_SegmenterOptions ] intf
           [@@@js.stop ]
           type tags = [ `Intl_SegmenterOptions ]
           [@@@js.start ]
           [@@@js.implem type tags = [ `Intl_SegmenterOptions ]]
           type 'tags this =
             'tags intf constraint 'tags = [> `Intl_SegmenterOptions ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val get_localeMatcher :
             'tags this -> [ `L_s26_best_fit  | `L_s81_lookup ] option
           val set_localeMatcher :
             'tags this ->
               [ `Undefined of undefined  | `U1 of [ `L_s26_best_fit ] 
               | `U2 of [ `L_s81_lookup ] ] -> unit
           val get_granularity :
             'tags this ->
               [ `L_s120_sentence  | `L_s144_word  | `L_s65_grapheme ] option
           val set_granularity :
             'tags this ->
               [ `Undefined of undefined  | `U1 of [ `L_s65_grapheme ] 
               | `U2 of [ `L_s144_word ]  | `U3 of [ `L_s120_sentence ] ] ->
                 unit
           val create :
             ?localeMatcher:[ `L_s26_best_fit  | `L_s81_lookup ] ->
               ?granularity:[ `L_s120_sentence  | `L_s144_word 
                            | `L_s65_grapheme ]
                 -> unit -> t
           val cast_from : 'tags this -> t
         end
         module ResolvedSegmenterOptions :
         sig
           type t = [ `Intl_ResolvedSegmenterOptions ] intf
           [@@@js.stop ]
           type tags = [ `Intl_ResolvedSegmenterOptions ]
           [@@@js.start ]
           [@@@js.implem type tags = [ `Intl_ResolvedSegmenterOptions ]]
           type 'tags this =
             'tags intf constraint 'tags =
                         [> `Intl_ResolvedSegmenterOptions ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val get_locale : 'tags this -> string
           val set_locale : 'tags this -> string -> unit
           val get_granularity :
             'tags this ->
               [ `L_s120_sentence  | `L_s144_word  | `L_s65_grapheme ]
           val set_granularity :
             'tags this ->
               [ `U1 of [ `L_s65_grapheme ]  | `U2 of [ `L_s144_word ] 
               | `U3 of [ `L_s120_sentence ] ] -> unit
           val create :
             locale:string ->
               granularity:[ `L_s120_sentence  | `L_s144_word 
                           | `L_s65_grapheme ]
                 -> unit -> t
           val cast_from : 'tags this -> t
         end
         module BCP47LanguageTag :
         sig
           type t = string
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
         end
         module Segmenter :
         sig
           type t = [ `Intl_Segmenter ] intf
           [@@@js.stop ]
           type tags = [ `Intl_Segmenter ]
           [@@@js.start ]
           [@@@js.implem type tags = [ `Intl_Segmenter ]]
           type 'tags this =
             'tags intf constraint 'tags = [> `Intl_Segmenter ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val segment : 'tags this -> input:string -> Segments.t
           val resolvedOptions : 'tags this -> ResolvedSegmenterOptions.t
           val cast_from : 'tags this -> t
           val prototype : unit -> t
           val create :
             ?locales:[ `U1 of BCP47LanguageTag.t 
                      | `U2 of BCP47LanguageTag.t list ]
               -> ?options:SegmenterOptions.t -> unit -> t
           val supportedLocalesOf :
             locales:[ `U1 of BCP47LanguageTag.t 
                     | `U2 of BCP47LanguageTag.t list ]
               ->
               ?options:(SegmenterOptions.t, [ `L_s77_localeMatcher ]) Pick.t
                 -> unit -> BCP47LanguageTag.t list
         end
         module RelativeTimeFormatNumeric :
         sig
           type t = [ `L_s22_always  | `L_s23_auto ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
         end
         module UnicodeBCP47LocaleIdentifier :
         sig
           type t = string
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
         end
         module RelativeTimeFormatStyle :
         sig
           type t = [ `L_s122_short  | `L_s78_long  | `L_s92_narrow ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
         end
         module ResolvedRelativeTimeFormatOptions :
         sig
           type t = [ `Intl_ResolvedRelativeTimeFormatOptions ] intf
           [@@@js.stop ]
           type tags = [ `Intl_ResolvedRelativeTimeFormatOptions ]
           [@@@js.start ]
           [@@@js.implem
             type tags = [ `Intl_ResolvedRelativeTimeFormatOptions ]]
           type 'tags this =
             'tags intf constraint 'tags =
                         [> `Intl_ResolvedRelativeTimeFormatOptions ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val get_locale : 'tags this -> UnicodeBCP47LocaleIdentifier.t
           val set_locale :
             'tags this -> UnicodeBCP47LocaleIdentifier.t -> unit
           val get_style : 'tags this -> RelativeTimeFormatStyle.t
           val set_style : 'tags this -> RelativeTimeFormatStyle.t -> unit
           val get_numeric : 'tags this -> RelativeTimeFormatNumeric.t
           val set_numeric :
             'tags this -> RelativeTimeFormatNumeric.t -> unit
           val get_numberingSystem : 'tags this -> string
           val set_numberingSystem : 'tags this -> string -> unit
           val create :
             locale:UnicodeBCP47LocaleIdentifier.t ->
               style:RelativeTimeFormatStyle.t ->
                 numeric:RelativeTimeFormatNumeric.t ->
                   numberingSystem:string -> unit -> t
           val cast_from : 'tags this -> t
         end
         module RelativeTimeFormatUnit :
         sig
           type t =
             [ `L_s109_quarter  | `L_s110_quarters  | `L_s118_second 
             | `L_s119_seconds  | `L_s141_week  | `L_s143_weeks 
             | `L_s145_year  | `L_s146_years  | `L_s38_day  | `L_s40_days 
             | `L_s71_hour  | `L_s72_hours  | `L_s86_minute 
             | `L_s87_minutes  | `L_s88_month  | `L_s89_months ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
         end
         module RelativeTimeFormatUnitSingular :
         sig
           type t =
             [ `L_s109_quarter  | `L_s118_second  | `L_s141_week 
             | `L_s145_year  | `L_s38_day  | `L_s71_hour  | `L_s86_minute 
             | `L_s88_month ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
         end
         module ES2020NumberFormatPartType :
         sig
           type t =
             [ `L_s137_unit  | `L_s138_unknown  | `L_s33_compact 
             | `L_s55_exponentInteger  | `L_s56_exponentMinusSign 
             | `L_s57_exponentSeparator ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
         end
         module ES2018NumberFormatPartType :
         sig
           type t =
             [ `L_s103_percent  | `L_s104_percentSign  | `L_s108_plusSign 
             | `L_s130_symbol  | `L_s31_code  | `L_s36_currency 
             | `L_s41_decimal  | `L_s60_fraction  | `L_s66_group 
             | `L_s73_infinity  | `L_s74_integer  | `L_s76_literal 
             | `L_s85_minusSign  | `L_s90_name  | `L_s91_nan ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
         end
         module NumberFormatPartTypes :
         sig
           type t =
             [ `L_s103_percent  | `L_s104_percentSign  | `L_s108_plusSign 
             | `L_s130_symbol  | `L_s137_unit  | `L_s138_unknown 
             | `L_s31_code  | `L_s33_compact  | `L_s36_currency 
             | `L_s41_decimal  | `L_s55_exponentInteger 
             | `L_s56_exponentMinusSign  | `L_s57_exponentSeparator 
             | `L_s60_fraction  | `L_s66_group  | `L_s73_infinity 
             | `L_s74_integer  | `L_s76_literal  | `L_s85_minusSign 
             | `L_s90_name  | `L_s91_nan ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
         end
         module RelativeTimeFormatPart :
         sig
           module AnonymousInterface13 :
           sig
             type t = private Ojs.t
             val t_to_js : t -> Ojs.t
             val t_of_js : Ojs.t -> t
             val get_type :
               t -> (NumberFormatPartTypes.t, [ `L_s76_literal ]) Exclude.t
             val set_type :
               t ->
                 (NumberFormatPartTypes.t, [ `L_s76_literal ]) Exclude.t ->
                   unit
             val get_value : t -> string
             val set_value : t -> string -> unit
             val get_unit : t -> RelativeTimeFormatUnitSingular.t
             val set_unit : t -> RelativeTimeFormatUnitSingular.t -> unit
             val create :
               type_:(NumberFormatPartTypes.t, [ `L_s76_literal ]) Exclude.t
                 ->
                 value:string ->
                   unit:RelativeTimeFormatUnitSingular.t -> unit -> t
           end
           module AnonymousInterface11 :
           sig
             type t = private Ojs.t
             val t_to_js : t -> Ojs.t
             val t_of_js : Ojs.t -> t
             val get_type : t -> [ `L_s76_literal ]
             val set_type : t -> [ `L_s76_literal ] -> unit
             val get_value : t -> string
             val set_value : t -> string -> unit
             val create :
               type_:[ `L_s76_literal ] -> value:string -> unit -> t
           end
           type t = (AnonymousInterface11.t, AnonymousInterface13.t) union2
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
         end
         module RelativeTimeFormatLocaleMatcher :
         sig
           type t = [ `L_s26_best_fit  | `L_s81_lookup ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
         end
         module RelativeTimeFormatOptions :
         sig
           type t = [ `Intl_RelativeTimeFormatOptions ] intf
           [@@@js.stop ]
           type tags = [ `Intl_RelativeTimeFormatOptions ]
           [@@@js.start ]
           [@@@js.implem type tags = [ `Intl_RelativeTimeFormatOptions ]]
           type 'tags this =
             'tags intf constraint 'tags =
                         [> `Intl_RelativeTimeFormatOptions ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val get_localeMatcher :
             'tags this -> RelativeTimeFormatLocaleMatcher.t option
           val set_localeMatcher :
             'tags this -> RelativeTimeFormatLocaleMatcher.t -> unit
           val get_numeric : 'tags this -> RelativeTimeFormatNumeric.t option
           val set_numeric :
             'tags this -> RelativeTimeFormatNumeric.t -> unit
           val get_style : 'tags this -> RelativeTimeFormatStyle.t option
           val set_style : 'tags this -> RelativeTimeFormatStyle.t -> unit
           val create :
             ?localeMatcher:RelativeTimeFormatLocaleMatcher.t ->
               ?numeric:RelativeTimeFormatNumeric.t ->
                 ?style:RelativeTimeFormatStyle.t -> unit -> t
           val cast_from : 'tags this -> t
         end
         module RelativeTimeFormat :
         sig
           type t = [ `Intl_RelativeTimeFormat ] intf
           [@@@js.stop ]
           type tags = [ `Intl_RelativeTimeFormat ]
           [@@@js.start ]
           [@@@js.implem type tags = [ `Intl_RelativeTimeFormat ]]
           type 'tags this =
             'tags intf constraint 'tags = [> `Intl_RelativeTimeFormat ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val format :
             'tags this ->
               value:float -> unit:RelativeTimeFormatUnit.t -> string
           val formatToParts :
             'tags this ->
               value:float ->
                 unit:RelativeTimeFormatUnit.t ->
                   RelativeTimeFormatPart.t list
           val resolvedOptions :
             'tags this -> ResolvedRelativeTimeFormatOptions.t
           val cast_from : 'tags this -> t
           val create :
             ?locales:[ `U1 of UnicodeBCP47LocaleIdentifier.t 
                      | `U2 of UnicodeBCP47LocaleIdentifier.t list ]
               -> ?options:RelativeTimeFormatOptions.t -> unit -> t
           val supportedLocalesOf :
             ?locales:[ `U1 of UnicodeBCP47LocaleIdentifier.t 
                      | `U2 of UnicodeBCP47LocaleIdentifier.t list ]
               ->
               ?options:RelativeTimeFormatOptions.t ->
                 unit -> UnicodeBCP47LocaleIdentifier.t list
         end
         module PluralRuleType :
         sig
           type t = [ `L_s101_ordinal  | `L_s29_cardinal ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
         end
         module LDMLPluralRule :
         sig
           type t =
             [ `L_s100_one  | `L_s102_other  | `L_s135_two  | `L_s147_zero 
             | `L_s59_few  | `L_s83_many ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
         end
         module ResolvedPluralRulesOptions :
         sig
           type t = [ `Intl_ResolvedPluralRulesOptions ] intf
           [@@@js.stop ]
           type tags = [ `Intl_ResolvedPluralRulesOptions ]
           [@@@js.start ]
           [@@@js.implem type tags = [ `Intl_ResolvedPluralRulesOptions ]]
           type 'tags this =
             'tags intf constraint 'tags =
                         [> `Intl_ResolvedPluralRulesOptions ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val get_locale : 'tags this -> string
           val set_locale : 'tags this -> string -> unit
           val get_pluralCategories : 'tags this -> LDMLPluralRule.t list
           val set_pluralCategories :
             'tags this -> LDMLPluralRule.t list -> unit
           val get_type : 'tags this -> PluralRuleType.t
           val set_type : 'tags this -> PluralRuleType.t -> unit
           val get_minimumIntegerDigits : 'tags this -> float
           val set_minimumIntegerDigits : 'tags this -> float -> unit
           val get_minimumFractionDigits : 'tags this -> float
           val set_minimumFractionDigits : 'tags this -> float -> unit
           val get_maximumFractionDigits : 'tags this -> float
           val set_maximumFractionDigits : 'tags this -> float -> unit
           val get_minimumSignificantDigits : 'tags this -> float option
           val set_minimumSignificantDigits : 'tags this -> float -> unit
           val get_maximumSignificantDigits : 'tags this -> float option
           val set_maximumSignificantDigits : 'tags this -> float -> unit
           val create :
             locale:string ->
               pluralCategories:LDMLPluralRule.t list ->
                 type_:PluralRuleType.t ->
                   minimumIntegerDigits:float ->
                     minimumFractionDigits:float ->
                       maximumFractionDigits:float ->
                         ?minimumSignificantDigits:float ->
                           ?maximumSignificantDigits:float -> unit -> t
           val cast_from : 'tags this -> t
         end
         module PluralRulesOptions :
         sig
           type t = [ `Intl_PluralRulesOptions ] intf
           [@@@js.stop ]
           type tags = [ `Intl_PluralRulesOptions ]
           [@@@js.start ]
           [@@@js.implem type tags = [ `Intl_PluralRulesOptions ]]
           type 'tags this =
             'tags intf constraint 'tags = [> `Intl_PluralRulesOptions ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val get_localeMatcher :
             'tags this -> [ `L_s26_best_fit  | `L_s81_lookup ] option
           val set_localeMatcher :
             'tags this ->
               [ `Undefined of undefined  | `U1 of [ `L_s81_lookup ] 
               | `U2 of [ `L_s26_best_fit ] ] -> unit
           val get_type : 'tags this -> PluralRuleType.t option
           val set_type :
             'tags this ->
               [ `Undefined of undefined  | `U1 of PluralRuleType.t ] -> unit
           val get_minimumIntegerDigits : 'tags this -> float option
           val set_minimumIntegerDigits :
             'tags this ->
               [ `Undefined of undefined  | `U1 of float ] -> unit
           val get_minimumFractionDigits : 'tags this -> float option
           val set_minimumFractionDigits :
             'tags this ->
               [ `Undefined of undefined  | `U1 of float ] -> unit
           val get_maximumFractionDigits : 'tags this -> float option
           val set_maximumFractionDigits :
             'tags this ->
               [ `Undefined of undefined  | `U1 of float ] -> unit
           val get_minimumSignificantDigits : 'tags this -> float option
           val set_minimumSignificantDigits :
             'tags this ->
               [ `Undefined of undefined  | `U1 of float ] -> unit
           val get_maximumSignificantDigits : 'tags this -> float option
           val set_maximumSignificantDigits :
             'tags this ->
               [ `Undefined of undefined  | `U1 of float ] -> unit
           val create :
             ?localeMatcher:[ `L_s26_best_fit  | `L_s81_lookup ] ->
               ?type_:PluralRuleType.t ->
                 ?minimumIntegerDigits:float ->
                   ?minimumFractionDigits:float ->
                     ?maximumFractionDigits:float ->
                       ?minimumSignificantDigits:float ->
                         ?maximumSignificantDigits:float -> unit -> t
           val cast_from : 'tags this -> t
         end
         module PluralRules :
         sig
           module AnonymousInterface6 :
           sig
             type t = private Ojs.t
             val t_to_js : t -> Ojs.t
             val t_of_js : Ojs.t -> t
             val get_localeMatcher :
               t -> [ `L_s26_best_fit  | `L_s81_lookup ] option
             val set_localeMatcher :
               t ->
                 [ `U1 of [ `L_s81_lookup ]  | `U2 of [ `L_s26_best_fit ] ]
                   -> unit
             val create :
               ?localeMatcher:[ `L_s26_best_fit  | `L_s81_lookup ] ->
                 unit -> t
           end
           type t = [ `Intl_PluralRules ] intf
           [@@@js.stop ]
           type tags = [ `Intl_PluralRules ]
           [@@@js.start ]
           [@@@js.implem type tags = [ `Intl_PluralRules ]]
           type 'tags this =
             'tags intf constraint 'tags = [> `Intl_PluralRules ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val resolvedOptions : 'tags this -> ResolvedPluralRulesOptions.t
           val select : 'tags this -> n:float -> LDMLPluralRule.t
           val cast_from : 'tags this -> t
           val create :
             ?locales:[ `U1 of string  | `U2 of string list ] ->
               ?options:PluralRulesOptions.t -> unit -> t
           val invoke :
             ?locales:[ `U1 of string  | `U2 of string list ] ->
               ?options:PluralRulesOptions.t -> unit -> t
           val supportedLocalesOf :
             locales:[ `U1 of string  | `U2 of string list ] ->
               ?options:AnonymousInterface6.t -> unit -> string list
         end
         module ResolvedNumberFormatOptions :
         sig
           type t = [ `Intl_ResolvedNumberFormatOptions ] intf
           [@@@js.stop ]
           type tags = [ `Intl_ResolvedNumberFormatOptions ]
           [@@@js.start ]
           [@@@js.implem type tags = [ `Intl_ResolvedNumberFormatOptions ]]
           type 'tags this =
             'tags intf constraint 'tags =
                         [> `Intl_ResolvedNumberFormatOptions ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val get_compactDisplay :
             'tags this -> [ `L_s122_short  | `L_s78_long ] option
           val set_compactDisplay :
             'tags this ->
               [ `U1 of [ `L_s122_short ]  | `U2 of [ `L_s78_long ] ] -> unit
           val get_notation :
             'tags this ->
               [ `L_s114_scientific  | `L_s126_standard  | `L_s33_compact 
               | `L_s51_engineering ] option
           val set_notation :
             'tags this ->
               [ `U1 of [ `L_s126_standard ] 
               | `U2 of [ `L_s114_scientific ] 
               | `U3 of [ `L_s51_engineering ]  | `U4 of [ `L_s33_compact ] ]
                 -> unit
           val get_signDisplay :
             'tags this ->
               [ `L_s22_always  | `L_s23_auto  | `L_s54_exceptZero 
               | `L_s93_never ] option
           val set_signDisplay :
             'tags this ->
               [ `U1 of [ `L_s23_auto ]  | `U2 of [ `L_s93_never ] 
               | `U3 of [ `L_s22_always ]  | `U4 of [ `L_s54_exceptZero ] ]
                 -> unit
           val get_unit : 'tags this -> string option
           val set_unit : 'tags this -> string -> unit
           val get_unitDisplay :
             'tags this ->
               [ `L_s122_short  | `L_s78_long  | `L_s92_narrow ] option
           val set_unitDisplay :
             'tags this ->
               [ `U1 of [ `L_s122_short ]  | `U2 of [ `L_s78_long ] 
               | `U3 of [ `L_s92_narrow ] ] -> unit
           val get_currencyDisplay : 'tags this -> string option
           val set_currencyDisplay : 'tags this -> string -> unit
           val get_currencySign : 'tags this -> string option
           val set_currencySign : 'tags this -> string -> unit
           val get_locale : 'tags this -> string
           val set_locale : 'tags this -> string -> unit
           val get_numberingSystem : 'tags this -> string
           val set_numberingSystem : 'tags this -> string -> unit
           val get_style : 'tags this -> string
           val set_style : 'tags this -> string -> unit
           val get_currency : 'tags this -> string option
           val set_currency : 'tags this -> string -> unit
           val get_minimumIntegerDigits : 'tags this -> float
           val set_minimumIntegerDigits : 'tags this -> float -> unit
           val get_minimumFractionDigits : 'tags this -> float
           val set_minimumFractionDigits : 'tags this -> float -> unit
           val get_maximumFractionDigits : 'tags this -> float
           val set_maximumFractionDigits : 'tags this -> float -> unit
           val get_minimumSignificantDigits : 'tags this -> float option
           val set_minimumSignificantDigits : 'tags this -> float -> unit
           val get_maximumSignificantDigits : 'tags this -> float option
           val set_maximumSignificantDigits : 'tags this -> float -> unit
           val get_useGrouping : 'tags this -> bool
           val set_useGrouping : 'tags this -> bool -> unit
           val create :
             ?compactDisplay:[ `L_s122_short  | `L_s78_long ] ->
               ?notation:[ `L_s114_scientific  | `L_s126_standard 
                         | `L_s33_compact  | `L_s51_engineering ]
                 ->
                 ?signDisplay:[ `L_s22_always  | `L_s23_auto 
                              | `L_s54_exceptZero  | `L_s93_never ]
                   ->
                   ?unit:string ->
                     ?unitDisplay:[ `L_s122_short  | `L_s78_long 
                                  | `L_s92_narrow ]
                       ->
                       ?currencyDisplay:string ->
                         ?currencySign:string ->
                           locale:string ->
                             numberingSystem:string ->
                               style:string ->
                                 ?currency:string ->
                                   minimumIntegerDigits:float ->
                                     minimumFractionDigits:float ->
                                       maximumFractionDigits:float ->
                                         ?minimumSignificantDigits:float ->
                                           ?maximumSignificantDigits:float ->
                                             useGrouping:bool -> unit -> t
           val cast_from : 'tags this -> t
         end
         module NumberFormatPart :
         sig
           type t = [ `Intl_NumberFormatPart ] intf
           [@@@js.stop ]
           type tags = [ `Intl_NumberFormatPart ]
           [@@@js.start ]
           [@@@js.implem type tags = [ `Intl_NumberFormatPart ]]
           type 'tags this =
             'tags intf constraint 'tags = [> `Intl_NumberFormatPart ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val get_type : 'tags this -> NumberFormatPartTypes.t
           val set_type : 'tags this -> NumberFormatPartTypes.t -> unit
           val get_value : 'tags this -> string
           val set_value : 'tags this -> string -> unit
           val create :
             type_:NumberFormatPartTypes.t -> value:string -> unit -> t
           val cast_from : 'tags this -> t
         end
         module NumberRangeFormatPart :
         sig
           type t =
             [ `Intl_NumberFormatPart  | `Intl_NumberRangeFormatPart ] intf
           [@@@js.stop ]
           type tags =
             [ `Intl_NumberFormatPart  | `Intl_NumberRangeFormatPart ]
           [@@@js.start ]
           [@@@js.implem
             type tags =
               [ `Intl_NumberFormatPart  | `Intl_NumberRangeFormatPart ]]
           type 'tags this =
             'tags intf constraint 'tags = [> `Intl_NumberRangeFormatPart ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val get_source :
             'tags this ->
               [ `L_s121_shared  | `L_s127_startRange  | `L_s50_endRange ]
           val set_source :
             'tags this ->
               [ `U1 of [ `L_s127_startRange ]  | `U2 of [ `L_s50_endRange ] 
               | `U3 of [ `L_s121_shared ] ] -> unit
           val create :
             source:[ `L_s121_shared  | `L_s127_startRange 
                    | `L_s50_endRange ]
               -> unit -> t
           val cast_from : 'tags this -> t
         end
         module NumberFormatOptions :
         sig
           type t = [ `Intl_NumberFormatOptions ] intf
           [@@@js.stop ]
           type tags = [ `Intl_NumberFormatOptions ]
           [@@@js.start ]
           [@@@js.implem type tags = [ `Intl_NumberFormatOptions ]]
           type 'tags this =
             'tags intf constraint 'tags = [> `Intl_NumberFormatOptions ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val get_compactDisplay :
             'tags this -> [ `L_s122_short  | `L_s78_long ] option
           val set_compactDisplay :
             'tags this ->
               [ `Undefined of undefined  | `U1 of [ `L_s122_short ] 
               | `U2 of [ `L_s78_long ] ] -> unit
           val get_notation :
             'tags this ->
               [ `L_s114_scientific  | `L_s126_standard  | `L_s33_compact 
               | `L_s51_engineering ] option
           val set_notation :
             'tags this ->
               [ `Undefined of undefined  | `U1 of [ `L_s126_standard ] 
               | `U2 of [ `L_s114_scientific ] 
               | `U3 of [ `L_s51_engineering ]  | `U4 of [ `L_s33_compact ] ]
                 -> unit
           val get_signDisplay :
             'tags this ->
               [ `L_s22_always  | `L_s23_auto  | `L_s54_exceptZero 
               | `L_s93_never ] option
           val set_signDisplay :
             'tags this ->
               [ `Undefined of undefined  | `U1 of [ `L_s23_auto ] 
               | `U2 of [ `L_s93_never ]  | `U3 of [ `L_s22_always ] 
               | `U4 of [ `L_s54_exceptZero ] ] -> unit
           val get_unit : 'tags this -> string option
           val set_unit :
             'tags this ->
               [ `Undefined of undefined  | `U1 of string ] -> unit
           val get_unitDisplay :
             'tags this ->
               [ `L_s122_short  | `L_s78_long  | `L_s92_narrow ] option
           val set_unitDisplay :
             'tags this ->
               [ `Undefined of undefined  | `U1 of [ `L_s122_short ] 
               | `U2 of [ `L_s78_long ]  | `U3 of [ `L_s92_narrow ] ] -> 
                 unit
           val get_currencyDisplay : 'tags this -> string option
           val set_currencyDisplay :
             'tags this ->
               [ `Undefined of undefined  | `U1 of string ] -> unit
           val get_currencySign : 'tags this -> string option
           val set_currencySign :
             'tags this ->
               [ `Undefined of undefined  | `U1 of string ] -> unit
           val get_localeMatcher : 'tags this -> string option
           val set_localeMatcher :
             'tags this ->
               [ `Undefined of undefined  | `U1 of string ] -> unit
           val get_style : 'tags this -> string option
           val set_style :
             'tags this ->
               [ `Undefined of undefined  | `U1 of string ] -> unit
           val get_currency : 'tags this -> string option
           val set_currency :
             'tags this ->
               [ `Undefined of undefined  | `U1 of string ] -> unit
           val get_currencySign' : 'tags this -> string option
           val set_currencySign' :
             'tags this ->
               [ `Undefined of undefined  | `U1 of string ] -> unit
           val get_useGrouping : 'tags this -> bool option
           val set_useGrouping :
             'tags this -> [ `Undefined of undefined  | `U1 of bool ] -> unit
           val get_minimumIntegerDigits : 'tags this -> float option
           val set_minimumIntegerDigits :
             'tags this ->
               [ `Undefined of undefined  | `U1 of float ] -> unit
           val get_minimumFractionDigits : 'tags this -> float option
           val set_minimumFractionDigits :
             'tags this ->
               [ `Undefined of undefined  | `U1 of float ] -> unit
           val get_maximumFractionDigits : 'tags this -> float option
           val set_maximumFractionDigits :
             'tags this ->
               [ `Undefined of undefined  | `U1 of float ] -> unit
           val get_minimumSignificantDigits : 'tags this -> float option
           val set_minimumSignificantDigits :
             'tags this ->
               [ `Undefined of undefined  | `U1 of float ] -> unit
           val get_maximumSignificantDigits : 'tags this -> float option
           val set_maximumSignificantDigits :
             'tags this ->
               [ `Undefined of undefined  | `U1 of float ] -> unit
           val create :
             ?compactDisplay:[ `L_s122_short  | `L_s78_long ] ->
               ?notation:[ `L_s114_scientific  | `L_s126_standard 
                         | `L_s33_compact  | `L_s51_engineering ]
                 ->
                 ?signDisplay:[ `L_s22_always  | `L_s23_auto 
                              | `L_s54_exceptZero  | `L_s93_never ]
                   ->
                   ?unit:string ->
                     ?unitDisplay:[ `L_s122_short  | `L_s78_long 
                                  | `L_s92_narrow ]
                       ->
                       ?currencyDisplay:string ->
                         ?currencySign:string ->
                           ?localeMatcher:string ->
                             ?style:string ->
                               ?currency:string ->
                                 ?useGrouping:bool ->
                                   ?minimumIntegerDigits:float ->
                                     ?minimumFractionDigits:float ->
                                       ?maximumFractionDigits:float ->
                                         ?minimumSignificantDigits:float ->
                                           ?maximumSignificantDigits:float ->
                                             unit -> t
           val cast_from : 'tags this -> t
         end
         module NumberFormat :
         sig
           type t = [ `Intl_NumberFormat ] intf
           [@@@js.stop ]
           type tags = [ `Intl_NumberFormat ]
           [@@@js.start ]
           [@@@js.implem type tags = [ `Intl_NumberFormat ]]
           type 'tags this =
             'tags intf constraint 'tags = [> `Intl_NumberFormat ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val formatRange :
             'tags this ->
               start:[ `U1 of float  | `U2 of bigint ] ->
                 end_:[ `U1 of float  | `U2 of bigint ] -> string
           val formatRangeToParts :
             'tags this ->
               start:[ `U1 of float  | `U2 of bigint ] ->
                 end_:[ `U1 of float  | `U2 of bigint ] ->
                   NumberRangeFormatPart.t list
           val format :
             'tags this -> value:[ `U1 of float  | `U2 of bigint ] -> string
           val resolvedOptions : 'tags this -> ResolvedNumberFormatOptions.t
           val formatToParts :
             'tags this ->
               ?number:[ `U1 of float  | `U2 of bigint ] ->
                 unit -> NumberFormatPart.t list
           val format' : 'tags this -> value:float -> string
           val resolvedOptions' : 'tags this -> ResolvedNumberFormatOptions.t
           val cast_from : 'tags this -> t
           val create :
             ?locales:[ `U1 of string  | `U2 of string list ] ->
               ?options:NumberFormatOptions.t -> unit -> t
           val invoke :
             ?locales:[ `U1 of string  | `U2 of string list ] ->
               ?options:NumberFormatOptions.t -> unit -> t
           val supportedLocalesOf :
             locales:[ `U1 of string  | `U2 of string list ] ->
               ?options:NumberFormatOptions.t -> unit -> string list
           val prototype : unit -> t
         end
         module ListFormatType :
         sig
           type t =
             [ `L_s137_unit  | `L_s35_conjunction  | `L_s46_disjunction ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
         end
         module ListFormatStyle :
         sig
           type t = [ `L_s122_short  | `L_s78_long  | `L_s92_narrow ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
         end
         module ResolvedListFormatOptions :
         sig
           type t = [ `Intl_ResolvedListFormatOptions ] intf
           [@@@js.stop ]
           type tags = [ `Intl_ResolvedListFormatOptions ]
           [@@@js.start ]
           [@@@js.implem type tags = [ `Intl_ResolvedListFormatOptions ]]
           type 'tags this =
             'tags intf constraint 'tags =
                         [> `Intl_ResolvedListFormatOptions ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val get_locale : 'tags this -> string
           val set_locale : 'tags this -> string -> unit
           val get_style : 'tags this -> ListFormatStyle.t
           val set_style : 'tags this -> ListFormatStyle.t -> unit
           val get_type : 'tags this -> ListFormatType.t
           val set_type : 'tags this -> ListFormatType.t -> unit
           val create :
             locale:string ->
               style:ListFormatStyle.t -> type_:ListFormatType.t -> unit -> t
           val cast_from : 'tags this -> t
         end
         module ListFormatLocaleMatcher :
         sig
           type t = [ `L_s26_best_fit  | `L_s81_lookup ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
         end
         module ListFormatOptions :
         sig
           type t = [ `Intl_ListFormatOptions ] intf
           [@@@js.stop ]
           type tags = [ `Intl_ListFormatOptions ]
           [@@@js.start ]
           [@@@js.implem type tags = [ `Intl_ListFormatOptions ]]
           type 'tags this =
             'tags intf constraint 'tags = [> `Intl_ListFormatOptions ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val get_localeMatcher :
             'tags this -> ListFormatLocaleMatcher.t option
           val set_localeMatcher :
             'tags this ->
               [ `Undefined of undefined 
               | `U1 of ListFormatLocaleMatcher.t ] -> unit
           val get_type : 'tags this -> ListFormatType.t option
           val set_type :
             'tags this ->
               [ `Undefined of undefined  | `U1 of ListFormatType.t ] -> unit
           val get_style : 'tags this -> ListFormatStyle.t option
           val set_style :
             'tags this ->
               [ `Undefined of undefined  | `U1 of ListFormatStyle.t ] ->
                 unit
           val create :
             ?localeMatcher:ListFormatLocaleMatcher.t ->
               ?type_:ListFormatType.t ->
                 ?style:ListFormatStyle.t -> unit -> t
           val cast_from : 'tags this -> t
         end
         module ListFormat :
         sig
           module AnonymousInterface12 :
           sig
             type t = private Ojs.t
             val t_to_js : t -> Ojs.t
             val t_of_js : Ojs.t -> t
             val get_type : t -> [ `L_s48_element  | `L_s76_literal ]
             val set_type :
               t ->
                 [ `U1 of [ `L_s48_element ]  | `U2 of [ `L_s76_literal ] ]
                   -> unit
             val get_value : t -> string
             val set_value : t -> string -> unit
             val create :
               type_:[ `L_s48_element  | `L_s76_literal ] ->
                 value:string -> unit -> t
           end
           type t = [ `Intl_ListFormat ] intf
           [@@@js.stop ]
           type tags = [ `Intl_ListFormat ]
           [@@@js.start ]
           [@@@js.implem type tags = [ `Intl_ListFormat ]]
           type 'tags this =
             'tags intf constraint 'tags = [> `Intl_ListFormat ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val format : 'tags this -> list:string Iterable.t -> string
           val formatToParts :
             'tags this ->
               list:string Iterable.t -> AnonymousInterface12.t list
           val resolvedOptions : 'tags this -> ResolvedListFormatOptions.t
           val cast_from : 'tags this -> t
           val prototype : unit -> t
           val create :
             ?locales:[ `U1 of BCP47LanguageTag.t 
                      | `U2 of BCP47LanguageTag.t list ]
               -> ?options:ListFormatOptions.t -> unit -> t
           val supportedLocalesOf :
             locales:[ `U1 of BCP47LanguageTag.t 
                     | `U2 of BCP47LanguageTag.t list ]
               ->
               ?options:(ListFormatOptions.t, [ `L_s77_localeMatcher ])
                 Pick.t -> unit -> BCP47LanguageTag.t list
         end
         module DisplayNamesType :
         sig
           type t =
             [ `L_s112_region  | `L_s115_script  | `L_s28_calendar 
             | `L_s36_currency  | `L_s37_dateTimeField  | `L_s75_language ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
         end
         module DisplayNamesLanguageDisplay :
         sig
           type t = [ `L_s126_standard  | `L_s43_dialect ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
         end
         module DisplayNamesFallback :
         sig
           type t = [ `L_s31_code  | `L_s94_none ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
         end
         module ResolvedDisplayNamesOptions :
         sig
           type t = [ `Intl_ResolvedDisplayNamesOptions ] intf
           [@@@js.stop ]
           type tags = [ `Intl_ResolvedDisplayNamesOptions ]
           [@@@js.start ]
           [@@@js.implem type tags = [ `Intl_ResolvedDisplayNamesOptions ]]
           type 'tags this =
             'tags intf constraint 'tags =
                         [> `Intl_ResolvedDisplayNamesOptions ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val get_locale : 'tags this -> UnicodeBCP47LocaleIdentifier.t
           val set_locale :
             'tags this -> UnicodeBCP47LocaleIdentifier.t -> unit
           val get_style : 'tags this -> RelativeTimeFormatStyle.t
           val set_style : 'tags this -> RelativeTimeFormatStyle.t -> unit
           val get_type : 'tags this -> DisplayNamesType.t
           val set_type : 'tags this -> DisplayNamesType.t -> unit
           val get_fallback : 'tags this -> DisplayNamesFallback.t
           val set_fallback : 'tags this -> DisplayNamesFallback.t -> unit
           val get_languageDisplay :
             'tags this -> DisplayNamesLanguageDisplay.t option
           val set_languageDisplay :
             'tags this -> DisplayNamesLanguageDisplay.t -> unit
           val create :
             locale:UnicodeBCP47LocaleIdentifier.t ->
               style:RelativeTimeFormatStyle.t ->
                 type_:DisplayNamesType.t ->
                   fallback:DisplayNamesFallback.t ->
                     ?languageDisplay:DisplayNamesLanguageDisplay.t ->
                       unit -> t
           val cast_from : 'tags this -> t
         end
         module LocaleHourCycleKey :
         sig
           type t = [ `L_s67_h11  | `L_s68_h12  | `L_s69_h23  | `L_s70_h24 ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
         end
         module LocaleCollationCaseFirst :
         sig
           type t = [ `L_s139_upper  | `L_s58_false  | `L_s82_lower ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
         end
         module LocaleOptions :
         sig
           type t = [ `Intl_LocaleOptions ] intf
           [@@@js.stop ]
           type tags = [ `Intl_LocaleOptions ]
           [@@@js.start ]
           [@@@js.implem type tags = [ `Intl_LocaleOptions ]]
           type 'tags this =
             'tags intf constraint 'tags = [> `Intl_LocaleOptions ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val get_baseName : 'tags this -> string option
           val set_baseName : 'tags this -> string -> unit
           val get_calendar : 'tags this -> string option
           val set_calendar : 'tags this -> string -> unit
           val get_caseFirst :
             'tags this -> LocaleCollationCaseFirst.t option
           val set_caseFirst :
             'tags this -> LocaleCollationCaseFirst.t -> unit
           val get_collation : 'tags this -> string option
           val set_collation : 'tags this -> string -> unit
           val get_hourCycle : 'tags this -> LocaleHourCycleKey.t option
           val set_hourCycle : 'tags this -> LocaleHourCycleKey.t -> unit
           val get_language : 'tags this -> string option
           val set_language : 'tags this -> string -> unit
           val get_numberingSystem : 'tags this -> string option
           val set_numberingSystem : 'tags this -> string -> unit
           val get_numeric : 'tags this -> bool option
           val set_numeric : 'tags this -> bool -> unit
           val get_region : 'tags this -> string option
           val set_region : 'tags this -> string -> unit
           val get_script : 'tags this -> string option
           val set_script : 'tags this -> string -> unit
           val create :
             ?baseName:string ->
               ?calendar:string ->
                 ?caseFirst:LocaleCollationCaseFirst.t ->
                   ?collation:string ->
                     ?hourCycle:LocaleHourCycleKey.t ->
                       ?language:string ->
                         ?numberingSystem:string ->
                           ?numeric:bool ->
                             ?region:string -> ?script:string -> unit -> t
           val cast_from : 'tags this -> t
         end
         module Locale :
         sig
           type t = [ `Intl_Locale  | `Intl_LocaleOptions ] intf
           [@@@js.stop ]
           type tags = [ `Intl_Locale  | `Intl_LocaleOptions ]
           [@@@js.start ]
           [@@@js.implem type tags = [ `Intl_Locale  | `Intl_LocaleOptions ]]
           type 'tags this = 'tags intf constraint 'tags = [> `Intl_Locale ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val get_baseName : 'tags this -> string
           val set_baseName : 'tags this -> string -> unit
           val get_language : 'tags this -> string
           val set_language : 'tags this -> string -> unit
           val maximize : 'tags this -> t
           val minimize : 'tags this -> t
           val toString : 'tags this -> BCP47LanguageTag.t
           val cast_from : 'tags this -> t
           val create :
             tag:[ `U1 of BCP47LanguageTag.t  | `U2 of t ] ->
               ?options:LocaleOptions.t -> unit -> t
         end
         module LocalesArgument :
         sig
           type t =
             (Locale.t, UnicodeBCP47LocaleIdentifier.t,
               (Locale.t, UnicodeBCP47LocaleIdentifier.t) union2 list) union3
               option
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
         end
         module DisplayNamesOptions :
         sig
           type t = [ `Intl_DisplayNamesOptions ] intf
           [@@@js.stop ]
           type tags = [ `Intl_DisplayNamesOptions ]
           [@@@js.start ]
           [@@@js.implem type tags = [ `Intl_DisplayNamesOptions ]]
           type 'tags this =
             'tags intf constraint 'tags = [> `Intl_DisplayNamesOptions ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val get_localeMatcher :
             'tags this -> RelativeTimeFormatLocaleMatcher.t option
           val set_localeMatcher :
             'tags this -> RelativeTimeFormatLocaleMatcher.t -> unit
           val get_style : 'tags this -> RelativeTimeFormatStyle.t option
           val set_style : 'tags this -> RelativeTimeFormatStyle.t -> unit
           val get_type : 'tags this -> DisplayNamesType.t
           val set_type : 'tags this -> DisplayNamesType.t -> unit
           val get_languageDisplay :
             'tags this -> DisplayNamesLanguageDisplay.t option
           val set_languageDisplay :
             'tags this -> DisplayNamesLanguageDisplay.t -> unit
           val get_fallback : 'tags this -> DisplayNamesFallback.t option
           val set_fallback : 'tags this -> DisplayNamesFallback.t -> unit
           val create :
             ?localeMatcher:RelativeTimeFormatLocaleMatcher.t ->
               ?style:RelativeTimeFormatStyle.t ->
                 type_:DisplayNamesType.t ->
                   ?languageDisplay:DisplayNamesLanguageDisplay.t ->
                     ?fallback:DisplayNamesFallback.t -> unit -> t
           val cast_from : 'tags this -> t
         end
         module DisplayNames :
         sig
           module AnonymousInterface4 :
           sig
             type t = private Ojs.t
             val t_to_js : t -> Ojs.t
             val t_of_js : Ojs.t -> t
             val get_localeMatcher :
               t -> RelativeTimeFormatLocaleMatcher.t option
             val set_localeMatcher :
               t -> RelativeTimeFormatLocaleMatcher.t -> unit
             val create :
               ?localeMatcher:RelativeTimeFormatLocaleMatcher.t -> unit -> t
           end
           type t = [ `Intl_DisplayNames ] intf
           [@@@js.stop ]
           type tags = [ `Intl_DisplayNames ]
           [@@@js.start ]
           [@@@js.implem type tags = [ `Intl_DisplayNames ]]
           type 'tags this =
             'tags intf constraint 'tags = [> `Intl_DisplayNames ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val of_ : 'tags this -> code:string -> string option
           val resolvedOptions : 'tags this -> ResolvedDisplayNamesOptions.t
           val cast_from : 'tags this -> t
           val prototype : unit -> t
           val create :
             locales:LocalesArgument.t -> options:DisplayNamesOptions.t -> t
           val supportedLocalesOf :
             ?locales:LocalesArgument.t ->
               ?options:AnonymousInterface4.t ->
                 unit -> BCP47LanguageTag.t list
         end
         module DateTimeFormatPartTypesRegistry :
         sig
           type t = [ `Intl_DateTimeFormatPartTypesRegistry ] intf
           [@@@js.stop ]
           type tags = [ `Intl_DateTimeFormatPartTypesRegistry ]
           [@@@js.start ]
           [@@@js.implem
             type tags = [ `Intl_DateTimeFormatPartTypesRegistry ]]
           type 'tags this =
             'tags intf constraint 'tags =
                         [> `Intl_DateTimeFormatPartTypesRegistry ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val get_fractionalSecond : 'tags this -> any
           val set_fractionalSecond : 'tags this -> any -> unit
           val get_unknown : 'tags this -> any
           val set_unknown : 'tags this -> any -> unit
           val get_day : 'tags this -> any
           val set_day : 'tags this -> any -> unit
           val get_dayPeriod : 'tags this -> any
           val set_dayPeriod : 'tags this -> any -> unit
           val get_era : 'tags this -> any
           val set_era : 'tags this -> any -> unit
           val get_hour : 'tags this -> any
           val set_hour : 'tags this -> any -> unit
           val get_literal : 'tags this -> any
           val set_literal : 'tags this -> any -> unit
           val get_minute : 'tags this -> any
           val set_minute : 'tags this -> any -> unit
           val get_month : 'tags this -> any
           val set_month : 'tags this -> any -> unit
           val get_second : 'tags this -> any
           val set_second : 'tags this -> any -> unit
           val get_timeZoneName : 'tags this -> any
           val set_timeZoneName : 'tags this -> any -> unit
           val get_weekday : 'tags this -> any
           val set_weekday : 'tags this -> any -> unit
           val get_year : 'tags this -> any
           val set_year : 'tags this -> any -> unit
           val create :
             fractionalSecond:any ->
               unknown:any ->
                 day:any ->
                   dayPeriod:any ->
                     era:any ->
                       hour:any ->
                         literal:any ->
                           minute:any ->
                             month:any ->
                               second:any ->
                                 timeZoneName:any ->
                                   weekday:any -> year:any -> unit -> t
           val cast_from : 'tags this -> t
         end
         module ResolvedDateTimeFormatOptions :
         sig
           type t = [ `Intl_ResolvedDateTimeFormatOptions ] intf
           [@@@js.stop ]
           type tags = [ `Intl_ResolvedDateTimeFormatOptions ]
           [@@@js.start ]
           [@@@js.implem type tags = [ `Intl_ResolvedDateTimeFormatOptions ]]
           type 'tags this =
             'tags intf constraint 'tags =
                         [> `Intl_ResolvedDateTimeFormatOptions ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val get_formatMatcher :
             'tags this -> [ `L_s25_basic  | `L_s26_best_fit ] option
           val set_formatMatcher :
             'tags this ->
               [ `U1 of [ `L_s25_basic ]  | `U2 of [ `L_s26_best_fit ] ] ->
                 unit
           val get_dateStyle :
             'tags this ->
               [ `L_s122_short  | `L_s63_full  | `L_s78_long 
               | `L_s84_medium ] option
           val set_dateStyle :
             'tags this ->
               [ `U1 of [ `L_s63_full ]  | `U2 of [ `L_s78_long ] 
               | `U3 of [ `L_s84_medium ]  | `U4 of [ `L_s122_short ] ] ->
                 unit
           val get_timeStyle :
             'tags this ->
               [ `L_s122_short  | `L_s63_full  | `L_s78_long 
               | `L_s84_medium ] option
           val set_timeStyle :
             'tags this ->
               [ `U1 of [ `L_s63_full ]  | `U2 of [ `L_s78_long ] 
               | `U3 of [ `L_s84_medium ]  | `U4 of [ `L_s122_short ] ] ->
                 unit
           val get_hourCycle :
             'tags this ->
               [ `L_s67_h11  | `L_s68_h12  | `L_s69_h23  | `L_s70_h24 ]
                 option
           val set_hourCycle :
             'tags this ->
               [ `U1 of [ `L_s67_h11 ]  | `U2 of [ `L_s68_h12 ] 
               | `U3 of [ `L_s69_h23 ]  | `U4 of [ `L_s70_h24 ] ] -> 
                 unit
           val get_dayPeriod :
             'tags this ->
               [ `L_s122_short  | `L_s78_long  | `L_s92_narrow ] option
           val set_dayPeriod :
             'tags this ->
               [ `U1 of [ `L_s92_narrow ]  | `U2 of [ `L_s122_short ] 
               | `U3 of [ `L_s78_long ] ] -> unit
           val get_fractionalSecondDigits :
             'tags this -> [ `L_n_1  | `L_n_2  | `L_n_3 ] option
           val set_fractionalSecondDigits :
             'tags this ->
               [ `U1 of [ `L_n_1 ]  | `U2 of [ `L_n_2 ] 
               | `U3 of [ `L_n_3 ] ] -> unit
           val get_locale : 'tags this -> string
           val set_locale : 'tags this -> string -> unit
           val get_calendar : 'tags this -> string
           val set_calendar : 'tags this -> string -> unit
           val get_numberingSystem : 'tags this -> string
           val set_numberingSystem : 'tags this -> string -> unit
           val get_timeZone : 'tags this -> string
           val set_timeZone : 'tags this -> string -> unit
           val get_hour12 : 'tags this -> bool option
           val set_hour12 : 'tags this -> bool -> unit
           val get_weekday : 'tags this -> string option
           val set_weekday : 'tags this -> string -> unit
           val get_era : 'tags this -> string option
           val set_era : 'tags this -> string -> unit
           val get_year : 'tags this -> string option
           val set_year : 'tags this -> string -> unit
           val get_month : 'tags this -> string option
           val set_month : 'tags this -> string -> unit
           val get_day : 'tags this -> string option
           val set_day : 'tags this -> string -> unit
           val get_hour : 'tags this -> string option
           val set_hour : 'tags this -> string -> unit
           val get_minute : 'tags this -> string option
           val set_minute : 'tags this -> string -> unit
           val get_second : 'tags this -> string option
           val set_second : 'tags this -> string -> unit
           val get_timeZoneName : 'tags this -> string option
           val set_timeZoneName : 'tags this -> string -> unit
           val create :
             ?formatMatcher:[ `L_s25_basic  | `L_s26_best_fit ] ->
               ?dateStyle:[ `L_s122_short  | `L_s63_full  | `L_s78_long 
                          | `L_s84_medium ]
                 ->
                 ?timeStyle:[ `L_s122_short  | `L_s63_full  | `L_s78_long 
                            | `L_s84_medium ]
                   ->
                   ?hourCycle:[ `L_s67_h11  | `L_s68_h12  | `L_s69_h23 
                              | `L_s70_h24 ]
                     ->
                     ?dayPeriod:[ `L_s122_short  | `L_s78_long 
                                | `L_s92_narrow ]
                       ->
                       ?fractionalSecondDigits:[ `L_n_1  | `L_n_2  | `L_n_3 ]
                         ->
                         locale:string ->
                           calendar:string ->
                             numberingSystem:string ->
                               timeZone:string ->
                                 ?hour12:bool ->
                                   ?weekday:string ->
                                     ?era:string ->
                                       ?year:string ->
                                         ?month:string ->
                                           ?day:string ->
                                             ?hour:string ->
                                               ?minute:string ->
                                                 ?second:string ->
                                                   ?timeZoneName:string ->
                                                     unit -> t
           val cast_from : 'tags this -> t
         end
         module DateTimeFormatPartTypes :
         sig
           type t =
             [ `L_s118_second  | `L_s132_timeZoneName  | `L_s138_unknown 
             | `L_s142_weekday  | `L_s145_year  | `L_s38_day 
             | `L_s39_dayPeriod  | `L_s53_era  | `L_s61_fractionalSecond 
             | `L_s71_hour  | `L_s76_literal  | `L_s86_minute 
             | `L_s88_month ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
         end
         module DateTimeFormatPart :
         sig
           type t = [ `Intl_DateTimeFormatPart ] intf
           [@@@js.stop ]
           type tags = [ `Intl_DateTimeFormatPart ]
           [@@@js.start ]
           [@@@js.implem type tags = [ `Intl_DateTimeFormatPart ]]
           type 'tags this =
             'tags intf constraint 'tags = [> `Intl_DateTimeFormatPart ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val get_type : 'tags this -> DateTimeFormatPartTypes.t
           val set_type : 'tags this -> DateTimeFormatPartTypes.t -> unit
           val get_value : 'tags this -> string
           val set_value : 'tags this -> string -> unit
           val create :
             type_:DateTimeFormatPartTypes.t -> value:string -> unit -> t
           val cast_from : 'tags this -> t
         end
         module DateTimeRangeFormatPart :
         sig
           type t =
             [ `Intl_DateTimeFormatPart  | `Intl_DateTimeRangeFormatPart ]
               intf
           [@@@js.stop ]
           type tags =
             [ `Intl_DateTimeFormatPart  | `Intl_DateTimeRangeFormatPart ]
           [@@@js.start ]
           [@@@js.implem
             type tags =
               [ `Intl_DateTimeFormatPart  | `Intl_DateTimeRangeFormatPart ]]
           type 'tags this =
             'tags intf constraint 'tags = [> `Intl_DateTimeRangeFormatPart ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val get_source :
             'tags this ->
               [ `L_s121_shared  | `L_s127_startRange  | `L_s50_endRange ]
           val set_source :
             'tags this ->
               [ `U1 of [ `L_s127_startRange ]  | `U2 of [ `L_s50_endRange ] 
               | `U3 of [ `L_s121_shared ] ] -> unit
           val create :
             source:[ `L_s121_shared  | `L_s127_startRange 
                    | `L_s50_endRange ]
               -> unit -> t
           val cast_from : 'tags this -> t
         end
         module DateTimeFormatOptions :
         sig
           type t = [ `Intl_DateTimeFormatOptions ] intf
           [@@@js.stop ]
           type tags = [ `Intl_DateTimeFormatOptions ]
           [@@@js.start ]
           [@@@js.implem type tags = [ `Intl_DateTimeFormatOptions ]]
           type 'tags this =
             'tags intf constraint 'tags = [> `Intl_DateTimeFormatOptions ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val get_formatMatcher :
             'tags this -> [ `L_s25_basic  | `L_s26_best_fit ] option
           val set_formatMatcher :
             'tags this ->
               [ `Undefined of undefined  | `U1 of [ `L_s25_basic ] 
               | `U2 of [ `L_s26_best_fit ] ] -> unit
           val get_dateStyle :
             'tags this ->
               [ `L_s122_short  | `L_s63_full  | `L_s78_long 
               | `L_s84_medium ] option
           val set_dateStyle :
             'tags this ->
               [ `Undefined of undefined  | `U1 of [ `L_s63_full ] 
               | `U2 of [ `L_s78_long ]  | `U3 of [ `L_s84_medium ] 
               | `U4 of [ `L_s122_short ] ] -> unit
           val get_timeStyle :
             'tags this ->
               [ `L_s122_short  | `L_s63_full  | `L_s78_long 
               | `L_s84_medium ] option
           val set_timeStyle :
             'tags this ->
               [ `Undefined of undefined  | `U1 of [ `L_s63_full ] 
               | `U2 of [ `L_s78_long ]  | `U3 of [ `L_s84_medium ] 
               | `U4 of [ `L_s122_short ] ] -> unit
           val get_dayPeriod :
             'tags this ->
               [ `L_s122_short  | `L_s78_long  | `L_s92_narrow ] option
           val set_dayPeriod :
             'tags this ->
               [ `Undefined of undefined  | `U1 of [ `L_s92_narrow ] 
               | `U2 of [ `L_s122_short ]  | `U3 of [ `L_s78_long ] ] -> 
                 unit
           val get_fractionalSecondDigits :
             'tags this -> [ `L_n_1  | `L_n_2  | `L_n_3 ] option
           val set_fractionalSecondDigits :
             'tags this ->
               [ `Undefined of undefined  | `U1 of [ `L_n_1 ] 
               | `U2 of [ `L_n_2 ]  | `U3 of [ `L_n_3 ] ] -> unit
           val get_calendar : 'tags this -> string option
           val set_calendar :
             'tags this ->
               [ `Undefined of undefined  | `U1 of string ] -> unit
           val get_dayPeriod' :
             'tags this ->
               [ `L_s122_short  | `L_s78_long  | `L_s92_narrow ] option
           val set_dayPeriod' :
             'tags this ->
               [ `Undefined of undefined  | `U1 of [ `L_s92_narrow ] 
               | `U2 of [ `L_s122_short ]  | `U3 of [ `L_s78_long ] ] -> 
                 unit
           val get_numberingSystem : 'tags this -> string option
           val set_numberingSystem :
             'tags this ->
               [ `Undefined of undefined  | `U1 of string ] -> unit
           val get_dateStyle' :
             'tags this ->
               [ `L_s122_short  | `L_s63_full  | `L_s78_long 
               | `L_s84_medium ] option
           val set_dateStyle' :
             'tags this ->
               [ `Undefined of undefined  | `U1 of [ `L_s63_full ] 
               | `U2 of [ `L_s78_long ]  | `U3 of [ `L_s84_medium ] 
               | `U4 of [ `L_s122_short ] ] -> unit
           val get_timeStyle' :
             'tags this ->
               [ `L_s122_short  | `L_s63_full  | `L_s78_long 
               | `L_s84_medium ] option
           val set_timeStyle' :
             'tags this ->
               [ `Undefined of undefined  | `U1 of [ `L_s63_full ] 
               | `U2 of [ `L_s78_long ]  | `U3 of [ `L_s84_medium ] 
               | `U4 of [ `L_s122_short ] ] -> unit
           val get_hourCycle :
             'tags this ->
               [ `L_s67_h11  | `L_s68_h12  | `L_s69_h23  | `L_s70_h24 ]
                 option
           val set_hourCycle :
             'tags this ->
               [ `Undefined of undefined  | `U1 of [ `L_s67_h11 ] 
               | `U2 of [ `L_s68_h12 ]  | `U3 of [ `L_s69_h23 ] 
               | `U4 of [ `L_s70_h24 ] ] -> unit
           val get_localeMatcher :
             'tags this -> [ `L_s26_best_fit  | `L_s81_lookup ] option
           val set_localeMatcher :
             'tags this ->
               [ `Undefined of undefined  | `U1 of [ `L_s26_best_fit ] 
               | `U2 of [ `L_s81_lookup ] ] -> unit
           val get_weekday :
             'tags this ->
               [ `L_s122_short  | `L_s78_long  | `L_s92_narrow ] option
           val set_weekday :
             'tags this ->
               [ `Undefined of undefined  | `U1 of [ `L_s78_long ] 
               | `U2 of [ `L_s122_short ]  | `U3 of [ `L_s92_narrow ] ] ->
                 unit
           val get_era :
             'tags this ->
               [ `L_s122_short  | `L_s78_long  | `L_s92_narrow ] option
           val set_era :
             'tags this ->
               [ `Undefined of undefined  | `U1 of [ `L_s78_long ] 
               | `U2 of [ `L_s122_short ]  | `U3 of [ `L_s92_narrow ] ] ->
                 unit
           val get_year :
             'tags this -> [ `L_s0_2_digit  | `L_s98_numeric ] option
           val set_year :
             'tags this ->
               [ `Undefined of undefined  | `U1 of [ `L_s98_numeric ] 
               | `U2 of [ `L_s0_2_digit ] ] -> unit
           val get_month :
             'tags this ->
               [ `L_s0_2_digit  | `L_s122_short  | `L_s78_long 
               | `L_s92_narrow  | `L_s98_numeric ] option
           val set_month :
             'tags this ->
               [ `Undefined of undefined  | `U1 of [ `L_s98_numeric ] 
               | `U2 of [ `L_s0_2_digit ]  | `U3 of [ `L_s78_long ] 
               | `U4 of [ `L_s122_short ]  | `U5 of [ `L_s92_narrow ] ] ->
                 unit
           val get_day :
             'tags this -> [ `L_s0_2_digit  | `L_s98_numeric ] option
           val set_day :
             'tags this ->
               [ `Undefined of undefined  | `U1 of [ `L_s98_numeric ] 
               | `U2 of [ `L_s0_2_digit ] ] -> unit
           val get_hour :
             'tags this -> [ `L_s0_2_digit  | `L_s98_numeric ] option
           val set_hour :
             'tags this ->
               [ `Undefined of undefined  | `U1 of [ `L_s98_numeric ] 
               | `U2 of [ `L_s0_2_digit ] ] -> unit
           val get_minute :
             'tags this -> [ `L_s0_2_digit  | `L_s98_numeric ] option
           val set_minute :
             'tags this ->
               [ `Undefined of undefined  | `U1 of [ `L_s98_numeric ] 
               | `U2 of [ `L_s0_2_digit ] ] -> unit
           val get_second :
             'tags this -> [ `L_s0_2_digit  | `L_s98_numeric ] option
           val set_second :
             'tags this ->
               [ `Undefined of undefined  | `U1 of [ `L_s98_numeric ] 
               | `U2 of [ `L_s0_2_digit ] ] -> unit
           val get_timeZoneName :
             'tags this ->
               [ `L_s122_short  | `L_s123_shortGeneric 
               | `L_s124_shortOffset  | `L_s78_long  | `L_s79_longGeneric 
               | `L_s80_longOffset ] option
           val set_timeZoneName :
             'tags this ->
               [ `Undefined of undefined  | `U1 of [ `L_s122_short ] 
               | `U2 of [ `L_s78_long ]  | `U3 of [ `L_s124_shortOffset ] 
               | `U4 of [ `L_s80_longOffset ] 
               | `U5 of [ `L_s123_shortGeneric ] 
               | `U6 of [ `L_s79_longGeneric ] ] -> unit
           val get_formatMatcher' :
             'tags this -> [ `L_s25_basic  | `L_s26_best_fit ] option
           val set_formatMatcher' :
             'tags this ->
               [ `Undefined of undefined  | `U1 of [ `L_s26_best_fit ] 
               | `U2 of [ `L_s25_basic ] ] -> unit
           val get_hour12 : 'tags this -> bool option
           val set_hour12 :
             'tags this -> [ `Undefined of undefined  | `U1 of bool ] -> unit
           val get_timeZone : 'tags this -> string option
           val set_timeZone :
             'tags this ->
               [ `Undefined of undefined  | `U1 of string ] -> unit
           val create :
             ?formatMatcher:[ `L_s25_basic  | `L_s26_best_fit ] ->
               ?dateStyle:[ `L_s122_short  | `L_s63_full  | `L_s78_long 
                          | `L_s84_medium ]
                 ->
                 ?timeStyle:[ `L_s122_short  | `L_s63_full  | `L_s78_long 
                            | `L_s84_medium ]
                   ->
                   ?dayPeriod:[ `L_s122_short  | `L_s78_long 
                              | `L_s92_narrow ]
                     ->
                     ?fractionalSecondDigits:[ `L_n_1  | `L_n_2  | `L_n_3 ]
                       ->
                       ?calendar:string ->
                         ?numberingSystem:string ->
                           ?hourCycle:[ `L_s67_h11  | `L_s68_h12 
                                      | `L_s69_h23  | `L_s70_h24 ]
                             ->
                             ?localeMatcher:[ `L_s26_best_fit 
                                            | `L_s81_lookup ]
                               ->
                               ?weekday:[ `L_s122_short  | `L_s78_long 
                                        | `L_s92_narrow ]
                                 ->
                                 ?era:[ `L_s122_short  | `L_s78_long 
                                      | `L_s92_narrow ]
                                   ->
                                   ?year:[ `L_s0_2_digit  | `L_s98_numeric ]
                                     ->
                                     ?month:[ `L_s0_2_digit  | `L_s122_short 
                                            | `L_s78_long  | `L_s92_narrow 
                                            | `L_s98_numeric ]
                                       ->
                                       ?day:[ `L_s0_2_digit 
                                            | `L_s98_numeric ]
                                         ->
                                         ?hour:[ `L_s0_2_digit 
                                               | `L_s98_numeric ]
                                           ->
                                           ?minute:[ `L_s0_2_digit 
                                                   | `L_s98_numeric ]
                                             ->
                                             ?second:[ `L_s0_2_digit 
                                                     | `L_s98_numeric ]
                                               ->
                                               ?timeZoneName:[ `L_s122_short 
                                                             | `L_s123_shortGeneric
                                                                  | `L_s124_shortOffset
                                                                     | 
                                                               `L_s78_long 
                                                             | `L_s79_longGeneric
                                                                  | `L_s80_longOffset
                                                                    ]
                                                 ->
                                                 ?hour12:bool ->
                                                   ?timeZone:string ->
                                                     unit -> t
           val cast_from : 'tags this -> t
         end
         module DateTimeFormat :
         sig
           type t = [ `Intl_DateTimeFormat ] intf
           [@@@js.stop ]
           type tags = [ `Intl_DateTimeFormat ]
           [@@@js.start ]
           [@@@js.implem type tags = [ `Intl_DateTimeFormat ]]
           type 'tags this =
             'tags intf constraint 'tags = [> `Intl_DateTimeFormat ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val formatRange :
             'tags this ->
               startDate:[ `U1 of Date.t  | `U2 of float  | `U3 of bigint ]
                 ->
                 endDate:[ `U1 of Date.t  | `U2 of float  | `U3 of bigint ]
                   -> string
           val formatRangeToParts :
             'tags this ->
               startDate:[ `U1 of Date.t  | `U2 of float  | `U3 of bigint ]
                 ->
                 endDate:[ `U1 of Date.t  | `U2 of float  | `U3 of bigint ]
                   -> DateTimeRangeFormatPart.t list
           val formatToParts :
             'tags this ->
               ?date:[ `U1 of Date.t  | `U2 of float ] ->
                 unit -> DateTimeFormatPart.t list
           val format :
             'tags this ->
               ?date:[ `U1 of Date.t  | `U2 of float ] -> unit -> string
           val resolvedOptions :
             'tags this -> ResolvedDateTimeFormatOptions.t
           val cast_from : 'tags this -> t
           val create :
             ?locales:[ `U1 of string  | `U2 of string list ] ->
               ?options:DateTimeFormatOptions.t -> unit -> t
           val invoke :
             ?locales:[ `U1 of string  | `U2 of string list ] ->
               ?options:DateTimeFormatOptions.t -> unit -> t
           val supportedLocalesOf :
             locales:[ `U1 of string  | `U2 of string list ] ->
               ?options:DateTimeFormatOptions.t -> unit -> string list
           val prototype : unit -> t
         end
         module ResolvedCollatorOptions :
         sig
           type t = [ `Intl_ResolvedCollatorOptions ] intf
           [@@@js.stop ]
           type tags = [ `Intl_ResolvedCollatorOptions ]
           [@@@js.start ]
           [@@@js.implem type tags = [ `Intl_ResolvedCollatorOptions ]]
           type 'tags this =
             'tags intf constraint 'tags = [> `Intl_ResolvedCollatorOptions ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val get_locale : 'tags this -> string
           val set_locale : 'tags this -> string -> unit
           val get_usage : 'tags this -> string
           val set_usage : 'tags this -> string -> unit
           val get_sensitivity : 'tags this -> string
           val set_sensitivity : 'tags this -> string -> unit
           val get_ignorePunctuation : 'tags this -> bool
           val set_ignorePunctuation : 'tags this -> bool -> unit
           val get_collation : 'tags this -> string
           val set_collation : 'tags this -> string -> unit
           val get_caseFirst : 'tags this -> string
           val set_caseFirst : 'tags this -> string -> unit
           val get_numeric : 'tags this -> bool
           val set_numeric : 'tags this -> bool -> unit
           val create :
             locale:string ->
               usage:string ->
                 sensitivity:string ->
                   ignorePunctuation:bool ->
                     collation:string ->
                       caseFirst:string -> numeric:bool -> unit -> t
           val cast_from : 'tags this -> t
         end
         module CollatorOptions :
         sig
           type t = [ `Intl_CollatorOptions ] intf
           [@@@js.stop ]
           type tags = [ `Intl_CollatorOptions ]
           [@@@js.start ]
           [@@@js.implem type tags = [ `Intl_CollatorOptions ]]
           type 'tags this =
             'tags intf constraint 'tags = [> `Intl_CollatorOptions ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val get_usage :
             'tags this -> [ `L_s116_search  | `L_s125_sort ] option
           val set_usage :
             'tags this ->
               [ `Undefined of undefined  | `U1 of [ `L_s125_sort ] 
               | `U2 of [ `L_s116_search ] ] -> unit
           val get_localeMatcher :
             'tags this -> [ `L_s26_best_fit  | `L_s81_lookup ] option
           val set_localeMatcher :
             'tags this ->
               [ `Undefined of undefined  | `U1 of [ `L_s81_lookup ] 
               | `U2 of [ `L_s26_best_fit ] ] -> unit
           val get_numeric : 'tags this -> bool option
           val set_numeric :
             'tags this -> [ `Undefined of undefined  | `U1 of bool ] -> unit
           val get_caseFirst :
             'tags this ->
               [ `L_s139_upper  | `L_s58_false  | `L_s82_lower ] option
           val set_caseFirst :
             'tags this ->
               [ `Undefined of undefined  | `U1 of [ `L_s139_upper ] 
               | `U2 of [ `L_s82_lower ]  | `U3 of [ `L_s58_false ] ] -> 
                 unit
           val get_sensitivity :
             'tags this ->
               [ `L_s140_variant  | `L_s21_accent  | `L_s24_base 
               | `L_s30_case ] option
           val set_sensitivity :
             'tags this ->
               [ `Undefined of undefined  | `U1 of [ `L_s24_base ] 
               | `U2 of [ `L_s21_accent ]  | `U3 of [ `L_s30_case ] 
               | `U4 of [ `L_s140_variant ] ] -> unit
           val get_collation :
             'tags this ->
               [ `L_s105_phonebk  | `L_s106_phonetic  | `L_s107_pinyin 
               | `L_s111_reformed  | `L_s117_searchjl  | `L_s129_stroke 
               | `L_s134_trad  | `L_s136_unihan  | `L_s148_zhuyin 
               | `L_s27_big5han  | `L_s34_compat  | `L_s44_dict 
               | `L_s45_direct  | `L_s47_ducet  | `L_s49_emoji  | `L_s52_eor 
               | `L_s64_gb2312 ] option
           val set_collation :
             'tags this ->
               [ `Undefined of undefined  | `U1 of [ `L_s27_big5han ] 
               | `U2 of [ `L_s34_compat ]  | `U3 of [ `L_s44_dict ] 
               | `U4 of [ `L_s45_direct ]  | `U5 of [ `L_s47_ducet ] 
               | `U6 of [ `L_s49_emoji ]  | `U7 of [ `L_s52_eor ] 
               | `U8 of [ `L_s64_gb2312 ]  | `U9 of [ `L_s105_phonebk ] 
               | `U10 of [ `L_s106_phonetic ]  | `U11 of [ `L_s107_pinyin ] 
               | `U12 of [ `L_s111_reformed ] 
               | `U13 of [ `L_s117_searchjl ]  | `U14 of [ `L_s129_stroke ] 
               | `U15 of [ `L_s134_trad ]  | `U16 of [ `L_s136_unihan ] 
               | `U17 of [ `L_s148_zhuyin ] ] -> unit
           val get_ignorePunctuation : 'tags this -> bool option
           val set_ignorePunctuation :
             'tags this -> [ `Undefined of undefined  | `U1 of bool ] -> unit
           val create :
             ?usage:[ `L_s116_search  | `L_s125_sort ] ->
               ?localeMatcher:[ `L_s26_best_fit  | `L_s81_lookup ] ->
                 ?numeric:bool ->
                   ?caseFirst:[ `L_s139_upper  | `L_s58_false 
                              | `L_s82_lower ]
                     ->
                     ?sensitivity:[ `L_s140_variant  | `L_s21_accent 
                                  | `L_s24_base  | `L_s30_case ]
                       ->
                       ?collation:[ `L_s105_phonebk  | `L_s106_phonetic 
                                  | `L_s107_pinyin  | `L_s111_reformed 
                                  | `L_s117_searchjl  | `L_s129_stroke 
                                  | `L_s134_trad  | `L_s136_unihan 
                                  | `L_s148_zhuyin  | `L_s27_big5han 
                                  | `L_s34_compat  | `L_s44_dict 
                                  | `L_s45_direct  | `L_s47_ducet 
                                  | `L_s49_emoji  | `L_s52_eor 
                                  | `L_s64_gb2312 ]
                         -> ?ignorePunctuation:bool -> unit -> t
           val cast_from : 'tags this -> t
         end
         module Collator :
         sig
           type t = [ `Intl_Collator ] intf
           [@@@js.stop ]
           type tags = [ `Intl_Collator ]
           [@@@js.start ]
           [@@@js.implem type tags = [ `Intl_Collator ]]
           type 'tags this =
             'tags intf constraint 'tags = [> `Intl_Collator ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val compare : 'tags this -> x:string -> y:string -> float
           val resolvedOptions : 'tags this -> ResolvedCollatorOptions.t
           val cast_from : 'tags this -> t
           val create :
             ?locales:[ `U1 of string  | `U2 of string list ] ->
               ?options:CollatorOptions.t -> unit -> t
           val invoke :
             ?locales:[ `U1 of string  | `U2 of string list ] ->
               ?options:CollatorOptions.t -> unit -> t
           val supportedLocalesOf :
             locales:[ `U1 of string  | `U2 of string list ] ->
               ?options:CollatorOptions.t -> unit -> string list
         end
         val supportedValuesOf :
           [ `L_s131_timeZone  | `L_s137_unit  | `L_s28_calendar 
           | `L_s32_collation  | `L_s36_currency  | `L_s97_numberingSystem ]
             -> string list
       end =
  struct
    module SegmentData =
      struct
        type t = [ `Intl_SegmentData ] intf
        let rec t_of_js : Ojs.t -> t = Obj.magic
        and t_to_js : t -> Ojs.t = Obj.magic
        type tags = [ `Intl_SegmentData ]
        type 'tags this =
          'tags intf constraint 'tags = [> `Intl_SegmentData ]
        let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
          =
          fun (type __tags) ->
            fun (__tags_of_js : Ojs.t -> __tags) ->
              fun (x2063 : Ojs.t) -> intf_of_js __tags_of_js x2063
        and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
          fun (type __tags) ->
            fun (__tags_to_js : __tags -> Ojs.t) ->
              fun (x2061 : __tags intf) -> intf_to_js __tags_to_js x2061
        let (get_segment : 'tags this -> string) =
          fun (x2065 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2065) "segment")
        let (set_segment : 'tags this -> string -> unit) =
          fun (x2067 : 'tags this) ->
            fun (x2068 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2067) "segment"
                (Ojs.string_to_js x2068)
        let (get_index : 'tags this -> float) =
          fun (x2070 : 'tags this) ->
            Ojs.float_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2070) "index")
        let (set_index : 'tags this -> float -> unit) =
          fun (x2072 : 'tags this) ->
            fun (x2073 : float) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2072) "index"
                (Ojs.float_to_js x2073)
        let (get_input : 'tags this -> string) =
          fun (x2075 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2075) "input")
        let (set_input : 'tags this -> string -> unit) =
          fun (x2077 : 'tags this) ->
            fun (x2078 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2077) "input"
                (Ojs.string_to_js x2078)
        let (get_isWordLike : 'tags this -> bool option) =
          fun (x2080 : 'tags this) ->
            Ojs.option_of_js Ojs.bool_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2080) "isWordLike")
        let (set_isWordLike : 'tags this -> bool -> unit) =
          fun (x2083 : 'tags this) ->
            fun (x2084 : bool) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2083) "isWordLike"
                (Ojs.bool_to_js x2084)
        let (create :
          segment:string ->
            index:float -> input:string -> ?isWordLike:bool -> unit -> t)
          =
          fun ~segment:(x2086 : string) ->
            fun ~index:(x2087 : float) ->
              fun ~input:(x2088 : string) ->
                fun ?isWordLike:(x2089 : bool option) ->
                  fun () ->
                    let x2090 = Ojs.empty_obj () in
                    Ojs.set_prop_ascii x2090 "segment"
                      (Ojs.string_to_js x2086);
                    Ojs.set_prop_ascii x2090 "index" (Ojs.float_to_js x2087);
                    Ojs.set_prop_ascii x2090 "input" (Ojs.string_to_js x2088);
                    (match x2089 with
                     | Some x2091 ->
                         Ojs.set_prop_ascii x2090 "isWordLike"
                           (Ojs.bool_to_js x2091)
                     | None -> ());
                    t_of_js x2090
        let cast_from = Obj.magic
      end
    module Segments =
      struct
        type t = [ `Intl_Segments ] intf
        let rec t_of_js : Ojs.t -> t = Obj.magic
        and t_to_js : t -> Ojs.t = Obj.magic
        type tags = [ `Intl_Segments ]
        type 'tags this = 'tags intf constraint 'tags = [> `Intl_Segments ]
        let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
          =
          fun (type __tags) ->
            fun (__tags_of_js : Ojs.t -> __tags) ->
              fun (x2094 : Ojs.t) -> intf_of_js __tags_of_js x2094
        and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
          fun (type __tags) ->
            fun (__tags_to_js : __tags -> Ojs.t) ->
              fun (x2092 : __tags intf) -> intf_to_js __tags_to_js x2092
        let (containing :
          'tags this -> ?codeUnitIndex:float -> unit -> SegmentData.t) =
          fun (x2099 : 'tags this) ->
            fun ?codeUnitIndex:(x2096 : float option) ->
              fun () ->
                SegmentData.t_of_js
                  (let x2101 = this_to_js Obj.magic x2099 in
                   Ojs.call (Ojs.get_prop_ascii x2101 "containing") "apply"
                     [|x2101;((let x2097 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               (match x2096 with
                                | Some x2098 ->
                                    ignore
                                      (Ojs.call x2097 "push"
                                         [|(Ojs.float_to_js x2098)|])
                                | None -> ());
                               x2097))|])
        let cast_from = Obj.magic
      end
    module SegmenterOptions =
      struct
        type t = [ `Intl_SegmenterOptions ] intf
        let rec t_of_js : Ojs.t -> t = Obj.magic
        and t_to_js : t -> Ojs.t = Obj.magic
        type tags = [ `Intl_SegmenterOptions ]
        type 'tags this =
          'tags intf constraint 'tags = [> `Intl_SegmenterOptions ]
        let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
          =
          fun (type __tags) ->
            fun (__tags_of_js : Ojs.t -> __tags) ->
              fun (x2104 : Ojs.t) -> intf_of_js __tags_of_js x2104
        and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
          fun (type __tags) ->
            fun (__tags_to_js : __tags -> Ojs.t) ->
              fun (x2102 : __tags intf) -> intf_to_js __tags_to_js x2102
        let (get_localeMatcher :
          'tags this -> [ `L_s26_best_fit  | `L_s81_lookup ] option) =
          fun (x2106 : 'tags this) ->
            Ojs.option_of_js
              (fun (x2108 : Ojs.t) ->
                 let x2109 = x2108 in
                 match Ojs.string_of_js x2109 with
                 | "best fit" -> `L_s26_best_fit
                 | "lookup" -> `L_s81_lookup
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2106)
                 "localeMatcher")
        let (set_localeMatcher :
          'tags this ->
            [ `Undefined of undefined  | `U1 of [ `L_s26_best_fit ] 
            | `U2 of [ `L_s81_lookup ] ] -> unit)
          =
          fun (x2110 : 'tags this) ->
            fun
              (x2111 :
                [ `Undefined of undefined  | `U1 of [ `L_s26_best_fit ] 
                | `U2 of [ `L_s81_lookup ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2110) "localeMatcher"
                (match x2111 with
                 | `Undefined x2112 -> undefined_to_js x2112
                 | `U1 x2113 ->
                     (match x2113 with
                      | `L_s26_best_fit -> Ojs.string_to_js "best fit")
                 | `U2 x2114 ->
                     (match x2114 with
                      | `L_s81_lookup -> Ojs.string_to_js "lookup"))
        let (get_granularity :
          'tags this ->
            [ `L_s120_sentence  | `L_s144_word  | `L_s65_grapheme ] option)
          =
          fun (x2116 : 'tags this) ->
            Ojs.option_of_js
              (fun (x2118 : Ojs.t) ->
                 let x2119 = x2118 in
                 match Ojs.string_of_js x2119 with
                 | "sentence" -> `L_s120_sentence
                 | "word" -> `L_s144_word
                 | "grapheme" -> `L_s65_grapheme
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2116) "granularity")
        let (set_granularity :
          'tags this ->
            [ `Undefined of undefined  | `U1 of [ `L_s65_grapheme ] 
            | `U2 of [ `L_s144_word ]  | `U3 of [ `L_s120_sentence ] ] ->
              unit)
          =
          fun (x2120 : 'tags this) ->
            fun
              (x2121 :
                [ `Undefined of undefined  | `U1 of [ `L_s65_grapheme ] 
                | `U2 of [ `L_s144_word ]  | `U3 of [ `L_s120_sentence ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2120) "granularity"
                (match x2121 with
                 | `Undefined x2122 -> undefined_to_js x2122
                 | `U1 x2123 ->
                     (match x2123 with
                      | `L_s65_grapheme -> Ojs.string_to_js "grapheme")
                 | `U2 x2124 ->
                     (match x2124 with
                      | `L_s144_word -> Ojs.string_to_js "word")
                 | `U3 x2125 ->
                     (match x2125 with
                      | `L_s120_sentence -> Ojs.string_to_js "sentence"))
        let (create :
          ?localeMatcher:[ `L_s26_best_fit  | `L_s81_lookup ] ->
            ?granularity:[ `L_s120_sentence  | `L_s144_word 
                         | `L_s65_grapheme ]
              -> unit -> t)
          =
          fun
            ?localeMatcher:(x2127 :
                             [ `L_s26_best_fit  | `L_s81_lookup ] option)
            ->
            fun
              ?granularity:(x2128 :
                             [ `L_s120_sentence  | `L_s144_word 
                             | `L_s65_grapheme ] option)
              ->
              fun () ->
                let x2129 = Ojs.empty_obj () in
                (match x2127 with
                 | Some x2131 ->
                     Ojs.set_prop_ascii x2129 "localeMatcher"
                       (match x2131 with
                        | `L_s26_best_fit -> Ojs.string_to_js "best fit"
                        | `L_s81_lookup -> Ojs.string_to_js "lookup")
                 | None -> ());
                (match x2128 with
                 | Some x2130 ->
                     Ojs.set_prop_ascii x2129 "granularity"
                       (match x2130 with
                        | `L_s120_sentence -> Ojs.string_to_js "sentence"
                        | `L_s144_word -> Ojs.string_to_js "word"
                        | `L_s65_grapheme -> Ojs.string_to_js "grapheme")
                 | None -> ());
                t_of_js x2129
        let cast_from = Obj.magic
      end
    module ResolvedSegmenterOptions =
      struct
        type t = [ `Intl_ResolvedSegmenterOptions ] intf
        let rec t_of_js : Ojs.t -> t = Obj.magic
        and t_to_js : t -> Ojs.t = Obj.magic
        type tags = [ `Intl_ResolvedSegmenterOptions ]
        type 'tags this =
          'tags intf constraint 'tags = [> `Intl_ResolvedSegmenterOptions ]
        let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
          =
          fun (type __tags) ->
            fun (__tags_of_js : Ojs.t -> __tags) ->
              fun (x2134 : Ojs.t) -> intf_of_js __tags_of_js x2134
        and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
          fun (type __tags) ->
            fun (__tags_to_js : __tags -> Ojs.t) ->
              fun (x2132 : __tags intf) -> intf_to_js __tags_to_js x2132
        let (get_locale : 'tags this -> string) =
          fun (x2136 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2136) "locale")
        let (set_locale : 'tags this -> string -> unit) =
          fun (x2138 : 'tags this) ->
            fun (x2139 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2138) "locale"
                (Ojs.string_to_js x2139)
        let (get_granularity :
          'tags this ->
            [ `L_s120_sentence  | `L_s144_word  | `L_s65_grapheme ])
          =
          fun (x2141 : 'tags this) ->
            let x2143 =
              Ojs.get_prop_ascii (this_to_js Obj.magic x2141) "granularity" in
            match Ojs.string_of_js x2143 with
            | "sentence" -> `L_s120_sentence
            | "word" -> `L_s144_word
            | "grapheme" -> `L_s65_grapheme
            | _ -> assert false
        let (set_granularity :
          'tags this ->
            [ `U1 of [ `L_s65_grapheme ]  | `U2 of [ `L_s144_word ] 
            | `U3 of [ `L_s120_sentence ] ] -> unit)
          =
          fun (x2144 : 'tags this) ->
            fun
              (x2145 :
                [ `U1 of [ `L_s65_grapheme ]  | `U2 of [ `L_s144_word ] 
                | `U3 of [ `L_s120_sentence ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2144) "granularity"
                (match x2145 with
                 | `U1 x2146 ->
                     (match x2146 with
                      | `L_s65_grapheme -> Ojs.string_to_js "grapheme")
                 | `U2 x2147 ->
                     (match x2147 with
                      | `L_s144_word -> Ojs.string_to_js "word")
                 | `U3 x2148 ->
                     (match x2148 with
                      | `L_s120_sentence -> Ojs.string_to_js "sentence"))
        let (create :
          locale:string ->
            granularity:[ `L_s120_sentence  | `L_s144_word 
                        | `L_s65_grapheme ]
              -> unit -> t)
          =
          fun ~locale:(x2150 : string) ->
            fun
              ~granularity:(x2151 :
                             [ `L_s120_sentence  | `L_s144_word 
                             | `L_s65_grapheme ])
              ->
              fun () ->
                let x2152 = Ojs.empty_obj () in
                Ojs.set_prop_ascii x2152 "locale" (Ojs.string_to_js x2150);
                Ojs.set_prop_ascii x2152 "granularity"
                  (match x2151 with
                   | `L_s120_sentence -> Ojs.string_to_js "sentence"
                   | `L_s144_word -> Ojs.string_to_js "word"
                   | `L_s65_grapheme -> Ojs.string_to_js "grapheme");
                t_of_js x2152
        let cast_from = Obj.magic
      end
    module BCP47LanguageTag =
      struct
        type t = string
        let rec t_of_js : Ojs.t -> t =
          fun (x2154 : Ojs.t) -> Ojs.string_of_js x2154
        and t_to_js : t -> Ojs.t =
          fun (x2153 : string) -> Ojs.string_to_js x2153
      end
    module Segmenter =
      struct
        type t = [ `Intl_Segmenter ] intf
        let rec t_of_js : Ojs.t -> t = Obj.magic
        and t_to_js : t -> Ojs.t = Obj.magic
        type tags = [ `Intl_Segmenter ]
        type 'tags this = 'tags intf constraint 'tags = [> `Intl_Segmenter ]
        let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
          =
          fun (type __tags) ->
            fun (__tags_of_js : Ojs.t -> __tags) ->
              fun (x2157 : Ojs.t) -> intf_of_js __tags_of_js x2157
        and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
          fun (type __tags) ->
            fun (__tags_to_js : __tags -> Ojs.t) ->
              fun (x2155 : __tags intf) -> intf_to_js __tags_to_js x2155
        let (segment : 'tags this -> input:string -> Segments.t) =
          fun (x2160 : 'tags this) ->
            fun ~input:(x2159 : string) ->
              Segments.t_of_js
                (Ojs.call (this_to_js Obj.magic x2160) "segment"
                   [|(Ojs.string_to_js x2159)|])
        let (resolvedOptions : 'tags this -> ResolvedSegmenterOptions.t) =
          fun (x2162 : 'tags this) ->
            ResolvedSegmenterOptions.t_of_js
              (Ojs.call (this_to_js Obj.magic x2162) "resolvedOptions" [||])
        let cast_from = Obj.magic
        let (prototype : unit -> t) =
          fun () ->
            t_of_js
              (Ojs.get_prop_ascii
                 (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Intl")
                    "Segmenter") "prototype")
        let (create :
          ?locales:[ `U1 of BCP47LanguageTag.t 
                   | `U2 of BCP47LanguageTag.t list ]
            -> ?options:SegmenterOptions.t -> unit -> t)
          =
          fun
            ?locales:(x2164 :
                       [ `U1 of BCP47LanguageTag.t 
                       | `U2 of BCP47LanguageTag.t list ] option)
            ->
            fun ?options:(x2165 : SegmenterOptions.t option) ->
              fun () ->
                t_of_js
                  (Ojs.new_obj_arr
                     (Ojs.get_prop_ascii
                        (Ojs.get_prop_ascii Ojs.global "Intl") "Segmenter")
                     (let x2166 =
                        Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                          [||] in
                      (match x2164 with
                       | Some x2168 ->
                           ignore
                             (Ojs.call x2166 "push"
                                [|((match x2168 with
                                    | `U1 x2169 ->
                                        BCP47LanguageTag.t_to_js x2169
                                    | `U2 x2170 ->
                                        Ojs.list_to_js
                                          BCP47LanguageTag.t_to_js x2170))|])
                       | None -> ());
                      (match x2165 with
                       | Some x2167 ->
                           ignore
                             (Ojs.call x2166 "push"
                                [|(SegmenterOptions.t_to_js x2167)|])
                       | None -> ());
                      x2166))
        let (supportedLocalesOf :
          locales:[ `U1 of BCP47LanguageTag.t 
                  | `U2 of BCP47LanguageTag.t list ]
            ->
            ?options:(SegmenterOptions.t, [ `L_s77_localeMatcher ]) Pick.t ->
              unit -> BCP47LanguageTag.t list)
          =
          fun
            ~locales:(x2172 :
                       [ `U1 of BCP47LanguageTag.t 
                       | `U2 of BCP47LanguageTag.t list ])
            ->
            fun
              ?options:(x2173 :
                         (SegmenterOptions.t, [ `L_s77_localeMatcher ])
                           Pick.t option)
              ->
              fun () ->
                Ojs.list_of_js BCP47LanguageTag.t_of_js
                  (let x2181 =
                     Ojs.get_prop_ascii
                       (Ojs.get_prop_ascii Ojs.global "Intl") "Segmenter" in
                   Ojs.call (Ojs.get_prop_ascii x2181 "supportedLocalesOf")
                     "apply"
                     [|x2181;((let x2174 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x2174 "push"
                                    [|((match x2172 with
                                        | `U1 x2178 ->
                                            BCP47LanguageTag.t_to_js x2178
                                        | `U2 x2179 ->
                                            Ojs.list_to_js
                                              BCP47LanguageTag.t_to_js x2179))|]);
                               (match x2173 with
                                | Some x2175 ->
                                    ignore
                                      (Ojs.call x2174 "push"
                                         [|(Pick.t_to_js
                                              SegmenterOptions.t_to_js
                                              (fun
                                                 (x2177 :
                                                   [ `L_s77_localeMatcher ])
                                                 ->
                                                 match x2177 with
                                                 | `L_s77_localeMatcher ->
                                                     Ojs.string_to_js
                                                       "localeMatcher") x2175)|])
                                | None -> ());
                               x2174))|])
      end
    module RelativeTimeFormatNumeric =
      struct
        type t = [ `L_s22_always  | `L_s23_auto ]
        let rec t_of_js : Ojs.t -> t =
          fun (x2184 : Ojs.t) ->
            let x2185 = x2184 in
            match Ojs.string_of_js x2185 with
            | "always" -> `L_s22_always
            | "auto" -> `L_s23_auto
            | _ -> assert false
        and t_to_js : t -> Ojs.t =
          fun (x2183 : [ `L_s22_always  | `L_s23_auto ]) ->
            match x2183 with
            | `L_s22_always -> Ojs.string_to_js "always"
            | `L_s23_auto -> Ojs.string_to_js "auto"
      end
    module UnicodeBCP47LocaleIdentifier =
      struct
        type t = string
        let rec t_of_js : Ojs.t -> t =
          fun (x2187 : Ojs.t) -> Ojs.string_of_js x2187
        and t_to_js : t -> Ojs.t =
          fun (x2186 : string) -> Ojs.string_to_js x2186
      end
    module RelativeTimeFormatStyle =
      struct
        type t = [ `L_s122_short  | `L_s78_long  | `L_s92_narrow ]
        let rec t_of_js : Ojs.t -> t =
          fun (x2189 : Ojs.t) ->
            let x2190 = x2189 in
            match Ojs.string_of_js x2190 with
            | "short" -> `L_s122_short
            | "long" -> `L_s78_long
            | "narrow" -> `L_s92_narrow
            | _ -> assert false
        and t_to_js : t -> Ojs.t =
          fun (x2188 : [ `L_s122_short  | `L_s78_long  | `L_s92_narrow ]) ->
            match x2188 with
            | `L_s122_short -> Ojs.string_to_js "short"
            | `L_s78_long -> Ojs.string_to_js "long"
            | `L_s92_narrow -> Ojs.string_to_js "narrow"
      end
    module ResolvedRelativeTimeFormatOptions =
      struct
        type t = [ `Intl_ResolvedRelativeTimeFormatOptions ] intf
        let rec t_of_js : Ojs.t -> t = Obj.magic
        and t_to_js : t -> Ojs.t = Obj.magic
        type tags = [ `Intl_ResolvedRelativeTimeFormatOptions ]
        type 'tags this =
          'tags intf constraint 'tags =
                      [> `Intl_ResolvedRelativeTimeFormatOptions ]
        let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
          =
          fun (type __tags) ->
            fun (__tags_of_js : Ojs.t -> __tags) ->
              fun (x2193 : Ojs.t) -> intf_of_js __tags_of_js x2193
        and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
          fun (type __tags) ->
            fun (__tags_to_js : __tags -> Ojs.t) ->
              fun (x2191 : __tags intf) -> intf_to_js __tags_to_js x2191
        let (get_locale : 'tags this -> UnicodeBCP47LocaleIdentifier.t) =
          fun (x2195 : 'tags this) ->
            UnicodeBCP47LocaleIdentifier.t_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2195) "locale")
        let (set_locale :
          'tags this -> UnicodeBCP47LocaleIdentifier.t -> unit) =
          fun (x2197 : 'tags this) ->
            fun (x2198 : UnicodeBCP47LocaleIdentifier.t) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2197) "locale"
                (UnicodeBCP47LocaleIdentifier.t_to_js x2198)
        let (get_style : 'tags this -> RelativeTimeFormatStyle.t) =
          fun (x2200 : 'tags this) ->
            RelativeTimeFormatStyle.t_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2200) "style")
        let (set_style : 'tags this -> RelativeTimeFormatStyle.t -> unit) =
          fun (x2202 : 'tags this) ->
            fun (x2203 : RelativeTimeFormatStyle.t) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2202) "style"
                (RelativeTimeFormatStyle.t_to_js x2203)
        let (get_numeric : 'tags this -> RelativeTimeFormatNumeric.t) =
          fun (x2205 : 'tags this) ->
            RelativeTimeFormatNumeric.t_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2205) "numeric")
        let (set_numeric : 'tags this -> RelativeTimeFormatNumeric.t -> unit)
          =
          fun (x2207 : 'tags this) ->
            fun (x2208 : RelativeTimeFormatNumeric.t) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2207) "numeric"
                (RelativeTimeFormatNumeric.t_to_js x2208)
        let (get_numberingSystem : 'tags this -> string) =
          fun (x2210 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2210)
                 "numberingSystem")
        let (set_numberingSystem : 'tags this -> string -> unit) =
          fun (x2212 : 'tags this) ->
            fun (x2213 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2212)
                "numberingSystem" (Ojs.string_to_js x2213)
        let (create :
          locale:UnicodeBCP47LocaleIdentifier.t ->
            style:RelativeTimeFormatStyle.t ->
              numeric:RelativeTimeFormatNumeric.t ->
                numberingSystem:string -> unit -> t)
          =
          fun ~locale:(x2215 : UnicodeBCP47LocaleIdentifier.t) ->
            fun ~style:(x2216 : RelativeTimeFormatStyle.t) ->
              fun ~numeric:(x2217 : RelativeTimeFormatNumeric.t) ->
                fun ~numberingSystem:(x2218 : string) ->
                  fun () ->
                    let x2219 = Ojs.empty_obj () in
                    Ojs.set_prop_ascii x2219 "locale"
                      (UnicodeBCP47LocaleIdentifier.t_to_js x2215);
                    Ojs.set_prop_ascii x2219 "style"
                      (RelativeTimeFormatStyle.t_to_js x2216);
                    Ojs.set_prop_ascii x2219 "numeric"
                      (RelativeTimeFormatNumeric.t_to_js x2217);
                    Ojs.set_prop_ascii x2219 "numberingSystem"
                      (Ojs.string_to_js x2218);
                    t_of_js x2219
        let cast_from = Obj.magic
      end
    module RelativeTimeFormatUnit =
      struct
        type t =
          [ `L_s109_quarter  | `L_s110_quarters  | `L_s118_second 
          | `L_s119_seconds  | `L_s141_week  | `L_s143_weeks  | `L_s145_year 
          | `L_s146_years  | `L_s38_day  | `L_s40_days  | `L_s71_hour 
          | `L_s72_hours  | `L_s86_minute  | `L_s87_minutes  | `L_s88_month 
          | `L_s89_months ]
        let rec t_of_js : Ojs.t -> t =
          fun (x2221 : Ojs.t) ->
            let x2222 = x2221 in
            match Ojs.string_of_js x2222 with
            | "quarter" -> `L_s109_quarter
            | "quarters" -> `L_s110_quarters
            | "second" -> `L_s118_second
            | "seconds" -> `L_s119_seconds
            | "week" -> `L_s141_week
            | "weeks" -> `L_s143_weeks
            | "year" -> `L_s145_year
            | "years" -> `L_s146_years
            | "day" -> `L_s38_day
            | "days" -> `L_s40_days
            | "hour" -> `L_s71_hour
            | "hours" -> `L_s72_hours
            | "minute" -> `L_s86_minute
            | "minutes" -> `L_s87_minutes
            | "month" -> `L_s88_month
            | "months" -> `L_s89_months
            | _ -> assert false
        and t_to_js : t -> Ojs.t =
          fun
            (x2220 :
              [ `L_s109_quarter  | `L_s110_quarters  | `L_s118_second 
              | `L_s119_seconds  | `L_s141_week  | `L_s143_weeks 
              | `L_s145_year  | `L_s146_years  | `L_s38_day  | `L_s40_days 
              | `L_s71_hour  | `L_s72_hours  | `L_s86_minute 
              | `L_s87_minutes  | `L_s88_month  | `L_s89_months ])
            ->
            match x2220 with
            | `L_s109_quarter -> Ojs.string_to_js "quarter"
            | `L_s110_quarters -> Ojs.string_to_js "quarters"
            | `L_s118_second -> Ojs.string_to_js "second"
            | `L_s119_seconds -> Ojs.string_to_js "seconds"
            | `L_s141_week -> Ojs.string_to_js "week"
            | `L_s143_weeks -> Ojs.string_to_js "weeks"
            | `L_s145_year -> Ojs.string_to_js "year"
            | `L_s146_years -> Ojs.string_to_js "years"
            | `L_s38_day -> Ojs.string_to_js "day"
            | `L_s40_days -> Ojs.string_to_js "days"
            | `L_s71_hour -> Ojs.string_to_js "hour"
            | `L_s72_hours -> Ojs.string_to_js "hours"
            | `L_s86_minute -> Ojs.string_to_js "minute"
            | `L_s87_minutes -> Ojs.string_to_js "minutes"
            | `L_s88_month -> Ojs.string_to_js "month"
            | `L_s89_months -> Ojs.string_to_js "months"
      end
    module RelativeTimeFormatUnitSingular =
      struct
        type t =
          [ `L_s109_quarter  | `L_s118_second  | `L_s141_week 
          | `L_s145_year  | `L_s38_day  | `L_s71_hour  | `L_s86_minute 
          | `L_s88_month ]
        let rec t_of_js : Ojs.t -> t =
          fun (x2224 : Ojs.t) ->
            let x2225 = x2224 in
            match Ojs.string_of_js x2225 with
            | "quarter" -> `L_s109_quarter
            | "second" -> `L_s118_second
            | "week" -> `L_s141_week
            | "year" -> `L_s145_year
            | "day" -> `L_s38_day
            | "hour" -> `L_s71_hour
            | "minute" -> `L_s86_minute
            | "month" -> `L_s88_month
            | _ -> assert false
        and t_to_js : t -> Ojs.t =
          fun
            (x2223 :
              [ `L_s109_quarter  | `L_s118_second  | `L_s141_week 
              | `L_s145_year  | `L_s38_day  | `L_s71_hour  | `L_s86_minute 
              | `L_s88_month ])
            ->
            match x2223 with
            | `L_s109_quarter -> Ojs.string_to_js "quarter"
            | `L_s118_second -> Ojs.string_to_js "second"
            | `L_s141_week -> Ojs.string_to_js "week"
            | `L_s145_year -> Ojs.string_to_js "year"
            | `L_s38_day -> Ojs.string_to_js "day"
            | `L_s71_hour -> Ojs.string_to_js "hour"
            | `L_s86_minute -> Ojs.string_to_js "minute"
            | `L_s88_month -> Ojs.string_to_js "month"
      end
    module ES2020NumberFormatPartType =
      struct
        type t =
          [ `L_s137_unit  | `L_s138_unknown  | `L_s33_compact 
          | `L_s55_exponentInteger  | `L_s56_exponentMinusSign 
          | `L_s57_exponentSeparator ]
        let rec t_of_js : Ojs.t -> t =
          fun (x2227 : Ojs.t) ->
            let x2228 = x2227 in
            match Ojs.string_of_js x2228 with
            | "unit" -> `L_s137_unit
            | "unknown" -> `L_s138_unknown
            | "compact" -> `L_s33_compact
            | "exponentInteger" -> `L_s55_exponentInteger
            | "exponentMinusSign" -> `L_s56_exponentMinusSign
            | "exponentSeparator" -> `L_s57_exponentSeparator
            | _ -> assert false
        and t_to_js : t -> Ojs.t =
          fun
            (x2226 :
              [ `L_s137_unit  | `L_s138_unknown  | `L_s33_compact 
              | `L_s55_exponentInteger  | `L_s56_exponentMinusSign 
              | `L_s57_exponentSeparator ])
            ->
            match x2226 with
            | `L_s137_unit -> Ojs.string_to_js "unit"
            | `L_s138_unknown -> Ojs.string_to_js "unknown"
            | `L_s33_compact -> Ojs.string_to_js "compact"
            | `L_s55_exponentInteger -> Ojs.string_to_js "exponentInteger"
            | `L_s56_exponentMinusSign ->
                Ojs.string_to_js "exponentMinusSign"
            | `L_s57_exponentSeparator ->
                Ojs.string_to_js "exponentSeparator"
      end
    module ES2018NumberFormatPartType =
      struct
        type t =
          [ `L_s103_percent  | `L_s104_percentSign  | `L_s108_plusSign 
          | `L_s130_symbol  | `L_s31_code  | `L_s36_currency 
          | `L_s41_decimal  | `L_s60_fraction  | `L_s66_group 
          | `L_s73_infinity  | `L_s74_integer  | `L_s76_literal 
          | `L_s85_minusSign  | `L_s90_name  | `L_s91_nan ]
        let rec t_of_js : Ojs.t -> t =
          fun (x2230 : Ojs.t) ->
            let x2231 = x2230 in
            match Ojs.string_of_js x2231 with
            | "percent" -> `L_s103_percent
            | "percentSign" -> `L_s104_percentSign
            | "plusSign" -> `L_s108_plusSign
            | "symbol" -> `L_s130_symbol
            | "code" -> `L_s31_code
            | "currency" -> `L_s36_currency
            | "decimal" -> `L_s41_decimal
            | "fraction" -> `L_s60_fraction
            | "group" -> `L_s66_group
            | "infinity" -> `L_s73_infinity
            | "integer" -> `L_s74_integer
            | "literal" -> `L_s76_literal
            | "minusSign" -> `L_s85_minusSign
            | "name" -> `L_s90_name
            | "nan" -> `L_s91_nan
            | _ -> assert false
        and t_to_js : t -> Ojs.t =
          fun
            (x2229 :
              [ `L_s103_percent  | `L_s104_percentSign  | `L_s108_plusSign 
              | `L_s130_symbol  | `L_s31_code  | `L_s36_currency 
              | `L_s41_decimal  | `L_s60_fraction  | `L_s66_group 
              | `L_s73_infinity  | `L_s74_integer  | `L_s76_literal 
              | `L_s85_minusSign  | `L_s90_name  | `L_s91_nan ])
            ->
            match x2229 with
            | `L_s103_percent -> Ojs.string_to_js "percent"
            | `L_s104_percentSign -> Ojs.string_to_js "percentSign"
            | `L_s108_plusSign -> Ojs.string_to_js "plusSign"
            | `L_s130_symbol -> Ojs.string_to_js "symbol"
            | `L_s31_code -> Ojs.string_to_js "code"
            | `L_s36_currency -> Ojs.string_to_js "currency"
            | `L_s41_decimal -> Ojs.string_to_js "decimal"
            | `L_s60_fraction -> Ojs.string_to_js "fraction"
            | `L_s66_group -> Ojs.string_to_js "group"
            | `L_s73_infinity -> Ojs.string_to_js "infinity"
            | `L_s74_integer -> Ojs.string_to_js "integer"
            | `L_s76_literal -> Ojs.string_to_js "literal"
            | `L_s85_minusSign -> Ojs.string_to_js "minusSign"
            | `L_s90_name -> Ojs.string_to_js "name"
            | `L_s91_nan -> Ojs.string_to_js "nan"
      end
    module NumberFormatPartTypes =
      struct
        type t =
          [ `L_s103_percent  | `L_s104_percentSign  | `L_s108_plusSign 
          | `L_s130_symbol  | `L_s137_unit  | `L_s138_unknown  | `L_s31_code 
          | `L_s33_compact  | `L_s36_currency  | `L_s41_decimal 
          | `L_s55_exponentInteger  | `L_s56_exponentMinusSign 
          | `L_s57_exponentSeparator  | `L_s60_fraction  | `L_s66_group 
          | `L_s73_infinity  | `L_s74_integer  | `L_s76_literal 
          | `L_s85_minusSign  | `L_s90_name  | `L_s91_nan ]
        let rec t_of_js : Ojs.t -> t =
          fun (x2233 : Ojs.t) ->
            let x2234 = x2233 in
            match Ojs.string_of_js x2234 with
            | "percent" -> `L_s103_percent
            | "percentSign" -> `L_s104_percentSign
            | "plusSign" -> `L_s108_plusSign
            | "symbol" -> `L_s130_symbol
            | "unit" -> `L_s137_unit
            | "unknown" -> `L_s138_unknown
            | "code" -> `L_s31_code
            | "compact" -> `L_s33_compact
            | "currency" -> `L_s36_currency
            | "decimal" -> `L_s41_decimal
            | "exponentInteger" -> `L_s55_exponentInteger
            | "exponentMinusSign" -> `L_s56_exponentMinusSign
            | "exponentSeparator" -> `L_s57_exponentSeparator
            | "fraction" -> `L_s60_fraction
            | "group" -> `L_s66_group
            | "infinity" -> `L_s73_infinity
            | "integer" -> `L_s74_integer
            | "literal" -> `L_s76_literal
            | "minusSign" -> `L_s85_minusSign
            | "name" -> `L_s90_name
            | "nan" -> `L_s91_nan
            | _ -> assert false
        and t_to_js : t -> Ojs.t =
          fun
            (x2232 :
              [ `L_s103_percent  | `L_s104_percentSign  | `L_s108_plusSign 
              | `L_s130_symbol  | `L_s137_unit  | `L_s138_unknown 
              | `L_s31_code  | `L_s33_compact  | `L_s36_currency 
              | `L_s41_decimal  | `L_s55_exponentInteger 
              | `L_s56_exponentMinusSign  | `L_s57_exponentSeparator 
              | `L_s60_fraction  | `L_s66_group  | `L_s73_infinity 
              | `L_s74_integer  | `L_s76_literal  | `L_s85_minusSign 
              | `L_s90_name  | `L_s91_nan ])
            ->
            match x2232 with
            | `L_s103_percent -> Ojs.string_to_js "percent"
            | `L_s104_percentSign -> Ojs.string_to_js "percentSign"
            | `L_s108_plusSign -> Ojs.string_to_js "plusSign"
            | `L_s130_symbol -> Ojs.string_to_js "symbol"
            | `L_s137_unit -> Ojs.string_to_js "unit"
            | `L_s138_unknown -> Ojs.string_to_js "unknown"
            | `L_s31_code -> Ojs.string_to_js "code"
            | `L_s33_compact -> Ojs.string_to_js "compact"
            | `L_s36_currency -> Ojs.string_to_js "currency"
            | `L_s41_decimal -> Ojs.string_to_js "decimal"
            | `L_s55_exponentInteger -> Ojs.string_to_js "exponentInteger"
            | `L_s56_exponentMinusSign ->
                Ojs.string_to_js "exponentMinusSign"
            | `L_s57_exponentSeparator ->
                Ojs.string_to_js "exponentSeparator"
            | `L_s60_fraction -> Ojs.string_to_js "fraction"
            | `L_s66_group -> Ojs.string_to_js "group"
            | `L_s73_infinity -> Ojs.string_to_js "infinity"
            | `L_s74_integer -> Ojs.string_to_js "integer"
            | `L_s76_literal -> Ojs.string_to_js "literal"
            | `L_s85_minusSign -> Ojs.string_to_js "minusSign"
            | `L_s90_name -> Ojs.string_to_js "name"
            | `L_s91_nan -> Ojs.string_to_js "nan"
      end
    module RelativeTimeFormatPart =
      struct
        module AnonymousInterface13 =
          struct
            type t = Ojs.t
            let rec t_of_js : Ojs.t -> t = fun (x2236 : Ojs.t) -> x2236
            and t_to_js : t -> Ojs.t = fun (x2235 : Ojs.t) -> x2235
            let (get_type :
              t -> (NumberFormatPartTypes.t, [ `L_s76_literal ]) Exclude.t) =
              fun (x2237 : t) ->
                Exclude.t_of_js NumberFormatPartTypes.t_of_js
                  (fun (x2239 : Ojs.t) ->
                     let x2240 = x2239 in
                     match Ojs.string_of_js x2240 with
                     | "literal" -> `L_s76_literal
                     | _ -> assert false)
                  (Ojs.get_prop_ascii (t_to_js x2237) "type")
            let (set_type :
              t ->
                (NumberFormatPartTypes.t, [ `L_s76_literal ]) Exclude.t ->
                  unit)
              =
              fun (x2241 : t) ->
                fun
                  (x2242 :
                    (NumberFormatPartTypes.t, [ `L_s76_literal ]) Exclude.t)
                  ->
                  Ojs.set_prop_ascii (t_to_js x2241) "type"
                    (Exclude.t_to_js NumberFormatPartTypes.t_to_js
                       (fun (x2244 : [ `L_s76_literal ]) ->
                          match x2244 with
                          | `L_s76_literal -> Ojs.string_to_js "literal")
                       x2242)
            let (get_value : t -> string) =
              fun (x2245 : t) ->
                Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x2245) "value")
            let (set_value : t -> string -> unit) =
              fun (x2246 : t) ->
                fun (x2247 : string) ->
                  Ojs.set_prop_ascii (t_to_js x2246) "value"
                    (Ojs.string_to_js x2247)
            let (get_unit : t -> RelativeTimeFormatUnitSingular.t) =
              fun (x2248 : t) ->
                RelativeTimeFormatUnitSingular.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x2248) "unit")
            let (set_unit : t -> RelativeTimeFormatUnitSingular.t -> unit) =
              fun (x2249 : t) ->
                fun (x2250 : RelativeTimeFormatUnitSingular.t) ->
                  Ojs.set_prop_ascii (t_to_js x2249) "unit"
                    (RelativeTimeFormatUnitSingular.t_to_js x2250)
            let (create :
              type_:(NumberFormatPartTypes.t, [ `L_s76_literal ]) Exclude.t
                ->
                value:string ->
                  unit:RelativeTimeFormatUnitSingular.t -> unit -> t)
              =
              fun
                ~type_:(x2251 :
                         (NumberFormatPartTypes.t, [ `L_s76_literal ])
                           Exclude.t)
                ->
                fun ~value:(x2252 : string) ->
                  fun ~unit:(x2253 : RelativeTimeFormatUnitSingular.t) ->
                    fun () ->
                      let x2254 = Ojs.empty_obj () in
                      Ojs.set_prop_ascii x2254 "type"
                        (Exclude.t_to_js NumberFormatPartTypes.t_to_js
                           (fun (x2256 : [ `L_s76_literal ]) ->
                              match x2256 with
                              | `L_s76_literal -> Ojs.string_to_js "literal")
                           x2251);
                      Ojs.set_prop_ascii x2254 "value"
                        (Ojs.string_to_js x2252);
                      Ojs.set_prop_ascii x2254 "unit"
                        (RelativeTimeFormatUnitSingular.t_to_js x2253);
                      t_of_js x2254
          end
        module AnonymousInterface11 =
          struct
            type t = Ojs.t
            let rec t_of_js : Ojs.t -> t = fun (x2258 : Ojs.t) -> x2258
            and t_to_js : t -> Ojs.t = fun (x2257 : Ojs.t) -> x2257
            let (get_type : t -> [ `L_s76_literal ]) =
              fun (x2259 : t) ->
                let x2260 = Ojs.get_prop_ascii (t_to_js x2259) "type" in
                match Ojs.string_of_js x2260 with
                | "literal" -> `L_s76_literal
                | _ -> assert false
            let (set_type : t -> [ `L_s76_literal ] -> unit) =
              fun (x2261 : t) ->
                fun (x2262 : [ `L_s76_literal ]) ->
                  Ojs.set_prop_ascii (t_to_js x2261) "type"
                    (match x2262 with
                     | `L_s76_literal -> Ojs.string_to_js "literal")
            let (get_value : t -> string) =
              fun (x2263 : t) ->
                Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x2263) "value")
            let (set_value : t -> string -> unit) =
              fun (x2264 : t) ->
                fun (x2265 : string) ->
                  Ojs.set_prop_ascii (t_to_js x2264) "value"
                    (Ojs.string_to_js x2265)
            let (create :
              type_:[ `L_s76_literal ] -> value:string -> unit -> t) =
              fun ~type_:(x2266 : [ `L_s76_literal ]) ->
                fun ~value:(x2267 : string) ->
                  fun () ->
                    let x2268 = Ojs.empty_obj () in
                    Ojs.set_prop_ascii x2268 "type"
                      (match x2266 with
                       | `L_s76_literal -> Ojs.string_to_js "literal");
                    Ojs.set_prop_ascii x2268 "value" (Ojs.string_to_js x2267);
                    t_of_js x2268
          end
        type t = (AnonymousInterface11.t, AnonymousInterface13.t) union2
        let rec t_of_js : Ojs.t -> t =
          fun (x2272 : Ojs.t) ->
            union2_of_js AnonymousInterface11.t_of_js
              AnonymousInterface13.t_of_js x2272
        and t_to_js : t -> Ojs.t =
          fun
            (x2269 : (AnonymousInterface11.t, AnonymousInterface13.t) union2)
            ->
            union2_to_js AnonymousInterface11.t_to_js
              AnonymousInterface13.t_to_js x2269
      end
    module RelativeTimeFormatLocaleMatcher =
      struct
        type t = [ `L_s26_best_fit  | `L_s81_lookup ]
        let rec t_of_js : Ojs.t -> t =
          fun (x2276 : Ojs.t) ->
            let x2277 = x2276 in
            match Ojs.string_of_js x2277 with
            | "best fit" -> `L_s26_best_fit
            | "lookup" -> `L_s81_lookup
            | _ -> assert false
        and t_to_js : t -> Ojs.t =
          fun (x2275 : [ `L_s26_best_fit  | `L_s81_lookup ]) ->
            match x2275 with
            | `L_s26_best_fit -> Ojs.string_to_js "best fit"
            | `L_s81_lookup -> Ojs.string_to_js "lookup"
      end
    module RelativeTimeFormatOptions =
      struct
        type t = [ `Intl_RelativeTimeFormatOptions ] intf
        let rec t_of_js : Ojs.t -> t = Obj.magic
        and t_to_js : t -> Ojs.t = Obj.magic
        type tags = [ `Intl_RelativeTimeFormatOptions ]
        type 'tags this =
          'tags intf constraint 'tags = [> `Intl_RelativeTimeFormatOptions ]
        let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
          =
          fun (type __tags) ->
            fun (__tags_of_js : Ojs.t -> __tags) ->
              fun (x2280 : Ojs.t) -> intf_of_js __tags_of_js x2280
        and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
          fun (type __tags) ->
            fun (__tags_to_js : __tags -> Ojs.t) ->
              fun (x2278 : __tags intf) -> intf_to_js __tags_to_js x2278
        let (get_localeMatcher :
          'tags this -> RelativeTimeFormatLocaleMatcher.t option) =
          fun (x2282 : 'tags this) ->
            Ojs.option_of_js RelativeTimeFormatLocaleMatcher.t_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2282)
                 "localeMatcher")
        let (set_localeMatcher :
          'tags this -> RelativeTimeFormatLocaleMatcher.t -> unit) =
          fun (x2285 : 'tags this) ->
            fun (x2286 : RelativeTimeFormatLocaleMatcher.t) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2285) "localeMatcher"
                (RelativeTimeFormatLocaleMatcher.t_to_js x2286)
        let (get_numeric : 'tags this -> RelativeTimeFormatNumeric.t option)
          =
          fun (x2288 : 'tags this) ->
            Ojs.option_of_js RelativeTimeFormatNumeric.t_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2288) "numeric")
        let (set_numeric : 'tags this -> RelativeTimeFormatNumeric.t -> unit)
          =
          fun (x2291 : 'tags this) ->
            fun (x2292 : RelativeTimeFormatNumeric.t) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2291) "numeric"
                (RelativeTimeFormatNumeric.t_to_js x2292)
        let (get_style : 'tags this -> RelativeTimeFormatStyle.t option) =
          fun (x2294 : 'tags this) ->
            Ojs.option_of_js RelativeTimeFormatStyle.t_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2294) "style")
        let (set_style : 'tags this -> RelativeTimeFormatStyle.t -> unit) =
          fun (x2297 : 'tags this) ->
            fun (x2298 : RelativeTimeFormatStyle.t) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2297) "style"
                (RelativeTimeFormatStyle.t_to_js x2298)
        let (create :
          ?localeMatcher:RelativeTimeFormatLocaleMatcher.t ->
            ?numeric:RelativeTimeFormatNumeric.t ->
              ?style:RelativeTimeFormatStyle.t -> unit -> t)
          =
          fun
            ?localeMatcher:(x2300 : RelativeTimeFormatLocaleMatcher.t option)
            ->
            fun ?numeric:(x2301 : RelativeTimeFormatNumeric.t option) ->
              fun ?style:(x2302 : RelativeTimeFormatStyle.t option) ->
                fun () ->
                  let x2303 = Ojs.empty_obj () in
                  (match x2300 with
                   | Some x2306 ->
                       Ojs.set_prop_ascii x2303 "localeMatcher"
                         (RelativeTimeFormatLocaleMatcher.t_to_js x2306)
                   | None -> ());
                  (match x2301 with
                   | Some x2305 ->
                       Ojs.set_prop_ascii x2303 "numeric"
                         (RelativeTimeFormatNumeric.t_to_js x2305)
                   | None -> ());
                  (match x2302 with
                   | Some x2304 ->
                       Ojs.set_prop_ascii x2303 "style"
                         (RelativeTimeFormatStyle.t_to_js x2304)
                   | None -> ());
                  t_of_js x2303
        let cast_from = Obj.magic
      end
    module RelativeTimeFormat =
      struct
        type t = [ `Intl_RelativeTimeFormat ] intf
        let rec t_of_js : Ojs.t -> t = Obj.magic
        and t_to_js : t -> Ojs.t = Obj.magic
        type tags = [ `Intl_RelativeTimeFormat ]
        type 'tags this =
          'tags intf constraint 'tags = [> `Intl_RelativeTimeFormat ]
        let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
          =
          fun (type __tags) ->
            fun (__tags_of_js : Ojs.t -> __tags) ->
              fun (x2309 : Ojs.t) -> intf_of_js __tags_of_js x2309
        and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
          fun (type __tags) ->
            fun (__tags_to_js : __tags -> Ojs.t) ->
              fun (x2307 : __tags intf) -> intf_to_js __tags_to_js x2307
        let (format :
          'tags this ->
            value:float -> unit:RelativeTimeFormatUnit.t -> string)
          =
          fun (x2313 : 'tags this) ->
            fun ~value:(x2311 : float) ->
              fun ~unit:(x2312 : RelativeTimeFormatUnit.t) ->
                Ojs.string_of_js
                  (Ojs.call (this_to_js Obj.magic x2313) "format"
                     [|(Ojs.float_to_js x2311);(RelativeTimeFormatUnit.t_to_js
                                                  x2312)|])
        let (formatToParts :
          'tags this ->
            value:float ->
              unit:RelativeTimeFormatUnit.t -> RelativeTimeFormatPart.t list)
          =
          fun (x2317 : 'tags this) ->
            fun ~value:(x2315 : float) ->
              fun ~unit:(x2316 : RelativeTimeFormatUnit.t) ->
                Ojs.list_of_js RelativeTimeFormatPart.t_of_js
                  (Ojs.call (this_to_js Obj.magic x2317) "formatToParts"
                     [|(Ojs.float_to_js x2315);(RelativeTimeFormatUnit.t_to_js
                                                  x2316)|])
        let (resolvedOptions :
          'tags this -> ResolvedRelativeTimeFormatOptions.t) =
          fun (x2320 : 'tags this) ->
            ResolvedRelativeTimeFormatOptions.t_of_js
              (Ojs.call (this_to_js Obj.magic x2320) "resolvedOptions" [||])
        let cast_from = Obj.magic
        let (create :
          ?locales:[ `U1 of UnicodeBCP47LocaleIdentifier.t 
                   | `U2 of UnicodeBCP47LocaleIdentifier.t list ]
            -> ?options:RelativeTimeFormatOptions.t -> unit -> t)
          =
          fun
            ?locales:(x2322 :
                       [ `U1 of UnicodeBCP47LocaleIdentifier.t 
                       | `U2 of UnicodeBCP47LocaleIdentifier.t list ] option)
            ->
            fun ?options:(x2323 : RelativeTimeFormatOptions.t option) ->
              fun () ->
                t_of_js
                  (Ojs.new_obj_arr
                     (Ojs.get_prop_ascii
                        (Ojs.get_prop_ascii Ojs.global "Intl")
                        "RelativeTimeFormat")
                     (let x2324 =
                        Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                          [||] in
                      (match x2322 with
                       | Some x2326 ->
                           ignore
                             (Ojs.call x2324 "push"
                                [|((match x2326 with
                                    | `U1 x2327 ->
                                        UnicodeBCP47LocaleIdentifier.t_to_js
                                          x2327
                                    | `U2 x2328 ->
                                        Ojs.list_to_js
                                          UnicodeBCP47LocaleIdentifier.t_to_js
                                          x2328))|])
                       | None -> ());
                      (match x2323 with
                       | Some x2325 ->
                           ignore
                             (Ojs.call x2324 "push"
                                [|(RelativeTimeFormatOptions.t_to_js x2325)|])
                       | None -> ());
                      x2324))
        let (supportedLocalesOf :
          ?locales:[ `U1 of UnicodeBCP47LocaleIdentifier.t 
                   | `U2 of UnicodeBCP47LocaleIdentifier.t list ]
            ->
            ?options:RelativeTimeFormatOptions.t ->
              unit -> UnicodeBCP47LocaleIdentifier.t list)
          =
          fun
            ?locales:(x2330 :
                       [ `U1 of UnicodeBCP47LocaleIdentifier.t 
                       | `U2 of UnicodeBCP47LocaleIdentifier.t list ] option)
            ->
            fun ?options:(x2331 : RelativeTimeFormatOptions.t option) ->
              fun () ->
                Ojs.list_of_js UnicodeBCP47LocaleIdentifier.t_of_js
                  (let x2338 =
                     Ojs.get_prop_ascii
                       (Ojs.get_prop_ascii Ojs.global "Intl")
                       "RelativeTimeFormat" in
                   Ojs.call (Ojs.get_prop_ascii x2338 "supportedLocalesOf")
                     "apply"
                     [|x2338;((let x2332 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               (match x2330 with
                                | Some x2334 ->
                                    ignore
                                      (Ojs.call x2332 "push"
                                         [|((match x2334 with
                                             | `U1 x2335 ->
                                                 UnicodeBCP47LocaleIdentifier.t_to_js
                                                   x2335
                                             | `U2 x2336 ->
                                                 Ojs.list_to_js
                                                   UnicodeBCP47LocaleIdentifier.t_to_js
                                                   x2336))|])
                                | None -> ());
                               (match x2331 with
                                | Some x2333 ->
                                    ignore
                                      (Ojs.call x2332 "push"
                                         [|(RelativeTimeFormatOptions.t_to_js
                                              x2333)|])
                                | None -> ());
                               x2332))|])
      end
    module PluralRuleType =
      struct
        type t = [ `L_s101_ordinal  | `L_s29_cardinal ]
        let rec t_of_js : Ojs.t -> t =
          fun (x2341 : Ojs.t) ->
            let x2342 = x2341 in
            match Ojs.string_of_js x2342 with
            | "ordinal" -> `L_s101_ordinal
            | "cardinal" -> `L_s29_cardinal
            | _ -> assert false
        and t_to_js : t -> Ojs.t =
          fun (x2340 : [ `L_s101_ordinal  | `L_s29_cardinal ]) ->
            match x2340 with
            | `L_s101_ordinal -> Ojs.string_to_js "ordinal"
            | `L_s29_cardinal -> Ojs.string_to_js "cardinal"
      end
    module LDMLPluralRule =
      struct
        type t =
          [ `L_s100_one  | `L_s102_other  | `L_s135_two  | `L_s147_zero 
          | `L_s59_few  | `L_s83_many ]
        let rec t_of_js : Ojs.t -> t =
          fun (x2344 : Ojs.t) ->
            let x2345 = x2344 in
            match Ojs.string_of_js x2345 with
            | "one" -> `L_s100_one
            | "other" -> `L_s102_other
            | "two" -> `L_s135_two
            | "zero" -> `L_s147_zero
            | "few" -> `L_s59_few
            | "many" -> `L_s83_many
            | _ -> assert false
        and t_to_js : t -> Ojs.t =
          fun
            (x2343 :
              [ `L_s100_one  | `L_s102_other  | `L_s135_two  | `L_s147_zero 
              | `L_s59_few  | `L_s83_many ])
            ->
            match x2343 with
            | `L_s100_one -> Ojs.string_to_js "one"
            | `L_s102_other -> Ojs.string_to_js "other"
            | `L_s135_two -> Ojs.string_to_js "two"
            | `L_s147_zero -> Ojs.string_to_js "zero"
            | `L_s59_few -> Ojs.string_to_js "few"
            | `L_s83_many -> Ojs.string_to_js "many"
      end
    module ResolvedPluralRulesOptions =
      struct
        type t = [ `Intl_ResolvedPluralRulesOptions ] intf
        let rec t_of_js : Ojs.t -> t = Obj.magic
        and t_to_js : t -> Ojs.t = Obj.magic
        type tags = [ `Intl_ResolvedPluralRulesOptions ]
        type 'tags this =
          'tags intf constraint 'tags = [> `Intl_ResolvedPluralRulesOptions ]
        let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
          =
          fun (type __tags) ->
            fun (__tags_of_js : Ojs.t -> __tags) ->
              fun (x2348 : Ojs.t) -> intf_of_js __tags_of_js x2348
        and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
          fun (type __tags) ->
            fun (__tags_to_js : __tags -> Ojs.t) ->
              fun (x2346 : __tags intf) -> intf_to_js __tags_to_js x2346
        let (get_locale : 'tags this -> string) =
          fun (x2350 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2350) "locale")
        let (set_locale : 'tags this -> string -> unit) =
          fun (x2352 : 'tags this) ->
            fun (x2353 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2352) "locale"
                (Ojs.string_to_js x2353)
        let (get_pluralCategories : 'tags this -> LDMLPluralRule.t list) =
          fun (x2355 : 'tags this) ->
            Ojs.list_of_js LDMLPluralRule.t_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2355)
                 "pluralCategories")
        let (set_pluralCategories :
          'tags this -> LDMLPluralRule.t list -> unit) =
          fun (x2358 : 'tags this) ->
            fun (x2359 : LDMLPluralRule.t list) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2358)
                "pluralCategories"
                (Ojs.list_to_js LDMLPluralRule.t_to_js x2359)
        let (get_type : 'tags this -> PluralRuleType.t) =
          fun (x2362 : 'tags this) ->
            PluralRuleType.t_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2362) "type")
        let (set_type : 'tags this -> PluralRuleType.t -> unit) =
          fun (x2364 : 'tags this) ->
            fun (x2365 : PluralRuleType.t) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2364) "type"
                (PluralRuleType.t_to_js x2365)
        let (get_minimumIntegerDigits : 'tags this -> float) =
          fun (x2367 : 'tags this) ->
            Ojs.float_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2367)
                 "minimumIntegerDigits")
        let (set_minimumIntegerDigits : 'tags this -> float -> unit) =
          fun (x2369 : 'tags this) ->
            fun (x2370 : float) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2369)
                "minimumIntegerDigits" (Ojs.float_to_js x2370)
        let (get_minimumFractionDigits : 'tags this -> float) =
          fun (x2372 : 'tags this) ->
            Ojs.float_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2372)
                 "minimumFractionDigits")
        let (set_minimumFractionDigits : 'tags this -> float -> unit) =
          fun (x2374 : 'tags this) ->
            fun (x2375 : float) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2374)
                "minimumFractionDigits" (Ojs.float_to_js x2375)
        let (get_maximumFractionDigits : 'tags this -> float) =
          fun (x2377 : 'tags this) ->
            Ojs.float_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2377)
                 "maximumFractionDigits")
        let (set_maximumFractionDigits : 'tags this -> float -> unit) =
          fun (x2379 : 'tags this) ->
            fun (x2380 : float) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2379)
                "maximumFractionDigits" (Ojs.float_to_js x2380)
        let (get_minimumSignificantDigits : 'tags this -> float option) =
          fun (x2382 : 'tags this) ->
            Ojs.option_of_js Ojs.float_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2382)
                 "minimumSignificantDigits")
        let (set_minimumSignificantDigits : 'tags this -> float -> unit) =
          fun (x2385 : 'tags this) ->
            fun (x2386 : float) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2385)
                "minimumSignificantDigits" (Ojs.float_to_js x2386)
        let (get_maximumSignificantDigits : 'tags this -> float option) =
          fun (x2388 : 'tags this) ->
            Ojs.option_of_js Ojs.float_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2388)
                 "maximumSignificantDigits")
        let (set_maximumSignificantDigits : 'tags this -> float -> unit) =
          fun (x2391 : 'tags this) ->
            fun (x2392 : float) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2391)
                "maximumSignificantDigits" (Ojs.float_to_js x2392)
        let (create :
          locale:string ->
            pluralCategories:LDMLPluralRule.t list ->
              type_:PluralRuleType.t ->
                minimumIntegerDigits:float ->
                  minimumFractionDigits:float ->
                    maximumFractionDigits:float ->
                      ?minimumSignificantDigits:float ->
                        ?maximumSignificantDigits:float -> unit -> t)
          =
          fun ~locale:(x2394 : string) ->
            fun ~pluralCategories:(x2395 : LDMLPluralRule.t list) ->
              fun ~type_:(x2396 : PluralRuleType.t) ->
                fun ~minimumIntegerDigits:(x2397 : float) ->
                  fun ~minimumFractionDigits:(x2398 : float) ->
                    fun ~maximumFractionDigits:(x2399 : float) ->
                      fun ?minimumSignificantDigits:(x2400 : float option) ->
                        fun ?maximumSignificantDigits:(x2401 : float option)
                          ->
                          fun () ->
                            let x2402 = Ojs.empty_obj () in
                            Ojs.set_prop_ascii x2402 "locale"
                              (Ojs.string_to_js x2394);
                            Ojs.set_prop_ascii x2402 "pluralCategories"
                              (Ojs.list_to_js LDMLPluralRule.t_to_js x2395);
                            Ojs.set_prop_ascii x2402 "type"
                              (PluralRuleType.t_to_js x2396);
                            Ojs.set_prop_ascii x2402 "minimumIntegerDigits"
                              (Ojs.float_to_js x2397);
                            Ojs.set_prop_ascii x2402 "minimumFractionDigits"
                              (Ojs.float_to_js x2398);
                            Ojs.set_prop_ascii x2402 "maximumFractionDigits"
                              (Ojs.float_to_js x2399);
                            (match x2400 with
                             | Some x2404 ->
                                 Ojs.set_prop_ascii x2402
                                   "minimumSignificantDigits"
                                   (Ojs.float_to_js x2404)
                             | None -> ());
                            (match x2401 with
                             | Some x2403 ->
                                 Ojs.set_prop_ascii x2402
                                   "maximumSignificantDigits"
                                   (Ojs.float_to_js x2403)
                             | None -> ());
                            t_of_js x2402
        let cast_from = Obj.magic
      end
    module PluralRulesOptions =
      struct
        type t = [ `Intl_PluralRulesOptions ] intf
        let rec t_of_js : Ojs.t -> t = Obj.magic
        and t_to_js : t -> Ojs.t = Obj.magic
        type tags = [ `Intl_PluralRulesOptions ]
        type 'tags this =
          'tags intf constraint 'tags = [> `Intl_PluralRulesOptions ]
        let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
          =
          fun (type __tags) ->
            fun (__tags_of_js : Ojs.t -> __tags) ->
              fun (x2408 : Ojs.t) -> intf_of_js __tags_of_js x2408
        and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
          fun (type __tags) ->
            fun (__tags_to_js : __tags -> Ojs.t) ->
              fun (x2406 : __tags intf) -> intf_to_js __tags_to_js x2406
        let (get_localeMatcher :
          'tags this -> [ `L_s26_best_fit  | `L_s81_lookup ] option) =
          fun (x2410 : 'tags this) ->
            Ojs.option_of_js
              (fun (x2412 : Ojs.t) ->
                 let x2413 = x2412 in
                 match Ojs.string_of_js x2413 with
                 | "best fit" -> `L_s26_best_fit
                 | "lookup" -> `L_s81_lookup
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2410)
                 "localeMatcher")
        let (set_localeMatcher :
          'tags this ->
            [ `Undefined of undefined  | `U1 of [ `L_s81_lookup ] 
            | `U2 of [ `L_s26_best_fit ] ] -> unit)
          =
          fun (x2414 : 'tags this) ->
            fun
              (x2415 :
                [ `Undefined of undefined  | `U1 of [ `L_s81_lookup ] 
                | `U2 of [ `L_s26_best_fit ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2414) "localeMatcher"
                (match x2415 with
                 | `Undefined x2416 -> undefined_to_js x2416
                 | `U1 x2417 ->
                     (match x2417 with
                      | `L_s81_lookup -> Ojs.string_to_js "lookup")
                 | `U2 x2418 ->
                     (match x2418 with
                      | `L_s26_best_fit -> Ojs.string_to_js "best fit"))
        let (get_type : 'tags this -> PluralRuleType.t option) =
          fun (x2420 : 'tags this) ->
            Ojs.option_of_js PluralRuleType.t_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2420) "type")
        let (set_type :
          'tags this ->
            [ `Undefined of undefined  | `U1 of PluralRuleType.t ] -> unit)
          =
          fun (x2423 : 'tags this) ->
            fun
              (x2424 :
                [ `Undefined of undefined  | `U1 of PluralRuleType.t ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2423) "type"
                (match x2424 with
                 | `Undefined x2425 -> undefined_to_js x2425
                 | `U1 x2426 -> PluralRuleType.t_to_js x2426)
        let (get_minimumIntegerDigits : 'tags this -> float option) =
          fun (x2428 : 'tags this) ->
            Ojs.option_of_js Ojs.float_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2428)
                 "minimumIntegerDigits")
        let (set_minimumIntegerDigits :
          'tags this -> [ `Undefined of undefined  | `U1 of float ] -> unit)
          =
          fun (x2431 : 'tags this) ->
            fun (x2432 : [ `Undefined of undefined  | `U1 of float ]) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2431)
                "minimumIntegerDigits"
                (match x2432 with
                 | `Undefined x2433 -> undefined_to_js x2433
                 | `U1 x2434 -> Ojs.float_to_js x2434)
        let (get_minimumFractionDigits : 'tags this -> float option) =
          fun (x2436 : 'tags this) ->
            Ojs.option_of_js Ojs.float_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2436)
                 "minimumFractionDigits")
        let (set_minimumFractionDigits :
          'tags this -> [ `Undefined of undefined  | `U1 of float ] -> unit)
          =
          fun (x2439 : 'tags this) ->
            fun (x2440 : [ `Undefined of undefined  | `U1 of float ]) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2439)
                "minimumFractionDigits"
                (match x2440 with
                 | `Undefined x2441 -> undefined_to_js x2441
                 | `U1 x2442 -> Ojs.float_to_js x2442)
        let (get_maximumFractionDigits : 'tags this -> float option) =
          fun (x2444 : 'tags this) ->
            Ojs.option_of_js Ojs.float_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2444)
                 "maximumFractionDigits")
        let (set_maximumFractionDigits :
          'tags this -> [ `Undefined of undefined  | `U1 of float ] -> unit)
          =
          fun (x2447 : 'tags this) ->
            fun (x2448 : [ `Undefined of undefined  | `U1 of float ]) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2447)
                "maximumFractionDigits"
                (match x2448 with
                 | `Undefined x2449 -> undefined_to_js x2449
                 | `U1 x2450 -> Ojs.float_to_js x2450)
        let (get_minimumSignificantDigits : 'tags this -> float option) =
          fun (x2452 : 'tags this) ->
            Ojs.option_of_js Ojs.float_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2452)
                 "minimumSignificantDigits")
        let (set_minimumSignificantDigits :
          'tags this -> [ `Undefined of undefined  | `U1 of float ] -> unit)
          =
          fun (x2455 : 'tags this) ->
            fun (x2456 : [ `Undefined of undefined  | `U1 of float ]) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2455)
                "minimumSignificantDigits"
                (match x2456 with
                 | `Undefined x2457 -> undefined_to_js x2457
                 | `U1 x2458 -> Ojs.float_to_js x2458)
        let (get_maximumSignificantDigits : 'tags this -> float option) =
          fun (x2460 : 'tags this) ->
            Ojs.option_of_js Ojs.float_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2460)
                 "maximumSignificantDigits")
        let (set_maximumSignificantDigits :
          'tags this -> [ `Undefined of undefined  | `U1 of float ] -> unit)
          =
          fun (x2463 : 'tags this) ->
            fun (x2464 : [ `Undefined of undefined  | `U1 of float ]) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2463)
                "maximumSignificantDigits"
                (match x2464 with
                 | `Undefined x2465 -> undefined_to_js x2465
                 | `U1 x2466 -> Ojs.float_to_js x2466)
        let (create :
          ?localeMatcher:[ `L_s26_best_fit  | `L_s81_lookup ] ->
            ?type_:PluralRuleType.t ->
              ?minimumIntegerDigits:float ->
                ?minimumFractionDigits:float ->
                  ?maximumFractionDigits:float ->
                    ?minimumSignificantDigits:float ->
                      ?maximumSignificantDigits:float -> unit -> t)
          =
          fun
            ?localeMatcher:(x2468 :
                             [ `L_s26_best_fit  | `L_s81_lookup ] option)
            ->
            fun ?type_:(x2469 : PluralRuleType.t option) ->
              fun ?minimumIntegerDigits:(x2470 : float option) ->
                fun ?minimumFractionDigits:(x2471 : float option) ->
                  fun ?maximumFractionDigits:(x2472 : float option) ->
                    fun ?minimumSignificantDigits:(x2473 : float option) ->
                      fun ?maximumSignificantDigits:(x2474 : float option) ->
                        fun () ->
                          let x2475 = Ojs.empty_obj () in
                          (match x2468 with
                           | Some x2482 ->
                               Ojs.set_prop_ascii x2475 "localeMatcher"
                                 (match x2482 with
                                  | `L_s26_best_fit ->
                                      Ojs.string_to_js "best fit"
                                  | `L_s81_lookup ->
                                      Ojs.string_to_js "lookup")
                           | None -> ());
                          (match x2469 with
                           | Some x2481 ->
                               Ojs.set_prop_ascii x2475 "type"
                                 (PluralRuleType.t_to_js x2481)
                           | None -> ());
                          (match x2470 with
                           | Some x2480 ->
                               Ojs.set_prop_ascii x2475
                                 "minimumIntegerDigits"
                                 (Ojs.float_to_js x2480)
                           | None -> ());
                          (match x2471 with
                           | Some x2479 ->
                               Ojs.set_prop_ascii x2475
                                 "minimumFractionDigits"
                                 (Ojs.float_to_js x2479)
                           | None -> ());
                          (match x2472 with
                           | Some x2478 ->
                               Ojs.set_prop_ascii x2475
                                 "maximumFractionDigits"
                                 (Ojs.float_to_js x2478)
                           | None -> ());
                          (match x2473 with
                           | Some x2477 ->
                               Ojs.set_prop_ascii x2475
                                 "minimumSignificantDigits"
                                 (Ojs.float_to_js x2477)
                           | None -> ());
                          (match x2474 with
                           | Some x2476 ->
                               Ojs.set_prop_ascii x2475
                                 "maximumSignificantDigits"
                                 (Ojs.float_to_js x2476)
                           | None -> ());
                          t_of_js x2475
        let cast_from = Obj.magic
      end
    module PluralRules =
      struct
        module AnonymousInterface6 =
          struct
            type t = Ojs.t
            let rec t_of_js : Ojs.t -> t = fun (x2484 : Ojs.t) -> x2484
            and t_to_js : t -> Ojs.t = fun (x2483 : Ojs.t) -> x2483
            let (get_localeMatcher :
              t -> [ `L_s26_best_fit  | `L_s81_lookup ] option) =
              fun (x2485 : t) ->
                Ojs.option_of_js
                  (fun (x2486 : Ojs.t) ->
                     let x2487 = x2486 in
                     match Ojs.string_of_js x2487 with
                     | "best fit" -> `L_s26_best_fit
                     | "lookup" -> `L_s81_lookup
                     | _ -> assert false)
                  (Ojs.get_prop_ascii (t_to_js x2485) "localeMatcher")
            let (set_localeMatcher :
              t ->
                [ `U1 of [ `L_s81_lookup ]  | `U2 of [ `L_s26_best_fit ] ] ->
                  unit)
              =
              fun (x2488 : t) ->
                fun
                  (x2489 :
                    [ `U1 of [ `L_s81_lookup ] 
                    | `U2 of [ `L_s26_best_fit ] ])
                  ->
                  Ojs.set_prop_ascii (t_to_js x2488) "localeMatcher"
                    (match x2489 with
                     | `U1 x2490 ->
                         (match x2490 with
                          | `L_s81_lookup -> Ojs.string_to_js "lookup")
                     | `U2 x2491 ->
                         (match x2491 with
                          | `L_s26_best_fit -> Ojs.string_to_js "best fit"))
            let (create :
              ?localeMatcher:[ `L_s26_best_fit  | `L_s81_lookup ] ->
                unit -> t)
              =
              fun
                ?localeMatcher:(x2492 :
                                 [ `L_s26_best_fit  | `L_s81_lookup ] option)
                ->
                fun () ->
                  let x2493 = Ojs.empty_obj () in
                  (match x2492 with
                   | Some x2494 ->
                       Ojs.set_prop_ascii x2493 "localeMatcher"
                         (match x2494 with
                          | `L_s26_best_fit -> Ojs.string_to_js "best fit"
                          | `L_s81_lookup -> Ojs.string_to_js "lookup")
                   | None -> ());
                  t_of_js x2493
          end
        type t = [ `Intl_PluralRules ] intf
        let rec t_of_js : Ojs.t -> t = Obj.magic
        and t_to_js : t -> Ojs.t = Obj.magic
        type tags = [ `Intl_PluralRules ]
        type 'tags this =
          'tags intf constraint 'tags = [> `Intl_PluralRules ]
        let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
          =
          fun (type __tags) ->
            fun (__tags_of_js : Ojs.t -> __tags) ->
              fun (x2497 : Ojs.t) -> intf_of_js __tags_of_js x2497
        and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
          fun (type __tags) ->
            fun (__tags_to_js : __tags -> Ojs.t) ->
              fun (x2495 : __tags intf) -> intf_to_js __tags_to_js x2495
        let (resolvedOptions : 'tags this -> ResolvedPluralRulesOptions.t) =
          fun (x2499 : 'tags this) ->
            ResolvedPluralRulesOptions.t_of_js
              (Ojs.call (this_to_js Obj.magic x2499) "resolvedOptions" [||])
        let (select : 'tags this -> n:float -> LDMLPluralRule.t) =
          fun (x2502 : 'tags this) ->
            fun ~n:(x2501 : float) ->
              LDMLPluralRule.t_of_js
                (Ojs.call (this_to_js Obj.magic x2502) "select"
                   [|(Ojs.float_to_js x2501)|])
        let cast_from = Obj.magic
        let (create :
          ?locales:[ `U1 of string  | `U2 of string list ] ->
            ?options:PluralRulesOptions.t -> unit -> t)
          =
          fun
            ?locales:(x2504 : [ `U1 of string  | `U2 of string list ] option)
            ->
            fun ?options:(x2505 : PluralRulesOptions.t option) ->
              fun () ->
                t_of_js
                  (Ojs.new_obj_arr
                     (Ojs.get_prop_ascii
                        (Ojs.get_prop_ascii Ojs.global "Intl") "PluralRules")
                     (let x2506 =
                        Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                          [||] in
                      (match x2504 with
                       | Some x2508 ->
                           ignore
                             (Ojs.call x2506 "push"
                                [|((match x2508 with
                                    | `U1 x2509 -> Ojs.string_to_js x2509
                                    | `U2 x2510 ->
                                        Ojs.list_to_js Ojs.string_to_js x2510))|])
                       | None -> ());
                      (match x2505 with
                       | Some x2507 ->
                           ignore
                             (Ojs.call x2506 "push"
                                [|(PluralRulesOptions.t_to_js x2507)|])
                       | None -> ());
                      x2506))
        let (invoke :
          ?locales:[ `U1 of string  | `U2 of string list ] ->
            ?options:PluralRulesOptions.t -> unit -> t)
          =
          fun
            ?locales:(x2512 : [ `U1 of string  | `U2 of string list ] option)
            ->
            fun ?options:(x2513 : PluralRulesOptions.t option) ->
              fun () ->
                t_of_js
                  (Ojs.call
                     (Ojs.get_prop_ascii
                        (Ojs.get_prop_ascii Ojs.global "Intl") "PluralRules")
                     "apply"
                     [|Ojs.null;((let x2514 =
                                    Ojs.new_obj
                                      (Ojs.get_prop_ascii Ojs.global "Array")
                                      [||] in
                                  (match x2512 with
                                   | Some x2516 ->
                                       ignore
                                         (Ojs.call x2514 "push"
                                            [|((match x2516 with
                                                | `U1 x2517 ->
                                                    Ojs.string_to_js x2517
                                                | `U2 x2518 ->
                                                    Ojs.list_to_js
                                                      Ojs.string_to_js x2518))|])
                                   | None -> ());
                                  (match x2513 with
                                   | Some x2515 ->
                                       ignore
                                         (Ojs.call x2514 "push"
                                            [|(PluralRulesOptions.t_to_js
                                                 x2515)|])
                                   | None -> ());
                                  x2514))|])
        let (supportedLocalesOf :
          locales:[ `U1 of string  | `U2 of string list ] ->
            ?options:AnonymousInterface6.t -> unit -> string list)
          =
          fun ~locales:(x2520 : [ `U1 of string  | `U2 of string list ]) ->
            fun ?options:(x2521 : AnonymousInterface6.t option) ->
              fun () ->
                Ojs.list_of_js Ojs.string_of_js
                  (let x2527 =
                     Ojs.get_prop_ascii
                       (Ojs.get_prop_ascii Ojs.global "Intl") "PluralRules" in
                   Ojs.call (Ojs.get_prop_ascii x2527 "supportedLocalesOf")
                     "apply"
                     [|x2527;((let x2522 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x2522 "push"
                                    [|((match x2520 with
                                        | `U1 x2524 -> Ojs.string_to_js x2524
                                        | `U2 x2525 ->
                                            Ojs.list_to_js Ojs.string_to_js
                                              x2525))|]);
                               (match x2521 with
                                | Some x2523 ->
                                    ignore
                                      (Ojs.call x2522 "push"
                                         [|(AnonymousInterface6.t_to_js x2523)|])
                                | None -> ());
                               x2522))|])
      end
    module ResolvedNumberFormatOptions =
      struct
        type t = [ `Intl_ResolvedNumberFormatOptions ] intf
        let rec t_of_js : Ojs.t -> t = Obj.magic
        and t_to_js : t -> Ojs.t = Obj.magic
        type tags = [ `Intl_ResolvedNumberFormatOptions ]
        type 'tags this =
          'tags intf constraint 'tags =
                      [> `Intl_ResolvedNumberFormatOptions ]
        let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
          =
          fun (type __tags) ->
            fun (__tags_of_js : Ojs.t -> __tags) ->
              fun (x2531 : Ojs.t) -> intf_of_js __tags_of_js x2531
        and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
          fun (type __tags) ->
            fun (__tags_to_js : __tags -> Ojs.t) ->
              fun (x2529 : __tags intf) -> intf_to_js __tags_to_js x2529
        let (get_compactDisplay :
          'tags this -> [ `L_s122_short  | `L_s78_long ] option) =
          fun (x2533 : 'tags this) ->
            Ojs.option_of_js
              (fun (x2535 : Ojs.t) ->
                 let x2536 = x2535 in
                 match Ojs.string_of_js x2536 with
                 | "short" -> `L_s122_short
                 | "long" -> `L_s78_long
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2533)
                 "compactDisplay")
        let (set_compactDisplay :
          'tags this ->
            [ `U1 of [ `L_s122_short ]  | `U2 of [ `L_s78_long ] ] -> unit)
          =
          fun (x2537 : 'tags this) ->
            fun
              (x2538 :
                [ `U1 of [ `L_s122_short ]  | `U2 of [ `L_s78_long ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2537)
                "compactDisplay"
                (match x2538 with
                 | `U1 x2539 ->
                     (match x2539 with
                      | `L_s122_short -> Ojs.string_to_js "short")
                 | `U2 x2540 ->
                     (match x2540 with
                      | `L_s78_long -> Ojs.string_to_js "long"))
        let (get_notation :
          'tags this ->
            [ `L_s114_scientific  | `L_s126_standard  | `L_s33_compact 
            | `L_s51_engineering ] option)
          =
          fun (x2542 : 'tags this) ->
            Ojs.option_of_js
              (fun (x2544 : Ojs.t) ->
                 let x2545 = x2544 in
                 match Ojs.string_of_js x2545 with
                 | "scientific" -> `L_s114_scientific
                 | "standard" -> `L_s126_standard
                 | "compact" -> `L_s33_compact
                 | "engineering" -> `L_s51_engineering
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2542) "notation")
        let (set_notation :
          'tags this ->
            [ `U1 of [ `L_s126_standard ]  | `U2 of [ `L_s114_scientific ] 
            | `U3 of [ `L_s51_engineering ]  | `U4 of [ `L_s33_compact ] ] ->
              unit)
          =
          fun (x2546 : 'tags this) ->
            fun
              (x2547 :
                [ `U1 of [ `L_s126_standard ] 
                | `U2 of [ `L_s114_scientific ] 
                | `U3 of [ `L_s51_engineering ] 
                | `U4 of [ `L_s33_compact ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2546) "notation"
                (match x2547 with
                 | `U1 x2548 ->
                     (match x2548 with
                      | `L_s126_standard -> Ojs.string_to_js "standard")
                 | `U2 x2549 ->
                     (match x2549 with
                      | `L_s114_scientific -> Ojs.string_to_js "scientific")
                 | `U3 x2550 ->
                     (match x2550 with
                      | `L_s51_engineering -> Ojs.string_to_js "engineering")
                 | `U4 x2551 ->
                     (match x2551 with
                      | `L_s33_compact -> Ojs.string_to_js "compact"))
        let (get_signDisplay :
          'tags this ->
            [ `L_s22_always  | `L_s23_auto  | `L_s54_exceptZero 
            | `L_s93_never ] option)
          =
          fun (x2553 : 'tags this) ->
            Ojs.option_of_js
              (fun (x2555 : Ojs.t) ->
                 let x2556 = x2555 in
                 match Ojs.string_of_js x2556 with
                 | "always" -> `L_s22_always
                 | "auto" -> `L_s23_auto
                 | "exceptZero" -> `L_s54_exceptZero
                 | "never" -> `L_s93_never
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2553) "signDisplay")
        let (set_signDisplay :
          'tags this ->
            [ `U1 of [ `L_s23_auto ]  | `U2 of [ `L_s93_never ] 
            | `U3 of [ `L_s22_always ]  | `U4 of [ `L_s54_exceptZero ] ] ->
              unit)
          =
          fun (x2557 : 'tags this) ->
            fun
              (x2558 :
                [ `U1 of [ `L_s23_auto ]  | `U2 of [ `L_s93_never ] 
                | `U3 of [ `L_s22_always ]  | `U4 of [ `L_s54_exceptZero ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2557) "signDisplay"
                (match x2558 with
                 | `U1 x2559 ->
                     (match x2559 with
                      | `L_s23_auto -> Ojs.string_to_js "auto")
                 | `U2 x2560 ->
                     (match x2560 with
                      | `L_s93_never -> Ojs.string_to_js "never")
                 | `U3 x2561 ->
                     (match x2561 with
                      | `L_s22_always -> Ojs.string_to_js "always")
                 | `U4 x2562 ->
                     (match x2562 with
                      | `L_s54_exceptZero -> Ojs.string_to_js "exceptZero"))
        let (get_unit : 'tags this -> string option) =
          fun (x2564 : 'tags this) ->
            Ojs.option_of_js Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2564) "unit")
        let (set_unit : 'tags this -> string -> unit) =
          fun (x2567 : 'tags this) ->
            fun (x2568 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2567) "unit"
                (Ojs.string_to_js x2568)
        let (get_unitDisplay :
          'tags this ->
            [ `L_s122_short  | `L_s78_long  | `L_s92_narrow ] option)
          =
          fun (x2570 : 'tags this) ->
            Ojs.option_of_js
              (fun (x2572 : Ojs.t) ->
                 let x2573 = x2572 in
                 match Ojs.string_of_js x2573 with
                 | "short" -> `L_s122_short
                 | "long" -> `L_s78_long
                 | "narrow" -> `L_s92_narrow
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2570) "unitDisplay")
        let (set_unitDisplay :
          'tags this ->
            [ `U1 of [ `L_s122_short ]  | `U2 of [ `L_s78_long ] 
            | `U3 of [ `L_s92_narrow ] ] -> unit)
          =
          fun (x2574 : 'tags this) ->
            fun
              (x2575 :
                [ `U1 of [ `L_s122_short ]  | `U2 of [ `L_s78_long ] 
                | `U3 of [ `L_s92_narrow ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2574) "unitDisplay"
                (match x2575 with
                 | `U1 x2576 ->
                     (match x2576 with
                      | `L_s122_short -> Ojs.string_to_js "short")
                 | `U2 x2577 ->
                     (match x2577 with
                      | `L_s78_long -> Ojs.string_to_js "long")
                 | `U3 x2578 ->
                     (match x2578 with
                      | `L_s92_narrow -> Ojs.string_to_js "narrow"))
        let (get_currencyDisplay : 'tags this -> string option) =
          fun (x2580 : 'tags this) ->
            Ojs.option_of_js Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2580)
                 "currencyDisplay")
        let (set_currencyDisplay : 'tags this -> string -> unit) =
          fun (x2583 : 'tags this) ->
            fun (x2584 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2583)
                "currencyDisplay" (Ojs.string_to_js x2584)
        let (get_currencySign : 'tags this -> string option) =
          fun (x2586 : 'tags this) ->
            Ojs.option_of_js Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2586) "currencySign")
        let (set_currencySign : 'tags this -> string -> unit) =
          fun (x2589 : 'tags this) ->
            fun (x2590 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2589) "currencySign"
                (Ojs.string_to_js x2590)
        let (get_locale : 'tags this -> string) =
          fun (x2592 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2592) "locale")
        let (set_locale : 'tags this -> string -> unit) =
          fun (x2594 : 'tags this) ->
            fun (x2595 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2594) "locale"
                (Ojs.string_to_js x2595)
        let (get_numberingSystem : 'tags this -> string) =
          fun (x2597 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2597)
                 "numberingSystem")
        let (set_numberingSystem : 'tags this -> string -> unit) =
          fun (x2599 : 'tags this) ->
            fun (x2600 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2599)
                "numberingSystem" (Ojs.string_to_js x2600)
        let (get_style : 'tags this -> string) =
          fun (x2602 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2602) "style")
        let (set_style : 'tags this -> string -> unit) =
          fun (x2604 : 'tags this) ->
            fun (x2605 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2604) "style"
                (Ojs.string_to_js x2605)
        let (get_currency : 'tags this -> string option) =
          fun (x2607 : 'tags this) ->
            Ojs.option_of_js Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2607) "currency")
        let (set_currency : 'tags this -> string -> unit) =
          fun (x2610 : 'tags this) ->
            fun (x2611 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2610) "currency"
                (Ojs.string_to_js x2611)
        let (get_minimumIntegerDigits : 'tags this -> float) =
          fun (x2613 : 'tags this) ->
            Ojs.float_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2613)
                 "minimumIntegerDigits")
        let (set_minimumIntegerDigits : 'tags this -> float -> unit) =
          fun (x2615 : 'tags this) ->
            fun (x2616 : float) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2615)
                "minimumIntegerDigits" (Ojs.float_to_js x2616)
        let (get_minimumFractionDigits : 'tags this -> float) =
          fun (x2618 : 'tags this) ->
            Ojs.float_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2618)
                 "minimumFractionDigits")
        let (set_minimumFractionDigits : 'tags this -> float -> unit) =
          fun (x2620 : 'tags this) ->
            fun (x2621 : float) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2620)
                "minimumFractionDigits" (Ojs.float_to_js x2621)
        let (get_maximumFractionDigits : 'tags this -> float) =
          fun (x2623 : 'tags this) ->
            Ojs.float_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2623)
                 "maximumFractionDigits")
        let (set_maximumFractionDigits : 'tags this -> float -> unit) =
          fun (x2625 : 'tags this) ->
            fun (x2626 : float) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2625)
                "maximumFractionDigits" (Ojs.float_to_js x2626)
        let (get_minimumSignificantDigits : 'tags this -> float option) =
          fun (x2628 : 'tags this) ->
            Ojs.option_of_js Ojs.float_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2628)
                 "minimumSignificantDigits")
        let (set_minimumSignificantDigits : 'tags this -> float -> unit) =
          fun (x2631 : 'tags this) ->
            fun (x2632 : float) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2631)
                "minimumSignificantDigits" (Ojs.float_to_js x2632)
        let (get_maximumSignificantDigits : 'tags this -> float option) =
          fun (x2634 : 'tags this) ->
            Ojs.option_of_js Ojs.float_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2634)
                 "maximumSignificantDigits")
        let (set_maximumSignificantDigits : 'tags this -> float -> unit) =
          fun (x2637 : 'tags this) ->
            fun (x2638 : float) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2637)
                "maximumSignificantDigits" (Ojs.float_to_js x2638)
        let (get_useGrouping : 'tags this -> bool) =
          fun (x2640 : 'tags this) ->
            Ojs.bool_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2640) "useGrouping")
        let (set_useGrouping : 'tags this -> bool -> unit) =
          fun (x2642 : 'tags this) ->
            fun (x2643 : bool) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2642) "useGrouping"
                (Ojs.bool_to_js x2643)
        let (create :
          ?compactDisplay:[ `L_s122_short  | `L_s78_long ] ->
            ?notation:[ `L_s114_scientific  | `L_s126_standard 
                      | `L_s33_compact  | `L_s51_engineering ]
              ->
              ?signDisplay:[ `L_s22_always  | `L_s23_auto 
                           | `L_s54_exceptZero  | `L_s93_never ]
                ->
                ?unit:string ->
                  ?unitDisplay:[ `L_s122_short  | `L_s78_long 
                               | `L_s92_narrow ]
                    ->
                    ?currencyDisplay:string ->
                      ?currencySign:string ->
                        locale:string ->
                          numberingSystem:string ->
                            style:string ->
                              ?currency:string ->
                                minimumIntegerDigits:float ->
                                  minimumFractionDigits:float ->
                                    maximumFractionDigits:float ->
                                      ?minimumSignificantDigits:float ->
                                        ?maximumSignificantDigits:float ->
                                          useGrouping:bool -> unit -> t)
          =
          fun
            ?compactDisplay:(x2645 : [ `L_s122_short  | `L_s78_long ] option)
            ->
            fun
              ?notation:(x2646 :
                          [ `L_s114_scientific  | `L_s126_standard 
                          | `L_s33_compact  | `L_s51_engineering ] option)
              ->
              fun
                ?signDisplay:(x2647 :
                               [ `L_s22_always  | `L_s23_auto 
                               | `L_s54_exceptZero  | `L_s93_never ] option)
                ->
                fun ?unit:(x2648 : string option) ->
                  fun
                    ?unitDisplay:(x2649 :
                                   [ `L_s122_short  | `L_s78_long 
                                   | `L_s92_narrow ] option)
                    ->
                    fun ?currencyDisplay:(x2650 : string option) ->
                      fun ?currencySign:(x2651 : string option) ->
                        fun ~locale:(x2652 : string) ->
                          fun ~numberingSystem:(x2653 : string) ->
                            fun ~style:(x2654 : string) ->
                              fun ?currency:(x2655 : string option) ->
                                fun ~minimumIntegerDigits:(x2656 : float) ->
                                  fun ~minimumFractionDigits:(x2657 : float)
                                    ->
                                    fun
                                      ~maximumFractionDigits:(x2658 : float)
                                      ->
                                      fun
                                        ?minimumSignificantDigits:(x2659 :
                                                                    float
                                                                    option)
                                        ->
                                        fun
                                          ?maximumSignificantDigits:(x2660 :
                                                                    float
                                                                    option)
                                          ->
                                          fun ~useGrouping:(x2661 : bool) ->
                                            fun () ->
                                              let x2662 = Ojs.empty_obj () in
                                              (match x2645 with
                                               | Some x2672 ->
                                                   Ojs.set_prop_ascii x2662
                                                     "compactDisplay"
                                                     (match x2672 with
                                                      | `L_s122_short ->
                                                          Ojs.string_to_js
                                                            "short"
                                                      | `L_s78_long ->
                                                          Ojs.string_to_js
                                                            "long")
                                               | None -> ());
                                              (match x2646 with
                                               | Some x2671 ->
                                                   Ojs.set_prop_ascii x2662
                                                     "notation"
                                                     (match x2671 with
                                                      | `L_s114_scientific ->
                                                          Ojs.string_to_js
                                                            "scientific"
                                                      | `L_s126_standard ->
                                                          Ojs.string_to_js
                                                            "standard"
                                                      | `L_s33_compact ->
                                                          Ojs.string_to_js
                                                            "compact"
                                                      | `L_s51_engineering ->
                                                          Ojs.string_to_js
                                                            "engineering")
                                               | None -> ());
                                              (match x2647 with
                                               | Some x2670 ->
                                                   Ojs.set_prop_ascii x2662
                                                     "signDisplay"
                                                     (match x2670 with
                                                      | `L_s22_always ->
                                                          Ojs.string_to_js
                                                            "always"
                                                      | `L_s23_auto ->
                                                          Ojs.string_to_js
                                                            "auto"
                                                      | `L_s54_exceptZero ->
                                                          Ojs.string_to_js
                                                            "exceptZero"
                                                      | `L_s93_never ->
                                                          Ojs.string_to_js
                                                            "never")
                                               | None -> ());
                                              (match x2648 with
                                               | Some x2669 ->
                                                   Ojs.set_prop_ascii x2662
                                                     "unit"
                                                     (Ojs.string_to_js x2669)
                                               | None -> ());
                                              (match x2649 with
                                               | Some x2668 ->
                                                   Ojs.set_prop_ascii x2662
                                                     "unitDisplay"
                                                     (match x2668 with
                                                      | `L_s122_short ->
                                                          Ojs.string_to_js
                                                            "short"
                                                      | `L_s78_long ->
                                                          Ojs.string_to_js
                                                            "long"
                                                      | `L_s92_narrow ->
                                                          Ojs.string_to_js
                                                            "narrow")
                                               | None -> ());
                                              (match x2650 with
                                               | Some x2667 ->
                                                   Ojs.set_prop_ascii x2662
                                                     "currencyDisplay"
                                                     (Ojs.string_to_js x2667)
                                               | None -> ());
                                              (match x2651 with
                                               | Some x2666 ->
                                                   Ojs.set_prop_ascii x2662
                                                     "currencySign"
                                                     (Ojs.string_to_js x2666)
                                               | None -> ());
                                              Ojs.set_prop_ascii x2662
                                                "locale"
                                                (Ojs.string_to_js x2652);
                                              Ojs.set_prop_ascii x2662
                                                "numberingSystem"
                                                (Ojs.string_to_js x2653);
                                              Ojs.set_prop_ascii x2662
                                                "style"
                                                (Ojs.string_to_js x2654);
                                              (match x2655 with
                                               | Some x2665 ->
                                                   Ojs.set_prop_ascii x2662
                                                     "currency"
                                                     (Ojs.string_to_js x2665)
                                               | None -> ());
                                              Ojs.set_prop_ascii x2662
                                                "minimumIntegerDigits"
                                                (Ojs.float_to_js x2656);
                                              Ojs.set_prop_ascii x2662
                                                "minimumFractionDigits"
                                                (Ojs.float_to_js x2657);
                                              Ojs.set_prop_ascii x2662
                                                "maximumFractionDigits"
                                                (Ojs.float_to_js x2658);
                                              (match x2659 with
                                               | Some x2664 ->
                                                   Ojs.set_prop_ascii x2662
                                                     "minimumSignificantDigits"
                                                     (Ojs.float_to_js x2664)
                                               | None -> ());
                                              (match x2660 with
                                               | Some x2663 ->
                                                   Ojs.set_prop_ascii x2662
                                                     "maximumSignificantDigits"
                                                     (Ojs.float_to_js x2663)
                                               | None -> ());
                                              Ojs.set_prop_ascii x2662
                                                "useGrouping"
                                                (Ojs.bool_to_js x2661);
                                              t_of_js x2662
        let cast_from = Obj.magic
      end
    module NumberFormatPart =
      struct
        type t = [ `Intl_NumberFormatPart ] intf
        let rec t_of_js : Ojs.t -> t = Obj.magic
        and t_to_js : t -> Ojs.t = Obj.magic
        type tags = [ `Intl_NumberFormatPart ]
        type 'tags this =
          'tags intf constraint 'tags = [> `Intl_NumberFormatPart ]
        let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
          =
          fun (type __tags) ->
            fun (__tags_of_js : Ojs.t -> __tags) ->
              fun (x2675 : Ojs.t) -> intf_of_js __tags_of_js x2675
        and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
          fun (type __tags) ->
            fun (__tags_to_js : __tags -> Ojs.t) ->
              fun (x2673 : __tags intf) -> intf_to_js __tags_to_js x2673
        let (get_type : 'tags this -> NumberFormatPartTypes.t) =
          fun (x2677 : 'tags this) ->
            NumberFormatPartTypes.t_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2677) "type")
        let (set_type : 'tags this -> NumberFormatPartTypes.t -> unit) =
          fun (x2679 : 'tags this) ->
            fun (x2680 : NumberFormatPartTypes.t) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2679) "type"
                (NumberFormatPartTypes.t_to_js x2680)
        let (get_value : 'tags this -> string) =
          fun (x2682 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2682) "value")
        let (set_value : 'tags this -> string -> unit) =
          fun (x2684 : 'tags this) ->
            fun (x2685 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2684) "value"
                (Ojs.string_to_js x2685)
        let (create :
          type_:NumberFormatPartTypes.t -> value:string -> unit -> t) =
          fun ~type_:(x2687 : NumberFormatPartTypes.t) ->
            fun ~value:(x2688 : string) ->
              fun () ->
                let x2689 = Ojs.empty_obj () in
                Ojs.set_prop_ascii x2689 "type"
                  (NumberFormatPartTypes.t_to_js x2687);
                Ojs.set_prop_ascii x2689 "value" (Ojs.string_to_js x2688);
                t_of_js x2689
        let cast_from = Obj.magic
      end
    module NumberRangeFormatPart =
      struct
        type t =
          [ `Intl_NumberFormatPart  | `Intl_NumberRangeFormatPart ] intf
        let rec t_of_js : Ojs.t -> t = Obj.magic
        and t_to_js : t -> Ojs.t = Obj.magic
        type tags = [ `Intl_NumberFormatPart  | `Intl_NumberRangeFormatPart ]
        type 'tags this =
          'tags intf constraint 'tags = [> `Intl_NumberRangeFormatPart ]
        let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
          =
          fun (type __tags) ->
            fun (__tags_of_js : Ojs.t -> __tags) ->
              fun (x2692 : Ojs.t) -> intf_of_js __tags_of_js x2692
        and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
          fun (type __tags) ->
            fun (__tags_to_js : __tags -> Ojs.t) ->
              fun (x2690 : __tags intf) -> intf_to_js __tags_to_js x2690
        let (get_source :
          'tags this ->
            [ `L_s121_shared  | `L_s127_startRange  | `L_s50_endRange ])
          =
          fun (x2694 : 'tags this) ->
            let x2696 =
              Ojs.get_prop_ascii (this_to_js Obj.magic x2694) "source" in
            match Ojs.string_of_js x2696 with
            | "shared" -> `L_s121_shared
            | "startRange" -> `L_s127_startRange
            | "endRange" -> `L_s50_endRange
            | _ -> assert false
        let (set_source :
          'tags this ->
            [ `U1 of [ `L_s127_startRange ]  | `U2 of [ `L_s50_endRange ] 
            | `U3 of [ `L_s121_shared ] ] -> unit)
          =
          fun (x2697 : 'tags this) ->
            fun
              (x2698 :
                [ `U1 of [ `L_s127_startRange ] 
                | `U2 of [ `L_s50_endRange ]  | `U3 of [ `L_s121_shared ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2697) "source"
                (match x2698 with
                 | `U1 x2699 ->
                     (match x2699 with
                      | `L_s127_startRange -> Ojs.string_to_js "startRange")
                 | `U2 x2700 ->
                     (match x2700 with
                      | `L_s50_endRange -> Ojs.string_to_js "endRange")
                 | `U3 x2701 ->
                     (match x2701 with
                      | `L_s121_shared -> Ojs.string_to_js "shared"))
        let (create :
          source:[ `L_s121_shared  | `L_s127_startRange  | `L_s50_endRange ]
            -> unit -> t)
          =
          fun
            ~source:(x2703 :
                      [ `L_s121_shared  | `L_s127_startRange 
                      | `L_s50_endRange ])
            ->
            fun () ->
              let x2704 = Ojs.empty_obj () in
              Ojs.set_prop_ascii x2704 "source"
                (match x2703 with
                 | `L_s121_shared -> Ojs.string_to_js "shared"
                 | `L_s127_startRange -> Ojs.string_to_js "startRange"
                 | `L_s50_endRange -> Ojs.string_to_js "endRange");
              t_of_js x2704
        let cast_from = Obj.magic
      end
    module NumberFormatOptions =
      struct
        type t = [ `Intl_NumberFormatOptions ] intf
        let rec t_of_js : Ojs.t -> t = Obj.magic
        and t_to_js : t -> Ojs.t = Obj.magic
        type tags = [ `Intl_NumberFormatOptions ]
        type 'tags this =
          'tags intf constraint 'tags = [> `Intl_NumberFormatOptions ]
        let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
          =
          fun (type __tags) ->
            fun (__tags_of_js : Ojs.t -> __tags) ->
              fun (x2707 : Ojs.t) -> intf_of_js __tags_of_js x2707
        and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
          fun (type __tags) ->
            fun (__tags_to_js : __tags -> Ojs.t) ->
              fun (x2705 : __tags intf) -> intf_to_js __tags_to_js x2705
        let (get_compactDisplay :
          'tags this -> [ `L_s122_short  | `L_s78_long ] option) =
          fun (x2709 : 'tags this) ->
            Ojs.option_of_js
              (fun (x2711 : Ojs.t) ->
                 let x2712 = x2711 in
                 match Ojs.string_of_js x2712 with
                 | "short" -> `L_s122_short
                 | "long" -> `L_s78_long
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2709)
                 "compactDisplay")
        let (set_compactDisplay :
          'tags this ->
            [ `Undefined of undefined  | `U1 of [ `L_s122_short ] 
            | `U2 of [ `L_s78_long ] ] -> unit)
          =
          fun (x2713 : 'tags this) ->
            fun
              (x2714 :
                [ `Undefined of undefined  | `U1 of [ `L_s122_short ] 
                | `U2 of [ `L_s78_long ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2713)
                "compactDisplay"
                (match x2714 with
                 | `Undefined x2715 -> undefined_to_js x2715
                 | `U1 x2716 ->
                     (match x2716 with
                      | `L_s122_short -> Ojs.string_to_js "short")
                 | `U2 x2717 ->
                     (match x2717 with
                      | `L_s78_long -> Ojs.string_to_js "long"))
        let (get_notation :
          'tags this ->
            [ `L_s114_scientific  | `L_s126_standard  | `L_s33_compact 
            | `L_s51_engineering ] option)
          =
          fun (x2719 : 'tags this) ->
            Ojs.option_of_js
              (fun (x2721 : Ojs.t) ->
                 let x2722 = x2721 in
                 match Ojs.string_of_js x2722 with
                 | "scientific" -> `L_s114_scientific
                 | "standard" -> `L_s126_standard
                 | "compact" -> `L_s33_compact
                 | "engineering" -> `L_s51_engineering
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2719) "notation")
        let (set_notation :
          'tags this ->
            [ `Undefined of undefined  | `U1 of [ `L_s126_standard ] 
            | `U2 of [ `L_s114_scientific ]  | `U3 of [ `L_s51_engineering ] 
            | `U4 of [ `L_s33_compact ] ] -> unit)
          =
          fun (x2723 : 'tags this) ->
            fun
              (x2724 :
                [ `Undefined of undefined  | `U1 of [ `L_s126_standard ] 
                | `U2 of [ `L_s114_scientific ] 
                | `U3 of [ `L_s51_engineering ] 
                | `U4 of [ `L_s33_compact ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2723) "notation"
                (match x2724 with
                 | `Undefined x2725 -> undefined_to_js x2725
                 | `U1 x2726 ->
                     (match x2726 with
                      | `L_s126_standard -> Ojs.string_to_js "standard")
                 | `U2 x2727 ->
                     (match x2727 with
                      | `L_s114_scientific -> Ojs.string_to_js "scientific")
                 | `U3 x2728 ->
                     (match x2728 with
                      | `L_s51_engineering -> Ojs.string_to_js "engineering")
                 | `U4 x2729 ->
                     (match x2729 with
                      | `L_s33_compact -> Ojs.string_to_js "compact"))
        let (get_signDisplay :
          'tags this ->
            [ `L_s22_always  | `L_s23_auto  | `L_s54_exceptZero 
            | `L_s93_never ] option)
          =
          fun (x2731 : 'tags this) ->
            Ojs.option_of_js
              (fun (x2733 : Ojs.t) ->
                 let x2734 = x2733 in
                 match Ojs.string_of_js x2734 with
                 | "always" -> `L_s22_always
                 | "auto" -> `L_s23_auto
                 | "exceptZero" -> `L_s54_exceptZero
                 | "never" -> `L_s93_never
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2731) "signDisplay")
        let (set_signDisplay :
          'tags this ->
            [ `Undefined of undefined  | `U1 of [ `L_s23_auto ] 
            | `U2 of [ `L_s93_never ]  | `U3 of [ `L_s22_always ] 
            | `U4 of [ `L_s54_exceptZero ] ] -> unit)
          =
          fun (x2735 : 'tags this) ->
            fun
              (x2736 :
                [ `Undefined of undefined  | `U1 of [ `L_s23_auto ] 
                | `U2 of [ `L_s93_never ]  | `U3 of [ `L_s22_always ] 
                | `U4 of [ `L_s54_exceptZero ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2735) "signDisplay"
                (match x2736 with
                 | `Undefined x2737 -> undefined_to_js x2737
                 | `U1 x2738 ->
                     (match x2738 with
                      | `L_s23_auto -> Ojs.string_to_js "auto")
                 | `U2 x2739 ->
                     (match x2739 with
                      | `L_s93_never -> Ojs.string_to_js "never")
                 | `U3 x2740 ->
                     (match x2740 with
                      | `L_s22_always -> Ojs.string_to_js "always")
                 | `U4 x2741 ->
                     (match x2741 with
                      | `L_s54_exceptZero -> Ojs.string_to_js "exceptZero"))
        let (get_unit : 'tags this -> string option) =
          fun (x2743 : 'tags this) ->
            Ojs.option_of_js Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2743) "unit")
        let (set_unit :
          'tags this -> [ `Undefined of undefined  | `U1 of string ] -> unit)
          =
          fun (x2746 : 'tags this) ->
            fun (x2747 : [ `Undefined of undefined  | `U1 of string ]) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2746) "unit"
                (match x2747 with
                 | `Undefined x2748 -> undefined_to_js x2748
                 | `U1 x2749 -> Ojs.string_to_js x2749)
        let (get_unitDisplay :
          'tags this ->
            [ `L_s122_short  | `L_s78_long  | `L_s92_narrow ] option)
          =
          fun (x2751 : 'tags this) ->
            Ojs.option_of_js
              (fun (x2753 : Ojs.t) ->
                 let x2754 = x2753 in
                 match Ojs.string_of_js x2754 with
                 | "short" -> `L_s122_short
                 | "long" -> `L_s78_long
                 | "narrow" -> `L_s92_narrow
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2751) "unitDisplay")
        let (set_unitDisplay :
          'tags this ->
            [ `Undefined of undefined  | `U1 of [ `L_s122_short ] 
            | `U2 of [ `L_s78_long ]  | `U3 of [ `L_s92_narrow ] ] -> 
              unit)
          =
          fun (x2755 : 'tags this) ->
            fun
              (x2756 :
                [ `Undefined of undefined  | `U1 of [ `L_s122_short ] 
                | `U2 of [ `L_s78_long ]  | `U3 of [ `L_s92_narrow ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2755) "unitDisplay"
                (match x2756 with
                 | `Undefined x2757 -> undefined_to_js x2757
                 | `U1 x2758 ->
                     (match x2758 with
                      | `L_s122_short -> Ojs.string_to_js "short")
                 | `U2 x2759 ->
                     (match x2759 with
                      | `L_s78_long -> Ojs.string_to_js "long")
                 | `U3 x2760 ->
                     (match x2760 with
                      | `L_s92_narrow -> Ojs.string_to_js "narrow"))
        let (get_currencyDisplay : 'tags this -> string option) =
          fun (x2762 : 'tags this) ->
            Ojs.option_of_js Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2762)
                 "currencyDisplay")
        let (set_currencyDisplay :
          'tags this -> [ `Undefined of undefined  | `U1 of string ] -> unit)
          =
          fun (x2765 : 'tags this) ->
            fun (x2766 : [ `Undefined of undefined  | `U1 of string ]) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2765)
                "currencyDisplay"
                (match x2766 with
                 | `Undefined x2767 -> undefined_to_js x2767
                 | `U1 x2768 -> Ojs.string_to_js x2768)
        let (get_currencySign : 'tags this -> string option) =
          fun (x2770 : 'tags this) ->
            Ojs.option_of_js Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2770) "currencySign")
        let (set_currencySign :
          'tags this -> [ `Undefined of undefined  | `U1 of string ] -> unit)
          =
          fun (x2773 : 'tags this) ->
            fun (x2774 : [ `Undefined of undefined  | `U1 of string ]) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2773) "currencySign"
                (match x2774 with
                 | `Undefined x2775 -> undefined_to_js x2775
                 | `U1 x2776 -> Ojs.string_to_js x2776)
        let (get_localeMatcher : 'tags this -> string option) =
          fun (x2778 : 'tags this) ->
            Ojs.option_of_js Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2778)
                 "localeMatcher")
        let (set_localeMatcher :
          'tags this -> [ `Undefined of undefined  | `U1 of string ] -> unit)
          =
          fun (x2781 : 'tags this) ->
            fun (x2782 : [ `Undefined of undefined  | `U1 of string ]) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2781) "localeMatcher"
                (match x2782 with
                 | `Undefined x2783 -> undefined_to_js x2783
                 | `U1 x2784 -> Ojs.string_to_js x2784)
        let (get_style : 'tags this -> string option) =
          fun (x2786 : 'tags this) ->
            Ojs.option_of_js Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2786) "style")
        let (set_style :
          'tags this -> [ `Undefined of undefined  | `U1 of string ] -> unit)
          =
          fun (x2789 : 'tags this) ->
            fun (x2790 : [ `Undefined of undefined  | `U1 of string ]) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2789) "style"
                (match x2790 with
                 | `Undefined x2791 -> undefined_to_js x2791
                 | `U1 x2792 -> Ojs.string_to_js x2792)
        let (get_currency : 'tags this -> string option) =
          fun (x2794 : 'tags this) ->
            Ojs.option_of_js Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2794) "currency")
        let (set_currency :
          'tags this -> [ `Undefined of undefined  | `U1 of string ] -> unit)
          =
          fun (x2797 : 'tags this) ->
            fun (x2798 : [ `Undefined of undefined  | `U1 of string ]) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2797) "currency"
                (match x2798 with
                 | `Undefined x2799 -> undefined_to_js x2799
                 | `U1 x2800 -> Ojs.string_to_js x2800)
        let (get_currencySign' : 'tags this -> string option) =
          fun (x2802 : 'tags this) ->
            Ojs.option_of_js Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2802) "currencySign")
        let (set_currencySign' :
          'tags this -> [ `Undefined of undefined  | `U1 of string ] -> unit)
          =
          fun (x2805 : 'tags this) ->
            fun (x2806 : [ `Undefined of undefined  | `U1 of string ]) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2805) "currencySign"
                (match x2806 with
                 | `Undefined x2807 -> undefined_to_js x2807
                 | `U1 x2808 -> Ojs.string_to_js x2808)
        let (get_useGrouping : 'tags this -> bool option) =
          fun (x2810 : 'tags this) ->
            Ojs.option_of_js Ojs.bool_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2810) "useGrouping")
        let (set_useGrouping :
          'tags this -> [ `Undefined of undefined  | `U1 of bool ] -> unit) =
          fun (x2813 : 'tags this) ->
            fun (x2814 : [ `Undefined of undefined  | `U1 of bool ]) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2813) "useGrouping"
                (match x2814 with
                 | `Undefined x2815 -> undefined_to_js x2815
                 | `U1 x2816 -> Ojs.bool_to_js x2816)
        let (get_minimumIntegerDigits : 'tags this -> float option) =
          fun (x2818 : 'tags this) ->
            Ojs.option_of_js Ojs.float_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2818)
                 "minimumIntegerDigits")
        let (set_minimumIntegerDigits :
          'tags this -> [ `Undefined of undefined  | `U1 of float ] -> unit)
          =
          fun (x2821 : 'tags this) ->
            fun (x2822 : [ `Undefined of undefined  | `U1 of float ]) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2821)
                "minimumIntegerDigits"
                (match x2822 with
                 | `Undefined x2823 -> undefined_to_js x2823
                 | `U1 x2824 -> Ojs.float_to_js x2824)
        let (get_minimumFractionDigits : 'tags this -> float option) =
          fun (x2826 : 'tags this) ->
            Ojs.option_of_js Ojs.float_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2826)
                 "minimumFractionDigits")
        let (set_minimumFractionDigits :
          'tags this -> [ `Undefined of undefined  | `U1 of float ] -> unit)
          =
          fun (x2829 : 'tags this) ->
            fun (x2830 : [ `Undefined of undefined  | `U1 of float ]) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2829)
                "minimumFractionDigits"
                (match x2830 with
                 | `Undefined x2831 -> undefined_to_js x2831
                 | `U1 x2832 -> Ojs.float_to_js x2832)
        let (get_maximumFractionDigits : 'tags this -> float option) =
          fun (x2834 : 'tags this) ->
            Ojs.option_of_js Ojs.float_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2834)
                 "maximumFractionDigits")
        let (set_maximumFractionDigits :
          'tags this -> [ `Undefined of undefined  | `U1 of float ] -> unit)
          =
          fun (x2837 : 'tags this) ->
            fun (x2838 : [ `Undefined of undefined  | `U1 of float ]) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2837)
                "maximumFractionDigits"
                (match x2838 with
                 | `Undefined x2839 -> undefined_to_js x2839
                 | `U1 x2840 -> Ojs.float_to_js x2840)
        let (get_minimumSignificantDigits : 'tags this -> float option) =
          fun (x2842 : 'tags this) ->
            Ojs.option_of_js Ojs.float_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2842)
                 "minimumSignificantDigits")
        let (set_minimumSignificantDigits :
          'tags this -> [ `Undefined of undefined  | `U1 of float ] -> unit)
          =
          fun (x2845 : 'tags this) ->
            fun (x2846 : [ `Undefined of undefined  | `U1 of float ]) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2845)
                "minimumSignificantDigits"
                (match x2846 with
                 | `Undefined x2847 -> undefined_to_js x2847
                 | `U1 x2848 -> Ojs.float_to_js x2848)
        let (get_maximumSignificantDigits : 'tags this -> float option) =
          fun (x2850 : 'tags this) ->
            Ojs.option_of_js Ojs.float_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2850)
                 "maximumSignificantDigits")
        let (set_maximumSignificantDigits :
          'tags this -> [ `Undefined of undefined  | `U1 of float ] -> unit)
          =
          fun (x2853 : 'tags this) ->
            fun (x2854 : [ `Undefined of undefined  | `U1 of float ]) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2853)
                "maximumSignificantDigits"
                (match x2854 with
                 | `Undefined x2855 -> undefined_to_js x2855
                 | `U1 x2856 -> Ojs.float_to_js x2856)
        let (create :
          ?compactDisplay:[ `L_s122_short  | `L_s78_long ] ->
            ?notation:[ `L_s114_scientific  | `L_s126_standard 
                      | `L_s33_compact  | `L_s51_engineering ]
              ->
              ?signDisplay:[ `L_s22_always  | `L_s23_auto 
                           | `L_s54_exceptZero  | `L_s93_never ]
                ->
                ?unit:string ->
                  ?unitDisplay:[ `L_s122_short  | `L_s78_long 
                               | `L_s92_narrow ]
                    ->
                    ?currencyDisplay:string ->
                      ?currencySign:string ->
                        ?localeMatcher:string ->
                          ?style:string ->
                            ?currency:string ->
                              ?useGrouping:bool ->
                                ?minimumIntegerDigits:float ->
                                  ?minimumFractionDigits:float ->
                                    ?maximumFractionDigits:float ->
                                      ?minimumSignificantDigits:float ->
                                        ?maximumSignificantDigits:float ->
                                          unit -> t)
          =
          fun
            ?compactDisplay:(x2858 : [ `L_s122_short  | `L_s78_long ] option)
            ->
            fun
              ?notation:(x2859 :
                          [ `L_s114_scientific  | `L_s126_standard 
                          | `L_s33_compact  | `L_s51_engineering ] option)
              ->
              fun
                ?signDisplay:(x2860 :
                               [ `L_s22_always  | `L_s23_auto 
                               | `L_s54_exceptZero  | `L_s93_never ] option)
                ->
                fun ?unit:(x2861 : string option) ->
                  fun
                    ?unitDisplay:(x2862 :
                                   [ `L_s122_short  | `L_s78_long 
                                   | `L_s92_narrow ] option)
                    ->
                    fun ?currencyDisplay:(x2863 : string option) ->
                      fun ?currencySign:(x2864 : string option) ->
                        fun ?localeMatcher:(x2865 : string option) ->
                          fun ?style:(x2866 : string option) ->
                            fun ?currency:(x2867 : string option) ->
                              fun ?useGrouping:(x2868 : bool option) ->
                                fun
                                  ?minimumIntegerDigits:(x2869 :
                                                          float option)
                                  ->
                                  fun
                                    ?minimumFractionDigits:(x2870 :
                                                             float option)
                                    ->
                                    fun
                                      ?maximumFractionDigits:(x2871 :
                                                               float option)
                                      ->
                                      fun
                                        ?minimumSignificantDigits:(x2872 :
                                                                    float
                                                                    option)
                                        ->
                                        fun
                                          ?maximumSignificantDigits:(x2873 :
                                                                    float
                                                                    option)
                                          ->
                                          fun () ->
                                            let x2874 = Ojs.empty_obj () in
                                            (match x2858 with
                                             | Some x2890 ->
                                                 Ojs.set_prop_ascii x2874
                                                   "compactDisplay"
                                                   (match x2890 with
                                                    | `L_s122_short ->
                                                        Ojs.string_to_js
                                                          "short"
                                                    | `L_s78_long ->
                                                        Ojs.string_to_js
                                                          "long")
                                             | None -> ());
                                            (match x2859 with
                                             | Some x2889 ->
                                                 Ojs.set_prop_ascii x2874
                                                   "notation"
                                                   (match x2889 with
                                                    | `L_s114_scientific ->
                                                        Ojs.string_to_js
                                                          "scientific"
                                                    | `L_s126_standard ->
                                                        Ojs.string_to_js
                                                          "standard"
                                                    | `L_s33_compact ->
                                                        Ojs.string_to_js
                                                          "compact"
                                                    | `L_s51_engineering ->
                                                        Ojs.string_to_js
                                                          "engineering")
                                             | None -> ());
                                            (match x2860 with
                                             | Some x2888 ->
                                                 Ojs.set_prop_ascii x2874
                                                   "signDisplay"
                                                   (match x2888 with
                                                    | `L_s22_always ->
                                                        Ojs.string_to_js
                                                          "always"
                                                    | `L_s23_auto ->
                                                        Ojs.string_to_js
                                                          "auto"
                                                    | `L_s54_exceptZero ->
                                                        Ojs.string_to_js
                                                          "exceptZero"
                                                    | `L_s93_never ->
                                                        Ojs.string_to_js
                                                          "never")
                                             | None -> ());
                                            (match x2861 with
                                             | Some x2887 ->
                                                 Ojs.set_prop_ascii x2874
                                                   "unit"
                                                   (Ojs.string_to_js x2887)
                                             | None -> ());
                                            (match x2862 with
                                             | Some x2886 ->
                                                 Ojs.set_prop_ascii x2874
                                                   "unitDisplay"
                                                   (match x2886 with
                                                    | `L_s122_short ->
                                                        Ojs.string_to_js
                                                          "short"
                                                    | `L_s78_long ->
                                                        Ojs.string_to_js
                                                          "long"
                                                    | `L_s92_narrow ->
                                                        Ojs.string_to_js
                                                          "narrow")
                                             | None -> ());
                                            (match x2863 with
                                             | Some x2885 ->
                                                 Ojs.set_prop_ascii x2874
                                                   "currencyDisplay"
                                                   (Ojs.string_to_js x2885)
                                             | None -> ());
                                            (match x2864 with
                                             | Some x2884 ->
                                                 Ojs.set_prop_ascii x2874
                                                   "currencySign"
                                                   (Ojs.string_to_js x2884)
                                             | None -> ());
                                            (match x2865 with
                                             | Some x2883 ->
                                                 Ojs.set_prop_ascii x2874
                                                   "localeMatcher"
                                                   (Ojs.string_to_js x2883)
                                             | None -> ());
                                            (match x2866 with
                                             | Some x2882 ->
                                                 Ojs.set_prop_ascii x2874
                                                   "style"
                                                   (Ojs.string_to_js x2882)
                                             | None -> ());
                                            (match x2867 with
                                             | Some x2881 ->
                                                 Ojs.set_prop_ascii x2874
                                                   "currency"
                                                   (Ojs.string_to_js x2881)
                                             | None -> ());
                                            (match x2868 with
                                             | Some x2880 ->
                                                 Ojs.set_prop_ascii x2874
                                                   "useGrouping"
                                                   (Ojs.bool_to_js x2880)
                                             | None -> ());
                                            (match x2869 with
                                             | Some x2879 ->
                                                 Ojs.set_prop_ascii x2874
                                                   "minimumIntegerDigits"
                                                   (Ojs.float_to_js x2879)
                                             | None -> ());
                                            (match x2870 with
                                             | Some x2878 ->
                                                 Ojs.set_prop_ascii x2874
                                                   "minimumFractionDigits"
                                                   (Ojs.float_to_js x2878)
                                             | None -> ());
                                            (match x2871 with
                                             | Some x2877 ->
                                                 Ojs.set_prop_ascii x2874
                                                   "maximumFractionDigits"
                                                   (Ojs.float_to_js x2877)
                                             | None -> ());
                                            (match x2872 with
                                             | Some x2876 ->
                                                 Ojs.set_prop_ascii x2874
                                                   "minimumSignificantDigits"
                                                   (Ojs.float_to_js x2876)
                                             | None -> ());
                                            (match x2873 with
                                             | Some x2875 ->
                                                 Ojs.set_prop_ascii x2874
                                                   "maximumSignificantDigits"
                                                   (Ojs.float_to_js x2875)
                                             | None -> ());
                                            t_of_js x2874
        let cast_from = Obj.magic
      end
    module NumberFormat =
      struct
        type t = [ `Intl_NumberFormat ] intf
        let rec t_of_js : Ojs.t -> t = Obj.magic
        and t_to_js : t -> Ojs.t = Obj.magic
        type tags = [ `Intl_NumberFormat ]
        type 'tags this =
          'tags intf constraint 'tags = [> `Intl_NumberFormat ]
        let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
          =
          fun (type __tags) ->
            fun (__tags_of_js : Ojs.t -> __tags) ->
              fun (x2893 : Ojs.t) -> intf_of_js __tags_of_js x2893
        and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
          fun (type __tags) ->
            fun (__tags_to_js : __tags -> Ojs.t) ->
              fun (x2891 : __tags intf) -> intf_to_js __tags_to_js x2891
        let (formatRange :
          'tags this ->
            start:[ `U1 of float  | `U2 of bigint ] ->
              end_:[ `U1 of float  | `U2 of bigint ] -> string)
          =
          fun (x2901 : 'tags this) ->
            fun ~start:(x2895 : [ `U1 of float  | `U2 of bigint ]) ->
              fun ~end_:(x2898 : [ `U1 of float  | `U2 of bigint ]) ->
                Ojs.string_of_js
                  (Ojs.call (this_to_js Obj.magic x2901) "formatRange"
                     [|((match x2895 with
                         | `U1 x2896 -> Ojs.float_to_js x2896
                         | `U2 x2897 -> bigint_to_js x2897));((match x2898
                                                               with
                                                               | `U1 x2899 ->
                                                                   Ojs.float_to_js
                                                                    x2899
                                                               | `U2 x2900 ->
                                                                   bigint_to_js
                                                                    x2900))|])
        let (formatRangeToParts :
          'tags this ->
            start:[ `U1 of float  | `U2 of bigint ] ->
              end_:[ `U1 of float  | `U2 of bigint ] ->
                NumberRangeFormatPart.t list)
          =
          fun (x2909 : 'tags this) ->
            fun ~start:(x2903 : [ `U1 of float  | `U2 of bigint ]) ->
              fun ~end_:(x2906 : [ `U1 of float  | `U2 of bigint ]) ->
                Ojs.list_of_js NumberRangeFormatPart.t_of_js
                  (Ojs.call (this_to_js Obj.magic x2909) "formatRangeToParts"
                     [|((match x2903 with
                         | `U1 x2904 -> Ojs.float_to_js x2904
                         | `U2 x2905 -> bigint_to_js x2905));((match x2906
                                                               with
                                                               | `U1 x2907 ->
                                                                   Ojs.float_to_js
                                                                    x2907
                                                               | `U2 x2908 ->
                                                                   bigint_to_js
                                                                    x2908))|])
        let (format :
          'tags this -> value:[ `U1 of float  | `U2 of bigint ] -> string) =
          fun (x2915 : 'tags this) ->
            fun ~value:(x2912 : [ `U1 of float  | `U2 of bigint ]) ->
              Ojs.string_of_js
                (Ojs.call (this_to_js Obj.magic x2915) "format"
                   [|((match x2912 with
                       | `U1 x2913 -> Ojs.float_to_js x2913
                       | `U2 x2914 -> bigint_to_js x2914))|])
        let (resolvedOptions : 'tags this -> ResolvedNumberFormatOptions.t) =
          fun (x2917 : 'tags this) ->
            ResolvedNumberFormatOptions.t_of_js
              (Ojs.call (this_to_js Obj.magic x2917) "resolvedOptions" [||])
        let (formatToParts :
          'tags this ->
            ?number:[ `U1 of float  | `U2 of bigint ] ->
              unit -> NumberFormatPart.t list)
          =
          fun (x2924 : 'tags this) ->
            fun ?number:(x2919 : [ `U1 of float  | `U2 of bigint ] option) ->
              fun () ->
                Ojs.list_of_js NumberFormatPart.t_of_js
                  (let x2926 = this_to_js Obj.magic x2924 in
                   Ojs.call (Ojs.get_prop_ascii x2926 "formatToParts")
                     "apply"
                     [|x2926;((let x2920 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               (match x2919 with
                                | Some x2921 ->
                                    ignore
                                      (Ojs.call x2920 "push"
                                         [|((match x2921 with
                                             | `U1 x2922 ->
                                                 Ojs.float_to_js x2922
                                             | `U2 x2923 ->
                                                 bigint_to_js x2923))|])
                                | None -> ());
                               x2920))|])
        let (format' : 'tags this -> value:float -> string) =
          fun (x2929 : 'tags this) ->
            fun ~value:(x2928 : float) ->
              Ojs.string_of_js
                (Ojs.call (this_to_js Obj.magic x2929) "format"
                   [|(Ojs.float_to_js x2928)|])
        let (resolvedOptions' : 'tags this -> ResolvedNumberFormatOptions.t)
          =
          fun (x2931 : 'tags this) ->
            ResolvedNumberFormatOptions.t_of_js
              (Ojs.call (this_to_js Obj.magic x2931) "resolvedOptions" [||])
        let cast_from = Obj.magic
        let (create :
          ?locales:[ `U1 of string  | `U2 of string list ] ->
            ?options:NumberFormatOptions.t -> unit -> t)
          =
          fun
            ?locales:(x2933 : [ `U1 of string  | `U2 of string list ] option)
            ->
            fun ?options:(x2934 : NumberFormatOptions.t option) ->
              fun () ->
                t_of_js
                  (Ojs.new_obj_arr
                     (Ojs.get_prop_ascii
                        (Ojs.get_prop_ascii Ojs.global "Intl") "NumberFormat")
                     (let x2935 =
                        Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                          [||] in
                      (match x2933 with
                       | Some x2937 ->
                           ignore
                             (Ojs.call x2935 "push"
                                [|((match x2937 with
                                    | `U1 x2938 -> Ojs.string_to_js x2938
                                    | `U2 x2939 ->
                                        Ojs.list_to_js Ojs.string_to_js x2939))|])
                       | None -> ());
                      (match x2934 with
                       | Some x2936 ->
                           ignore
                             (Ojs.call x2935 "push"
                                [|(NumberFormatOptions.t_to_js x2936)|])
                       | None -> ());
                      x2935))
        let (invoke :
          ?locales:[ `U1 of string  | `U2 of string list ] ->
            ?options:NumberFormatOptions.t -> unit -> t)
          =
          fun
            ?locales:(x2941 : [ `U1 of string  | `U2 of string list ] option)
            ->
            fun ?options:(x2942 : NumberFormatOptions.t option) ->
              fun () ->
                t_of_js
                  (Ojs.call
                     (Ojs.get_prop_ascii
                        (Ojs.get_prop_ascii Ojs.global "Intl") "NumberFormat")
                     "apply"
                     [|Ojs.null;((let x2943 =
                                    Ojs.new_obj
                                      (Ojs.get_prop_ascii Ojs.global "Array")
                                      [||] in
                                  (match x2941 with
                                   | Some x2945 ->
                                       ignore
                                         (Ojs.call x2943 "push"
                                            [|((match x2945 with
                                                | `U1 x2946 ->
                                                    Ojs.string_to_js x2946
                                                | `U2 x2947 ->
                                                    Ojs.list_to_js
                                                      Ojs.string_to_js x2947))|])
                                   | None -> ());
                                  (match x2942 with
                                   | Some x2944 ->
                                       ignore
                                         (Ojs.call x2943 "push"
                                            [|(NumberFormatOptions.t_to_js
                                                 x2944)|])
                                   | None -> ());
                                  x2943))|])
        let (supportedLocalesOf :
          locales:[ `U1 of string  | `U2 of string list ] ->
            ?options:NumberFormatOptions.t -> unit -> string list)
          =
          fun ~locales:(x2949 : [ `U1 of string  | `U2 of string list ]) ->
            fun ?options:(x2950 : NumberFormatOptions.t option) ->
              fun () ->
                Ojs.list_of_js Ojs.string_of_js
                  (let x2956 =
                     Ojs.get_prop_ascii
                       (Ojs.get_prop_ascii Ojs.global "Intl") "NumberFormat" in
                   Ojs.call (Ojs.get_prop_ascii x2956 "supportedLocalesOf")
                     "apply"
                     [|x2956;((let x2951 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x2951 "push"
                                    [|((match x2949 with
                                        | `U1 x2953 -> Ojs.string_to_js x2953
                                        | `U2 x2954 ->
                                            Ojs.list_to_js Ojs.string_to_js
                                              x2954))|]);
                               (match x2950 with
                                | Some x2952 ->
                                    ignore
                                      (Ojs.call x2951 "push"
                                         [|(NumberFormatOptions.t_to_js x2952)|])
                                | None -> ());
                               x2951))|])
        let (prototype : unit -> t) =
          fun () ->
            t_of_js
              (Ojs.get_prop_ascii
                 (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Intl")
                    "NumberFormat") "prototype")
      end
    module ListFormatType =
      struct
        type t = [ `L_s137_unit  | `L_s35_conjunction  | `L_s46_disjunction ]
        let rec t_of_js : Ojs.t -> t =
          fun (x2959 : Ojs.t) ->
            let x2960 = x2959 in
            match Ojs.string_of_js x2960 with
            | "unit" -> `L_s137_unit
            | "conjunction" -> `L_s35_conjunction
            | "disjunction" -> `L_s46_disjunction
            | _ -> assert false
        and t_to_js : t -> Ojs.t =
          fun
            (x2958 :
              [ `L_s137_unit  | `L_s35_conjunction  | `L_s46_disjunction ])
            ->
            match x2958 with
            | `L_s137_unit -> Ojs.string_to_js "unit"
            | `L_s35_conjunction -> Ojs.string_to_js "conjunction"
            | `L_s46_disjunction -> Ojs.string_to_js "disjunction"
      end
    module ListFormatStyle =
      struct
        type t = [ `L_s122_short  | `L_s78_long  | `L_s92_narrow ]
        let rec t_of_js : Ojs.t -> t =
          fun (x2962 : Ojs.t) ->
            let x2963 = x2962 in
            match Ojs.string_of_js x2963 with
            | "short" -> `L_s122_short
            | "long" -> `L_s78_long
            | "narrow" -> `L_s92_narrow
            | _ -> assert false
        and t_to_js : t -> Ojs.t =
          fun (x2961 : [ `L_s122_short  | `L_s78_long  | `L_s92_narrow ]) ->
            match x2961 with
            | `L_s122_short -> Ojs.string_to_js "short"
            | `L_s78_long -> Ojs.string_to_js "long"
            | `L_s92_narrow -> Ojs.string_to_js "narrow"
      end
    module ResolvedListFormatOptions =
      struct
        type t = [ `Intl_ResolvedListFormatOptions ] intf
        let rec t_of_js : Ojs.t -> t = Obj.magic
        and t_to_js : t -> Ojs.t = Obj.magic
        type tags = [ `Intl_ResolvedListFormatOptions ]
        type 'tags this =
          'tags intf constraint 'tags = [> `Intl_ResolvedListFormatOptions ]
        let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
          =
          fun (type __tags) ->
            fun (__tags_of_js : Ojs.t -> __tags) ->
              fun (x2966 : Ojs.t) -> intf_of_js __tags_of_js x2966
        and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
          fun (type __tags) ->
            fun (__tags_to_js : __tags -> Ojs.t) ->
              fun (x2964 : __tags intf) -> intf_to_js __tags_to_js x2964
        let (get_locale : 'tags this -> string) =
          fun (x2968 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2968) "locale")
        let (set_locale : 'tags this -> string -> unit) =
          fun (x2970 : 'tags this) ->
            fun (x2971 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2970) "locale"
                (Ojs.string_to_js x2971)
        let (get_style : 'tags this -> ListFormatStyle.t) =
          fun (x2973 : 'tags this) ->
            ListFormatStyle.t_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2973) "style")
        let (set_style : 'tags this -> ListFormatStyle.t -> unit) =
          fun (x2975 : 'tags this) ->
            fun (x2976 : ListFormatStyle.t) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2975) "style"
                (ListFormatStyle.t_to_js x2976)
        let (get_type : 'tags this -> ListFormatType.t) =
          fun (x2978 : 'tags this) ->
            ListFormatType.t_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2978) "type")
        let (set_type : 'tags this -> ListFormatType.t -> unit) =
          fun (x2980 : 'tags this) ->
            fun (x2981 : ListFormatType.t) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2980) "type"
                (ListFormatType.t_to_js x2981)
        let (create :
          locale:string ->
            style:ListFormatStyle.t -> type_:ListFormatType.t -> unit -> t)
          =
          fun ~locale:(x2983 : string) ->
            fun ~style:(x2984 : ListFormatStyle.t) ->
              fun ~type_:(x2985 : ListFormatType.t) ->
                fun () ->
                  let x2986 = Ojs.empty_obj () in
                  Ojs.set_prop_ascii x2986 "locale" (Ojs.string_to_js x2983);
                  Ojs.set_prop_ascii x2986 "style"
                    (ListFormatStyle.t_to_js x2984);
                  Ojs.set_prop_ascii x2986 "type"
                    (ListFormatType.t_to_js x2985);
                  t_of_js x2986
        let cast_from = Obj.magic
      end
    module ListFormatLocaleMatcher =
      struct
        type t = [ `L_s26_best_fit  | `L_s81_lookup ]
        let rec t_of_js : Ojs.t -> t =
          fun (x2988 : Ojs.t) ->
            let x2989 = x2988 in
            match Ojs.string_of_js x2989 with
            | "best fit" -> `L_s26_best_fit
            | "lookup" -> `L_s81_lookup
            | _ -> assert false
        and t_to_js : t -> Ojs.t =
          fun (x2987 : [ `L_s26_best_fit  | `L_s81_lookup ]) ->
            match x2987 with
            | `L_s26_best_fit -> Ojs.string_to_js "best fit"
            | `L_s81_lookup -> Ojs.string_to_js "lookup"
      end
    module ListFormatOptions =
      struct
        type t = [ `Intl_ListFormatOptions ] intf
        let rec t_of_js : Ojs.t -> t = Obj.magic
        and t_to_js : t -> Ojs.t = Obj.magic
        type tags = [ `Intl_ListFormatOptions ]
        type 'tags this =
          'tags intf constraint 'tags = [> `Intl_ListFormatOptions ]
        let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
          =
          fun (type __tags) ->
            fun (__tags_of_js : Ojs.t -> __tags) ->
              fun (x2992 : Ojs.t) -> intf_of_js __tags_of_js x2992
        and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
          fun (type __tags) ->
            fun (__tags_to_js : __tags -> Ojs.t) ->
              fun (x2990 : __tags intf) -> intf_to_js __tags_to_js x2990
        let (get_localeMatcher :
          'tags this -> ListFormatLocaleMatcher.t option) =
          fun (x2994 : 'tags this) ->
            Ojs.option_of_js ListFormatLocaleMatcher.t_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2994)
                 "localeMatcher")
        let (set_localeMatcher :
          'tags this ->
            [ `Undefined of undefined  | `U1 of ListFormatLocaleMatcher.t ]
              -> unit)
          =
          fun (x2997 : 'tags this) ->
            fun
              (x2998 :
                [ `Undefined of undefined 
                | `U1 of ListFormatLocaleMatcher.t ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2997) "localeMatcher"
                (match x2998 with
                 | `Undefined x2999 -> undefined_to_js x2999
                 | `U1 x3000 -> ListFormatLocaleMatcher.t_to_js x3000)
        let (get_type : 'tags this -> ListFormatType.t option) =
          fun (x3002 : 'tags this) ->
            Ojs.option_of_js ListFormatType.t_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3002) "type")
        let (set_type :
          'tags this ->
            [ `Undefined of undefined  | `U1 of ListFormatType.t ] -> unit)
          =
          fun (x3005 : 'tags this) ->
            fun
              (x3006 :
                [ `Undefined of undefined  | `U1 of ListFormatType.t ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3005) "type"
                (match x3006 with
                 | `Undefined x3007 -> undefined_to_js x3007
                 | `U1 x3008 -> ListFormatType.t_to_js x3008)
        let (get_style : 'tags this -> ListFormatStyle.t option) =
          fun (x3010 : 'tags this) ->
            Ojs.option_of_js ListFormatStyle.t_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3010) "style")
        let (set_style :
          'tags this ->
            [ `Undefined of undefined  | `U1 of ListFormatStyle.t ] -> unit)
          =
          fun (x3013 : 'tags this) ->
            fun
              (x3014 :
                [ `Undefined of undefined  | `U1 of ListFormatStyle.t ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3013) "style"
                (match x3014 with
                 | `Undefined x3015 -> undefined_to_js x3015
                 | `U1 x3016 -> ListFormatStyle.t_to_js x3016)
        let (create :
          ?localeMatcher:ListFormatLocaleMatcher.t ->
            ?type_:ListFormatType.t -> ?style:ListFormatStyle.t -> unit -> t)
          =
          fun ?localeMatcher:(x3018 : ListFormatLocaleMatcher.t option) ->
            fun ?type_:(x3019 : ListFormatType.t option) ->
              fun ?style:(x3020 : ListFormatStyle.t option) ->
                fun () ->
                  let x3021 = Ojs.empty_obj () in
                  (match x3018 with
                   | Some x3024 ->
                       Ojs.set_prop_ascii x3021 "localeMatcher"
                         (ListFormatLocaleMatcher.t_to_js x3024)
                   | None -> ());
                  (match x3019 with
                   | Some x3023 ->
                       Ojs.set_prop_ascii x3021 "type"
                         (ListFormatType.t_to_js x3023)
                   | None -> ());
                  (match x3020 with
                   | Some x3022 ->
                       Ojs.set_prop_ascii x3021 "style"
                         (ListFormatStyle.t_to_js x3022)
                   | None -> ());
                  t_of_js x3021
        let cast_from = Obj.magic
      end
    module ListFormat =
      struct
        module AnonymousInterface12 =
          struct
            type t = Ojs.t
            let rec t_of_js : Ojs.t -> t = fun (x3026 : Ojs.t) -> x3026
            and t_to_js : t -> Ojs.t = fun (x3025 : Ojs.t) -> x3025
            let (get_type : t -> [ `L_s48_element  | `L_s76_literal ]) =
              fun (x3027 : t) ->
                let x3028 = Ojs.get_prop_ascii (t_to_js x3027) "type" in
                match Ojs.string_of_js x3028 with
                | "element" -> `L_s48_element
                | "literal" -> `L_s76_literal
                | _ -> assert false
            let (set_type :
              t ->
                [ `U1 of [ `L_s48_element ]  | `U2 of [ `L_s76_literal ] ] ->
                  unit)
              =
              fun (x3029 : t) ->
                fun
                  (x3030 :
                    [ `U1 of [ `L_s48_element ] 
                    | `U2 of [ `L_s76_literal ] ])
                  ->
                  Ojs.set_prop_ascii (t_to_js x3029) "type"
                    (match x3030 with
                     | `U1 x3031 ->
                         (match x3031 with
                          | `L_s48_element -> Ojs.string_to_js "element")
                     | `U2 x3032 ->
                         (match x3032 with
                          | `L_s76_literal -> Ojs.string_to_js "literal"))
            let (get_value : t -> string) =
              fun (x3033 : t) ->
                Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x3033) "value")
            let (set_value : t -> string -> unit) =
              fun (x3034 : t) ->
                fun (x3035 : string) ->
                  Ojs.set_prop_ascii (t_to_js x3034) "value"
                    (Ojs.string_to_js x3035)
            let (create :
              type_:[ `L_s48_element  | `L_s76_literal ] ->
                value:string -> unit -> t)
              =
              fun ~type_:(x3036 : [ `L_s48_element  | `L_s76_literal ]) ->
                fun ~value:(x3037 : string) ->
                  fun () ->
                    let x3038 = Ojs.empty_obj () in
                    Ojs.set_prop_ascii x3038 "type"
                      (match x3036 with
                       | `L_s48_element -> Ojs.string_to_js "element"
                       | `L_s76_literal -> Ojs.string_to_js "literal");
                    Ojs.set_prop_ascii x3038 "value" (Ojs.string_to_js x3037);
                    t_of_js x3038
          end
        type t = [ `Intl_ListFormat ] intf
        let rec t_of_js : Ojs.t -> t = Obj.magic
        and t_to_js : t -> Ojs.t = Obj.magic
        type tags = [ `Intl_ListFormat ]
        type 'tags this = 'tags intf constraint 'tags = [> `Intl_ListFormat ]
        let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
          =
          fun (type __tags) ->
            fun (__tags_of_js : Ojs.t -> __tags) ->
              fun (x3041 : Ojs.t) -> intf_of_js __tags_of_js x3041
        and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
          fun (type __tags) ->
            fun (__tags_to_js : __tags -> Ojs.t) ->
              fun (x3039 : __tags intf) -> intf_to_js __tags_to_js x3039
        let (format : 'tags this -> list:string Iterable.t -> string) =
          fun (x3045 : 'tags this) ->
            fun ~list:(x3043 : string Iterable.t) ->
              Ojs.string_of_js
                (Ojs.call (this_to_js Obj.magic x3045) "format"
                   [|(Iterable.t_to_js Ojs.string_to_js x3043)|])
        let (formatToParts :
          'tags this -> list:string Iterable.t -> AnonymousInterface12.t list)
          =
          fun (x3049 : 'tags this) ->
            fun ~list:(x3047 : string Iterable.t) ->
              Ojs.list_of_js AnonymousInterface12.t_of_js
                (Ojs.call (this_to_js Obj.magic x3049) "formatToParts"
                   [|(Iterable.t_to_js Ojs.string_to_js x3047)|])
        let (resolvedOptions : 'tags this -> ResolvedListFormatOptions.t) =
          fun (x3052 : 'tags this) ->
            ResolvedListFormatOptions.t_of_js
              (Ojs.call (this_to_js Obj.magic x3052) "resolvedOptions" [||])
        let cast_from = Obj.magic
        let (prototype : unit -> t) =
          fun () ->
            t_of_js
              (Ojs.get_prop_ascii
                 (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Intl")
                    "ListFormat") "prototype")
        let (create :
          ?locales:[ `U1 of BCP47LanguageTag.t 
                   | `U2 of BCP47LanguageTag.t list ]
            -> ?options:ListFormatOptions.t -> unit -> t)
          =
          fun
            ?locales:(x3054 :
                       [ `U1 of BCP47LanguageTag.t 
                       | `U2 of BCP47LanguageTag.t list ] option)
            ->
            fun ?options:(x3055 : ListFormatOptions.t option) ->
              fun () ->
                t_of_js
                  (Ojs.new_obj_arr
                     (Ojs.get_prop_ascii
                        (Ojs.get_prop_ascii Ojs.global "Intl") "ListFormat")
                     (let x3056 =
                        Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                          [||] in
                      (match x3054 with
                       | Some x3058 ->
                           ignore
                             (Ojs.call x3056 "push"
                                [|((match x3058 with
                                    | `U1 x3059 ->
                                        BCP47LanguageTag.t_to_js x3059
                                    | `U2 x3060 ->
                                        Ojs.list_to_js
                                          BCP47LanguageTag.t_to_js x3060))|])
                       | None -> ());
                      (match x3055 with
                       | Some x3057 ->
                           ignore
                             (Ojs.call x3056 "push"
                                [|(ListFormatOptions.t_to_js x3057)|])
                       | None -> ());
                      x3056))
        let (supportedLocalesOf :
          locales:[ `U1 of BCP47LanguageTag.t 
                  | `U2 of BCP47LanguageTag.t list ]
            ->
            ?options:(ListFormatOptions.t, [ `L_s77_localeMatcher ]) Pick.t
              -> unit -> BCP47LanguageTag.t list)
          =
          fun
            ~locales:(x3062 :
                       [ `U1 of BCP47LanguageTag.t 
                       | `U2 of BCP47LanguageTag.t list ])
            ->
            fun
              ?options:(x3063 :
                         (ListFormatOptions.t, [ `L_s77_localeMatcher ])
                           Pick.t option)
              ->
              fun () ->
                Ojs.list_of_js BCP47LanguageTag.t_of_js
                  (let x3071 =
                     Ojs.get_prop_ascii
                       (Ojs.get_prop_ascii Ojs.global "Intl") "ListFormat" in
                   Ojs.call (Ojs.get_prop_ascii x3071 "supportedLocalesOf")
                     "apply"
                     [|x3071;((let x3064 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x3064 "push"
                                    [|((match x3062 with
                                        | `U1 x3068 ->
                                            BCP47LanguageTag.t_to_js x3068
                                        | `U2 x3069 ->
                                            Ojs.list_to_js
                                              BCP47LanguageTag.t_to_js x3069))|]);
                               (match x3063 with
                                | Some x3065 ->
                                    ignore
                                      (Ojs.call x3064 "push"
                                         [|(Pick.t_to_js
                                              ListFormatOptions.t_to_js
                                              (fun
                                                 (x3067 :
                                                   [ `L_s77_localeMatcher ])
                                                 ->
                                                 match x3067 with
                                                 | `L_s77_localeMatcher ->
                                                     Ojs.string_to_js
                                                       "localeMatcher") x3065)|])
                                | None -> ());
                               x3064))|])
      end
    module DisplayNamesType =
      struct
        type t =
          [ `L_s112_region  | `L_s115_script  | `L_s28_calendar 
          | `L_s36_currency  | `L_s37_dateTimeField  | `L_s75_language ]
        let rec t_of_js : Ojs.t -> t =
          fun (x3074 : Ojs.t) ->
            let x3075 = x3074 in
            match Ojs.string_of_js x3075 with
            | "region" -> `L_s112_region
            | "script" -> `L_s115_script
            | "calendar" -> `L_s28_calendar
            | "currency" -> `L_s36_currency
            | "dateTimeField" -> `L_s37_dateTimeField
            | "language" -> `L_s75_language
            | _ -> assert false
        and t_to_js : t -> Ojs.t =
          fun
            (x3073 :
              [ `L_s112_region  | `L_s115_script  | `L_s28_calendar 
              | `L_s36_currency  | `L_s37_dateTimeField  | `L_s75_language ])
            ->
            match x3073 with
            | `L_s112_region -> Ojs.string_to_js "region"
            | `L_s115_script -> Ojs.string_to_js "script"
            | `L_s28_calendar -> Ojs.string_to_js "calendar"
            | `L_s36_currency -> Ojs.string_to_js "currency"
            | `L_s37_dateTimeField -> Ojs.string_to_js "dateTimeField"
            | `L_s75_language -> Ojs.string_to_js "language"
      end
    module DisplayNamesLanguageDisplay =
      struct
        type t = [ `L_s126_standard  | `L_s43_dialect ]
        let rec t_of_js : Ojs.t -> t =
          fun (x3077 : Ojs.t) ->
            let x3078 = x3077 in
            match Ojs.string_of_js x3078 with
            | "standard" -> `L_s126_standard
            | "dialect" -> `L_s43_dialect
            | _ -> assert false
        and t_to_js : t -> Ojs.t =
          fun (x3076 : [ `L_s126_standard  | `L_s43_dialect ]) ->
            match x3076 with
            | `L_s126_standard -> Ojs.string_to_js "standard"
            | `L_s43_dialect -> Ojs.string_to_js "dialect"
      end
    module DisplayNamesFallback =
      struct
        type t = [ `L_s31_code  | `L_s94_none ]
        let rec t_of_js : Ojs.t -> t =
          fun (x3080 : Ojs.t) ->
            let x3081 = x3080 in
            match Ojs.string_of_js x3081 with
            | "code" -> `L_s31_code
            | "none" -> `L_s94_none
            | _ -> assert false
        and t_to_js : t -> Ojs.t =
          fun (x3079 : [ `L_s31_code  | `L_s94_none ]) ->
            match x3079 with
            | `L_s31_code -> Ojs.string_to_js "code"
            | `L_s94_none -> Ojs.string_to_js "none"
      end
    module ResolvedDisplayNamesOptions =
      struct
        type t = [ `Intl_ResolvedDisplayNamesOptions ] intf
        let rec t_of_js : Ojs.t -> t = Obj.magic
        and t_to_js : t -> Ojs.t = Obj.magic
        type tags = [ `Intl_ResolvedDisplayNamesOptions ]
        type 'tags this =
          'tags intf constraint 'tags =
                      [> `Intl_ResolvedDisplayNamesOptions ]
        let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
          =
          fun (type __tags) ->
            fun (__tags_of_js : Ojs.t -> __tags) ->
              fun (x3084 : Ojs.t) -> intf_of_js __tags_of_js x3084
        and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
          fun (type __tags) ->
            fun (__tags_to_js : __tags -> Ojs.t) ->
              fun (x3082 : __tags intf) -> intf_to_js __tags_to_js x3082
        let (get_locale : 'tags this -> UnicodeBCP47LocaleIdentifier.t) =
          fun (x3086 : 'tags this) ->
            UnicodeBCP47LocaleIdentifier.t_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3086) "locale")
        let (set_locale :
          'tags this -> UnicodeBCP47LocaleIdentifier.t -> unit) =
          fun (x3088 : 'tags this) ->
            fun (x3089 : UnicodeBCP47LocaleIdentifier.t) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3088) "locale"
                (UnicodeBCP47LocaleIdentifier.t_to_js x3089)
        let (get_style : 'tags this -> RelativeTimeFormatStyle.t) =
          fun (x3091 : 'tags this) ->
            RelativeTimeFormatStyle.t_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3091) "style")
        let (set_style : 'tags this -> RelativeTimeFormatStyle.t -> unit) =
          fun (x3093 : 'tags this) ->
            fun (x3094 : RelativeTimeFormatStyle.t) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3093) "style"
                (RelativeTimeFormatStyle.t_to_js x3094)
        let (get_type : 'tags this -> DisplayNamesType.t) =
          fun (x3096 : 'tags this) ->
            DisplayNamesType.t_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3096) "type")
        let (set_type : 'tags this -> DisplayNamesType.t -> unit) =
          fun (x3098 : 'tags this) ->
            fun (x3099 : DisplayNamesType.t) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3098) "type"
                (DisplayNamesType.t_to_js x3099)
        let (get_fallback : 'tags this -> DisplayNamesFallback.t) =
          fun (x3101 : 'tags this) ->
            DisplayNamesFallback.t_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3101) "fallback")
        let (set_fallback : 'tags this -> DisplayNamesFallback.t -> unit) =
          fun (x3103 : 'tags this) ->
            fun (x3104 : DisplayNamesFallback.t) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3103) "fallback"
                (DisplayNamesFallback.t_to_js x3104)
        let (get_languageDisplay :
          'tags this -> DisplayNamesLanguageDisplay.t option) =
          fun (x3106 : 'tags this) ->
            Ojs.option_of_js DisplayNamesLanguageDisplay.t_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3106)
                 "languageDisplay")
        let (set_languageDisplay :
          'tags this -> DisplayNamesLanguageDisplay.t -> unit) =
          fun (x3109 : 'tags this) ->
            fun (x3110 : DisplayNamesLanguageDisplay.t) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3109)
                "languageDisplay" (DisplayNamesLanguageDisplay.t_to_js x3110)
        let (create :
          locale:UnicodeBCP47LocaleIdentifier.t ->
            style:RelativeTimeFormatStyle.t ->
              type_:DisplayNamesType.t ->
                fallback:DisplayNamesFallback.t ->
                  ?languageDisplay:DisplayNamesLanguageDisplay.t -> unit -> t)
          =
          fun ~locale:(x3112 : UnicodeBCP47LocaleIdentifier.t) ->
            fun ~style:(x3113 : RelativeTimeFormatStyle.t) ->
              fun ~type_:(x3114 : DisplayNamesType.t) ->
                fun ~fallback:(x3115 : DisplayNamesFallback.t) ->
                  fun
                    ?languageDisplay:(x3116 :
                                       DisplayNamesLanguageDisplay.t option)
                    ->
                    fun () ->
                      let x3117 = Ojs.empty_obj () in
                      Ojs.set_prop_ascii x3117 "locale"
                        (UnicodeBCP47LocaleIdentifier.t_to_js x3112);
                      Ojs.set_prop_ascii x3117 "style"
                        (RelativeTimeFormatStyle.t_to_js x3113);
                      Ojs.set_prop_ascii x3117 "type"
                        (DisplayNamesType.t_to_js x3114);
                      Ojs.set_prop_ascii x3117 "fallback"
                        (DisplayNamesFallback.t_to_js x3115);
                      (match x3116 with
                       | Some x3118 ->
                           Ojs.set_prop_ascii x3117 "languageDisplay"
                             (DisplayNamesLanguageDisplay.t_to_js x3118)
                       | None -> ());
                      t_of_js x3117
        let cast_from = Obj.magic
      end
    module LocaleHourCycleKey =
      struct
        type t = [ `L_s67_h11  | `L_s68_h12  | `L_s69_h23  | `L_s70_h24 ]
        let rec t_of_js : Ojs.t -> t =
          fun (x3120 : Ojs.t) ->
            let x3121 = x3120 in
            match Ojs.string_of_js x3121 with
            | "h11" -> `L_s67_h11
            | "h12" -> `L_s68_h12
            | "h23" -> `L_s69_h23
            | "h24" -> `L_s70_h24
            | _ -> assert false
        and t_to_js : t -> Ojs.t =
          fun
            (x3119 :
              [ `L_s67_h11  | `L_s68_h12  | `L_s69_h23  | `L_s70_h24 ])
            ->
            match x3119 with
            | `L_s67_h11 -> Ojs.string_to_js "h11"
            | `L_s68_h12 -> Ojs.string_to_js "h12"
            | `L_s69_h23 -> Ojs.string_to_js "h23"
            | `L_s70_h24 -> Ojs.string_to_js "h24"
      end
    module LocaleCollationCaseFirst =
      struct
        type t = [ `L_s139_upper  | `L_s58_false  | `L_s82_lower ]
        let rec t_of_js : Ojs.t -> t =
          fun (x3123 : Ojs.t) ->
            let x3124 = x3123 in
            match Ojs.string_of_js x3124 with
            | "upper" -> `L_s139_upper
            | "false" -> `L_s58_false
            | "lower" -> `L_s82_lower
            | _ -> assert false
        and t_to_js : t -> Ojs.t =
          fun (x3122 : [ `L_s139_upper  | `L_s58_false  | `L_s82_lower ]) ->
            match x3122 with
            | `L_s139_upper -> Ojs.string_to_js "upper"
            | `L_s58_false -> Ojs.string_to_js "false"
            | `L_s82_lower -> Ojs.string_to_js "lower"
      end
    module LocaleOptions =
      struct
        type t = [ `Intl_LocaleOptions ] intf
        let rec t_of_js : Ojs.t -> t = Obj.magic
        and t_to_js : t -> Ojs.t = Obj.magic
        type tags = [ `Intl_LocaleOptions ]
        type 'tags this =
          'tags intf constraint 'tags = [> `Intl_LocaleOptions ]
        let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
          =
          fun (type __tags) ->
            fun (__tags_of_js : Ojs.t -> __tags) ->
              fun (x3127 : Ojs.t) -> intf_of_js __tags_of_js x3127
        and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
          fun (type __tags) ->
            fun (__tags_to_js : __tags -> Ojs.t) ->
              fun (x3125 : __tags intf) -> intf_to_js __tags_to_js x3125
        let (get_baseName : 'tags this -> string option) =
          fun (x3129 : 'tags this) ->
            Ojs.option_of_js Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3129) "baseName")
        let (set_baseName : 'tags this -> string -> unit) =
          fun (x3132 : 'tags this) ->
            fun (x3133 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3132) "baseName"
                (Ojs.string_to_js x3133)
        let (get_calendar : 'tags this -> string option) =
          fun (x3135 : 'tags this) ->
            Ojs.option_of_js Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3135) "calendar")
        let (set_calendar : 'tags this -> string -> unit) =
          fun (x3138 : 'tags this) ->
            fun (x3139 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3138) "calendar"
                (Ojs.string_to_js x3139)
        let (get_caseFirst : 'tags this -> LocaleCollationCaseFirst.t option)
          =
          fun (x3141 : 'tags this) ->
            Ojs.option_of_js LocaleCollationCaseFirst.t_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3141) "caseFirst")
        let (set_caseFirst :
          'tags this -> LocaleCollationCaseFirst.t -> unit) =
          fun (x3144 : 'tags this) ->
            fun (x3145 : LocaleCollationCaseFirst.t) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3144) "caseFirst"
                (LocaleCollationCaseFirst.t_to_js x3145)
        let (get_collation : 'tags this -> string option) =
          fun (x3147 : 'tags this) ->
            Ojs.option_of_js Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3147) "collation")
        let (set_collation : 'tags this -> string -> unit) =
          fun (x3150 : 'tags this) ->
            fun (x3151 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3150) "collation"
                (Ojs.string_to_js x3151)
        let (get_hourCycle : 'tags this -> LocaleHourCycleKey.t option) =
          fun (x3153 : 'tags this) ->
            Ojs.option_of_js LocaleHourCycleKey.t_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3153) "hourCycle")
        let (set_hourCycle : 'tags this -> LocaleHourCycleKey.t -> unit) =
          fun (x3156 : 'tags this) ->
            fun (x3157 : LocaleHourCycleKey.t) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3156) "hourCycle"
                (LocaleHourCycleKey.t_to_js x3157)
        let (get_language : 'tags this -> string option) =
          fun (x3159 : 'tags this) ->
            Ojs.option_of_js Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3159) "language")
        let (set_language : 'tags this -> string -> unit) =
          fun (x3162 : 'tags this) ->
            fun (x3163 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3162) "language"
                (Ojs.string_to_js x3163)
        let (get_numberingSystem : 'tags this -> string option) =
          fun (x3165 : 'tags this) ->
            Ojs.option_of_js Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3165)
                 "numberingSystem")
        let (set_numberingSystem : 'tags this -> string -> unit) =
          fun (x3168 : 'tags this) ->
            fun (x3169 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3168)
                "numberingSystem" (Ojs.string_to_js x3169)
        let (get_numeric : 'tags this -> bool option) =
          fun (x3171 : 'tags this) ->
            Ojs.option_of_js Ojs.bool_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3171) "numeric")
        let (set_numeric : 'tags this -> bool -> unit) =
          fun (x3174 : 'tags this) ->
            fun (x3175 : bool) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3174) "numeric"
                (Ojs.bool_to_js x3175)
        let (get_region : 'tags this -> string option) =
          fun (x3177 : 'tags this) ->
            Ojs.option_of_js Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3177) "region")
        let (set_region : 'tags this -> string -> unit) =
          fun (x3180 : 'tags this) ->
            fun (x3181 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3180) "region"
                (Ojs.string_to_js x3181)
        let (get_script : 'tags this -> string option) =
          fun (x3183 : 'tags this) ->
            Ojs.option_of_js Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3183) "script")
        let (set_script : 'tags this -> string -> unit) =
          fun (x3186 : 'tags this) ->
            fun (x3187 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3186) "script"
                (Ojs.string_to_js x3187)
        let (create :
          ?baseName:string ->
            ?calendar:string ->
              ?caseFirst:LocaleCollationCaseFirst.t ->
                ?collation:string ->
                  ?hourCycle:LocaleHourCycleKey.t ->
                    ?language:string ->
                      ?numberingSystem:string ->
                        ?numeric:bool ->
                          ?region:string -> ?script:string -> unit -> t)
          =
          fun ?baseName:(x3189 : string option) ->
            fun ?calendar:(x3190 : string option) ->
              fun ?caseFirst:(x3191 : LocaleCollationCaseFirst.t option) ->
                fun ?collation:(x3192 : string option) ->
                  fun ?hourCycle:(x3193 : LocaleHourCycleKey.t option) ->
                    fun ?language:(x3194 : string option) ->
                      fun ?numberingSystem:(x3195 : string option) ->
                        fun ?numeric:(x3196 : bool option) ->
                          fun ?region:(x3197 : string option) ->
                            fun ?script:(x3198 : string option) ->
                              fun () ->
                                let x3199 = Ojs.empty_obj () in
                                (match x3189 with
                                 | Some x3209 ->
                                     Ojs.set_prop_ascii x3199 "baseName"
                                       (Ojs.string_to_js x3209)
                                 | None -> ());
                                (match x3190 with
                                 | Some x3208 ->
                                     Ojs.set_prop_ascii x3199 "calendar"
                                       (Ojs.string_to_js x3208)
                                 | None -> ());
                                (match x3191 with
                                 | Some x3207 ->
                                     Ojs.set_prop_ascii x3199 "caseFirst"
                                       (LocaleCollationCaseFirst.t_to_js
                                          x3207)
                                 | None -> ());
                                (match x3192 with
                                 | Some x3206 ->
                                     Ojs.set_prop_ascii x3199 "collation"
                                       (Ojs.string_to_js x3206)
                                 | None -> ());
                                (match x3193 with
                                 | Some x3205 ->
                                     Ojs.set_prop_ascii x3199 "hourCycle"
                                       (LocaleHourCycleKey.t_to_js x3205)
                                 | None -> ());
                                (match x3194 with
                                 | Some x3204 ->
                                     Ojs.set_prop_ascii x3199 "language"
                                       (Ojs.string_to_js x3204)
                                 | None -> ());
                                (match x3195 with
                                 | Some x3203 ->
                                     Ojs.set_prop_ascii x3199
                                       "numberingSystem"
                                       (Ojs.string_to_js x3203)
                                 | None -> ());
                                (match x3196 with
                                 | Some x3202 ->
                                     Ojs.set_prop_ascii x3199 "numeric"
                                       (Ojs.bool_to_js x3202)
                                 | None -> ());
                                (match x3197 with
                                 | Some x3201 ->
                                     Ojs.set_prop_ascii x3199 "region"
                                       (Ojs.string_to_js x3201)
                                 | None -> ());
                                (match x3198 with
                                 | Some x3200 ->
                                     Ojs.set_prop_ascii x3199 "script"
                                       (Ojs.string_to_js x3200)
                                 | None -> ());
                                t_of_js x3199
        let cast_from = Obj.magic
      end
    module Locale =
      struct
        type t = [ `Intl_Locale  | `Intl_LocaleOptions ] intf
        let rec t_of_js : Ojs.t -> t = Obj.magic
        and t_to_js : t -> Ojs.t = Obj.magic
        type tags = [ `Intl_Locale  | `Intl_LocaleOptions ]
        type 'tags this = 'tags intf constraint 'tags = [> `Intl_Locale ]
        let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
          =
          fun (type __tags) ->
            fun (__tags_of_js : Ojs.t -> __tags) ->
              fun (x3212 : Ojs.t) -> intf_of_js __tags_of_js x3212
        and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
          fun (type __tags) ->
            fun (__tags_to_js : __tags -> Ojs.t) ->
              fun (x3210 : __tags intf) -> intf_to_js __tags_to_js x3210
        let (get_baseName : 'tags this -> string) =
          fun (x3214 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3214) "baseName")
        let (set_baseName : 'tags this -> string -> unit) =
          fun (x3216 : 'tags this) ->
            fun (x3217 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3216) "baseName"
                (Ojs.string_to_js x3217)
        let (get_language : 'tags this -> string) =
          fun (x3219 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3219) "language")
        let (set_language : 'tags this -> string -> unit) =
          fun (x3221 : 'tags this) ->
            fun (x3222 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3221) "language"
                (Ojs.string_to_js x3222)
        let (maximize : 'tags this -> t) =
          fun (x3224 : 'tags this) ->
            t_of_js (Ojs.call (this_to_js Obj.magic x3224) "maximize" [||])
        let (minimize : 'tags this -> t) =
          fun (x3226 : 'tags this) ->
            t_of_js (Ojs.call (this_to_js Obj.magic x3226) "minimize" [||])
        let (toString : 'tags this -> BCP47LanguageTag.t) =
          fun (x3228 : 'tags this) ->
            BCP47LanguageTag.t_of_js
              (Ojs.call (this_to_js Obj.magic x3228) "toString" [||])
        let cast_from = Obj.magic
        let (create :
          tag:[ `U1 of BCP47LanguageTag.t  | `U2 of t ] ->
            ?options:LocaleOptions.t -> unit -> t)
          =
          fun ~tag:(x3230 : [ `U1 of BCP47LanguageTag.t  | `U2 of t ]) ->
            fun ?options:(x3231 : LocaleOptions.t option) ->
              fun () ->
                t_of_js
                  (Ojs.new_obj_arr
                     (Ojs.get_prop_ascii
                        (Ojs.get_prop_ascii Ojs.global "Intl") "Locale")
                     (let x3232 =
                        Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                          [||] in
                      ignore
                        (Ojs.call x3232 "push"
                           [|((match x3230 with
                               | `U1 x3234 -> BCP47LanguageTag.t_to_js x3234
                               | `U2 x3235 -> t_to_js x3235))|]);
                      (match x3231 with
                       | Some x3233 ->
                           ignore
                             (Ojs.call x3232 "push"
                                [|(LocaleOptions.t_to_js x3233)|])
                       | None -> ());
                      x3232))
      end
    module LocalesArgument =
      struct
        type t =
          (Locale.t, UnicodeBCP47LocaleIdentifier.t,
            (Locale.t, UnicodeBCP47LocaleIdentifier.t) union2 list) union3
            option
        let rec t_of_js : Ojs.t -> t =
          fun (x3244 : Ojs.t) ->
            Ojs.option_of_js
              (fun (x3245 : Ojs.t) ->
                 union3_of_js Locale.t_of_js
                   UnicodeBCP47LocaleIdentifier.t_of_js
                   (fun (x3248 : Ojs.t) ->
                      Ojs.list_of_js
                        (fun (x3249 : Ojs.t) ->
                           union2_of_js Locale.t_of_js
                             UnicodeBCP47LocaleIdentifier.t_of_js x3249)
                        x3248) x3245) x3244
        and t_to_js : t -> Ojs.t =
          fun
            (x3236 :
              (Locale.t, UnicodeBCP47LocaleIdentifier.t,
                (Locale.t, UnicodeBCP47LocaleIdentifier.t) union2 list)
                union3 option)
            ->
            Ojs.option_to_js
              (fun
                 (x3237 :
                   (Locale.t, UnicodeBCP47LocaleIdentifier.t,
                     (Locale.t, UnicodeBCP47LocaleIdentifier.t) union2 list)
                     union3)
                 ->
                 union3_to_js Locale.t_to_js
                   UnicodeBCP47LocaleIdentifier.t_to_js
                   (fun
                      (x3240 :
                        (Locale.t, UnicodeBCP47LocaleIdentifier.t) union2
                          list)
                      ->
                      Ojs.list_to_js
                        (fun
                           (x3241 :
                             (Locale.t, UnicodeBCP47LocaleIdentifier.t)
                               union2)
                           ->
                           union2_to_js Locale.t_to_js
                             UnicodeBCP47LocaleIdentifier.t_to_js x3241)
                        x3240) x3237) x3236
      end
    module DisplayNamesOptions =
      struct
        type t = [ `Intl_DisplayNamesOptions ] intf
        let rec t_of_js : Ojs.t -> t = Obj.magic
        and t_to_js : t -> Ojs.t = Obj.magic
        type tags = [ `Intl_DisplayNamesOptions ]
        type 'tags this =
          'tags intf constraint 'tags = [> `Intl_DisplayNamesOptions ]
        let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
          =
          fun (type __tags) ->
            fun (__tags_of_js : Ojs.t -> __tags) ->
              fun (x3254 : Ojs.t) -> intf_of_js __tags_of_js x3254
        and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
          fun (type __tags) ->
            fun (__tags_to_js : __tags -> Ojs.t) ->
              fun (x3252 : __tags intf) -> intf_to_js __tags_to_js x3252
        let (get_localeMatcher :
          'tags this -> RelativeTimeFormatLocaleMatcher.t option) =
          fun (x3256 : 'tags this) ->
            Ojs.option_of_js RelativeTimeFormatLocaleMatcher.t_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3256)
                 "localeMatcher")
        let (set_localeMatcher :
          'tags this -> RelativeTimeFormatLocaleMatcher.t -> unit) =
          fun (x3259 : 'tags this) ->
            fun (x3260 : RelativeTimeFormatLocaleMatcher.t) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3259) "localeMatcher"
                (RelativeTimeFormatLocaleMatcher.t_to_js x3260)
        let (get_style : 'tags this -> RelativeTimeFormatStyle.t option) =
          fun (x3262 : 'tags this) ->
            Ojs.option_of_js RelativeTimeFormatStyle.t_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3262) "style")
        let (set_style : 'tags this -> RelativeTimeFormatStyle.t -> unit) =
          fun (x3265 : 'tags this) ->
            fun (x3266 : RelativeTimeFormatStyle.t) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3265) "style"
                (RelativeTimeFormatStyle.t_to_js x3266)
        let (get_type : 'tags this -> DisplayNamesType.t) =
          fun (x3268 : 'tags this) ->
            DisplayNamesType.t_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3268) "type")
        let (set_type : 'tags this -> DisplayNamesType.t -> unit) =
          fun (x3270 : 'tags this) ->
            fun (x3271 : DisplayNamesType.t) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3270) "type"
                (DisplayNamesType.t_to_js x3271)
        let (get_languageDisplay :
          'tags this -> DisplayNamesLanguageDisplay.t option) =
          fun (x3273 : 'tags this) ->
            Ojs.option_of_js DisplayNamesLanguageDisplay.t_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3273)
                 "languageDisplay")
        let (set_languageDisplay :
          'tags this -> DisplayNamesLanguageDisplay.t -> unit) =
          fun (x3276 : 'tags this) ->
            fun (x3277 : DisplayNamesLanguageDisplay.t) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3276)
                "languageDisplay" (DisplayNamesLanguageDisplay.t_to_js x3277)
        let (get_fallback : 'tags this -> DisplayNamesFallback.t option) =
          fun (x3279 : 'tags this) ->
            Ojs.option_of_js DisplayNamesFallback.t_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3279) "fallback")
        let (set_fallback : 'tags this -> DisplayNamesFallback.t -> unit) =
          fun (x3282 : 'tags this) ->
            fun (x3283 : DisplayNamesFallback.t) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3282) "fallback"
                (DisplayNamesFallback.t_to_js x3283)
        let (create :
          ?localeMatcher:RelativeTimeFormatLocaleMatcher.t ->
            ?style:RelativeTimeFormatStyle.t ->
              type_:DisplayNamesType.t ->
                ?languageDisplay:DisplayNamesLanguageDisplay.t ->
                  ?fallback:DisplayNamesFallback.t -> unit -> t)
          =
          fun
            ?localeMatcher:(x3285 : RelativeTimeFormatLocaleMatcher.t option)
            ->
            fun ?style:(x3286 : RelativeTimeFormatStyle.t option) ->
              fun ~type_:(x3287 : DisplayNamesType.t) ->
                fun
                  ?languageDisplay:(x3288 :
                                     DisplayNamesLanguageDisplay.t option)
                  ->
                  fun ?fallback:(x3289 : DisplayNamesFallback.t option) ->
                    fun () ->
                      let x3290 = Ojs.empty_obj () in
                      (match x3285 with
                       | Some x3294 ->
                           Ojs.set_prop_ascii x3290 "localeMatcher"
                             (RelativeTimeFormatLocaleMatcher.t_to_js x3294)
                       | None -> ());
                      (match x3286 with
                       | Some x3293 ->
                           Ojs.set_prop_ascii x3290 "style"
                             (RelativeTimeFormatStyle.t_to_js x3293)
                       | None -> ());
                      Ojs.set_prop_ascii x3290 "type"
                        (DisplayNamesType.t_to_js x3287);
                      (match x3288 with
                       | Some x3292 ->
                           Ojs.set_prop_ascii x3290 "languageDisplay"
                             (DisplayNamesLanguageDisplay.t_to_js x3292)
                       | None -> ());
                      (match x3289 with
                       | Some x3291 ->
                           Ojs.set_prop_ascii x3290 "fallback"
                             (DisplayNamesFallback.t_to_js x3291)
                       | None -> ());
                      t_of_js x3290
        let cast_from = Obj.magic
      end
    module DisplayNames =
      struct
        module AnonymousInterface4 =
          struct
            type t = Ojs.t
            let rec t_of_js : Ojs.t -> t = fun (x3296 : Ojs.t) -> x3296
            and t_to_js : t -> Ojs.t = fun (x3295 : Ojs.t) -> x3295
            let (get_localeMatcher :
              t -> RelativeTimeFormatLocaleMatcher.t option) =
              fun (x3297 : t) ->
                Ojs.option_of_js RelativeTimeFormatLocaleMatcher.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x3297) "localeMatcher")
            let (set_localeMatcher :
              t -> RelativeTimeFormatLocaleMatcher.t -> unit) =
              fun (x3299 : t) ->
                fun (x3300 : RelativeTimeFormatLocaleMatcher.t) ->
                  Ojs.set_prop_ascii (t_to_js x3299) "localeMatcher"
                    (RelativeTimeFormatLocaleMatcher.t_to_js x3300)
            let (create :
              ?localeMatcher:RelativeTimeFormatLocaleMatcher.t -> unit -> t)
              =
              fun
                ?localeMatcher:(x3301 :
                                 RelativeTimeFormatLocaleMatcher.t option)
                ->
                fun () ->
                  let x3302 = Ojs.empty_obj () in
                  (match x3301 with
                   | Some x3303 ->
                       Ojs.set_prop_ascii x3302 "localeMatcher"
                         (RelativeTimeFormatLocaleMatcher.t_to_js x3303)
                   | None -> ());
                  t_of_js x3302
          end
        type t = [ `Intl_DisplayNames ] intf
        let rec t_of_js : Ojs.t -> t = Obj.magic
        and t_to_js : t -> Ojs.t = Obj.magic
        type tags = [ `Intl_DisplayNames ]
        type 'tags this =
          'tags intf constraint 'tags = [> `Intl_DisplayNames ]
        let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
          =
          fun (type __tags) ->
            fun (__tags_of_js : Ojs.t -> __tags) ->
              fun (x3306 : Ojs.t) -> intf_of_js __tags_of_js x3306
        and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
          fun (type __tags) ->
            fun (__tags_to_js : __tags -> Ojs.t) ->
              fun (x3304 : __tags intf) -> intf_to_js __tags_to_js x3304
        let (of_ : 'tags this -> code:string -> string option) =
          fun (x3309 : 'tags this) ->
            fun ~code:(x3308 : string) ->
              Ojs.option_of_js Ojs.string_of_js
                (Ojs.call (this_to_js Obj.magic x3309) "of"
                   [|(Ojs.string_to_js x3308)|])
        let (resolvedOptions : 'tags this -> ResolvedDisplayNamesOptions.t) =
          fun (x3312 : 'tags this) ->
            ResolvedDisplayNamesOptions.t_of_js
              (Ojs.call (this_to_js Obj.magic x3312) "resolvedOptions" [||])
        let cast_from = Obj.magic
        let (prototype : unit -> t) =
          fun () ->
            t_of_js
              (Ojs.get_prop_ascii
                 (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Intl")
                    "DisplayNames") "prototype")
        let (create :
          locales:LocalesArgument.t -> options:DisplayNamesOptions.t -> t) =
          fun ~locales:(x3314 : LocalesArgument.t) ->
            fun ~options:(x3315 : DisplayNamesOptions.t) ->
              t_of_js
                (Ojs.new_obj
                   (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Intl")
                      "DisplayNames")
                   [|(LocalesArgument.t_to_js x3314);(DisplayNamesOptions.t_to_js
                                                        x3315)|])
        let (supportedLocalesOf :
          ?locales:LocalesArgument.t ->
            ?options:AnonymousInterface4.t -> unit -> BCP47LanguageTag.t list)
          =
          fun ?locales:(x3316 : LocalesArgument.t option) ->
            fun ?options:(x3317 : AnonymousInterface4.t option) ->
              fun () ->
                Ojs.list_of_js BCP47LanguageTag.t_of_js
                  (let x3321 =
                     Ojs.get_prop_ascii
                       (Ojs.get_prop_ascii Ojs.global "Intl") "DisplayNames" in
                   Ojs.call (Ojs.get_prop_ascii x3321 "supportedLocalesOf")
                     "apply"
                     [|x3321;((let x3318 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               (match x3316 with
                                | Some x3320 ->
                                    ignore
                                      (Ojs.call x3318 "push"
                                         [|(LocalesArgument.t_to_js x3320)|])
                                | None -> ());
                               (match x3317 with
                                | Some x3319 ->
                                    ignore
                                      (Ojs.call x3318 "push"
                                         [|(AnonymousInterface4.t_to_js x3319)|])
                                | None -> ());
                               x3318))|])
      end
    module DateTimeFormatPartTypesRegistry =
      struct
        type t = [ `Intl_DateTimeFormatPartTypesRegistry ] intf
        let rec t_of_js : Ojs.t -> t = Obj.magic
        and t_to_js : t -> Ojs.t = Obj.magic
        type tags = [ `Intl_DateTimeFormatPartTypesRegistry ]
        type 'tags this =
          'tags intf constraint 'tags =
                      [> `Intl_DateTimeFormatPartTypesRegistry ]
        let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
          =
          fun (type __tags) ->
            fun (__tags_of_js : Ojs.t -> __tags) ->
              fun (x3325 : Ojs.t) -> intf_of_js __tags_of_js x3325
        and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
          fun (type __tags) ->
            fun (__tags_to_js : __tags -> Ojs.t) ->
              fun (x3323 : __tags intf) -> intf_to_js __tags_to_js x3323
        let (get_fractionalSecond : 'tags this -> any) =
          fun (x3327 : 'tags this) ->
            any_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3327)
                 "fractionalSecond")
        let (set_fractionalSecond : 'tags this -> any -> unit) =
          fun (x3329 : 'tags this) ->
            fun (x3330 : any) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3329)
                "fractionalSecond" (any_to_js x3330)
        let (get_unknown : 'tags this -> any) =
          fun (x3332 : 'tags this) ->
            any_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3332) "unknown")
        let (set_unknown : 'tags this -> any -> unit) =
          fun (x3334 : 'tags this) ->
            fun (x3335 : any) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3334) "unknown"
                (any_to_js x3335)
        let (get_day : 'tags this -> any) =
          fun (x3337 : 'tags this) ->
            any_of_js (Ojs.get_prop_ascii (this_to_js Obj.magic x3337) "day")
        let (set_day : 'tags this -> any -> unit) =
          fun (x3339 : 'tags this) ->
            fun (x3340 : any) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3339) "day"
                (any_to_js x3340)
        let (get_dayPeriod : 'tags this -> any) =
          fun (x3342 : 'tags this) ->
            any_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3342) "dayPeriod")
        let (set_dayPeriod : 'tags this -> any -> unit) =
          fun (x3344 : 'tags this) ->
            fun (x3345 : any) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3344) "dayPeriod"
                (any_to_js x3345)
        let (get_era : 'tags this -> any) =
          fun (x3347 : 'tags this) ->
            any_of_js (Ojs.get_prop_ascii (this_to_js Obj.magic x3347) "era")
        let (set_era : 'tags this -> any -> unit) =
          fun (x3349 : 'tags this) ->
            fun (x3350 : any) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3349) "era"
                (any_to_js x3350)
        let (get_hour : 'tags this -> any) =
          fun (x3352 : 'tags this) ->
            any_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3352) "hour")
        let (set_hour : 'tags this -> any -> unit) =
          fun (x3354 : 'tags this) ->
            fun (x3355 : any) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3354) "hour"
                (any_to_js x3355)
        let (get_literal : 'tags this -> any) =
          fun (x3357 : 'tags this) ->
            any_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3357) "literal")
        let (set_literal : 'tags this -> any -> unit) =
          fun (x3359 : 'tags this) ->
            fun (x3360 : any) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3359) "literal"
                (any_to_js x3360)
        let (get_minute : 'tags this -> any) =
          fun (x3362 : 'tags this) ->
            any_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3362) "minute")
        let (set_minute : 'tags this -> any -> unit) =
          fun (x3364 : 'tags this) ->
            fun (x3365 : any) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3364) "minute"
                (any_to_js x3365)
        let (get_month : 'tags this -> any) =
          fun (x3367 : 'tags this) ->
            any_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3367) "month")
        let (set_month : 'tags this -> any -> unit) =
          fun (x3369 : 'tags this) ->
            fun (x3370 : any) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3369) "month"
                (any_to_js x3370)
        let (get_second : 'tags this -> any) =
          fun (x3372 : 'tags this) ->
            any_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3372) "second")
        let (set_second : 'tags this -> any -> unit) =
          fun (x3374 : 'tags this) ->
            fun (x3375 : any) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3374) "second"
                (any_to_js x3375)
        let (get_timeZoneName : 'tags this -> any) =
          fun (x3377 : 'tags this) ->
            any_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3377) "timeZoneName")
        let (set_timeZoneName : 'tags this -> any -> unit) =
          fun (x3379 : 'tags this) ->
            fun (x3380 : any) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3379) "timeZoneName"
                (any_to_js x3380)
        let (get_weekday : 'tags this -> any) =
          fun (x3382 : 'tags this) ->
            any_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3382) "weekday")
        let (set_weekday : 'tags this -> any -> unit) =
          fun (x3384 : 'tags this) ->
            fun (x3385 : any) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3384) "weekday"
                (any_to_js x3385)
        let (get_year : 'tags this -> any) =
          fun (x3387 : 'tags this) ->
            any_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3387) "year")
        let (set_year : 'tags this -> any -> unit) =
          fun (x3389 : 'tags this) ->
            fun (x3390 : any) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3389) "year"
                (any_to_js x3390)
        let (create :
          fractionalSecond:any ->
            unknown:any ->
              day:any ->
                dayPeriod:any ->
                  era:any ->
                    hour:any ->
                      literal:any ->
                        minute:any ->
                          month:any ->
                            second:any ->
                              timeZoneName:any ->
                                weekday:any -> year:any -> unit -> t)
          =
          fun ~fractionalSecond:(x3392 : any) ->
            fun ~unknown:(x3393 : any) ->
              fun ~day:(x3394 : any) ->
                fun ~dayPeriod:(x3395 : any) ->
                  fun ~era:(x3396 : any) ->
                    fun ~hour:(x3397 : any) ->
                      fun ~literal:(x3398 : any) ->
                        fun ~minute:(x3399 : any) ->
                          fun ~month:(x3400 : any) ->
                            fun ~second:(x3401 : any) ->
                              fun ~timeZoneName:(x3402 : any) ->
                                fun ~weekday:(x3403 : any) ->
                                  fun ~year:(x3404 : any) ->
                                    fun () ->
                                      let x3405 = Ojs.empty_obj () in
                                      Ojs.set_prop_ascii x3405
                                        "fractionalSecond" (any_to_js x3392);
                                      Ojs.set_prop_ascii x3405 "unknown"
                                        (any_to_js x3393);
                                      Ojs.set_prop_ascii x3405 "day"
                                        (any_to_js x3394);
                                      Ojs.set_prop_ascii x3405 "dayPeriod"
                                        (any_to_js x3395);
                                      Ojs.set_prop_ascii x3405 "era"
                                        (any_to_js x3396);
                                      Ojs.set_prop_ascii x3405 "hour"
                                        (any_to_js x3397);
                                      Ojs.set_prop_ascii x3405 "literal"
                                        (any_to_js x3398);
                                      Ojs.set_prop_ascii x3405 "minute"
                                        (any_to_js x3399);
                                      Ojs.set_prop_ascii x3405 "month"
                                        (any_to_js x3400);
                                      Ojs.set_prop_ascii x3405 "second"
                                        (any_to_js x3401);
                                      Ojs.set_prop_ascii x3405 "timeZoneName"
                                        (any_to_js x3402);
                                      Ojs.set_prop_ascii x3405 "weekday"
                                        (any_to_js x3403);
                                      Ojs.set_prop_ascii x3405 "year"
                                        (any_to_js x3404);
                                      t_of_js x3405
        let cast_from = Obj.magic
      end
    module ResolvedDateTimeFormatOptions =
      struct
        type t = [ `Intl_ResolvedDateTimeFormatOptions ] intf
        let rec t_of_js : Ojs.t -> t = Obj.magic
        and t_to_js : t -> Ojs.t = Obj.magic
        type tags = [ `Intl_ResolvedDateTimeFormatOptions ]
        type 'tags this =
          'tags intf constraint 'tags =
                      [> `Intl_ResolvedDateTimeFormatOptions ]
        let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
          =
          fun (type __tags) ->
            fun (__tags_of_js : Ojs.t -> __tags) ->
              fun (x3408 : Ojs.t) -> intf_of_js __tags_of_js x3408
        and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
          fun (type __tags) ->
            fun (__tags_to_js : __tags -> Ojs.t) ->
              fun (x3406 : __tags intf) -> intf_to_js __tags_to_js x3406
        let (get_formatMatcher :
          'tags this -> [ `L_s25_basic  | `L_s26_best_fit ] option) =
          fun (x3410 : 'tags this) ->
            Ojs.option_of_js
              (fun (x3412 : Ojs.t) ->
                 let x3413 = x3412 in
                 match Ojs.string_of_js x3413 with
                 | "basic" -> `L_s25_basic
                 | "best fit" -> `L_s26_best_fit
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3410)
                 "formatMatcher")
        let (set_formatMatcher :
          'tags this ->
            [ `U1 of [ `L_s25_basic ]  | `U2 of [ `L_s26_best_fit ] ] -> unit)
          =
          fun (x3414 : 'tags this) ->
            fun
              (x3415 :
                [ `U1 of [ `L_s25_basic ]  | `U2 of [ `L_s26_best_fit ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3414) "formatMatcher"
                (match x3415 with
                 | `U1 x3416 ->
                     (match x3416 with
                      | `L_s25_basic -> Ojs.string_to_js "basic")
                 | `U2 x3417 ->
                     (match x3417 with
                      | `L_s26_best_fit -> Ojs.string_to_js "best fit"))
        let (get_dateStyle :
          'tags this ->
            [ `L_s122_short  | `L_s63_full  | `L_s78_long  | `L_s84_medium ]
              option)
          =
          fun (x3419 : 'tags this) ->
            Ojs.option_of_js
              (fun (x3421 : Ojs.t) ->
                 let x3422 = x3421 in
                 match Ojs.string_of_js x3422 with
                 | "short" -> `L_s122_short
                 | "full" -> `L_s63_full
                 | "long" -> `L_s78_long
                 | "medium" -> `L_s84_medium
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3419) "dateStyle")
        let (set_dateStyle :
          'tags this ->
            [ `U1 of [ `L_s63_full ]  | `U2 of [ `L_s78_long ] 
            | `U3 of [ `L_s84_medium ]  | `U4 of [ `L_s122_short ] ] -> 
              unit)
          =
          fun (x3423 : 'tags this) ->
            fun
              (x3424 :
                [ `U1 of [ `L_s63_full ]  | `U2 of [ `L_s78_long ] 
                | `U3 of [ `L_s84_medium ]  | `U4 of [ `L_s122_short ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3423) "dateStyle"
                (match x3424 with
                 | `U1 x3425 ->
                     (match x3425 with
                      | `L_s63_full -> Ojs.string_to_js "full")
                 | `U2 x3426 ->
                     (match x3426 with
                      | `L_s78_long -> Ojs.string_to_js "long")
                 | `U3 x3427 ->
                     (match x3427 with
                      | `L_s84_medium -> Ojs.string_to_js "medium")
                 | `U4 x3428 ->
                     (match x3428 with
                      | `L_s122_short -> Ojs.string_to_js "short"))
        let (get_timeStyle :
          'tags this ->
            [ `L_s122_short  | `L_s63_full  | `L_s78_long  | `L_s84_medium ]
              option)
          =
          fun (x3430 : 'tags this) ->
            Ojs.option_of_js
              (fun (x3432 : Ojs.t) ->
                 let x3433 = x3432 in
                 match Ojs.string_of_js x3433 with
                 | "short" -> `L_s122_short
                 | "full" -> `L_s63_full
                 | "long" -> `L_s78_long
                 | "medium" -> `L_s84_medium
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3430) "timeStyle")
        let (set_timeStyle :
          'tags this ->
            [ `U1 of [ `L_s63_full ]  | `U2 of [ `L_s78_long ] 
            | `U3 of [ `L_s84_medium ]  | `U4 of [ `L_s122_short ] ] -> 
              unit)
          =
          fun (x3434 : 'tags this) ->
            fun
              (x3435 :
                [ `U1 of [ `L_s63_full ]  | `U2 of [ `L_s78_long ] 
                | `U3 of [ `L_s84_medium ]  | `U4 of [ `L_s122_short ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3434) "timeStyle"
                (match x3435 with
                 | `U1 x3436 ->
                     (match x3436 with
                      | `L_s63_full -> Ojs.string_to_js "full")
                 | `U2 x3437 ->
                     (match x3437 with
                      | `L_s78_long -> Ojs.string_to_js "long")
                 | `U3 x3438 ->
                     (match x3438 with
                      | `L_s84_medium -> Ojs.string_to_js "medium")
                 | `U4 x3439 ->
                     (match x3439 with
                      | `L_s122_short -> Ojs.string_to_js "short"))
        let (get_hourCycle :
          'tags this ->
            [ `L_s67_h11  | `L_s68_h12  | `L_s69_h23  | `L_s70_h24 ] option)
          =
          fun (x3441 : 'tags this) ->
            Ojs.option_of_js
              (fun (x3443 : Ojs.t) ->
                 let x3444 = x3443 in
                 match Ojs.string_of_js x3444 with
                 | "h11" -> `L_s67_h11
                 | "h12" -> `L_s68_h12
                 | "h23" -> `L_s69_h23
                 | "h24" -> `L_s70_h24
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3441) "hourCycle")
        let (set_hourCycle :
          'tags this ->
            [ `U1 of [ `L_s67_h11 ]  | `U2 of [ `L_s68_h12 ] 
            | `U3 of [ `L_s69_h23 ]  | `U4 of [ `L_s70_h24 ] ] -> unit)
          =
          fun (x3445 : 'tags this) ->
            fun
              (x3446 :
                [ `U1 of [ `L_s67_h11 ]  | `U2 of [ `L_s68_h12 ] 
                | `U3 of [ `L_s69_h23 ]  | `U4 of [ `L_s70_h24 ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3445) "hourCycle"
                (match x3446 with
                 | `U1 x3447 ->
                     (match x3447 with | `L_s67_h11 -> Ojs.string_to_js "h11")
                 | `U2 x3448 ->
                     (match x3448 with | `L_s68_h12 -> Ojs.string_to_js "h12")
                 | `U3 x3449 ->
                     (match x3449 with | `L_s69_h23 -> Ojs.string_to_js "h23")
                 | `U4 x3450 ->
                     (match x3450 with | `L_s70_h24 -> Ojs.string_to_js "h24"))
        let (get_dayPeriod :
          'tags this ->
            [ `L_s122_short  | `L_s78_long  | `L_s92_narrow ] option)
          =
          fun (x3452 : 'tags this) ->
            Ojs.option_of_js
              (fun (x3454 : Ojs.t) ->
                 let x3455 = x3454 in
                 match Ojs.string_of_js x3455 with
                 | "short" -> `L_s122_short
                 | "long" -> `L_s78_long
                 | "narrow" -> `L_s92_narrow
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3452) "dayPeriod")
        let (set_dayPeriod :
          'tags this ->
            [ `U1 of [ `L_s92_narrow ]  | `U2 of [ `L_s122_short ] 
            | `U3 of [ `L_s78_long ] ] -> unit)
          =
          fun (x3456 : 'tags this) ->
            fun
              (x3457 :
                [ `U1 of [ `L_s92_narrow ]  | `U2 of [ `L_s122_short ] 
                | `U3 of [ `L_s78_long ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3456) "dayPeriod"
                (match x3457 with
                 | `U1 x3458 ->
                     (match x3458 with
                      | `L_s92_narrow -> Ojs.string_to_js "narrow")
                 | `U2 x3459 ->
                     (match x3459 with
                      | `L_s122_short -> Ojs.string_to_js "short")
                 | `U3 x3460 ->
                     (match x3460 with
                      | `L_s78_long -> Ojs.string_to_js "long"))
        let (get_fractionalSecondDigits :
          'tags this -> [ `L_n_1  | `L_n_2  | `L_n_3 ] option) =
          fun (x3462 : 'tags this) ->
            Ojs.option_of_js
              (fun (x3464 : Ojs.t) ->
                 let x3465 = x3464 in
                 match Ojs.int_of_js x3465 with
                 | 1 -> `L_n_1
                 | 2 -> `L_n_2
                 | 3 -> `L_n_3
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3462)
                 "fractionalSecondDigits")
        let (set_fractionalSecondDigits :
          'tags this ->
            [ `U1 of [ `L_n_1 ]  | `U2 of [ `L_n_2 ]  | `U3 of [ `L_n_3 ] ]
              -> unit)
          =
          fun (x3466 : 'tags this) ->
            fun
              (x3467 :
                [ `U1 of [ `L_n_1 ]  | `U2 of [ `L_n_2 ] 
                | `U3 of [ `L_n_3 ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3466)
                "fractionalSecondDigits"
                (match x3467 with
                 | `U1 x3468 ->
                     (match x3468 with | `L_n_1 -> Ojs.int_to_js 1)
                 | `U2 x3469 ->
                     (match x3469 with | `L_n_2 -> Ojs.int_to_js 2)
                 | `U3 x3470 ->
                     (match x3470 with | `L_n_3 -> Ojs.int_to_js 3))
        let (get_locale : 'tags this -> string) =
          fun (x3472 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3472) "locale")
        let (set_locale : 'tags this -> string -> unit) =
          fun (x3474 : 'tags this) ->
            fun (x3475 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3474) "locale"
                (Ojs.string_to_js x3475)
        let (get_calendar : 'tags this -> string) =
          fun (x3477 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3477) "calendar")
        let (set_calendar : 'tags this -> string -> unit) =
          fun (x3479 : 'tags this) ->
            fun (x3480 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3479) "calendar"
                (Ojs.string_to_js x3480)
        let (get_numberingSystem : 'tags this -> string) =
          fun (x3482 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3482)
                 "numberingSystem")
        let (set_numberingSystem : 'tags this -> string -> unit) =
          fun (x3484 : 'tags this) ->
            fun (x3485 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3484)
                "numberingSystem" (Ojs.string_to_js x3485)
        let (get_timeZone : 'tags this -> string) =
          fun (x3487 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3487) "timeZone")
        let (set_timeZone : 'tags this -> string -> unit) =
          fun (x3489 : 'tags this) ->
            fun (x3490 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3489) "timeZone"
                (Ojs.string_to_js x3490)
        let (get_hour12 : 'tags this -> bool option) =
          fun (x3492 : 'tags this) ->
            Ojs.option_of_js Ojs.bool_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3492) "hour12")
        let (set_hour12 : 'tags this -> bool -> unit) =
          fun (x3495 : 'tags this) ->
            fun (x3496 : bool) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3495) "hour12"
                (Ojs.bool_to_js x3496)
        let (get_weekday : 'tags this -> string option) =
          fun (x3498 : 'tags this) ->
            Ojs.option_of_js Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3498) "weekday")
        let (set_weekday : 'tags this -> string -> unit) =
          fun (x3501 : 'tags this) ->
            fun (x3502 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3501) "weekday"
                (Ojs.string_to_js x3502)
        let (get_era : 'tags this -> string option) =
          fun (x3504 : 'tags this) ->
            Ojs.option_of_js Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3504) "era")
        let (set_era : 'tags this -> string -> unit) =
          fun (x3507 : 'tags this) ->
            fun (x3508 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3507) "era"
                (Ojs.string_to_js x3508)
        let (get_year : 'tags this -> string option) =
          fun (x3510 : 'tags this) ->
            Ojs.option_of_js Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3510) "year")
        let (set_year : 'tags this -> string -> unit) =
          fun (x3513 : 'tags this) ->
            fun (x3514 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3513) "year"
                (Ojs.string_to_js x3514)
        let (get_month : 'tags this -> string option) =
          fun (x3516 : 'tags this) ->
            Ojs.option_of_js Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3516) "month")
        let (set_month : 'tags this -> string -> unit) =
          fun (x3519 : 'tags this) ->
            fun (x3520 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3519) "month"
                (Ojs.string_to_js x3520)
        let (get_day : 'tags this -> string option) =
          fun (x3522 : 'tags this) ->
            Ojs.option_of_js Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3522) "day")
        let (set_day : 'tags this -> string -> unit) =
          fun (x3525 : 'tags this) ->
            fun (x3526 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3525) "day"
                (Ojs.string_to_js x3526)
        let (get_hour : 'tags this -> string option) =
          fun (x3528 : 'tags this) ->
            Ojs.option_of_js Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3528) "hour")
        let (set_hour : 'tags this -> string -> unit) =
          fun (x3531 : 'tags this) ->
            fun (x3532 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3531) "hour"
                (Ojs.string_to_js x3532)
        let (get_minute : 'tags this -> string option) =
          fun (x3534 : 'tags this) ->
            Ojs.option_of_js Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3534) "minute")
        let (set_minute : 'tags this -> string -> unit) =
          fun (x3537 : 'tags this) ->
            fun (x3538 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3537) "minute"
                (Ojs.string_to_js x3538)
        let (get_second : 'tags this -> string option) =
          fun (x3540 : 'tags this) ->
            Ojs.option_of_js Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3540) "second")
        let (set_second : 'tags this -> string -> unit) =
          fun (x3543 : 'tags this) ->
            fun (x3544 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3543) "second"
                (Ojs.string_to_js x3544)
        let (get_timeZoneName : 'tags this -> string option) =
          fun (x3546 : 'tags this) ->
            Ojs.option_of_js Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3546) "timeZoneName")
        let (set_timeZoneName : 'tags this -> string -> unit) =
          fun (x3549 : 'tags this) ->
            fun (x3550 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3549) "timeZoneName"
                (Ojs.string_to_js x3550)
        let (create :
          ?formatMatcher:[ `L_s25_basic  | `L_s26_best_fit ] ->
            ?dateStyle:[ `L_s122_short  | `L_s63_full  | `L_s78_long 
                       | `L_s84_medium ]
              ->
              ?timeStyle:[ `L_s122_short  | `L_s63_full  | `L_s78_long 
                         | `L_s84_medium ]
                ->
                ?hourCycle:[ `L_s67_h11  | `L_s68_h12  | `L_s69_h23 
                           | `L_s70_h24 ]
                  ->
                  ?dayPeriod:[ `L_s122_short  | `L_s78_long 
                             | `L_s92_narrow ]
                    ->
                    ?fractionalSecondDigits:[ `L_n_1  | `L_n_2  | `L_n_3 ] ->
                      locale:string ->
                        calendar:string ->
                          numberingSystem:string ->
                            timeZone:string ->
                              ?hour12:bool ->
                                ?weekday:string ->
                                  ?era:string ->
                                    ?year:string ->
                                      ?month:string ->
                                        ?day:string ->
                                          ?hour:string ->
                                            ?minute:string ->
                                              ?second:string ->
                                                ?timeZoneName:string ->
                                                  unit -> t)
          =
          fun
            ?formatMatcher:(x3552 :
                             [ `L_s25_basic  | `L_s26_best_fit ] option)
            ->
            fun
              ?dateStyle:(x3553 :
                           [ `L_s122_short  | `L_s63_full  | `L_s78_long 
                           | `L_s84_medium ] option)
              ->
              fun
                ?timeStyle:(x3554 :
                             [ `L_s122_short  | `L_s63_full  | `L_s78_long 
                             | `L_s84_medium ] option)
                ->
                fun
                  ?hourCycle:(x3555 :
                               [ `L_s67_h11  | `L_s68_h12  | `L_s69_h23 
                               | `L_s70_h24 ] option)
                  ->
                  fun
                    ?dayPeriod:(x3556 :
                                 [ `L_s122_short  | `L_s78_long 
                                 | `L_s92_narrow ] option)
                    ->
                    fun
                      ?fractionalSecondDigits:(x3557 :
                                                [ `L_n_1  | `L_n_2 
                                                | `L_n_3 ] option)
                      ->
                      fun ~locale:(x3558 : string) ->
                        fun ~calendar:(x3559 : string) ->
                          fun ~numberingSystem:(x3560 : string) ->
                            fun ~timeZone:(x3561 : string) ->
                              fun ?hour12:(x3562 : bool option) ->
                                fun ?weekday:(x3563 : string option) ->
                                  fun ?era:(x3564 : string option) ->
                                    fun ?year:(x3565 : string option) ->
                                      fun ?month:(x3566 : string option) ->
                                        fun ?day:(x3567 : string option) ->
                                          fun ?hour:(x3568 : string option)
                                            ->
                                            fun
                                              ?minute:(x3569 : string option)
                                              ->
                                              fun
                                                ?second:(x3570 :
                                                          string option)
                                                ->
                                                fun
                                                  ?timeZoneName:(x3571 :
                                                                  string
                                                                    option)
                                                  ->
                                                  fun () ->
                                                    let x3572 =
                                                      Ojs.empty_obj () in
                                                    (match x3552 with
                                                     | Some x3588 ->
                                                         Ojs.set_prop_ascii
                                                           x3572
                                                           "formatMatcher"
                                                           (match x3588 with
                                                            | `L_s25_basic ->
                                                                Ojs.string_to_js
                                                                  "basic"
                                                            | `L_s26_best_fit
                                                                ->
                                                                Ojs.string_to_js
                                                                  "best fit")
                                                     | None -> ());
                                                    (match x3553 with
                                                     | Some x3587 ->
                                                         Ojs.set_prop_ascii
                                                           x3572 "dateStyle"
                                                           (match x3587 with
                                                            | `L_s122_short
                                                                ->
                                                                Ojs.string_to_js
                                                                  "short"
                                                            | `L_s63_full ->
                                                                Ojs.string_to_js
                                                                  "full"
                                                            | `L_s78_long ->
                                                                Ojs.string_to_js
                                                                  "long"
                                                            | `L_s84_medium
                                                                ->
                                                                Ojs.string_to_js
                                                                  "medium")
                                                     | None -> ());
                                                    (match x3554 with
                                                     | Some x3586 ->
                                                         Ojs.set_prop_ascii
                                                           x3572 "timeStyle"
                                                           (match x3586 with
                                                            | `L_s122_short
                                                                ->
                                                                Ojs.string_to_js
                                                                  "short"
                                                            | `L_s63_full ->
                                                                Ojs.string_to_js
                                                                  "full"
                                                            | `L_s78_long ->
                                                                Ojs.string_to_js
                                                                  "long"
                                                            | `L_s84_medium
                                                                ->
                                                                Ojs.string_to_js
                                                                  "medium")
                                                     | None -> ());
                                                    (match x3555 with
                                                     | Some x3585 ->
                                                         Ojs.set_prop_ascii
                                                           x3572 "hourCycle"
                                                           (match x3585 with
                                                            | `L_s67_h11 ->
                                                                Ojs.string_to_js
                                                                  "h11"
                                                            | `L_s68_h12 ->
                                                                Ojs.string_to_js
                                                                  "h12"
                                                            | `L_s69_h23 ->
                                                                Ojs.string_to_js
                                                                  "h23"
                                                            | `L_s70_h24 ->
                                                                Ojs.string_to_js
                                                                  "h24")
                                                     | None -> ());
                                                    (match x3556 with
                                                     | Some x3584 ->
                                                         Ojs.set_prop_ascii
                                                           x3572 "dayPeriod"
                                                           (match x3584 with
                                                            | `L_s122_short
                                                                ->
                                                                Ojs.string_to_js
                                                                  "short"
                                                            | `L_s78_long ->
                                                                Ojs.string_to_js
                                                                  "long"
                                                            | `L_s92_narrow
                                                                ->
                                                                Ojs.string_to_js
                                                                  "narrow")
                                                     | None -> ());
                                                    (match x3557 with
                                                     | Some x3583 ->
                                                         Ojs.set_prop_ascii
                                                           x3572
                                                           "fractionalSecondDigits"
                                                           (match x3583 with
                                                            | `L_n_1 ->
                                                                Ojs.int_to_js
                                                                  1
                                                            | `L_n_2 ->
                                                                Ojs.int_to_js
                                                                  2
                                                            | `L_n_3 ->
                                                                Ojs.int_to_js
                                                                  3)
                                                     | None -> ());
                                                    Ojs.set_prop_ascii x3572
                                                      "locale"
                                                      (Ojs.string_to_js x3558);
                                                    Ojs.set_prop_ascii x3572
                                                      "calendar"
                                                      (Ojs.string_to_js x3559);
                                                    Ojs.set_prop_ascii x3572
                                                      "numberingSystem"
                                                      (Ojs.string_to_js x3560);
                                                    Ojs.set_prop_ascii x3572
                                                      "timeZone"
                                                      (Ojs.string_to_js x3561);
                                                    (match x3562 with
                                                     | Some x3582 ->
                                                         Ojs.set_prop_ascii
                                                           x3572 "hour12"
                                                           (Ojs.bool_to_js
                                                              x3582)
                                                     | None -> ());
                                                    (match x3563 with
                                                     | Some x3581 ->
                                                         Ojs.set_prop_ascii
                                                           x3572 "weekday"
                                                           (Ojs.string_to_js
                                                              x3581)
                                                     | None -> ());
                                                    (match x3564 with
                                                     | Some x3580 ->
                                                         Ojs.set_prop_ascii
                                                           x3572 "era"
                                                           (Ojs.string_to_js
                                                              x3580)
                                                     | None -> ());
                                                    (match x3565 with
                                                     | Some x3579 ->
                                                         Ojs.set_prop_ascii
                                                           x3572 "year"
                                                           (Ojs.string_to_js
                                                              x3579)
                                                     | None -> ());
                                                    (match x3566 with
                                                     | Some x3578 ->
                                                         Ojs.set_prop_ascii
                                                           x3572 "month"
                                                           (Ojs.string_to_js
                                                              x3578)
                                                     | None -> ());
                                                    (match x3567 with
                                                     | Some x3577 ->
                                                         Ojs.set_prop_ascii
                                                           x3572 "day"
                                                           (Ojs.string_to_js
                                                              x3577)
                                                     | None -> ());
                                                    (match x3568 with
                                                     | Some x3576 ->
                                                         Ojs.set_prop_ascii
                                                           x3572 "hour"
                                                           (Ojs.string_to_js
                                                              x3576)
                                                     | None -> ());
                                                    (match x3569 with
                                                     | Some x3575 ->
                                                         Ojs.set_prop_ascii
                                                           x3572 "minute"
                                                           (Ojs.string_to_js
                                                              x3575)
                                                     | None -> ());
                                                    (match x3570 with
                                                     | Some x3574 ->
                                                         Ojs.set_prop_ascii
                                                           x3572 "second"
                                                           (Ojs.string_to_js
                                                              x3574)
                                                     | None -> ());
                                                    (match x3571 with
                                                     | Some x3573 ->
                                                         Ojs.set_prop_ascii
                                                           x3572
                                                           "timeZoneName"
                                                           (Ojs.string_to_js
                                                              x3573)
                                                     | None -> ());
                                                    t_of_js x3572
        let cast_from = Obj.magic
      end
    module DateTimeFormatPartTypes =
      struct
        type t =
          [ `L_s118_second  | `L_s132_timeZoneName  | `L_s138_unknown 
          | `L_s142_weekday  | `L_s145_year  | `L_s38_day 
          | `L_s39_dayPeriod  | `L_s53_era  | `L_s61_fractionalSecond 
          | `L_s71_hour  | `L_s76_literal  | `L_s86_minute  | `L_s88_month ]
        let rec t_of_js : Ojs.t -> t =
          fun (x3590 : Ojs.t) ->
            let x3591 = x3590 in
            match Ojs.string_of_js x3591 with
            | "second" -> `L_s118_second
            | "timeZoneName" -> `L_s132_timeZoneName
            | "unknown" -> `L_s138_unknown
            | "weekday" -> `L_s142_weekday
            | "year" -> `L_s145_year
            | "day" -> `L_s38_day
            | "dayPeriod" -> `L_s39_dayPeriod
            | "era" -> `L_s53_era
            | "fractionalSecond" -> `L_s61_fractionalSecond
            | "hour" -> `L_s71_hour
            | "literal" -> `L_s76_literal
            | "minute" -> `L_s86_minute
            | "month" -> `L_s88_month
            | _ -> assert false
        and t_to_js : t -> Ojs.t =
          fun
            (x3589 :
              [ `L_s118_second  | `L_s132_timeZoneName  | `L_s138_unknown 
              | `L_s142_weekday  | `L_s145_year  | `L_s38_day 
              | `L_s39_dayPeriod  | `L_s53_era  | `L_s61_fractionalSecond 
              | `L_s71_hour  | `L_s76_literal  | `L_s86_minute 
              | `L_s88_month ])
            ->
            match x3589 with
            | `L_s118_second -> Ojs.string_to_js "second"
            | `L_s132_timeZoneName -> Ojs.string_to_js "timeZoneName"
            | `L_s138_unknown -> Ojs.string_to_js "unknown"
            | `L_s142_weekday -> Ojs.string_to_js "weekday"
            | `L_s145_year -> Ojs.string_to_js "year"
            | `L_s38_day -> Ojs.string_to_js "day"
            | `L_s39_dayPeriod -> Ojs.string_to_js "dayPeriod"
            | `L_s53_era -> Ojs.string_to_js "era"
            | `L_s61_fractionalSecond -> Ojs.string_to_js "fractionalSecond"
            | `L_s71_hour -> Ojs.string_to_js "hour"
            | `L_s76_literal -> Ojs.string_to_js "literal"
            | `L_s86_minute -> Ojs.string_to_js "minute"
            | `L_s88_month -> Ojs.string_to_js "month"
      end
    module DateTimeFormatPart =
      struct
        type t = [ `Intl_DateTimeFormatPart ] intf
        let rec t_of_js : Ojs.t -> t = Obj.magic
        and t_to_js : t -> Ojs.t = Obj.magic
        type tags = [ `Intl_DateTimeFormatPart ]
        type 'tags this =
          'tags intf constraint 'tags = [> `Intl_DateTimeFormatPart ]
        let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
          =
          fun (type __tags) ->
            fun (__tags_of_js : Ojs.t -> __tags) ->
              fun (x3594 : Ojs.t) -> intf_of_js __tags_of_js x3594
        and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
          fun (type __tags) ->
            fun (__tags_to_js : __tags -> Ojs.t) ->
              fun (x3592 : __tags intf) -> intf_to_js __tags_to_js x3592
        let (get_type : 'tags this -> DateTimeFormatPartTypes.t) =
          fun (x3596 : 'tags this) ->
            DateTimeFormatPartTypes.t_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3596) "type")
        let (set_type : 'tags this -> DateTimeFormatPartTypes.t -> unit) =
          fun (x3598 : 'tags this) ->
            fun (x3599 : DateTimeFormatPartTypes.t) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3598) "type"
                (DateTimeFormatPartTypes.t_to_js x3599)
        let (get_value : 'tags this -> string) =
          fun (x3601 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3601) "value")
        let (set_value : 'tags this -> string -> unit) =
          fun (x3603 : 'tags this) ->
            fun (x3604 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3603) "value"
                (Ojs.string_to_js x3604)
        let (create :
          type_:DateTimeFormatPartTypes.t -> value:string -> unit -> t) =
          fun ~type_:(x3606 : DateTimeFormatPartTypes.t) ->
            fun ~value:(x3607 : string) ->
              fun () ->
                let x3608 = Ojs.empty_obj () in
                Ojs.set_prop_ascii x3608 "type"
                  (DateTimeFormatPartTypes.t_to_js x3606);
                Ojs.set_prop_ascii x3608 "value" (Ojs.string_to_js x3607);
                t_of_js x3608
        let cast_from = Obj.magic
      end
    module DateTimeRangeFormatPart =
      struct
        type t =
          [ `Intl_DateTimeFormatPart  | `Intl_DateTimeRangeFormatPart ] intf
        let rec t_of_js : Ojs.t -> t = Obj.magic
        and t_to_js : t -> Ojs.t = Obj.magic
        type tags =
          [ `Intl_DateTimeFormatPart  | `Intl_DateTimeRangeFormatPart ]
        type 'tags this =
          'tags intf constraint 'tags = [> `Intl_DateTimeRangeFormatPart ]
        let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
          =
          fun (type __tags) ->
            fun (__tags_of_js : Ojs.t -> __tags) ->
              fun (x3611 : Ojs.t) -> intf_of_js __tags_of_js x3611
        and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
          fun (type __tags) ->
            fun (__tags_to_js : __tags -> Ojs.t) ->
              fun (x3609 : __tags intf) -> intf_to_js __tags_to_js x3609
        let (get_source :
          'tags this ->
            [ `L_s121_shared  | `L_s127_startRange  | `L_s50_endRange ])
          =
          fun (x3613 : 'tags this) ->
            let x3615 =
              Ojs.get_prop_ascii (this_to_js Obj.magic x3613) "source" in
            match Ojs.string_of_js x3615 with
            | "shared" -> `L_s121_shared
            | "startRange" -> `L_s127_startRange
            | "endRange" -> `L_s50_endRange
            | _ -> assert false
        let (set_source :
          'tags this ->
            [ `U1 of [ `L_s127_startRange ]  | `U2 of [ `L_s50_endRange ] 
            | `U3 of [ `L_s121_shared ] ] -> unit)
          =
          fun (x3616 : 'tags this) ->
            fun
              (x3617 :
                [ `U1 of [ `L_s127_startRange ] 
                | `U2 of [ `L_s50_endRange ]  | `U3 of [ `L_s121_shared ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3616) "source"
                (match x3617 with
                 | `U1 x3618 ->
                     (match x3618 with
                      | `L_s127_startRange -> Ojs.string_to_js "startRange")
                 | `U2 x3619 ->
                     (match x3619 with
                      | `L_s50_endRange -> Ojs.string_to_js "endRange")
                 | `U3 x3620 ->
                     (match x3620 with
                      | `L_s121_shared -> Ojs.string_to_js "shared"))
        let (create :
          source:[ `L_s121_shared  | `L_s127_startRange  | `L_s50_endRange ]
            -> unit -> t)
          =
          fun
            ~source:(x3622 :
                      [ `L_s121_shared  | `L_s127_startRange 
                      | `L_s50_endRange ])
            ->
            fun () ->
              let x3623 = Ojs.empty_obj () in
              Ojs.set_prop_ascii x3623 "source"
                (match x3622 with
                 | `L_s121_shared -> Ojs.string_to_js "shared"
                 | `L_s127_startRange -> Ojs.string_to_js "startRange"
                 | `L_s50_endRange -> Ojs.string_to_js "endRange");
              t_of_js x3623
        let cast_from = Obj.magic
      end
    module DateTimeFormatOptions =
      struct
        type t = [ `Intl_DateTimeFormatOptions ] intf
        let rec t_of_js : Ojs.t -> t = Obj.magic
        and t_to_js : t -> Ojs.t = Obj.magic
        type tags = [ `Intl_DateTimeFormatOptions ]
        type 'tags this =
          'tags intf constraint 'tags = [> `Intl_DateTimeFormatOptions ]
        let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
          =
          fun (type __tags) ->
            fun (__tags_of_js : Ojs.t -> __tags) ->
              fun (x3626 : Ojs.t) -> intf_of_js __tags_of_js x3626
        and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
          fun (type __tags) ->
            fun (__tags_to_js : __tags -> Ojs.t) ->
              fun (x3624 : __tags intf) -> intf_to_js __tags_to_js x3624
        let (get_formatMatcher :
          'tags this -> [ `L_s25_basic  | `L_s26_best_fit ] option) =
          fun (x3628 : 'tags this) ->
            Ojs.option_of_js
              (fun (x3630 : Ojs.t) ->
                 let x3631 = x3630 in
                 match Ojs.string_of_js x3631 with
                 | "basic" -> `L_s25_basic
                 | "best fit" -> `L_s26_best_fit
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3628)
                 "formatMatcher")
        let (set_formatMatcher :
          'tags this ->
            [ `Undefined of undefined  | `U1 of [ `L_s25_basic ] 
            | `U2 of [ `L_s26_best_fit ] ] -> unit)
          =
          fun (x3632 : 'tags this) ->
            fun
              (x3633 :
                [ `Undefined of undefined  | `U1 of [ `L_s25_basic ] 
                | `U2 of [ `L_s26_best_fit ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3632) "formatMatcher"
                (match x3633 with
                 | `Undefined x3634 -> undefined_to_js x3634
                 | `U1 x3635 ->
                     (match x3635 with
                      | `L_s25_basic -> Ojs.string_to_js "basic")
                 | `U2 x3636 ->
                     (match x3636 with
                      | `L_s26_best_fit -> Ojs.string_to_js "best fit"))
        let (get_dateStyle :
          'tags this ->
            [ `L_s122_short  | `L_s63_full  | `L_s78_long  | `L_s84_medium ]
              option)
          =
          fun (x3638 : 'tags this) ->
            Ojs.option_of_js
              (fun (x3640 : Ojs.t) ->
                 let x3641 = x3640 in
                 match Ojs.string_of_js x3641 with
                 | "short" -> `L_s122_short
                 | "full" -> `L_s63_full
                 | "long" -> `L_s78_long
                 | "medium" -> `L_s84_medium
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3638) "dateStyle")
        let (set_dateStyle :
          'tags this ->
            [ `Undefined of undefined  | `U1 of [ `L_s63_full ] 
            | `U2 of [ `L_s78_long ]  | `U3 of [ `L_s84_medium ] 
            | `U4 of [ `L_s122_short ] ] -> unit)
          =
          fun (x3642 : 'tags this) ->
            fun
              (x3643 :
                [ `Undefined of undefined  | `U1 of [ `L_s63_full ] 
                | `U2 of [ `L_s78_long ]  | `U3 of [ `L_s84_medium ] 
                | `U4 of [ `L_s122_short ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3642) "dateStyle"
                (match x3643 with
                 | `Undefined x3644 -> undefined_to_js x3644
                 | `U1 x3645 ->
                     (match x3645 with
                      | `L_s63_full -> Ojs.string_to_js "full")
                 | `U2 x3646 ->
                     (match x3646 with
                      | `L_s78_long -> Ojs.string_to_js "long")
                 | `U3 x3647 ->
                     (match x3647 with
                      | `L_s84_medium -> Ojs.string_to_js "medium")
                 | `U4 x3648 ->
                     (match x3648 with
                      | `L_s122_short -> Ojs.string_to_js "short"))
        let (get_timeStyle :
          'tags this ->
            [ `L_s122_short  | `L_s63_full  | `L_s78_long  | `L_s84_medium ]
              option)
          =
          fun (x3650 : 'tags this) ->
            Ojs.option_of_js
              (fun (x3652 : Ojs.t) ->
                 let x3653 = x3652 in
                 match Ojs.string_of_js x3653 with
                 | "short" -> `L_s122_short
                 | "full" -> `L_s63_full
                 | "long" -> `L_s78_long
                 | "medium" -> `L_s84_medium
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3650) "timeStyle")
        let (set_timeStyle :
          'tags this ->
            [ `Undefined of undefined  | `U1 of [ `L_s63_full ] 
            | `U2 of [ `L_s78_long ]  | `U3 of [ `L_s84_medium ] 
            | `U4 of [ `L_s122_short ] ] -> unit)
          =
          fun (x3654 : 'tags this) ->
            fun
              (x3655 :
                [ `Undefined of undefined  | `U1 of [ `L_s63_full ] 
                | `U2 of [ `L_s78_long ]  | `U3 of [ `L_s84_medium ] 
                | `U4 of [ `L_s122_short ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3654) "timeStyle"
                (match x3655 with
                 | `Undefined x3656 -> undefined_to_js x3656
                 | `U1 x3657 ->
                     (match x3657 with
                      | `L_s63_full -> Ojs.string_to_js "full")
                 | `U2 x3658 ->
                     (match x3658 with
                      | `L_s78_long -> Ojs.string_to_js "long")
                 | `U3 x3659 ->
                     (match x3659 with
                      | `L_s84_medium -> Ojs.string_to_js "medium")
                 | `U4 x3660 ->
                     (match x3660 with
                      | `L_s122_short -> Ojs.string_to_js "short"))
        let (get_dayPeriod :
          'tags this ->
            [ `L_s122_short  | `L_s78_long  | `L_s92_narrow ] option)
          =
          fun (x3662 : 'tags this) ->
            Ojs.option_of_js
              (fun (x3664 : Ojs.t) ->
                 let x3665 = x3664 in
                 match Ojs.string_of_js x3665 with
                 | "short" -> `L_s122_short
                 | "long" -> `L_s78_long
                 | "narrow" -> `L_s92_narrow
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3662) "dayPeriod")
        let (set_dayPeriod :
          'tags this ->
            [ `Undefined of undefined  | `U1 of [ `L_s92_narrow ] 
            | `U2 of [ `L_s122_short ]  | `U3 of [ `L_s78_long ] ] -> 
              unit)
          =
          fun (x3666 : 'tags this) ->
            fun
              (x3667 :
                [ `Undefined of undefined  | `U1 of [ `L_s92_narrow ] 
                | `U2 of [ `L_s122_short ]  | `U3 of [ `L_s78_long ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3666) "dayPeriod"
                (match x3667 with
                 | `Undefined x3668 -> undefined_to_js x3668
                 | `U1 x3669 ->
                     (match x3669 with
                      | `L_s92_narrow -> Ojs.string_to_js "narrow")
                 | `U2 x3670 ->
                     (match x3670 with
                      | `L_s122_short -> Ojs.string_to_js "short")
                 | `U3 x3671 ->
                     (match x3671 with
                      | `L_s78_long -> Ojs.string_to_js "long"))
        let (get_fractionalSecondDigits :
          'tags this -> [ `L_n_1  | `L_n_2  | `L_n_3 ] option) =
          fun (x3673 : 'tags this) ->
            Ojs.option_of_js
              (fun (x3675 : Ojs.t) ->
                 let x3676 = x3675 in
                 match Ojs.int_of_js x3676 with
                 | 1 -> `L_n_1
                 | 2 -> `L_n_2
                 | 3 -> `L_n_3
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3673)
                 "fractionalSecondDigits")
        let (set_fractionalSecondDigits :
          'tags this ->
            [ `Undefined of undefined  | `U1 of [ `L_n_1 ] 
            | `U2 of [ `L_n_2 ]  | `U3 of [ `L_n_3 ] ] -> unit)
          =
          fun (x3677 : 'tags this) ->
            fun
              (x3678 :
                [ `Undefined of undefined  | `U1 of [ `L_n_1 ] 
                | `U2 of [ `L_n_2 ]  | `U3 of [ `L_n_3 ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3677)
                "fractionalSecondDigits"
                (match x3678 with
                 | `Undefined x3679 -> undefined_to_js x3679
                 | `U1 x3680 ->
                     (match x3680 with | `L_n_1 -> Ojs.int_to_js 1)
                 | `U2 x3681 ->
                     (match x3681 with | `L_n_2 -> Ojs.int_to_js 2)
                 | `U3 x3682 ->
                     (match x3682 with | `L_n_3 -> Ojs.int_to_js 3))
        let (get_calendar : 'tags this -> string option) =
          fun (x3684 : 'tags this) ->
            Ojs.option_of_js Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3684) "calendar")
        let (set_calendar :
          'tags this -> [ `Undefined of undefined  | `U1 of string ] -> unit)
          =
          fun (x3687 : 'tags this) ->
            fun (x3688 : [ `Undefined of undefined  | `U1 of string ]) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3687) "calendar"
                (match x3688 with
                 | `Undefined x3689 -> undefined_to_js x3689
                 | `U1 x3690 -> Ojs.string_to_js x3690)
        let (get_dayPeriod' :
          'tags this ->
            [ `L_s122_short  | `L_s78_long  | `L_s92_narrow ] option)
          =
          fun (x3692 : 'tags this) ->
            Ojs.option_of_js
              (fun (x3694 : Ojs.t) ->
                 let x3695 = x3694 in
                 match Ojs.string_of_js x3695 with
                 | "short" -> `L_s122_short
                 | "long" -> `L_s78_long
                 | "narrow" -> `L_s92_narrow
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3692) "dayPeriod")
        let (set_dayPeriod' :
          'tags this ->
            [ `Undefined of undefined  | `U1 of [ `L_s92_narrow ] 
            | `U2 of [ `L_s122_short ]  | `U3 of [ `L_s78_long ] ] -> 
              unit)
          =
          fun (x3696 : 'tags this) ->
            fun
              (x3697 :
                [ `Undefined of undefined  | `U1 of [ `L_s92_narrow ] 
                | `U2 of [ `L_s122_short ]  | `U3 of [ `L_s78_long ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3696) "dayPeriod"
                (match x3697 with
                 | `Undefined x3698 -> undefined_to_js x3698
                 | `U1 x3699 ->
                     (match x3699 with
                      | `L_s92_narrow -> Ojs.string_to_js "narrow")
                 | `U2 x3700 ->
                     (match x3700 with
                      | `L_s122_short -> Ojs.string_to_js "short")
                 | `U3 x3701 ->
                     (match x3701 with
                      | `L_s78_long -> Ojs.string_to_js "long"))
        let (get_numberingSystem : 'tags this -> string option) =
          fun (x3703 : 'tags this) ->
            Ojs.option_of_js Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3703)
                 "numberingSystem")
        let (set_numberingSystem :
          'tags this -> [ `Undefined of undefined  | `U1 of string ] -> unit)
          =
          fun (x3706 : 'tags this) ->
            fun (x3707 : [ `Undefined of undefined  | `U1 of string ]) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3706)
                "numberingSystem"
                (match x3707 with
                 | `Undefined x3708 -> undefined_to_js x3708
                 | `U1 x3709 -> Ojs.string_to_js x3709)
        let (get_dateStyle' :
          'tags this ->
            [ `L_s122_short  | `L_s63_full  | `L_s78_long  | `L_s84_medium ]
              option)
          =
          fun (x3711 : 'tags this) ->
            Ojs.option_of_js
              (fun (x3713 : Ojs.t) ->
                 let x3714 = x3713 in
                 match Ojs.string_of_js x3714 with
                 | "short" -> `L_s122_short
                 | "full" -> `L_s63_full
                 | "long" -> `L_s78_long
                 | "medium" -> `L_s84_medium
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3711) "dateStyle")
        let (set_dateStyle' :
          'tags this ->
            [ `Undefined of undefined  | `U1 of [ `L_s63_full ] 
            | `U2 of [ `L_s78_long ]  | `U3 of [ `L_s84_medium ] 
            | `U4 of [ `L_s122_short ] ] -> unit)
          =
          fun (x3715 : 'tags this) ->
            fun
              (x3716 :
                [ `Undefined of undefined  | `U1 of [ `L_s63_full ] 
                | `U2 of [ `L_s78_long ]  | `U3 of [ `L_s84_medium ] 
                | `U4 of [ `L_s122_short ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3715) "dateStyle"
                (match x3716 with
                 | `Undefined x3717 -> undefined_to_js x3717
                 | `U1 x3718 ->
                     (match x3718 with
                      | `L_s63_full -> Ojs.string_to_js "full")
                 | `U2 x3719 ->
                     (match x3719 with
                      | `L_s78_long -> Ojs.string_to_js "long")
                 | `U3 x3720 ->
                     (match x3720 with
                      | `L_s84_medium -> Ojs.string_to_js "medium")
                 | `U4 x3721 ->
                     (match x3721 with
                      | `L_s122_short -> Ojs.string_to_js "short"))
        let (get_timeStyle' :
          'tags this ->
            [ `L_s122_short  | `L_s63_full  | `L_s78_long  | `L_s84_medium ]
              option)
          =
          fun (x3723 : 'tags this) ->
            Ojs.option_of_js
              (fun (x3725 : Ojs.t) ->
                 let x3726 = x3725 in
                 match Ojs.string_of_js x3726 with
                 | "short" -> `L_s122_short
                 | "full" -> `L_s63_full
                 | "long" -> `L_s78_long
                 | "medium" -> `L_s84_medium
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3723) "timeStyle")
        let (set_timeStyle' :
          'tags this ->
            [ `Undefined of undefined  | `U1 of [ `L_s63_full ] 
            | `U2 of [ `L_s78_long ]  | `U3 of [ `L_s84_medium ] 
            | `U4 of [ `L_s122_short ] ] -> unit)
          =
          fun (x3727 : 'tags this) ->
            fun
              (x3728 :
                [ `Undefined of undefined  | `U1 of [ `L_s63_full ] 
                | `U2 of [ `L_s78_long ]  | `U3 of [ `L_s84_medium ] 
                | `U4 of [ `L_s122_short ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3727) "timeStyle"
                (match x3728 with
                 | `Undefined x3729 -> undefined_to_js x3729
                 | `U1 x3730 ->
                     (match x3730 with
                      | `L_s63_full -> Ojs.string_to_js "full")
                 | `U2 x3731 ->
                     (match x3731 with
                      | `L_s78_long -> Ojs.string_to_js "long")
                 | `U3 x3732 ->
                     (match x3732 with
                      | `L_s84_medium -> Ojs.string_to_js "medium")
                 | `U4 x3733 ->
                     (match x3733 with
                      | `L_s122_short -> Ojs.string_to_js "short"))
        let (get_hourCycle :
          'tags this ->
            [ `L_s67_h11  | `L_s68_h12  | `L_s69_h23  | `L_s70_h24 ] option)
          =
          fun (x3735 : 'tags this) ->
            Ojs.option_of_js
              (fun (x3737 : Ojs.t) ->
                 let x3738 = x3737 in
                 match Ojs.string_of_js x3738 with
                 | "h11" -> `L_s67_h11
                 | "h12" -> `L_s68_h12
                 | "h23" -> `L_s69_h23
                 | "h24" -> `L_s70_h24
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3735) "hourCycle")
        let (set_hourCycle :
          'tags this ->
            [ `Undefined of undefined  | `U1 of [ `L_s67_h11 ] 
            | `U2 of [ `L_s68_h12 ]  | `U3 of [ `L_s69_h23 ] 
            | `U4 of [ `L_s70_h24 ] ] -> unit)
          =
          fun (x3739 : 'tags this) ->
            fun
              (x3740 :
                [ `Undefined of undefined  | `U1 of [ `L_s67_h11 ] 
                | `U2 of [ `L_s68_h12 ]  | `U3 of [ `L_s69_h23 ] 
                | `U4 of [ `L_s70_h24 ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3739) "hourCycle"
                (match x3740 with
                 | `Undefined x3741 -> undefined_to_js x3741
                 | `U1 x3742 ->
                     (match x3742 with | `L_s67_h11 -> Ojs.string_to_js "h11")
                 | `U2 x3743 ->
                     (match x3743 with | `L_s68_h12 -> Ojs.string_to_js "h12")
                 | `U3 x3744 ->
                     (match x3744 with | `L_s69_h23 -> Ojs.string_to_js "h23")
                 | `U4 x3745 ->
                     (match x3745 with | `L_s70_h24 -> Ojs.string_to_js "h24"))
        let (get_localeMatcher :
          'tags this -> [ `L_s26_best_fit  | `L_s81_lookup ] option) =
          fun (x3747 : 'tags this) ->
            Ojs.option_of_js
              (fun (x3749 : Ojs.t) ->
                 let x3750 = x3749 in
                 match Ojs.string_of_js x3750 with
                 | "best fit" -> `L_s26_best_fit
                 | "lookup" -> `L_s81_lookup
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3747)
                 "localeMatcher")
        let (set_localeMatcher :
          'tags this ->
            [ `Undefined of undefined  | `U1 of [ `L_s26_best_fit ] 
            | `U2 of [ `L_s81_lookup ] ] -> unit)
          =
          fun (x3751 : 'tags this) ->
            fun
              (x3752 :
                [ `Undefined of undefined  | `U1 of [ `L_s26_best_fit ] 
                | `U2 of [ `L_s81_lookup ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3751) "localeMatcher"
                (match x3752 with
                 | `Undefined x3753 -> undefined_to_js x3753
                 | `U1 x3754 ->
                     (match x3754 with
                      | `L_s26_best_fit -> Ojs.string_to_js "best fit")
                 | `U2 x3755 ->
                     (match x3755 with
                      | `L_s81_lookup -> Ojs.string_to_js "lookup"))
        let (get_weekday :
          'tags this ->
            [ `L_s122_short  | `L_s78_long  | `L_s92_narrow ] option)
          =
          fun (x3757 : 'tags this) ->
            Ojs.option_of_js
              (fun (x3759 : Ojs.t) ->
                 let x3760 = x3759 in
                 match Ojs.string_of_js x3760 with
                 | "short" -> `L_s122_short
                 | "long" -> `L_s78_long
                 | "narrow" -> `L_s92_narrow
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3757) "weekday")
        let (set_weekday :
          'tags this ->
            [ `Undefined of undefined  | `U1 of [ `L_s78_long ] 
            | `U2 of [ `L_s122_short ]  | `U3 of [ `L_s92_narrow ] ] -> 
              unit)
          =
          fun (x3761 : 'tags this) ->
            fun
              (x3762 :
                [ `Undefined of undefined  | `U1 of [ `L_s78_long ] 
                | `U2 of [ `L_s122_short ]  | `U3 of [ `L_s92_narrow ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3761) "weekday"
                (match x3762 with
                 | `Undefined x3763 -> undefined_to_js x3763
                 | `U1 x3764 ->
                     (match x3764 with
                      | `L_s78_long -> Ojs.string_to_js "long")
                 | `U2 x3765 ->
                     (match x3765 with
                      | `L_s122_short -> Ojs.string_to_js "short")
                 | `U3 x3766 ->
                     (match x3766 with
                      | `L_s92_narrow -> Ojs.string_to_js "narrow"))
        let (get_era :
          'tags this ->
            [ `L_s122_short  | `L_s78_long  | `L_s92_narrow ] option)
          =
          fun (x3768 : 'tags this) ->
            Ojs.option_of_js
              (fun (x3770 : Ojs.t) ->
                 let x3771 = x3770 in
                 match Ojs.string_of_js x3771 with
                 | "short" -> `L_s122_short
                 | "long" -> `L_s78_long
                 | "narrow" -> `L_s92_narrow
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3768) "era")
        let (set_era :
          'tags this ->
            [ `Undefined of undefined  | `U1 of [ `L_s78_long ] 
            | `U2 of [ `L_s122_short ]  | `U3 of [ `L_s92_narrow ] ] -> 
              unit)
          =
          fun (x3772 : 'tags this) ->
            fun
              (x3773 :
                [ `Undefined of undefined  | `U1 of [ `L_s78_long ] 
                | `U2 of [ `L_s122_short ]  | `U3 of [ `L_s92_narrow ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3772) "era"
                (match x3773 with
                 | `Undefined x3774 -> undefined_to_js x3774
                 | `U1 x3775 ->
                     (match x3775 with
                      | `L_s78_long -> Ojs.string_to_js "long")
                 | `U2 x3776 ->
                     (match x3776 with
                      | `L_s122_short -> Ojs.string_to_js "short")
                 | `U3 x3777 ->
                     (match x3777 with
                      | `L_s92_narrow -> Ojs.string_to_js "narrow"))
        let (get_year :
          'tags this -> [ `L_s0_2_digit  | `L_s98_numeric ] option) =
          fun (x3779 : 'tags this) ->
            Ojs.option_of_js
              (fun (x3781 : Ojs.t) ->
                 let x3782 = x3781 in
                 match Ojs.string_of_js x3782 with
                 | "2-digit" -> `L_s0_2_digit
                 | "numeric" -> `L_s98_numeric
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3779) "year")
        let (set_year :
          'tags this ->
            [ `Undefined of undefined  | `U1 of [ `L_s98_numeric ] 
            | `U2 of [ `L_s0_2_digit ] ] -> unit)
          =
          fun (x3783 : 'tags this) ->
            fun
              (x3784 :
                [ `Undefined of undefined  | `U1 of [ `L_s98_numeric ] 
                | `U2 of [ `L_s0_2_digit ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3783) "year"
                (match x3784 with
                 | `Undefined x3785 -> undefined_to_js x3785
                 | `U1 x3786 ->
                     (match x3786 with
                      | `L_s98_numeric -> Ojs.string_to_js "numeric")
                 | `U2 x3787 ->
                     (match x3787 with
                      | `L_s0_2_digit -> Ojs.string_to_js "2-digit"))
        let (get_month :
          'tags this ->
            [ `L_s0_2_digit  | `L_s122_short  | `L_s78_long  | `L_s92_narrow 
            | `L_s98_numeric ] option)
          =
          fun (x3789 : 'tags this) ->
            Ojs.option_of_js
              (fun (x3791 : Ojs.t) ->
                 let x3792 = x3791 in
                 match Ojs.string_of_js x3792 with
                 | "2-digit" -> `L_s0_2_digit
                 | "short" -> `L_s122_short
                 | "long" -> `L_s78_long
                 | "narrow" -> `L_s92_narrow
                 | "numeric" -> `L_s98_numeric
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3789) "month")
        let (set_month :
          'tags this ->
            [ `Undefined of undefined  | `U1 of [ `L_s98_numeric ] 
            | `U2 of [ `L_s0_2_digit ]  | `U3 of [ `L_s78_long ] 
            | `U4 of [ `L_s122_short ]  | `U5 of [ `L_s92_narrow ] ] -> 
              unit)
          =
          fun (x3793 : 'tags this) ->
            fun
              (x3794 :
                [ `Undefined of undefined  | `U1 of [ `L_s98_numeric ] 
                | `U2 of [ `L_s0_2_digit ]  | `U3 of [ `L_s78_long ] 
                | `U4 of [ `L_s122_short ]  | `U5 of [ `L_s92_narrow ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3793) "month"
                (match x3794 with
                 | `Undefined x3795 -> undefined_to_js x3795
                 | `U1 x3796 ->
                     (match x3796 with
                      | `L_s98_numeric -> Ojs.string_to_js "numeric")
                 | `U2 x3797 ->
                     (match x3797 with
                      | `L_s0_2_digit -> Ojs.string_to_js "2-digit")
                 | `U3 x3798 ->
                     (match x3798 with
                      | `L_s78_long -> Ojs.string_to_js "long")
                 | `U4 x3799 ->
                     (match x3799 with
                      | `L_s122_short -> Ojs.string_to_js "short")
                 | `U5 x3800 ->
                     (match x3800 with
                      | `L_s92_narrow -> Ojs.string_to_js "narrow"))
        let (get_day :
          'tags this -> [ `L_s0_2_digit  | `L_s98_numeric ] option) =
          fun (x3802 : 'tags this) ->
            Ojs.option_of_js
              (fun (x3804 : Ojs.t) ->
                 let x3805 = x3804 in
                 match Ojs.string_of_js x3805 with
                 | "2-digit" -> `L_s0_2_digit
                 | "numeric" -> `L_s98_numeric
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3802) "day")
        let (set_day :
          'tags this ->
            [ `Undefined of undefined  | `U1 of [ `L_s98_numeric ] 
            | `U2 of [ `L_s0_2_digit ] ] -> unit)
          =
          fun (x3806 : 'tags this) ->
            fun
              (x3807 :
                [ `Undefined of undefined  | `U1 of [ `L_s98_numeric ] 
                | `U2 of [ `L_s0_2_digit ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3806) "day"
                (match x3807 with
                 | `Undefined x3808 -> undefined_to_js x3808
                 | `U1 x3809 ->
                     (match x3809 with
                      | `L_s98_numeric -> Ojs.string_to_js "numeric")
                 | `U2 x3810 ->
                     (match x3810 with
                      | `L_s0_2_digit -> Ojs.string_to_js "2-digit"))
        let (get_hour :
          'tags this -> [ `L_s0_2_digit  | `L_s98_numeric ] option) =
          fun (x3812 : 'tags this) ->
            Ojs.option_of_js
              (fun (x3814 : Ojs.t) ->
                 let x3815 = x3814 in
                 match Ojs.string_of_js x3815 with
                 | "2-digit" -> `L_s0_2_digit
                 | "numeric" -> `L_s98_numeric
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3812) "hour")
        let (set_hour :
          'tags this ->
            [ `Undefined of undefined  | `U1 of [ `L_s98_numeric ] 
            | `U2 of [ `L_s0_2_digit ] ] -> unit)
          =
          fun (x3816 : 'tags this) ->
            fun
              (x3817 :
                [ `Undefined of undefined  | `U1 of [ `L_s98_numeric ] 
                | `U2 of [ `L_s0_2_digit ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3816) "hour"
                (match x3817 with
                 | `Undefined x3818 -> undefined_to_js x3818
                 | `U1 x3819 ->
                     (match x3819 with
                      | `L_s98_numeric -> Ojs.string_to_js "numeric")
                 | `U2 x3820 ->
                     (match x3820 with
                      | `L_s0_2_digit -> Ojs.string_to_js "2-digit"))
        let (get_minute :
          'tags this -> [ `L_s0_2_digit  | `L_s98_numeric ] option) =
          fun (x3822 : 'tags this) ->
            Ojs.option_of_js
              (fun (x3824 : Ojs.t) ->
                 let x3825 = x3824 in
                 match Ojs.string_of_js x3825 with
                 | "2-digit" -> `L_s0_2_digit
                 | "numeric" -> `L_s98_numeric
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3822) "minute")
        let (set_minute :
          'tags this ->
            [ `Undefined of undefined  | `U1 of [ `L_s98_numeric ] 
            | `U2 of [ `L_s0_2_digit ] ] -> unit)
          =
          fun (x3826 : 'tags this) ->
            fun
              (x3827 :
                [ `Undefined of undefined  | `U1 of [ `L_s98_numeric ] 
                | `U2 of [ `L_s0_2_digit ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3826) "minute"
                (match x3827 with
                 | `Undefined x3828 -> undefined_to_js x3828
                 | `U1 x3829 ->
                     (match x3829 with
                      | `L_s98_numeric -> Ojs.string_to_js "numeric")
                 | `U2 x3830 ->
                     (match x3830 with
                      | `L_s0_2_digit -> Ojs.string_to_js "2-digit"))
        let (get_second :
          'tags this -> [ `L_s0_2_digit  | `L_s98_numeric ] option) =
          fun (x3832 : 'tags this) ->
            Ojs.option_of_js
              (fun (x3834 : Ojs.t) ->
                 let x3835 = x3834 in
                 match Ojs.string_of_js x3835 with
                 | "2-digit" -> `L_s0_2_digit
                 | "numeric" -> `L_s98_numeric
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3832) "second")
        let (set_second :
          'tags this ->
            [ `Undefined of undefined  | `U1 of [ `L_s98_numeric ] 
            | `U2 of [ `L_s0_2_digit ] ] -> unit)
          =
          fun (x3836 : 'tags this) ->
            fun
              (x3837 :
                [ `Undefined of undefined  | `U1 of [ `L_s98_numeric ] 
                | `U2 of [ `L_s0_2_digit ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3836) "second"
                (match x3837 with
                 | `Undefined x3838 -> undefined_to_js x3838
                 | `U1 x3839 ->
                     (match x3839 with
                      | `L_s98_numeric -> Ojs.string_to_js "numeric")
                 | `U2 x3840 ->
                     (match x3840 with
                      | `L_s0_2_digit -> Ojs.string_to_js "2-digit"))
        let (get_timeZoneName :
          'tags this ->
            [ `L_s122_short  | `L_s123_shortGeneric  | `L_s124_shortOffset 
            | `L_s78_long  | `L_s79_longGeneric  | `L_s80_longOffset ] option)
          =
          fun (x3842 : 'tags this) ->
            Ojs.option_of_js
              (fun (x3844 : Ojs.t) ->
                 let x3845 = x3844 in
                 match Ojs.string_of_js x3845 with
                 | "short" -> `L_s122_short
                 | "shortGeneric" -> `L_s123_shortGeneric
                 | "shortOffset" -> `L_s124_shortOffset
                 | "long" -> `L_s78_long
                 | "longGeneric" -> `L_s79_longGeneric
                 | "longOffset" -> `L_s80_longOffset
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3842) "timeZoneName")
        let (set_timeZoneName :
          'tags this ->
            [ `Undefined of undefined  | `U1 of [ `L_s122_short ] 
            | `U2 of [ `L_s78_long ]  | `U3 of [ `L_s124_shortOffset ] 
            | `U4 of [ `L_s80_longOffset ] 
            | `U5 of [ `L_s123_shortGeneric ] 
            | `U6 of [ `L_s79_longGeneric ] ] -> unit)
          =
          fun (x3846 : 'tags this) ->
            fun
              (x3847 :
                [ `Undefined of undefined  | `U1 of [ `L_s122_short ] 
                | `U2 of [ `L_s78_long ]  | `U3 of [ `L_s124_shortOffset ] 
                | `U4 of [ `L_s80_longOffset ] 
                | `U5 of [ `L_s123_shortGeneric ] 
                | `U6 of [ `L_s79_longGeneric ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3846) "timeZoneName"
                (match x3847 with
                 | `Undefined x3848 -> undefined_to_js x3848
                 | `U1 x3849 ->
                     (match x3849 with
                      | `L_s122_short -> Ojs.string_to_js "short")
                 | `U2 x3850 ->
                     (match x3850 with
                      | `L_s78_long -> Ojs.string_to_js "long")
                 | `U3 x3851 ->
                     (match x3851 with
                      | `L_s124_shortOffset -> Ojs.string_to_js "shortOffset")
                 | `U4 x3852 ->
                     (match x3852 with
                      | `L_s80_longOffset -> Ojs.string_to_js "longOffset")
                 | `U5 x3853 ->
                     (match x3853 with
                      | `L_s123_shortGeneric ->
                          Ojs.string_to_js "shortGeneric")
                 | `U6 x3854 ->
                     (match x3854 with
                      | `L_s79_longGeneric -> Ojs.string_to_js "longGeneric"))
        let (get_formatMatcher' :
          'tags this -> [ `L_s25_basic  | `L_s26_best_fit ] option) =
          fun (x3856 : 'tags this) ->
            Ojs.option_of_js
              (fun (x3858 : Ojs.t) ->
                 let x3859 = x3858 in
                 match Ojs.string_of_js x3859 with
                 | "basic" -> `L_s25_basic
                 | "best fit" -> `L_s26_best_fit
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3856)
                 "formatMatcher")
        let (set_formatMatcher' :
          'tags this ->
            [ `Undefined of undefined  | `U1 of [ `L_s26_best_fit ] 
            | `U2 of [ `L_s25_basic ] ] -> unit)
          =
          fun (x3860 : 'tags this) ->
            fun
              (x3861 :
                [ `Undefined of undefined  | `U1 of [ `L_s26_best_fit ] 
                | `U2 of [ `L_s25_basic ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3860) "formatMatcher"
                (match x3861 with
                 | `Undefined x3862 -> undefined_to_js x3862
                 | `U1 x3863 ->
                     (match x3863 with
                      | `L_s26_best_fit -> Ojs.string_to_js "best fit")
                 | `U2 x3864 ->
                     (match x3864 with
                      | `L_s25_basic -> Ojs.string_to_js "basic"))
        let (get_hour12 : 'tags this -> bool option) =
          fun (x3866 : 'tags this) ->
            Ojs.option_of_js Ojs.bool_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3866) "hour12")
        let (set_hour12 :
          'tags this -> [ `Undefined of undefined  | `U1 of bool ] -> unit) =
          fun (x3869 : 'tags this) ->
            fun (x3870 : [ `Undefined of undefined  | `U1 of bool ]) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3869) "hour12"
                (match x3870 with
                 | `Undefined x3871 -> undefined_to_js x3871
                 | `U1 x3872 -> Ojs.bool_to_js x3872)
        let (get_timeZone : 'tags this -> string option) =
          fun (x3874 : 'tags this) ->
            Ojs.option_of_js Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3874) "timeZone")
        let (set_timeZone :
          'tags this -> [ `Undefined of undefined  | `U1 of string ] -> unit)
          =
          fun (x3877 : 'tags this) ->
            fun (x3878 : [ `Undefined of undefined  | `U1 of string ]) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3877) "timeZone"
                (match x3878 with
                 | `Undefined x3879 -> undefined_to_js x3879
                 | `U1 x3880 -> Ojs.string_to_js x3880)
        let (create :
          ?formatMatcher:[ `L_s25_basic  | `L_s26_best_fit ] ->
            ?dateStyle:[ `L_s122_short  | `L_s63_full  | `L_s78_long 
                       | `L_s84_medium ]
              ->
              ?timeStyle:[ `L_s122_short  | `L_s63_full  | `L_s78_long 
                         | `L_s84_medium ]
                ->
                ?dayPeriod:[ `L_s122_short  | `L_s78_long  | `L_s92_narrow ]
                  ->
                  ?fractionalSecondDigits:[ `L_n_1  | `L_n_2  | `L_n_3 ] ->
                    ?calendar:string ->
                      ?numberingSystem:string ->
                        ?hourCycle:[ `L_s67_h11  | `L_s68_h12  | `L_s69_h23 
                                   | `L_s70_h24 ]
                          ->
                          ?localeMatcher:[ `L_s26_best_fit  | `L_s81_lookup ]
                            ->
                            ?weekday:[ `L_s122_short  | `L_s78_long 
                                     | `L_s92_narrow ]
                              ->
                              ?era:[ `L_s122_short  | `L_s78_long 
                                   | `L_s92_narrow ]
                                ->
                                ?year:[ `L_s0_2_digit  | `L_s98_numeric ] ->
                                  ?month:[ `L_s0_2_digit  | `L_s122_short 
                                         | `L_s78_long  | `L_s92_narrow 
                                         | `L_s98_numeric ]
                                    ->
                                    ?day:[ `L_s0_2_digit  | `L_s98_numeric ]
                                      ->
                                      ?hour:[ `L_s0_2_digit 
                                            | `L_s98_numeric ]
                                        ->
                                        ?minute:[ `L_s0_2_digit 
                                                | `L_s98_numeric ]
                                          ->
                                          ?second:[ `L_s0_2_digit 
                                                  | `L_s98_numeric ]
                                            ->
                                            ?timeZoneName:[ `L_s122_short 
                                                          | `L_s123_shortGeneric
                                                               | `L_s124_shortOffset
                                                                    | 
                                                            `L_s78_long 
                                                          | `L_s79_longGeneric
                                                               | `L_s80_longOffset
                                                                   ]
                                              ->
                                              ?hour12:bool ->
                                                ?timeZone:string -> unit -> t)
          =
          fun
            ?formatMatcher:(x3882 :
                             [ `L_s25_basic  | `L_s26_best_fit ] option)
            ->
            fun
              ?dateStyle:(x3883 :
                           [ `L_s122_short  | `L_s63_full  | `L_s78_long 
                           | `L_s84_medium ] option)
              ->
              fun
                ?timeStyle:(x3884 :
                             [ `L_s122_short  | `L_s63_full  | `L_s78_long 
                             | `L_s84_medium ] option)
                ->
                fun
                  ?dayPeriod:(x3885 :
                               [ `L_s122_short  | `L_s78_long 
                               | `L_s92_narrow ] option)
                  ->
                  fun
                    ?fractionalSecondDigits:(x3886 :
                                              [ `L_n_1  | `L_n_2  | `L_n_3 ]
                                                option)
                    ->
                    fun ?calendar:(x3887 : string option) ->
                      fun ?numberingSystem:(x3888 : string option) ->
                        fun
                          ?hourCycle:(x3889 :
                                       [ `L_s67_h11  | `L_s68_h12 
                                       | `L_s69_h23  | `L_s70_h24 ] option)
                          ->
                          fun
                            ?localeMatcher:(x3890 :
                                             [ `L_s26_best_fit 
                                             | `L_s81_lookup ] option)
                            ->
                            fun
                              ?weekday:(x3891 :
                                         [ `L_s122_short  | `L_s78_long 
                                         | `L_s92_narrow ] option)
                              ->
                              fun
                                ?era:(x3892 :
                                       [ `L_s122_short  | `L_s78_long 
                                       | `L_s92_narrow ] option)
                                ->
                                fun
                                  ?year:(x3893 :
                                          [ `L_s0_2_digit  | `L_s98_numeric ]
                                            option)
                                  ->
                                  fun
                                    ?month:(x3894 :
                                             [ `L_s0_2_digit 
                                             | `L_s122_short  | `L_s78_long 
                                             | `L_s92_narrow 
                                             | `L_s98_numeric ] option)
                                    ->
                                    fun
                                      ?day:(x3895 :
                                             [ `L_s0_2_digit 
                                             | `L_s98_numeric ] option)
                                      ->
                                      fun
                                        ?hour:(x3896 :
                                                [ `L_s0_2_digit 
                                                | `L_s98_numeric ] option)
                                        ->
                                        fun
                                          ?minute:(x3897 :
                                                    [ `L_s0_2_digit 
                                                    | `L_s98_numeric ] option)
                                          ->
                                          fun
                                            ?second:(x3898 :
                                                      [ `L_s0_2_digit 
                                                      | `L_s98_numeric ]
                                                        option)
                                            ->
                                            fun
                                              ?timeZoneName:(x3899 :
                                                              [
                                                                `L_s122_short 
                                                              | `L_s123_shortGeneric
                                                                   | 
                                                                `L_s124_shortOffset
                                                                   | 
                                                                `L_s78_long 
                                                              | `L_s79_longGeneric
                                                                   | 
                                                                `L_s80_longOffset
                                                                  ]
                                                                option)
                                              ->
                                              fun
                                                ?hour12:(x3900 : bool option)
                                                ->
                                                fun
                                                  ?timeZone:(x3901 :
                                                              string option)
                                                  ->
                                                  fun () ->
                                                    let x3902 =
                                                      Ojs.empty_obj () in
                                                    (match x3882 with
                                                     | Some x3922 ->
                                                         Ojs.set_prop_ascii
                                                           x3902
                                                           "formatMatcher"
                                                           (match x3922 with
                                                            | `L_s25_basic ->
                                                                Ojs.string_to_js
                                                                  "basic"
                                                            | `L_s26_best_fit
                                                                ->
                                                                Ojs.string_to_js
                                                                  "best fit")
                                                     | None -> ());
                                                    (match x3883 with
                                                     | Some x3921 ->
                                                         Ojs.set_prop_ascii
                                                           x3902 "dateStyle"
                                                           (match x3921 with
                                                            | `L_s122_short
                                                                ->
                                                                Ojs.string_to_js
                                                                  "short"
                                                            | `L_s63_full ->
                                                                Ojs.string_to_js
                                                                  "full"
                                                            | `L_s78_long ->
                                                                Ojs.string_to_js
                                                                  "long"
                                                            | `L_s84_medium
                                                                ->
                                                                Ojs.string_to_js
                                                                  "medium")
                                                     | None -> ());
                                                    (match x3884 with
                                                     | Some x3920 ->
                                                         Ojs.set_prop_ascii
                                                           x3902 "timeStyle"
                                                           (match x3920 with
                                                            | `L_s122_short
                                                                ->
                                                                Ojs.string_to_js
                                                                  "short"
                                                            | `L_s63_full ->
                                                                Ojs.string_to_js
                                                                  "full"
                                                            | `L_s78_long ->
                                                                Ojs.string_to_js
                                                                  "long"
                                                            | `L_s84_medium
                                                                ->
                                                                Ojs.string_to_js
                                                                  "medium")
                                                     | None -> ());
                                                    (match x3885 with
                                                     | Some x3919 ->
                                                         Ojs.set_prop_ascii
                                                           x3902 "dayPeriod"
                                                           (match x3919 with
                                                            | `L_s122_short
                                                                ->
                                                                Ojs.string_to_js
                                                                  "short"
                                                            | `L_s78_long ->
                                                                Ojs.string_to_js
                                                                  "long"
                                                            | `L_s92_narrow
                                                                ->
                                                                Ojs.string_to_js
                                                                  "narrow")
                                                     | None -> ());
                                                    (match x3886 with
                                                     | Some x3918 ->
                                                         Ojs.set_prop_ascii
                                                           x3902
                                                           "fractionalSecondDigits"
                                                           (match x3918 with
                                                            | `L_n_1 ->
                                                                Ojs.int_to_js
                                                                  1
                                                            | `L_n_2 ->
                                                                Ojs.int_to_js
                                                                  2
                                                            | `L_n_3 ->
                                                                Ojs.int_to_js
                                                                  3)
                                                     | None -> ());
                                                    (match x3887 with
                                                     | Some x3917 ->
                                                         Ojs.set_prop_ascii
                                                           x3902 "calendar"
                                                           (Ojs.string_to_js
                                                              x3917)
                                                     | None -> ());
                                                    (match x3888 with
                                                     | Some x3916 ->
                                                         Ojs.set_prop_ascii
                                                           x3902
                                                           "numberingSystem"
                                                           (Ojs.string_to_js
                                                              x3916)
                                                     | None -> ());
                                                    (match x3889 with
                                                     | Some x3915 ->
                                                         Ojs.set_prop_ascii
                                                           x3902 "hourCycle"
                                                           (match x3915 with
                                                            | `L_s67_h11 ->
                                                                Ojs.string_to_js
                                                                  "h11"
                                                            | `L_s68_h12 ->
                                                                Ojs.string_to_js
                                                                  "h12"
                                                            | `L_s69_h23 ->
                                                                Ojs.string_to_js
                                                                  "h23"
                                                            | `L_s70_h24 ->
                                                                Ojs.string_to_js
                                                                  "h24")
                                                     | None -> ());
                                                    (match x3890 with
                                                     | Some x3914 ->
                                                         Ojs.set_prop_ascii
                                                           x3902
                                                           "localeMatcher"
                                                           (match x3914 with
                                                            | `L_s26_best_fit
                                                                ->
                                                                Ojs.string_to_js
                                                                  "best fit"
                                                            | `L_s81_lookup
                                                                ->
                                                                Ojs.string_to_js
                                                                  "lookup")
                                                     | None -> ());
                                                    (match x3891 with
                                                     | Some x3913 ->
                                                         Ojs.set_prop_ascii
                                                           x3902 "weekday"
                                                           (match x3913 with
                                                            | `L_s122_short
                                                                ->
                                                                Ojs.string_to_js
                                                                  "short"
                                                            | `L_s78_long ->
                                                                Ojs.string_to_js
                                                                  "long"
                                                            | `L_s92_narrow
                                                                ->
                                                                Ojs.string_to_js
                                                                  "narrow")
                                                     | None -> ());
                                                    (match x3892 with
                                                     | Some x3912 ->
                                                         Ojs.set_prop_ascii
                                                           x3902 "era"
                                                           (match x3912 with
                                                            | `L_s122_short
                                                                ->
                                                                Ojs.string_to_js
                                                                  "short"
                                                            | `L_s78_long ->
                                                                Ojs.string_to_js
                                                                  "long"
                                                            | `L_s92_narrow
                                                                ->
                                                                Ojs.string_to_js
                                                                  "narrow")
                                                     | None -> ());
                                                    (match x3893 with
                                                     | Some x3911 ->
                                                         Ojs.set_prop_ascii
                                                           x3902 "year"
                                                           (match x3911 with
                                                            | `L_s0_2_digit
                                                                ->
                                                                Ojs.string_to_js
                                                                  "2-digit"
                                                            | `L_s98_numeric
                                                                ->
                                                                Ojs.string_to_js
                                                                  "numeric")
                                                     | None -> ());
                                                    (match x3894 with
                                                     | Some x3910 ->
                                                         Ojs.set_prop_ascii
                                                           x3902 "month"
                                                           (match x3910 with
                                                            | `L_s0_2_digit
                                                                ->
                                                                Ojs.string_to_js
                                                                  "2-digit"
                                                            | `L_s122_short
                                                                ->
                                                                Ojs.string_to_js
                                                                  "short"
                                                            | `L_s78_long ->
                                                                Ojs.string_to_js
                                                                  "long"
                                                            | `L_s92_narrow
                                                                ->
                                                                Ojs.string_to_js
                                                                  "narrow"
                                                            | `L_s98_numeric
                                                                ->
                                                                Ojs.string_to_js
                                                                  "numeric")
                                                     | None -> ());
                                                    (match x3895 with
                                                     | Some x3909 ->
                                                         Ojs.set_prop_ascii
                                                           x3902 "day"
                                                           (match x3909 with
                                                            | `L_s0_2_digit
                                                                ->
                                                                Ojs.string_to_js
                                                                  "2-digit"
                                                            | `L_s98_numeric
                                                                ->
                                                                Ojs.string_to_js
                                                                  "numeric")
                                                     | None -> ());
                                                    (match x3896 with
                                                     | Some x3908 ->
                                                         Ojs.set_prop_ascii
                                                           x3902 "hour"
                                                           (match x3908 with
                                                            | `L_s0_2_digit
                                                                ->
                                                                Ojs.string_to_js
                                                                  "2-digit"
                                                            | `L_s98_numeric
                                                                ->
                                                                Ojs.string_to_js
                                                                  "numeric")
                                                     | None -> ());
                                                    (match x3897 with
                                                     | Some x3907 ->
                                                         Ojs.set_prop_ascii
                                                           x3902 "minute"
                                                           (match x3907 with
                                                            | `L_s0_2_digit
                                                                ->
                                                                Ojs.string_to_js
                                                                  "2-digit"
                                                            | `L_s98_numeric
                                                                ->
                                                                Ojs.string_to_js
                                                                  "numeric")
                                                     | None -> ());
                                                    (match x3898 with
                                                     | Some x3906 ->
                                                         Ojs.set_prop_ascii
                                                           x3902 "second"
                                                           (match x3906 with
                                                            | `L_s0_2_digit
                                                                ->
                                                                Ojs.string_to_js
                                                                  "2-digit"
                                                            | `L_s98_numeric
                                                                ->
                                                                Ojs.string_to_js
                                                                  "numeric")
                                                     | None -> ());
                                                    (match x3899 with
                                                     | Some x3905 ->
                                                         Ojs.set_prop_ascii
                                                           x3902
                                                           "timeZoneName"
                                                           (match x3905 with
                                                            | `L_s122_short
                                                                ->
                                                                Ojs.string_to_js
                                                                  "short"
                                                            | `L_s123_shortGeneric
                                                                ->
                                                                Ojs.string_to_js
                                                                  "shortGeneric"
                                                            | `L_s124_shortOffset
                                                                ->
                                                                Ojs.string_to_js
                                                                  "shortOffset"
                                                            | `L_s78_long ->
                                                                Ojs.string_to_js
                                                                  "long"
                                                            | `L_s79_longGeneric
                                                                ->
                                                                Ojs.string_to_js
                                                                  "longGeneric"
                                                            | `L_s80_longOffset
                                                                ->
                                                                Ojs.string_to_js
                                                                  "longOffset")
                                                     | None -> ());
                                                    (match x3900 with
                                                     | Some x3904 ->
                                                         Ojs.set_prop_ascii
                                                           x3902 "hour12"
                                                           (Ojs.bool_to_js
                                                              x3904)
                                                     | None -> ());
                                                    (match x3901 with
                                                     | Some x3903 ->
                                                         Ojs.set_prop_ascii
                                                           x3902 "timeZone"
                                                           (Ojs.string_to_js
                                                              x3903)
                                                     | None -> ());
                                                    t_of_js x3902
        let cast_from = Obj.magic
      end
    module DateTimeFormat =
      struct
        type t = [ `Intl_DateTimeFormat ] intf
        let rec t_of_js : Ojs.t -> t = Obj.magic
        and t_to_js : t -> Ojs.t = Obj.magic
        type tags = [ `Intl_DateTimeFormat ]
        type 'tags this =
          'tags intf constraint 'tags = [> `Intl_DateTimeFormat ]
        let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
          =
          fun (type __tags) ->
            fun (__tags_of_js : Ojs.t -> __tags) ->
              fun (x3925 : Ojs.t) -> intf_of_js __tags_of_js x3925
        and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
          fun (type __tags) ->
            fun (__tags_to_js : __tags -> Ojs.t) ->
              fun (x3923 : __tags intf) -> intf_to_js __tags_to_js x3923
        let (formatRange :
          'tags this ->
            startDate:[ `U1 of Date.t  | `U2 of float  | `U3 of bigint ] ->
              endDate:[ `U1 of Date.t  | `U2 of float  | `U3 of bigint ] ->
                string)
          =
          fun (x3935 : 'tags this) ->
            fun
              ~startDate:(x3927 :
                           [ `U1 of Date.t  | `U2 of float  | `U3 of bigint ])
              ->
              fun
                ~endDate:(x3931 :
                           [ `U1 of Date.t  | `U2 of float  | `U3 of bigint ])
                ->
                Ojs.string_of_js
                  (Ojs.call (this_to_js Obj.magic x3935) "formatRange"
                     [|((match x3927 with
                         | `U1 x3928 -> Date.t_to_js x3928
                         | `U2 x3929 -> Ojs.float_to_js x3929
                         | `U3 x3930 -> bigint_to_js x3930));((match x3931
                                                               with
                                                               | `U1 x3932 ->
                                                                   Date.t_to_js
                                                                    x3932
                                                               | `U2 x3933 ->
                                                                   Ojs.float_to_js
                                                                    x3933
                                                               | `U3 x3934 ->
                                                                   bigint_to_js
                                                                    x3934))|])
        let (formatRangeToParts :
          'tags this ->
            startDate:[ `U1 of Date.t  | `U2 of float  | `U3 of bigint ] ->
              endDate:[ `U1 of Date.t  | `U2 of float  | `U3 of bigint ] ->
                DateTimeRangeFormatPart.t list)
          =
          fun (x3945 : 'tags this) ->
            fun
              ~startDate:(x3937 :
                           [ `U1 of Date.t  | `U2 of float  | `U3 of bigint ])
              ->
              fun
                ~endDate:(x3941 :
                           [ `U1 of Date.t  | `U2 of float  | `U3 of bigint ])
                ->
                Ojs.list_of_js DateTimeRangeFormatPart.t_of_js
                  (Ojs.call (this_to_js Obj.magic x3945) "formatRangeToParts"
                     [|((match x3937 with
                         | `U1 x3938 -> Date.t_to_js x3938
                         | `U2 x3939 -> Ojs.float_to_js x3939
                         | `U3 x3940 -> bigint_to_js x3940));((match x3941
                                                               with
                                                               | `U1 x3942 ->
                                                                   Date.t_to_js
                                                                    x3942
                                                               | `U2 x3943 ->
                                                                   Ojs.float_to_js
                                                                    x3943
                                                               | `U3 x3944 ->
                                                                   bigint_to_js
                                                                    x3944))|])
        let (formatToParts :
          'tags this ->
            ?date:[ `U1 of Date.t  | `U2 of float ] ->
              unit -> DateTimeFormatPart.t list)
          =
          fun (x3953 : 'tags this) ->
            fun ?date:(x3948 : [ `U1 of Date.t  | `U2 of float ] option) ->
              fun () ->
                Ojs.list_of_js DateTimeFormatPart.t_of_js
                  (let x3955 = this_to_js Obj.magic x3953 in
                   Ojs.call (Ojs.get_prop_ascii x3955 "formatToParts")
                     "apply"
                     [|x3955;((let x3949 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               (match x3948 with
                                | Some x3950 ->
                                    ignore
                                      (Ojs.call x3949 "push"
                                         [|((match x3950 with
                                             | `U1 x3951 ->
                                                 Date.t_to_js x3951
                                             | `U2 x3952 ->
                                                 Ojs.float_to_js x3952))|])
                                | None -> ());
                               x3949))|])
        let (format :
          'tags this ->
            ?date:[ `U1 of Date.t  | `U2 of float ] -> unit -> string)
          =
          fun (x3962 : 'tags this) ->
            fun ?date:(x3957 : [ `U1 of Date.t  | `U2 of float ] option) ->
              fun () ->
                Ojs.string_of_js
                  (let x3964 = this_to_js Obj.magic x3962 in
                   Ojs.call (Ojs.get_prop_ascii x3964 "format") "apply"
                     [|x3964;((let x3958 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               (match x3957 with
                                | Some x3959 ->
                                    ignore
                                      (Ojs.call x3958 "push"
                                         [|((match x3959 with
                                             | `U1 x3960 ->
                                                 Date.t_to_js x3960
                                             | `U2 x3961 ->
                                                 Ojs.float_to_js x3961))|])
                                | None -> ());
                               x3958))|])
        let (resolvedOptions : 'tags this -> ResolvedDateTimeFormatOptions.t)
          =
          fun (x3965 : 'tags this) ->
            ResolvedDateTimeFormatOptions.t_of_js
              (Ojs.call (this_to_js Obj.magic x3965) "resolvedOptions" [||])
        let cast_from = Obj.magic
        let (create :
          ?locales:[ `U1 of string  | `U2 of string list ] ->
            ?options:DateTimeFormatOptions.t -> unit -> t)
          =
          fun
            ?locales:(x3967 : [ `U1 of string  | `U2 of string list ] option)
            ->
            fun ?options:(x3968 : DateTimeFormatOptions.t option) ->
              fun () ->
                t_of_js
                  (Ojs.new_obj_arr
                     (Ojs.get_prop_ascii
                        (Ojs.get_prop_ascii Ojs.global "Intl")
                        "DateTimeFormat")
                     (let x3969 =
                        Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                          [||] in
                      (match x3967 with
                       | Some x3971 ->
                           ignore
                             (Ojs.call x3969 "push"
                                [|((match x3971 with
                                    | `U1 x3972 -> Ojs.string_to_js x3972
                                    | `U2 x3973 ->
                                        Ojs.list_to_js Ojs.string_to_js x3973))|])
                       | None -> ());
                      (match x3968 with
                       | Some x3970 ->
                           ignore
                             (Ojs.call x3969 "push"
                                [|(DateTimeFormatOptions.t_to_js x3970)|])
                       | None -> ());
                      x3969))
        let (invoke :
          ?locales:[ `U1 of string  | `U2 of string list ] ->
            ?options:DateTimeFormatOptions.t -> unit -> t)
          =
          fun
            ?locales:(x3975 : [ `U1 of string  | `U2 of string list ] option)
            ->
            fun ?options:(x3976 : DateTimeFormatOptions.t option) ->
              fun () ->
                t_of_js
                  (Ojs.call
                     (Ojs.get_prop_ascii
                        (Ojs.get_prop_ascii Ojs.global "Intl")
                        "DateTimeFormat") "apply"
                     [|Ojs.null;((let x3977 =
                                    Ojs.new_obj
                                      (Ojs.get_prop_ascii Ojs.global "Array")
                                      [||] in
                                  (match x3975 with
                                   | Some x3979 ->
                                       ignore
                                         (Ojs.call x3977 "push"
                                            [|((match x3979 with
                                                | `U1 x3980 ->
                                                    Ojs.string_to_js x3980
                                                | `U2 x3981 ->
                                                    Ojs.list_to_js
                                                      Ojs.string_to_js x3981))|])
                                   | None -> ());
                                  (match x3976 with
                                   | Some x3978 ->
                                       ignore
                                         (Ojs.call x3977 "push"
                                            [|(DateTimeFormatOptions.t_to_js
                                                 x3978)|])
                                   | None -> ());
                                  x3977))|])
        let (supportedLocalesOf :
          locales:[ `U1 of string  | `U2 of string list ] ->
            ?options:DateTimeFormatOptions.t -> unit -> string list)
          =
          fun ~locales:(x3983 : [ `U1 of string  | `U2 of string list ]) ->
            fun ?options:(x3984 : DateTimeFormatOptions.t option) ->
              fun () ->
                Ojs.list_of_js Ojs.string_of_js
                  (let x3990 =
                     Ojs.get_prop_ascii
                       (Ojs.get_prop_ascii Ojs.global "Intl")
                       "DateTimeFormat" in
                   Ojs.call (Ojs.get_prop_ascii x3990 "supportedLocalesOf")
                     "apply"
                     [|x3990;((let x3985 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x3985 "push"
                                    [|((match x3983 with
                                        | `U1 x3987 -> Ojs.string_to_js x3987
                                        | `U2 x3988 ->
                                            Ojs.list_to_js Ojs.string_to_js
                                              x3988))|]);
                               (match x3984 with
                                | Some x3986 ->
                                    ignore
                                      (Ojs.call x3985 "push"
                                         [|(DateTimeFormatOptions.t_to_js
                                              x3986)|])
                                | None -> ());
                               x3985))|])
        let (prototype : unit -> t) =
          fun () ->
            t_of_js
              (Ojs.get_prop_ascii
                 (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Intl")
                    "DateTimeFormat") "prototype")
      end
    module ResolvedCollatorOptions =
      struct
        type t = [ `Intl_ResolvedCollatorOptions ] intf
        let rec t_of_js : Ojs.t -> t = Obj.magic
        and t_to_js : t -> Ojs.t = Obj.magic
        type tags = [ `Intl_ResolvedCollatorOptions ]
        type 'tags this =
          'tags intf constraint 'tags = [> `Intl_ResolvedCollatorOptions ]
        let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
          =
          fun (type __tags) ->
            fun (__tags_of_js : Ojs.t -> __tags) ->
              fun (x3994 : Ojs.t) -> intf_of_js __tags_of_js x3994
        and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
          fun (type __tags) ->
            fun (__tags_to_js : __tags -> Ojs.t) ->
              fun (x3992 : __tags intf) -> intf_to_js __tags_to_js x3992
        let (get_locale : 'tags this -> string) =
          fun (x3996 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3996) "locale")
        let (set_locale : 'tags this -> string -> unit) =
          fun (x3998 : 'tags this) ->
            fun (x3999 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3998) "locale"
                (Ojs.string_to_js x3999)
        let (get_usage : 'tags this -> string) =
          fun (x4001 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x4001) "usage")
        let (set_usage : 'tags this -> string -> unit) =
          fun (x4003 : 'tags this) ->
            fun (x4004 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x4003) "usage"
                (Ojs.string_to_js x4004)
        let (get_sensitivity : 'tags this -> string) =
          fun (x4006 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x4006) "sensitivity")
        let (set_sensitivity : 'tags this -> string -> unit) =
          fun (x4008 : 'tags this) ->
            fun (x4009 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x4008) "sensitivity"
                (Ojs.string_to_js x4009)
        let (get_ignorePunctuation : 'tags this -> bool) =
          fun (x4011 : 'tags this) ->
            Ojs.bool_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x4011)
                 "ignorePunctuation")
        let (set_ignorePunctuation : 'tags this -> bool -> unit) =
          fun (x4013 : 'tags this) ->
            fun (x4014 : bool) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x4013)
                "ignorePunctuation" (Ojs.bool_to_js x4014)
        let (get_collation : 'tags this -> string) =
          fun (x4016 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x4016) "collation")
        let (set_collation : 'tags this -> string -> unit) =
          fun (x4018 : 'tags this) ->
            fun (x4019 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x4018) "collation"
                (Ojs.string_to_js x4019)
        let (get_caseFirst : 'tags this -> string) =
          fun (x4021 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x4021) "caseFirst")
        let (set_caseFirst : 'tags this -> string -> unit) =
          fun (x4023 : 'tags this) ->
            fun (x4024 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x4023) "caseFirst"
                (Ojs.string_to_js x4024)
        let (get_numeric : 'tags this -> bool) =
          fun (x4026 : 'tags this) ->
            Ojs.bool_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x4026) "numeric")
        let (set_numeric : 'tags this -> bool -> unit) =
          fun (x4028 : 'tags this) ->
            fun (x4029 : bool) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x4028) "numeric"
                (Ojs.bool_to_js x4029)
        let (create :
          locale:string ->
            usage:string ->
              sensitivity:string ->
                ignorePunctuation:bool ->
                  collation:string ->
                    caseFirst:string -> numeric:bool -> unit -> t)
          =
          fun ~locale:(x4031 : string) ->
            fun ~usage:(x4032 : string) ->
              fun ~sensitivity:(x4033 : string) ->
                fun ~ignorePunctuation:(x4034 : bool) ->
                  fun ~collation:(x4035 : string) ->
                    fun ~caseFirst:(x4036 : string) ->
                      fun ~numeric:(x4037 : bool) ->
                        fun () ->
                          let x4038 = Ojs.empty_obj () in
                          Ojs.set_prop_ascii x4038 "locale"
                            (Ojs.string_to_js x4031);
                          Ojs.set_prop_ascii x4038 "usage"
                            (Ojs.string_to_js x4032);
                          Ojs.set_prop_ascii x4038 "sensitivity"
                            (Ojs.string_to_js x4033);
                          Ojs.set_prop_ascii x4038 "ignorePunctuation"
                            (Ojs.bool_to_js x4034);
                          Ojs.set_prop_ascii x4038 "collation"
                            (Ojs.string_to_js x4035);
                          Ojs.set_prop_ascii x4038 "caseFirst"
                            (Ojs.string_to_js x4036);
                          Ojs.set_prop_ascii x4038 "numeric"
                            (Ojs.bool_to_js x4037);
                          t_of_js x4038
        let cast_from = Obj.magic
      end
    module CollatorOptions =
      struct
        type t = [ `Intl_CollatorOptions ] intf
        let rec t_of_js : Ojs.t -> t = Obj.magic
        and t_to_js : t -> Ojs.t = Obj.magic
        type tags = [ `Intl_CollatorOptions ]
        type 'tags this =
          'tags intf constraint 'tags = [> `Intl_CollatorOptions ]
        let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
          =
          fun (type __tags) ->
            fun (__tags_of_js : Ojs.t -> __tags) ->
              fun (x4041 : Ojs.t) -> intf_of_js __tags_of_js x4041
        and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
          fun (type __tags) ->
            fun (__tags_to_js : __tags -> Ojs.t) ->
              fun (x4039 : __tags intf) -> intf_to_js __tags_to_js x4039
        let (get_usage :
          'tags this -> [ `L_s116_search  | `L_s125_sort ] option) =
          fun (x4043 : 'tags this) ->
            Ojs.option_of_js
              (fun (x4045 : Ojs.t) ->
                 let x4046 = x4045 in
                 match Ojs.string_of_js x4046 with
                 | "search" -> `L_s116_search
                 | "sort" -> `L_s125_sort
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x4043) "usage")
        let (set_usage :
          'tags this ->
            [ `Undefined of undefined  | `U1 of [ `L_s125_sort ] 
            | `U2 of [ `L_s116_search ] ] -> unit)
          =
          fun (x4047 : 'tags this) ->
            fun
              (x4048 :
                [ `Undefined of undefined  | `U1 of [ `L_s125_sort ] 
                | `U2 of [ `L_s116_search ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x4047) "usage"
                (match x4048 with
                 | `Undefined x4049 -> undefined_to_js x4049
                 | `U1 x4050 ->
                     (match x4050 with
                      | `L_s125_sort -> Ojs.string_to_js "sort")
                 | `U2 x4051 ->
                     (match x4051 with
                      | `L_s116_search -> Ojs.string_to_js "search"))
        let (get_localeMatcher :
          'tags this -> [ `L_s26_best_fit  | `L_s81_lookup ] option) =
          fun (x4053 : 'tags this) ->
            Ojs.option_of_js
              (fun (x4055 : Ojs.t) ->
                 let x4056 = x4055 in
                 match Ojs.string_of_js x4056 with
                 | "best fit" -> `L_s26_best_fit
                 | "lookup" -> `L_s81_lookup
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x4053)
                 "localeMatcher")
        let (set_localeMatcher :
          'tags this ->
            [ `Undefined of undefined  | `U1 of [ `L_s81_lookup ] 
            | `U2 of [ `L_s26_best_fit ] ] -> unit)
          =
          fun (x4057 : 'tags this) ->
            fun
              (x4058 :
                [ `Undefined of undefined  | `U1 of [ `L_s81_lookup ] 
                | `U2 of [ `L_s26_best_fit ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x4057) "localeMatcher"
                (match x4058 with
                 | `Undefined x4059 -> undefined_to_js x4059
                 | `U1 x4060 ->
                     (match x4060 with
                      | `L_s81_lookup -> Ojs.string_to_js "lookup")
                 | `U2 x4061 ->
                     (match x4061 with
                      | `L_s26_best_fit -> Ojs.string_to_js "best fit"))
        let (get_numeric : 'tags this -> bool option) =
          fun (x4063 : 'tags this) ->
            Ojs.option_of_js Ojs.bool_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x4063) "numeric")
        let (set_numeric :
          'tags this -> [ `Undefined of undefined  | `U1 of bool ] -> unit) =
          fun (x4066 : 'tags this) ->
            fun (x4067 : [ `Undefined of undefined  | `U1 of bool ]) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x4066) "numeric"
                (match x4067 with
                 | `Undefined x4068 -> undefined_to_js x4068
                 | `U1 x4069 -> Ojs.bool_to_js x4069)
        let (get_caseFirst :
          'tags this ->
            [ `L_s139_upper  | `L_s58_false  | `L_s82_lower ] option)
          =
          fun (x4071 : 'tags this) ->
            Ojs.option_of_js
              (fun (x4073 : Ojs.t) ->
                 let x4074 = x4073 in
                 match Ojs.string_of_js x4074 with
                 | "upper" -> `L_s139_upper
                 | "false" -> `L_s58_false
                 | "lower" -> `L_s82_lower
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x4071) "caseFirst")
        let (set_caseFirst :
          'tags this ->
            [ `Undefined of undefined  | `U1 of [ `L_s139_upper ] 
            | `U2 of [ `L_s82_lower ]  | `U3 of [ `L_s58_false ] ] -> 
              unit)
          =
          fun (x4075 : 'tags this) ->
            fun
              (x4076 :
                [ `Undefined of undefined  | `U1 of [ `L_s139_upper ] 
                | `U2 of [ `L_s82_lower ]  | `U3 of [ `L_s58_false ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x4075) "caseFirst"
                (match x4076 with
                 | `Undefined x4077 -> undefined_to_js x4077
                 | `U1 x4078 ->
                     (match x4078 with
                      | `L_s139_upper -> Ojs.string_to_js "upper")
                 | `U2 x4079 ->
                     (match x4079 with
                      | `L_s82_lower -> Ojs.string_to_js "lower")
                 | `U3 x4080 ->
                     (match x4080 with
                      | `L_s58_false -> Ojs.string_to_js "false"))
        let (get_sensitivity :
          'tags this ->
            [ `L_s140_variant  | `L_s21_accent  | `L_s24_base 
            | `L_s30_case ] option)
          =
          fun (x4082 : 'tags this) ->
            Ojs.option_of_js
              (fun (x4084 : Ojs.t) ->
                 let x4085 = x4084 in
                 match Ojs.string_of_js x4085 with
                 | "variant" -> `L_s140_variant
                 | "accent" -> `L_s21_accent
                 | "base" -> `L_s24_base
                 | "case" -> `L_s30_case
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x4082) "sensitivity")
        let (set_sensitivity :
          'tags this ->
            [ `Undefined of undefined  | `U1 of [ `L_s24_base ] 
            | `U2 of [ `L_s21_accent ]  | `U3 of [ `L_s30_case ] 
            | `U4 of [ `L_s140_variant ] ] -> unit)
          =
          fun (x4086 : 'tags this) ->
            fun
              (x4087 :
                [ `Undefined of undefined  | `U1 of [ `L_s24_base ] 
                | `U2 of [ `L_s21_accent ]  | `U3 of [ `L_s30_case ] 
                | `U4 of [ `L_s140_variant ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x4086) "sensitivity"
                (match x4087 with
                 | `Undefined x4088 -> undefined_to_js x4088
                 | `U1 x4089 ->
                     (match x4089 with
                      | `L_s24_base -> Ojs.string_to_js "base")
                 | `U2 x4090 ->
                     (match x4090 with
                      | `L_s21_accent -> Ojs.string_to_js "accent")
                 | `U3 x4091 ->
                     (match x4091 with
                      | `L_s30_case -> Ojs.string_to_js "case")
                 | `U4 x4092 ->
                     (match x4092 with
                      | `L_s140_variant -> Ojs.string_to_js "variant"))
        let (get_collation :
          'tags this ->
            [ `L_s105_phonebk  | `L_s106_phonetic  | `L_s107_pinyin 
            | `L_s111_reformed  | `L_s117_searchjl  | `L_s129_stroke 
            | `L_s134_trad  | `L_s136_unihan  | `L_s148_zhuyin 
            | `L_s27_big5han  | `L_s34_compat  | `L_s44_dict 
            | `L_s45_direct  | `L_s47_ducet  | `L_s49_emoji  | `L_s52_eor 
            | `L_s64_gb2312 ] option)
          =
          fun (x4094 : 'tags this) ->
            Ojs.option_of_js
              (fun (x4096 : Ojs.t) ->
                 let x4097 = x4096 in
                 match Ojs.string_of_js x4097 with
                 | "phonebk" -> `L_s105_phonebk
                 | "phonetic" -> `L_s106_phonetic
                 | "pinyin" -> `L_s107_pinyin
                 | "reformed" -> `L_s111_reformed
                 | "searchjl" -> `L_s117_searchjl
                 | "stroke" -> `L_s129_stroke
                 | "trad" -> `L_s134_trad
                 | "unihan" -> `L_s136_unihan
                 | "zhuyin" -> `L_s148_zhuyin
                 | "big5han" -> `L_s27_big5han
                 | "compat" -> `L_s34_compat
                 | "dict" -> `L_s44_dict
                 | "direct" -> `L_s45_direct
                 | "ducet" -> `L_s47_ducet
                 | "emoji" -> `L_s49_emoji
                 | "eor" -> `L_s52_eor
                 | "gb2312" -> `L_s64_gb2312
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x4094) "collation")
        let (set_collation :
          'tags this ->
            [ `Undefined of undefined  | `U1 of [ `L_s27_big5han ] 
            | `U2 of [ `L_s34_compat ]  | `U3 of [ `L_s44_dict ] 
            | `U4 of [ `L_s45_direct ]  | `U5 of [ `L_s47_ducet ] 
            | `U6 of [ `L_s49_emoji ]  | `U7 of [ `L_s52_eor ] 
            | `U8 of [ `L_s64_gb2312 ]  | `U9 of [ `L_s105_phonebk ] 
            | `U10 of [ `L_s106_phonetic ]  | `U11 of [ `L_s107_pinyin ] 
            | `U12 of [ `L_s111_reformed ]  | `U13 of [ `L_s117_searchjl ] 
            | `U14 of [ `L_s129_stroke ]  | `U15 of [ `L_s134_trad ] 
            | `U16 of [ `L_s136_unihan ]  | `U17 of [ `L_s148_zhuyin ] ] ->
              unit)
          =
          fun (x4098 : 'tags this) ->
            fun
              (x4099 :
                [ `Undefined of undefined  | `U1 of [ `L_s27_big5han ] 
                | `U2 of [ `L_s34_compat ]  | `U3 of [ `L_s44_dict ] 
                | `U4 of [ `L_s45_direct ]  | `U5 of [ `L_s47_ducet ] 
                | `U6 of [ `L_s49_emoji ]  | `U7 of [ `L_s52_eor ] 
                | `U8 of [ `L_s64_gb2312 ]  | `U9 of [ `L_s105_phonebk ] 
                | `U10 of [ `L_s106_phonetic ]  | `U11 of [ `L_s107_pinyin ] 
                | `U12 of [ `L_s111_reformed ] 
                | `U13 of [ `L_s117_searchjl ]  | `U14 of [ `L_s129_stroke ] 
                | `U15 of [ `L_s134_trad ]  | `U16 of [ `L_s136_unihan ] 
                | `U17 of [ `L_s148_zhuyin ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x4098) "collation"
                (match x4099 with
                 | `Undefined x4100 -> undefined_to_js x4100
                 | `U1 x4101 ->
                     (match x4101 with
                      | `L_s27_big5han -> Ojs.string_to_js "big5han")
                 | `U2 x4102 ->
                     (match x4102 with
                      | `L_s34_compat -> Ojs.string_to_js "compat")
                 | `U3 x4103 ->
                     (match x4103 with
                      | `L_s44_dict -> Ojs.string_to_js "dict")
                 | `U4 x4104 ->
                     (match x4104 with
                      | `L_s45_direct -> Ojs.string_to_js "direct")
                 | `U5 x4105 ->
                     (match x4105 with
                      | `L_s47_ducet -> Ojs.string_to_js "ducet")
                 | `U6 x4106 ->
                     (match x4106 with
                      | `L_s49_emoji -> Ojs.string_to_js "emoji")
                 | `U7 x4107 ->
                     (match x4107 with | `L_s52_eor -> Ojs.string_to_js "eor")
                 | `U8 x4108 ->
                     (match x4108 with
                      | `L_s64_gb2312 -> Ojs.string_to_js "gb2312")
                 | `U9 x4109 ->
                     (match x4109 with
                      | `L_s105_phonebk -> Ojs.string_to_js "phonebk")
                 | `U10 x4110 ->
                     (match x4110 with
                      | `L_s106_phonetic -> Ojs.string_to_js "phonetic")
                 | `U11 x4111 ->
                     (match x4111 with
                      | `L_s107_pinyin -> Ojs.string_to_js "pinyin")
                 | `U12 x4112 ->
                     (match x4112 with
                      | `L_s111_reformed -> Ojs.string_to_js "reformed")
                 | `U13 x4113 ->
                     (match x4113 with
                      | `L_s117_searchjl -> Ojs.string_to_js "searchjl")
                 | `U14 x4114 ->
                     (match x4114 with
                      | `L_s129_stroke -> Ojs.string_to_js "stroke")
                 | `U15 x4115 ->
                     (match x4115 with
                      | `L_s134_trad -> Ojs.string_to_js "trad")
                 | `U16 x4116 ->
                     (match x4116 with
                      | `L_s136_unihan -> Ojs.string_to_js "unihan")
                 | `U17 x4117 ->
                     (match x4117 with
                      | `L_s148_zhuyin -> Ojs.string_to_js "zhuyin"))
        let (get_ignorePunctuation : 'tags this -> bool option) =
          fun (x4119 : 'tags this) ->
            Ojs.option_of_js Ojs.bool_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x4119)
                 "ignorePunctuation")
        let (set_ignorePunctuation :
          'tags this -> [ `Undefined of undefined  | `U1 of bool ] -> unit) =
          fun (x4122 : 'tags this) ->
            fun (x4123 : [ `Undefined of undefined  | `U1 of bool ]) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x4122)
                "ignorePunctuation"
                (match x4123 with
                 | `Undefined x4124 -> undefined_to_js x4124
                 | `U1 x4125 -> Ojs.bool_to_js x4125)
        let (create :
          ?usage:[ `L_s116_search  | `L_s125_sort ] ->
            ?localeMatcher:[ `L_s26_best_fit  | `L_s81_lookup ] ->
              ?numeric:bool ->
                ?caseFirst:[ `L_s139_upper  | `L_s58_false  | `L_s82_lower ]
                  ->
                  ?sensitivity:[ `L_s140_variant  | `L_s21_accent 
                               | `L_s24_base  | `L_s30_case ]
                    ->
                    ?collation:[ `L_s105_phonebk  | `L_s106_phonetic 
                               | `L_s107_pinyin  | `L_s111_reformed 
                               | `L_s117_searchjl  | `L_s129_stroke 
                               | `L_s134_trad  | `L_s136_unihan 
                               | `L_s148_zhuyin  | `L_s27_big5han 
                               | `L_s34_compat  | `L_s44_dict 
                               | `L_s45_direct  | `L_s47_ducet 
                               | `L_s49_emoji  | `L_s52_eor 
                               | `L_s64_gb2312 ]
                      -> ?ignorePunctuation:bool -> unit -> t)
          =
          fun ?usage:(x4127 : [ `L_s116_search  | `L_s125_sort ] option) ->
            fun
              ?localeMatcher:(x4128 :
                               [ `L_s26_best_fit  | `L_s81_lookup ] option)
              ->
              fun ?numeric:(x4129 : bool option) ->
                fun
                  ?caseFirst:(x4130 :
                               [ `L_s139_upper  | `L_s58_false 
                               | `L_s82_lower ] option)
                  ->
                  fun
                    ?sensitivity:(x4131 :
                                   [ `L_s140_variant  | `L_s21_accent 
                                   | `L_s24_base  | `L_s30_case ] option)
                    ->
                    fun
                      ?collation:(x4132 :
                                   [ `L_s105_phonebk  | `L_s106_phonetic 
                                   | `L_s107_pinyin  | `L_s111_reformed 
                                   | `L_s117_searchjl  | `L_s129_stroke 
                                   | `L_s134_trad  | `L_s136_unihan 
                                   | `L_s148_zhuyin  | `L_s27_big5han 
                                   | `L_s34_compat  | `L_s44_dict 
                                   | `L_s45_direct  | `L_s47_ducet 
                                   | `L_s49_emoji  | `L_s52_eor 
                                   | `L_s64_gb2312 ] option)
                      ->
                      fun ?ignorePunctuation:(x4133 : bool option) ->
                        fun () ->
                          let x4134 = Ojs.empty_obj () in
                          (match x4127 with
                           | Some x4141 ->
                               Ojs.set_prop_ascii x4134 "usage"
                                 (match x4141 with
                                  | `L_s116_search ->
                                      Ojs.string_to_js "search"
                                  | `L_s125_sort -> Ojs.string_to_js "sort")
                           | None -> ());
                          (match x4128 with
                           | Some x4140 ->
                               Ojs.set_prop_ascii x4134 "localeMatcher"
                                 (match x4140 with
                                  | `L_s26_best_fit ->
                                      Ojs.string_to_js "best fit"
                                  | `L_s81_lookup ->
                                      Ojs.string_to_js "lookup")
                           | None -> ());
                          (match x4129 with
                           | Some x4139 ->
                               Ojs.set_prop_ascii x4134 "numeric"
                                 (Ojs.bool_to_js x4139)
                           | None -> ());
                          (match x4130 with
                           | Some x4138 ->
                               Ojs.set_prop_ascii x4134 "caseFirst"
                                 (match x4138 with
                                  | `L_s139_upper -> Ojs.string_to_js "upper"
                                  | `L_s58_false -> Ojs.string_to_js "false"
                                  | `L_s82_lower -> Ojs.string_to_js "lower")
                           | None -> ());
                          (match x4131 with
                           | Some x4137 ->
                               Ojs.set_prop_ascii x4134 "sensitivity"
                                 (match x4137 with
                                  | `L_s140_variant ->
                                      Ojs.string_to_js "variant"
                                  | `L_s21_accent ->
                                      Ojs.string_to_js "accent"
                                  | `L_s24_base -> Ojs.string_to_js "base"
                                  | `L_s30_case -> Ojs.string_to_js "case")
                           | None -> ());
                          (match x4132 with
                           | Some x4136 ->
                               Ojs.set_prop_ascii x4134 "collation"
                                 (match x4136 with
                                  | `L_s105_phonebk ->
                                      Ojs.string_to_js "phonebk"
                                  | `L_s106_phonetic ->
                                      Ojs.string_to_js "phonetic"
                                  | `L_s107_pinyin ->
                                      Ojs.string_to_js "pinyin"
                                  | `L_s111_reformed ->
                                      Ojs.string_to_js "reformed"
                                  | `L_s117_searchjl ->
                                      Ojs.string_to_js "searchjl"
                                  | `L_s129_stroke ->
                                      Ojs.string_to_js "stroke"
                                  | `L_s134_trad -> Ojs.string_to_js "trad"
                                  | `L_s136_unihan ->
                                      Ojs.string_to_js "unihan"
                                  | `L_s148_zhuyin ->
                                      Ojs.string_to_js "zhuyin"
                                  | `L_s27_big5han ->
                                      Ojs.string_to_js "big5han"
                                  | `L_s34_compat ->
                                      Ojs.string_to_js "compat"
                                  | `L_s44_dict -> Ojs.string_to_js "dict"
                                  | `L_s45_direct ->
                                      Ojs.string_to_js "direct"
                                  | `L_s47_ducet -> Ojs.string_to_js "ducet"
                                  | `L_s49_emoji -> Ojs.string_to_js "emoji"
                                  | `L_s52_eor -> Ojs.string_to_js "eor"
                                  | `L_s64_gb2312 ->
                                      Ojs.string_to_js "gb2312")
                           | None -> ());
                          (match x4133 with
                           | Some x4135 ->
                               Ojs.set_prop_ascii x4134 "ignorePunctuation"
                                 (Ojs.bool_to_js x4135)
                           | None -> ());
                          t_of_js x4134
        let cast_from = Obj.magic
      end
    module Collator =
      struct
        type t = [ `Intl_Collator ] intf
        let rec t_of_js : Ojs.t -> t = Obj.magic
        and t_to_js : t -> Ojs.t = Obj.magic
        type tags = [ `Intl_Collator ]
        type 'tags this = 'tags intf constraint 'tags = [> `Intl_Collator ]
        let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
          =
          fun (type __tags) ->
            fun (__tags_of_js : Ojs.t -> __tags) ->
              fun (x4144 : Ojs.t) -> intf_of_js __tags_of_js x4144
        and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
          fun (type __tags) ->
            fun (__tags_to_js : __tags -> Ojs.t) ->
              fun (x4142 : __tags intf) -> intf_to_js __tags_to_js x4142
        let (compare : 'tags this -> x:string -> y:string -> float) =
          fun (x4148 : 'tags this) ->
            fun ~x:(x4146 : string) ->
              fun ~y:(x4147 : string) ->
                Ojs.float_of_js
                  (Ojs.call (this_to_js Obj.magic x4148) "compare"
                     [|(Ojs.string_to_js x4146);(Ojs.string_to_js x4147)|])
        let (resolvedOptions : 'tags this -> ResolvedCollatorOptions.t) =
          fun (x4150 : 'tags this) ->
            ResolvedCollatorOptions.t_of_js
              (Ojs.call (this_to_js Obj.magic x4150) "resolvedOptions" [||])
        let cast_from = Obj.magic
        let (create :
          ?locales:[ `U1 of string  | `U2 of string list ] ->
            ?options:CollatorOptions.t -> unit -> t)
          =
          fun
            ?locales:(x4152 : [ `U1 of string  | `U2 of string list ] option)
            ->
            fun ?options:(x4153 : CollatorOptions.t option) ->
              fun () ->
                t_of_js
                  (Ojs.new_obj_arr
                     (Ojs.get_prop_ascii
                        (Ojs.get_prop_ascii Ojs.global "Intl") "Collator")
                     (let x4154 =
                        Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                          [||] in
                      (match x4152 with
                       | Some x4156 ->
                           ignore
                             (Ojs.call x4154 "push"
                                [|((match x4156 with
                                    | `U1 x4157 -> Ojs.string_to_js x4157
                                    | `U2 x4158 ->
                                        Ojs.list_to_js Ojs.string_to_js x4158))|])
                       | None -> ());
                      (match x4153 with
                       | Some x4155 ->
                           ignore
                             (Ojs.call x4154 "push"
                                [|(CollatorOptions.t_to_js x4155)|])
                       | None -> ());
                      x4154))
        let (invoke :
          ?locales:[ `U1 of string  | `U2 of string list ] ->
            ?options:CollatorOptions.t -> unit -> t)
          =
          fun
            ?locales:(x4160 : [ `U1 of string  | `U2 of string list ] option)
            ->
            fun ?options:(x4161 : CollatorOptions.t option) ->
              fun () ->
                t_of_js
                  (Ojs.call
                     (Ojs.get_prop_ascii
                        (Ojs.get_prop_ascii Ojs.global "Intl") "Collator")
                     "apply"
                     [|Ojs.null;((let x4162 =
                                    Ojs.new_obj
                                      (Ojs.get_prop_ascii Ojs.global "Array")
                                      [||] in
                                  (match x4160 with
                                   | Some x4164 ->
                                       ignore
                                         (Ojs.call x4162 "push"
                                            [|((match x4164 with
                                                | `U1 x4165 ->
                                                    Ojs.string_to_js x4165
                                                | `U2 x4166 ->
                                                    Ojs.list_to_js
                                                      Ojs.string_to_js x4166))|])
                                   | None -> ());
                                  (match x4161 with
                                   | Some x4163 ->
                                       ignore
                                         (Ojs.call x4162 "push"
                                            [|(CollatorOptions.t_to_js x4163)|])
                                   | None -> ());
                                  x4162))|])
        let (supportedLocalesOf :
          locales:[ `U1 of string  | `U2 of string list ] ->
            ?options:CollatorOptions.t -> unit -> string list)
          =
          fun ~locales:(x4168 : [ `U1 of string  | `U2 of string list ]) ->
            fun ?options:(x4169 : CollatorOptions.t option) ->
              fun () ->
                Ojs.list_of_js Ojs.string_of_js
                  (let x4175 =
                     Ojs.get_prop_ascii
                       (Ojs.get_prop_ascii Ojs.global "Intl") "Collator" in
                   Ojs.call (Ojs.get_prop_ascii x4175 "supportedLocalesOf")
                     "apply"
                     [|x4175;((let x4170 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x4170 "push"
                                    [|((match x4168 with
                                        | `U1 x4172 -> Ojs.string_to_js x4172
                                        | `U2 x4173 ->
                                            Ojs.list_to_js Ojs.string_to_js
                                              x4173))|]);
                               (match x4169 with
                                | Some x4171 ->
                                    ignore
                                      (Ojs.call x4170 "push"
                                         [|(CollatorOptions.t_to_js x4171)|])
                                | None -> ());
                               x4170))|])
      end
    let (supportedValuesOf :
      [ `L_s131_timeZone  | `L_s137_unit  | `L_s28_calendar 
      | `L_s32_collation  | `L_s36_currency  | `L_s97_numberingSystem ] ->
        string list)
      =
      fun
        (x4177 :
          [ `L_s131_timeZone  | `L_s137_unit  | `L_s28_calendar 
          | `L_s32_collation  | `L_s36_currency  | `L_s97_numberingSystem ])
        ->
        Ojs.list_of_js Ojs.string_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Intl")
             "supportedValuesOf"
             [|((match x4177 with
                 | `L_s131_timeZone -> Ojs.string_to_js "timeZone"
                 | `L_s137_unit -> Ojs.string_to_js "unit"
                 | `L_s28_calendar -> Ojs.string_to_js "calendar"
                 | `L_s32_collation -> Ojs.string_to_js "collation"
                 | `L_s36_currency -> Ojs.string_to_js "currency"
                 | `L_s97_numberingSystem ->
                     Ojs.string_to_js "numberingSystem"))|])
  end
module String =
  struct
    module AnonymousInterface31 =
      struct
        type t = Ojs.t
        let rec t_of_js : Ojs.t -> t = fun (x4180 : Ojs.t) -> x4180
        and t_to_js : t -> Ojs.t = fun (x4179 : Ojs.t) -> x4179
      end
    module AnonymousInterface30 =
      struct
        type t = Ojs.t
        let rec t_of_js : Ojs.t -> t = fun (x4182 : Ojs.t) -> x4182
        and t_to_js : t -> Ojs.t = fun (x4181 : Ojs.t) -> x4181
      end
    module AnonymousInterface29 =
      struct
        type t = Ojs.t
        let rec t_of_js : Ojs.t -> t = fun (x4184 : Ojs.t) -> x4184
        and t_to_js : t -> Ojs.t = fun (x4183 : Ojs.t) -> x4183
      end
    module AnonymousInterface28 =
      struct
        type t = Ojs.t
        let rec t_of_js : Ojs.t -> t = fun (x4186 : Ojs.t) -> x4186
        and t_to_js : t -> Ojs.t = fun (x4185 : Ojs.t) -> x4185
      end
    module AnonymousInterface27 =
      struct
        type t = Ojs.t
        let rec t_of_js : Ojs.t -> t = fun (x4188 : Ojs.t) -> x4188
        and t_to_js : t -> Ojs.t = fun (x4187 : Ojs.t) -> x4187
      end
    module AnonymousInterface10 =
      struct
        type t = Ojs.t
        let rec t_of_js : Ojs.t -> t = fun (x4190 : Ojs.t) -> x4190
        and t_to_js : t -> Ojs.t = fun (x4189 : Ojs.t) -> x4189
        let (get_raw : t -> (string ArrayLike.t, string list) union2) =
          fun (x4191 : t) ->
            union2_of_js
              (fun (x4192 : Ojs.t) ->
                 ArrayLike.t_of_js Ojs.string_of_js x4192)
              (fun (x4194 : Ojs.t) -> Ojs.list_of_js Ojs.string_of_js x4194)
              (Ojs.get_prop_ascii (t_to_js x4191) "raw")
        let (set_raw :
          t -> [ `U1 of string list  | `U2 of string ArrayLike.t ] -> unit) =
          fun (x4196 : t) ->
            fun (x4197 : [ `U1 of string list  | `U2 of string ArrayLike.t ])
              ->
              Ojs.set_prop_ascii (t_to_js x4196) "raw"
                (match x4197 with
                 | `U1 x4198 -> Ojs.list_to_js Ojs.string_to_js x4198
                 | `U2 x4200 -> ArrayLike.t_to_js Ojs.string_to_js x4200)
        let (create :
          raw:(string ArrayLike.t, string list) union2 -> unit -> t) =
          fun ~raw:(x4202 : (string ArrayLike.t, string list) union2) ->
            fun () ->
              let x4203 = Ojs.empty_obj () in
              Ojs.set_prop_ascii x4203 "raw"
                (union2_to_js
                   (fun (x4204 : string ArrayLike.t) ->
                      ArrayLike.t_to_js Ojs.string_to_js x4204)
                   (fun (x4206 : string list) ->
                      Ojs.list_to_js Ojs.string_to_js x4206) x4202);
              t_of_js x4203
      end
    type t = [ `String ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type tags = [ `String ]
    type 'tags this = 'tags intf constraint 'tags = [> `String ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x4210 : Ojs.t) -> intf_of_js __tags_of_js x4210
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x4208 : __tags intf) -> intf_to_js __tags_to_js x4208
    let (at : 'tags this -> index:float -> string option) =
      fun (x4213 : 'tags this) ->
        fun ~index:(x4212 : float) ->
          Ojs.option_of_js Ojs.string_of_js
            (Ojs.call (this_to_js Obj.magic x4213) "at"
               [|(Ojs.float_to_js x4212)|])
    let (replaceAll :
      'tags this ->
        searchValue:[ `U1 of string  | `U2 of RegExp.t ] ->
          replaceValue:string -> string)
      =
      fun (x4220 : 'tags this) ->
        fun ~searchValue:(x4216 : [ `U1 of string  | `U2 of RegExp.t ]) ->
          fun ~replaceValue:(x4219 : string) ->
            Ojs.string_of_js
              (Ojs.call (this_to_js Obj.magic x4220) "replaceAll"
                 [|((match x4216 with
                     | `U1 x4217 -> Ojs.string_to_js x4217
                     | `U2 x4218 -> RegExp.t_to_js x4218));(Ojs.string_to_js
                                                              x4219)|])
    let (replaceAll' :
      'tags this ->
        searchValue:[ `U1 of string  | `U2 of RegExp.t ] ->
          replacer:(substring:string -> args:any list -> string) -> string)
      =
      fun (x4228 : 'tags this) ->
        fun ~searchValue:(x4222 : [ `U1 of string  | `U2 of RegExp.t ]) ->
          fun ~replacer:(x4225 : substring:string -> args:any list -> string)
            ->
            Ojs.string_of_js
              (Ojs.call (this_to_js Obj.magic x4228) "replaceAll"
                 [|((match x4222 with
                     | `U1 x4223 -> Ojs.string_to_js x4223
                     | `U2 x4224 -> RegExp.t_to_js x4224));(Ojs.fun_to_js_args
                                                              (fun
                                                                 (x4226 : _)
                                                                 ->
                                                                 Ojs.string_to_js
                                                                   (x4225
                                                                    ~substring:(
                                                                    Ojs.string_of_js
                                                                    (Ojs.array_get
                                                                    x4226 0))
                                                                    ~args:(
                                                                    Ojs.list_of_js_from
                                                                    any_of_js
                                                                    x4226 1))))|])
    let (matchAll :
      'tags this -> regexp:RegExp.t -> RegExpMatchArray.t IterableIterator.t)
      =
      fun (x4231 : 'tags this) ->
        fun ~regexp:(x4230 : RegExp.t) ->
          IterableIterator.t_of_js RegExpMatchArray.t_of_js
            (Ojs.call (this_to_js Obj.magic x4231) "matchAll"
               [|(RegExp.t_to_js x4230)|])
    let (trimEnd : 'tags this -> string) =
      fun (x4234 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x4234) "trimEnd" [||])
    let (trimStart : 'tags this -> string) =
      fun (x4236 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x4236) "trimStart" [||])
    let (trimLeft : 'tags this -> string) =
      fun (x4238 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x4238) "trimLeft" [||])
    let (trimRight : 'tags this -> string) =
      fun (x4240 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x4240) "trimRight" [||])
    let (padStart :
      'tags this -> maxLength:float -> ?fillString:string -> unit -> string)
      =
      fun (x4246 : 'tags this) ->
        fun ~maxLength:(x4242 : float) ->
          fun ?fillString:(x4243 : string option) ->
            fun () ->
              Ojs.string_of_js
                (let x4248 = this_to_js Obj.magic x4246 in
                 Ojs.call (Ojs.get_prop_ascii x4248 "padStart") "apply"
                   [|x4248;((let x4244 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x4244 "push"
                                  [|(Ojs.float_to_js x4242)|]);
                             (match x4243 with
                              | Some x4245 ->
                                  ignore
                                    (Ojs.call x4244 "push"
                                       [|(Ojs.string_to_js x4245)|])
                              | None -> ());
                             x4244))|])
    let (padEnd :
      'tags this -> maxLength:float -> ?fillString:string -> unit -> string)
      =
      fun (x4253 : 'tags this) ->
        fun ~maxLength:(x4249 : float) ->
          fun ?fillString:(x4250 : string option) ->
            fun () ->
              Ojs.string_of_js
                (let x4255 = this_to_js Obj.magic x4253 in
                 Ojs.call (Ojs.get_prop_ascii x4255 "padEnd") "apply"
                   [|x4255;((let x4251 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x4251 "push"
                                  [|(Ojs.float_to_js x4249)|]);
                             (match x4250 with
                              | Some x4252 ->
                                  ignore
                                    (Ojs.call x4251 "push"
                                       [|(Ojs.string_to_js x4252)|])
                              | None -> ());
                             x4251))|])
    let (match_ :
      'tags this ->
        matcher:AnonymousInterface27.t -> RegExpMatchArray.t option)
      =
      fun (x4257 : 'tags this) ->
        fun ~matcher:(x4256 : AnonymousInterface27.t) ->
          Ojs.option_of_js RegExpMatchArray.t_of_js
            (Ojs.call (this_to_js Obj.magic x4257) "match"
               [|(AnonymousInterface27.t_to_js x4256)|])
    let (replace :
      'tags this ->
        searchValue:AnonymousInterface28.t -> replaceValue:string -> string)
      =
      fun (x4262 : 'tags this) ->
        fun ~searchValue:(x4260 : AnonymousInterface28.t) ->
          fun ~replaceValue:(x4261 : string) ->
            Ojs.string_of_js
              (Ojs.call (this_to_js Obj.magic x4262) "replace"
                 [|(AnonymousInterface28.t_to_js x4260);(Ojs.string_to_js
                                                           x4261)|])
    let (replace' :
      'tags this ->
        searchValue:AnonymousInterface29.t ->
          replacer:(substring:string -> args:any list -> string) -> string)
      =
      fun (x4268 : 'tags this) ->
        fun ~searchValue:(x4264 : AnonymousInterface29.t) ->
          fun ~replacer:(x4265 : substring:string -> args:any list -> string)
            ->
            Ojs.string_of_js
              (Ojs.call (this_to_js Obj.magic x4268) "replace"
                 [|(AnonymousInterface29.t_to_js x4264);(Ojs.fun_to_js_args
                                                           (fun (x4266 : _)
                                                              ->
                                                              Ojs.string_to_js
                                                                (x4265
                                                                   ~substring:(
                                                                   Ojs.string_of_js
                                                                    (Ojs.array_get
                                                                    x4266 0))
                                                                   ~args:(
                                                                   Ojs.list_of_js_from
                                                                    any_of_js
                                                                    x4266 1))))|])
    let (search : 'tags this -> searcher:AnonymousInterface30.t -> float) =
      fun (x4271 : 'tags this) ->
        fun ~searcher:(x4270 : AnonymousInterface30.t) ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x4271) "search"
               [|(AnonymousInterface30.t_to_js x4270)|])
    let (split :
      'tags this ->
        splitter:AnonymousInterface31.t ->
          ?limit:float -> unit -> string list)
      =
      fun (x4277 : 'tags this) ->
        fun ~splitter:(x4273 : AnonymousInterface31.t) ->
          fun ?limit:(x4274 : float option) ->
            fun () ->
              Ojs.list_of_js Ojs.string_of_js
                (let x4279 = this_to_js Obj.magic x4277 in
                 Ojs.call (Ojs.get_prop_ascii x4279 "split") "apply"
                   [|x4279;((let x4275 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x4275 "push"
                                  [|(AnonymousInterface31.t_to_js x4273)|]);
                             (match x4274 with
                              | Some x4276 ->
                                  ignore
                                    (Ojs.call x4275 "push"
                                       [|(Ojs.float_to_js x4276)|])
                              | None -> ());
                             x4275))|])
    let (codePointAt : 'tags this -> pos:float -> float option) =
      fun (x4282 : 'tags this) ->
        fun ~pos:(x4281 : float) ->
          Ojs.option_of_js Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x4282) "codePointAt"
               [|(Ojs.float_to_js x4281)|])
    let (includes :
      'tags this -> searchString:string -> ?position:float -> unit -> bool) =
      fun (x4289 : 'tags this) ->
        fun ~searchString:(x4285 : string) ->
          fun ?position:(x4286 : float option) ->
            fun () ->
              Ojs.bool_of_js
                (let x4291 = this_to_js Obj.magic x4289 in
                 Ojs.call (Ojs.get_prop_ascii x4291 "includes") "apply"
                   [|x4291;((let x4287 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x4287 "push"
                                  [|(Ojs.string_to_js x4285)|]);
                             (match x4286 with
                              | Some x4288 ->
                                  ignore
                                    (Ojs.call x4287 "push"
                                       [|(Ojs.float_to_js x4288)|])
                              | None -> ());
                             x4287))|])
    let (endsWith :
      'tags this -> searchString:string -> ?endPosition:float -> unit -> bool)
      =
      fun (x4296 : 'tags this) ->
        fun ~searchString:(x4292 : string) ->
          fun ?endPosition:(x4293 : float option) ->
            fun () ->
              Ojs.bool_of_js
                (let x4298 = this_to_js Obj.magic x4296 in
                 Ojs.call (Ojs.get_prop_ascii x4298 "endsWith") "apply"
                   [|x4298;((let x4294 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x4294 "push"
                                  [|(Ojs.string_to_js x4292)|]);
                             (match x4293 with
                              | Some x4295 ->
                                  ignore
                                    (Ojs.call x4294 "push"
                                       [|(Ojs.float_to_js x4295)|])
                              | None -> ());
                             x4294))|])
    let (normalize :
      'tags this ->
        form:[ `U1 of [ `L_s11_NFC ]  | `U2 of [ `L_s12_NFD ] 
             | `U3 of [ `L_s13_NFKC ]  | `U4 of [ `L_s14_NFKD ] ]
          -> string)
      =
      fun (x4304 : 'tags this) ->
        fun
          ~form:(x4299 :
                  [ `U1 of [ `L_s11_NFC ]  | `U2 of [ `L_s12_NFD ] 
                  | `U3 of [ `L_s13_NFKC ]  | `U4 of [ `L_s14_NFKD ] ])
          ->
          Ojs.string_of_js
            (Ojs.call (this_to_js Obj.magic x4304) "normalize"
               [|((match x4299 with
                   | `U1 x4300 ->
                       (match x4300 with
                        | `L_s11_NFC -> Ojs.string_to_js "NFC")
                   | `U2 x4301 ->
                       (match x4301 with
                        | `L_s12_NFD -> Ojs.string_to_js "NFD")
                   | `U3 x4302 ->
                       (match x4302 with
                        | `L_s13_NFKC -> Ojs.string_to_js "NFKC")
                   | `U4 x4303 ->
                       (match x4303 with
                        | `L_s14_NFKD -> Ojs.string_to_js "NFKD")))|])
    let (normalize' : 'tags this -> ?form:string -> unit -> string) =
      fun (x4309 : 'tags this) ->
        fun ?form:(x4306 : string option) ->
          fun () ->
            Ojs.string_of_js
              (let x4311 = this_to_js Obj.magic x4309 in
               Ojs.call (Ojs.get_prop_ascii x4311 "normalize") "apply"
                 [|x4311;((let x4307 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x4306 with
                            | Some x4308 ->
                                ignore
                                  (Ojs.call x4307 "push"
                                     [|(Ojs.string_to_js x4308)|])
                            | None -> ());
                           x4307))|])
    let (repeat : 'tags this -> count:float -> string) =
      fun (x4313 : 'tags this) ->
        fun ~count:(x4312 : float) ->
          Ojs.string_of_js
            (Ojs.call (this_to_js Obj.magic x4313) "repeat"
               [|(Ojs.float_to_js x4312)|])
    let (startsWith :
      'tags this -> searchString:string -> ?position:float -> unit -> bool) =
      fun (x4319 : 'tags this) ->
        fun ~searchString:(x4315 : string) ->
          fun ?position:(x4316 : float option) ->
            fun () ->
              Ojs.bool_of_js
                (let x4321 = this_to_js Obj.magic x4319 in
                 Ojs.call (Ojs.get_prop_ascii x4321 "startsWith") "apply"
                   [|x4321;((let x4317 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x4317 "push"
                                  [|(Ojs.string_to_js x4315)|]);
                             (match x4316 with
                              | Some x4318 ->
                                  ignore
                                    (Ojs.call x4317 "push"
                                       [|(Ojs.float_to_js x4318)|])
                              | None -> ());
                             x4317))|])
    let (anchor : 'tags this -> name:string -> string) =
      fun (x4323 : 'tags this) ->
        fun ~name:(x4322 : string) ->
          Ojs.string_of_js
            (Ojs.call (this_to_js Obj.magic x4323) "anchor"
               [|(Ojs.string_to_js x4322)|])
    let (big : 'tags this -> string) =
      fun (x4325 : 'tags this) ->
        Ojs.string_of_js (Ojs.call (this_to_js Obj.magic x4325) "big" [||])
    let (blink : 'tags this -> string) =
      fun (x4327 : 'tags this) ->
        Ojs.string_of_js (Ojs.call (this_to_js Obj.magic x4327) "blink" [||])
    let (bold : 'tags this -> string) =
      fun (x4329 : 'tags this) ->
        Ojs.string_of_js (Ojs.call (this_to_js Obj.magic x4329) "bold" [||])
    let (fixed : 'tags this -> string) =
      fun (x4331 : 'tags this) ->
        Ojs.string_of_js (Ojs.call (this_to_js Obj.magic x4331) "fixed" [||])
    let (fontcolor : 'tags this -> color:string -> string) =
      fun (x4334 : 'tags this) ->
        fun ~color:(x4333 : string) ->
          Ojs.string_of_js
            (Ojs.call (this_to_js Obj.magic x4334) "fontcolor"
               [|(Ojs.string_to_js x4333)|])
    let (fontsize : 'tags this -> size:float -> string) =
      fun (x4337 : 'tags this) ->
        fun ~size:(x4336 : float) ->
          Ojs.string_of_js
            (Ojs.call (this_to_js Obj.magic x4337) "fontsize"
               [|(Ojs.float_to_js x4336)|])
    let (fontsize' : 'tags this -> size:string -> string) =
      fun (x4340 : 'tags this) ->
        fun ~size:(x4339 : string) ->
          Ojs.string_of_js
            (Ojs.call (this_to_js Obj.magic x4340) "fontsize"
               [|(Ojs.string_to_js x4339)|])
    let (italics : 'tags this -> string) =
      fun (x4342 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x4342) "italics" [||])
    let (link : 'tags this -> url:string -> string) =
      fun (x4345 : 'tags this) ->
        fun ~url:(x4344 : string) ->
          Ojs.string_of_js
            (Ojs.call (this_to_js Obj.magic x4345) "link"
               [|(Ojs.string_to_js x4344)|])
    let (small : 'tags this -> string) =
      fun (x4347 : 'tags this) ->
        Ojs.string_of_js (Ojs.call (this_to_js Obj.magic x4347) "small" [||])
    let (strike : 'tags this -> string) =
      fun (x4349 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x4349) "strike" [||])
    let (sub : 'tags this -> string) =
      fun (x4351 : 'tags this) ->
        Ojs.string_of_js (Ojs.call (this_to_js Obj.magic x4351) "sub" [||])
    let (sup : 'tags this -> string) =
      fun (x4353 : 'tags this) ->
        Ojs.string_of_js (Ojs.call (this_to_js Obj.magic x4353) "sup" [||])
    let (localeCompare :
      'tags this ->
        that:string ->
          ?locales:[ `U1 of string  | `U2 of string list ] ->
            ?options:Intl.CollatorOptions.t -> unit -> float)
      =
      fun (x4364 : 'tags this) ->
        fun ~that:(x4355 : string) ->
          fun
            ?locales:(x4356 : [ `U1 of string  | `U2 of string list ] option)
            ->
            fun ?options:(x4357 : Intl.CollatorOptions.t option) ->
              fun () ->
                Ojs.float_of_js
                  (let x4366 = this_to_js Obj.magic x4364 in
                   Ojs.call (Ojs.get_prop_ascii x4366 "localeCompare")
                     "apply"
                     [|x4366;((let x4358 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x4358 "push"
                                    [|(Ojs.string_to_js x4355)|]);
                               (match x4356 with
                                | Some x4360 ->
                                    ignore
                                      (Ojs.call x4358 "push"
                                         [|((match x4360 with
                                             | `U1 x4361 ->
                                                 Ojs.string_to_js x4361
                                             | `U2 x4362 ->
                                                 Ojs.list_to_js
                                                   Ojs.string_to_js x4362))|])
                                | None -> ());
                               (match x4357 with
                                | Some x4359 ->
                                    ignore
                                      (Ojs.call x4358 "push"
                                         [|(Intl.CollatorOptions.t_to_js
                                              x4359)|])
                                | None -> ());
                               x4358))|])
    let (toString : 'tags this -> string) =
      fun (x4367 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x4367) "toString" [||])
    let (charAt : 'tags this -> pos:float -> string) =
      fun (x4370 : 'tags this) ->
        fun ~pos:(x4369 : float) ->
          Ojs.string_of_js
            (Ojs.call (this_to_js Obj.magic x4370) "charAt"
               [|(Ojs.float_to_js x4369)|])
    let (charCodeAt : 'tags this -> index:float -> float) =
      fun (x4373 : 'tags this) ->
        fun ~index:(x4372 : float) ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x4373) "charCodeAt"
               [|(Ojs.float_to_js x4372)|])
    let (concat : 'tags this -> strings:string list -> string) =
      fun (x4378 : 'tags this) ->
        fun ~strings:(x4375 : string list) ->
          Ojs.string_of_js
            (let x4380 = this_to_js Obj.magic x4378 in
             Ojs.call (Ojs.get_prop_ascii x4380 "concat") "apply"
               [|x4380;((let x4376 =
                           Ojs.new_obj
                             (Ojs.get_prop_ascii Ojs.global "Array") 
                             [||] in
                         List.iter
                           (fun (x4377 : string) ->
                              ignore
                                (Ojs.call x4376 "push"
                                   [|(Ojs.string_to_js x4377)|])) x4375;
                         x4376))|])
    let (indexOf :
      'tags this -> searchString:string -> ?position:float -> unit -> float)
      =
      fun (x4385 : 'tags this) ->
        fun ~searchString:(x4381 : string) ->
          fun ?position:(x4382 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x4387 = this_to_js Obj.magic x4385 in
                 Ojs.call (Ojs.get_prop_ascii x4387 "indexOf") "apply"
                   [|x4387;((let x4383 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x4383 "push"
                                  [|(Ojs.string_to_js x4381)|]);
                             (match x4382 with
                              | Some x4384 ->
                                  ignore
                                    (Ojs.call x4383 "push"
                                       [|(Ojs.float_to_js x4384)|])
                              | None -> ());
                             x4383))|])
    let (lastIndexOf :
      'tags this -> searchString:string -> ?position:float -> unit -> float)
      =
      fun (x4392 : 'tags this) ->
        fun ~searchString:(x4388 : string) ->
          fun ?position:(x4389 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x4394 = this_to_js Obj.magic x4392 in
                 Ojs.call (Ojs.get_prop_ascii x4394 "lastIndexOf") "apply"
                   [|x4394;((let x4390 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x4390 "push"
                                  [|(Ojs.string_to_js x4388)|]);
                             (match x4389 with
                              | Some x4391 ->
                                  ignore
                                    (Ojs.call x4390 "push"
                                       [|(Ojs.float_to_js x4391)|])
                              | None -> ());
                             x4390))|])
    let (localeCompare' : 'tags this -> that:string -> float) =
      fun (x4396 : 'tags this) ->
        fun ~that:(x4395 : string) ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x4396) "localeCompare"
               [|(Ojs.string_to_js x4395)|])
    let (match_' :
      'tags this ->
        regexp:[ `U1 of string  | `U2 of RegExp.t ] ->
          RegExpMatchArray.t option)
      =
      fun (x4401 : 'tags this) ->
        fun ~regexp:(x4398 : [ `U1 of string  | `U2 of RegExp.t ]) ->
          Ojs.option_of_js RegExpMatchArray.t_of_js
            (Ojs.call (this_to_js Obj.magic x4401) "match"
               [|((match x4398 with
                   | `U1 x4399 -> Ojs.string_to_js x4399
                   | `U2 x4400 -> RegExp.t_to_js x4400))|])
    let (replace'' :
      'tags this ->
        searchValue:[ `U1 of string  | `U2 of RegExp.t ] ->
          replaceValue:string -> string)
      =
      fun (x4408 : 'tags this) ->
        fun ~searchValue:(x4404 : [ `U1 of string  | `U2 of RegExp.t ]) ->
          fun ~replaceValue:(x4407 : string) ->
            Ojs.string_of_js
              (Ojs.call (this_to_js Obj.magic x4408) "replace"
                 [|((match x4404 with
                     | `U1 x4405 -> Ojs.string_to_js x4405
                     | `U2 x4406 -> RegExp.t_to_js x4406));(Ojs.string_to_js
                                                              x4407)|])
    let (replace''' :
      'tags this ->
        searchValue:[ `U1 of string  | `U2 of RegExp.t ] ->
          replacer:(substring:string -> args:any list -> string) -> string)
      =
      fun (x4416 : 'tags this) ->
        fun ~searchValue:(x4410 : [ `U1 of string  | `U2 of RegExp.t ]) ->
          fun ~replacer:(x4413 : substring:string -> args:any list -> string)
            ->
            Ojs.string_of_js
              (Ojs.call (this_to_js Obj.magic x4416) "replace"
                 [|((match x4410 with
                     | `U1 x4411 -> Ojs.string_to_js x4411
                     | `U2 x4412 -> RegExp.t_to_js x4412));(Ojs.fun_to_js_args
                                                              (fun
                                                                 (x4414 : _)
                                                                 ->
                                                                 Ojs.string_to_js
                                                                   (x4413
                                                                    ~substring:(
                                                                    Ojs.string_of_js
                                                                    (Ojs.array_get
                                                                    x4414 0))
                                                                    ~args:(
                                                                    Ojs.list_of_js_from
                                                                    any_of_js
                                                                    x4414 1))))|])
    let (search' :
      'tags this -> regexp:[ `U1 of string  | `U2 of RegExp.t ] -> float) =
      fun (x4421 : 'tags this) ->
        fun ~regexp:(x4418 : [ `U1 of string  | `U2 of RegExp.t ]) ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x4421) "search"
               [|((match x4418 with
                   | `U1 x4419 -> Ojs.string_to_js x4419
                   | `U2 x4420 -> RegExp.t_to_js x4420))|])
    let (slice : 'tags this -> ?start:float -> ?end_:float -> unit -> string)
      =
      fun (x4428 : 'tags this) ->
        fun ?start:(x4423 : float option) ->
          fun ?end_:(x4424 : float option) ->
            fun () ->
              Ojs.string_of_js
                (let x4430 = this_to_js Obj.magic x4428 in
                 Ojs.call (Ojs.get_prop_ascii x4430 "slice") "apply"
                   [|x4430;((let x4425 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x4423 with
                              | Some x4427 ->
                                  ignore
                                    (Ojs.call x4425 "push"
                                       [|(Ojs.float_to_js x4427)|])
                              | None -> ());
                             (match x4424 with
                              | Some x4426 ->
                                  ignore
                                    (Ojs.call x4425 "push"
                                       [|(Ojs.float_to_js x4426)|])
                              | None -> ());
                             x4425))|])
    let (split' :
      'tags this ->
        separator:[ `U1 of string  | `U2 of RegExp.t ] ->
          ?limit:float -> unit -> string list)
      =
      fun (x4437 : 'tags this) ->
        fun ~separator:(x4431 : [ `U1 of string  | `U2 of RegExp.t ]) ->
          fun ?limit:(x4432 : float option) ->
            fun () ->
              Ojs.list_of_js Ojs.string_of_js
                (let x4439 = this_to_js Obj.magic x4437 in
                 Ojs.call (Ojs.get_prop_ascii x4439 "split") "apply"
                   [|x4439;((let x4433 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x4433 "push"
                                  [|((match x4431 with
                                      | `U1 x4435 -> Ojs.string_to_js x4435
                                      | `U2 x4436 -> RegExp.t_to_js x4436))|]);
                             (match x4432 with
                              | Some x4434 ->
                                  ignore
                                    (Ojs.call x4433 "push"
                                       [|(Ojs.float_to_js x4434)|])
                              | None -> ());
                             x4433))|])
    let (substring :
      'tags this -> start:float -> ?end_:float -> unit -> string) =
      fun (x4445 : 'tags this) ->
        fun ~start:(x4441 : float) ->
          fun ?end_:(x4442 : float option) ->
            fun () ->
              Ojs.string_of_js
                (let x4447 = this_to_js Obj.magic x4445 in
                 Ojs.call (Ojs.get_prop_ascii x4447 "substring") "apply"
                   [|x4447;((let x4443 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x4443 "push"
                                  [|(Ojs.float_to_js x4441)|]);
                             (match x4442 with
                              | Some x4444 ->
                                  ignore
                                    (Ojs.call x4443 "push"
                                       [|(Ojs.float_to_js x4444)|])
                              | None -> ());
                             x4443))|])
    let (toLowerCase : 'tags this -> string) =
      fun (x4448 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x4448) "toLowerCase" [||])
    let (toLocaleLowerCase :
      'tags this ->
        ?locales:[ `U1 of string  | `U2 of string list ] -> unit -> string)
      =
      fun (x4456 : 'tags this) ->
        fun ?locales:(x4450 : [ `U1 of string  | `U2 of string list ] option)
          ->
          fun () ->
            Ojs.string_of_js
              (let x4458 = this_to_js Obj.magic x4456 in
               Ojs.call (Ojs.get_prop_ascii x4458 "toLocaleLowerCase")
                 "apply"
                 [|x4458;((let x4451 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x4450 with
                            | Some x4452 ->
                                ignore
                                  (Ojs.call x4451 "push"
                                     [|((match x4452 with
                                         | `U1 x4453 ->
                                             Ojs.string_to_js x4453
                                         | `U2 x4454 ->
                                             Ojs.list_to_js Ojs.string_to_js
                                               x4454))|])
                            | None -> ());
                           x4451))|])
    let (toUpperCase : 'tags this -> string) =
      fun (x4459 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x4459) "toUpperCase" [||])
    let (toLocaleUpperCase :
      'tags this ->
        ?locales:[ `U1 of string  | `U2 of string list ] -> unit -> string)
      =
      fun (x4467 : 'tags this) ->
        fun ?locales:(x4461 : [ `U1 of string  | `U2 of string list ] option)
          ->
          fun () ->
            Ojs.string_of_js
              (let x4469 = this_to_js Obj.magic x4467 in
               Ojs.call (Ojs.get_prop_ascii x4469 "toLocaleUpperCase")
                 "apply"
                 [|x4469;((let x4462 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x4461 with
                            | Some x4463 ->
                                ignore
                                  (Ojs.call x4462 "push"
                                     [|((match x4463 with
                                         | `U1 x4464 ->
                                             Ojs.string_to_js x4464
                                         | `U2 x4465 ->
                                             Ojs.list_to_js Ojs.string_to_js
                                               x4465))|])
                            | None -> ());
                           x4462))|])
    let (trim : 'tags this -> string) =
      fun (x4470 : 'tags this) ->
        Ojs.string_of_js (Ojs.call (this_to_js Obj.magic x4470) "trim" [||])
    let (get_length : 'tags this -> float) =
      fun (x4472 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x4472) "length")
    let (substr :
      'tags this -> from:float -> ?length:float -> unit -> string) =
      fun (x4478 : 'tags this) ->
        fun ~from:(x4474 : float) ->
          fun ?length:(x4475 : float option) ->
            fun () ->
              Ojs.string_of_js
                (let x4480 = this_to_js Obj.magic x4478 in
                 Ojs.call (Ojs.get_prop_ascii x4480 "substr") "apply"
                   [|x4480;((let x4476 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x4476 "push"
                                  [|(Ojs.float_to_js x4474)|]);
                             (match x4475 with
                              | Some x4477 ->
                                  ignore
                                    (Ojs.call x4476 "push"
                                       [|(Ojs.float_to_js x4477)|])
                              | None -> ());
                             x4476))|])
    let (valueOf : 'tags this -> string) =
      fun (x4481 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x4481) "valueOf" [||])
    let (get : 'tags this -> float -> string) =
      fun (x4483 : 'tags this) ->
        fun (x4485 : float) ->
          Ojs.string_of_js
            (Ojs.get_prop (this_to_js Obj.magic x4483)
               (Ojs.float_to_js x4485))
    let (fromCodePoint : float list -> string) =
      fun (x4486 : float list) ->
        Ojs.string_of_js
          (let x4489 = Ojs.get_prop_ascii Ojs.global "String" in
           Ojs.call (Ojs.get_prop_ascii x4489 "fromCodePoint") "apply"
             [|x4489;((let x4487 =
                         Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                           [||] in
                       List.iter
                         (fun (x4488 : float) ->
                            ignore
                              (Ojs.call x4487 "push"
                                 [|(Ojs.float_to_js x4488)|])) x4486;
                       x4487))|])
    let (raw :
      template:AnonymousInterface10.t -> substitutions:any list -> string) =
      fun ~template:(x4490 : AnonymousInterface10.t) ->
        fun ~substitutions:(x4491 : any list) ->
          Ojs.string_of_js
            (let x4494 = Ojs.get_prop_ascii Ojs.global "String" in
             Ojs.call (Ojs.get_prop_ascii x4494 "raw") "apply"
               [|x4494;((let x4492 =
                           Ojs.new_obj
                             (Ojs.get_prop_ascii Ojs.global "Array") 
                             [||] in
                         ignore
                           (Ojs.call x4492 "push"
                              [|(AnonymousInterface10.t_to_js x4490)|]);
                         List.iter
                           (fun (x4493 : any) ->
                              ignore
                                (Ojs.call x4492 "push" [|(any_to_js x4493)|]))
                           x4491;
                         x4492))|])
    let (create : ?value:any -> unit -> t) =
      fun ?value:(x4495 : any option) ->
        fun () ->
          t_of_js
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "String")
               (let x4496 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x4495 with
                 | Some x4497 ->
                     ignore (Ojs.call x4496 "push" [|(any_to_js x4497)|])
                 | None -> ());
                x4496))
    let (invoke : ?value:any -> unit -> string) =
      fun ?value:(x4498 : any option) ->
        fun () ->
          Ojs.string_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "String") "apply"
               [|Ojs.null;((let x4499 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x4498 with
                             | Some x4500 ->
                                 ignore
                                   (Ojs.call x4499 "push"
                                      [|(any_to_js x4500)|])
                             | None -> ());
                            x4499))|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "String")
             "prototype")
    let (fromCharCode : float list -> string) =
      fun (x4501 : float list) ->
        Ojs.string_of_js
          (let x4504 = Ojs.get_prop_ascii Ojs.global "String" in
           Ojs.call (Ojs.get_prop_ascii x4504 "fromCharCode") "apply"
             [|x4504;((let x4502 =
                         Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                           [||] in
                       List.iter
                         (fun (x4503 : float) ->
                            ignore
                              (Ojs.call x4502 "push"
                                 [|(Ojs.float_to_js x4503)|])) x4501;
                       x4502))|])
    let cast_from = Obj.magic
    let (of_ml : string -> t) =
      fun (x4505 : string) -> t_of_js (Ojs.string_to_js x4505)
    let (to_ml : t -> string) =
      fun (x4506 : t) ->
        Ojs.string_of_js (Ojs.call (t_to_js x4506) "valueOf" [||])
  end
module Set =
  struct
    type 'T t = [ `Set of 'T ] intf
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun _T -> Obj.magic
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun _T -> Obj.magic
    type 'T tags = [ `Set of 'T ]
    type ('tags, 'T) this = 'tags intf constraint 'tags = [> `Set of 'T ]
    let rec this_of_js :
      'tags 'T .
        (Ojs.t -> 'tags) -> (Ojs.t -> 'T) -> Ojs.t -> ('tags, 'T) this
      =
      fun (type __tags) ->
        fun (type __T) ->
          fun (__tags_of_js : Ojs.t -> __tags) ->
            fun (__T_of_js : Ojs.t -> __T) ->
              fun (x4509 : Ojs.t) -> intf_of_js __tags_of_js x4509
    and this_to_js :
      'tags 'T .
        ('tags -> Ojs.t) -> ('T -> Ojs.t) -> ('tags, 'T) this -> Ojs.t
      =
      fun (type __tags) ->
        fun (type __T) ->
          fun (__tags_to_js : __tags -> Ojs.t) ->
            fun (__T_to_js : __T -> Ojs.t) ->
              fun (x4507 : __tags intf) -> intf_to_js __tags_to_js x4507
    let (entries : ('tags, 'T) this -> ('T * 'T) IterableIterator.t) =
      fun (x4511 : ('tags, 'T) this) ->
        IterableIterator.t_of_js
          (fun (x4514 : Ojs.t) ->
             let x4515 = x4514 in
             ((Obj.magic (Ojs.array_get x4515 0)),
               (Obj.magic (Ojs.array_get x4515 1))))
          (Ojs.call (this_to_js Obj.magic Obj.magic x4511) "entries" [||])
    let (keys : ('tags, 'T) this -> 'T IterableIterator.t) =
      fun (x4516 : ('tags, 'T) this) ->
        IterableIterator.t_of_js Obj.magic
          (Ojs.call (this_to_js Obj.magic Obj.magic x4516) "keys" [||])
    let (values : ('tags, 'T) this -> 'T IterableIterator.t) =
      fun (x4520 : ('tags, 'T) this) ->
        IterableIterator.t_of_js Obj.magic
          (Ojs.call (this_to_js Obj.magic Obj.magic x4520) "values" [||])
    let (add : ('tags, 'T) this -> value:'T -> ('tags, 'T) this) =
      fun (x4525 : ('tags, 'T) this) ->
        fun ~value:(x4524 : 'T) ->
          this_of_js Obj.magic Obj.magic
            (Ojs.call (this_to_js Obj.magic Obj.magic x4525) "add"
               [|(Obj.magic x4524)|])
    let (clear : ('tags, 'T) this -> unit) =
      fun (x4530 : ('tags, 'T) this) ->
        ignore (Ojs.call (this_to_js Obj.magic Obj.magic x4530) "clear" [||])
    let (delete : ('tags, 'T) this -> value:'T -> bool) =
      fun (x4534 : ('tags, 'T) this) ->
        fun ~value:(x4533 : 'T) ->
          Ojs.bool_of_js
            (Ojs.call (this_to_js Obj.magic Obj.magic x4534) "delete"
               [|(Obj.magic x4533)|])
    let (forEach :
      ('tags, 'T) this ->
        callbackfn:(value:'T -> value2:'T -> set_:'T t -> unit) ->
          ?thisArg:any -> unit -> unit)
      =
      fun (x4545 : ('tags, 'T) this) ->
        fun ~callbackfn:(x4537 : value:'T -> value2:'T -> set_:'T t -> unit)
          ->
          fun ?thisArg:(x4538 : any option) ->
            fun () ->
              ignore
                (let x4548 = this_to_js Obj.magic Obj.magic x4545 in
                 Ojs.call (Ojs.get_prop_ascii x4548 "forEach") "apply"
                   [|x4548;((let x4539 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x4539 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x4541 : Ojs.t) ->
                                          fun (x4542 : Ojs.t) ->
                                            fun (x4543 : Ojs.t) ->
                                              x4537 ~value:(Obj.magic x4541)
                                                ~value2:(Obj.magic x4542)
                                                ~set_:(t_of_js Obj.magic
                                                         x4543)))|]);
                             (match x4538 with
                              | Some x4540 ->
                                  ignore
                                    (Ojs.call x4539 "push"
                                       [|(any_to_js x4540)|])
                              | None -> ());
                             x4539))|])
    let (has : ('tags, 'T) this -> value:'T -> bool) =
      fun (x4550 : ('tags, 'T) this) ->
        fun ~value:(x4549 : 'T) ->
          Ojs.bool_of_js
            (Ojs.call (this_to_js Obj.magic Obj.magic x4550) "has"
               [|(Obj.magic x4549)|])
    let (get_size : ('tags, 'T) this -> float) =
      fun (x4553 : ('tags, 'T) this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic Obj.magic x4553) "size")
    let (create : ?iterable:'T Iterable.t option -> unit -> 'T t) =
      fun ?iterable:(x4556 : 'T Iterable.t option option) ->
        fun () ->
          t_of_js Obj.magic
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "Set")
               (let x4557 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x4556 with
                 | Some x4558 ->
                     ignore
                       (Ojs.call x4557 "push"
                          [|(Ojs.option_to_js
                               (fun (x4559 : 'T Iterable.t) ->
                                  Iterable.t_to_js Obj.magic x4559) x4558)|])
                 | None -> ());
                x4557))
    let (create' : ?values:'T list option -> unit -> 'T t) =
      fun ?values:(x4562 : 'T list option option) ->
        fun () ->
          t_of_js Obj.magic
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "Set")
               (let x4563 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x4562 with
                 | Some x4564 ->
                     ignore
                       (Ojs.call x4563 "push"
                          [|(Ojs.option_to_js
                               (fun (x4565 : 'T list) ->
                                  Ojs.list_to_js Obj.magic x4565) x4564)|])
                 | None -> ());
                x4563))
    let (prototype : unit -> any t) =
      fun () ->
        t_of_js any_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Set")
             "prototype")
    let cast_from = Obj.magic
  end
module ReturnType =
  struct
    type 'T t = any
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun (type __T) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x4570 : Ojs.t) -> any_of_js x4570
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t =
      fun (type __T) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x4569 : any) -> any_to_js x4569
  end
module Required =
  struct
    type 'T t = any
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun (type __T) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x4572 : Ojs.t) -> any_of_js x4572
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t =
      fun (type __T) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x4571 : any) -> any_to_js x4571
  end
module ReferenceError =
  struct
    type t = [ `Error  | `ReferenceError ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type tags = [ `Error  | `ReferenceError ]
    type 'tags this = 'tags intf constraint 'tags = [> `ReferenceError ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x4575 : Ojs.t) -> intf_of_js __tags_of_js x4575
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x4573 : __tags intf) -> intf_to_js __tags_to_js x4573
    let (create : ?message:string -> ?options:ErrorOptions.t -> unit -> t) =
      fun ?message:(x4577 : string option) ->
        fun ?options:(x4578 : ErrorOptions.t option) ->
          fun () ->
            t_of_js
              (Ojs.new_obj_arr
                 (Ojs.get_prop_ascii Ojs.global "ReferenceError")
                 (let x4579 =
                    Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                  (match x4577 with
                   | Some x4581 ->
                       ignore
                         (Ojs.call x4579 "push" [|(Ojs.string_to_js x4581)|])
                   | None -> ());
                  (match x4578 with
                   | Some x4580 ->
                       ignore
                         (Ojs.call x4579 "push"
                            [|(ErrorOptions.t_to_js x4580)|])
                   | None -> ());
                  x4579))
    let (invoke : ?message:string -> ?options:ErrorOptions.t -> unit -> t) =
      fun ?message:(x4582 : string option) ->
        fun ?options:(x4583 : ErrorOptions.t option) ->
          fun () ->
            t_of_js
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "ReferenceError")
                 "apply"
                 [|Ojs.null;((let x4584 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              (match x4582 with
                               | Some x4586 ->
                                   ignore
                                     (Ojs.call x4584 "push"
                                        [|(Ojs.string_to_js x4586)|])
                               | None -> ());
                              (match x4583 with
                               | Some x4585 ->
                                   ignore
                                     (Ojs.call x4584 "push"
                                        [|(ErrorOptions.t_to_js x4585)|])
                               | None -> ());
                              x4584))|])
    let (create' : ?message:string -> unit -> t) =
      fun ?message:(x4587 : string option) ->
        fun () ->
          t_of_js
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "ReferenceError")
               (let x4588 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x4587 with
                 | Some x4589 ->
                     ignore
                       (Ojs.call x4588 "push" [|(Ojs.string_to_js x4589)|])
                 | None -> ());
                x4588))
    let (invoke' : ?message:string -> unit -> t) =
      fun ?message:(x4590 : string option) ->
        fun () ->
          t_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "ReferenceError")
               "apply"
               [|Ojs.null;((let x4591 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x4590 with
                             | Some x4592 ->
                                 ignore
                                   (Ojs.call x4591 "push"
                                      [|(Ojs.string_to_js x4592)|])
                             | None -> ());
                            x4591))|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "ReferenceError") "prototype")
    let cast_from = Obj.magic
  end
module Record =
  struct
    type ('K, 'T) t = any
    let rec t_of_js :
      'K 'T . (Ojs.t -> 'K) -> (Ojs.t -> 'T) -> Ojs.t -> ('K, 'T) t =
      fun (type __K) ->
        fun (type __T) ->
          fun (__K_of_js : Ojs.t -> __K) ->
            fun (__T_of_js : Ojs.t -> __T) ->
              fun (x4594 : Ojs.t) -> any_of_js x4594
    and t_to_js :
      'K 'T . ('K -> Ojs.t) -> ('T -> Ojs.t) -> ('K, 'T) t -> Ojs.t =
      fun (type __K) ->
        fun (type __T) ->
          fun (__K_to_js : __K -> Ojs.t) ->
            fun (__T_to_js : __T -> Ojs.t) ->
              fun (x4593 : any) -> any_to_js x4593
  end
module ReadonlySet =
  struct
    type 'T t = [ `ReadonlySet of 'T ] intf
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun _T -> Obj.magic
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun _T -> Obj.magic
    type 'T tags = [ `ReadonlySet of 'T ]
    type ('tags, 'T) this =
      'tags intf constraint 'tags = [> `ReadonlySet of 'T ]
    let rec this_of_js :
      'tags 'T .
        (Ojs.t -> 'tags) -> (Ojs.t -> 'T) -> Ojs.t -> ('tags, 'T) this
      =
      fun (type __tags) ->
        fun (type __T) ->
          fun (__tags_of_js : Ojs.t -> __tags) ->
            fun (__T_of_js : Ojs.t -> __T) ->
              fun (x4597 : Ojs.t) -> intf_of_js __tags_of_js x4597
    and this_to_js :
      'tags 'T .
        ('tags -> Ojs.t) -> ('T -> Ojs.t) -> ('tags, 'T) this -> Ojs.t
      =
      fun (type __tags) ->
        fun (type __T) ->
          fun (__tags_to_js : __tags -> Ojs.t) ->
            fun (__T_to_js : __T -> Ojs.t) ->
              fun (x4595 : __tags intf) -> intf_to_js __tags_to_js x4595
    let (entries : ('tags, 'T) this -> ('T * 'T) IterableIterator.t) =
      fun (x4599 : ('tags, 'T) this) ->
        IterableIterator.t_of_js
          (fun (x4602 : Ojs.t) ->
             let x4603 = x4602 in
             ((Obj.magic (Ojs.array_get x4603 0)),
               (Obj.magic (Ojs.array_get x4603 1))))
          (Ojs.call (this_to_js Obj.magic Obj.magic x4599) "entries" [||])
    let (keys : ('tags, 'T) this -> 'T IterableIterator.t) =
      fun (x4604 : ('tags, 'T) this) ->
        IterableIterator.t_of_js Obj.magic
          (Ojs.call (this_to_js Obj.magic Obj.magic x4604) "keys" [||])
    let (values : ('tags, 'T) this -> 'T IterableIterator.t) =
      fun (x4608 : ('tags, 'T) this) ->
        IterableIterator.t_of_js Obj.magic
          (Ojs.call (this_to_js Obj.magic Obj.magic x4608) "values" [||])
    let (forEach :
      ('tags, 'T) this ->
        callbackfn:(value:'T -> value2:'T -> set_:'T t -> unit) ->
          ?thisArg:any -> unit -> unit)
      =
      fun (x4620 : ('tags, 'T) this) ->
        fun ~callbackfn:(x4612 : value:'T -> value2:'T -> set_:'T t -> unit)
          ->
          fun ?thisArg:(x4613 : any option) ->
            fun () ->
              ignore
                (let x4623 = this_to_js Obj.magic Obj.magic x4620 in
                 Ojs.call (Ojs.get_prop_ascii x4623 "forEach") "apply"
                   [|x4623;((let x4614 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x4614 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x4616 : Ojs.t) ->
                                          fun (x4617 : Ojs.t) ->
                                            fun (x4618 : Ojs.t) ->
                                              x4612 ~value:(Obj.magic x4616)
                                                ~value2:(Obj.magic x4617)
                                                ~set_:(t_of_js Obj.magic
                                                         x4618)))|]);
                             (match x4613 with
                              | Some x4615 ->
                                  ignore
                                    (Ojs.call x4614 "push"
                                       [|(any_to_js x4615)|])
                              | None -> ());
                             x4614))|])
    let (has : ('tags, 'T) this -> value:'T -> bool) =
      fun (x4625 : ('tags, 'T) this) ->
        fun ~value:(x4624 : 'T) ->
          Ojs.bool_of_js
            (Ojs.call (this_to_js Obj.magic Obj.magic x4625) "has"
               [|(Obj.magic x4624)|])
    let (get_size : ('tags, 'T) this -> float) =
      fun (x4628 : ('tags, 'T) this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic Obj.magic x4628) "size")
    let cast_from = Obj.magic
  end
module ReadonlyMap =
  struct
    type ('K, 'V) t = [ `ReadonlyMap of ('K * 'V) ] intf
    let rec t_of_js :
      'K 'V . (Ojs.t -> 'K) -> (Ojs.t -> 'V) -> Ojs.t -> ('K, 'V) t =
      fun _K -> fun _V -> Obj.magic
    and t_to_js :
      'K 'V . ('K -> Ojs.t) -> ('V -> Ojs.t) -> ('K, 'V) t -> Ojs.t =
      fun _K -> fun _V -> Obj.magic
    type ('K, 'V) tags = [ `ReadonlyMap of ('K * 'V) ]
    type ('tags, 'K, 'V) this =
      'tags intf constraint 'tags = [> `ReadonlyMap of ('K * 'V) ]
    let rec this_of_js :
      'tags 'K 'V .
        (Ojs.t -> 'tags) ->
          (Ojs.t -> 'K) -> (Ojs.t -> 'V) -> Ojs.t -> ('tags, 'K, 'V) this
      =
      fun (type __tags) ->
        fun (type __K) ->
          fun (type __V) ->
            fun (__tags_of_js : Ojs.t -> __tags) ->
              fun (__K_of_js : Ojs.t -> __K) ->
                fun (__V_of_js : Ojs.t -> __V) ->
                  fun (x4633 : Ojs.t) -> intf_of_js __tags_of_js x4633
    and this_to_js :
      'tags 'K 'V .
        ('tags -> Ojs.t) ->
          ('K -> Ojs.t) -> ('V -> Ojs.t) -> ('tags, 'K, 'V) this -> Ojs.t
      =
      fun (type __tags) ->
        fun (type __K) ->
          fun (type __V) ->
            fun (__tags_to_js : __tags -> Ojs.t) ->
              fun (__K_to_js : __K -> Ojs.t) ->
                fun (__V_to_js : __V -> Ojs.t) ->
                  fun (x4631 : __tags intf) -> intf_to_js __tags_to_js x4631
    let (entries : ('tags, 'K, 'V) this -> ('K * 'V) IterableIterator.t) =
      fun (x4635 : ('tags, 'K, 'V) this) ->
        IterableIterator.t_of_js
          (fun (x4639 : Ojs.t) ->
             let x4640 = x4639 in
             ((Obj.magic (Ojs.array_get x4640 0)),
               (Obj.magic (Ojs.array_get x4640 1))))
          (Ojs.call (this_to_js Obj.magic Obj.magic Obj.magic x4635)
             "entries" [||])
    let (keys : ('tags, 'K, 'V) this -> 'K IterableIterator.t) =
      fun (x4641 : ('tags, 'K, 'V) this) ->
        IterableIterator.t_of_js Obj.magic
          (Ojs.call (this_to_js Obj.magic Obj.magic Obj.magic x4641) "keys"
             [||])
    let (values : ('tags, 'K, 'V) this -> 'V IterableIterator.t) =
      fun (x4646 : ('tags, 'K, 'V) this) ->
        IterableIterator.t_of_js Obj.magic
          (Ojs.call (this_to_js Obj.magic Obj.magic Obj.magic x4646) "values"
             [||])
    let (forEach :
      ('tags, 'K, 'V) this ->
        callbackfn:(value:'V -> key:'K -> map:('K, 'V) t -> unit) ->
          ?thisArg:any -> unit -> unit)
      =
      fun (x4660 : ('tags, 'K, 'V) this) ->
        fun
          ~callbackfn:(x4651 : value:'V -> key:'K -> map:('K, 'V) t -> unit)
          ->
          fun ?thisArg:(x4652 : any option) ->
            fun () ->
              ignore
                (let x4664 = this_to_js Obj.magic Obj.magic Obj.magic x4660 in
                 Ojs.call (Ojs.get_prop_ascii x4664 "forEach") "apply"
                   [|x4664;((let x4653 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x4653 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x4655 : Ojs.t) ->
                                          fun (x4656 : Ojs.t) ->
                                            fun (x4657 : Ojs.t) ->
                                              x4651 ~value:(Obj.magic x4655)
                                                ~key:(Obj.magic x4656)
                                                ~map:(t_of_js Obj.magic
                                                        Obj.magic x4657)))|]);
                             (match x4652 with
                              | Some x4654 ->
                                  ignore
                                    (Ojs.call x4653 "push"
                                       [|(any_to_js x4654)|])
                              | None -> ());
                             x4653))|])
    let (get_ : ('tags, 'K, 'V) this -> key:'K -> 'V option) =
      fun (x4666 : ('tags, 'K, 'V) this) ->
        fun ~key:(x4665 : 'K) ->
          Ojs.option_of_js Obj.magic
            (Ojs.call (this_to_js Obj.magic Obj.magic Obj.magic x4666) "get"
               [|(Obj.magic x4665)|])
    let (has : ('tags, 'K, 'V) this -> key:'K -> bool) =
      fun (x4672 : ('tags, 'K, 'V) this) ->
        fun ~key:(x4671 : 'K) ->
          Ojs.bool_of_js
            (Ojs.call (this_to_js Obj.magic Obj.magic Obj.magic x4672) "has"
               [|(Obj.magic x4671)|])
    let (get_size : ('tags, 'K, 'V) this -> float) =
      fun (x4676 : ('tags, 'K, 'V) this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii
             (this_to_js Obj.magic Obj.magic Obj.magic x4676) "size")
    let cast_from = Obj.magic
  end
module RangeError =
  struct
    type t = [ `Error  | `RangeError ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type tags = [ `Error  | `RangeError ]
    type 'tags this = 'tags intf constraint 'tags = [> `RangeError ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x4682 : Ojs.t) -> intf_of_js __tags_of_js x4682
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x4680 : __tags intf) -> intf_to_js __tags_to_js x4680
    let (create : ?message:string -> ?options:ErrorOptions.t -> unit -> t) =
      fun ?message:(x4684 : string option) ->
        fun ?options:(x4685 : ErrorOptions.t option) ->
          fun () ->
            t_of_js
              (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "RangeError")
                 (let x4686 =
                    Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                  (match x4684 with
                   | Some x4688 ->
                       ignore
                         (Ojs.call x4686 "push" [|(Ojs.string_to_js x4688)|])
                   | None -> ());
                  (match x4685 with
                   | Some x4687 ->
                       ignore
                         (Ojs.call x4686 "push"
                            [|(ErrorOptions.t_to_js x4687)|])
                   | None -> ());
                  x4686))
    let (invoke : ?message:string -> ?options:ErrorOptions.t -> unit -> t) =
      fun ?message:(x4689 : string option) ->
        fun ?options:(x4690 : ErrorOptions.t option) ->
          fun () ->
            t_of_js
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "RangeError") "apply"
                 [|Ojs.null;((let x4691 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              (match x4689 with
                               | Some x4693 ->
                                   ignore
                                     (Ojs.call x4691 "push"
                                        [|(Ojs.string_to_js x4693)|])
                               | None -> ());
                              (match x4690 with
                               | Some x4692 ->
                                   ignore
                                     (Ojs.call x4691 "push"
                                        [|(ErrorOptions.t_to_js x4692)|])
                               | None -> ());
                              x4691))|])
    let (create' : ?message:string -> unit -> t) =
      fun ?message:(x4694 : string option) ->
        fun () ->
          t_of_js
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "RangeError")
               (let x4695 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x4694 with
                 | Some x4696 ->
                     ignore
                       (Ojs.call x4695 "push" [|(Ojs.string_to_js x4696)|])
                 | None -> ());
                x4695))
    let (invoke' : ?message:string -> unit -> t) =
      fun ?message:(x4697 : string option) ->
        fun () ->
          t_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "RangeError") "apply"
               [|Ojs.null;((let x4698 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x4697 with
                             | Some x4699 ->
                                 ignore
                                   (Ojs.call x4698 "push"
                                      [|(Ojs.string_to_js x4699)|])
                             | None -> ());
                            x4698))|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "RangeError")
             "prototype")
    let cast_from = Obj.magic
  end
module PropertyDescriptor =
  struct
    type t = [ `PropertyDescriptor ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type tags = [ `PropertyDescriptor ]
    type 'tags this = 'tags intf constraint 'tags = [> `PropertyDescriptor ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x4702 : Ojs.t) -> intf_of_js __tags_of_js x4702
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x4700 : __tags intf) -> intf_to_js __tags_to_js x4700
    let (get_configurable : 'tags this -> bool option) =
      fun (x4704 : 'tags this) ->
        Ojs.option_of_js Ojs.bool_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x4704) "configurable")
    let (set_configurable : 'tags this -> bool -> unit) =
      fun (x4707 : 'tags this) ->
        fun (x4708 : bool) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x4707) "configurable"
            (Ojs.bool_to_js x4708)
    let (get_enumerable : 'tags this -> bool option) =
      fun (x4710 : 'tags this) ->
        Ojs.option_of_js Ojs.bool_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x4710) "enumerable")
    let (set_enumerable : 'tags this -> bool -> unit) =
      fun (x4713 : 'tags this) ->
        fun (x4714 : bool) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x4713) "enumerable"
            (Ojs.bool_to_js x4714)
    let (get_value : 'tags this -> any option) =
      fun (x4716 : 'tags this) ->
        Ojs.option_of_js any_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x4716) "value")
    let (set_value : 'tags this -> any -> unit) =
      fun (x4719 : 'tags this) ->
        fun (x4720 : any) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x4719) "value"
            (any_to_js x4720)
    let (get_writable : 'tags this -> bool option) =
      fun (x4722 : 'tags this) ->
        Ojs.option_of_js Ojs.bool_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x4722) "writable")
    let (set_writable : 'tags this -> bool -> unit) =
      fun (x4725 : 'tags this) ->
        fun (x4726 : bool) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x4725) "writable"
            (Ojs.bool_to_js x4726)
    let (get_ : 'tags this -> any) =
      fun (x4728 : 'tags this) ->
        any_of_js (Ojs.call (this_to_js Obj.magic x4728) "get" [||])
    let (set_ : 'tags this -> v:any -> unit) =
      fun (x4731 : 'tags this) ->
        fun ~v:(x4730 : any) ->
          ignore
            (Ojs.call (this_to_js Obj.magic x4731) "set"
               [|(any_to_js x4730)|])
    let cast_from = Obj.magic
  end
module Function =
  struct
    type t = [ `Function ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type tags = [ `Function ]
    type 'tags this = 'tags intf constraint 'tags = [> `Function ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x4735 : Ojs.t) -> intf_of_js __tags_of_js x4735
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x4733 : __tags intf) -> intf_to_js __tags_to_js x4733
    let (get_name : 'tags this -> string) =
      fun (x4737 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x4737) "name")
    let (apply_ :
      'tags this -> this:t -> thisArg:any -> ?argArray:any -> unit -> any) =
      fun (x4744 : 'tags this) ->
        fun ~this:(x4739 : t) ->
          fun ~thisArg:(x4740 : any) ->
            fun ?argArray:(x4741 : any option) ->
              fun () ->
                any_of_js
                  (let x4746 = this_to_js Obj.magic x4744 in
                   Ojs.call (Ojs.get_prop_ascii x4746 "apply") "apply"
                     [|x4746;((let x4742 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x4742 "push" [|(t_to_js x4739)|]);
                               ignore
                                 (Ojs.call x4742 "push" [|(any_to_js x4740)|]);
                               (match x4741 with
                                | Some x4743 ->
                                    ignore
                                      (Ojs.call x4742 "push"
                                         [|(any_to_js x4743)|])
                                | None -> ());
                               x4742))|])
    let (call :
      'tags this -> this:t -> thisArg:any -> argArray:any list -> any) =
      fun (x4752 : 'tags this) ->
        fun ~this:(x4747 : t) ->
          fun ~thisArg:(x4748 : any) ->
            fun ~argArray:(x4749 : any list) ->
              any_of_js
                (let x4754 = this_to_js Obj.magic x4752 in
                 Ojs.call (Ojs.get_prop_ascii x4754 "call") "apply"
                   [|x4754;((let x4750 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x4750 "push" [|(t_to_js x4747)|]);
                             ignore
                               (Ojs.call x4750 "push" [|(any_to_js x4748)|]);
                             List.iter
                               (fun (x4751 : any) ->
                                  ignore
                                    (Ojs.call x4750 "push"
                                       [|(any_to_js x4751)|])) x4749;
                             x4750))|])
    let (bind :
      'tags this -> this:t -> thisArg:any -> argArray:any list -> any) =
      fun (x4760 : 'tags this) ->
        fun ~this:(x4755 : t) ->
          fun ~thisArg:(x4756 : any) ->
            fun ~argArray:(x4757 : any list) ->
              any_of_js
                (let x4762 = this_to_js Obj.magic x4760 in
                 Ojs.call (Ojs.get_prop_ascii x4762 "bind") "apply"
                   [|x4762;((let x4758 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x4758 "push" [|(t_to_js x4755)|]);
                             ignore
                               (Ojs.call x4758 "push" [|(any_to_js x4756)|]);
                             List.iter
                               (fun (x4759 : any) ->
                                  ignore
                                    (Ojs.call x4758 "push"
                                       [|(any_to_js x4759)|])) x4757;
                             x4758))|])
    let (toString : 'tags this -> string) =
      fun (x4763 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x4763) "toString" [||])
    let (get_prototype : 'tags this -> any) =
      fun (x4765 : 'tags this) ->
        any_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x4765) "prototype")
    let (set_prototype : 'tags this -> any -> unit) =
      fun (x4767 : 'tags this) ->
        fun (x4768 : any) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x4767) "prototype"
            (any_to_js x4768)
    let (get_length : 'tags this -> float) =
      fun (x4770 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x4770) "length")
    let (get_arguments : 'tags this -> any) =
      fun (x4772 : 'tags this) ->
        any_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x4772) "arguments")
    let (set_arguments : 'tags this -> any -> unit) =
      fun (x4774 : 'tags this) ->
        fun (x4775 : any) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x4774) "arguments"
            (any_to_js x4775)
    let (get_caller : 'tags this -> t) =
      fun (x4777 : 'tags this) ->
        t_of_js (Ojs.get_prop_ascii (this_to_js Obj.magic x4777) "caller")
    let (set_caller : 'tags this -> t -> unit) =
      fun (x4779 : 'tags this) ->
        fun (x4780 : t) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x4779) "caller"
            (t_to_js x4780)
    let (create : string list -> t) =
      fun (x4782 : string list) ->
        t_of_js
          (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "Function")
             (let x4783 =
                Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
              List.iter
                (fun (x4784 : string) ->
                   ignore
                     (Ojs.call x4783 "push" [|(Ojs.string_to_js x4784)|]))
                x4782;
              x4783))
    let (invoke : string list -> t) =
      fun (x4785 : string list) ->
        t_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Function") "apply"
             [|Ojs.null;((let x4786 =
                            Ojs.new_obj
                              (Ojs.get_prop_ascii Ojs.global "Array") 
                              [||] in
                          List.iter
                            (fun (x4787 : string) ->
                               ignore
                                 (Ojs.call x4786 "push"
                                    [|(Ojs.string_to_js x4787)|])) x4785;
                          x4786))|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Function")
             "prototype")
    let cast_from = Obj.magic
  end
module ProxyHandler =
  struct
    type 'T t = [ `ProxyHandler of 'T ] intf
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun _T -> Obj.magic
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun _T -> Obj.magic
    type 'T tags = [ `ProxyHandler of 'T ]
    type ('tags, 'T) this =
      'tags intf constraint 'tags = [> `ProxyHandler of 'T ]
    let rec this_of_js :
      'tags 'T .
        (Ojs.t -> 'tags) -> (Ojs.t -> 'T) -> Ojs.t -> ('tags, 'T) this
      =
      fun (type __tags) ->
        fun (type __T) ->
          fun (__tags_of_js : Ojs.t -> __tags) ->
            fun (__T_of_js : Ojs.t -> __T) ->
              fun (x4790 : Ojs.t) -> intf_of_js __tags_of_js x4790
    and this_to_js :
      'tags 'T .
        ('tags -> Ojs.t) -> ('T -> Ojs.t) -> ('tags, 'T) this -> Ojs.t
      =
      fun (type __tags) ->
        fun (type __T) ->
          fun (__tags_to_js : __tags -> Ojs.t) ->
            fun (__T_to_js : __T -> Ojs.t) ->
              fun (x4788 : __tags intf) -> intf_to_js __tags_to_js x4788
    let (apply_ :
      ('tags, 'T) this ->
        target:'T -> thisArg:any -> argArray:any list -> any)
      =
      fun (x4796 : ('tags, 'T) this) ->
        fun ~target:(x4792 : 'T) ->
          fun ~thisArg:(x4793 : any) ->
            fun ~argArray:(x4794 : any list) ->
              any_of_js
                (Ojs.call (this_to_js Obj.magic Obj.magic x4796) "apply"
                   [|(Obj.magic x4792);(any_to_js x4793);(Ojs.list_to_js
                                                            any_to_js x4794)|])
    let (construct :
      ('tags, 'T) this ->
        target:'T ->
          argArray:any list -> newTarget:Function.t -> untyped_object)
      =
      fun (x4803 : ('tags, 'T) this) ->
        fun ~target:(x4799 : 'T) ->
          fun ~argArray:(x4800 : any list) ->
            fun ~newTarget:(x4802 : Function.t) ->
              untyped_object_of_js
                (Ojs.call (this_to_js Obj.magic Obj.magic x4803) "construct"
                   [|(Obj.magic x4799);(Ojs.list_to_js any_to_js x4800);(
                     Function.t_to_js x4802)|])
    let (defineProperty :
      ('tags, 'T) this ->
        target:'T ->
          property:[ `U1 of string  | `U2 of symbol ] ->
            attributes:PropertyDescriptor.t -> bool)
      =
      fun (x4811 : ('tags, 'T) this) ->
        fun ~target:(x4806 : 'T) ->
          fun ~property:(x4807 : [ `U1 of string  | `U2 of symbol ]) ->
            fun ~attributes:(x4810 : PropertyDescriptor.t) ->
              Ojs.bool_of_js
                (Ojs.call (this_to_js Obj.magic Obj.magic x4811)
                   "defineProperty"
                   [|(Obj.magic x4806);((match x4807 with
                                         | `U1 x4808 ->
                                             Ojs.string_to_js x4808
                                         | `U2 x4809 -> symbol_to_js x4809));(
                     PropertyDescriptor.t_to_js x4810)|])
    let (deleteProperty :
      ('tags, 'T) this ->
        target:'T -> p:[ `U1 of string  | `U2 of symbol ] -> bool)
      =
      fun (x4818 : ('tags, 'T) this) ->
        fun ~target:(x4814 : 'T) ->
          fun ~p:(x4815 : [ `U1 of string  | `U2 of symbol ]) ->
            Ojs.bool_of_js
              (Ojs.call (this_to_js Obj.magic Obj.magic x4818)
                 "deleteProperty"
                 [|(Obj.magic x4814);((match x4815 with
                                       | `U1 x4816 -> Ojs.string_to_js x4816
                                       | `U2 x4817 -> symbol_to_js x4817))|])
    let (get_ :
      ('tags, 'T) this ->
        target:'T ->
          p:[ `U1 of string  | `U2 of symbol ] -> receiver:any -> any)
      =
      fun (x4826 : ('tags, 'T) this) ->
        fun ~target:(x4821 : 'T) ->
          fun ~p:(x4822 : [ `U1 of string  | `U2 of symbol ]) ->
            fun ~receiver:(x4825 : any) ->
              any_of_js
                (Ojs.call (this_to_js Obj.magic Obj.magic x4826) "get"
                   [|(Obj.magic x4821);((match x4822 with
                                         | `U1 x4823 ->
                                             Ojs.string_to_js x4823
                                         | `U2 x4824 -> symbol_to_js x4824));(
                     any_to_js x4825)|])
    let (getOwnPropertyDescriptor :
      ('tags, 'T) this ->
        target:'T ->
          p:[ `U1 of string  | `U2 of symbol ] -> PropertyDescriptor.t option)
      =
      fun (x4833 : ('tags, 'T) this) ->
        fun ~target:(x4829 : 'T) ->
          fun ~p:(x4830 : [ `U1 of string  | `U2 of symbol ]) ->
            Ojs.option_of_js PropertyDescriptor.t_of_js
              (Ojs.call (this_to_js Obj.magic Obj.magic x4833)
                 "getOwnPropertyDescriptor"
                 [|(Obj.magic x4829);((match x4830 with
                                       | `U1 x4831 -> Ojs.string_to_js x4831
                                       | `U2 x4832 -> symbol_to_js x4832))|])
    let (getPrototypeOf :
      ('tags, 'T) this -> target:'T -> untyped_object option) =
      fun (x4838 : ('tags, 'T) this) ->
        fun ~target:(x4837 : 'T) ->
          Ojs.option_of_js untyped_object_of_js
            (Ojs.call (this_to_js Obj.magic Obj.magic x4838) "getPrototypeOf"
               [|(Obj.magic x4837)|])
    let (has :
      ('tags, 'T) this ->
        target:'T -> p:[ `U1 of string  | `U2 of symbol ] -> bool)
      =
      fun (x4846 : ('tags, 'T) this) ->
        fun ~target:(x4842 : 'T) ->
          fun ~p:(x4843 : [ `U1 of string  | `U2 of symbol ]) ->
            Ojs.bool_of_js
              (Ojs.call (this_to_js Obj.magic Obj.magic x4846) "has"
                 [|(Obj.magic x4842);((match x4843 with
                                       | `U1 x4844 -> Ojs.string_to_js x4844
                                       | `U2 x4845 -> symbol_to_js x4845))|])
    let (isExtensible : ('tags, 'T) this -> target:'T -> bool) =
      fun (x4850 : ('tags, 'T) this) ->
        fun ~target:(x4849 : 'T) ->
          Ojs.bool_of_js
            (Ojs.call (this_to_js Obj.magic Obj.magic x4850) "isExtensible"
               [|(Obj.magic x4849)|])
    let (ownKeys :
      ('tags, 'T) this ->
        target:'T ->
          [ `String of string  | `Symbol of symbol ] Primitive.t ArrayLike.t)
      =
      fun (x4854 : ('tags, 'T) this) ->
        fun ~target:(x4853 : 'T) ->
          ArrayLike.t_of_js
            (fun (x4857 : Ojs.t) ->
               Primitive.t_of_js
                 (fun (x4858 : Ojs.t) ->
                    let x4859 = x4858 in
                    match Ojs.string_of_js (Ojs.get_prop_ascii x4859 "dummy")
                    with
                    | "String" -> `String (Ojs.string_of_js x4859)
                    | "Symbol" -> `Symbol (symbol_of_js x4859)
                    | _ -> assert false) x4857)
            (Ojs.call (this_to_js Obj.magic Obj.magic x4854) "ownKeys"
               [|(Obj.magic x4853)|])
    let (preventExtensions : ('tags, 'T) this -> target:'T -> bool) =
      fun (x4861 : ('tags, 'T) this) ->
        fun ~target:(x4860 : 'T) ->
          Ojs.bool_of_js
            (Ojs.call (this_to_js Obj.magic Obj.magic x4861)
               "preventExtensions" [|(Obj.magic x4860)|])
    let (set_ :
      ('tags, 'T) this ->
        target:'T ->
          p:[ `U1 of string  | `U2 of symbol ] ->
            newValue:any -> receiver:any -> bool)
      =
      fun (x4870 : ('tags, 'T) this) ->
        fun ~target:(x4864 : 'T) ->
          fun ~p:(x4865 : [ `U1 of string  | `U2 of symbol ]) ->
            fun ~newValue:(x4868 : any) ->
              fun ~receiver:(x4869 : any) ->
                Ojs.bool_of_js
                  (Ojs.call (this_to_js Obj.magic Obj.magic x4870) "set"
                     [|(Obj.magic x4864);((match x4865 with
                                           | `U1 x4866 ->
                                               Ojs.string_to_js x4866
                                           | `U2 x4867 -> symbol_to_js x4867));(
                       any_to_js x4868);(any_to_js x4869)|])
    let (setPrototypeOf :
      ('tags, 'T) this -> target:'T -> v:untyped_object option -> bool) =
      fun (x4876 : ('tags, 'T) this) ->
        fun ~target:(x4873 : 'T) ->
          fun ~v:(x4874 : untyped_object option) ->
            Ojs.bool_of_js
              (Ojs.call (this_to_js Obj.magic Obj.magic x4876)
                 "setPrototypeOf"
                 [|(Obj.magic x4873);(Ojs.option_to_js untyped_object_to_js
                                        x4874)|])
    let cast_from = Obj.magic
  end
module ProxyStatic =
  struct
    module AnonymousInterface43 =
      struct
        type 'T t = Ojs.t
        let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
          fun (type __T) ->
            fun (__T_of_js : Ojs.t -> __T) -> fun (x4880 : Ojs.t) -> x4880
        and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t =
          fun (type __T) ->
            fun (__T_to_js : __T -> Ojs.t) -> fun (x4879 : Ojs.t) -> x4879
        let (get_proxy : 'T t -> 'T) =
          fun (x4881 : 'T t) ->
            Obj.magic (Ojs.get_prop_ascii (t_to_js Obj.magic x4881) "proxy")
        let (set_proxy : 'T t -> 'T -> unit) =
          fun (x4883 : 'T t) ->
            fun (x4884 : 'T) ->
              Ojs.set_prop_ascii (t_to_js Obj.magic x4883) "proxy"
                (Obj.magic x4884)
        let (revoke : 'T t -> unit) =
          fun (x4886 : 'T t) ->
            ignore (Ojs.call (t_to_js Obj.magic x4886) "revoke" [||])
        let (create : proxy:'T -> revoke:(unit -> unit) -> unit -> 'T t) =
          fun ~proxy:(x4888 : 'T) ->
            fun ~revoke:(x4889 : unit -> unit) ->
              fun () ->
                let x4890 = Ojs.empty_obj () in
                Ojs.set_prop_ascii x4890 "proxy" (Obj.magic x4888);
                Ojs.set_prop_ascii x4890 "revoke"
                  (Ojs.fun_to_js 1 (fun _ -> x4889 ()));
                t_of_js Obj.magic x4890
        module Make(T:Ojs.T) =
          struct
            type 'T parent = 'T t
            let rec parent_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T parent =
              fun (type __T) ->
                fun (__T_of_js : Ojs.t -> __T) ->
                  fun (x4894 : Ojs.t) -> t_of_js __T_of_js x4894
            and parent_to_js : 'T . ('T -> Ojs.t) -> 'T parent -> Ojs.t =
              fun (type __T) ->
                fun (__T_to_js : __T -> Ojs.t) ->
                  fun (x4892 : __T t) -> t_to_js __T_to_js x4892
            type t = T.t parent
            let rec t_of_js : Ojs.t -> t =
              fun (x4898 : Ojs.t) -> parent_of_js T.t_of_js x4898
            and t_to_js : t -> Ojs.t =
              fun (x4896 : T.t parent) -> parent_to_js T.t_to_js x4896
            let (get_proxy : t -> T.t) =
              fun (x4900 : t) ->
                T.t_of_js (Ojs.get_prop_ascii (t_to_js x4900) "proxy")
            let (set_proxy : t -> T.t -> unit) =
              fun (x4901 : t) ->
                fun (x4902 : T.t) ->
                  Ojs.set_prop_ascii (t_to_js x4901) "proxy"
                    (T.t_to_js x4902)
            let (revoke : t -> unit) =
              fun (x4903 : t) ->
                ignore (Ojs.call (t_to_js x4903) "revoke" [||])
          end
      end
    let (revocable :
      target:'T -> handler:'T ProxyHandler.t -> 'T AnonymousInterface43.t) =
      fun ~target:(x4904 : 'T) ->
        fun ~handler:(x4905 : 'T ProxyHandler.t) ->
          AnonymousInterface43.t_of_js Obj.magic
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "Proxy") "revocable"
               [|(Obj.magic x4904);(ProxyHandler.t_to_js Obj.magic x4905)|])
    let (create : target:'T -> handler:'T ProxyHandler.t -> 'T) =
      fun ~target:(x4908 : 'T) ->
        fun ~handler:(x4909 : 'T ProxyHandler.t) ->
          Obj.magic
            (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Proxy")
               [|(Obj.magic x4908);(ProxyHandler.t_to_js Obj.magic x4909)|])
  end
module ProxyConstructor =
  struct
    module AnonymousInterface43 =
      struct
        type 'T t = Ojs.t
        let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
          fun (type __T) ->
            fun (__T_of_js : Ojs.t -> __T) -> fun (x4912 : Ojs.t) -> x4912
        and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t =
          fun (type __T) ->
            fun (__T_to_js : __T -> Ojs.t) -> fun (x4911 : Ojs.t) -> x4911
        let (get_proxy : 'T t -> 'T) =
          fun (x4913 : 'T t) ->
            Obj.magic (Ojs.get_prop_ascii (t_to_js Obj.magic x4913) "proxy")
        let (set_proxy : 'T t -> 'T -> unit) =
          fun (x4915 : 'T t) ->
            fun (x4916 : 'T) ->
              Ojs.set_prop_ascii (t_to_js Obj.magic x4915) "proxy"
                (Obj.magic x4916)
        let (revoke : 'T t -> unit) =
          fun (x4918 : 'T t) ->
            ignore (Ojs.call (t_to_js Obj.magic x4918) "revoke" [||])
        let (create : proxy:'T -> revoke:(unit -> unit) -> unit -> 'T t) =
          fun ~proxy:(x4920 : 'T) ->
            fun ~revoke:(x4921 : unit -> unit) ->
              fun () ->
                let x4922 = Ojs.empty_obj () in
                Ojs.set_prop_ascii x4922 "proxy" (Obj.magic x4920);
                Ojs.set_prop_ascii x4922 "revoke"
                  (Ojs.fun_to_js 1 (fun _ -> x4921 ()));
                t_of_js Obj.magic x4922
        module Make(T:Ojs.T) =
          struct
            type 'T parent = 'T t
            let rec parent_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T parent =
              fun (type __T) ->
                fun (__T_of_js : Ojs.t -> __T) ->
                  fun (x4926 : Ojs.t) -> t_of_js __T_of_js x4926
            and parent_to_js : 'T . ('T -> Ojs.t) -> 'T parent -> Ojs.t =
              fun (type __T) ->
                fun (__T_to_js : __T -> Ojs.t) ->
                  fun (x4924 : __T t) -> t_to_js __T_to_js x4924
            type t = T.t parent
            let rec t_of_js : Ojs.t -> t =
              fun (x4930 : Ojs.t) -> parent_of_js T.t_of_js x4930
            and t_to_js : t -> Ojs.t =
              fun (x4928 : T.t parent) -> parent_to_js T.t_to_js x4928
            let (get_proxy : t -> T.t) =
              fun (x4932 : t) ->
                T.t_of_js (Ojs.get_prop_ascii (t_to_js x4932) "proxy")
            let (set_proxy : t -> T.t -> unit) =
              fun (x4933 : t) ->
                fun (x4934 : T.t) ->
                  Ojs.set_prop_ascii (t_to_js x4933) "proxy"
                    (T.t_to_js x4934)
            let (revoke : t -> unit) =
              fun (x4935 : t) ->
                ignore (Ojs.call (t_to_js x4935) "revoke" [||])
          end
      end
    type t = [ `ProxyConstructor ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type tags = [ `ProxyConstructor ]
    type 'tags this = 'tags intf constraint 'tags = [> `ProxyConstructor ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x4938 : Ojs.t) -> intf_of_js __tags_of_js x4938
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x4936 : __tags intf) -> intf_to_js __tags_to_js x4936
    let (revocable :
      'tags this ->
        target:'T -> handler:'T ProxyHandler.t -> 'T AnonymousInterface43.t)
      =
      fun (x4943 : 'tags this) ->
        fun ~target:(x4940 : 'T) ->
          fun ~handler:(x4941 : 'T ProxyHandler.t) ->
            AnonymousInterface43.t_of_js Obj.magic
              (Ojs.call (this_to_js Obj.magic x4943) "revocable"
                 [|(Obj.magic x4940);(ProxyHandler.t_to_js Obj.magic x4941)|])
    let (create : 'tags this -> target:'T -> handler:'T ProxyHandler.t -> 'T)
      =
      fun (x4949 : 'tags this) ->
        fun ~target:(x4946 : 'T) ->
          fun ~handler:(x4947 : 'T ProxyHandler.t) ->
            Obj.magic
              (Ojs.new_obj (this_to_js Obj.magic x4949)
                 [|(Obj.magic x4946);(ProxyHandler.t_to_js Obj.magic x4947)|])
    let cast_from = Obj.magic
  end
module PromiseLike =
  struct
    type 'T t = [ `PromiseLike of 'T ] intf
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun _T -> Obj.magic
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun _T -> Obj.magic
    type 'T tags = [ `PromiseLike of 'T ]
    type ('tags, 'T) this =
      'tags intf constraint 'tags = [> `PromiseLike of 'T ]
    let rec this_of_js :
      'tags 'T .
        (Ojs.t -> 'tags) -> (Ojs.t -> 'T) -> Ojs.t -> ('tags, 'T) this
      =
      fun (type __tags) ->
        fun (type __T) ->
          fun (__tags_of_js : Ojs.t -> __tags) ->
            fun (__T_of_js : Ojs.t -> __T) ->
              fun (x4953 : Ojs.t) -> intf_of_js __tags_of_js x4953
    and this_to_js :
      'tags 'T .
        ('tags -> Ojs.t) -> ('T -> Ojs.t) -> ('tags, 'T) this -> Ojs.t
      =
      fun (type __tags) ->
        fun (type __T) ->
          fun (__tags_to_js : __tags -> Ojs.t) ->
            fun (__T_to_js : __T -> Ojs.t) ->
              fun (x4951 : __tags intf) -> intf_to_js __tags_to_js x4951
    let (then_ :
      ('tags, 'T) this ->
        ?onfulfilled:[ `Null  | `Undefined of undefined 
                     | `U1 of
                         'T -> [ `U1 of 'TResult1  | `U2 of 'TResult1 t ] ]
          ->
          ?onrejected:[ `Null  | `Undefined of undefined 
                      | `U1 of
                          any -> [ `U1 of 'TResult2  | `U2 of 'TResult2 t ] ]
            -> unit -> ('TResult1, 'TResult2) union2 t)
      =
      fun (x4972 : ('tags, 'T) this) ->
        fun
          ?onfulfilled:(x4955 :
                         [ `Null  | `Undefined of undefined 
                         | `U1 of
                             'T -> [ `U1 of 'TResult1  | `U2 of 'TResult1 t ] ]
                           option)
          ->
          fun
            ?onrejected:(x4956 :
                          [ `Null  | `Undefined of undefined 
                          | `U1 of
                              any ->
                                [ `U1 of 'TResult2  | `U2 of 'TResult2 t ]
                              ]
                            option)
            ->
            fun () ->
              t_of_js
                (fun (x4976 : Ojs.t) ->
                   union2_of_js Obj.magic Obj.magic x4976)
                (let x4975 = this_to_js Obj.magic Obj.magic x4972 in
                 Ojs.call (Ojs.get_prop_ascii x4975 "then") "apply"
                   [|x4975;((let x4957 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x4955 with
                              | Some x4965 ->
                                  ignore
                                    (Ojs.call x4957 "push"
                                       [|((match x4965 with
                                           | `Null -> Ojs.null
                                           | `Undefined x4966 ->
                                               undefined_to_js x4966
                                           | `U1 x4967 ->
                                               Ojs.fun_to_js 1
                                                 (fun (x4968 : Ojs.t) ->
                                                    match x4967
                                                            (Obj.magic x4968)
                                                    with
                                                    | `U1 x4969 ->
                                                        Obj.magic x4969
                                                    | `U2 x4970 ->
                                                        t_to_js Obj.magic
                                                          x4970)))|])
                              | None -> ());
                             (match x4956 with
                              | Some x4958 ->
                                  ignore
                                    (Ojs.call x4957 "push"
                                       [|((match x4958 with
                                           | `Null -> Ojs.null
                                           | `Undefined x4959 ->
                                               undefined_to_js x4959
                                           | `U1 x4960 ->
                                               Ojs.fun_to_js 1
                                                 (fun (x4961 : Ojs.t) ->
                                                    match x4960
                                                            (any_of_js x4961)
                                                    with
                                                    | `U1 x4962 ->
                                                        Obj.magic x4962
                                                    | `U2 x4963 ->
                                                        t_to_js Obj.magic
                                                          x4963)))|])
                              | None -> ());
                             x4957))|])
    let cast_from = Obj.magic
  end
module PromiseConstructorLike =
  struct
    module AnonymousInterface17 =
      struct
        type t = Ojs.t
        let rec t_of_js : Ojs.t -> t = fun (x4980 : Ojs.t) -> x4980
        and t_to_js : t -> Ojs.t = fun (x4979 : Ojs.t) -> x4979
        let (create :
          t ->
            executor:(resolve:([ `U1 of 'T  | `U2 of 'T PromiseLike.t ] ->
                                 unit)
                        -> reject:(?reason:any -> unit -> unit) -> unit)
              -> 'T PromiseLike.t)
          =
          fun (x4991 : t) ->
            fun
              ~executor:(x4981 :
                          resolve:([ `U1 of 'T  | `U2 of 'T PromiseLike.t ]
                                     -> unit)
                            -> reject:(?reason:any -> unit -> unit) -> unit)
              ->
              PromiseLike.t_of_js Obj.magic
                (Ojs.new_obj (t_to_js x4991)
                   [|(Ojs.fun_to_js 2
                        (fun (x4982 : Ojs.t) ->
                           fun (x4987 : Ojs.t) ->
                             x4981
                               ~resolve:(fun
                                           (x4983 :
                                             [ `U1 of 'T 
                                             | `U2 of 'T PromiseLike.t ])
                                           ->
                                           ignore
                                             (Ojs.apply x4982
                                                [|((match x4983 with
                                                    | `U1 x4984 ->
                                                        Obj.magic x4984
                                                    | `U2 x4985 ->
                                                        PromiseLike.t_to_js
                                                          Obj.magic x4985))|]))
                               ~reject:(fun ?reason:(x4988 : any option) ->
                                          fun () ->
                                            ignore
                                              (Ojs.call x4987 "apply"
                                                 [|Ojs.null;((let x4989 =
                                                                Ojs.new_obj
                                                                  (Ojs.get_prop_ascii
                                                                    Ojs.global
                                                                    "Array")
                                                                  [||] in
                                                              (match x4988
                                                               with
                                                               | Some x4990
                                                                   ->
                                                                   ignore
                                                                    (Ojs.call
                                                                    x4989
                                                                    "push"
                                                                    [|(
                                                                    any_to_js
                                                                    x4990)|])
                                                               | None -> ());
                                                              x4989))|]))))|])
      end
    type t = AnonymousInterface17.t
    let rec t_of_js : Ojs.t -> t =
      fun (x4994 : Ojs.t) -> AnonymousInterface17.t_of_js x4994
    and t_to_js : t -> Ojs.t =
      fun (x4993 : AnonymousInterface17.t) ->
        AnonymousInterface17.t_to_js x4993
  end
module Partial =
  struct
    type 'T t = any
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun (type __T) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x4996 : Ojs.t) -> any_of_js x4996
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t =
      fun (type __T) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x4995 : any) -> any_to_js x4995
  end
module Parameters =
  struct
    type 'T t = any
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun (type __T) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x4998 : Ojs.t) -> any_of_js x4998
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t =
      fun (type __T) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x4997 : any) -> any_to_js x4997
  end
module Omit =
  struct
    type ('T, 'K) t = ('T, (any, 'K) Exclude.t) Pick.t
    let rec t_of_js :
      'T 'K . (Ojs.t -> 'T) -> (Ojs.t -> 'K) -> Ojs.t -> ('T, 'K) t =
      fun (type __T) ->
        fun (type __K) ->
          fun (__T_of_js : Ojs.t -> __T) ->
            fun (__K_of_js : Ojs.t -> __K) ->
              fun (x5004 : Ojs.t) ->
                Pick.t_of_js __T_of_js
                  (fun (x5006 : Ojs.t) ->
                     Exclude.t_of_js any_of_js __K_of_js x5006) x5004
    and t_to_js :
      'T 'K . ('T -> Ojs.t) -> ('K -> Ojs.t) -> ('T, 'K) t -> Ojs.t =
      fun (type __T) ->
        fun (type __K) ->
          fun (__T_to_js : __T -> Ojs.t) ->
            fun (__K_to_js : __K -> Ojs.t) ->
              fun (x4999 : (__T, (any, __K) Exclude.t) Pick.t) ->
                Pick.t_to_js __T_to_js
                  (fun (x5001 : (any, __K) Exclude.t) ->
                     Exclude.t_to_js any_to_js __K_to_js x5001) x4999
  end
module PropertyKey =
  struct
    type t =
      [ `Number of float  | `String of string  | `Symbol of symbol ]
        Primitive.t
    let rec t_of_js : Ojs.t -> t =
      fun (x5014 : Ojs.t) ->
        Primitive.t_of_js
          (fun (x5015 : Ojs.t) ->
             let x5016 = x5015 in
             match Ojs.string_of_js (Ojs.get_prop_ascii x5016 "dummy") with
             | "Number" -> `Number (Ojs.float_of_js x5016)
             | "String" -> `String (Ojs.string_of_js x5016)
             | "Symbol" -> `Symbol (symbol_of_js x5016)
             | _ -> assert false) x5014
    and t_to_js : t -> Ojs.t =
      fun
        (x5009 :
          [ `Number of float  | `String of string  | `Symbol of symbol ]
            Primitive.t)
        ->
        Primitive.t_to_js
          (fun
             (x5010 :
               [ `Number of float  | `String of string  | `Symbol of symbol ])
             ->
             match x5010 with
             | `Number x5011 -> Ojs.float_to_js x5011
             | `String x5012 -> Ojs.string_to_js x5012
             | `Symbol x5013 -> symbol_to_js x5013) x5009
  end
module PropertyDescriptorMap =
  struct
    type t = [ `PropertyDescriptorMap ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type tags = [ `PropertyDescriptorMap ]
    type 'tags this =
      'tags intf constraint 'tags = [> `PropertyDescriptorMap ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x5019 : Ojs.t) -> intf_of_js __tags_of_js x5019
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x5017 : __tags intf) -> intf_to_js __tags_to_js x5017
    let (get : 'tags this -> PropertyKey.t -> PropertyDescriptor.t) =
      fun (x5021 : 'tags this) ->
        fun (x5023 : PropertyKey.t) ->
          PropertyDescriptor.t_of_js
            (Ojs.get_prop (this_to_js Obj.magic x5021)
               (PropertyKey.t_to_js x5023))
    let (set : 'tags this -> PropertyKey.t -> PropertyDescriptor.t -> unit) =
      fun (x5024 : 'tags this) ->
        fun (x5026 : PropertyKey.t) ->
          fun (x5027 : PropertyDescriptor.t) ->
            Ojs.set_prop (this_to_js Obj.magic x5024)
              (PropertyKey.t_to_js x5026) (PropertyDescriptor.t_to_js x5027)
    let cast_from = Obj.magic
  end
module ThisType =
  struct
    type 'T t = [ `ThisType of 'T ] intf
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun _T -> Obj.magic
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun _T -> Obj.magic
    type 'T tags = [ `ThisType of 'T ]
    type ('tags, 'T) this =
      'tags intf constraint 'tags = [> `ThisType of 'T ]
    let rec this_of_js :
      'tags 'T .
        (Ojs.t -> 'tags) -> (Ojs.t -> 'T) -> Ojs.t -> ('tags, 'T) this
      =
      fun (type __tags) ->
        fun (type __T) ->
          fun (__tags_of_js : Ojs.t -> __tags) ->
            fun (__T_of_js : Ojs.t -> __T) ->
              fun (x5030 : Ojs.t) -> intf_of_js __tags_of_js x5030
    and this_to_js :
      'tags 'T .
        ('tags -> Ojs.t) -> ('T -> Ojs.t) -> ('tags, 'T) this -> Ojs.t
      =
      fun (type __tags) ->
        fun (type __T) ->
          fun (__tags_to_js : __tags -> Ojs.t) ->
            fun (__T_to_js : __T -> Ojs.t) ->
              fun (x5028 : __tags intf) -> intf_to_js __tags_to_js x5028
    let cast_from = Obj.magic
  end
module Readonly =
  struct
    type 'T t = any
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun (type __T) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x5033 : Ojs.t) -> any_of_js x5033
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t =
      fun (type __T) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x5032 : any) -> any_to_js x5032
  end
module Object =
  struct
    module AnonymousInterface52 =
      struct
        type 'U t = Ojs.t
        let rec t_of_js : 'U . (Ojs.t -> 'U) -> Ojs.t -> 'U t =
          fun (type __U) ->
            fun (__U_of_js : Ojs.t -> __U) -> fun (x5035 : Ojs.t) -> x5035
        and t_to_js : 'U . ('U -> Ojs.t) -> 'U t -> Ojs.t =
          fun (type __U) ->
            fun (__U_to_js : __U -> Ojs.t) -> fun (x5034 : Ojs.t) -> x5034
        let (get : 'U t -> string -> ('U, untyped_object) union2 option) =
          fun (x5036 : 'U t) ->
            fun (x5038 : string) ->
              Ojs.option_of_js
                (fun (x5039 : Ojs.t) ->
                   union2_of_js Obj.magic untyped_object_of_js x5039)
                (Ojs.get_prop (t_to_js Obj.magic x5036)
                   (Ojs.string_to_js x5038))
        let (set :
          'U t ->
            string ->
              [ `Null  | `Undefined of undefined  | `U1 of 'U 
              | `U2 of untyped_object ] -> unit)
          =
          fun (x5042 : 'U t) ->
            fun (x5044 : string) ->
              fun
                (x5045 :
                  [ `Null  | `Undefined of undefined  | `U1 of 'U 
                  | `U2 of untyped_object ])
                ->
                Ojs.set_prop (t_to_js Obj.magic x5042)
                  (Ojs.string_to_js x5044)
                  (match x5045 with
                   | `Null -> Ojs.null
                   | `Undefined x5046 -> undefined_to_js x5046
                   | `U1 x5047 -> Obj.magic x5047
                   | `U2 x5048 -> untyped_object_to_js x5048)
        module Make(U:Ojs.T) =
          struct
            type 'U parent = 'U t
            let rec parent_of_js : 'U . (Ojs.t -> 'U) -> Ojs.t -> 'U parent =
              fun (type __U) ->
                fun (__U_of_js : Ojs.t -> __U) ->
                  fun (x5051 : Ojs.t) -> t_of_js __U_of_js x5051
            and parent_to_js : 'U . ('U -> Ojs.t) -> 'U parent -> Ojs.t =
              fun (type __U) ->
                fun (__U_to_js : __U -> Ojs.t) ->
                  fun (x5049 : __U t) -> t_to_js __U_to_js x5049
            type t = U.t parent
            let rec t_of_js : Ojs.t -> t =
              fun (x5055 : Ojs.t) -> parent_of_js U.t_of_js x5055
            and t_to_js : t -> Ojs.t =
              fun (x5053 : U.t parent) -> parent_to_js U.t_to_js x5053
            let (get : t -> string -> (U.t, untyped_object) union2 option) =
              fun (x5057 : t) ->
                fun (x5058 : string) ->
                  Ojs.option_of_js
                    (fun (x5059 : Ojs.t) ->
                       union2_of_js U.t_of_js untyped_object_of_js x5059)
                    (Ojs.get_prop (t_to_js x5057) (Ojs.string_to_js x5058))
            let (set :
              t ->
                string ->
                  [ `Null  | `Undefined of undefined  | `U1 of U.t 
                  | `U2 of untyped_object ] -> unit)
              =
              fun (x5062 : t) ->
                fun (x5063 : string) ->
                  fun
                    (x5064 :
                      [ `Null  | `Undefined of undefined  | `U1 of U.t 
                      | `U2 of untyped_object ])
                    ->
                    Ojs.set_prop (t_to_js x5062) (Ojs.string_to_js x5063)
                      (match x5064 with
                       | `Null -> Ojs.null
                       | `Undefined x5065 -> undefined_to_js x5065
                       | `U1 x5066 -> U.t_to_js x5066
                       | `U2 x5067 -> untyped_object_to_js x5067)
          end
      end
    module AnonymousInterface50 =
      struct
        type 'T t = Ojs.t
        let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
          fun (type __T) ->
            fun (__T_of_js : Ojs.t -> __T) -> fun (x5069 : Ojs.t) -> x5069
        and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t =
          fun (type __T) ->
            fun (__T_to_js : __T -> Ojs.t) -> fun (x5068 : Ojs.t) -> x5068
        let (get : 'T t -> string -> 'T) =
          fun (x5070 : 'T t) ->
            fun (x5072 : string) ->
              Obj.magic
                (Ojs.get_prop (t_to_js Obj.magic x5070)
                   (Ojs.string_to_js x5072))
        let (set : 'T t -> string -> 'T -> unit) =
          fun (x5073 : 'T t) ->
            fun (x5075 : string) ->
              fun (x5076 : 'T) ->
                Ojs.set_prop (t_to_js Obj.magic x5073)
                  (Ojs.string_to_js x5075) (Obj.magic x5076)
        module Make(T:Ojs.T) =
          struct
            type 'T parent = 'T t
            let rec parent_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T parent =
              fun (type __T) ->
                fun (__T_of_js : Ojs.t -> __T) ->
                  fun (x5079 : Ojs.t) -> t_of_js __T_of_js x5079
            and parent_to_js : 'T . ('T -> Ojs.t) -> 'T parent -> Ojs.t =
              fun (type __T) ->
                fun (__T_to_js : __T -> Ojs.t) ->
                  fun (x5077 : __T t) -> t_to_js __T_to_js x5077
            type t = T.t parent
            let rec t_of_js : Ojs.t -> t =
              fun (x5083 : Ojs.t) -> parent_of_js T.t_of_js x5083
            and t_to_js : t -> Ojs.t =
              fun (x5081 : T.t parent) -> parent_to_js T.t_to_js x5081
            let (get : t -> string -> T.t) =
              fun (x5085 : t) ->
                fun (x5086 : string) ->
                  T.t_of_js
                    (Ojs.get_prop (t_to_js x5085) (Ojs.string_to_js x5086))
            let (set : t -> string -> T.t -> unit) =
              fun (x5087 : t) ->
                fun (x5088 : string) ->
                  fun (x5089 : T.t) ->
                    Ojs.set_prop (t_to_js x5087) (Ojs.string_to_js x5088)
                      (T.t_to_js x5089)
          end
      end
    module AnonymousInterface47 =
      struct
        type 'T t = Ojs.t
        let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
          fun (type __T) ->
            fun (__T_of_js : Ojs.t -> __T) -> fun (x5091 : Ojs.t) -> x5091
        and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t =
          fun (type __T) ->
            fun (__T_to_js : __T -> Ojs.t) -> fun (x5090 : Ojs.t) -> x5090
        let (get : 'T t -> string -> 'T) =
          fun (x5092 : 'T t) ->
            fun (x5094 : string) ->
              Obj.magic
                (Ojs.get_prop (t_to_js Obj.magic x5092)
                   (Ojs.string_to_js x5094))
        let (set : 'T t -> string -> 'T -> unit) =
          fun (x5095 : 'T t) ->
            fun (x5097 : string) ->
              fun (x5098 : 'T) ->
                Ojs.set_prop (t_to_js Obj.magic x5095)
                  (Ojs.string_to_js x5097) (Obj.magic x5098)
        module Make(T:Ojs.T) =
          struct
            type 'T parent = 'T t
            let rec parent_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T parent =
              fun (type __T) ->
                fun (__T_of_js : Ojs.t -> __T) ->
                  fun (x5101 : Ojs.t) -> t_of_js __T_of_js x5101
            and parent_to_js : 'T . ('T -> Ojs.t) -> 'T parent -> Ojs.t =
              fun (type __T) ->
                fun (__T_to_js : __T -> Ojs.t) ->
                  fun (x5099 : __T t) -> t_to_js __T_to_js x5099
            type t = T.t parent
            let rec t_of_js : Ojs.t -> t =
              fun (x5105 : Ojs.t) -> parent_of_js T.t_of_js x5105
            and t_to_js : t -> Ojs.t =
              fun (x5103 : T.t parent) -> parent_to_js T.t_to_js x5103
            let (get : t -> string -> T.t) =
              fun (x5107 : t) ->
                fun (x5108 : string) ->
                  T.t_of_js
                    (Ojs.get_prop (t_to_js x5107) (Ojs.string_to_js x5108))
            let (set : t -> string -> T.t -> unit) =
              fun (x5109 : t) ->
                fun (x5110 : string) ->
                  fun (x5111 : T.t) ->
                    Ojs.set_prop (t_to_js x5109) (Ojs.string_to_js x5110)
                      (T.t_to_js x5111)
          end
      end
    module AnonymousInterface26 =
      struct
        type t = Ojs.t
        let rec t_of_js : Ojs.t -> t = fun (x5113 : Ojs.t) -> x5113
        and t_to_js : t -> Ojs.t = fun (x5112 : Ojs.t) -> x5112
        let (get : t -> string -> PropertyDescriptor.t) =
          fun (x5114 : t) ->
            fun (x5115 : string) ->
              PropertyDescriptor.t_of_js
                (Ojs.get_prop (t_to_js x5114) (Ojs.string_to_js x5115))
        let (set : t -> string -> PropertyDescriptor.t -> unit) =
          fun (x5116 : t) ->
            fun (x5117 : string) ->
              fun (x5118 : PropertyDescriptor.t) ->
                Ojs.set_prop (t_to_js x5116) (Ojs.string_to_js x5117)
                  (PropertyDescriptor.t_to_js x5118)
      end
    type t = [ `Object ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type tags = [ `Object ]
    type 'tags this = 'tags intf constraint 'tags = [> `Object ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x5121 : Ojs.t) -> intf_of_js __tags_of_js x5121
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x5119 : __tags intf) -> intf_to_js __tags_to_js x5119
    let (get_constructor : 'tags this -> Function.t) =
      fun (x5123 : 'tags this) ->
        Function.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x5123) "constructor")
    let (set_constructor : 'tags this -> Function.t -> unit) =
      fun (x5125 : 'tags this) ->
        fun (x5126 : Function.t) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x5125) "constructor"
            (Function.t_to_js x5126)
    let (toString : 'tags this -> string) =
      fun (x5128 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x5128) "toString" [||])
    let (toLocaleString : 'tags this -> string) =
      fun (x5130 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x5130) "toLocaleString" [||])
    let (valueOf : 'tags this -> t) =
      fun (x5132 : 'tags this) ->
        t_of_js (Ojs.call (this_to_js Obj.magic x5132) "valueOf" [||])
    let (hasOwnProperty : 'tags this -> v:PropertyKey.t -> bool) =
      fun (x5135 : 'tags this) ->
        fun ~v:(x5134 : PropertyKey.t) ->
          Ojs.bool_of_js
            (Ojs.call (this_to_js Obj.magic x5135) "hasOwnProperty"
               [|(PropertyKey.t_to_js x5134)|])
    let (isPrototypeOf : 'tags this -> v:t -> bool) =
      fun (x5138 : 'tags this) ->
        fun ~v:(x5137 : t) ->
          Ojs.bool_of_js
            (Ojs.call (this_to_js Obj.magic x5138) "isPrototypeOf"
               [|(t_to_js x5137)|])
    let (propertyIsEnumerable : 'tags this -> v:PropertyKey.t -> bool) =
      fun (x5141 : 'tags this) ->
        fun ~v:(x5140 : PropertyKey.t) ->
          Ojs.bool_of_js
            (Ojs.call (this_to_js Obj.magic x5141) "propertyIsEnumerable"
               [|(PropertyKey.t_to_js x5140)|])
    let (hasOwn : o:untyped_object -> v:PropertyKey.t -> bool) =
      fun ~o:(x5143 : untyped_object) ->
        fun ~v:(x5144 : PropertyKey.t) ->
          Ojs.bool_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "hasOwn"
               [|(untyped_object_to_js x5143);(PropertyKey.t_to_js x5144)|])
    let (fromEntries :
      (PropertyKey.t * 'T) Iterable.t -> 'T AnonymousInterface47.t) =
      fun (x5145 : (PropertyKey.t * 'T) Iterable.t) ->
        AnonymousInterface47.t_of_js Obj.magic
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "fromEntries"
             [|(Iterable.t_to_js
                  (fun (x5146 : (PropertyKey.t * 'T)) ->
                     let (x5147, x5148) = x5146 in
                     let x5149 = Ojs.array_make 2 in
                     Ojs.array_set x5149 0 (PropertyKey.t_to_js x5147);
                     Ojs.array_set x5149 1 (Obj.magic x5148);
                     x5149) x5145)|])
    let (fromEntries' : any list Iterable.t -> any) =
      fun (x5151 : any list Iterable.t) ->
        any_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "fromEntries"
             [|(Iterable.t_to_js
                  (fun (x5152 : any list) -> Ojs.list_to_js any_to_js x5152)
                  x5151)|])
    let (values :
      [ `U1 of 'T AnonymousInterface50.t  | `U2 of 'T ArrayLike.t ] ->
        'T list)
      =
      fun
        (x5154 :
          [ `U1 of 'T AnonymousInterface50.t  | `U2 of 'T ArrayLike.t ])
        ->
        Ojs.list_of_js Obj.magic
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "values"
             [|((match x5154 with
                 | `U1 x5155 -> AnonymousInterface50.t_to_js Obj.magic x5155
                 | `U2 x5157 -> ArrayLike.t_to_js Obj.magic x5157))|])
    let (values' : untyped_object -> any list) =
      fun (x5160 : untyped_object) ->
        Ojs.list_of_js any_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "values"
             [|(untyped_object_to_js x5160)|])
    let (entries :
      [ `U1 of 'T AnonymousInterface50.t  | `U2 of 'T ArrayLike.t ] ->
        (string * 'T) list)
      =
      fun
        (x5162 :
          [ `U1 of 'T AnonymousInterface50.t  | `U2 of 'T ArrayLike.t ])
        ->
        Ojs.list_of_js
          (fun (x5167 : Ojs.t) ->
             let x5168 = x5167 in
             ((Ojs.string_of_js (Ojs.array_get x5168 0)),
               (Obj.magic (Ojs.array_get x5168 1))))
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "entries"
             [|((match x5162 with
                 | `U1 x5163 -> AnonymousInterface50.t_to_js Obj.magic x5163
                 | `U2 x5165 -> ArrayLike.t_to_js Obj.magic x5165))|])
    let (entries' : untyped_object -> (string * any) list) =
      fun (x5169 : untyped_object) ->
        Ojs.list_of_js
          (fun (x5170 : Ojs.t) ->
             let x5171 = x5170 in
             ((Ojs.string_of_js (Ojs.array_get x5171 0)),
               (any_of_js (Ojs.array_get x5171 1))))
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "entries"
             [|(untyped_object_to_js x5169)|])
    let (getOwnPropertyDescriptors :
      'T -> (any, AnonymousInterface26.t) intersection2) =
      fun (x5172 : 'T) ->
        intersection2_of_js any_of_js AnonymousInterface26.t_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object")
             "getOwnPropertyDescriptors" [|(Obj.magic x5172)|])
    let (assign : target:'T -> source:'U -> ('T, 'U) intersection2) =
      fun ~target:(x5175 : 'T) ->
        fun ~source:(x5176 : 'U) ->
          intersection2_of_js Obj.magic Obj.magic
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "assign"
               [|(Obj.magic x5175);(Obj.magic x5176)|])
    let (assign' :
      target:'T -> source1:'U -> source2:'V -> ('T, 'U, 'V) intersection3) =
      fun ~target:(x5179 : 'T) ->
        fun ~source1:(x5180 : 'U) ->
          fun ~source2:(x5181 : 'V) ->
            intersection3_of_js Obj.magic Obj.magic Obj.magic
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "assign"
                 [|(Obj.magic x5179);(Obj.magic x5180);(Obj.magic x5181)|])
    let (assign'' :
      target:'T ->
        source1:'U ->
          source2:'V -> source3:'W -> ('T, 'U, 'V, 'W) intersection4)
      =
      fun ~target:(x5185 : 'T) ->
        fun ~source1:(x5186 : 'U) ->
          fun ~source2:(x5187 : 'V) ->
            fun ~source3:(x5188 : 'W) ->
              intersection4_of_js Obj.magic Obj.magic Obj.magic Obj.magic
                (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "assign"
                   [|(Obj.magic x5185);(Obj.magic x5186);(Obj.magic x5187);(
                     Obj.magic x5188)|])
    let (assign''' : target:untyped_object -> sources:any list -> any) =
      fun ~target:(x5193 : untyped_object) ->
        fun ~sources:(x5194 : any list) ->
          any_of_js
            (let x5197 = Ojs.get_prop_ascii Ojs.global "Object" in
             Ojs.call (Ojs.get_prop_ascii x5197 "assign") "apply"
               [|x5197;((let x5195 =
                           Ojs.new_obj
                             (Ojs.get_prop_ascii Ojs.global "Array") 
                             [||] in
                         ignore
                           (Ojs.call x5195 "push"
                              [|(untyped_object_to_js x5193)|]);
                         List.iter
                           (fun (x5196 : any) ->
                              ignore
                                (Ojs.call x5195 "push" [|(any_to_js x5196)|]))
                           x5194;
                         x5195))|])
    let (getOwnPropertySymbols : any -> symbol list) =
      fun (x5198 : any) ->
        Ojs.list_of_js symbol_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object")
             "getOwnPropertySymbols" [|(any_to_js x5198)|])
    let (keys : untyped_object -> string list) =
      fun (x5200 : untyped_object) ->
        Ojs.list_of_js Ojs.string_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "keys"
             [|(untyped_object_to_js x5200)|])
    let (is : value1:any -> value2:any -> bool) =
      fun ~value1:(x5202 : any) ->
        fun ~value2:(x5203 : any) ->
          Ojs.bool_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "is"
               [|(any_to_js x5202);(any_to_js x5203)|])
    let (setPrototypeOf : o:any -> proto:untyped_object option -> any) =
      fun ~o:(x5204 : any) ->
        fun ~proto:(x5205 : untyped_object option) ->
          any_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object")
               "setPrototypeOf"
               [|(any_to_js x5204);(Ojs.option_to_js untyped_object_to_js
                                      x5205)|])
    let (create : ?value:any -> unit -> t) =
      fun ?value:(x5207 : any option) ->
        fun () ->
          t_of_js
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "Object")
               (let x5208 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x5207 with
                 | Some x5209 ->
                     ignore (Ojs.call x5208 "push" [|(any_to_js x5209)|])
                 | None -> ());
                x5208))
    let (invoke : unit -> any) =
      fun () ->
        any_of_js (Ojs.apply (Ojs.get_prop_ascii Ojs.global "Object") [||])
    let (invoke' : any -> any) =
      fun (x5210 : any) ->
        any_of_js
          (Ojs.apply (Ojs.get_prop_ascii Ojs.global "Object")
             [|(any_to_js x5210)|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Object")
             "prototype")
    let (getPrototypeOf : any -> any) =
      fun (x5211 : any) ->
        any_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "getPrototypeOf"
             [|(any_to_js x5211)|])
    let (getOwnPropertyDescriptor :
      o:any -> p:PropertyKey.t -> PropertyDescriptor.t option) =
      fun ~o:(x5212 : any) ->
        fun ~p:(x5213 : PropertyKey.t) ->
          Ojs.option_of_js PropertyDescriptor.t_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object")
               "getOwnPropertyDescriptor"
               [|(any_to_js x5212);(PropertyKey.t_to_js x5213)|])
    let (getOwnPropertyNames : any -> string list) =
      fun (x5215 : any) ->
        Ojs.list_of_js Ojs.string_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object")
             "getOwnPropertyNames" [|(any_to_js x5215)|])
    let (create_ : untyped_object option -> any) =
      fun (x5217 : untyped_object option) ->
        any_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "create"
             [|(Ojs.option_to_js untyped_object_to_js x5217)|])
    let (create_' :
      o:untyped_object option ->
        properties:(PropertyDescriptorMap.t, any ThisType.t) intersection2 ->
          any)
      =
      fun ~o:(x5219 : untyped_object option) ->
        fun
          ~properties:(x5221 :
                        (PropertyDescriptorMap.t, any ThisType.t)
                          intersection2)
          ->
          any_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "create"
               [|(Ojs.option_to_js untyped_object_to_js x5219);(intersection2_to_js
                                                                  PropertyDescriptorMap.t_to_js
                                                                  (fun
                                                                    (x5223 :
                                                                    any
                                                                    ThisType.t)
                                                                    ->
                                                                    ThisType.t_to_js
                                                                    any_to_js
                                                                    x5223)
                                                                  x5221)|])
    let (defineProperty :
      o:'T ->
        p:PropertyKey.t ->
          attributes:(PropertyDescriptor.t, any ThisType.t) intersection2 ->
            'T)
      =
      fun ~o:(x5225 : 'T) ->
        fun ~p:(x5226 : PropertyKey.t) ->
          fun
            ~attributes:(x5227 :
                          (PropertyDescriptor.t, any ThisType.t)
                            intersection2)
            ->
            Obj.magic
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object")
                 "defineProperty"
                 [|(Obj.magic x5225);(PropertyKey.t_to_js x5226);(intersection2_to_js
                                                                    PropertyDescriptor.t_to_js
                                                                    (
                                                                    fun
                                                                    (x5229 :
                                                                    any
                                                                    ThisType.t)
                                                                    ->
                                                                    ThisType.t_to_js
                                                                    any_to_js
                                                                    x5229)
                                                                    x5227)|])
    let (defineProperties :
      o:'T ->
        properties:(PropertyDescriptorMap.t, any ThisType.t) intersection2 ->
          'T)
      =
      fun ~o:(x5231 : 'T) ->
        fun
          ~properties:(x5232 :
                        (PropertyDescriptorMap.t, any ThisType.t)
                          intersection2)
          ->
          Obj.magic
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object")
               "defineProperties"
               [|(Obj.magic x5231);(intersection2_to_js
                                      PropertyDescriptorMap.t_to_js
                                      (fun (x5234 : any ThisType.t) ->
                                         ThisType.t_to_js any_to_js x5234)
                                      x5232)|])
    let (seal : 'T -> 'T) =
      fun (x5236 : 'T) ->
        Obj.magic
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "seal"
             [|(Obj.magic x5236)|])
    let (freeze : 'T -> 'T) =
      fun (x5237 : 'T) ->
        Obj.magic
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "freeze"
             [|(Obj.magic x5237)|])
    let (freeze' : 'T -> 'T Readonly.t) =
      fun (x5238 : 'T) ->
        Readonly.t_of_js Obj.magic
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "freeze"
             [|(Obj.magic x5238)|])
    let (freeze'' : 'T -> 'T Readonly.t) =
      fun (x5240 : 'T) ->
        Readonly.t_of_js Obj.magic
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "freeze"
             [|(Obj.magic x5240)|])
    let (preventExtensions : 'T -> 'T) =
      fun (x5242 : 'T) ->
        Obj.magic
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object")
             "preventExtensions" [|(Obj.magic x5242)|])
    let (isSealed : any -> bool) =
      fun (x5243 : any) ->
        Ojs.bool_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "isSealed"
             [|(any_to_js x5243)|])
    let (isFrozen : any -> bool) =
      fun (x5244 : any) ->
        Ojs.bool_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "isFrozen"
             [|(any_to_js x5244)|])
    let (isExtensible : any -> bool) =
      fun (x5245 : any) ->
        Ojs.bool_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "isExtensible"
             [|(any_to_js x5245)|])
    let (keys' : untyped_object -> string list) =
      fun (x5246 : untyped_object) ->
        Ojs.list_of_js Ojs.string_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "keys"
             [|(untyped_object_to_js x5246)|])
    let cast_from = Obj.magic
  end
module Number =
  struct
    type t = [ `Number ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type tags = [ `Number ]
    type 'tags this = 'tags intf constraint 'tags = [> `Number ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x5250 : Ojs.t) -> intf_of_js __tags_of_js x5250
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x5248 : __tags intf) -> intf_to_js __tags_to_js x5248
    let (toLocaleString :
      'tags this ->
        ?locales:Intl.LocalesArgument.t ->
          ?options:Intl.NumberFormatOptions.t -> unit -> string)
      =
      fun (x5257 : 'tags this) ->
        fun ?locales:(x5252 : Intl.LocalesArgument.t option) ->
          fun ?options:(x5253 : Intl.NumberFormatOptions.t option) ->
            fun () ->
              Ojs.string_of_js
                (let x5259 = this_to_js Obj.magic x5257 in
                 Ojs.call (Ojs.get_prop_ascii x5259 "toLocaleString") "apply"
                   [|x5259;((let x5254 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x5252 with
                              | Some x5256 ->
                                  ignore
                                    (Ojs.call x5254 "push"
                                       [|(Intl.LocalesArgument.t_to_js x5256)|])
                              | None -> ());
                             (match x5253 with
                              | Some x5255 ->
                                  ignore
                                    (Ojs.call x5254 "push"
                                       [|(Intl.NumberFormatOptions.t_to_js
                                            x5255)|])
                              | None -> ());
                             x5254))|])
    let (toLocaleString' :
      'tags this ->
        ?locales:[ `U1 of string  | `U2 of string list ] ->
          ?options:Intl.NumberFormatOptions.t -> unit -> string)
      =
      fun (x5268 : 'tags this) ->
        fun ?locales:(x5260 : [ `U1 of string  | `U2 of string list ] option)
          ->
          fun ?options:(x5261 : Intl.NumberFormatOptions.t option) ->
            fun () ->
              Ojs.string_of_js
                (let x5270 = this_to_js Obj.magic x5268 in
                 Ojs.call (Ojs.get_prop_ascii x5270 "toLocaleString") "apply"
                   [|x5270;((let x5262 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x5260 with
                              | Some x5264 ->
                                  ignore
                                    (Ojs.call x5262 "push"
                                       [|((match x5264 with
                                           | `U1 x5265 ->
                                               Ojs.string_to_js x5265
                                           | `U2 x5266 ->
                                               Ojs.list_to_js
                                                 Ojs.string_to_js x5266))|])
                              | None -> ());
                             (match x5261 with
                              | Some x5263 ->
                                  ignore
                                    (Ojs.call x5262 "push"
                                       [|(Intl.NumberFormatOptions.t_to_js
                                            x5263)|])
                              | None -> ());
                             x5262))|])
    let (toString : 'tags this -> ?radix:float -> unit -> string) =
      fun (x5274 : 'tags this) ->
        fun ?radix:(x5271 : float option) ->
          fun () ->
            Ojs.string_of_js
              (let x5276 = this_to_js Obj.magic x5274 in
               Ojs.call (Ojs.get_prop_ascii x5276 "toString") "apply"
                 [|x5276;((let x5272 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x5271 with
                            | Some x5273 ->
                                ignore
                                  (Ojs.call x5272 "push"
                                     [|(Ojs.float_to_js x5273)|])
                            | None -> ());
                           x5272))|])
    let (toFixed : 'tags this -> ?fractionDigits:float -> unit -> string) =
      fun (x5280 : 'tags this) ->
        fun ?fractionDigits:(x5277 : float option) ->
          fun () ->
            Ojs.string_of_js
              (let x5282 = this_to_js Obj.magic x5280 in
               Ojs.call (Ojs.get_prop_ascii x5282 "toFixed") "apply"
                 [|x5282;((let x5278 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x5277 with
                            | Some x5279 ->
                                ignore
                                  (Ojs.call x5278 "push"
                                     [|(Ojs.float_to_js x5279)|])
                            | None -> ());
                           x5278))|])
    let (toExponential :
      'tags this -> ?fractionDigits:float -> unit -> string) =
      fun (x5286 : 'tags this) ->
        fun ?fractionDigits:(x5283 : float option) ->
          fun () ->
            Ojs.string_of_js
              (let x5288 = this_to_js Obj.magic x5286 in
               Ojs.call (Ojs.get_prop_ascii x5288 "toExponential") "apply"
                 [|x5288;((let x5284 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x5283 with
                            | Some x5285 ->
                                ignore
                                  (Ojs.call x5284 "push"
                                     [|(Ojs.float_to_js x5285)|])
                            | None -> ());
                           x5284))|])
    let (toPrecision : 'tags this -> ?precision:float -> unit -> string) =
      fun (x5292 : 'tags this) ->
        fun ?precision:(x5289 : float option) ->
          fun () ->
            Ojs.string_of_js
              (let x5294 = this_to_js Obj.magic x5292 in
               Ojs.call (Ojs.get_prop_ascii x5294 "toPrecision") "apply"
                 [|x5294;((let x5290 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x5289 with
                            | Some x5291 ->
                                ignore
                                  (Ojs.call x5290 "push"
                                     [|(Ojs.float_to_js x5291)|])
                            | None -> ());
                           x5290))|])
    let (valueOf : 'tags this -> float) =
      fun (x5295 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x5295) "valueOf" [||])
    let (epsilon : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Number")
             "EPSILON")
    let (isFinite : unknown -> bool) =
      fun (x5297 : unknown) ->
        Ojs.bool_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Number") "isFinite"
             [|(unknown_to_js x5297)|])
    let (isInteger : unknown -> bool) =
      fun (x5298 : unknown) ->
        Ojs.bool_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Number") "isInteger"
             [|(unknown_to_js x5298)|])
    let (isNaN : unknown -> bool) =
      fun (x5299 : unknown) ->
        Ojs.bool_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Number") "isNaN"
             [|(unknown_to_js x5299)|])
    let (isSafeInteger : unknown -> bool) =
      fun (x5300 : unknown) ->
        Ojs.bool_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Number") "isSafeInteger"
             [|(unknown_to_js x5300)|])
    let (max_safe_integer : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Number")
             "MAX_SAFE_INTEGER")
    let (min_safe_integer : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Number")
             "MIN_SAFE_INTEGER")
    let (parseFloat : string -> float) =
      fun (x5301 : string) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Number") "parseFloat"
             [|(Ojs.string_to_js x5301)|])
    let (parseInt : string:string -> ?radix:float -> unit -> float) =
      fun ~string:(x5302 : string) ->
        fun ?radix:(x5303 : float option) ->
          fun () ->
            Ojs.float_of_js
              (let x5306 = Ojs.get_prop_ascii Ojs.global "Number" in
               Ojs.call (Ojs.get_prop_ascii x5306 "parseInt") "apply"
                 [|x5306;((let x5304 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           ignore
                             (Ojs.call x5304 "push"
                                [|(Ojs.string_to_js x5302)|]);
                           (match x5303 with
                            | Some x5305 ->
                                ignore
                                  (Ojs.call x5304 "push"
                                     [|(Ojs.float_to_js x5305)|])
                            | None -> ());
                           x5304))|])
    let (create : ?value:any -> unit -> t) =
      fun ?value:(x5307 : any option) ->
        fun () ->
          t_of_js
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "Number")
               (let x5308 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x5307 with
                 | Some x5309 ->
                     ignore (Ojs.call x5308 "push" [|(any_to_js x5309)|])
                 | None -> ());
                x5308))
    let (invoke : ?value:any -> unit -> float) =
      fun ?value:(x5310 : any option) ->
        fun () ->
          Ojs.float_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "Number") "apply"
               [|Ojs.null;((let x5311 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x5310 with
                             | Some x5312 ->
                                 ignore
                                   (Ojs.call x5311 "push"
                                      [|(any_to_js x5312)|])
                             | None -> ());
                            x5311))|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Number")
             "prototype")
    let (max_value : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Number")
             "MAX_VALUE")
    let (min_value : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Number")
             "MIN_VALUE")
    let (nan : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Number") "NaN")
    let (negative_infinity : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Number")
             "NEGATIVE_INFINITY")
    let (positive_infinity : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Number")
             "POSITIVE_INFINITY")
    let cast_from = Obj.magic
    let (of_ml : float -> t) =
      fun (x5313 : float) -> t_of_js (Ojs.float_to_js x5313)
    let (to_ml : t -> float) =
      fun (x5314 : t) ->
        Ojs.float_of_js (Ojs.call (t_to_js x5314) "valueOf" [||])
  end
module NonNullable =
  struct
    type 'T t = ('T, untyped_object) intersection2
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun (type __T) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x5318 : Ojs.t) ->
            intersection2_of_js __T_of_js untyped_object_of_js x5318
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t =
      fun (type __T) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x5315 : (__T, untyped_object) intersection2) ->
            intersection2_to_js __T_to_js untyped_object_to_js x5315
  end
module NewableFunction =
  struct
    module AnonymousInterface45 =
      struct
        type 'T t = Ojs.t
        let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
          fun (type __T) ->
            fun (__T_of_js : Ojs.t -> __T) -> fun (x5322 : Ojs.t) -> x5322
        and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t =
          fun (type __T) ->
            fun (__T_to_js : __T -> Ojs.t) -> fun (x5321 : Ojs.t) -> x5321
        let (create : 'T t -> 'T) =
          fun (x5323 : 'T t) ->
            Obj.magic (Ojs.new_obj (t_to_js Obj.magic x5323) [||])
        module Make(T:Ojs.T) =
          struct
            type 'T parent = 'T t
            let rec parent_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T parent =
              fun (type __T) ->
                fun (__T_of_js : Ojs.t -> __T) ->
                  fun (x5327 : Ojs.t) -> t_of_js __T_of_js x5327
            and parent_to_js : 'T . ('T -> Ojs.t) -> 'T parent -> Ojs.t =
              fun (type __T) ->
                fun (__T_to_js : __T -> Ojs.t) ->
                  fun (x5325 : __T t) -> t_to_js __T_to_js x5325
            type t = T.t parent
            let rec t_of_js : Ojs.t -> t =
              fun (x5331 : Ojs.t) -> parent_of_js T.t_of_js x5331
            and t_to_js : t -> Ojs.t =
              fun (x5329 : T.t parent) -> parent_to_js T.t_to_js x5329
            let (create : t -> T.t) =
              fun (x5333 : t) -> T.t_of_js (Ojs.new_obj (t_to_js x5333) [||])
          end
      end
    module AnonymousInterface41 =
      struct
        type 'R t = Ojs.t
        let rec t_of_js : 'R . (Ojs.t -> 'R) -> Ojs.t -> 'R t =
          fun (type __R) ->
            fun (__R_of_js : Ojs.t -> __R) -> fun (x5335 : Ojs.t) -> x5335
        and t_to_js : 'R . ('R -> Ojs.t) -> 'R t -> Ojs.t =
          fun (type __R) ->
            fun (__R_to_js : __R -> Ojs.t) -> fun (x5334 : Ojs.t) -> x5334
        let (create : 'R t -> args:any list -> 'R) =
          fun (x5339 : 'R t) ->
            fun ~args:(x5336 : any list) ->
              Obj.magic
                (Ojs.new_obj_arr (t_to_js Obj.magic x5339)
                   (let x5337 =
                      Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                        [||] in
                    List.iter
                      (fun (x5338 : any) ->
                         ignore (Ojs.call x5337 "push" [|(any_to_js x5338)|]))
                      x5336;
                    x5337))
        module Make(R:Ojs.T) =
          struct
            type 'R parent = 'R t
            let rec parent_of_js : 'R . (Ojs.t -> 'R) -> Ojs.t -> 'R parent =
              fun (type __R) ->
                fun (__R_of_js : Ojs.t -> __R) ->
                  fun (x5343 : Ojs.t) -> t_of_js __R_of_js x5343
            and parent_to_js : 'R . ('R -> Ojs.t) -> 'R parent -> Ojs.t =
              fun (type __R) ->
                fun (__R_to_js : __R -> Ojs.t) ->
                  fun (x5341 : __R t) -> t_to_js __R_to_js x5341
            type t = R.t parent
            let rec t_of_js : Ojs.t -> t =
              fun (x5347 : Ojs.t) -> parent_of_js R.t_of_js x5347
            and t_to_js : t -> Ojs.t =
              fun (x5345 : R.t parent) -> parent_to_js R.t_to_js x5345
            let (create : t -> args:any list -> R.t) =
              fun (x5352 : t) ->
                fun ~args:(x5349 : any list) ->
                  R.t_of_js
                    (Ojs.new_obj_arr (t_to_js x5352)
                       (let x5350 =
                          Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                            [||] in
                        List.iter
                          (fun (x5351 : any) ->
                             ignore
                               (Ojs.call x5350 "push" [|(any_to_js x5351)|]))
                          x5349;
                        x5350))
          end
      end
    module AnonymousInterface39 =
      struct
        type ('B, 'R) t = Ojs.t
        let rec t_of_js :
          'B 'R . (Ojs.t -> 'B) -> (Ojs.t -> 'R) -> Ojs.t -> ('B, 'R) t =
          fun (type __B) ->
            fun (type __R) ->
              fun (__B_of_js : Ojs.t -> __B) ->
                fun (__R_of_js : Ojs.t -> __R) ->
                  fun (x5354 : Ojs.t) -> x5354
        and t_to_js :
          'B 'R . ('B -> Ojs.t) -> ('R -> Ojs.t) -> ('B, 'R) t -> Ojs.t =
          fun (type __B) ->
            fun (type __R) ->
              fun (__B_to_js : __B -> Ojs.t) ->
                fun (__R_to_js : __R -> Ojs.t) ->
                  fun (x5353 : Ojs.t) -> x5353
        let (create : ('B, 'R) t -> args:any list -> 'R) =
          fun (x5358 : ('B, 'R) t) ->
            fun ~args:(x5355 : any list) ->
              Obj.magic
                (Ojs.new_obj_arr (t_to_js Obj.magic Obj.magic x5358)
                   (let x5356 =
                      Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                        [||] in
                    List.iter
                      (fun (x5357 : any) ->
                         ignore (Ojs.call x5356 "push" [|(any_to_js x5357)|]))
                      x5355;
                    x5356))
        module Make(B:Ojs.T)(R:Ojs.T) =
          struct
            type ('B, 'R) parent = ('B, 'R) t
            let rec parent_of_js :
              'B 'R .
                (Ojs.t -> 'B) -> (Ojs.t -> 'R) -> Ojs.t -> ('B, 'R) parent
              =
              fun (type __B) ->
                fun (type __R) ->
                  fun (__B_of_js : Ojs.t -> __B) ->
                    fun (__R_of_js : Ojs.t -> __R) ->
                      fun (x5364 : Ojs.t) ->
                        t_of_js __B_of_js __R_of_js x5364
            and parent_to_js :
              'B 'R .
                ('B -> Ojs.t) -> ('R -> Ojs.t) -> ('B, 'R) parent -> Ojs.t
              =
              fun (type __B) ->
                fun (type __R) ->
                  fun (__B_to_js : __B -> Ojs.t) ->
                    fun (__R_to_js : __R -> Ojs.t) ->
                      fun (x5361 : (__B, __R) t) ->
                        t_to_js __B_to_js __R_to_js x5361
            type t = (B.t, R.t) parent
            let rec t_of_js : Ojs.t -> t =
              fun (x5370 : Ojs.t) -> parent_of_js B.t_of_js R.t_of_js x5370
            and t_to_js : t -> Ojs.t =
              fun (x5367 : (B.t, R.t) parent) ->
                parent_to_js B.t_to_js R.t_to_js x5367
            let (create : t -> args:any list -> R.t) =
              fun (x5376 : t) ->
                fun ~args:(x5373 : any list) ->
                  R.t_of_js
                    (Ojs.new_obj_arr (t_to_js x5376)
                       (let x5374 =
                          Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                            [||] in
                        List.iter
                          (fun (x5375 : any) ->
                             ignore
                               (Ojs.call x5374 "push" [|(any_to_js x5375)|]))
                          x5373;
                        x5374))
          end
      end
    module AnonymousInterface37 =
      struct
        type ('A, 'T) t = Ojs.t
        let rec t_of_js :
          'A 'T . (Ojs.t -> 'A) -> (Ojs.t -> 'T) -> Ojs.t -> ('A, 'T) t =
          fun (type __A) ->
            fun (type __T) ->
              fun (__A_of_js : Ojs.t -> __A) ->
                fun (__T_of_js : Ojs.t -> __T) ->
                  fun (x5378 : Ojs.t) -> x5378
        and t_to_js :
          'A 'T . ('A -> Ojs.t) -> ('T -> Ojs.t) -> ('A, 'T) t -> Ojs.t =
          fun (type __A) ->
            fun (type __T) ->
              fun (__A_to_js : __A -> Ojs.t) ->
                fun (__T_to_js : __T -> Ojs.t) ->
                  fun (x5377 : Ojs.t) -> x5377
        let (create : ('A, 'T) t -> args:any list -> 'T) =
          fun (x5382 : ('A, 'T) t) ->
            fun ~args:(x5379 : any list) ->
              Obj.magic
                (Ojs.new_obj_arr (t_to_js Obj.magic Obj.magic x5382)
                   (let x5380 =
                      Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                        [||] in
                    List.iter
                      (fun (x5381 : any) ->
                         ignore (Ojs.call x5380 "push" [|(any_to_js x5381)|]))
                      x5379;
                    x5380))
        module Make(A:Ojs.T)(T:Ojs.T) =
          struct
            type ('A, 'T) parent = ('A, 'T) t
            let rec parent_of_js :
              'A 'T .
                (Ojs.t -> 'A) -> (Ojs.t -> 'T) -> Ojs.t -> ('A, 'T) parent
              =
              fun (type __A) ->
                fun (type __T) ->
                  fun (__A_of_js : Ojs.t -> __A) ->
                    fun (__T_of_js : Ojs.t -> __T) ->
                      fun (x5388 : Ojs.t) ->
                        t_of_js __A_of_js __T_of_js x5388
            and parent_to_js :
              'A 'T .
                ('A -> Ojs.t) -> ('T -> Ojs.t) -> ('A, 'T) parent -> Ojs.t
              =
              fun (type __A) ->
                fun (type __T) ->
                  fun (__A_to_js : __A -> Ojs.t) ->
                    fun (__T_to_js : __T -> Ojs.t) ->
                      fun (x5385 : (__A, __T) t) ->
                        t_to_js __A_to_js __T_to_js x5385
            type t = (A.t, T.t) parent
            let rec t_of_js : Ojs.t -> t =
              fun (x5394 : Ojs.t) -> parent_of_js A.t_of_js T.t_of_js x5394
            and t_to_js : t -> Ojs.t =
              fun (x5391 : (A.t, T.t) parent) ->
                parent_to_js A.t_to_js T.t_to_js x5391
            let (create : t -> args:any list -> T.t) =
              fun (x5400 : t) ->
                fun ~args:(x5397 : any list) ->
                  T.t_of_js
                    (Ojs.new_obj_arr (t_to_js x5400)
                       (let x5398 =
                          Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                            [||] in
                        List.iter
                          (fun (x5399 : any) ->
                             ignore
                               (Ojs.call x5398 "push" [|(any_to_js x5399)|]))
                          x5397;
                        x5398))
          end
      end
    type t = [ `Function  | `Function  | `NewableFunction ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type tags = [ `Function  | `Function  | `NewableFunction ]
    type 'tags this = 'tags intf constraint 'tags = [> `NewableFunction ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x5403 : Ojs.t) -> intf_of_js __tags_of_js x5403
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x5401 : __tags intf) -> intf_to_js __tags_to_js x5401
    let (apply_ :
      'tags this -> this:'T AnonymousInterface45.t -> thisArg:'T -> unit) =
      fun (x5408 : 'tags this) ->
        fun ~this:(x5405 : 'T AnonymousInterface45.t) ->
          fun ~thisArg:(x5407 : 'T) ->
            ignore
              (Ojs.call (this_to_js Obj.magic x5408) "apply"
                 [|(AnonymousInterface45.t_to_js Obj.magic x5405);(Obj.magic
                                                                    x5407)|])
    let (apply_' :
      'tags this ->
        this:('A, 'T) AnonymousInterface37.t -> thisArg:'T -> args:'A -> unit)
      =
      fun (x5415 : 'tags this) ->
        fun ~this:(x5410 : ('A, 'T) AnonymousInterface37.t) ->
          fun ~thisArg:(x5413 : 'T) ->
            fun ~args:(x5414 : 'A) ->
              ignore
                (Ojs.call (this_to_js Obj.magic x5415) "apply"
                   [|(AnonymousInterface37.t_to_js Obj.magic Obj.magic x5410);(
                     Obj.magic x5413);(Obj.magic x5414)|])
    let (call :
      'tags this ->
        this:('A, 'T) AnonymousInterface37.t ->
          thisArg:'T -> args:any list -> unit)
      =
      fun (x5424 : 'tags this) ->
        fun ~this:(x5417 : ('A, 'T) AnonymousInterface37.t) ->
          fun ~thisArg:(x5418 : 'T) ->
            fun ~args:(x5419 : any list) ->
              ignore
                (let x5426 = this_to_js Obj.magic x5424 in
                 Ojs.call (Ojs.get_prop_ascii x5426 "call") "apply"
                   [|x5426;((let x5420 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x5420 "push"
                                  [|(AnonymousInterface37.t_to_js Obj.magic
                                       Obj.magic x5417)|]);
                             ignore
                               (Ojs.call x5420 "push" [|(Obj.magic x5418)|]);
                             List.iter
                               (fun (x5421 : any) ->
                                  ignore
                                    (Ojs.call x5420 "push"
                                       [|(any_to_js x5421)|])) x5419;
                             x5420))|])
    let (bind : 'tags this -> this:'T -> thisArg:any -> 'T) =
      fun (x5429 : 'tags this) ->
        fun ~this:(x5427 : 'T) ->
          fun ~thisArg:(x5428 : any) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic x5429) "bind"
                 [|(Obj.magic x5427);(any_to_js x5428)|])
    let (bind' :
      'tags this ->
        this:'R AnonymousInterface41.t ->
          thisArg:any -> args:any list -> ('B, 'R) AnonymousInterface39.t)
      =
      fun (x5437 : 'tags this) ->
        fun ~this:(x5431 : 'R AnonymousInterface41.t) ->
          fun ~thisArg:(x5432 : any) ->
            fun ~args:(x5433 : any list) ->
              AnonymousInterface39.t_of_js Obj.magic Obj.magic
                (let x5439 = this_to_js Obj.magic x5437 in
                 Ojs.call (Ojs.get_prop_ascii x5439 "bind") "apply"
                   [|x5439;((let x5434 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x5434 "push"
                                  [|(AnonymousInterface41.t_to_js Obj.magic
                                       x5431)|]);
                             ignore
                               (Ojs.call x5434 "push" [|(any_to_js x5432)|]);
                             List.iter
                               (fun (x5435 : any) ->
                                  ignore
                                    (Ojs.call x5434 "push"
                                       [|(any_to_js x5435)|])) x5433;
                             x5434))|])
    let cast_from = Obj.magic
  end
module Math =
  struct
    let (clz32 : float -> float) =
      fun (x5442 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "clz32"
             [|(Ojs.float_to_js x5442)|])
    let (imul : x:float -> y:float -> float) =
      fun ~x:(x5443 : float) ->
        fun ~y:(x5444 : float) ->
          Ojs.float_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "imul"
               [|(Ojs.float_to_js x5443);(Ojs.float_to_js x5444)|])
    let (sign : float -> float) =
      fun (x5445 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "sign"
             [|(Ojs.float_to_js x5445)|])
    let (log10 : float -> float) =
      fun (x5446 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "log10"
             [|(Ojs.float_to_js x5446)|])
    let (log2 : float -> float) =
      fun (x5447 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "log2"
             [|(Ojs.float_to_js x5447)|])
    let (log1p : float -> float) =
      fun (x5448 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "log1p"
             [|(Ojs.float_to_js x5448)|])
    let (expm1 : float -> float) =
      fun (x5449 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "expm1"
             [|(Ojs.float_to_js x5449)|])
    let (cosh : float -> float) =
      fun (x5450 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "cosh"
             [|(Ojs.float_to_js x5450)|])
    let (sinh : float -> float) =
      fun (x5451 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "sinh"
             [|(Ojs.float_to_js x5451)|])
    let (tanh : float -> float) =
      fun (x5452 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "tanh"
             [|(Ojs.float_to_js x5452)|])
    let (acosh : float -> float) =
      fun (x5453 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "acosh"
             [|(Ojs.float_to_js x5453)|])
    let (asinh : float -> float) =
      fun (x5454 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "asinh"
             [|(Ojs.float_to_js x5454)|])
    let (atanh : float -> float) =
      fun (x5455 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "atanh"
             [|(Ojs.float_to_js x5455)|])
    let (hypot : float list -> float) =
      fun (x5456 : float list) ->
        Ojs.float_of_js
          (let x5459 = Ojs.get_prop_ascii Ojs.global "Math" in
           Ojs.call (Ojs.get_prop_ascii x5459 "hypot") "apply"
             [|x5459;((let x5457 =
                         Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                           [||] in
                       List.iter
                         (fun (x5458 : float) ->
                            ignore
                              (Ojs.call x5457 "push"
                                 [|(Ojs.float_to_js x5458)|])) x5456;
                       x5457))|])
    let (trunc : float -> float) =
      fun (x5460 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "trunc"
             [|(Ojs.float_to_js x5460)|])
    let (fround : float -> float) =
      fun (x5461 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "fround"
             [|(Ojs.float_to_js x5461)|])
    let (cbrt : float -> float) =
      fun (x5462 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "cbrt"
             [|(Ojs.float_to_js x5462)|])
    let (e : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Math") "E")
    let (ln10 : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Math") "LN10")
    let (ln2 : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Math") "LN2")
    let (log2e : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Math") "LOG2E")
    let (log10e : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Math") "LOG10E")
    let (pi : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Math") "PI")
    let (sqrt1_2 : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Math")
             "SQRT1_2")
    let (sqrt2 : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Math") "SQRT2")
    let (abs : float -> float) =
      fun (x5463 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "abs"
             [|(Ojs.float_to_js x5463)|])
    let (acos : float -> float) =
      fun (x5464 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "acos"
             [|(Ojs.float_to_js x5464)|])
    let (asin : float -> float) =
      fun (x5465 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "asin"
             [|(Ojs.float_to_js x5465)|])
    let (atan : float -> float) =
      fun (x5466 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "atan"
             [|(Ojs.float_to_js x5466)|])
    let (atan2 : y:float -> x:float -> float) =
      fun ~y:(x5467 : float) ->
        fun ~x:(x5468 : float) ->
          Ojs.float_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "atan2"
               [|(Ojs.float_to_js x5467);(Ojs.float_to_js x5468)|])
    let (ceil : float -> float) =
      fun (x5469 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "ceil"
             [|(Ojs.float_to_js x5469)|])
    let (cos : float -> float) =
      fun (x5470 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "cos"
             [|(Ojs.float_to_js x5470)|])
    let (exp : float -> float) =
      fun (x5471 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "exp"
             [|(Ojs.float_to_js x5471)|])
    let (floor : float -> float) =
      fun (x5472 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "floor"
             [|(Ojs.float_to_js x5472)|])
    let (log : float -> float) =
      fun (x5473 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "log"
             [|(Ojs.float_to_js x5473)|])
    let (max : float list -> float) =
      fun (x5474 : float list) ->
        Ojs.float_of_js
          (let x5477 = Ojs.get_prop_ascii Ojs.global "Math" in
           Ojs.call (Ojs.get_prop_ascii x5477 "max") "apply"
             [|x5477;((let x5475 =
                         Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                           [||] in
                       List.iter
                         (fun (x5476 : float) ->
                            ignore
                              (Ojs.call x5475 "push"
                                 [|(Ojs.float_to_js x5476)|])) x5474;
                       x5475))|])
    let (min : float list -> float) =
      fun (x5478 : float list) ->
        Ojs.float_of_js
          (let x5481 = Ojs.get_prop_ascii Ojs.global "Math" in
           Ojs.call (Ojs.get_prop_ascii x5481 "min") "apply"
             [|x5481;((let x5479 =
                         Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                           [||] in
                       List.iter
                         (fun (x5480 : float) ->
                            ignore
                              (Ojs.call x5479 "push"
                                 [|(Ojs.float_to_js x5480)|])) x5478;
                       x5479))|])
    let (pow : x:float -> y:float -> float) =
      fun ~x:(x5482 : float) ->
        fun ~y:(x5483 : float) ->
          Ojs.float_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "pow"
               [|(Ojs.float_to_js x5482);(Ojs.float_to_js x5483)|])
    let (random : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "random" [||])
    let (round : float -> float) =
      fun (x5484 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "round"
             [|(Ojs.float_to_js x5484)|])
    let (sin : float -> float) =
      fun (x5485 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "sin"
             [|(Ojs.float_to_js x5485)|])
    let (sqrt : float -> float) =
      fun (x5486 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "sqrt"
             [|(Ojs.float_to_js x5486)|])
    let (tan : float -> float) =
      fun (x5487 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "tan"
             [|(Ojs.float_to_js x5487)|])
  end
module Map =
  struct
    type ('K, 'V) t = [ `Map of ('K * 'V) ] intf
    let rec t_of_js :
      'K 'V . (Ojs.t -> 'K) -> (Ojs.t -> 'V) -> Ojs.t -> ('K, 'V) t =
      fun _K -> fun _V -> Obj.magic
    and t_to_js :
      'K 'V . ('K -> Ojs.t) -> ('V -> Ojs.t) -> ('K, 'V) t -> Ojs.t =
      fun _K -> fun _V -> Obj.magic
    type ('K, 'V) tags = [ `Map of ('K * 'V) ]
    type ('tags, 'K, 'V) this =
      'tags intf constraint 'tags = [> `Map of ('K * 'V) ]
    let rec this_of_js :
      'tags 'K 'V .
        (Ojs.t -> 'tags) ->
          (Ojs.t -> 'K) -> (Ojs.t -> 'V) -> Ojs.t -> ('tags, 'K, 'V) this
      =
      fun (type __tags) ->
        fun (type __K) ->
          fun (type __V) ->
            fun (__tags_of_js : Ojs.t -> __tags) ->
              fun (__K_of_js : Ojs.t -> __K) ->
                fun (__V_of_js : Ojs.t -> __V) ->
                  fun (x5490 : Ojs.t) -> intf_of_js __tags_of_js x5490
    and this_to_js :
      'tags 'K 'V .
        ('tags -> Ojs.t) ->
          ('K -> Ojs.t) -> ('V -> Ojs.t) -> ('tags, 'K, 'V) this -> Ojs.t
      =
      fun (type __tags) ->
        fun (type __K) ->
          fun (type __V) ->
            fun (__tags_to_js : __tags -> Ojs.t) ->
              fun (__K_to_js : __K -> Ojs.t) ->
                fun (__V_to_js : __V -> Ojs.t) ->
                  fun (x5488 : __tags intf) -> intf_to_js __tags_to_js x5488
    let (entries : ('tags, 'K, 'V) this -> ('K * 'V) IterableIterator.t) =
      fun (x5492 : ('tags, 'K, 'V) this) ->
        IterableIterator.t_of_js
          (fun (x5496 : Ojs.t) ->
             let x5497 = x5496 in
             ((Obj.magic (Ojs.array_get x5497 0)),
               (Obj.magic (Ojs.array_get x5497 1))))
          (Ojs.call (this_to_js Obj.magic Obj.magic Obj.magic x5492)
             "entries" [||])
    let (keys : ('tags, 'K, 'V) this -> 'K IterableIterator.t) =
      fun (x5498 : ('tags, 'K, 'V) this) ->
        IterableIterator.t_of_js Obj.magic
          (Ojs.call (this_to_js Obj.magic Obj.magic Obj.magic x5498) "keys"
             [||])
    let (values : ('tags, 'K, 'V) this -> 'V IterableIterator.t) =
      fun (x5503 : ('tags, 'K, 'V) this) ->
        IterableIterator.t_of_js Obj.magic
          (Ojs.call (this_to_js Obj.magic Obj.magic Obj.magic x5503) "values"
             [||])
    let (clear : ('tags, 'K, 'V) this -> unit) =
      fun (x5508 : ('tags, 'K, 'V) this) ->
        ignore
          (Ojs.call (this_to_js Obj.magic Obj.magic Obj.magic x5508) "clear"
             [||])
    let (delete : ('tags, 'K, 'V) this -> key:'K -> bool) =
      fun (x5513 : ('tags, 'K, 'V) this) ->
        fun ~key:(x5512 : 'K) ->
          Ojs.bool_of_js
            (Ojs.call (this_to_js Obj.magic Obj.magic Obj.magic x5513)
               "delete" [|(Obj.magic x5512)|])
    let (forEach :
      ('tags, 'K, 'V) this ->
        callbackfn:(value:'V -> key:'K -> map:('K, 'V) t -> unit) ->
          ?thisArg:any -> unit -> unit)
      =
      fun (x5526 : ('tags, 'K, 'V) this) ->
        fun
          ~callbackfn:(x5517 : value:'V -> key:'K -> map:('K, 'V) t -> unit)
          ->
          fun ?thisArg:(x5518 : any option) ->
            fun () ->
              ignore
                (let x5530 = this_to_js Obj.magic Obj.magic Obj.magic x5526 in
                 Ojs.call (Ojs.get_prop_ascii x5530 "forEach") "apply"
                   [|x5530;((let x5519 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x5519 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x5521 : Ojs.t) ->
                                          fun (x5522 : Ojs.t) ->
                                            fun (x5523 : Ojs.t) ->
                                              x5517 ~value:(Obj.magic x5521)
                                                ~key:(Obj.magic x5522)
                                                ~map:(t_of_js Obj.magic
                                                        Obj.magic x5523)))|]);
                             (match x5518 with
                              | Some x5520 ->
                                  ignore
                                    (Ojs.call x5519 "push"
                                       [|(any_to_js x5520)|])
                              | None -> ());
                             x5519))|])
    let (get_ : ('tags, 'K, 'V) this -> key:'K -> 'V option) =
      fun (x5532 : ('tags, 'K, 'V) this) ->
        fun ~key:(x5531 : 'K) ->
          Ojs.option_of_js Obj.magic
            (Ojs.call (this_to_js Obj.magic Obj.magic Obj.magic x5532) "get"
               [|(Obj.magic x5531)|])
    let (has : ('tags, 'K, 'V) this -> key:'K -> bool) =
      fun (x5538 : ('tags, 'K, 'V) this) ->
        fun ~key:(x5537 : 'K) ->
          Ojs.bool_of_js
            (Ojs.call (this_to_js Obj.magic Obj.magic Obj.magic x5538) "has"
               [|(Obj.magic x5537)|])
    let (set_ :
      ('tags, 'K, 'V) this -> key:'K -> value:'V -> ('tags, 'K, 'V) this) =
      fun (x5544 : ('tags, 'K, 'V) this) ->
        fun ~key:(x5542 : 'K) ->
          fun ~value:(x5543 : 'V) ->
            this_of_js Obj.magic Obj.magic Obj.magic
              (Ojs.call (this_to_js Obj.magic Obj.magic Obj.magic x5544)
                 "set" [|(Obj.magic x5542);(Obj.magic x5543)|])
    let (get_size : ('tags, 'K, 'V) this -> float) =
      fun (x5551 : ('tags, 'K, 'V) this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii
             (this_to_js Obj.magic Obj.magic Obj.magic x5551) "size")
    let (create : unit -> (any, any) t) =
      fun () ->
        t_of_js any_of_js any_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Map") [||])
    let (create' :
      ?iterable:('K * 'V) Iterable.t option -> unit -> ('K, 'V) t) =
      fun ?iterable:(x5557 : ('K * 'V) Iterable.t option option) ->
        fun () ->
          t_of_js Obj.magic Obj.magic
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "Map")
               (let x5558 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x5557 with
                 | Some x5559 ->
                     ignore
                       (Ojs.call x5558 "push"
                          [|(Ojs.option_to_js
                               (fun (x5560 : ('K * 'V) Iterable.t) ->
                                  Iterable.t_to_js
                                    (fun (x5561 : ('K * 'V)) ->
                                       let (x5562, x5563) = x5561 in
                                       let x5564 = Ojs.array_make 2 in
                                       Ojs.array_set x5564 0
                                         (Obj.magic x5562);
                                       Ojs.array_set x5564 1
                                         (Obj.magic x5563);
                                       x5564) x5560) x5559)|])
                 | None -> ());
                x5558))
    let (create'' : unit -> (any, any) t) =
      fun () ->
        t_of_js any_of_js any_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Map") [||])
    let (create''' : ?entries:('K * 'V) list option -> unit -> ('K, 'V) t) =
      fun ?entries:(x5569 : ('K * 'V) list option option) ->
        fun () ->
          t_of_js Obj.magic Obj.magic
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "Map")
               (let x5570 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x5569 with
                 | Some x5571 ->
                     ignore
                       (Ojs.call x5570 "push"
                          [|(Ojs.option_to_js
                               (fun (x5572 : ('K * 'V) list) ->
                                  Ojs.list_to_js
                                    (fun (x5573 : ('K * 'V)) ->
                                       let (x5574, x5575) = x5573 in
                                       let x5576 = Ojs.array_make 2 in
                                       Ojs.array_set x5576 0
                                         (Obj.magic x5574);
                                       Ojs.array_set x5576 1
                                         (Obj.magic x5575);
                                       x5576) x5572) x5571)|])
                 | None -> ());
                x5570))
    let (prototype : unit -> (any, any) t) =
      fun () ->
        t_of_js any_of_js any_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Map")
             "prototype")
    let cast_from = Obj.magic
  end
module Lowercase =
  struct
    type 'S t = Ojs.t
    let rec t_of_js : 'S . (Ojs.t -> 'S) -> Ojs.t -> 'S t =
      fun (type __S) ->
        fun (__S_of_js : Ojs.t -> __S) -> fun (x5582 : Ojs.t) -> x5582
    and t_to_js : 'S . ('S -> Ojs.t) -> 'S t -> Ojs.t =
      fun (type __S) ->
        fun (__S_to_js : __S -> Ojs.t) -> fun (x5581 : Ojs.t) -> x5581
  end
module JSON =
  struct
    let (parse :
      text:string ->
        ?reviver:(this:any -> key:string -> value:any -> any) -> unit -> any)
      =
      fun ~text:(x5583 : string) ->
        fun
          ?reviver:(x5584 :
                     (this:any -> key:string -> value:any -> any) option)
          ->
          fun () ->
            any_of_js
              (let x5590 = Ojs.get_prop_ascii Ojs.global "JSON" in
               Ojs.call (Ojs.get_prop_ascii x5590 "parse") "apply"
                 [|x5590;((let x5585 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           ignore
                             (Ojs.call x5585 "push"
                                [|(Ojs.string_to_js x5583)|]);
                           (match x5584 with
                            | Some x5586 ->
                                ignore
                                  (Ojs.call x5585 "push"
                                     [|(Ojs.fun_to_js 3
                                          (fun (x5587 : Ojs.t) ->
                                             fun (x5588 : Ojs.t) ->
                                               fun (x5589 : Ojs.t) ->
                                                 any_to_js
                                                   (x5586
                                                      ~this:(any_of_js x5587)
                                                      ~key:(Ojs.string_of_js
                                                              x5588)
                                                      ~value:(any_of_js x5589))))|])
                            | None -> ());
                           x5585))|])
    let (stringify :
      value:any ->
        ?replacer:(this:any -> key:string -> value:any -> any) ->
          ?space:[ `U1 of string  | `U2 of float ] -> unit -> string)
      =
      fun ~value:(x5591 : any) ->
        fun
          ?replacer:(x5592 :
                      (this:any -> key:string -> value:any -> any) option)
          ->
          fun ?space:(x5593 : [ `U1 of string  | `U2 of float ] option) ->
            fun () ->
              Ojs.string_of_js
                (let x5602 = Ojs.get_prop_ascii Ojs.global "JSON" in
                 Ojs.call (Ojs.get_prop_ascii x5602 "stringify") "apply"
                   [|x5602;((let x5594 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x5594 "push" [|(any_to_js x5591)|]);
                             (match x5592 with
                              | Some x5598 ->
                                  ignore
                                    (Ojs.call x5594 "push"
                                       [|(Ojs.fun_to_js 3
                                            (fun (x5599 : Ojs.t) ->
                                               fun (x5600 : Ojs.t) ->
                                                 fun (x5601 : Ojs.t) ->
                                                   any_to_js
                                                     (x5598
                                                        ~this:(any_of_js
                                                                 x5599)
                                                        ~key:(Ojs.string_of_js
                                                                x5600)
                                                        ~value:(any_of_js
                                                                  x5601))))|])
                              | None -> ());
                             (match x5593 with
                              | Some x5595 ->
                                  ignore
                                    (Ojs.call x5594 "push"
                                       [|((match x5595 with
                                           | `U1 x5596 ->
                                               Ojs.string_to_js x5596
                                           | `U2 x5597 ->
                                               Ojs.float_to_js x5597))|])
                              | None -> ());
                             x5594))|])
    let (stringify' :
      value:any ->
        ?replacer:[ `U1 of float  | `U2 of string ] list option ->
          ?space:[ `U1 of string  | `U2 of float ] -> unit -> string)
      =
      fun ~value:(x5603 : any) ->
        fun
          ?replacer:(x5604 :
                      [ `U1 of float  | `U2 of string ] list option option)
          ->
          fun ?space:(x5605 : [ `U1 of string  | `U2 of float ] option) ->
            fun () ->
              Ojs.string_of_js
                (let x5615 = Ojs.get_prop_ascii Ojs.global "JSON" in
                 Ojs.call (Ojs.get_prop_ascii x5615 "stringify") "apply"
                   [|x5615;((let x5606 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x5606 "push" [|(any_to_js x5603)|]);
                             (match x5604 with
                              | Some x5610 ->
                                  ignore
                                    (Ojs.call x5606 "push"
                                       [|(Ojs.option_to_js
                                            (fun
                                               (x5611 :
                                                 [ `U1 of float 
                                                 | `U2 of string ] list)
                                               ->
                                               Ojs.list_to_js
                                                 (fun
                                                    (x5612 :
                                                      [ `U1 of float 
                                                      | `U2 of string ])
                                                    ->
                                                    match x5612 with
                                                    | `U1 x5613 ->
                                                        Ojs.float_to_js x5613
                                                    | `U2 x5614 ->
                                                        Ojs.string_to_js
                                                          x5614) x5611) x5610)|])
                              | None -> ());
                             (match x5605 with
                              | Some x5607 ->
                                  ignore
                                    (Ojs.call x5606 "push"
                                       [|((match x5607 with
                                           | `U1 x5608 ->
                                               Ojs.string_to_js x5608
                                           | `U2 x5609 ->
                                               Ojs.float_to_js x5609))|])
                              | None -> ());
                             x5606))|])
  end
module TypedPropertyDescriptor =
  struct
    type 'T t = [ `TypedPropertyDescriptor of 'T ] intf
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun _T -> Obj.magic
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun _T -> Obj.magic
    type 'T tags = [ `TypedPropertyDescriptor of 'T ]
    type ('tags, 'T) this =
      'tags intf constraint 'tags = [> `TypedPropertyDescriptor of 'T ]
    let rec this_of_js :
      'tags 'T .
        (Ojs.t -> 'tags) -> (Ojs.t -> 'T) -> Ojs.t -> ('tags, 'T) this
      =
      fun (type __tags) ->
        fun (type __T) ->
          fun (__tags_of_js : Ojs.t -> __tags) ->
            fun (__T_of_js : Ojs.t -> __T) ->
              fun (x5618 : Ojs.t) -> intf_of_js __tags_of_js x5618
    and this_to_js :
      'tags 'T .
        ('tags -> Ojs.t) -> ('T -> Ojs.t) -> ('tags, 'T) this -> Ojs.t
      =
      fun (type __tags) ->
        fun (type __T) ->
          fun (__tags_to_js : __tags -> Ojs.t) ->
            fun (__T_to_js : __T -> Ojs.t) ->
              fun (x5616 : __tags intf) -> intf_to_js __tags_to_js x5616
    let (get_enumerable : ('tags, 'T) this -> bool option) =
      fun (x5620 : ('tags, 'T) this) ->
        Ojs.option_of_js Ojs.bool_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic Obj.magic x5620)
             "enumerable")
    let (set_enumerable : ('tags, 'T) this -> bool -> unit) =
      fun (x5624 : ('tags, 'T) this) ->
        fun (x5625 : bool) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic Obj.magic x5624)
            "enumerable" (Ojs.bool_to_js x5625)
    let (get_configurable : ('tags, 'T) this -> bool option) =
      fun (x5628 : ('tags, 'T) this) ->
        Ojs.option_of_js Ojs.bool_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic Obj.magic x5628)
             "configurable")
    let (set_configurable : ('tags, 'T) this -> bool -> unit) =
      fun (x5632 : ('tags, 'T) this) ->
        fun (x5633 : bool) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic Obj.magic x5632)
            "configurable" (Ojs.bool_to_js x5633)
    let (get_writable : ('tags, 'T) this -> bool option) =
      fun (x5636 : ('tags, 'T) this) ->
        Ojs.option_of_js Ojs.bool_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic Obj.magic x5636)
             "writable")
    let (set_writable : ('tags, 'T) this -> bool -> unit) =
      fun (x5640 : ('tags, 'T) this) ->
        fun (x5641 : bool) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic Obj.magic x5640)
            "writable" (Ojs.bool_to_js x5641)
    let (get_value : ('tags, 'T) this -> 'T option) =
      fun (x5644 : ('tags, 'T) this) ->
        Ojs.option_of_js Obj.magic
          (Ojs.get_prop_ascii (this_to_js Obj.magic Obj.magic x5644) "value")
    let (set_value : ('tags, 'T) this -> 'T -> unit) =
      fun (x5648 : ('tags, 'T) this) ->
        fun (x5649 : 'T) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic Obj.magic x5648) "value"
            (Obj.magic x5649)
    let (get_get : ('tags, 'T) this -> (unit -> 'T) option) =
      fun (x5652 : ('tags, 'T) this) ->
        Ojs.option_of_js
          (fun (x5655 : Ojs.t) -> fun () -> Obj.magic (Ojs.apply x5655 [||]))
          (Ojs.get_prop_ascii (this_to_js Obj.magic Obj.magic x5652) "get")
    let (set_get : ('tags, 'T) this -> (unit -> 'T) -> unit) =
      fun (x5656 : ('tags, 'T) this) ->
        fun (x5657 : unit -> 'T) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic Obj.magic x5656) "get"
            (Ojs.fun_to_js 1 (fun _ -> Obj.magic (x5657 ())))
    let (get_set : ('tags, 'T) this -> ('T -> unit) option) =
      fun (x5660 : ('tags, 'T) this) ->
        Ojs.option_of_js
          (fun (x5663 : Ojs.t) ->
             fun (x5664 : 'T) ->
               ignore (Ojs.apply x5663 [|(Obj.magic x5664)|]))
          (Ojs.get_prop_ascii (this_to_js Obj.magic Obj.magic x5660) "set")
    let (set_set : ('tags, 'T) this -> ('T -> unit) -> unit) =
      fun (x5665 : ('tags, 'T) this) ->
        fun (x5666 : 'T -> unit) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic Obj.magic x5665) "set"
            (Ojs.fun_to_js 1 (fun (x5667 : Ojs.t) -> x5666 (Obj.magic x5667)))
    let (create :
      ?enumerable:bool ->
        ?configurable:bool ->
          ?writable:bool ->
            ?value:'T ->
              ?get_:(unit -> 'T) -> ?set_:('T -> unit) -> unit -> 'T t)
      =
      fun ?enumerable:(x5670 : bool option) ->
        fun ?configurable:(x5671 : bool option) ->
          fun ?writable:(x5672 : bool option) ->
            fun ?value:(x5673 : 'T option) ->
              fun ?get_:(x5674 : (unit -> 'T) option) ->
                fun ?set_:(x5675 : ('T -> unit) option) ->
                  fun () ->
                    let x5676 = Ojs.empty_obj () in
                    (match x5670 with
                     | Some x5684 ->
                         Ojs.set_prop_ascii x5676 "enumerable"
                           (Ojs.bool_to_js x5684)
                     | None -> ());
                    (match x5671 with
                     | Some x5683 ->
                         Ojs.set_prop_ascii x5676 "configurable"
                           (Ojs.bool_to_js x5683)
                     | None -> ());
                    (match x5672 with
                     | Some x5682 ->
                         Ojs.set_prop_ascii x5676 "writable"
                           (Ojs.bool_to_js x5682)
                     | None -> ());
                    (match x5673 with
                     | Some x5681 ->
                         Ojs.set_prop_ascii x5676 "value" (Obj.magic x5681)
                     | None -> ());
                    (match x5674 with
                     | Some x5680 ->
                         Ojs.set_prop_ascii x5676 "get"
                           (Ojs.fun_to_js 1 (fun _ -> Obj.magic (x5680 ())))
                     | None -> ());
                    (match x5675 with
                     | Some x5678 ->
                         Ojs.set_prop_ascii x5676 "set"
                           (Ojs.fun_to_js 1
                              (fun (x5679 : Ojs.t) -> x5678 (Obj.magic x5679)))
                     | None -> ());
                    t_of_js Obj.magic x5676
    let cast_from = Obj.magic
  end
module Reflect =
  struct
    module AnonymousInterface34 =
      struct
        type ('A, 'R) t = Ojs.t
        let rec t_of_js :
          'A 'R . (Ojs.t -> 'A) -> (Ojs.t -> 'R) -> Ojs.t -> ('A, 'R) t =
          fun (type __A) ->
            fun (type __R) ->
              fun (__A_of_js : Ojs.t -> __A) ->
                fun (__R_of_js : Ojs.t -> __R) ->
                  fun (x5686 : Ojs.t) -> x5686
        and t_to_js :
          'A 'R . ('A -> Ojs.t) -> ('R -> Ojs.t) -> ('A, 'R) t -> Ojs.t =
          fun (type __A) ->
            fun (type __R) ->
              fun (__A_to_js : __A -> Ojs.t) ->
                fun (__R_to_js : __R -> Ojs.t) ->
                  fun (x5685 : Ojs.t) -> x5685
        let (create : ('A, 'R) t -> args:any list -> 'R) =
          fun (x5690 : ('A, 'R) t) ->
            fun ~args:(x5687 : any list) ->
              Obj.magic
                (Ojs.new_obj_arr (t_to_js Obj.magic Obj.magic x5690)
                   (let x5688 =
                      Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                        [||] in
                    List.iter
                      (fun (x5689 : any) ->
                         ignore (Ojs.call x5688 "push" [|(any_to_js x5689)|]))
                      x5687;
                    x5688))
        module Make(A:Ojs.T)(R:Ojs.T) =
          struct
            type ('A, 'R) parent = ('A, 'R) t
            let rec parent_of_js :
              'A 'R .
                (Ojs.t -> 'A) -> (Ojs.t -> 'R) -> Ojs.t -> ('A, 'R) parent
              =
              fun (type __A) ->
                fun (type __R) ->
                  fun (__A_of_js : Ojs.t -> __A) ->
                    fun (__R_of_js : Ojs.t -> __R) ->
                      fun (x5696 : Ojs.t) ->
                        t_of_js __A_of_js __R_of_js x5696
            and parent_to_js :
              'A 'R .
                ('A -> Ojs.t) -> ('R -> Ojs.t) -> ('A, 'R) parent -> Ojs.t
              =
              fun (type __A) ->
                fun (type __R) ->
                  fun (__A_to_js : __A -> Ojs.t) ->
                    fun (__R_to_js : __R -> Ojs.t) ->
                      fun (x5693 : (__A, __R) t) ->
                        t_to_js __A_to_js __R_to_js x5693
            type t = (A.t, R.t) parent
            let rec t_of_js : Ojs.t -> t =
              fun (x5702 : Ojs.t) -> parent_of_js A.t_of_js R.t_of_js x5702
            and t_to_js : t -> Ojs.t =
              fun (x5699 : (A.t, R.t) parent) ->
                parent_to_js A.t_to_js R.t_to_js x5699
            let (create : t -> args:any list -> R.t) =
              fun (x5708 : t) ->
                fun ~args:(x5705 : any list) ->
                  R.t_of_js
                    (Ojs.new_obj_arr (t_to_js x5708)
                       (let x5706 =
                          Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                            [||] in
                        List.iter
                          (fun (x5707 : any) ->
                             ignore
                               (Ojs.call x5706 "push" [|(any_to_js x5707)|]))
                          x5705;
                        x5706))
          end
      end
    module AnonymousInterface16 =
      struct
        type t = Ojs.t
        let rec t_of_js : Ojs.t -> t = fun (x5710 : Ojs.t) -> x5710
        and t_to_js : t -> Ojs.t = fun (x5709 : Ojs.t) -> x5709
        let (create : t -> args:any list -> any) =
          fun (x5714 : t) ->
            fun ~args:(x5711 : any list) ->
              any_of_js
                (Ojs.new_obj_arr (t_to_js x5714)
                   (let x5712 =
                      Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                        [||] in
                    List.iter
                      (fun (x5713 : any) ->
                         ignore (Ojs.call x5712 "push" [|(any_to_js x5713)|]))
                      x5711;
                    x5712))
      end
    let (apply_ :
      target:(this:'T -> args:any list -> 'R) ->
        thisArgument:'T -> argumentsList:'A Readonly.t -> 'R)
      =
      fun ~target:(x5715 : this:'T -> args:any list -> 'R) ->
        fun ~thisArgument:(x5718 : 'T) ->
          fun ~argumentsList:(x5719 : 'A Readonly.t) ->
            Obj.magic
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "Reflect") "apply"
                 [|(Ojs.fun_to_js_args
                      (fun (x5716 : _) ->
                         Obj.magic
                           (x5715 ~this:(Obj.magic (Ojs.array_get x5716 0))
                              ~args:(Ojs.list_of_js_from any_of_js x5716 1))));(
                   Obj.magic x5718);(Readonly.t_to_js Obj.magic x5719)|])
    let (apply_' :
      target:Function.t ->
        thisArgument:any -> argumentsList:any ArrayLike.t -> any)
      =
      fun ~target:(x5721 : Function.t) ->
        fun ~thisArgument:(x5722 : any) ->
          fun ~argumentsList:(x5723 : any ArrayLike.t) ->
            any_of_js
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "Reflect") "apply"
                 [|(Function.t_to_js x5721);(any_to_js x5722);(ArrayLike.t_to_js
                                                                 any_to_js
                                                                 x5723)|])
    let (construct :
      target:('A, 'R) AnonymousInterface34.t ->
        argumentsList:'A Readonly.t ->
          ?newTarget:AnonymousInterface16.t -> unit -> 'R)
      =
      fun ~target:(x5725 : ('A, 'R) AnonymousInterface34.t) ->
        fun ~argumentsList:(x5726 : 'A Readonly.t) ->
          fun ?newTarget:(x5727 : AnonymousInterface16.t option) ->
            fun () ->
              Obj.magic
                (let x5733 = Ojs.get_prop_ascii Ojs.global "Reflect" in
                 Ojs.call (Ojs.get_prop_ascii x5733 "construct") "apply"
                   [|x5733;((let x5728 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x5728 "push"
                                  [|(AnonymousInterface34.t_to_js Obj.magic
                                       Obj.magic x5725)|]);
                             ignore
                               (Ojs.call x5728 "push"
                                  [|(Readonly.t_to_js Obj.magic x5726)|]);
                             (match x5727 with
                              | Some x5729 ->
                                  ignore
                                    (Ojs.call x5728 "push"
                                       [|(AnonymousInterface16.t_to_js x5729)|])
                              | None -> ());
                             x5728))|])
    let (construct' :
      target:Function.t ->
        argumentsList:any ArrayLike.t -> ?newTarget:Function.t -> unit -> any)
      =
      fun ~target:(x5734 : Function.t) ->
        fun ~argumentsList:(x5735 : any ArrayLike.t) ->
          fun ?newTarget:(x5736 : Function.t option) ->
            fun () ->
              any_of_js
                (let x5740 = Ojs.get_prop_ascii Ojs.global "Reflect" in
                 Ojs.call (Ojs.get_prop_ascii x5740 "construct") "apply"
                   [|x5740;((let x5737 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x5737 "push"
                                  [|(Function.t_to_js x5734)|]);
                             ignore
                               (Ojs.call x5737 "push"
                                  [|(ArrayLike.t_to_js any_to_js x5735)|]);
                             (match x5736 with
                              | Some x5738 ->
                                  ignore
                                    (Ojs.call x5737 "push"
                                       [|(Function.t_to_js x5738)|])
                              | None -> ());
                             x5737))|])
    let (defineProperty :
      target:untyped_object ->
        propertyKey:PropertyKey.t ->
          attributes:(PropertyDescriptor.t, any ThisType.t) intersection2 ->
            bool)
      =
      fun ~target:(x5741 : untyped_object) ->
        fun ~propertyKey:(x5742 : PropertyKey.t) ->
          fun
            ~attributes:(x5743 :
                          (PropertyDescriptor.t, any ThisType.t)
                            intersection2)
            ->
            Ojs.bool_of_js
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "Reflect")
                 "defineProperty"
                 [|(untyped_object_to_js x5741);(PropertyKey.t_to_js x5742);(
                   intersection2_to_js PropertyDescriptor.t_to_js
                     (fun (x5745 : any ThisType.t) ->
                        ThisType.t_to_js any_to_js x5745) x5743)|])
    let (deleteProperty :
      target:untyped_object -> propertyKey:PropertyKey.t -> bool) =
      fun ~target:(x5747 : untyped_object) ->
        fun ~propertyKey:(x5748 : PropertyKey.t) ->
          Ojs.bool_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "Reflect")
               "deleteProperty"
               [|(untyped_object_to_js x5747);(PropertyKey.t_to_js x5748)|])
    let (get_ :
      target:'T -> propertyKey:'P -> ?receiver:unknown -> unit -> any) =
      fun ~target:(x5749 : 'T) ->
        fun ~propertyKey:(x5750 : 'P) ->
          fun ?receiver:(x5751 : unknown option) ->
            fun () ->
              any_of_js
                (let x5754 = Ojs.get_prop_ascii Ojs.global "Reflect" in
                 Ojs.call (Ojs.get_prop_ascii x5754 "get") "apply"
                   [|x5754;((let x5752 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x5752 "push" [|(Obj.magic x5749)|]);
                             ignore
                               (Ojs.call x5752 "push" [|(Obj.magic x5750)|]);
                             (match x5751 with
                              | Some x5753 ->
                                  ignore
                                    (Ojs.call x5752 "push"
                                       [|(unknown_to_js x5753)|])
                              | None -> ());
                             x5752))|])
    let (getOwnPropertyDescriptor :
      target:'T -> propertyKey:'P -> any TypedPropertyDescriptor.t option) =
      fun ~target:(x5755 : 'T) ->
        fun ~propertyKey:(x5756 : 'P) ->
          Ojs.option_of_js
            (fun (x5757 : Ojs.t) ->
               TypedPropertyDescriptor.t_of_js any_of_js x5757)
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "Reflect")
               "getOwnPropertyDescriptor"
               [|(Obj.magic x5755);(Obj.magic x5756)|])
    let (getPrototypeOf : untyped_object -> untyped_object option) =
      fun (x5759 : untyped_object) ->
        Ojs.option_of_js untyped_object_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Reflect")
             "getPrototypeOf" [|(untyped_object_to_js x5759)|])
    let (has : target:untyped_object -> propertyKey:PropertyKey.t -> bool) =
      fun ~target:(x5761 : untyped_object) ->
        fun ~propertyKey:(x5762 : PropertyKey.t) ->
          Ojs.bool_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "Reflect") "has"
               [|(untyped_object_to_js x5761);(PropertyKey.t_to_js x5762)|])
    let (isExtensible : untyped_object -> bool) =
      fun (x5763 : untyped_object) ->
        Ojs.bool_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Reflect") "isExtensible"
             [|(untyped_object_to_js x5763)|])
    let (ownKeys :
      untyped_object ->
        [ `String of string  | `Symbol of symbol ] Primitive.t list)
      =
      fun (x5764 : untyped_object) ->
        Ojs.list_of_js
          (fun (x5765 : Ojs.t) ->
             Primitive.t_of_js
               (fun (x5766 : Ojs.t) ->
                  let x5767 = x5766 in
                  match Ojs.string_of_js (Ojs.get_prop_ascii x5767 "dummy")
                  with
                  | "String" -> `String (Ojs.string_of_js x5767)
                  | "Symbol" -> `Symbol (symbol_of_js x5767)
                  | _ -> assert false) x5765)
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Reflect") "ownKeys"
             [|(untyped_object_to_js x5764)|])
    let (preventExtensions : untyped_object -> bool) =
      fun (x5768 : untyped_object) ->
        Ojs.bool_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Reflect")
             "preventExtensions" [|(untyped_object_to_js x5768)|])
    let (set_ :
      target:'T ->
        propertyKey:'P -> value:any -> ?receiver:any -> unit -> bool)
      =
      fun ~target:(x5769 : 'T) ->
        fun ~propertyKey:(x5770 : 'P) ->
          fun ~value:(x5771 : any) ->
            fun ?receiver:(x5772 : any option) ->
              fun () ->
                Ojs.bool_of_js
                  (let x5775 = Ojs.get_prop_ascii Ojs.global "Reflect" in
                   Ojs.call (Ojs.get_prop_ascii x5775 "set") "apply"
                     [|x5775;((let x5773 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x5773 "push" [|(Obj.magic x5769)|]);
                               ignore
                                 (Ojs.call x5773 "push" [|(Obj.magic x5770)|]);
                               ignore
                                 (Ojs.call x5773 "push" [|(any_to_js x5771)|]);
                               (match x5772 with
                                | Some x5774 ->
                                    ignore
                                      (Ojs.call x5773 "push"
                                         [|(any_to_js x5774)|])
                                | None -> ());
                               x5773))|])
    let (set_' :
      target:untyped_object ->
        propertyKey:PropertyKey.t ->
          value:any -> ?receiver:any -> unit -> bool)
      =
      fun ~target:(x5776 : untyped_object) ->
        fun ~propertyKey:(x5777 : PropertyKey.t) ->
          fun ~value:(x5778 : any) ->
            fun ?receiver:(x5779 : any option) ->
              fun () ->
                Ojs.bool_of_js
                  (let x5782 = Ojs.get_prop_ascii Ojs.global "Reflect" in
                   Ojs.call (Ojs.get_prop_ascii x5782 "set") "apply"
                     [|x5782;((let x5780 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x5780 "push"
                                    [|(untyped_object_to_js x5776)|]);
                               ignore
                                 (Ojs.call x5780 "push"
                                    [|(PropertyKey.t_to_js x5777)|]);
                               ignore
                                 (Ojs.call x5780 "push" [|(any_to_js x5778)|]);
                               (match x5779 with
                                | Some x5781 ->
                                    ignore
                                      (Ojs.call x5780 "push"
                                         [|(any_to_js x5781)|])
                                | None -> ());
                               x5780))|])
    let (setPrototypeOf :
      target:untyped_object -> proto:untyped_object option -> bool) =
      fun ~target:(x5783 : untyped_object) ->
        fun ~proto:(x5784 : untyped_object option) ->
          Ojs.bool_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "Reflect")
               "setPrototypeOf"
               [|(untyped_object_to_js x5783);(Ojs.option_to_js
                                                 untyped_object_to_js x5784)|])
  end
module InstanceType =
  struct
    module AnonymousInterface16 =
      struct
        type t = Ojs.t
        let rec t_of_js : Ojs.t -> t = fun (x5787 : Ojs.t) -> x5787
        and t_to_js : t -> Ojs.t = fun (x5786 : Ojs.t) -> x5786
        let (create : t -> args:any list -> any) =
          fun (x5791 : t) ->
            fun ~args:(x5788 : any list) ->
              any_of_js
                (Ojs.new_obj_arr (t_to_js x5791)
                   (let x5789 =
                      Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                        [||] in
                    List.iter
                      (fun (x5790 : any) ->
                         ignore (Ojs.call x5789 "push" [|(any_to_js x5790)|]))
                      x5788;
                    x5789))
      end
    type 'T t = any
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun (type __T) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x5793 : Ojs.t) -> any_of_js x5793
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t =
      fun (type __T) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x5792 : any) -> any_to_js x5792
  end
module ImportMeta =
  struct
    type t = [ `ImportMeta ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type tags = [ `ImportMeta ]
    type 'tags this = 'tags intf constraint 'tags = [> `ImportMeta ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x5796 : Ojs.t) -> intf_of_js __tags_of_js x5796
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x5794 : __tags intf) -> intf_to_js __tags_to_js x5794
    let cast_from = Obj.magic
  end
module ImportAssertions =
  struct
    type t = [ `ImportAssertions ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type tags = [ `ImportAssertions ]
    type 'tags this = 'tags intf constraint 'tags = [> `ImportAssertions ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x5800 : Ojs.t) -> intf_of_js __tags_of_js x5800
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x5798 : __tags intf) -> intf_to_js __tags_to_js x5798
    let (get : 'tags this -> string -> string) =
      fun (x5802 : 'tags this) ->
        fun (x5804 : string) ->
          Ojs.string_of_js
            (Ojs.get_prop (this_to_js Obj.magic x5802)
               (Ojs.string_to_js x5804))
    let (set : 'tags this -> string -> string -> unit) =
      fun (x5805 : 'tags this) ->
        fun (x5807 : string) ->
          fun (x5808 : string) ->
            Ojs.set_prop (this_to_js Obj.magic x5805)
              (Ojs.string_to_js x5807) (Ojs.string_to_js x5808)
    let cast_from = Obj.magic
  end
module ImportCallOptions =
  struct
    type t = [ `ImportCallOptions ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type tags = [ `ImportCallOptions ]
    type 'tags this = 'tags intf constraint 'tags = [> `ImportCallOptions ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x5811 : Ojs.t) -> intf_of_js __tags_of_js x5811
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x5809 : __tags intf) -> intf_to_js __tags_to_js x5809
    let (get_assert : 'tags this -> ImportAssertions.t option) =
      fun (x5813 : 'tags this) ->
        Ojs.option_of_js ImportAssertions.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x5813) "assert")
    let (set_assert : 'tags this -> ImportAssertions.t -> unit) =
      fun (x5816 : 'tags this) ->
        fun (x5817 : ImportAssertions.t) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x5816) "assert"
            (ImportAssertions.t_to_js x5817)
    let (create : ?assert_:ImportAssertions.t -> unit -> t) =
      fun ?assert_:(x5819 : ImportAssertions.t option) ->
        fun () ->
          let x5820 = Ojs.empty_obj () in
          (match x5819 with
           | Some x5821 ->
               Ojs.set_prop_ascii x5820 "assert"
                 (ImportAssertions.t_to_js x5821)
           | None -> ());
          t_of_js x5820
    let cast_from = Obj.magic
  end
module IArguments =
  struct
    type t = [ `IArguments ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type tags = [ `IArguments ]
    type 'tags this = 'tags intf constraint 'tags = [> `IArguments ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x5824 : Ojs.t) -> intf_of_js __tags_of_js x5824
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x5822 : __tags intf) -> intf_to_js __tags_to_js x5822
    let (get : 'tags this -> float -> any) =
      fun (x5826 : 'tags this) ->
        fun (x5828 : float) ->
          any_of_js
            (Ojs.get_prop (this_to_js Obj.magic x5826)
               (Ojs.float_to_js x5828))
    let (set : 'tags this -> float -> any -> unit) =
      fun (x5829 : 'tags this) ->
        fun (x5831 : float) ->
          fun (x5832 : any) ->
            Ojs.set_prop (this_to_js Obj.magic x5829) (Ojs.float_to_js x5831)
              (any_to_js x5832)
    let (get_length : 'tags this -> float) =
      fun (x5833 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x5833) "length")
    let (set_length : 'tags this -> float -> unit) =
      fun (x5835 : 'tags this) ->
        fun (x5836 : float) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x5835) "length"
            (Ojs.float_to_js x5836)
    let (get_callee : 'tags this -> Function.t) =
      fun (x5838 : 'tags this) ->
        Function.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x5838) "callee")
    let (set_callee : 'tags this -> Function.t -> unit) =
      fun (x5840 : 'tags this) ->
        fun (x5841 : Function.t) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x5840) "callee"
            (Function.t_to_js x5841)
    let cast_from = Obj.magic
  end
module Generator =
  struct
    type ('T, 'TReturn, 'TNext) t =
      [ `Generator of ('T * 'TReturn * 'TNext) 
      | `Iterator of ('T * 'TReturn * 'TNext) ] intf
    let rec t_of_js :
      'T 'TReturn 'TNext .
        (Ojs.t -> 'T) ->
          (Ojs.t -> 'TReturn) ->
            (Ojs.t -> 'TNext) -> Ojs.t -> ('T, 'TReturn, 'TNext) t
      = fun _T -> fun _TReturn -> fun _TNext -> Obj.magic
    and t_to_js :
      'T 'TReturn 'TNext .
        ('T -> Ojs.t) ->
          ('TReturn -> Ojs.t) ->
            ('TNext -> Ojs.t) -> ('T, 'TReturn, 'TNext) t -> Ojs.t
      = fun _T -> fun _TReturn -> fun _TNext -> Obj.magic
    type ('T, 'TReturn) t_2 = ('T, 'TReturn, unknown) t
    let rec t_2_of_js :
      'T 'TReturn .
        (Ojs.t -> 'T) -> (Ojs.t -> 'TReturn) -> Ojs.t -> ('T, 'TReturn) t_2
      =
      fun (type __T) ->
        fun (type __TReturn) ->
          fun (__T_of_js : Ojs.t -> __T) ->
            fun (__TReturn_of_js : Ojs.t -> __TReturn) ->
              fun (x5847 : Ojs.t) ->
                t_of_js __T_of_js __TReturn_of_js unknown_of_js x5847
    and t_2_to_js :
      'T 'TReturn .
        ('T -> Ojs.t) -> ('TReturn -> Ojs.t) -> ('T, 'TReturn) t_2 -> Ojs.t
      =
      fun (type __T) ->
        fun (type __TReturn) ->
          fun (__T_to_js : __T -> Ojs.t) ->
            fun (__TReturn_to_js : __TReturn -> Ojs.t) ->
              fun (x5843 : (__T, __TReturn, unknown) t) ->
                t_to_js __T_to_js __TReturn_to_js unknown_to_js x5843
    type 'T t_1 = ('T, any, unknown) t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 =
      fun (type __T) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x5855 : Ojs.t) ->
            t_of_js __T_of_js any_of_js unknown_of_js x5855
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t =
      fun (type __T) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x5851 : (__T, any, unknown) t) ->
            t_to_js __T_to_js any_to_js unknown_to_js x5851
    type t_0 = (unknown, any, unknown) t
    let rec t_0_of_js : Ojs.t -> t_0 =
      fun (x5863 : Ojs.t) ->
        t_of_js unknown_of_js any_of_js unknown_of_js x5863
    and t_0_to_js : t_0 -> Ojs.t =
      fun (x5859 : (unknown, any, unknown) t) ->
        t_to_js unknown_to_js any_to_js unknown_to_js x5859
    type ('T, 'TReturn, 'TNext) tags =
      [ `Generator of ('T * 'TReturn * 'TNext) 
      | `Iterator of ('T * 'TReturn * 'TNext) ]
    type ('T, 'TReturn) tags_2 = ('T, 'TReturn, unknown) tags
    type 'T tags_1 = ('T, any, unknown) tags
    type tags_0 = (unknown, any, unknown) tags
    type ('tags, 'T, 'TReturn, 'TNext) this =
      'tags intf constraint 'tags =
                  [> `Generator of ('T * 'TReturn * 'TNext) ]
    let rec this_of_js :
      'tags 'T 'TReturn 'TNext .
        (Ojs.t -> 'tags) ->
          (Ojs.t -> 'T) ->
            (Ojs.t -> 'TReturn) ->
              (Ojs.t -> 'TNext) ->
                Ojs.t -> ('tags, 'T, 'TReturn, 'TNext) this
      =
      fun (type __tags) ->
        fun (type __T) ->
          fun (type __TReturn) ->
            fun (type __TNext) ->
              fun (__tags_of_js : Ojs.t -> __tags) ->
                fun (__T_of_js : Ojs.t -> __T) ->
                  fun (__TReturn_of_js : Ojs.t -> __TReturn) ->
                    fun (__TNext_of_js : Ojs.t -> __TNext) ->
                      fun (x5869 : Ojs.t) -> intf_of_js __tags_of_js x5869
    and this_to_js :
      'tags 'T 'TReturn 'TNext .
        ('tags -> Ojs.t) ->
          ('T -> Ojs.t) ->
            ('TReturn -> Ojs.t) ->
              ('TNext -> Ojs.t) ->
                ('tags, 'T, 'TReturn, 'TNext) this -> Ojs.t
      =
      fun (type __tags) ->
        fun (type __T) ->
          fun (type __TReturn) ->
            fun (type __TNext) ->
              fun (__tags_to_js : __tags -> Ojs.t) ->
                fun (__T_to_js : __T -> Ojs.t) ->
                  fun (__TReturn_to_js : __TReturn -> Ojs.t) ->
                    fun (__TNext_to_js : __TNext -> Ojs.t) ->
                      fun (x5867 : __tags intf) ->
                        intf_to_js __tags_to_js x5867
    let (next :
      ('tags, 'T, 'TReturn, 'TNext) this ->
        args:any list -> ('T, 'TReturn) IteratorResult.t)
      =
      fun (x5874 : ('tags, 'T, 'TReturn, 'TNext) this) ->
        fun ~args:(x5871 : any list) ->
          IteratorResult.t_of_js Obj.magic Obj.magic
            (let x5879 =
               this_to_js Obj.magic Obj.magic Obj.magic Obj.magic x5874 in
             Ojs.call (Ojs.get_prop_ascii x5879 "next") "apply"
               [|x5879;((let x5872 =
                           Ojs.new_obj
                             (Ojs.get_prop_ascii Ojs.global "Array") 
                             [||] in
                         List.iter
                           (fun (x5873 : any) ->
                              ignore
                                (Ojs.call x5872 "push" [|(any_to_js x5873)|]))
                           x5871;
                         x5872))|])
    let (return :
      ('tags, 'T, 'TReturn, 'TNext) this ->
        value:'TReturn -> ('T, 'TReturn) IteratorResult.t)
      =
      fun (x5883 : ('tags, 'T, 'TReturn, 'TNext) this) ->
        fun ~value:(x5882 : 'TReturn) ->
          IteratorResult.t_of_js Obj.magic Obj.magic
            (Ojs.call
               (this_to_js Obj.magic Obj.magic Obj.magic Obj.magic x5883)
               "return" [|(Obj.magic x5882)|])
    let (throw :
      ('tags, 'T, 'TReturn, 'TNext) this ->
        e:any -> ('T, 'TReturn) IteratorResult.t)
      =
      fun (x5891 : ('tags, 'T, 'TReturn, 'TNext) this) ->
        fun ~e:(x5890 : any) ->
          IteratorResult.t_of_js Obj.magic Obj.magic
            (Ojs.call
               (this_to_js Obj.magic Obj.magic Obj.magic Obj.magic x5891)
               "throw" [|(any_to_js x5890)|])
    let cast_from = Obj.magic
  end
module GeneratorFunction =
  struct
    type t = [ `GeneratorFunction ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type tags = [ `GeneratorFunction ]
    type 'tags this = 'tags intf constraint 'tags = [> `GeneratorFunction ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x5900 : Ojs.t) -> intf_of_js __tags_of_js x5900
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x5898 : __tags intf) -> intf_to_js __tags_to_js x5898
    let (create : 'tags this -> args:any list -> Generator.t_0) =
      fun (x5905 : 'tags this) ->
        fun ~args:(x5902 : any list) ->
          Generator.t_0_of_js
            (Ojs.new_obj_arr (this_to_js Obj.magic x5905)
               (let x5903 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                List.iter
                  (fun (x5904 : any) ->
                     ignore (Ojs.call x5903 "push" [|(any_to_js x5904)|]))
                  x5902;
                x5903))
    let (apply : 'tags this -> args:any list -> Generator.t_0) =
      fun (x5910 : 'tags this) ->
        fun ~args:(x5907 : any list) ->
          Generator.t_0_of_js
            (Ojs.call (this_to_js Obj.magic x5910) "apply"
               [|Ojs.null;((let x5908 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            List.iter
                              (fun (x5909 : any) ->
                                 ignore
                                   (Ojs.call x5908 "push"
                                      [|(any_to_js x5909)|])) x5907;
                            x5908))|])
    let (get_length : 'tags this -> float) =
      fun (x5912 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x5912) "length")
    let (get_name : 'tags this -> string) =
      fun (x5914 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x5914) "name")
    let (get_prototype : 'tags this -> Generator.t_0) =
      fun (x5916 : 'tags this) ->
        Generator.t_0_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x5916) "prototype")
    let cast_from = Obj.magic
  end
module GeneratorFunctionConstructor =
  struct
    type t = [ `GeneratorFunctionConstructor ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type tags = [ `GeneratorFunctionConstructor ]
    type 'tags this =
      'tags intf constraint 'tags = [> `GeneratorFunctionConstructor ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x5920 : Ojs.t) -> intf_of_js __tags_of_js x5920
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x5918 : __tags intf) -> intf_to_js __tags_to_js x5918
    let (create : 'tags this -> args:string list -> GeneratorFunction.t) =
      fun (x5925 : 'tags this) ->
        fun ~args:(x5922 : string list) ->
          GeneratorFunction.t_of_js
            (Ojs.new_obj_arr (this_to_js Obj.magic x5925)
               (let x5923 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                List.iter
                  (fun (x5924 : string) ->
                     ignore
                       (Ojs.call x5923 "push" [|(Ojs.string_to_js x5924)|]))
                  x5922;
                x5923))
    let (apply : 'tags this -> args:string list -> GeneratorFunction.t) =
      fun (x5930 : 'tags this) ->
        fun ~args:(x5927 : string list) ->
          GeneratorFunction.t_of_js
            (Ojs.call (this_to_js Obj.magic x5930) "apply"
               [|Ojs.null;((let x5928 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            List.iter
                              (fun (x5929 : string) ->
                                 ignore
                                   (Ojs.call x5928 "push"
                                      [|(Ojs.string_to_js x5929)|])) x5927;
                            x5928))|])
    let (get_length : 'tags this -> float) =
      fun (x5932 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x5932) "length")
    let (get_name : 'tags this -> string) =
      fun (x5934 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x5934) "name")
    let (get_prototype : 'tags this -> GeneratorFunction.t) =
      fun (x5936 : 'tags this) ->
        GeneratorFunction.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x5936) "prototype")
    let cast_from = Obj.magic
  end
module Float64Array =
  struct
    type t = [ `Float64Array ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type tags = [ `Float64Array ]
    type 'tags this = 'tags intf constraint 'tags = [> `Float64Array ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x5940 : Ojs.t) -> intf_of_js __tags_of_js x5940
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x5938 : __tags intf) -> intf_to_js __tags_to_js x5938
    let (findLast :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> bool) ->
          ?thisArg:any -> unit -> 'S option)
      =
      fun (x5949 : 'tags this) ->
        fun
          ~predicate:(x5942 : value:float -> index:float -> array:t -> bool)
          ->
          fun ?thisArg:(x5943 : any option) ->
            fun () ->
              Ojs.option_of_js Obj.magic
                (let x5951 = this_to_js Obj.magic x5949 in
                 Ojs.call (Ojs.get_prop_ascii x5951 "findLast") "apply"
                   [|x5951;((let x5944 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x5944 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x5946 : Ojs.t) ->
                                          fun (x5947 : Ojs.t) ->
                                            fun (x5948 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x5942
                                                   ~value:(Ojs.float_of_js
                                                             x5946)
                                                   ~index:(Ojs.float_of_js
                                                             x5947)
                                                   ~array:(t_of_js x5948))))|]);
                             (match x5943 with
                              | Some x5945 ->
                                  ignore
                                    (Ojs.call x5944 "push"
                                       [|(any_to_js x5945)|])
                              | None -> ());
                             x5944))|])
    let (findLast' :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> float option)
      =
      fun (x5960 : 'tags this) ->
        fun
          ~predicate:(x5953 :
                       value:float -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x5954 : any option) ->
            fun () ->
              Ojs.option_of_js Ojs.float_of_js
                (let x5962 = this_to_js Obj.magic x5960 in
                 Ojs.call (Ojs.get_prop_ascii x5962 "findLast") "apply"
                   [|x5962;((let x5955 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x5955 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x5957 : Ojs.t) ->
                                          fun (x5958 : Ojs.t) ->
                                            fun (x5959 : Ojs.t) ->
                                              unknown_to_js
                                                (x5953
                                                   ~value:(Ojs.float_of_js
                                                             x5957)
                                                   ~index:(Ojs.float_of_js
                                                             x5958)
                                                   ~array:(t_of_js x5959))))|]);
                             (match x5954 with
                              | Some x5956 ->
                                  ignore
                                    (Ojs.call x5955 "push"
                                       [|(any_to_js x5956)|])
                              | None -> ());
                             x5955))|])
    let (findLastIndex :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> float)
      =
      fun (x5971 : 'tags this) ->
        fun
          ~predicate:(x5964 :
                       value:float -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x5965 : any option) ->
            fun () ->
              Ojs.float_of_js
                (let x5973 = this_to_js Obj.magic x5971 in
                 Ojs.call (Ojs.get_prop_ascii x5973 "findLastIndex") "apply"
                   [|x5973;((let x5966 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x5966 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x5968 : Ojs.t) ->
                                          fun (x5969 : Ojs.t) ->
                                            fun (x5970 : Ojs.t) ->
                                              unknown_to_js
                                                (x5964
                                                   ~value:(Ojs.float_of_js
                                                             x5968)
                                                   ~index:(Ojs.float_of_js
                                                             x5969)
                                                   ~array:(t_of_js x5970))))|]);
                             (match x5965 with
                              | Some x5967 ->
                                  ignore
                                    (Ojs.call x5966 "push"
                                       [|(any_to_js x5967)|])
                              | None -> ());
                             x5966))|])
    let (at : 'tags this -> index:float -> float option) =
      fun (x5975 : 'tags this) ->
        fun ~index:(x5974 : float) ->
          Ojs.option_of_js Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x5975) "at"
               [|(Ojs.float_to_js x5974)|])
    let (includes :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> bool)
      =
      fun (x5982 : 'tags this) ->
        fun ~searchElement:(x5978 : float) ->
          fun ?fromIndex:(x5979 : float option) ->
            fun () ->
              Ojs.bool_of_js
                (let x5984 = this_to_js Obj.magic x5982 in
                 Ojs.call (Ojs.get_prop_ascii x5984 "includes") "apply"
                   [|x5984;((let x5980 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x5980 "push"
                                  [|(Ojs.float_to_js x5978)|]);
                             (match x5979 with
                              | Some x5981 ->
                                  ignore
                                    (Ojs.call x5980 "push"
                                       [|(Ojs.float_to_js x5981)|])
                              | None -> ());
                             x5980))|])
    let (entries : 'tags this -> (float * float) IterableIterator.t) =
      fun (x5985 : 'tags this) ->
        IterableIterator.t_of_js
          (fun (x5987 : Ojs.t) ->
             let x5988 = x5987 in
             ((Ojs.float_of_js (Ojs.array_get x5988 0)),
               (Ojs.float_of_js (Ojs.array_get x5988 1))))
          (Ojs.call (this_to_js Obj.magic x5985) "entries" [||])
    let (keys : 'tags this -> float IterableIterator.t) =
      fun (x5989 : 'tags this) ->
        IterableIterator.t_of_js Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x5989) "keys" [||])
    let (values : 'tags this -> float IterableIterator.t) =
      fun (x5992 : 'tags this) ->
        IterableIterator.t_of_js Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x5992) "values" [||])
    let (get_BYTES_PER_ELEMENT : 'tags this -> float) =
      fun (x5995 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x5995)
             "BYTES_PER_ELEMENT")
    let (get_buffer : 'tags this -> ArrayBufferLike.t) =
      fun (x5997 : 'tags this) ->
        ArrayBufferLike.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x5997) "buffer")
    let (get_byteLength : 'tags this -> float) =
      fun (x5999 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x5999) "byteLength")
    let (get_byteOffset : 'tags this -> float) =
      fun (x6001 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6001) "byteOffset")
    let (copyWithin :
      'tags this ->
        target:float -> ?start:float -> ?end_:float -> unit -> 'tags this)
      =
      fun (x6009 : 'tags this) ->
        fun ~target:(x6003 : float) ->
          fun ?start:(x6004 : float option) ->
            fun ?end_:(x6005 : float option) ->
              fun () ->
                this_of_js Obj.magic
                  (let x6011 = this_to_js Obj.magic x6009 in
                   Ojs.call (Ojs.get_prop_ascii x6011 "copyWithin") "apply"
                     [|x6011;((let x6006 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x6006 "push"
                                    [|(Ojs.float_to_js x6003)|]);
                               (match x6004 with
                                | Some x6008 ->
                                    ignore
                                      (Ojs.call x6006 "push"
                                         [|(Ojs.float_to_js x6008)|])
                                | None -> ());
                               (match x6005 with
                                | Some x6007 ->
                                    ignore
                                      (Ojs.call x6006 "push"
                                         [|(Ojs.float_to_js x6007)|])
                                | None -> ());
                               x6006))|])
    let (every :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x6020 : 'tags this) ->
        fun
          ~predicate:(x6013 :
                       value:float -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x6014 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x6022 = this_to_js Obj.magic x6020 in
                 Ojs.call (Ojs.get_prop_ascii x6022 "every") "apply"
                   [|x6022;((let x6015 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6015 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x6017 : Ojs.t) ->
                                          fun (x6018 : Ojs.t) ->
                                            fun (x6019 : Ojs.t) ->
                                              unknown_to_js
                                                (x6013
                                                   ~value:(Ojs.float_of_js
                                                             x6017)
                                                   ~index:(Ojs.float_of_js
                                                             x6018)
                                                   ~array:(t_of_js x6019))))|]);
                             (match x6014 with
                              | Some x6016 ->
                                  ignore
                                    (Ojs.call x6015 "push"
                                       [|(any_to_js x6016)|])
                              | None -> ());
                             x6015))|])
    let (fill :
      'tags this ->
        value:float -> ?start:float -> ?end_:float -> unit -> 'tags this)
      =
      fun (x6029 : 'tags this) ->
        fun ~value:(x6023 : float) ->
          fun ?start:(x6024 : float option) ->
            fun ?end_:(x6025 : float option) ->
              fun () ->
                this_of_js Obj.magic
                  (let x6031 = this_to_js Obj.magic x6029 in
                   Ojs.call (Ojs.get_prop_ascii x6031 "fill") "apply"
                     [|x6031;((let x6026 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x6026 "push"
                                    [|(Ojs.float_to_js x6023)|]);
                               (match x6024 with
                                | Some x6028 ->
                                    ignore
                                      (Ojs.call x6026 "push"
                                         [|(Ojs.float_to_js x6028)|])
                                | None -> ());
                               (match x6025 with
                                | Some x6027 ->
                                    ignore
                                      (Ojs.call x6026 "push"
                                         [|(Ojs.float_to_js x6027)|])
                                | None -> ());
                               x6026))|])
    let (filter :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> any) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x6040 : 'tags this) ->
        fun ~predicate:(x6033 : value:float -> index:float -> array:t -> any)
          ->
          fun ?thisArg:(x6034 : any option) ->
            fun () ->
              t_of_js
                (let x6042 = this_to_js Obj.magic x6040 in
                 Ojs.call (Ojs.get_prop_ascii x6042 "filter") "apply"
                   [|x6042;((let x6035 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6035 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x6037 : Ojs.t) ->
                                          fun (x6038 : Ojs.t) ->
                                            fun (x6039 : Ojs.t) ->
                                              any_to_js
                                                (x6033
                                                   ~value:(Ojs.float_of_js
                                                             x6037)
                                                   ~index:(Ojs.float_of_js
                                                             x6038)
                                                   ~array:(t_of_js x6039))))|]);
                             (match x6034 with
                              | Some x6036 ->
                                  ignore
                                    (Ojs.call x6035 "push"
                                       [|(any_to_js x6036)|])
                              | None -> ());
                             x6035))|])
    let (find :
      'tags this ->
        predicate:(value:float -> index:float -> obj:t -> bool) ->
          ?thisArg:any -> unit -> float option)
      =
      fun (x6050 : 'tags this) ->
        fun ~predicate:(x6043 : value:float -> index:float -> obj:t -> bool)
          ->
          fun ?thisArg:(x6044 : any option) ->
            fun () ->
              Ojs.option_of_js Ojs.float_of_js
                (let x6052 = this_to_js Obj.magic x6050 in
                 Ojs.call (Ojs.get_prop_ascii x6052 "find") "apply"
                   [|x6052;((let x6045 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6045 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x6047 : Ojs.t) ->
                                          fun (x6048 : Ojs.t) ->
                                            fun (x6049 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x6043
                                                   ~value:(Ojs.float_of_js
                                                             x6047)
                                                   ~index:(Ojs.float_of_js
                                                             x6048)
                                                   ~obj:(t_of_js x6049))))|]);
                             (match x6044 with
                              | Some x6046 ->
                                  ignore
                                    (Ojs.call x6045 "push"
                                       [|(any_to_js x6046)|])
                              | None -> ());
                             x6045))|])
    let (findIndex :
      'tags this ->
        predicate:(value:float -> index:float -> obj:t -> bool) ->
          ?thisArg:any -> unit -> float)
      =
      fun (x6061 : 'tags this) ->
        fun ~predicate:(x6054 : value:float -> index:float -> obj:t -> bool)
          ->
          fun ?thisArg:(x6055 : any option) ->
            fun () ->
              Ojs.float_of_js
                (let x6063 = this_to_js Obj.magic x6061 in
                 Ojs.call (Ojs.get_prop_ascii x6063 "findIndex") "apply"
                   [|x6063;((let x6056 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6056 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x6058 : Ojs.t) ->
                                          fun (x6059 : Ojs.t) ->
                                            fun (x6060 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x6054
                                                   ~value:(Ojs.float_of_js
                                                             x6058)
                                                   ~index:(Ojs.float_of_js
                                                             x6059)
                                                   ~obj:(t_of_js x6060))))|]);
                             (match x6055 with
                              | Some x6057 ->
                                  ignore
                                    (Ojs.call x6056 "push"
                                       [|(any_to_js x6057)|])
                              | None -> ());
                             x6056))|])
    let (forEach :
      'tags this ->
        callbackfn:(value:float -> index:float -> array:t -> unit) ->
          ?thisArg:any -> unit -> unit)
      =
      fun (x6071 : 'tags this) ->
        fun
          ~callbackfn:(x6064 : value:float -> index:float -> array:t -> unit)
          ->
          fun ?thisArg:(x6065 : any option) ->
            fun () ->
              ignore
                (let x6073 = this_to_js Obj.magic x6071 in
                 Ojs.call (Ojs.get_prop_ascii x6073 "forEach") "apply"
                   [|x6073;((let x6066 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6066 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x6068 : Ojs.t) ->
                                          fun (x6069 : Ojs.t) ->
                                            fun (x6070 : Ojs.t) ->
                                              x6064
                                                ~value:(Ojs.float_of_js x6068)
                                                ~index:(Ojs.float_of_js x6069)
                                                ~array:(t_of_js x6070)))|]);
                             (match x6065 with
                              | Some x6067 ->
                                  ignore
                                    (Ojs.call x6066 "push"
                                       [|(any_to_js x6067)|])
                              | None -> ());
                             x6066))|])
    let (indexOf :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> float)
      =
      fun (x6078 : 'tags this) ->
        fun ~searchElement:(x6074 : float) ->
          fun ?fromIndex:(x6075 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x6080 = this_to_js Obj.magic x6078 in
                 Ojs.call (Ojs.get_prop_ascii x6080 "indexOf") "apply"
                   [|x6080;((let x6076 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6076 "push"
                                  [|(Ojs.float_to_js x6074)|]);
                             (match x6075 with
                              | Some x6077 ->
                                  ignore
                                    (Ojs.call x6076 "push"
                                       [|(Ojs.float_to_js x6077)|])
                              | None -> ());
                             x6076))|])
    let (join : 'tags this -> ?separator:string -> unit -> string) =
      fun (x6084 : 'tags this) ->
        fun ?separator:(x6081 : string option) ->
          fun () ->
            Ojs.string_of_js
              (let x6086 = this_to_js Obj.magic x6084 in
               Ojs.call (Ojs.get_prop_ascii x6086 "join") "apply"
                 [|x6086;((let x6082 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x6081 with
                            | Some x6083 ->
                                ignore
                                  (Ojs.call x6082 "push"
                                     [|(Ojs.string_to_js x6083)|])
                            | None -> ());
                           x6082))|])
    let (lastIndexOf :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> float)
      =
      fun (x6091 : 'tags this) ->
        fun ~searchElement:(x6087 : float) ->
          fun ?fromIndex:(x6088 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x6093 = this_to_js Obj.magic x6091 in
                 Ojs.call (Ojs.get_prop_ascii x6093 "lastIndexOf") "apply"
                   [|x6093;((let x6089 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6089 "push"
                                  [|(Ojs.float_to_js x6087)|]);
                             (match x6088 with
                              | Some x6090 ->
                                  ignore
                                    (Ojs.call x6089 "push"
                                       [|(Ojs.float_to_js x6090)|])
                              | None -> ());
                             x6089))|])
    let (get_length : 'tags this -> float) =
      fun (x6094 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6094) "length")
    let (map :
      'tags this ->
        callbackfn:(value:float -> index:float -> array:t -> float) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x6103 : 'tags this) ->
        fun
          ~callbackfn:(x6096 :
                        value:float -> index:float -> array:t -> float)
          ->
          fun ?thisArg:(x6097 : any option) ->
            fun () ->
              t_of_js
                (let x6105 = this_to_js Obj.magic x6103 in
                 Ojs.call (Ojs.get_prop_ascii x6105 "map") "apply"
                   [|x6105;((let x6098 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6098 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x6100 : Ojs.t) ->
                                          fun (x6101 : Ojs.t) ->
                                            fun (x6102 : Ojs.t) ->
                                              Ojs.float_to_js
                                                (x6096
                                                   ~value:(Ojs.float_of_js
                                                             x6100)
                                                   ~index:(Ojs.float_of_js
                                                             x6101)
                                                   ~array:(t_of_js x6102))))|]);
                             (match x6097 with
                              | Some x6099 ->
                                  ignore
                                    (Ojs.call x6098 "push"
                                       [|(any_to_js x6099)|])
                              | None -> ());
                             x6098))|])
    let (reduce :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> float)
      =
      fun (x6111 : 'tags this) ->
        fun
          ~callbackfn:(x6106 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x6111) "reduce"
               [|(Ojs.fun_to_js 4
                    (fun (x6107 : Ojs.t) ->
                       fun (x6108 : Ojs.t) ->
                         fun (x6109 : Ojs.t) ->
                           fun (x6110 : Ojs.t) ->
                             Ojs.float_to_js
                               (x6106 ~previousValue:(Ojs.float_of_js x6107)
                                  ~currentValue:(Ojs.float_of_js x6108)
                                  ~currentIndex:(Ojs.float_of_js x6109)
                                  ~array:(t_of_js x6110))))|])
    let (reduce' :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> initialValue:float -> float)
      =
      fun (x6119 : 'tags this) ->
        fun
          ~callbackfn:(x6113 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          fun ~initialValue:(x6118 : float) ->
            Ojs.float_of_js
              (Ojs.call (this_to_js Obj.magic x6119) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x6114 : Ojs.t) ->
                         fun (x6115 : Ojs.t) ->
                           fun (x6116 : Ojs.t) ->
                             fun (x6117 : Ojs.t) ->
                               Ojs.float_to_js
                                 (x6113
                                    ~previousValue:(Ojs.float_of_js x6114)
                                    ~currentValue:(Ojs.float_of_js x6115)
                                    ~currentIndex:(Ojs.float_of_js x6116)
                                    ~array:(t_of_js x6117))));(Ojs.float_to_js
                                                                 x6118)|])
    let (reduce'' :
      'tags this ->
        callbackfn:(previousValue:'U ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x6127 : 'tags this) ->
        fun
          ~callbackfn:(x6121 :
                        previousValue:'U ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x6126 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic x6127) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x6122 : Ojs.t) ->
                         fun (x6123 : Ojs.t) ->
                           fun (x6124 : Ojs.t) ->
                             fun (x6125 : Ojs.t) ->
                               Obj.magic
                                 (x6121 ~previousValue:(Obj.magic x6122)
                                    ~currentValue:(Ojs.float_of_js x6123)
                                    ~currentIndex:(Ojs.float_of_js x6124)
                                    ~array:(t_of_js x6125))));(Obj.magic
                                                                 x6126)|])
    let (reduceRight :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> float)
      =
      fun (x6134 : 'tags this) ->
        fun
          ~callbackfn:(x6129 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x6134) "reduceRight"
               [|(Ojs.fun_to_js 4
                    (fun (x6130 : Ojs.t) ->
                       fun (x6131 : Ojs.t) ->
                         fun (x6132 : Ojs.t) ->
                           fun (x6133 : Ojs.t) ->
                             Ojs.float_to_js
                               (x6129 ~previousValue:(Ojs.float_of_js x6130)
                                  ~currentValue:(Ojs.float_of_js x6131)
                                  ~currentIndex:(Ojs.float_of_js x6132)
                                  ~array:(t_of_js x6133))))|])
    let (reduceRight' :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> initialValue:float -> float)
      =
      fun (x6142 : 'tags this) ->
        fun
          ~callbackfn:(x6136 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          fun ~initialValue:(x6141 : float) ->
            Ojs.float_of_js
              (Ojs.call (this_to_js Obj.magic x6142) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x6137 : Ojs.t) ->
                         fun (x6138 : Ojs.t) ->
                           fun (x6139 : Ojs.t) ->
                             fun (x6140 : Ojs.t) ->
                               Ojs.float_to_js
                                 (x6136
                                    ~previousValue:(Ojs.float_of_js x6137)
                                    ~currentValue:(Ojs.float_of_js x6138)
                                    ~currentIndex:(Ojs.float_of_js x6139)
                                    ~array:(t_of_js x6140))));(Ojs.float_to_js
                                                                 x6141)|])
    let (reduceRight'' :
      'tags this ->
        callbackfn:(previousValue:'U ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x6150 : 'tags this) ->
        fun
          ~callbackfn:(x6144 :
                        previousValue:'U ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x6149 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic x6150) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x6145 : Ojs.t) ->
                         fun (x6146 : Ojs.t) ->
                           fun (x6147 : Ojs.t) ->
                             fun (x6148 : Ojs.t) ->
                               Obj.magic
                                 (x6144 ~previousValue:(Obj.magic x6145)
                                    ~currentValue:(Ojs.float_of_js x6146)
                                    ~currentIndex:(Ojs.float_of_js x6147)
                                    ~array:(t_of_js x6148))));(Obj.magic
                                                                 x6149)|])
    let (reverse : 'tags this -> t) =
      fun (x6152 : 'tags this) ->
        t_of_js (Ojs.call (this_to_js Obj.magic x6152) "reverse" [||])
    let (set_ :
      'tags this -> array:float ArrayLike.t -> ?offset:float -> unit -> unit)
      =
      fun (x6159 : 'tags this) ->
        fun ~array:(x6154 : float ArrayLike.t) ->
          fun ?offset:(x6155 : float option) ->
            fun () ->
              ignore
                (let x6161 = this_to_js Obj.magic x6159 in
                 Ojs.call (Ojs.get_prop_ascii x6161 "set") "apply"
                   [|x6161;((let x6156 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6156 "push"
                                  [|(ArrayLike.t_to_js Ojs.float_to_js x6154)|]);
                             (match x6155 with
                              | Some x6157 ->
                                  ignore
                                    (Ojs.call x6156 "push"
                                       [|(Ojs.float_to_js x6157)|])
                              | None -> ());
                             x6156))|])
    let (slice : 'tags this -> ?start:float -> ?end_:float -> unit -> t) =
      fun (x6167 : 'tags this) ->
        fun ?start:(x6162 : float option) ->
          fun ?end_:(x6163 : float option) ->
            fun () ->
              t_of_js
                (let x6169 = this_to_js Obj.magic x6167 in
                 Ojs.call (Ojs.get_prop_ascii x6169 "slice") "apply"
                   [|x6169;((let x6164 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x6162 with
                              | Some x6166 ->
                                  ignore
                                    (Ojs.call x6164 "push"
                                       [|(Ojs.float_to_js x6166)|])
                              | None -> ());
                             (match x6163 with
                              | Some x6165 ->
                                  ignore
                                    (Ojs.call x6164 "push"
                                       [|(Ojs.float_to_js x6165)|])
                              | None -> ());
                             x6164))|])
    let (some :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x6177 : 'tags this) ->
        fun
          ~predicate:(x6170 :
                       value:float -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x6171 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x6179 = this_to_js Obj.magic x6177 in
                 Ojs.call (Ojs.get_prop_ascii x6179 "some") "apply"
                   [|x6179;((let x6172 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6172 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x6174 : Ojs.t) ->
                                          fun (x6175 : Ojs.t) ->
                                            fun (x6176 : Ojs.t) ->
                                              unknown_to_js
                                                (x6170
                                                   ~value:(Ojs.float_of_js
                                                             x6174)
                                                   ~index:(Ojs.float_of_js
                                                             x6175)
                                                   ~array:(t_of_js x6176))))|]);
                             (match x6171 with
                              | Some x6173 ->
                                  ignore
                                    (Ojs.call x6172 "push"
                                       [|(any_to_js x6173)|])
                              | None -> ());
                             x6172))|])
    let (sort :
      'tags this ->
        ?compareFn:(a:float -> b:float -> float) -> unit -> 'tags this)
      =
      fun (x6185 : 'tags this) ->
        fun ?compareFn:(x6180 : (a:float -> b:float -> float) option) ->
          fun () ->
            this_of_js Obj.magic
              (let x6187 = this_to_js Obj.magic x6185 in
               Ojs.call (Ojs.get_prop_ascii x6187 "sort") "apply"
                 [|x6187;((let x6181 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x6180 with
                            | Some x6182 ->
                                ignore
                                  (Ojs.call x6181 "push"
                                     [|(Ojs.fun_to_js 2
                                          (fun (x6183 : Ojs.t) ->
                                             fun (x6184 : Ojs.t) ->
                                               Ojs.float_to_js
                                                 (x6182
                                                    ~a:(Ojs.float_of_js x6183)
                                                    ~b:(Ojs.float_of_js x6184))))|])
                            | None -> ());
                           x6181))|])
    let (subarray : 'tags this -> ?begin_:float -> ?end_:float -> unit -> t)
      =
      fun (x6194 : 'tags this) ->
        fun ?begin_:(x6189 : float option) ->
          fun ?end_:(x6190 : float option) ->
            fun () ->
              t_of_js
                (let x6196 = this_to_js Obj.magic x6194 in
                 Ojs.call (Ojs.get_prop_ascii x6196 "subarray") "apply"
                   [|x6196;((let x6191 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x6189 with
                              | Some x6193 ->
                                  ignore
                                    (Ojs.call x6191 "push"
                                       [|(Ojs.float_to_js x6193)|])
                              | None -> ());
                             (match x6190 with
                              | Some x6192 ->
                                  ignore
                                    (Ojs.call x6191 "push"
                                       [|(Ojs.float_to_js x6192)|])
                              | None -> ());
                             x6191))|])
    let (toLocaleString : 'tags this -> string) =
      fun (x6197 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x6197) "toLocaleString" [||])
    let (toString : 'tags this -> string) =
      fun (x6199 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x6199) "toString" [||])
    let (valueOf : 'tags this -> t) =
      fun (x6201 : 'tags this) ->
        t_of_js (Ojs.call (this_to_js Obj.magic x6201) "valueOf" [||])
    let (get : 'tags this -> float -> float) =
      fun (x6203 : 'tags this) ->
        fun (x6205 : float) ->
          Ojs.float_of_js
            (Ojs.get_prop (this_to_js Obj.magic x6203)
               (Ojs.float_to_js x6205))
    let (set : 'tags this -> float -> float -> unit) =
      fun (x6206 : 'tags this) ->
        fun (x6208 : float) ->
          fun (x6209 : float) ->
            Ojs.set_prop (this_to_js Obj.magic x6206) (Ojs.float_to_js x6208)
              (Ojs.float_to_js x6209)
    let (create : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Float64Array") [||])
    let (create' : float Iterable.t -> t) =
      fun (x6210 : float Iterable.t) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Float64Array")
             [|(Iterable.t_to_js Ojs.float_to_js x6210)|])
    let (from :
      arrayLike:float Iterable.t ->
        ?mapfn:(v:float -> k:float -> float) -> ?thisArg:any -> unit -> t)
      =
      fun ~arrayLike:(x6212 : float Iterable.t) ->
        fun ?mapfn:(x6213 : (v:float -> k:float -> float) option) ->
          fun ?thisArg:(x6214 : any option) ->
            fun () ->
              t_of_js
                (let x6221 = Ojs.get_prop_ascii Ojs.global "Float64Array" in
                 Ojs.call (Ojs.get_prop_ascii x6221 "from") "apply"
                   [|x6221;((let x6215 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6215 "push"
                                  [|(Iterable.t_to_js Ojs.float_to_js x6212)|]);
                             (match x6213 with
                              | Some x6217 ->
                                  ignore
                                    (Ojs.call x6215 "push"
                                       [|(Ojs.fun_to_js 2
                                            (fun (x6218 : Ojs.t) ->
                                               fun (x6219 : Ojs.t) ->
                                                 Ojs.float_to_js
                                                   (x6217
                                                      ~v:(Ojs.float_of_js
                                                            x6218)
                                                      ~k:(Ojs.float_of_js
                                                            x6219))))|])
                              | None -> ());
                             (match x6214 with
                              | Some x6216 ->
                                  ignore
                                    (Ojs.call x6215 "push"
                                       [|(any_to_js x6216)|])
                              | None -> ());
                             x6215))|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Float64Array")
             "prototype")
    let (create'' : float -> t) =
      fun (x6222 : float) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Float64Array")
             [|(Ojs.float_to_js x6222)|])
    let (create''' :
      [ `U1 of float ArrayLike.t  | `U2 of ArrayBufferLike.t ] -> t) =
      fun (x6223 : [ `U1 of float ArrayLike.t  | `U2 of ArrayBufferLike.t ])
        ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Float64Array")
             [|((match x6223 with
                 | `U1 x6224 -> ArrayLike.t_to_js Ojs.float_to_js x6224
                 | `U2 x6226 -> ArrayBufferLike.t_to_js x6226))|])
    let (create'''' :
      buffer:ArrayBufferLike.t ->
        ?byteOffset:float -> ?length:float -> unit -> t)
      =
      fun ~buffer:(x6227 : ArrayBufferLike.t) ->
        fun ?byteOffset:(x6228 : float option) ->
          fun ?length:(x6229 : float option) ->
            fun () ->
              t_of_js
                (Ojs.new_obj_arr
                   (Ojs.get_prop_ascii Ojs.global "Float64Array")
                   (let x6230 =
                      Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                        [||] in
                    ignore
                      (Ojs.call x6230 "push"
                         [|(ArrayBufferLike.t_to_js x6227)|]);
                    (match x6228 with
                     | Some x6232 ->
                         ignore
                           (Ojs.call x6230 "push" [|(Ojs.float_to_js x6232)|])
                     | None -> ());
                    (match x6229 with
                     | Some x6231 ->
                         ignore
                           (Ojs.call x6230 "push" [|(Ojs.float_to_js x6231)|])
                     | None -> ());
                    x6230))
    let (bytes_per_element : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Float64Array")
             "BYTES_PER_ELEMENT")
    let (of_ : float list -> t) =
      fun (x6233 : float list) ->
        t_of_js
          (let x6236 = Ojs.get_prop_ascii Ojs.global "Float64Array" in
           Ojs.call (Ojs.get_prop_ascii x6236 "of") "apply"
             [|x6236;((let x6234 =
                         Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                           [||] in
                       List.iter
                         (fun (x6235 : float) ->
                            ignore
                              (Ojs.call x6234 "push"
                                 [|(Ojs.float_to_js x6235)|])) x6233;
                       x6234))|])
    let (from' : float ArrayLike.t -> t) =
      fun (x6237 : float ArrayLike.t) ->
        t_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Float64Array") "from"
             [|(ArrayLike.t_to_js Ojs.float_to_js x6237)|])
    let (from'' :
      arrayLike:'T ArrayLike.t ->
        mapfn:(v:'T -> k:float -> float) -> ?thisArg:any -> unit -> t)
      =
      fun ~arrayLike:(x6239 : 'T ArrayLike.t) ->
        fun ~mapfn:(x6240 : v:'T -> k:float -> float) ->
          fun ?thisArg:(x6241 : any option) ->
            fun () ->
              t_of_js
                (let x6247 = Ojs.get_prop_ascii Ojs.global "Float64Array" in
                 Ojs.call (Ojs.get_prop_ascii x6247 "from") "apply"
                   [|x6247;((let x6242 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6242 "push"
                                  [|(ArrayLike.t_to_js Obj.magic x6239)|]);
                             ignore
                               (Ojs.call x6242 "push"
                                  [|(Ojs.fun_to_js 2
                                       (fun (x6244 : Ojs.t) ->
                                          fun (x6245 : Ojs.t) ->
                                            Ojs.float_to_js
                                              (x6240 ~v:(Obj.magic x6244)
                                                 ~k:(Ojs.float_of_js x6245))))|]);
                             (match x6241 with
                              | Some x6243 ->
                                  ignore
                                    (Ojs.call x6242 "push"
                                       [|(any_to_js x6243)|])
                              | None -> ());
                             x6242))|])
    let cast_from = Obj.magic
  end
module Float32Array =
  struct
    type t = [ `Float32Array ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type tags = [ `Float32Array ]
    type 'tags this = 'tags intf constraint 'tags = [> `Float32Array ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x6250 : Ojs.t) -> intf_of_js __tags_of_js x6250
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x6248 : __tags intf) -> intf_to_js __tags_to_js x6248
    let (findLast :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> bool) ->
          ?thisArg:any -> unit -> 'S option)
      =
      fun (x6259 : 'tags this) ->
        fun
          ~predicate:(x6252 : value:float -> index:float -> array:t -> bool)
          ->
          fun ?thisArg:(x6253 : any option) ->
            fun () ->
              Ojs.option_of_js Obj.magic
                (let x6261 = this_to_js Obj.magic x6259 in
                 Ojs.call (Ojs.get_prop_ascii x6261 "findLast") "apply"
                   [|x6261;((let x6254 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6254 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x6256 : Ojs.t) ->
                                          fun (x6257 : Ojs.t) ->
                                            fun (x6258 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x6252
                                                   ~value:(Ojs.float_of_js
                                                             x6256)
                                                   ~index:(Ojs.float_of_js
                                                             x6257)
                                                   ~array:(t_of_js x6258))))|]);
                             (match x6253 with
                              | Some x6255 ->
                                  ignore
                                    (Ojs.call x6254 "push"
                                       [|(any_to_js x6255)|])
                              | None -> ());
                             x6254))|])
    let (findLast' :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> float option)
      =
      fun (x6270 : 'tags this) ->
        fun
          ~predicate:(x6263 :
                       value:float -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x6264 : any option) ->
            fun () ->
              Ojs.option_of_js Ojs.float_of_js
                (let x6272 = this_to_js Obj.magic x6270 in
                 Ojs.call (Ojs.get_prop_ascii x6272 "findLast") "apply"
                   [|x6272;((let x6265 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6265 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x6267 : Ojs.t) ->
                                          fun (x6268 : Ojs.t) ->
                                            fun (x6269 : Ojs.t) ->
                                              unknown_to_js
                                                (x6263
                                                   ~value:(Ojs.float_of_js
                                                             x6267)
                                                   ~index:(Ojs.float_of_js
                                                             x6268)
                                                   ~array:(t_of_js x6269))))|]);
                             (match x6264 with
                              | Some x6266 ->
                                  ignore
                                    (Ojs.call x6265 "push"
                                       [|(any_to_js x6266)|])
                              | None -> ());
                             x6265))|])
    let (findLastIndex :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> float)
      =
      fun (x6281 : 'tags this) ->
        fun
          ~predicate:(x6274 :
                       value:float -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x6275 : any option) ->
            fun () ->
              Ojs.float_of_js
                (let x6283 = this_to_js Obj.magic x6281 in
                 Ojs.call (Ojs.get_prop_ascii x6283 "findLastIndex") "apply"
                   [|x6283;((let x6276 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6276 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x6278 : Ojs.t) ->
                                          fun (x6279 : Ojs.t) ->
                                            fun (x6280 : Ojs.t) ->
                                              unknown_to_js
                                                (x6274
                                                   ~value:(Ojs.float_of_js
                                                             x6278)
                                                   ~index:(Ojs.float_of_js
                                                             x6279)
                                                   ~array:(t_of_js x6280))))|]);
                             (match x6275 with
                              | Some x6277 ->
                                  ignore
                                    (Ojs.call x6276 "push"
                                       [|(any_to_js x6277)|])
                              | None -> ());
                             x6276))|])
    let (at : 'tags this -> index:float -> float option) =
      fun (x6285 : 'tags this) ->
        fun ~index:(x6284 : float) ->
          Ojs.option_of_js Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x6285) "at"
               [|(Ojs.float_to_js x6284)|])
    let (includes :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> bool)
      =
      fun (x6292 : 'tags this) ->
        fun ~searchElement:(x6288 : float) ->
          fun ?fromIndex:(x6289 : float option) ->
            fun () ->
              Ojs.bool_of_js
                (let x6294 = this_to_js Obj.magic x6292 in
                 Ojs.call (Ojs.get_prop_ascii x6294 "includes") "apply"
                   [|x6294;((let x6290 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6290 "push"
                                  [|(Ojs.float_to_js x6288)|]);
                             (match x6289 with
                              | Some x6291 ->
                                  ignore
                                    (Ojs.call x6290 "push"
                                       [|(Ojs.float_to_js x6291)|])
                              | None -> ());
                             x6290))|])
    let (entries : 'tags this -> (float * float) IterableIterator.t) =
      fun (x6295 : 'tags this) ->
        IterableIterator.t_of_js
          (fun (x6297 : Ojs.t) ->
             let x6298 = x6297 in
             ((Ojs.float_of_js (Ojs.array_get x6298 0)),
               (Ojs.float_of_js (Ojs.array_get x6298 1))))
          (Ojs.call (this_to_js Obj.magic x6295) "entries" [||])
    let (keys : 'tags this -> float IterableIterator.t) =
      fun (x6299 : 'tags this) ->
        IterableIterator.t_of_js Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x6299) "keys" [||])
    let (values : 'tags this -> float IterableIterator.t) =
      fun (x6302 : 'tags this) ->
        IterableIterator.t_of_js Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x6302) "values" [||])
    let (get_BYTES_PER_ELEMENT : 'tags this -> float) =
      fun (x6305 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6305)
             "BYTES_PER_ELEMENT")
    let (get_buffer : 'tags this -> ArrayBufferLike.t) =
      fun (x6307 : 'tags this) ->
        ArrayBufferLike.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6307) "buffer")
    let (get_byteLength : 'tags this -> float) =
      fun (x6309 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6309) "byteLength")
    let (get_byteOffset : 'tags this -> float) =
      fun (x6311 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6311) "byteOffset")
    let (copyWithin :
      'tags this ->
        target:float -> ?start:float -> ?end_:float -> unit -> 'tags this)
      =
      fun (x6319 : 'tags this) ->
        fun ~target:(x6313 : float) ->
          fun ?start:(x6314 : float option) ->
            fun ?end_:(x6315 : float option) ->
              fun () ->
                this_of_js Obj.magic
                  (let x6321 = this_to_js Obj.magic x6319 in
                   Ojs.call (Ojs.get_prop_ascii x6321 "copyWithin") "apply"
                     [|x6321;((let x6316 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x6316 "push"
                                    [|(Ojs.float_to_js x6313)|]);
                               (match x6314 with
                                | Some x6318 ->
                                    ignore
                                      (Ojs.call x6316 "push"
                                         [|(Ojs.float_to_js x6318)|])
                                | None -> ());
                               (match x6315 with
                                | Some x6317 ->
                                    ignore
                                      (Ojs.call x6316 "push"
                                         [|(Ojs.float_to_js x6317)|])
                                | None -> ());
                               x6316))|])
    let (every :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x6330 : 'tags this) ->
        fun
          ~predicate:(x6323 :
                       value:float -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x6324 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x6332 = this_to_js Obj.magic x6330 in
                 Ojs.call (Ojs.get_prop_ascii x6332 "every") "apply"
                   [|x6332;((let x6325 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6325 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x6327 : Ojs.t) ->
                                          fun (x6328 : Ojs.t) ->
                                            fun (x6329 : Ojs.t) ->
                                              unknown_to_js
                                                (x6323
                                                   ~value:(Ojs.float_of_js
                                                             x6327)
                                                   ~index:(Ojs.float_of_js
                                                             x6328)
                                                   ~array:(t_of_js x6329))))|]);
                             (match x6324 with
                              | Some x6326 ->
                                  ignore
                                    (Ojs.call x6325 "push"
                                       [|(any_to_js x6326)|])
                              | None -> ());
                             x6325))|])
    let (fill :
      'tags this ->
        value:float -> ?start:float -> ?end_:float -> unit -> 'tags this)
      =
      fun (x6339 : 'tags this) ->
        fun ~value:(x6333 : float) ->
          fun ?start:(x6334 : float option) ->
            fun ?end_:(x6335 : float option) ->
              fun () ->
                this_of_js Obj.magic
                  (let x6341 = this_to_js Obj.magic x6339 in
                   Ojs.call (Ojs.get_prop_ascii x6341 "fill") "apply"
                     [|x6341;((let x6336 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x6336 "push"
                                    [|(Ojs.float_to_js x6333)|]);
                               (match x6334 with
                                | Some x6338 ->
                                    ignore
                                      (Ojs.call x6336 "push"
                                         [|(Ojs.float_to_js x6338)|])
                                | None -> ());
                               (match x6335 with
                                | Some x6337 ->
                                    ignore
                                      (Ojs.call x6336 "push"
                                         [|(Ojs.float_to_js x6337)|])
                                | None -> ());
                               x6336))|])
    let (filter :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> any) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x6350 : 'tags this) ->
        fun ~predicate:(x6343 : value:float -> index:float -> array:t -> any)
          ->
          fun ?thisArg:(x6344 : any option) ->
            fun () ->
              t_of_js
                (let x6352 = this_to_js Obj.magic x6350 in
                 Ojs.call (Ojs.get_prop_ascii x6352 "filter") "apply"
                   [|x6352;((let x6345 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6345 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x6347 : Ojs.t) ->
                                          fun (x6348 : Ojs.t) ->
                                            fun (x6349 : Ojs.t) ->
                                              any_to_js
                                                (x6343
                                                   ~value:(Ojs.float_of_js
                                                             x6347)
                                                   ~index:(Ojs.float_of_js
                                                             x6348)
                                                   ~array:(t_of_js x6349))))|]);
                             (match x6344 with
                              | Some x6346 ->
                                  ignore
                                    (Ojs.call x6345 "push"
                                       [|(any_to_js x6346)|])
                              | None -> ());
                             x6345))|])
    let (find :
      'tags this ->
        predicate:(value:float -> index:float -> obj:t -> bool) ->
          ?thisArg:any -> unit -> float option)
      =
      fun (x6360 : 'tags this) ->
        fun ~predicate:(x6353 : value:float -> index:float -> obj:t -> bool)
          ->
          fun ?thisArg:(x6354 : any option) ->
            fun () ->
              Ojs.option_of_js Ojs.float_of_js
                (let x6362 = this_to_js Obj.magic x6360 in
                 Ojs.call (Ojs.get_prop_ascii x6362 "find") "apply"
                   [|x6362;((let x6355 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6355 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x6357 : Ojs.t) ->
                                          fun (x6358 : Ojs.t) ->
                                            fun (x6359 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x6353
                                                   ~value:(Ojs.float_of_js
                                                             x6357)
                                                   ~index:(Ojs.float_of_js
                                                             x6358)
                                                   ~obj:(t_of_js x6359))))|]);
                             (match x6354 with
                              | Some x6356 ->
                                  ignore
                                    (Ojs.call x6355 "push"
                                       [|(any_to_js x6356)|])
                              | None -> ());
                             x6355))|])
    let (findIndex :
      'tags this ->
        predicate:(value:float -> index:float -> obj:t -> bool) ->
          ?thisArg:any -> unit -> float)
      =
      fun (x6371 : 'tags this) ->
        fun ~predicate:(x6364 : value:float -> index:float -> obj:t -> bool)
          ->
          fun ?thisArg:(x6365 : any option) ->
            fun () ->
              Ojs.float_of_js
                (let x6373 = this_to_js Obj.magic x6371 in
                 Ojs.call (Ojs.get_prop_ascii x6373 "findIndex") "apply"
                   [|x6373;((let x6366 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6366 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x6368 : Ojs.t) ->
                                          fun (x6369 : Ojs.t) ->
                                            fun (x6370 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x6364
                                                   ~value:(Ojs.float_of_js
                                                             x6368)
                                                   ~index:(Ojs.float_of_js
                                                             x6369)
                                                   ~obj:(t_of_js x6370))))|]);
                             (match x6365 with
                              | Some x6367 ->
                                  ignore
                                    (Ojs.call x6366 "push"
                                       [|(any_to_js x6367)|])
                              | None -> ());
                             x6366))|])
    let (forEach :
      'tags this ->
        callbackfn:(value:float -> index:float -> array:t -> unit) ->
          ?thisArg:any -> unit -> unit)
      =
      fun (x6381 : 'tags this) ->
        fun
          ~callbackfn:(x6374 : value:float -> index:float -> array:t -> unit)
          ->
          fun ?thisArg:(x6375 : any option) ->
            fun () ->
              ignore
                (let x6383 = this_to_js Obj.magic x6381 in
                 Ojs.call (Ojs.get_prop_ascii x6383 "forEach") "apply"
                   [|x6383;((let x6376 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6376 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x6378 : Ojs.t) ->
                                          fun (x6379 : Ojs.t) ->
                                            fun (x6380 : Ojs.t) ->
                                              x6374
                                                ~value:(Ojs.float_of_js x6378)
                                                ~index:(Ojs.float_of_js x6379)
                                                ~array:(t_of_js x6380)))|]);
                             (match x6375 with
                              | Some x6377 ->
                                  ignore
                                    (Ojs.call x6376 "push"
                                       [|(any_to_js x6377)|])
                              | None -> ());
                             x6376))|])
    let (indexOf :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> float)
      =
      fun (x6388 : 'tags this) ->
        fun ~searchElement:(x6384 : float) ->
          fun ?fromIndex:(x6385 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x6390 = this_to_js Obj.magic x6388 in
                 Ojs.call (Ojs.get_prop_ascii x6390 "indexOf") "apply"
                   [|x6390;((let x6386 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6386 "push"
                                  [|(Ojs.float_to_js x6384)|]);
                             (match x6385 with
                              | Some x6387 ->
                                  ignore
                                    (Ojs.call x6386 "push"
                                       [|(Ojs.float_to_js x6387)|])
                              | None -> ());
                             x6386))|])
    let (join : 'tags this -> ?separator:string -> unit -> string) =
      fun (x6394 : 'tags this) ->
        fun ?separator:(x6391 : string option) ->
          fun () ->
            Ojs.string_of_js
              (let x6396 = this_to_js Obj.magic x6394 in
               Ojs.call (Ojs.get_prop_ascii x6396 "join") "apply"
                 [|x6396;((let x6392 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x6391 with
                            | Some x6393 ->
                                ignore
                                  (Ojs.call x6392 "push"
                                     [|(Ojs.string_to_js x6393)|])
                            | None -> ());
                           x6392))|])
    let (lastIndexOf :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> float)
      =
      fun (x6401 : 'tags this) ->
        fun ~searchElement:(x6397 : float) ->
          fun ?fromIndex:(x6398 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x6403 = this_to_js Obj.magic x6401 in
                 Ojs.call (Ojs.get_prop_ascii x6403 "lastIndexOf") "apply"
                   [|x6403;((let x6399 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6399 "push"
                                  [|(Ojs.float_to_js x6397)|]);
                             (match x6398 with
                              | Some x6400 ->
                                  ignore
                                    (Ojs.call x6399 "push"
                                       [|(Ojs.float_to_js x6400)|])
                              | None -> ());
                             x6399))|])
    let (get_length : 'tags this -> float) =
      fun (x6404 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6404) "length")
    let (map :
      'tags this ->
        callbackfn:(value:float -> index:float -> array:t -> float) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x6413 : 'tags this) ->
        fun
          ~callbackfn:(x6406 :
                        value:float -> index:float -> array:t -> float)
          ->
          fun ?thisArg:(x6407 : any option) ->
            fun () ->
              t_of_js
                (let x6415 = this_to_js Obj.magic x6413 in
                 Ojs.call (Ojs.get_prop_ascii x6415 "map") "apply"
                   [|x6415;((let x6408 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6408 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x6410 : Ojs.t) ->
                                          fun (x6411 : Ojs.t) ->
                                            fun (x6412 : Ojs.t) ->
                                              Ojs.float_to_js
                                                (x6406
                                                   ~value:(Ojs.float_of_js
                                                             x6410)
                                                   ~index:(Ojs.float_of_js
                                                             x6411)
                                                   ~array:(t_of_js x6412))))|]);
                             (match x6407 with
                              | Some x6409 ->
                                  ignore
                                    (Ojs.call x6408 "push"
                                       [|(any_to_js x6409)|])
                              | None -> ());
                             x6408))|])
    let (reduce :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> float)
      =
      fun (x6421 : 'tags this) ->
        fun
          ~callbackfn:(x6416 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x6421) "reduce"
               [|(Ojs.fun_to_js 4
                    (fun (x6417 : Ojs.t) ->
                       fun (x6418 : Ojs.t) ->
                         fun (x6419 : Ojs.t) ->
                           fun (x6420 : Ojs.t) ->
                             Ojs.float_to_js
                               (x6416 ~previousValue:(Ojs.float_of_js x6417)
                                  ~currentValue:(Ojs.float_of_js x6418)
                                  ~currentIndex:(Ojs.float_of_js x6419)
                                  ~array:(t_of_js x6420))))|])
    let (reduce' :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> initialValue:float -> float)
      =
      fun (x6429 : 'tags this) ->
        fun
          ~callbackfn:(x6423 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          fun ~initialValue:(x6428 : float) ->
            Ojs.float_of_js
              (Ojs.call (this_to_js Obj.magic x6429) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x6424 : Ojs.t) ->
                         fun (x6425 : Ojs.t) ->
                           fun (x6426 : Ojs.t) ->
                             fun (x6427 : Ojs.t) ->
                               Ojs.float_to_js
                                 (x6423
                                    ~previousValue:(Ojs.float_of_js x6424)
                                    ~currentValue:(Ojs.float_of_js x6425)
                                    ~currentIndex:(Ojs.float_of_js x6426)
                                    ~array:(t_of_js x6427))));(Ojs.float_to_js
                                                                 x6428)|])
    let (reduce'' :
      'tags this ->
        callbackfn:(previousValue:'U ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x6437 : 'tags this) ->
        fun
          ~callbackfn:(x6431 :
                        previousValue:'U ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x6436 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic x6437) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x6432 : Ojs.t) ->
                         fun (x6433 : Ojs.t) ->
                           fun (x6434 : Ojs.t) ->
                             fun (x6435 : Ojs.t) ->
                               Obj.magic
                                 (x6431 ~previousValue:(Obj.magic x6432)
                                    ~currentValue:(Ojs.float_of_js x6433)
                                    ~currentIndex:(Ojs.float_of_js x6434)
                                    ~array:(t_of_js x6435))));(Obj.magic
                                                                 x6436)|])
    let (reduceRight :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> float)
      =
      fun (x6444 : 'tags this) ->
        fun
          ~callbackfn:(x6439 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x6444) "reduceRight"
               [|(Ojs.fun_to_js 4
                    (fun (x6440 : Ojs.t) ->
                       fun (x6441 : Ojs.t) ->
                         fun (x6442 : Ojs.t) ->
                           fun (x6443 : Ojs.t) ->
                             Ojs.float_to_js
                               (x6439 ~previousValue:(Ojs.float_of_js x6440)
                                  ~currentValue:(Ojs.float_of_js x6441)
                                  ~currentIndex:(Ojs.float_of_js x6442)
                                  ~array:(t_of_js x6443))))|])
    let (reduceRight' :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> initialValue:float -> float)
      =
      fun (x6452 : 'tags this) ->
        fun
          ~callbackfn:(x6446 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          fun ~initialValue:(x6451 : float) ->
            Ojs.float_of_js
              (Ojs.call (this_to_js Obj.magic x6452) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x6447 : Ojs.t) ->
                         fun (x6448 : Ojs.t) ->
                           fun (x6449 : Ojs.t) ->
                             fun (x6450 : Ojs.t) ->
                               Ojs.float_to_js
                                 (x6446
                                    ~previousValue:(Ojs.float_of_js x6447)
                                    ~currentValue:(Ojs.float_of_js x6448)
                                    ~currentIndex:(Ojs.float_of_js x6449)
                                    ~array:(t_of_js x6450))));(Ojs.float_to_js
                                                                 x6451)|])
    let (reduceRight'' :
      'tags this ->
        callbackfn:(previousValue:'U ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x6460 : 'tags this) ->
        fun
          ~callbackfn:(x6454 :
                        previousValue:'U ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x6459 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic x6460) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x6455 : Ojs.t) ->
                         fun (x6456 : Ojs.t) ->
                           fun (x6457 : Ojs.t) ->
                             fun (x6458 : Ojs.t) ->
                               Obj.magic
                                 (x6454 ~previousValue:(Obj.magic x6455)
                                    ~currentValue:(Ojs.float_of_js x6456)
                                    ~currentIndex:(Ojs.float_of_js x6457)
                                    ~array:(t_of_js x6458))));(Obj.magic
                                                                 x6459)|])
    let (reverse : 'tags this -> t) =
      fun (x6462 : 'tags this) ->
        t_of_js (Ojs.call (this_to_js Obj.magic x6462) "reverse" [||])
    let (set_ :
      'tags this -> array:float ArrayLike.t -> ?offset:float -> unit -> unit)
      =
      fun (x6469 : 'tags this) ->
        fun ~array:(x6464 : float ArrayLike.t) ->
          fun ?offset:(x6465 : float option) ->
            fun () ->
              ignore
                (let x6471 = this_to_js Obj.magic x6469 in
                 Ojs.call (Ojs.get_prop_ascii x6471 "set") "apply"
                   [|x6471;((let x6466 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6466 "push"
                                  [|(ArrayLike.t_to_js Ojs.float_to_js x6464)|]);
                             (match x6465 with
                              | Some x6467 ->
                                  ignore
                                    (Ojs.call x6466 "push"
                                       [|(Ojs.float_to_js x6467)|])
                              | None -> ());
                             x6466))|])
    let (slice : 'tags this -> ?start:float -> ?end_:float -> unit -> t) =
      fun (x6477 : 'tags this) ->
        fun ?start:(x6472 : float option) ->
          fun ?end_:(x6473 : float option) ->
            fun () ->
              t_of_js
                (let x6479 = this_to_js Obj.magic x6477 in
                 Ojs.call (Ojs.get_prop_ascii x6479 "slice") "apply"
                   [|x6479;((let x6474 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x6472 with
                              | Some x6476 ->
                                  ignore
                                    (Ojs.call x6474 "push"
                                       [|(Ojs.float_to_js x6476)|])
                              | None -> ());
                             (match x6473 with
                              | Some x6475 ->
                                  ignore
                                    (Ojs.call x6474 "push"
                                       [|(Ojs.float_to_js x6475)|])
                              | None -> ());
                             x6474))|])
    let (some :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x6487 : 'tags this) ->
        fun
          ~predicate:(x6480 :
                       value:float -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x6481 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x6489 = this_to_js Obj.magic x6487 in
                 Ojs.call (Ojs.get_prop_ascii x6489 "some") "apply"
                   [|x6489;((let x6482 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6482 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x6484 : Ojs.t) ->
                                          fun (x6485 : Ojs.t) ->
                                            fun (x6486 : Ojs.t) ->
                                              unknown_to_js
                                                (x6480
                                                   ~value:(Ojs.float_of_js
                                                             x6484)
                                                   ~index:(Ojs.float_of_js
                                                             x6485)
                                                   ~array:(t_of_js x6486))))|]);
                             (match x6481 with
                              | Some x6483 ->
                                  ignore
                                    (Ojs.call x6482 "push"
                                       [|(any_to_js x6483)|])
                              | None -> ());
                             x6482))|])
    let (sort :
      'tags this ->
        ?compareFn:(a:float -> b:float -> float) -> unit -> 'tags this)
      =
      fun (x6495 : 'tags this) ->
        fun ?compareFn:(x6490 : (a:float -> b:float -> float) option) ->
          fun () ->
            this_of_js Obj.magic
              (let x6497 = this_to_js Obj.magic x6495 in
               Ojs.call (Ojs.get_prop_ascii x6497 "sort") "apply"
                 [|x6497;((let x6491 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x6490 with
                            | Some x6492 ->
                                ignore
                                  (Ojs.call x6491 "push"
                                     [|(Ojs.fun_to_js 2
                                          (fun (x6493 : Ojs.t) ->
                                             fun (x6494 : Ojs.t) ->
                                               Ojs.float_to_js
                                                 (x6492
                                                    ~a:(Ojs.float_of_js x6493)
                                                    ~b:(Ojs.float_of_js x6494))))|])
                            | None -> ());
                           x6491))|])
    let (subarray : 'tags this -> ?begin_:float -> ?end_:float -> unit -> t)
      =
      fun (x6504 : 'tags this) ->
        fun ?begin_:(x6499 : float option) ->
          fun ?end_:(x6500 : float option) ->
            fun () ->
              t_of_js
                (let x6506 = this_to_js Obj.magic x6504 in
                 Ojs.call (Ojs.get_prop_ascii x6506 "subarray") "apply"
                   [|x6506;((let x6501 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x6499 with
                              | Some x6503 ->
                                  ignore
                                    (Ojs.call x6501 "push"
                                       [|(Ojs.float_to_js x6503)|])
                              | None -> ());
                             (match x6500 with
                              | Some x6502 ->
                                  ignore
                                    (Ojs.call x6501 "push"
                                       [|(Ojs.float_to_js x6502)|])
                              | None -> ());
                             x6501))|])
    let (toLocaleString : 'tags this -> string) =
      fun (x6507 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x6507) "toLocaleString" [||])
    let (toString : 'tags this -> string) =
      fun (x6509 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x6509) "toString" [||])
    let (valueOf : 'tags this -> t) =
      fun (x6511 : 'tags this) ->
        t_of_js (Ojs.call (this_to_js Obj.magic x6511) "valueOf" [||])
    let (get : 'tags this -> float -> float) =
      fun (x6513 : 'tags this) ->
        fun (x6515 : float) ->
          Ojs.float_of_js
            (Ojs.get_prop (this_to_js Obj.magic x6513)
               (Ojs.float_to_js x6515))
    let (set : 'tags this -> float -> float -> unit) =
      fun (x6516 : 'tags this) ->
        fun (x6518 : float) ->
          fun (x6519 : float) ->
            Ojs.set_prop (this_to_js Obj.magic x6516) (Ojs.float_to_js x6518)
              (Ojs.float_to_js x6519)
    let (create : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Float32Array") [||])
    let (create' : float Iterable.t -> t) =
      fun (x6520 : float Iterable.t) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Float32Array")
             [|(Iterable.t_to_js Ojs.float_to_js x6520)|])
    let (from :
      arrayLike:float Iterable.t ->
        ?mapfn:(v:float -> k:float -> float) -> ?thisArg:any -> unit -> t)
      =
      fun ~arrayLike:(x6522 : float Iterable.t) ->
        fun ?mapfn:(x6523 : (v:float -> k:float -> float) option) ->
          fun ?thisArg:(x6524 : any option) ->
            fun () ->
              t_of_js
                (let x6531 = Ojs.get_prop_ascii Ojs.global "Float32Array" in
                 Ojs.call (Ojs.get_prop_ascii x6531 "from") "apply"
                   [|x6531;((let x6525 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6525 "push"
                                  [|(Iterable.t_to_js Ojs.float_to_js x6522)|]);
                             (match x6523 with
                              | Some x6527 ->
                                  ignore
                                    (Ojs.call x6525 "push"
                                       [|(Ojs.fun_to_js 2
                                            (fun (x6528 : Ojs.t) ->
                                               fun (x6529 : Ojs.t) ->
                                                 Ojs.float_to_js
                                                   (x6527
                                                      ~v:(Ojs.float_of_js
                                                            x6528)
                                                      ~k:(Ojs.float_of_js
                                                            x6529))))|])
                              | None -> ());
                             (match x6524 with
                              | Some x6526 ->
                                  ignore
                                    (Ojs.call x6525 "push"
                                       [|(any_to_js x6526)|])
                              | None -> ());
                             x6525))|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Float32Array")
             "prototype")
    let (create'' : float -> t) =
      fun (x6532 : float) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Float32Array")
             [|(Ojs.float_to_js x6532)|])
    let (create''' :
      [ `U1 of float ArrayLike.t  | `U2 of ArrayBufferLike.t ] -> t) =
      fun (x6533 : [ `U1 of float ArrayLike.t  | `U2 of ArrayBufferLike.t ])
        ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Float32Array")
             [|((match x6533 with
                 | `U1 x6534 -> ArrayLike.t_to_js Ojs.float_to_js x6534
                 | `U2 x6536 -> ArrayBufferLike.t_to_js x6536))|])
    let (create'''' :
      buffer:ArrayBufferLike.t ->
        ?byteOffset:float -> ?length:float -> unit -> t)
      =
      fun ~buffer:(x6537 : ArrayBufferLike.t) ->
        fun ?byteOffset:(x6538 : float option) ->
          fun ?length:(x6539 : float option) ->
            fun () ->
              t_of_js
                (Ojs.new_obj_arr
                   (Ojs.get_prop_ascii Ojs.global "Float32Array")
                   (let x6540 =
                      Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                        [||] in
                    ignore
                      (Ojs.call x6540 "push"
                         [|(ArrayBufferLike.t_to_js x6537)|]);
                    (match x6538 with
                     | Some x6542 ->
                         ignore
                           (Ojs.call x6540 "push" [|(Ojs.float_to_js x6542)|])
                     | None -> ());
                    (match x6539 with
                     | Some x6541 ->
                         ignore
                           (Ojs.call x6540 "push" [|(Ojs.float_to_js x6541)|])
                     | None -> ());
                    x6540))
    let (bytes_per_element : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Float32Array")
             "BYTES_PER_ELEMENT")
    let (of_ : float list -> t) =
      fun (x6543 : float list) ->
        t_of_js
          (let x6546 = Ojs.get_prop_ascii Ojs.global "Float32Array" in
           Ojs.call (Ojs.get_prop_ascii x6546 "of") "apply"
             [|x6546;((let x6544 =
                         Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                           [||] in
                       List.iter
                         (fun (x6545 : float) ->
                            ignore
                              (Ojs.call x6544 "push"
                                 [|(Ojs.float_to_js x6545)|])) x6543;
                       x6544))|])
    let (from' : float ArrayLike.t -> t) =
      fun (x6547 : float ArrayLike.t) ->
        t_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Float32Array") "from"
             [|(ArrayLike.t_to_js Ojs.float_to_js x6547)|])
    let (from'' :
      arrayLike:'T ArrayLike.t ->
        mapfn:(v:'T -> k:float -> float) -> ?thisArg:any -> unit -> t)
      =
      fun ~arrayLike:(x6549 : 'T ArrayLike.t) ->
        fun ~mapfn:(x6550 : v:'T -> k:float -> float) ->
          fun ?thisArg:(x6551 : any option) ->
            fun () ->
              t_of_js
                (let x6557 = Ojs.get_prop_ascii Ojs.global "Float32Array" in
                 Ojs.call (Ojs.get_prop_ascii x6557 "from") "apply"
                   [|x6557;((let x6552 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6552 "push"
                                  [|(ArrayLike.t_to_js Obj.magic x6549)|]);
                             ignore
                               (Ojs.call x6552 "push"
                                  [|(Ojs.fun_to_js 2
                                       (fun (x6554 : Ojs.t) ->
                                          fun (x6555 : Ojs.t) ->
                                            Ojs.float_to_js
                                              (x6550 ~v:(Obj.magic x6554)
                                                 ~k:(Ojs.float_of_js x6555))))|]);
                             (match x6551 with
                              | Some x6553 ->
                                  ignore
                                    (Ojs.call x6552 "push"
                                       [|(any_to_js x6553)|])
                              | None -> ());
                             x6552))|])
    let cast_from = Obj.magic
  end
module FinalizationRegistry =
  struct
    type 'T t = [ `FinalizationRegistry of 'T ] intf
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun _T -> Obj.magic
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun _T -> Obj.magic
    type 'T tags = [ `FinalizationRegistry of 'T ]
    type ('tags, 'T) this =
      'tags intf constraint 'tags = [> `FinalizationRegistry of 'T ]
    let rec this_of_js :
      'tags 'T .
        (Ojs.t -> 'tags) -> (Ojs.t -> 'T) -> Ojs.t -> ('tags, 'T) this
      =
      fun (type __tags) ->
        fun (type __T) ->
          fun (__tags_of_js : Ojs.t -> __tags) ->
            fun (__T_of_js : Ojs.t -> __T) ->
              fun (x6560 : Ojs.t) -> intf_of_js __tags_of_js x6560
    and this_to_js :
      'tags 'T .
        ('tags -> Ojs.t) -> ('T -> Ojs.t) -> ('tags, 'T) this -> Ojs.t
      =
      fun (type __tags) ->
        fun (type __T) ->
          fun (__tags_to_js : __tags -> Ojs.t) ->
            fun (__T_to_js : __T -> Ojs.t) ->
              fun (x6558 : __tags intf) -> intf_to_js __tags_to_js x6558
    let (register :
      ('tags, 'T) this ->
        target:untyped_object ->
          heldValue:'T -> ?unregisterToken:untyped_object -> unit -> unit)
      =
      fun (x6567 : ('tags, 'T) this) ->
        fun ~target:(x6562 : untyped_object) ->
          fun ~heldValue:(x6563 : 'T) ->
            fun ?unregisterToken:(x6564 : untyped_object option) ->
              fun () ->
                ignore
                  (let x6570 = this_to_js Obj.magic Obj.magic x6567 in
                   Ojs.call (Ojs.get_prop_ascii x6570 "register") "apply"
                     [|x6570;((let x6565 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x6565 "push"
                                    [|(untyped_object_to_js x6562)|]);
                               ignore
                                 (Ojs.call x6565 "push" [|(Obj.magic x6563)|]);
                               (match x6564 with
                                | Some x6566 ->
                                    ignore
                                      (Ojs.call x6565 "push"
                                         [|(untyped_object_to_js x6566)|])
                                | None -> ());
                               x6565))|])
    let (unregister :
      ('tags, 'T) this -> unregisterToken:untyped_object -> unit) =
      fun (x6572 : ('tags, 'T) this) ->
        fun ~unregisterToken:(x6571 : untyped_object) ->
          ignore
            (Ojs.call (this_to_js Obj.magic Obj.magic x6572) "unregister"
               [|(untyped_object_to_js x6571)|])
    let (prototype : unit -> any t) =
      fun () ->
        t_of_js any_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "FinalizationRegistry")
             "prototype")
    let (create : ('T -> unit) -> 'T t) =
      fun (x6576 : 'T -> unit) ->
        t_of_js Obj.magic
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "FinalizationRegistry")
             [|(Ojs.fun_to_js 1
                  (fun (x6577 : Ojs.t) -> x6576 (Obj.magic x6577)))|])
    let cast_from = Obj.magic
  end
module Extract =
  struct
    type ('T, 'U) t = any
    let rec t_of_js :
      'T 'U . (Ojs.t -> 'T) -> (Ojs.t -> 'U) -> Ojs.t -> ('T, 'U) t =
      fun (type __T) ->
        fun (type __U) ->
          fun (__T_of_js : Ojs.t -> __T) ->
            fun (__U_of_js : Ojs.t -> __U) ->
              fun (x6580 : Ojs.t) -> any_of_js x6580
    and t_to_js :
      'T 'U . ('T -> Ojs.t) -> ('U -> Ojs.t) -> ('T, 'U) t -> Ojs.t =
      fun (type __T) ->
        fun (type __U) ->
          fun (__T_to_js : __T -> Ojs.t) ->
            fun (__U_to_js : __U -> Ojs.t) ->
              fun (x6579 : any) -> any_to_js x6579
  end
module EvalError =
  struct
    type t = [ `Error  | `EvalError ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type tags = [ `Error  | `EvalError ]
    type 'tags this = 'tags intf constraint 'tags = [> `EvalError ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x6583 : Ojs.t) -> intf_of_js __tags_of_js x6583
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x6581 : __tags intf) -> intf_to_js __tags_to_js x6581
    let (create : ?message:string -> ?options:ErrorOptions.t -> unit -> t) =
      fun ?message:(x6585 : string option) ->
        fun ?options:(x6586 : ErrorOptions.t option) ->
          fun () ->
            t_of_js
              (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "EvalError")
                 (let x6587 =
                    Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                  (match x6585 with
                   | Some x6589 ->
                       ignore
                         (Ojs.call x6587 "push" [|(Ojs.string_to_js x6589)|])
                   | None -> ());
                  (match x6586 with
                   | Some x6588 ->
                       ignore
                         (Ojs.call x6587 "push"
                            [|(ErrorOptions.t_to_js x6588)|])
                   | None -> ());
                  x6587))
    let (invoke : ?message:string -> ?options:ErrorOptions.t -> unit -> t) =
      fun ?message:(x6590 : string option) ->
        fun ?options:(x6591 : ErrorOptions.t option) ->
          fun () ->
            t_of_js
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "EvalError") "apply"
                 [|Ojs.null;((let x6592 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              (match x6590 with
                               | Some x6594 ->
                                   ignore
                                     (Ojs.call x6592 "push"
                                        [|(Ojs.string_to_js x6594)|])
                               | None -> ());
                              (match x6591 with
                               | Some x6593 ->
                                   ignore
                                     (Ojs.call x6592 "push"
                                        [|(ErrorOptions.t_to_js x6593)|])
                               | None -> ());
                              x6592))|])
    let (create' : ?message:string -> unit -> t) =
      fun ?message:(x6595 : string option) ->
        fun () ->
          t_of_js
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "EvalError")
               (let x6596 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x6595 with
                 | Some x6597 ->
                     ignore
                       (Ojs.call x6596 "push" [|(Ojs.string_to_js x6597)|])
                 | None -> ());
                x6596))
    let (invoke' : ?message:string -> unit -> t) =
      fun ?message:(x6598 : string option) ->
        fun () ->
          t_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "EvalError") "apply"
               [|Ojs.null;((let x6599 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x6598 with
                             | Some x6600 ->
                                 ignore
                                   (Ojs.call x6599 "push"
                                      [|(Ojs.string_to_js x6600)|])
                             | None -> ());
                            x6599))|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "EvalError")
             "prototype")
    let cast_from = Obj.magic
  end
module DataView =
  struct
    module AnonymousInterface0 =
      struct
        type t = Ojs.t
        let rec t_of_js : Ojs.t -> t = fun (x6602 : Ojs.t) -> x6602
        and t_to_js : t -> Ojs.t = fun (x6601 : Ojs.t) -> x6601
        let (get_BYTES_PER_ELEMENT : t -> never option) =
          fun (x6603 : t) ->
            Ojs.option_of_js never_of_js
              (Ojs.get_prop_ascii (t_to_js x6603) "BYTES_PER_ELEMENT")
        let (set_BYTES_PER_ELEMENT : t -> never -> unit) =
          fun (x6605 : t) ->
            fun (x6606 : never) ->
              Ojs.set_prop_ascii (t_to_js x6605) "BYTES_PER_ELEMENT"
                (never_to_js x6606)
        let (create : ?bytes_per_element:never -> unit -> t) =
          fun ?bytes_per_element:(x6607 : never option) ->
            fun () ->
              let x6608 = Ojs.empty_obj () in
              (match x6607 with
               | Some x6609 ->
                   Ojs.set_prop_ascii x6608 "BYTES_PER_ELEMENT"
                     (never_to_js x6609)
               | None -> ());
              t_of_js x6608
      end
    type t = [ `DataView ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type tags = [ `DataView ]
    type 'tags this = 'tags intf constraint 'tags = [> `DataView ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x6612 : Ojs.t) -> intf_of_js __tags_of_js x6612
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x6610 : __tags intf) -> intf_to_js __tags_to_js x6610
    let (getBigInt64 :
      'tags this -> byteOffset:float -> ?littleEndian:bool -> unit -> bigint)
      =
      fun (x6618 : 'tags this) ->
        fun ~byteOffset:(x6614 : float) ->
          fun ?littleEndian:(x6615 : bool option) ->
            fun () ->
              bigint_of_js
                (let x6620 = this_to_js Obj.magic x6618 in
                 Ojs.call (Ojs.get_prop_ascii x6620 "getBigInt64") "apply"
                   [|x6620;((let x6616 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6616 "push"
                                  [|(Ojs.float_to_js x6614)|]);
                             (match x6615 with
                              | Some x6617 ->
                                  ignore
                                    (Ojs.call x6616 "push"
                                       [|(Ojs.bool_to_js x6617)|])
                              | None -> ());
                             x6616))|])
    let (getBigUint64 :
      'tags this -> byteOffset:float -> ?littleEndian:bool -> unit -> bigint)
      =
      fun (x6625 : 'tags this) ->
        fun ~byteOffset:(x6621 : float) ->
          fun ?littleEndian:(x6622 : bool option) ->
            fun () ->
              bigint_of_js
                (let x6627 = this_to_js Obj.magic x6625 in
                 Ojs.call (Ojs.get_prop_ascii x6627 "getBigUint64") "apply"
                   [|x6627;((let x6623 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6623 "push"
                                  [|(Ojs.float_to_js x6621)|]);
                             (match x6622 with
                              | Some x6624 ->
                                  ignore
                                    (Ojs.call x6623 "push"
                                       [|(Ojs.bool_to_js x6624)|])
                              | None -> ());
                             x6623))|])
    let (setBigInt64 :
      'tags this ->
        byteOffset:float ->
          value:bigint -> ?littleEndian:bool -> unit -> unit)
      =
      fun (x6633 : 'tags this) ->
        fun ~byteOffset:(x6628 : float) ->
          fun ~value:(x6629 : bigint) ->
            fun ?littleEndian:(x6630 : bool option) ->
              fun () ->
                ignore
                  (let x6635 = this_to_js Obj.magic x6633 in
                   Ojs.call (Ojs.get_prop_ascii x6635 "setBigInt64") "apply"
                     [|x6635;((let x6631 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x6631 "push"
                                    [|(Ojs.float_to_js x6628)|]);
                               ignore
                                 (Ojs.call x6631 "push"
                                    [|(bigint_to_js x6629)|]);
                               (match x6630 with
                                | Some x6632 ->
                                    ignore
                                      (Ojs.call x6631 "push"
                                         [|(Ojs.bool_to_js x6632)|])
                                | None -> ());
                               x6631))|])
    let (setBigUint64 :
      'tags this ->
        byteOffset:float ->
          value:bigint -> ?littleEndian:bool -> unit -> unit)
      =
      fun (x6641 : 'tags this) ->
        fun ~byteOffset:(x6636 : float) ->
          fun ~value:(x6637 : bigint) ->
            fun ?littleEndian:(x6638 : bool option) ->
              fun () ->
                ignore
                  (let x6643 = this_to_js Obj.magic x6641 in
                   Ojs.call (Ojs.get_prop_ascii x6643 "setBigUint64") "apply"
                     [|x6643;((let x6639 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x6639 "push"
                                    [|(Ojs.float_to_js x6636)|]);
                               ignore
                                 (Ojs.call x6639 "push"
                                    [|(bigint_to_js x6637)|]);
                               (match x6638 with
                                | Some x6640 ->
                                    ignore
                                      (Ojs.call x6639 "push"
                                         [|(Ojs.bool_to_js x6640)|])
                                | None -> ());
                               x6639))|])
    let (get_buffer : 'tags this -> ArrayBuffer.t) =
      fun (x6644 : 'tags this) ->
        ArrayBuffer.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6644) "buffer")
    let (get_byteLength : 'tags this -> float) =
      fun (x6646 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6646) "byteLength")
    let (get_byteOffset : 'tags this -> float) =
      fun (x6648 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6648) "byteOffset")
    let (getFloat32 :
      'tags this -> byteOffset:float -> ?littleEndian:bool -> unit -> float)
      =
      fun (x6654 : 'tags this) ->
        fun ~byteOffset:(x6650 : float) ->
          fun ?littleEndian:(x6651 : bool option) ->
            fun () ->
              Ojs.float_of_js
                (let x6656 = this_to_js Obj.magic x6654 in
                 Ojs.call (Ojs.get_prop_ascii x6656 "getFloat32") "apply"
                   [|x6656;((let x6652 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6652 "push"
                                  [|(Ojs.float_to_js x6650)|]);
                             (match x6651 with
                              | Some x6653 ->
                                  ignore
                                    (Ojs.call x6652 "push"
                                       [|(Ojs.bool_to_js x6653)|])
                              | None -> ());
                             x6652))|])
    let (getFloat64 :
      'tags this -> byteOffset:float -> ?littleEndian:bool -> unit -> float)
      =
      fun (x6661 : 'tags this) ->
        fun ~byteOffset:(x6657 : float) ->
          fun ?littleEndian:(x6658 : bool option) ->
            fun () ->
              Ojs.float_of_js
                (let x6663 = this_to_js Obj.magic x6661 in
                 Ojs.call (Ojs.get_prop_ascii x6663 "getFloat64") "apply"
                   [|x6663;((let x6659 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6659 "push"
                                  [|(Ojs.float_to_js x6657)|]);
                             (match x6658 with
                              | Some x6660 ->
                                  ignore
                                    (Ojs.call x6659 "push"
                                       [|(Ojs.bool_to_js x6660)|])
                              | None -> ());
                             x6659))|])
    let (getInt8 : 'tags this -> byteOffset:float -> float) =
      fun (x6665 : 'tags this) ->
        fun ~byteOffset:(x6664 : float) ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x6665) "getInt8"
               [|(Ojs.float_to_js x6664)|])
    let (getInt16 :
      'tags this -> byteOffset:float -> ?littleEndian:bool -> unit -> float)
      =
      fun (x6671 : 'tags this) ->
        fun ~byteOffset:(x6667 : float) ->
          fun ?littleEndian:(x6668 : bool option) ->
            fun () ->
              Ojs.float_of_js
                (let x6673 = this_to_js Obj.magic x6671 in
                 Ojs.call (Ojs.get_prop_ascii x6673 "getInt16") "apply"
                   [|x6673;((let x6669 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6669 "push"
                                  [|(Ojs.float_to_js x6667)|]);
                             (match x6668 with
                              | Some x6670 ->
                                  ignore
                                    (Ojs.call x6669 "push"
                                       [|(Ojs.bool_to_js x6670)|])
                              | None -> ());
                             x6669))|])
    let (getInt32 :
      'tags this -> byteOffset:float -> ?littleEndian:bool -> unit -> float)
      =
      fun (x6678 : 'tags this) ->
        fun ~byteOffset:(x6674 : float) ->
          fun ?littleEndian:(x6675 : bool option) ->
            fun () ->
              Ojs.float_of_js
                (let x6680 = this_to_js Obj.magic x6678 in
                 Ojs.call (Ojs.get_prop_ascii x6680 "getInt32") "apply"
                   [|x6680;((let x6676 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6676 "push"
                                  [|(Ojs.float_to_js x6674)|]);
                             (match x6675 with
                              | Some x6677 ->
                                  ignore
                                    (Ojs.call x6676 "push"
                                       [|(Ojs.bool_to_js x6677)|])
                              | None -> ());
                             x6676))|])
    let (getUint8 : 'tags this -> byteOffset:float -> float) =
      fun (x6682 : 'tags this) ->
        fun ~byteOffset:(x6681 : float) ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x6682) "getUint8"
               [|(Ojs.float_to_js x6681)|])
    let (getUint16 :
      'tags this -> byteOffset:float -> ?littleEndian:bool -> unit -> float)
      =
      fun (x6688 : 'tags this) ->
        fun ~byteOffset:(x6684 : float) ->
          fun ?littleEndian:(x6685 : bool option) ->
            fun () ->
              Ojs.float_of_js
                (let x6690 = this_to_js Obj.magic x6688 in
                 Ojs.call (Ojs.get_prop_ascii x6690 "getUint16") "apply"
                   [|x6690;((let x6686 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6686 "push"
                                  [|(Ojs.float_to_js x6684)|]);
                             (match x6685 with
                              | Some x6687 ->
                                  ignore
                                    (Ojs.call x6686 "push"
                                       [|(Ojs.bool_to_js x6687)|])
                              | None -> ());
                             x6686))|])
    let (getUint32 :
      'tags this -> byteOffset:float -> ?littleEndian:bool -> unit -> float)
      =
      fun (x6695 : 'tags this) ->
        fun ~byteOffset:(x6691 : float) ->
          fun ?littleEndian:(x6692 : bool option) ->
            fun () ->
              Ojs.float_of_js
                (let x6697 = this_to_js Obj.magic x6695 in
                 Ojs.call (Ojs.get_prop_ascii x6697 "getUint32") "apply"
                   [|x6697;((let x6693 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6693 "push"
                                  [|(Ojs.float_to_js x6691)|]);
                             (match x6692 with
                              | Some x6694 ->
                                  ignore
                                    (Ojs.call x6693 "push"
                                       [|(Ojs.bool_to_js x6694)|])
                              | None -> ());
                             x6693))|])
    let (setFloat32 :
      'tags this ->
        byteOffset:float -> value:float -> ?littleEndian:bool -> unit -> unit)
      =
      fun (x6703 : 'tags this) ->
        fun ~byteOffset:(x6698 : float) ->
          fun ~value:(x6699 : float) ->
            fun ?littleEndian:(x6700 : bool option) ->
              fun () ->
                ignore
                  (let x6705 = this_to_js Obj.magic x6703 in
                   Ojs.call (Ojs.get_prop_ascii x6705 "setFloat32") "apply"
                     [|x6705;((let x6701 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x6701 "push"
                                    [|(Ojs.float_to_js x6698)|]);
                               ignore
                                 (Ojs.call x6701 "push"
                                    [|(Ojs.float_to_js x6699)|]);
                               (match x6700 with
                                | Some x6702 ->
                                    ignore
                                      (Ojs.call x6701 "push"
                                         [|(Ojs.bool_to_js x6702)|])
                                | None -> ());
                               x6701))|])
    let (setFloat64 :
      'tags this ->
        byteOffset:float -> value:float -> ?littleEndian:bool -> unit -> unit)
      =
      fun (x6711 : 'tags this) ->
        fun ~byteOffset:(x6706 : float) ->
          fun ~value:(x6707 : float) ->
            fun ?littleEndian:(x6708 : bool option) ->
              fun () ->
                ignore
                  (let x6713 = this_to_js Obj.magic x6711 in
                   Ojs.call (Ojs.get_prop_ascii x6713 "setFloat64") "apply"
                     [|x6713;((let x6709 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x6709 "push"
                                    [|(Ojs.float_to_js x6706)|]);
                               ignore
                                 (Ojs.call x6709 "push"
                                    [|(Ojs.float_to_js x6707)|]);
                               (match x6708 with
                                | Some x6710 ->
                                    ignore
                                      (Ojs.call x6709 "push"
                                         [|(Ojs.bool_to_js x6710)|])
                                | None -> ());
                               x6709))|])
    let (setInt8 : 'tags this -> byteOffset:float -> value:float -> unit) =
      fun (x6716 : 'tags this) ->
        fun ~byteOffset:(x6714 : float) ->
          fun ~value:(x6715 : float) ->
            ignore
              (Ojs.call (this_to_js Obj.magic x6716) "setInt8"
                 [|(Ojs.float_to_js x6714);(Ojs.float_to_js x6715)|])
    let (setInt16 :
      'tags this ->
        byteOffset:float -> value:float -> ?littleEndian:bool -> unit -> unit)
      =
      fun (x6723 : 'tags this) ->
        fun ~byteOffset:(x6718 : float) ->
          fun ~value:(x6719 : float) ->
            fun ?littleEndian:(x6720 : bool option) ->
              fun () ->
                ignore
                  (let x6725 = this_to_js Obj.magic x6723 in
                   Ojs.call (Ojs.get_prop_ascii x6725 "setInt16") "apply"
                     [|x6725;((let x6721 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x6721 "push"
                                    [|(Ojs.float_to_js x6718)|]);
                               ignore
                                 (Ojs.call x6721 "push"
                                    [|(Ojs.float_to_js x6719)|]);
                               (match x6720 with
                                | Some x6722 ->
                                    ignore
                                      (Ojs.call x6721 "push"
                                         [|(Ojs.bool_to_js x6722)|])
                                | None -> ());
                               x6721))|])
    let (setInt32 :
      'tags this ->
        byteOffset:float -> value:float -> ?littleEndian:bool -> unit -> unit)
      =
      fun (x6731 : 'tags this) ->
        fun ~byteOffset:(x6726 : float) ->
          fun ~value:(x6727 : float) ->
            fun ?littleEndian:(x6728 : bool option) ->
              fun () ->
                ignore
                  (let x6733 = this_to_js Obj.magic x6731 in
                   Ojs.call (Ojs.get_prop_ascii x6733 "setInt32") "apply"
                     [|x6733;((let x6729 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x6729 "push"
                                    [|(Ojs.float_to_js x6726)|]);
                               ignore
                                 (Ojs.call x6729 "push"
                                    [|(Ojs.float_to_js x6727)|]);
                               (match x6728 with
                                | Some x6730 ->
                                    ignore
                                      (Ojs.call x6729 "push"
                                         [|(Ojs.bool_to_js x6730)|])
                                | None -> ());
                               x6729))|])
    let (setUint8 : 'tags this -> byteOffset:float -> value:float -> unit) =
      fun (x6736 : 'tags this) ->
        fun ~byteOffset:(x6734 : float) ->
          fun ~value:(x6735 : float) ->
            ignore
              (Ojs.call (this_to_js Obj.magic x6736) "setUint8"
                 [|(Ojs.float_to_js x6734);(Ojs.float_to_js x6735)|])
    let (setUint16 :
      'tags this ->
        byteOffset:float -> value:float -> ?littleEndian:bool -> unit -> unit)
      =
      fun (x6743 : 'tags this) ->
        fun ~byteOffset:(x6738 : float) ->
          fun ~value:(x6739 : float) ->
            fun ?littleEndian:(x6740 : bool option) ->
              fun () ->
                ignore
                  (let x6745 = this_to_js Obj.magic x6743 in
                   Ojs.call (Ojs.get_prop_ascii x6745 "setUint16") "apply"
                     [|x6745;((let x6741 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x6741 "push"
                                    [|(Ojs.float_to_js x6738)|]);
                               ignore
                                 (Ojs.call x6741 "push"
                                    [|(Ojs.float_to_js x6739)|]);
                               (match x6740 with
                                | Some x6742 ->
                                    ignore
                                      (Ojs.call x6741 "push"
                                         [|(Ojs.bool_to_js x6742)|])
                                | None -> ());
                               x6741))|])
    let (setUint32 :
      'tags this ->
        byteOffset:float -> value:float -> ?littleEndian:bool -> unit -> unit)
      =
      fun (x6751 : 'tags this) ->
        fun ~byteOffset:(x6746 : float) ->
          fun ~value:(x6747 : float) ->
            fun ?littleEndian:(x6748 : bool option) ->
              fun () ->
                ignore
                  (let x6753 = this_to_js Obj.magic x6751 in
                   Ojs.call (Ojs.get_prop_ascii x6753 "setUint32") "apply"
                     [|x6753;((let x6749 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x6749 "push"
                                    [|(Ojs.float_to_js x6746)|]);
                               ignore
                                 (Ojs.call x6749 "push"
                                    [|(Ojs.float_to_js x6747)|]);
                               (match x6748 with
                                | Some x6750 ->
                                    ignore
                                      (Ojs.call x6749 "push"
                                         [|(Ojs.bool_to_js x6750)|])
                                | None -> ());
                               x6749))|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "DataView")
             "prototype")
    let (create :
      buffer:(ArrayBufferLike.t, AnonymousInterface0.t) intersection2 ->
        ?byteOffset:float -> ?byteLength:float -> unit -> t)
      =
      fun
        ~buffer:(x6754 :
                  (ArrayBufferLike.t, AnonymousInterface0.t) intersection2)
        ->
        fun ?byteOffset:(x6755 : float option) ->
          fun ?byteLength:(x6756 : float option) ->
            fun () ->
              t_of_js
                (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "DataView")
                   (let x6757 =
                      Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                        [||] in
                    ignore
                      (Ojs.call x6757 "push"
                         [|(intersection2_to_js ArrayBufferLike.t_to_js
                              AnonymousInterface0.t_to_js x6754)|]);
                    (match x6755 with
                     | Some x6759 ->
                         ignore
                           (Ojs.call x6757 "push" [|(Ojs.float_to_js x6759)|])
                     | None -> ());
                    (match x6756 with
                     | Some x6758 ->
                         ignore
                           (Ojs.call x6757 "push" [|(Ojs.float_to_js x6758)|])
                     | None -> ());
                    x6757))
    let cast_from = Obj.magic
  end
module ConstructorParameters =
  struct
    module AnonymousInterface16 =
      struct
        type t = Ojs.t
        let rec t_of_js : Ojs.t -> t = fun (x6763 : Ojs.t) -> x6763
        and t_to_js : t -> Ojs.t = fun (x6762 : Ojs.t) -> x6762
        let (create : t -> args:any list -> any) =
          fun (x6767 : t) ->
            fun ~args:(x6764 : any list) ->
              any_of_js
                (Ojs.new_obj_arr (t_to_js x6767)
                   (let x6765 =
                      Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                        [||] in
                    List.iter
                      (fun (x6766 : any) ->
                         ignore (Ojs.call x6765 "push" [|(any_to_js x6766)|]))
                      x6764;
                    x6765))
      end
    type 'T t = any
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun (type __T) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x6769 : Ojs.t) -> any_of_js x6769
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t =
      fun (type __T) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x6768 : any) -> any_to_js x6768
  end
module Capitalize =
  struct
    type 'S t = Ojs.t
    let rec t_of_js : 'S . (Ojs.t -> 'S) -> Ojs.t -> 'S t =
      fun (type __S) ->
        fun (__S_of_js : Ojs.t -> __S) -> fun (x6771 : Ojs.t) -> x6771
    and t_to_js : 'S . ('S -> Ojs.t) -> 'S t -> Ojs.t =
      fun (type __S) ->
        fun (__S_to_js : __S -> Ojs.t) -> fun (x6770 : Ojs.t) -> x6770
  end
module ThisParameterType =
  struct
    type 'T t = any
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun (type __T) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x6773 : Ojs.t) -> any_of_js x6773
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t =
      fun (type __T) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x6772 : any) -> any_to_js x6772
  end
module OmitThisParameter =
  struct
    type 'T t = any
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun (type __T) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x6775 : Ojs.t) -> any_of_js x6775
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t =
      fun (type __T) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x6774 : any) -> any_to_js x6774
  end
module CallableFunction =
  struct
    type t = [ `CallableFunction  | `Function  | `Function ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type tags = [ `CallableFunction  | `Function  | `Function ]
    type 'tags this = 'tags intf constraint 'tags = [> `CallableFunction ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x6778 : Ojs.t) -> intf_of_js __tags_of_js x6778
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x6776 : __tags intf) -> intf_to_js __tags_to_js x6776
    let (apply_ : 'tags this -> this:('T -> 'R) -> thisArg:'T -> 'R) =
      fun (x6783 : 'tags this) ->
        fun ~this:(x6780 : 'T -> 'R) ->
          fun ~thisArg:(x6782 : 'T) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic x6783) "apply"
                 [|(Ojs.fun_to_js 1
                      (fun (x6781 : Ojs.t) ->
                         Obj.magic (x6780 (Obj.magic x6781))));(Obj.magic
                                                                  x6782)|])
    let (apply_' :
      'tags this ->
        this:(this:'T -> args:any list -> 'R) -> thisArg:'T -> args:'A -> 'R)
      =
      fun (x6790 : 'tags this) ->
        fun ~this:(x6785 : this:'T -> args:any list -> 'R) ->
          fun ~thisArg:(x6788 : 'T) ->
            fun ~args:(x6789 : 'A) ->
              Obj.magic
                (Ojs.call (this_to_js Obj.magic x6790) "apply"
                   [|(Ojs.fun_to_js_args
                        (fun (x6786 : _) ->
                           Obj.magic
                             (x6785 ~this:(Obj.magic (Ojs.array_get x6786 0))
                                ~args:(Ojs.list_of_js_from any_of_js x6786 1))));(
                     Obj.magic x6788);(Obj.magic x6789)|])
    let (call :
      'tags this ->
        this:(this:'T -> args:any list -> 'R) ->
          thisArg:'T -> args:any list -> 'R)
      =
      fun (x6799 : 'tags this) ->
        fun ~this:(x6792 : this:'T -> args:any list -> 'R) ->
          fun ~thisArg:(x6793 : 'T) ->
            fun ~args:(x6794 : any list) ->
              Obj.magic
                (let x6801 = this_to_js Obj.magic x6799 in
                 Ojs.call (Ojs.get_prop_ascii x6801 "call") "apply"
                   [|x6801;((let x6795 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6795 "push"
                                  [|(Ojs.fun_to_js_args
                                       (fun (x6797 : _) ->
                                          Obj.magic
                                            (x6792
                                               ~this:(Obj.magic
                                                        (Ojs.array_get x6797
                                                           0))
                                               ~args:(Ojs.list_of_js_from
                                                        any_of_js x6797 1))))|]);
                             ignore
                               (Ojs.call x6795 "push" [|(Obj.magic x6793)|]);
                             List.iter
                               (fun (x6796 : any) ->
                                  ignore
                                    (Ojs.call x6795 "push"
                                       [|(any_to_js x6796)|])) x6794;
                             x6795))|])
    let (bind :
      'tags this ->
        this:'T -> thisArg:'T ThisParameterType.t -> 'T OmitThisParameter.t)
      =
      fun (x6805 : 'tags this) ->
        fun ~this:(x6802 : 'T) ->
          fun ~thisArg:(x6803 : 'T ThisParameterType.t) ->
            OmitThisParameter.t_of_js Obj.magic
              (Ojs.call (this_to_js Obj.magic x6805) "bind"
                 [|(Obj.magic x6802);(ThisParameterType.t_to_js Obj.magic
                                        x6803)|])
    let (bind' :
      'tags this ->
        this:(this:'T -> args:any list -> 'R) ->
          thisArg:'T -> args:any list -> any list -> 'R)
      =
      fun (x6815 : 'tags this) ->
        fun ~this:(x6808 : this:'T -> args:any list -> 'R) ->
          fun ~thisArg:(x6809 : 'T) ->
            fun ~args:(x6810 : any list) ->
              fun (x6818 : any list) ->
                Obj.magic
                  (Ojs.call
                     (let x6817 = this_to_js Obj.magic x6815 in
                      Ojs.call (Ojs.get_prop_ascii x6817 "bind") "apply"
                        [|x6817;((let x6811 =
                                    Ojs.new_obj
                                      (Ojs.get_prop_ascii Ojs.global "Array")
                                      [||] in
                                  ignore
                                    (Ojs.call x6811 "push"
                                       [|(Ojs.fun_to_js_args
                                            (fun (x6813 : _) ->
                                               Obj.magic
                                                 (x6808
                                                    ~this:(Obj.magic
                                                             (Ojs.array_get
                                                                x6813 0))
                                                    ~args:(Ojs.list_of_js_from
                                                             any_of_js x6813
                                                             1))))|]);
                                  ignore
                                    (Ojs.call x6811 "push"
                                       [|(Obj.magic x6809)|]);
                                  List.iter
                                    (fun (x6812 : any) ->
                                       ignore
                                         (Ojs.call x6811 "push"
                                            [|(any_to_js x6812)|])) x6810;
                                  x6811))|]) "apply"
                     [|Ojs.null;((let x6819 =
                                    Ojs.new_obj
                                      (Ojs.get_prop_ascii Ojs.global "Array")
                                      [||] in
                                  List.iter
                                    (fun (x6820 : any) ->
                                       ignore
                                         (Ojs.call x6819 "push"
                                            [|(any_to_js x6820)|])) x6818;
                                  x6819))|])
    let cast_from = Obj.magic
  end
module Boolean =
  struct
    type t = [ `Boolean ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type tags = [ `Boolean ]
    type 'tags this = 'tags intf constraint 'tags = [> `Boolean ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x6823 : Ojs.t) -> intf_of_js __tags_of_js x6823
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x6821 : __tags intf) -> intf_to_js __tags_to_js x6821
    let (valueOf : 'tags this -> bool) =
      fun (x6825 : 'tags this) ->
        Ojs.bool_of_js (Ojs.call (this_to_js Obj.magic x6825) "valueOf" [||])
    let (create : ?value:any -> unit -> t) =
      fun ?value:(x6827 : any option) ->
        fun () ->
          t_of_js
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "Boolean")
               (let x6828 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x6827 with
                 | Some x6829 ->
                     ignore (Ojs.call x6828 "push" [|(any_to_js x6829)|])
                 | None -> ());
                x6828))
    let (invoke : ?value:'T -> unit -> bool) =
      fun ?value:(x6830 : 'T option) ->
        fun () ->
          Ojs.bool_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "Boolean") "apply"
               [|Ojs.null;((let x6831 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x6830 with
                             | Some x6832 ->
                                 ignore
                                   (Ojs.call x6831 "push"
                                      [|(Obj.magic x6832)|])
                             | None -> ());
                            x6831))|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Boolean")
             "prototype")
    let cast_from = Obj.magic
    let (of_ml : bool -> t) =
      fun (x6833 : bool) -> t_of_js (Ojs.bool_to_js x6833)
    let (to_ml : t -> bool) =
      fun (x6834 : t) ->
        Ojs.bool_of_js (Ojs.call (t_to_js x6834) "valueOf" [||])
  end
module BigIntToLocaleStringOptions =
  struct
    type t = [ `BigIntToLocaleStringOptions ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type tags = [ `BigIntToLocaleStringOptions ]
    type 'tags this =
      'tags intf constraint 'tags = [> `BigIntToLocaleStringOptions ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x6837 : Ojs.t) -> intf_of_js __tags_of_js x6837
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x6835 : __tags intf) -> intf_to_js __tags_to_js x6835
    let (get_localeMatcher : 'tags this -> string option) =
      fun (x6839 : 'tags this) ->
        Ojs.option_of_js Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6839) "localeMatcher")
    let (set_localeMatcher : 'tags this -> string -> unit) =
      fun (x6842 : 'tags this) ->
        fun (x6843 : string) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x6842) "localeMatcher"
            (Ojs.string_to_js x6843)
    let (get_style : 'tags this -> string option) =
      fun (x6845 : 'tags this) ->
        Ojs.option_of_js Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6845) "style")
    let (set_style : 'tags this -> string -> unit) =
      fun (x6848 : 'tags this) ->
        fun (x6849 : string) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x6848) "style"
            (Ojs.string_to_js x6849)
    let (get_numberingSystem : 'tags this -> string option) =
      fun (x6851 : 'tags this) ->
        Ojs.option_of_js Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6851) "numberingSystem")
    let (set_numberingSystem : 'tags this -> string -> unit) =
      fun (x6854 : 'tags this) ->
        fun (x6855 : string) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x6854) "numberingSystem"
            (Ojs.string_to_js x6855)
    let (get_unit : 'tags this -> string option) =
      fun (x6857 : 'tags this) ->
        Ojs.option_of_js Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6857) "unit")
    let (set_unit : 'tags this -> string -> unit) =
      fun (x6860 : 'tags this) ->
        fun (x6861 : string) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x6860) "unit"
            (Ojs.string_to_js x6861)
    let (get_unitDisplay : 'tags this -> string option) =
      fun (x6863 : 'tags this) ->
        Ojs.option_of_js Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6863) "unitDisplay")
    let (set_unitDisplay : 'tags this -> string -> unit) =
      fun (x6866 : 'tags this) ->
        fun (x6867 : string) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x6866) "unitDisplay"
            (Ojs.string_to_js x6867)
    let (get_currency : 'tags this -> string option) =
      fun (x6869 : 'tags this) ->
        Ojs.option_of_js Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6869) "currency")
    let (set_currency : 'tags this -> string -> unit) =
      fun (x6872 : 'tags this) ->
        fun (x6873 : string) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x6872) "currency"
            (Ojs.string_to_js x6873)
    let (get_currencyDisplay : 'tags this -> string option) =
      fun (x6875 : 'tags this) ->
        Ojs.option_of_js Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6875) "currencyDisplay")
    let (set_currencyDisplay : 'tags this -> string -> unit) =
      fun (x6878 : 'tags this) ->
        fun (x6879 : string) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x6878) "currencyDisplay"
            (Ojs.string_to_js x6879)
    let (get_useGrouping : 'tags this -> bool option) =
      fun (x6881 : 'tags this) ->
        Ojs.option_of_js Ojs.bool_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6881) "useGrouping")
    let (set_useGrouping : 'tags this -> bool -> unit) =
      fun (x6884 : 'tags this) ->
        fun (x6885 : bool) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x6884) "useGrouping"
            (Ojs.bool_to_js x6885)
    let (get_minimumIntegerDigits :
      'tags this ->
        [ `L_n_1  | `L_n_10  | `L_n_11  | `L_n_12  | `L_n_13  | `L_n_14 
        | `L_n_15  | `L_n_16  | `L_n_17  | `L_n_18  | `L_n_19  | `L_n_2 
        | `L_n_20  | `L_n_21  | `L_n_3  | `L_n_4  | `L_n_5  | `L_n_6 
        | `L_n_7  | `L_n_8  | `L_n_9 ] option)
      =
      fun (x6887 : 'tags this) ->
        Ojs.option_of_js
          (fun (x6889 : Ojs.t) ->
             let x6890 = x6889 in
             match Ojs.int_of_js x6890 with
             | 1 -> `L_n_1
             | 10 -> `L_n_10
             | 11 -> `L_n_11
             | 12 -> `L_n_12
             | 13 -> `L_n_13
             | 14 -> `L_n_14
             | 15 -> `L_n_15
             | 16 -> `L_n_16
             | 17 -> `L_n_17
             | 18 -> `L_n_18
             | 19 -> `L_n_19
             | 2 -> `L_n_2
             | 20 -> `L_n_20
             | 21 -> `L_n_21
             | 3 -> `L_n_3
             | 4 -> `L_n_4
             | 5 -> `L_n_5
             | 6 -> `L_n_6
             | 7 -> `L_n_7
             | 8 -> `L_n_8
             | 9 -> `L_n_9
             | _ -> assert false)
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6887)
             "minimumIntegerDigits")
    let (set_minimumIntegerDigits :
      'tags this ->
        [ `U1 of [ `L_n_1 ]  | `U2 of [ `L_n_2 ]  | `U3 of [ `L_n_3 ] 
        | `U4 of [ `L_n_4 ]  | `U5 of [ `L_n_5 ]  | `U6 of [ `L_n_6 ] 
        | `U7 of [ `L_n_7 ]  | `U8 of [ `L_n_8 ]  | `U9 of [ `L_n_9 ] 
        | `U10 of [ `L_n_10 ]  | `U11 of [ `L_n_11 ]  | `U12 of [ `L_n_12 ] 
        | `U13 of [ `L_n_13 ]  | `U14 of [ `L_n_14 ]  | `U15 of [ `L_n_15 ] 
        | `U16 of [ `L_n_16 ]  | `U17 of [ `L_n_17 ]  | `U18 of [ `L_n_18 ] 
        | `U19 of [ `L_n_19 ]  | `U20 of [ `L_n_20 ]  | `U21 of [ `L_n_21 ] ]
          -> unit)
      =
      fun (x6891 : 'tags this) ->
        fun
          (x6892 :
            [ `U1 of [ `L_n_1 ]  | `U2 of [ `L_n_2 ]  | `U3 of [ `L_n_3 ] 
            | `U4 of [ `L_n_4 ]  | `U5 of [ `L_n_5 ]  | `U6 of [ `L_n_6 ] 
            | `U7 of [ `L_n_7 ]  | `U8 of [ `L_n_8 ]  | `U9 of [ `L_n_9 ] 
            | `U10 of [ `L_n_10 ]  | `U11 of [ `L_n_11 ] 
            | `U12 of [ `L_n_12 ]  | `U13 of [ `L_n_13 ] 
            | `U14 of [ `L_n_14 ]  | `U15 of [ `L_n_15 ] 
            | `U16 of [ `L_n_16 ]  | `U17 of [ `L_n_17 ] 
            | `U18 of [ `L_n_18 ]  | `U19 of [ `L_n_19 ] 
            | `U20 of [ `L_n_20 ]  | `U21 of [ `L_n_21 ] ])
          ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x6891)
            "minimumIntegerDigits"
            (match x6892 with
             | `U1 x6893 -> (match x6893 with | `L_n_1 -> Ojs.int_to_js 1)
             | `U2 x6894 -> (match x6894 with | `L_n_2 -> Ojs.int_to_js 2)
             | `U3 x6895 -> (match x6895 with | `L_n_3 -> Ojs.int_to_js 3)
             | `U4 x6896 -> (match x6896 with | `L_n_4 -> Ojs.int_to_js 4)
             | `U5 x6897 -> (match x6897 with | `L_n_5 -> Ojs.int_to_js 5)
             | `U6 x6898 -> (match x6898 with | `L_n_6 -> Ojs.int_to_js 6)
             | `U7 x6899 -> (match x6899 with | `L_n_7 -> Ojs.int_to_js 7)
             | `U8 x6900 -> (match x6900 with | `L_n_8 -> Ojs.int_to_js 8)
             | `U9 x6901 -> (match x6901 with | `L_n_9 -> Ojs.int_to_js 9)
             | `U10 x6902 -> (match x6902 with | `L_n_10 -> Ojs.int_to_js 10)
             | `U11 x6903 -> (match x6903 with | `L_n_11 -> Ojs.int_to_js 11)
             | `U12 x6904 -> (match x6904 with | `L_n_12 -> Ojs.int_to_js 12)
             | `U13 x6905 -> (match x6905 with | `L_n_13 -> Ojs.int_to_js 13)
             | `U14 x6906 -> (match x6906 with | `L_n_14 -> Ojs.int_to_js 14)
             | `U15 x6907 -> (match x6907 with | `L_n_15 -> Ojs.int_to_js 15)
             | `U16 x6908 -> (match x6908 with | `L_n_16 -> Ojs.int_to_js 16)
             | `U17 x6909 -> (match x6909 with | `L_n_17 -> Ojs.int_to_js 17)
             | `U18 x6910 -> (match x6910 with | `L_n_18 -> Ojs.int_to_js 18)
             | `U19 x6911 -> (match x6911 with | `L_n_19 -> Ojs.int_to_js 19)
             | `U20 x6912 -> (match x6912 with | `L_n_20 -> Ojs.int_to_js 20)
             | `U21 x6913 -> (match x6913 with | `L_n_21 -> Ojs.int_to_js 21))
    let (get_minimumFractionDigits :
      'tags this ->
        [ `L_n_0  | `L_n_1  | `L_n_10  | `L_n_11  | `L_n_12  | `L_n_13 
        | `L_n_14  | `L_n_15  | `L_n_16  | `L_n_17  | `L_n_18  | `L_n_19 
        | `L_n_2  | `L_n_20  | `L_n_3  | `L_n_4  | `L_n_5  | `L_n_6 
        | `L_n_7  | `L_n_8  | `L_n_9 ] option)
      =
      fun (x6915 : 'tags this) ->
        Ojs.option_of_js
          (fun (x6917 : Ojs.t) ->
             let x6918 = x6917 in
             match Ojs.int_of_js x6918 with
             | 0 -> `L_n_0
             | 1 -> `L_n_1
             | 10 -> `L_n_10
             | 11 -> `L_n_11
             | 12 -> `L_n_12
             | 13 -> `L_n_13
             | 14 -> `L_n_14
             | 15 -> `L_n_15
             | 16 -> `L_n_16
             | 17 -> `L_n_17
             | 18 -> `L_n_18
             | 19 -> `L_n_19
             | 2 -> `L_n_2
             | 20 -> `L_n_20
             | 3 -> `L_n_3
             | 4 -> `L_n_4
             | 5 -> `L_n_5
             | 6 -> `L_n_6
             | 7 -> `L_n_7
             | 8 -> `L_n_8
             | 9 -> `L_n_9
             | _ -> assert false)
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6915)
             "minimumFractionDigits")
    let (set_minimumFractionDigits :
      'tags this ->
        [ `U1 of [ `L_n_0 ]  | `U2 of [ `L_n_1 ]  | `U3 of [ `L_n_2 ] 
        | `U4 of [ `L_n_3 ]  | `U5 of [ `L_n_4 ]  | `U6 of [ `L_n_5 ] 
        | `U7 of [ `L_n_6 ]  | `U8 of [ `L_n_7 ]  | `U9 of [ `L_n_8 ] 
        | `U10 of [ `L_n_9 ]  | `U11 of [ `L_n_10 ]  | `U12 of [ `L_n_11 ] 
        | `U13 of [ `L_n_12 ]  | `U14 of [ `L_n_13 ]  | `U15 of [ `L_n_14 ] 
        | `U16 of [ `L_n_15 ]  | `U17 of [ `L_n_16 ]  | `U18 of [ `L_n_17 ] 
        | `U19 of [ `L_n_18 ]  | `U20 of [ `L_n_19 ]  | `U21 of [ `L_n_20 ] ]
          -> unit)
      =
      fun (x6919 : 'tags this) ->
        fun
          (x6920 :
            [ `U1 of [ `L_n_0 ]  | `U2 of [ `L_n_1 ]  | `U3 of [ `L_n_2 ] 
            | `U4 of [ `L_n_3 ]  | `U5 of [ `L_n_4 ]  | `U6 of [ `L_n_5 ] 
            | `U7 of [ `L_n_6 ]  | `U8 of [ `L_n_7 ]  | `U9 of [ `L_n_8 ] 
            | `U10 of [ `L_n_9 ]  | `U11 of [ `L_n_10 ] 
            | `U12 of [ `L_n_11 ]  | `U13 of [ `L_n_12 ] 
            | `U14 of [ `L_n_13 ]  | `U15 of [ `L_n_14 ] 
            | `U16 of [ `L_n_15 ]  | `U17 of [ `L_n_16 ] 
            | `U18 of [ `L_n_17 ]  | `U19 of [ `L_n_18 ] 
            | `U20 of [ `L_n_19 ]  | `U21 of [ `L_n_20 ] ])
          ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x6919)
            "minimumFractionDigits"
            (match x6920 with
             | `U1 x6921 -> (match x6921 with | `L_n_0 -> Ojs.int_to_js 0)
             | `U2 x6922 -> (match x6922 with | `L_n_1 -> Ojs.int_to_js 1)
             | `U3 x6923 -> (match x6923 with | `L_n_2 -> Ojs.int_to_js 2)
             | `U4 x6924 -> (match x6924 with | `L_n_3 -> Ojs.int_to_js 3)
             | `U5 x6925 -> (match x6925 with | `L_n_4 -> Ojs.int_to_js 4)
             | `U6 x6926 -> (match x6926 with | `L_n_5 -> Ojs.int_to_js 5)
             | `U7 x6927 -> (match x6927 with | `L_n_6 -> Ojs.int_to_js 6)
             | `U8 x6928 -> (match x6928 with | `L_n_7 -> Ojs.int_to_js 7)
             | `U9 x6929 -> (match x6929 with | `L_n_8 -> Ojs.int_to_js 8)
             | `U10 x6930 -> (match x6930 with | `L_n_9 -> Ojs.int_to_js 9)
             | `U11 x6931 -> (match x6931 with | `L_n_10 -> Ojs.int_to_js 10)
             | `U12 x6932 -> (match x6932 with | `L_n_11 -> Ojs.int_to_js 11)
             | `U13 x6933 -> (match x6933 with | `L_n_12 -> Ojs.int_to_js 12)
             | `U14 x6934 -> (match x6934 with | `L_n_13 -> Ojs.int_to_js 13)
             | `U15 x6935 -> (match x6935 with | `L_n_14 -> Ojs.int_to_js 14)
             | `U16 x6936 -> (match x6936 with | `L_n_15 -> Ojs.int_to_js 15)
             | `U17 x6937 -> (match x6937 with | `L_n_16 -> Ojs.int_to_js 16)
             | `U18 x6938 -> (match x6938 with | `L_n_17 -> Ojs.int_to_js 17)
             | `U19 x6939 -> (match x6939 with | `L_n_18 -> Ojs.int_to_js 18)
             | `U20 x6940 -> (match x6940 with | `L_n_19 -> Ojs.int_to_js 19)
             | `U21 x6941 -> (match x6941 with | `L_n_20 -> Ojs.int_to_js 20))
    let (get_maximumFractionDigits :
      'tags this ->
        [ `L_n_0  | `L_n_1  | `L_n_10  | `L_n_11  | `L_n_12  | `L_n_13 
        | `L_n_14  | `L_n_15  | `L_n_16  | `L_n_17  | `L_n_18  | `L_n_19 
        | `L_n_2  | `L_n_20  | `L_n_3  | `L_n_4  | `L_n_5  | `L_n_6 
        | `L_n_7  | `L_n_8  | `L_n_9 ] option)
      =
      fun (x6943 : 'tags this) ->
        Ojs.option_of_js
          (fun (x6945 : Ojs.t) ->
             let x6946 = x6945 in
             match Ojs.int_of_js x6946 with
             | 0 -> `L_n_0
             | 1 -> `L_n_1
             | 10 -> `L_n_10
             | 11 -> `L_n_11
             | 12 -> `L_n_12
             | 13 -> `L_n_13
             | 14 -> `L_n_14
             | 15 -> `L_n_15
             | 16 -> `L_n_16
             | 17 -> `L_n_17
             | 18 -> `L_n_18
             | 19 -> `L_n_19
             | 2 -> `L_n_2
             | 20 -> `L_n_20
             | 3 -> `L_n_3
             | 4 -> `L_n_4
             | 5 -> `L_n_5
             | 6 -> `L_n_6
             | 7 -> `L_n_7
             | 8 -> `L_n_8
             | 9 -> `L_n_9
             | _ -> assert false)
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6943)
             "maximumFractionDigits")
    let (set_maximumFractionDigits :
      'tags this ->
        [ `U1 of [ `L_n_0 ]  | `U2 of [ `L_n_1 ]  | `U3 of [ `L_n_2 ] 
        | `U4 of [ `L_n_3 ]  | `U5 of [ `L_n_4 ]  | `U6 of [ `L_n_5 ] 
        | `U7 of [ `L_n_6 ]  | `U8 of [ `L_n_7 ]  | `U9 of [ `L_n_8 ] 
        | `U10 of [ `L_n_9 ]  | `U11 of [ `L_n_10 ]  | `U12 of [ `L_n_11 ] 
        | `U13 of [ `L_n_12 ]  | `U14 of [ `L_n_13 ]  | `U15 of [ `L_n_14 ] 
        | `U16 of [ `L_n_15 ]  | `U17 of [ `L_n_16 ]  | `U18 of [ `L_n_17 ] 
        | `U19 of [ `L_n_18 ]  | `U20 of [ `L_n_19 ]  | `U21 of [ `L_n_20 ] ]
          -> unit)
      =
      fun (x6947 : 'tags this) ->
        fun
          (x6948 :
            [ `U1 of [ `L_n_0 ]  | `U2 of [ `L_n_1 ]  | `U3 of [ `L_n_2 ] 
            | `U4 of [ `L_n_3 ]  | `U5 of [ `L_n_4 ]  | `U6 of [ `L_n_5 ] 
            | `U7 of [ `L_n_6 ]  | `U8 of [ `L_n_7 ]  | `U9 of [ `L_n_8 ] 
            | `U10 of [ `L_n_9 ]  | `U11 of [ `L_n_10 ] 
            | `U12 of [ `L_n_11 ]  | `U13 of [ `L_n_12 ] 
            | `U14 of [ `L_n_13 ]  | `U15 of [ `L_n_14 ] 
            | `U16 of [ `L_n_15 ]  | `U17 of [ `L_n_16 ] 
            | `U18 of [ `L_n_17 ]  | `U19 of [ `L_n_18 ] 
            | `U20 of [ `L_n_19 ]  | `U21 of [ `L_n_20 ] ])
          ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x6947)
            "maximumFractionDigits"
            (match x6948 with
             | `U1 x6949 -> (match x6949 with | `L_n_0 -> Ojs.int_to_js 0)
             | `U2 x6950 -> (match x6950 with | `L_n_1 -> Ojs.int_to_js 1)
             | `U3 x6951 -> (match x6951 with | `L_n_2 -> Ojs.int_to_js 2)
             | `U4 x6952 -> (match x6952 with | `L_n_3 -> Ojs.int_to_js 3)
             | `U5 x6953 -> (match x6953 with | `L_n_4 -> Ojs.int_to_js 4)
             | `U6 x6954 -> (match x6954 with | `L_n_5 -> Ojs.int_to_js 5)
             | `U7 x6955 -> (match x6955 with | `L_n_6 -> Ojs.int_to_js 6)
             | `U8 x6956 -> (match x6956 with | `L_n_7 -> Ojs.int_to_js 7)
             | `U9 x6957 -> (match x6957 with | `L_n_8 -> Ojs.int_to_js 8)
             | `U10 x6958 -> (match x6958 with | `L_n_9 -> Ojs.int_to_js 9)
             | `U11 x6959 -> (match x6959 with | `L_n_10 -> Ojs.int_to_js 10)
             | `U12 x6960 -> (match x6960 with | `L_n_11 -> Ojs.int_to_js 11)
             | `U13 x6961 -> (match x6961 with | `L_n_12 -> Ojs.int_to_js 12)
             | `U14 x6962 -> (match x6962 with | `L_n_13 -> Ojs.int_to_js 13)
             | `U15 x6963 -> (match x6963 with | `L_n_14 -> Ojs.int_to_js 14)
             | `U16 x6964 -> (match x6964 with | `L_n_15 -> Ojs.int_to_js 15)
             | `U17 x6965 -> (match x6965 with | `L_n_16 -> Ojs.int_to_js 16)
             | `U18 x6966 -> (match x6966 with | `L_n_17 -> Ojs.int_to_js 17)
             | `U19 x6967 -> (match x6967 with | `L_n_18 -> Ojs.int_to_js 18)
             | `U20 x6968 -> (match x6968 with | `L_n_19 -> Ojs.int_to_js 19)
             | `U21 x6969 -> (match x6969 with | `L_n_20 -> Ojs.int_to_js 20))
    let (get_minimumSignificantDigits :
      'tags this ->
        [ `L_n_1  | `L_n_10  | `L_n_11  | `L_n_12  | `L_n_13  | `L_n_14 
        | `L_n_15  | `L_n_16  | `L_n_17  | `L_n_18  | `L_n_19  | `L_n_2 
        | `L_n_20  | `L_n_21  | `L_n_3  | `L_n_4  | `L_n_5  | `L_n_6 
        | `L_n_7  | `L_n_8  | `L_n_9 ] option)
      =
      fun (x6971 : 'tags this) ->
        Ojs.option_of_js
          (fun (x6973 : Ojs.t) ->
             let x6974 = x6973 in
             match Ojs.int_of_js x6974 with
             | 1 -> `L_n_1
             | 10 -> `L_n_10
             | 11 -> `L_n_11
             | 12 -> `L_n_12
             | 13 -> `L_n_13
             | 14 -> `L_n_14
             | 15 -> `L_n_15
             | 16 -> `L_n_16
             | 17 -> `L_n_17
             | 18 -> `L_n_18
             | 19 -> `L_n_19
             | 2 -> `L_n_2
             | 20 -> `L_n_20
             | 21 -> `L_n_21
             | 3 -> `L_n_3
             | 4 -> `L_n_4
             | 5 -> `L_n_5
             | 6 -> `L_n_6
             | 7 -> `L_n_7
             | 8 -> `L_n_8
             | 9 -> `L_n_9
             | _ -> assert false)
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6971)
             "minimumSignificantDigits")
    let (set_minimumSignificantDigits :
      'tags this ->
        [ `U1 of [ `L_n_1 ]  | `U2 of [ `L_n_2 ]  | `U3 of [ `L_n_3 ] 
        | `U4 of [ `L_n_4 ]  | `U5 of [ `L_n_5 ]  | `U6 of [ `L_n_6 ] 
        | `U7 of [ `L_n_7 ]  | `U8 of [ `L_n_8 ]  | `U9 of [ `L_n_9 ] 
        | `U10 of [ `L_n_10 ]  | `U11 of [ `L_n_11 ]  | `U12 of [ `L_n_12 ] 
        | `U13 of [ `L_n_13 ]  | `U14 of [ `L_n_14 ]  | `U15 of [ `L_n_15 ] 
        | `U16 of [ `L_n_16 ]  | `U17 of [ `L_n_17 ]  | `U18 of [ `L_n_18 ] 
        | `U19 of [ `L_n_19 ]  | `U20 of [ `L_n_20 ]  | `U21 of [ `L_n_21 ] ]
          -> unit)
      =
      fun (x6975 : 'tags this) ->
        fun
          (x6976 :
            [ `U1 of [ `L_n_1 ]  | `U2 of [ `L_n_2 ]  | `U3 of [ `L_n_3 ] 
            | `U4 of [ `L_n_4 ]  | `U5 of [ `L_n_5 ]  | `U6 of [ `L_n_6 ] 
            | `U7 of [ `L_n_7 ]  | `U8 of [ `L_n_8 ]  | `U9 of [ `L_n_9 ] 
            | `U10 of [ `L_n_10 ]  | `U11 of [ `L_n_11 ] 
            | `U12 of [ `L_n_12 ]  | `U13 of [ `L_n_13 ] 
            | `U14 of [ `L_n_14 ]  | `U15 of [ `L_n_15 ] 
            | `U16 of [ `L_n_16 ]  | `U17 of [ `L_n_17 ] 
            | `U18 of [ `L_n_18 ]  | `U19 of [ `L_n_19 ] 
            | `U20 of [ `L_n_20 ]  | `U21 of [ `L_n_21 ] ])
          ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x6975)
            "minimumSignificantDigits"
            (match x6976 with
             | `U1 x6977 -> (match x6977 with | `L_n_1 -> Ojs.int_to_js 1)
             | `U2 x6978 -> (match x6978 with | `L_n_2 -> Ojs.int_to_js 2)
             | `U3 x6979 -> (match x6979 with | `L_n_3 -> Ojs.int_to_js 3)
             | `U4 x6980 -> (match x6980 with | `L_n_4 -> Ojs.int_to_js 4)
             | `U5 x6981 -> (match x6981 with | `L_n_5 -> Ojs.int_to_js 5)
             | `U6 x6982 -> (match x6982 with | `L_n_6 -> Ojs.int_to_js 6)
             | `U7 x6983 -> (match x6983 with | `L_n_7 -> Ojs.int_to_js 7)
             | `U8 x6984 -> (match x6984 with | `L_n_8 -> Ojs.int_to_js 8)
             | `U9 x6985 -> (match x6985 with | `L_n_9 -> Ojs.int_to_js 9)
             | `U10 x6986 -> (match x6986 with | `L_n_10 -> Ojs.int_to_js 10)
             | `U11 x6987 -> (match x6987 with | `L_n_11 -> Ojs.int_to_js 11)
             | `U12 x6988 -> (match x6988 with | `L_n_12 -> Ojs.int_to_js 12)
             | `U13 x6989 -> (match x6989 with | `L_n_13 -> Ojs.int_to_js 13)
             | `U14 x6990 -> (match x6990 with | `L_n_14 -> Ojs.int_to_js 14)
             | `U15 x6991 -> (match x6991 with | `L_n_15 -> Ojs.int_to_js 15)
             | `U16 x6992 -> (match x6992 with | `L_n_16 -> Ojs.int_to_js 16)
             | `U17 x6993 -> (match x6993 with | `L_n_17 -> Ojs.int_to_js 17)
             | `U18 x6994 -> (match x6994 with | `L_n_18 -> Ojs.int_to_js 18)
             | `U19 x6995 -> (match x6995 with | `L_n_19 -> Ojs.int_to_js 19)
             | `U20 x6996 -> (match x6996 with | `L_n_20 -> Ojs.int_to_js 20)
             | `U21 x6997 -> (match x6997 with | `L_n_21 -> Ojs.int_to_js 21))
    let (get_maximumSignificantDigits :
      'tags this ->
        [ `L_n_1  | `L_n_10  | `L_n_11  | `L_n_12  | `L_n_13  | `L_n_14 
        | `L_n_15  | `L_n_16  | `L_n_17  | `L_n_18  | `L_n_19  | `L_n_2 
        | `L_n_20  | `L_n_21  | `L_n_3  | `L_n_4  | `L_n_5  | `L_n_6 
        | `L_n_7  | `L_n_8  | `L_n_9 ] option)
      =
      fun (x6999 : 'tags this) ->
        Ojs.option_of_js
          (fun (x7001 : Ojs.t) ->
             let x7002 = x7001 in
             match Ojs.int_of_js x7002 with
             | 1 -> `L_n_1
             | 10 -> `L_n_10
             | 11 -> `L_n_11
             | 12 -> `L_n_12
             | 13 -> `L_n_13
             | 14 -> `L_n_14
             | 15 -> `L_n_15
             | 16 -> `L_n_16
             | 17 -> `L_n_17
             | 18 -> `L_n_18
             | 19 -> `L_n_19
             | 2 -> `L_n_2
             | 20 -> `L_n_20
             | 21 -> `L_n_21
             | 3 -> `L_n_3
             | 4 -> `L_n_4
             | 5 -> `L_n_5
             | 6 -> `L_n_6
             | 7 -> `L_n_7
             | 8 -> `L_n_8
             | 9 -> `L_n_9
             | _ -> assert false)
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6999)
             "maximumSignificantDigits")
    let (set_maximumSignificantDigits :
      'tags this ->
        [ `U1 of [ `L_n_1 ]  | `U2 of [ `L_n_2 ]  | `U3 of [ `L_n_3 ] 
        | `U4 of [ `L_n_4 ]  | `U5 of [ `L_n_5 ]  | `U6 of [ `L_n_6 ] 
        | `U7 of [ `L_n_7 ]  | `U8 of [ `L_n_8 ]  | `U9 of [ `L_n_9 ] 
        | `U10 of [ `L_n_10 ]  | `U11 of [ `L_n_11 ]  | `U12 of [ `L_n_12 ] 
        | `U13 of [ `L_n_13 ]  | `U14 of [ `L_n_14 ]  | `U15 of [ `L_n_15 ] 
        | `U16 of [ `L_n_16 ]  | `U17 of [ `L_n_17 ]  | `U18 of [ `L_n_18 ] 
        | `U19 of [ `L_n_19 ]  | `U20 of [ `L_n_20 ]  | `U21 of [ `L_n_21 ] ]
          -> unit)
      =
      fun (x7003 : 'tags this) ->
        fun
          (x7004 :
            [ `U1 of [ `L_n_1 ]  | `U2 of [ `L_n_2 ]  | `U3 of [ `L_n_3 ] 
            | `U4 of [ `L_n_4 ]  | `U5 of [ `L_n_5 ]  | `U6 of [ `L_n_6 ] 
            | `U7 of [ `L_n_7 ]  | `U8 of [ `L_n_8 ]  | `U9 of [ `L_n_9 ] 
            | `U10 of [ `L_n_10 ]  | `U11 of [ `L_n_11 ] 
            | `U12 of [ `L_n_12 ]  | `U13 of [ `L_n_13 ] 
            | `U14 of [ `L_n_14 ]  | `U15 of [ `L_n_15 ] 
            | `U16 of [ `L_n_16 ]  | `U17 of [ `L_n_17 ] 
            | `U18 of [ `L_n_18 ]  | `U19 of [ `L_n_19 ] 
            | `U20 of [ `L_n_20 ]  | `U21 of [ `L_n_21 ] ])
          ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x7003)
            "maximumSignificantDigits"
            (match x7004 with
             | `U1 x7005 -> (match x7005 with | `L_n_1 -> Ojs.int_to_js 1)
             | `U2 x7006 -> (match x7006 with | `L_n_2 -> Ojs.int_to_js 2)
             | `U3 x7007 -> (match x7007 with | `L_n_3 -> Ojs.int_to_js 3)
             | `U4 x7008 -> (match x7008 with | `L_n_4 -> Ojs.int_to_js 4)
             | `U5 x7009 -> (match x7009 with | `L_n_5 -> Ojs.int_to_js 5)
             | `U6 x7010 -> (match x7010 with | `L_n_6 -> Ojs.int_to_js 6)
             | `U7 x7011 -> (match x7011 with | `L_n_7 -> Ojs.int_to_js 7)
             | `U8 x7012 -> (match x7012 with | `L_n_8 -> Ojs.int_to_js 8)
             | `U9 x7013 -> (match x7013 with | `L_n_9 -> Ojs.int_to_js 9)
             | `U10 x7014 -> (match x7014 with | `L_n_10 -> Ojs.int_to_js 10)
             | `U11 x7015 -> (match x7015 with | `L_n_11 -> Ojs.int_to_js 11)
             | `U12 x7016 -> (match x7016 with | `L_n_12 -> Ojs.int_to_js 12)
             | `U13 x7017 -> (match x7017 with | `L_n_13 -> Ojs.int_to_js 13)
             | `U14 x7018 -> (match x7018 with | `L_n_14 -> Ojs.int_to_js 14)
             | `U15 x7019 -> (match x7019 with | `L_n_15 -> Ojs.int_to_js 15)
             | `U16 x7020 -> (match x7020 with | `L_n_16 -> Ojs.int_to_js 16)
             | `U17 x7021 -> (match x7021 with | `L_n_17 -> Ojs.int_to_js 17)
             | `U18 x7022 -> (match x7022 with | `L_n_18 -> Ojs.int_to_js 18)
             | `U19 x7023 -> (match x7023 with | `L_n_19 -> Ojs.int_to_js 19)
             | `U20 x7024 -> (match x7024 with | `L_n_20 -> Ojs.int_to_js 20)
             | `U21 x7025 -> (match x7025 with | `L_n_21 -> Ojs.int_to_js 21))
    let (get_notation : 'tags this -> string option) =
      fun (x7027 : 'tags this) ->
        Ojs.option_of_js Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x7027) "notation")
    let (set_notation : 'tags this -> string -> unit) =
      fun (x7030 : 'tags this) ->
        fun (x7031 : string) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x7030) "notation"
            (Ojs.string_to_js x7031)
    let (get_compactDisplay : 'tags this -> string option) =
      fun (x7033 : 'tags this) ->
        Ojs.option_of_js Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x7033) "compactDisplay")
    let (set_compactDisplay : 'tags this -> string -> unit) =
      fun (x7036 : 'tags this) ->
        fun (x7037 : string) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x7036) "compactDisplay"
            (Ojs.string_to_js x7037)
    let (create :
      ?localeMatcher:string ->
        ?style:string ->
          ?numberingSystem:string ->
            ?unit:string ->
              ?unitDisplay:string ->
                ?currency:string ->
                  ?currencyDisplay:string ->
                    ?useGrouping:bool ->
                      ?minimumIntegerDigits:[ `L_n_1  | `L_n_10  | `L_n_11 
                                            | `L_n_12  | `L_n_13  | `L_n_14 
                                            | `L_n_15  | `L_n_16  | `L_n_17 
                                            | `L_n_18  | `L_n_19  | `L_n_2 
                                            | `L_n_20  | `L_n_21  | `L_n_3 
                                            | `L_n_4  | `L_n_5  | `L_n_6 
                                            | `L_n_7  | `L_n_8  | `L_n_9 ]
                        ->
                        ?minimumFractionDigits:[ `L_n_0  | `L_n_1  | 
                                                 `L_n_10 
                                               | `L_n_11  | `L_n_12 
                                               | `L_n_13  | `L_n_14 
                                               | `L_n_15  | `L_n_16 
                                               | `L_n_17  | `L_n_18 
                                               | `L_n_19  | `L_n_2 
                                               | `L_n_20  | `L_n_3  | 
                                                 `L_n_4 
                                               | `L_n_5  | `L_n_6  | 
                                                 `L_n_7 
                                               | `L_n_8  | `L_n_9 ]
                          ->
                          ?maximumFractionDigits:[ `L_n_0  | `L_n_1 
                                                 | `L_n_10  | `L_n_11 
                                                 | `L_n_12  | `L_n_13 
                                                 | `L_n_14  | `L_n_15 
                                                 | `L_n_16  | `L_n_17 
                                                 | `L_n_18  | `L_n_19 
                                                 | `L_n_2  | `L_n_20 
                                                 | `L_n_3  | `L_n_4 
                                                 | `L_n_5  | `L_n_6 
                                                 | `L_n_7  | `L_n_8 
                                                 | `L_n_9 ]
                            ->
                            ?minimumSignificantDigits:[ `L_n_1  | `L_n_10 
                                                      | `L_n_11  | `L_n_12 
                                                      | `L_n_13  | `L_n_14 
                                                      | `L_n_15  | `L_n_16 
                                                      | `L_n_17  | `L_n_18 
                                                      | `L_n_19  | `L_n_2 
                                                      | `L_n_20  | `L_n_21 
                                                      | `L_n_3  | `L_n_4 
                                                      | `L_n_5  | `L_n_6 
                                                      | `L_n_7  | `L_n_8 
                                                      | `L_n_9 ]
                              ->
                              ?maximumSignificantDigits:[ `L_n_1  | `L_n_10 
                                                        | `L_n_11  | 
                                                          `L_n_12 
                                                        | `L_n_13  | 
                                                          `L_n_14 
                                                        | `L_n_15  | 
                                                          `L_n_16 
                                                        | `L_n_17  | 
                                                          `L_n_18 
                                                        | `L_n_19  | 
                                                          `L_n_2 
                                                        | `L_n_20  | 
                                                          `L_n_21 
                                                        | `L_n_3  | `L_n_4 
                                                        | `L_n_5  | `L_n_6 
                                                        | `L_n_7  | `L_n_8 
                                                        | `L_n_9 ]
                                ->
                                ?notation:string ->
                                  ?compactDisplay:string -> unit -> t)
      =
      fun ?localeMatcher:(x7039 : string option) ->
        fun ?style:(x7040 : string option) ->
          fun ?numberingSystem:(x7041 : string option) ->
            fun ?unit:(x7042 : string option) ->
              fun ?unitDisplay:(x7043 : string option) ->
                fun ?currency:(x7044 : string option) ->
                  fun ?currencyDisplay:(x7045 : string option) ->
                    fun ?useGrouping:(x7046 : bool option) ->
                      fun
                        ?minimumIntegerDigits:(x7047 :
                                                [ `L_n_1  | `L_n_10 
                                                | `L_n_11  | `L_n_12 
                                                | `L_n_13  | `L_n_14 
                                                | `L_n_15  | `L_n_16 
                                                | `L_n_17  | `L_n_18 
                                                | `L_n_19  | `L_n_2 
                                                | `L_n_20  | `L_n_21 
                                                | `L_n_3  | `L_n_4  | 
                                                  `L_n_5 
                                                | `L_n_6  | `L_n_7  | 
                                                  `L_n_8 
                                                | `L_n_9 ] option)
                        ->
                        fun
                          ?minimumFractionDigits:(x7048 :
                                                   [ `L_n_0  | `L_n_1 
                                                   | `L_n_10  | `L_n_11 
                                                   | `L_n_12  | `L_n_13 
                                                   | `L_n_14  | `L_n_15 
                                                   | `L_n_16  | `L_n_17 
                                                   | `L_n_18  | `L_n_19 
                                                   | `L_n_2  | `L_n_20 
                                                   | `L_n_3  | `L_n_4 
                                                   | `L_n_5  | `L_n_6 
                                                   | `L_n_7  | `L_n_8 
                                                   | `L_n_9 ] option)
                          ->
                          fun
                            ?maximumFractionDigits:(x7049 :
                                                     [ `L_n_0  | `L_n_1 
                                                     | `L_n_10  | `L_n_11 
                                                     | `L_n_12  | `L_n_13 
                                                     | `L_n_14  | `L_n_15 
                                                     | `L_n_16  | `L_n_17 
                                                     | `L_n_18  | `L_n_19 
                                                     | `L_n_2  | `L_n_20 
                                                     | `L_n_3  | `L_n_4 
                                                     | `L_n_5  | `L_n_6 
                                                     | `L_n_7  | `L_n_8 
                                                     | `L_n_9 ] option)
                            ->
                            fun
                              ?minimumSignificantDigits:(x7050 :
                                                          [ `L_n_1 
                                                          | `L_n_10 
                                                          | `L_n_11 
                                                          | `L_n_12 
                                                          | `L_n_13 
                                                          | `L_n_14 
                                                          | `L_n_15 
                                                          | `L_n_16 
                                                          | `L_n_17 
                                                          | `L_n_18 
                                                          | `L_n_19 
                                                          | `L_n_2 
                                                          | `L_n_20 
                                                          | `L_n_21 
                                                          | `L_n_3  | 
                                                            `L_n_4 
                                                          | `L_n_5  | 
                                                            `L_n_6 
                                                          | `L_n_7  | 
                                                            `L_n_8 
                                                          | `L_n_9 ] option)
                              ->
                              fun
                                ?maximumSignificantDigits:(x7051 :
                                                            [ `L_n_1 
                                                            | `L_n_10 
                                                            | `L_n_11 
                                                            | `L_n_12 
                                                            | `L_n_13 
                                                            | `L_n_14 
                                                            | `L_n_15 
                                                            | `L_n_16 
                                                            | `L_n_17 
                                                            | `L_n_18 
                                                            | `L_n_19 
                                                            | `L_n_2 
                                                            | `L_n_20 
                                                            | `L_n_21 
                                                            | `L_n_3 
                                                            | `L_n_4 
                                                            | `L_n_5 
                                                            | `L_n_6 
                                                            | `L_n_7 
                                                            | `L_n_8 
                                                            | `L_n_9 ] option)
                                ->
                                fun ?notation:(x7052 : string option) ->
                                  fun ?compactDisplay:(x7053 : string option)
                                    ->
                                    fun () ->
                                      let x7054 = Ojs.empty_obj () in
                                      (match x7039 with
                                       | Some x7069 ->
                                           Ojs.set_prop_ascii x7054
                                             "localeMatcher"
                                             (Ojs.string_to_js x7069)
                                       | None -> ());
                                      (match x7040 with
                                       | Some x7068 ->
                                           Ojs.set_prop_ascii x7054 "style"
                                             (Ojs.string_to_js x7068)
                                       | None -> ());
                                      (match x7041 with
                                       | Some x7067 ->
                                           Ojs.set_prop_ascii x7054
                                             "numberingSystem"
                                             (Ojs.string_to_js x7067)
                                       | None -> ());
                                      (match x7042 with
                                       | Some x7066 ->
                                           Ojs.set_prop_ascii x7054 "unit"
                                             (Ojs.string_to_js x7066)
                                       | None -> ());
                                      (match x7043 with
                                       | Some x7065 ->
                                           Ojs.set_prop_ascii x7054
                                             "unitDisplay"
                                             (Ojs.string_to_js x7065)
                                       | None -> ());
                                      (match x7044 with
                                       | Some x7064 ->
                                           Ojs.set_prop_ascii x7054
                                             "currency"
                                             (Ojs.string_to_js x7064)
                                       | None -> ());
                                      (match x7045 with
                                       | Some x7063 ->
                                           Ojs.set_prop_ascii x7054
                                             "currencyDisplay"
                                             (Ojs.string_to_js x7063)
                                       | None -> ());
                                      (match x7046 with
                                       | Some x7062 ->
                                           Ojs.set_prop_ascii x7054
                                             "useGrouping"
                                             (Ojs.bool_to_js x7062)
                                       | None -> ());
                                      (match x7047 with
                                       | Some x7061 ->
                                           Ojs.set_prop_ascii x7054
                                             "minimumIntegerDigits"
                                             (match x7061 with
                                              | `L_n_1 -> Ojs.int_to_js 1
                                              | `L_n_10 -> Ojs.int_to_js 10
                                              | `L_n_11 -> Ojs.int_to_js 11
                                              | `L_n_12 -> Ojs.int_to_js 12
                                              | `L_n_13 -> Ojs.int_to_js 13
                                              | `L_n_14 -> Ojs.int_to_js 14
                                              | `L_n_15 -> Ojs.int_to_js 15
                                              | `L_n_16 -> Ojs.int_to_js 16
                                              | `L_n_17 -> Ojs.int_to_js 17
                                              | `L_n_18 -> Ojs.int_to_js 18
                                              | `L_n_19 -> Ojs.int_to_js 19
                                              | `L_n_2 -> Ojs.int_to_js 2
                                              | `L_n_20 -> Ojs.int_to_js 20
                                              | `L_n_21 -> Ojs.int_to_js 21
                                              | `L_n_3 -> Ojs.int_to_js 3
                                              | `L_n_4 -> Ojs.int_to_js 4
                                              | `L_n_5 -> Ojs.int_to_js 5
                                              | `L_n_6 -> Ojs.int_to_js 6
                                              | `L_n_7 -> Ojs.int_to_js 7
                                              | `L_n_8 -> Ojs.int_to_js 8
                                              | `L_n_9 -> Ojs.int_to_js 9)
                                       | None -> ());
                                      (match x7048 with
                                       | Some x7060 ->
                                           Ojs.set_prop_ascii x7054
                                             "minimumFractionDigits"
                                             (match x7060 with
                                              | `L_n_0 -> Ojs.int_to_js 0
                                              | `L_n_1 -> Ojs.int_to_js 1
                                              | `L_n_10 -> Ojs.int_to_js 10
                                              | `L_n_11 -> Ojs.int_to_js 11
                                              | `L_n_12 -> Ojs.int_to_js 12
                                              | `L_n_13 -> Ojs.int_to_js 13
                                              | `L_n_14 -> Ojs.int_to_js 14
                                              | `L_n_15 -> Ojs.int_to_js 15
                                              | `L_n_16 -> Ojs.int_to_js 16
                                              | `L_n_17 -> Ojs.int_to_js 17
                                              | `L_n_18 -> Ojs.int_to_js 18
                                              | `L_n_19 -> Ojs.int_to_js 19
                                              | `L_n_2 -> Ojs.int_to_js 2
                                              | `L_n_20 -> Ojs.int_to_js 20
                                              | `L_n_3 -> Ojs.int_to_js 3
                                              | `L_n_4 -> Ojs.int_to_js 4
                                              | `L_n_5 -> Ojs.int_to_js 5
                                              | `L_n_6 -> Ojs.int_to_js 6
                                              | `L_n_7 -> Ojs.int_to_js 7
                                              | `L_n_8 -> Ojs.int_to_js 8
                                              | `L_n_9 -> Ojs.int_to_js 9)
                                       | None -> ());
                                      (match x7049 with
                                       | Some x7059 ->
                                           Ojs.set_prop_ascii x7054
                                             "maximumFractionDigits"
                                             (match x7059 with
                                              | `L_n_0 -> Ojs.int_to_js 0
                                              | `L_n_1 -> Ojs.int_to_js 1
                                              | `L_n_10 -> Ojs.int_to_js 10
                                              | `L_n_11 -> Ojs.int_to_js 11
                                              | `L_n_12 -> Ojs.int_to_js 12
                                              | `L_n_13 -> Ojs.int_to_js 13
                                              | `L_n_14 -> Ojs.int_to_js 14
                                              | `L_n_15 -> Ojs.int_to_js 15
                                              | `L_n_16 -> Ojs.int_to_js 16
                                              | `L_n_17 -> Ojs.int_to_js 17
                                              | `L_n_18 -> Ojs.int_to_js 18
                                              | `L_n_19 -> Ojs.int_to_js 19
                                              | `L_n_2 -> Ojs.int_to_js 2
                                              | `L_n_20 -> Ojs.int_to_js 20
                                              | `L_n_3 -> Ojs.int_to_js 3
                                              | `L_n_4 -> Ojs.int_to_js 4
                                              | `L_n_5 -> Ojs.int_to_js 5
                                              | `L_n_6 -> Ojs.int_to_js 6
                                              | `L_n_7 -> Ojs.int_to_js 7
                                              | `L_n_8 -> Ojs.int_to_js 8
                                              | `L_n_9 -> Ojs.int_to_js 9)
                                       | None -> ());
                                      (match x7050 with
                                       | Some x7058 ->
                                           Ojs.set_prop_ascii x7054
                                             "minimumSignificantDigits"
                                             (match x7058 with
                                              | `L_n_1 -> Ojs.int_to_js 1
                                              | `L_n_10 -> Ojs.int_to_js 10
                                              | `L_n_11 -> Ojs.int_to_js 11
                                              | `L_n_12 -> Ojs.int_to_js 12
                                              | `L_n_13 -> Ojs.int_to_js 13
                                              | `L_n_14 -> Ojs.int_to_js 14
                                              | `L_n_15 -> Ojs.int_to_js 15
                                              | `L_n_16 -> Ojs.int_to_js 16
                                              | `L_n_17 -> Ojs.int_to_js 17
                                              | `L_n_18 -> Ojs.int_to_js 18
                                              | `L_n_19 -> Ojs.int_to_js 19
                                              | `L_n_2 -> Ojs.int_to_js 2
                                              | `L_n_20 -> Ojs.int_to_js 20
                                              | `L_n_21 -> Ojs.int_to_js 21
                                              | `L_n_3 -> Ojs.int_to_js 3
                                              | `L_n_4 -> Ojs.int_to_js 4
                                              | `L_n_5 -> Ojs.int_to_js 5
                                              | `L_n_6 -> Ojs.int_to_js 6
                                              | `L_n_7 -> Ojs.int_to_js 7
                                              | `L_n_8 -> Ojs.int_to_js 8
                                              | `L_n_9 -> Ojs.int_to_js 9)
                                       | None -> ());
                                      (match x7051 with
                                       | Some x7057 ->
                                           Ojs.set_prop_ascii x7054
                                             "maximumSignificantDigits"
                                             (match x7057 with
                                              | `L_n_1 -> Ojs.int_to_js 1
                                              | `L_n_10 -> Ojs.int_to_js 10
                                              | `L_n_11 -> Ojs.int_to_js 11
                                              | `L_n_12 -> Ojs.int_to_js 12
                                              | `L_n_13 -> Ojs.int_to_js 13
                                              | `L_n_14 -> Ojs.int_to_js 14
                                              | `L_n_15 -> Ojs.int_to_js 15
                                              | `L_n_16 -> Ojs.int_to_js 16
                                              | `L_n_17 -> Ojs.int_to_js 17
                                              | `L_n_18 -> Ojs.int_to_js 18
                                              | `L_n_19 -> Ojs.int_to_js 19
                                              | `L_n_2 -> Ojs.int_to_js 2
                                              | `L_n_20 -> Ojs.int_to_js 20
                                              | `L_n_21 -> Ojs.int_to_js 21
                                              | `L_n_3 -> Ojs.int_to_js 3
                                              | `L_n_4 -> Ojs.int_to_js 4
                                              | `L_n_5 -> Ojs.int_to_js 5
                                              | `L_n_6 -> Ojs.int_to_js 6
                                              | `L_n_7 -> Ojs.int_to_js 7
                                              | `L_n_8 -> Ojs.int_to_js 8
                                              | `L_n_9 -> Ojs.int_to_js 9)
                                       | None -> ());
                                      (match x7052 with
                                       | Some x7056 ->
                                           Ojs.set_prop_ascii x7054
                                             "notation"
                                             (Ojs.string_to_js x7056)
                                       | None -> ());
                                      (match x7053 with
                                       | Some x7055 ->
                                           Ojs.set_prop_ascii x7054
                                             "compactDisplay"
                                             (Ojs.string_to_js x7055)
                                       | None -> ());
                                      t_of_js x7054
    let cast_from = Obj.magic
  end
module BigInt =
  struct
    type t = [ `BigInt ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type tags = [ `BigInt ]
    type 'tags this = 'tags intf constraint 'tags = [> `BigInt ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x7072 : Ojs.t) -> intf_of_js __tags_of_js x7072
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x7070 : __tags intf) -> intf_to_js __tags_to_js x7070
    let (toString : 'tags this -> ?radix:float -> unit -> string) =
      fun (x7077 : 'tags this) ->
        fun ?radix:(x7074 : float option) ->
          fun () ->
            Ojs.string_of_js
              (let x7079 = this_to_js Obj.magic x7077 in
               Ojs.call (Ojs.get_prop_ascii x7079 "toString") "apply"
                 [|x7079;((let x7075 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x7074 with
                            | Some x7076 ->
                                ignore
                                  (Ojs.call x7075 "push"
                                     [|(Ojs.float_to_js x7076)|])
                            | None -> ());
                           x7075))|])
    let (toLocaleString :
      'tags this ->
        ?locales:Intl.LocalesArgument.t ->
          ?options:BigIntToLocaleStringOptions.t -> unit -> string)
      =
      fun (x7085 : 'tags this) ->
        fun ?locales:(x7080 : Intl.LocalesArgument.t option) ->
          fun ?options:(x7081 : BigIntToLocaleStringOptions.t option) ->
            fun () ->
              Ojs.string_of_js
                (let x7087 = this_to_js Obj.magic x7085 in
                 Ojs.call (Ojs.get_prop_ascii x7087 "toLocaleString") "apply"
                   [|x7087;((let x7082 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x7080 with
                              | Some x7084 ->
                                  ignore
                                    (Ojs.call x7082 "push"
                                       [|(Intl.LocalesArgument.t_to_js x7084)|])
                              | None -> ());
                             (match x7081 with
                              | Some x7083 ->
                                  ignore
                                    (Ojs.call x7082 "push"
                                       [|(BigIntToLocaleStringOptions.t_to_js
                                            x7083)|])
                              | None -> ());
                             x7082))|])
    let (valueOf : 'tags this -> bigint) =
      fun (x7088 : 'tags this) ->
        bigint_of_js (Ojs.call (this_to_js Obj.magic x7088) "valueOf" [||])
    let (invoke :
      [ `U1 of bigint  | `U2 of bool  | `U3 of float  | `U4 of string ] ->
        bigint)
      =
      fun
        (x7090 :
          [ `U1 of bigint  | `U2 of bool  | `U3 of float  | `U4 of string ])
        ->
        bigint_of_js
          (Ojs.apply (Ojs.get_prop_ascii Ojs.global "BigInt")
             [|((match x7090 with
                 | `U1 x7091 -> bigint_to_js x7091
                 | `U2 x7092 -> Ojs.bool_to_js x7092
                 | `U3 x7093 -> Ojs.float_to_js x7093
                 | `U4 x7094 -> Ojs.string_to_js x7094))|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "BigInt")
             "prototype")
    let (asIntN : bits:float -> int:bigint -> bigint) =
      fun ~bits:(x7095 : float) ->
        fun ~int:(x7096 : bigint) ->
          bigint_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "BigInt") "asIntN"
               [|(Ojs.float_to_js x7095);(bigint_to_js x7096)|])
    let (asUintN : bits:float -> int:bigint -> bigint) =
      fun ~bits:(x7097 : float) ->
        fun ~int:(x7098 : bigint) ->
          bigint_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "BigInt") "asUintN"
               [|(Ojs.float_to_js x7097);(bigint_to_js x7098)|])
    let cast_from = Obj.magic
  end
module Uint8Array =
  struct
    type t = [ `Uint8Array ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type tags = [ `Uint8Array ]
    type 'tags this = 'tags intf constraint 'tags = [> `Uint8Array ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x7101 : Ojs.t) -> intf_of_js __tags_of_js x7101
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x7099 : __tags intf) -> intf_to_js __tags_to_js x7099
    let (findLast :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> bool) ->
          ?thisArg:any -> unit -> 'S option)
      =
      fun (x7110 : 'tags this) ->
        fun
          ~predicate:(x7103 : value:float -> index:float -> array:t -> bool)
          ->
          fun ?thisArg:(x7104 : any option) ->
            fun () ->
              Ojs.option_of_js Obj.magic
                (let x7112 = this_to_js Obj.magic x7110 in
                 Ojs.call (Ojs.get_prop_ascii x7112 "findLast") "apply"
                   [|x7112;((let x7105 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7105 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x7107 : Ojs.t) ->
                                          fun (x7108 : Ojs.t) ->
                                            fun (x7109 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x7103
                                                   ~value:(Ojs.float_of_js
                                                             x7107)
                                                   ~index:(Ojs.float_of_js
                                                             x7108)
                                                   ~array:(t_of_js x7109))))|]);
                             (match x7104 with
                              | Some x7106 ->
                                  ignore
                                    (Ojs.call x7105 "push"
                                       [|(any_to_js x7106)|])
                              | None -> ());
                             x7105))|])
    let (findLast' :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> float option)
      =
      fun (x7121 : 'tags this) ->
        fun
          ~predicate:(x7114 :
                       value:float -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x7115 : any option) ->
            fun () ->
              Ojs.option_of_js Ojs.float_of_js
                (let x7123 = this_to_js Obj.magic x7121 in
                 Ojs.call (Ojs.get_prop_ascii x7123 "findLast") "apply"
                   [|x7123;((let x7116 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7116 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x7118 : Ojs.t) ->
                                          fun (x7119 : Ojs.t) ->
                                            fun (x7120 : Ojs.t) ->
                                              unknown_to_js
                                                (x7114
                                                   ~value:(Ojs.float_of_js
                                                             x7118)
                                                   ~index:(Ojs.float_of_js
                                                             x7119)
                                                   ~array:(t_of_js x7120))))|]);
                             (match x7115 with
                              | Some x7117 ->
                                  ignore
                                    (Ojs.call x7116 "push"
                                       [|(any_to_js x7117)|])
                              | None -> ());
                             x7116))|])
    let (findLastIndex :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> float)
      =
      fun (x7132 : 'tags this) ->
        fun
          ~predicate:(x7125 :
                       value:float -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x7126 : any option) ->
            fun () ->
              Ojs.float_of_js
                (let x7134 = this_to_js Obj.magic x7132 in
                 Ojs.call (Ojs.get_prop_ascii x7134 "findLastIndex") "apply"
                   [|x7134;((let x7127 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7127 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x7129 : Ojs.t) ->
                                          fun (x7130 : Ojs.t) ->
                                            fun (x7131 : Ojs.t) ->
                                              unknown_to_js
                                                (x7125
                                                   ~value:(Ojs.float_of_js
                                                             x7129)
                                                   ~index:(Ojs.float_of_js
                                                             x7130)
                                                   ~array:(t_of_js x7131))))|]);
                             (match x7126 with
                              | Some x7128 ->
                                  ignore
                                    (Ojs.call x7127 "push"
                                       [|(any_to_js x7128)|])
                              | None -> ());
                             x7127))|])
    let (at : 'tags this -> index:float -> float option) =
      fun (x7136 : 'tags this) ->
        fun ~index:(x7135 : float) ->
          Ojs.option_of_js Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x7136) "at"
               [|(Ojs.float_to_js x7135)|])
    let (includes :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> bool)
      =
      fun (x7143 : 'tags this) ->
        fun ~searchElement:(x7139 : float) ->
          fun ?fromIndex:(x7140 : float option) ->
            fun () ->
              Ojs.bool_of_js
                (let x7145 = this_to_js Obj.magic x7143 in
                 Ojs.call (Ojs.get_prop_ascii x7145 "includes") "apply"
                   [|x7145;((let x7141 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7141 "push"
                                  [|(Ojs.float_to_js x7139)|]);
                             (match x7140 with
                              | Some x7142 ->
                                  ignore
                                    (Ojs.call x7141 "push"
                                       [|(Ojs.float_to_js x7142)|])
                              | None -> ());
                             x7141))|])
    let (entries : 'tags this -> (float * float) IterableIterator.t) =
      fun (x7146 : 'tags this) ->
        IterableIterator.t_of_js
          (fun (x7148 : Ojs.t) ->
             let x7149 = x7148 in
             ((Ojs.float_of_js (Ojs.array_get x7149 0)),
               (Ojs.float_of_js (Ojs.array_get x7149 1))))
          (Ojs.call (this_to_js Obj.magic x7146) "entries" [||])
    let (keys : 'tags this -> float IterableIterator.t) =
      fun (x7150 : 'tags this) ->
        IterableIterator.t_of_js Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x7150) "keys" [||])
    let (values : 'tags this -> float IterableIterator.t) =
      fun (x7153 : 'tags this) ->
        IterableIterator.t_of_js Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x7153) "values" [||])
    let (get_BYTES_PER_ELEMENT : 'tags this -> float) =
      fun (x7156 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x7156)
             "BYTES_PER_ELEMENT")
    let (get_buffer : 'tags this -> ArrayBufferLike.t) =
      fun (x7158 : 'tags this) ->
        ArrayBufferLike.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x7158) "buffer")
    let (get_byteLength : 'tags this -> float) =
      fun (x7160 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x7160) "byteLength")
    let (get_byteOffset : 'tags this -> float) =
      fun (x7162 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x7162) "byteOffset")
    let (copyWithin :
      'tags this ->
        target:float -> ?start:float -> ?end_:float -> unit -> 'tags this)
      =
      fun (x7170 : 'tags this) ->
        fun ~target:(x7164 : float) ->
          fun ?start:(x7165 : float option) ->
            fun ?end_:(x7166 : float option) ->
              fun () ->
                this_of_js Obj.magic
                  (let x7172 = this_to_js Obj.magic x7170 in
                   Ojs.call (Ojs.get_prop_ascii x7172 "copyWithin") "apply"
                     [|x7172;((let x7167 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x7167 "push"
                                    [|(Ojs.float_to_js x7164)|]);
                               (match x7165 with
                                | Some x7169 ->
                                    ignore
                                      (Ojs.call x7167 "push"
                                         [|(Ojs.float_to_js x7169)|])
                                | None -> ());
                               (match x7166 with
                                | Some x7168 ->
                                    ignore
                                      (Ojs.call x7167 "push"
                                         [|(Ojs.float_to_js x7168)|])
                                | None -> ());
                               x7167))|])
    let (every :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x7181 : 'tags this) ->
        fun
          ~predicate:(x7174 :
                       value:float -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x7175 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x7183 = this_to_js Obj.magic x7181 in
                 Ojs.call (Ojs.get_prop_ascii x7183 "every") "apply"
                   [|x7183;((let x7176 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7176 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x7178 : Ojs.t) ->
                                          fun (x7179 : Ojs.t) ->
                                            fun (x7180 : Ojs.t) ->
                                              unknown_to_js
                                                (x7174
                                                   ~value:(Ojs.float_of_js
                                                             x7178)
                                                   ~index:(Ojs.float_of_js
                                                             x7179)
                                                   ~array:(t_of_js x7180))))|]);
                             (match x7175 with
                              | Some x7177 ->
                                  ignore
                                    (Ojs.call x7176 "push"
                                       [|(any_to_js x7177)|])
                              | None -> ());
                             x7176))|])
    let (fill :
      'tags this ->
        value:float -> ?start:float -> ?end_:float -> unit -> 'tags this)
      =
      fun (x7190 : 'tags this) ->
        fun ~value:(x7184 : float) ->
          fun ?start:(x7185 : float option) ->
            fun ?end_:(x7186 : float option) ->
              fun () ->
                this_of_js Obj.magic
                  (let x7192 = this_to_js Obj.magic x7190 in
                   Ojs.call (Ojs.get_prop_ascii x7192 "fill") "apply"
                     [|x7192;((let x7187 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x7187 "push"
                                    [|(Ojs.float_to_js x7184)|]);
                               (match x7185 with
                                | Some x7189 ->
                                    ignore
                                      (Ojs.call x7187 "push"
                                         [|(Ojs.float_to_js x7189)|])
                                | None -> ());
                               (match x7186 with
                                | Some x7188 ->
                                    ignore
                                      (Ojs.call x7187 "push"
                                         [|(Ojs.float_to_js x7188)|])
                                | None -> ());
                               x7187))|])
    let (filter :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> any) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x7201 : 'tags this) ->
        fun ~predicate:(x7194 : value:float -> index:float -> array:t -> any)
          ->
          fun ?thisArg:(x7195 : any option) ->
            fun () ->
              t_of_js
                (let x7203 = this_to_js Obj.magic x7201 in
                 Ojs.call (Ojs.get_prop_ascii x7203 "filter") "apply"
                   [|x7203;((let x7196 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7196 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x7198 : Ojs.t) ->
                                          fun (x7199 : Ojs.t) ->
                                            fun (x7200 : Ojs.t) ->
                                              any_to_js
                                                (x7194
                                                   ~value:(Ojs.float_of_js
                                                             x7198)
                                                   ~index:(Ojs.float_of_js
                                                             x7199)
                                                   ~array:(t_of_js x7200))))|]);
                             (match x7195 with
                              | Some x7197 ->
                                  ignore
                                    (Ojs.call x7196 "push"
                                       [|(any_to_js x7197)|])
                              | None -> ());
                             x7196))|])
    let (find :
      'tags this ->
        predicate:(value:float -> index:float -> obj:t -> bool) ->
          ?thisArg:any -> unit -> float option)
      =
      fun (x7211 : 'tags this) ->
        fun ~predicate:(x7204 : value:float -> index:float -> obj:t -> bool)
          ->
          fun ?thisArg:(x7205 : any option) ->
            fun () ->
              Ojs.option_of_js Ojs.float_of_js
                (let x7213 = this_to_js Obj.magic x7211 in
                 Ojs.call (Ojs.get_prop_ascii x7213 "find") "apply"
                   [|x7213;((let x7206 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7206 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x7208 : Ojs.t) ->
                                          fun (x7209 : Ojs.t) ->
                                            fun (x7210 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x7204
                                                   ~value:(Ojs.float_of_js
                                                             x7208)
                                                   ~index:(Ojs.float_of_js
                                                             x7209)
                                                   ~obj:(t_of_js x7210))))|]);
                             (match x7205 with
                              | Some x7207 ->
                                  ignore
                                    (Ojs.call x7206 "push"
                                       [|(any_to_js x7207)|])
                              | None -> ());
                             x7206))|])
    let (findIndex :
      'tags this ->
        predicate:(value:float -> index:float -> obj:t -> bool) ->
          ?thisArg:any -> unit -> float)
      =
      fun (x7222 : 'tags this) ->
        fun ~predicate:(x7215 : value:float -> index:float -> obj:t -> bool)
          ->
          fun ?thisArg:(x7216 : any option) ->
            fun () ->
              Ojs.float_of_js
                (let x7224 = this_to_js Obj.magic x7222 in
                 Ojs.call (Ojs.get_prop_ascii x7224 "findIndex") "apply"
                   [|x7224;((let x7217 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7217 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x7219 : Ojs.t) ->
                                          fun (x7220 : Ojs.t) ->
                                            fun (x7221 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x7215
                                                   ~value:(Ojs.float_of_js
                                                             x7219)
                                                   ~index:(Ojs.float_of_js
                                                             x7220)
                                                   ~obj:(t_of_js x7221))))|]);
                             (match x7216 with
                              | Some x7218 ->
                                  ignore
                                    (Ojs.call x7217 "push"
                                       [|(any_to_js x7218)|])
                              | None -> ());
                             x7217))|])
    let (forEach :
      'tags this ->
        callbackfn:(value:float -> index:float -> array:t -> unit) ->
          ?thisArg:any -> unit -> unit)
      =
      fun (x7232 : 'tags this) ->
        fun
          ~callbackfn:(x7225 : value:float -> index:float -> array:t -> unit)
          ->
          fun ?thisArg:(x7226 : any option) ->
            fun () ->
              ignore
                (let x7234 = this_to_js Obj.magic x7232 in
                 Ojs.call (Ojs.get_prop_ascii x7234 "forEach") "apply"
                   [|x7234;((let x7227 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7227 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x7229 : Ojs.t) ->
                                          fun (x7230 : Ojs.t) ->
                                            fun (x7231 : Ojs.t) ->
                                              x7225
                                                ~value:(Ojs.float_of_js x7229)
                                                ~index:(Ojs.float_of_js x7230)
                                                ~array:(t_of_js x7231)))|]);
                             (match x7226 with
                              | Some x7228 ->
                                  ignore
                                    (Ojs.call x7227 "push"
                                       [|(any_to_js x7228)|])
                              | None -> ());
                             x7227))|])
    let (indexOf :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> float)
      =
      fun (x7239 : 'tags this) ->
        fun ~searchElement:(x7235 : float) ->
          fun ?fromIndex:(x7236 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x7241 = this_to_js Obj.magic x7239 in
                 Ojs.call (Ojs.get_prop_ascii x7241 "indexOf") "apply"
                   [|x7241;((let x7237 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7237 "push"
                                  [|(Ojs.float_to_js x7235)|]);
                             (match x7236 with
                              | Some x7238 ->
                                  ignore
                                    (Ojs.call x7237 "push"
                                       [|(Ojs.float_to_js x7238)|])
                              | None -> ());
                             x7237))|])
    let (join : 'tags this -> ?separator:string -> unit -> string) =
      fun (x7245 : 'tags this) ->
        fun ?separator:(x7242 : string option) ->
          fun () ->
            Ojs.string_of_js
              (let x7247 = this_to_js Obj.magic x7245 in
               Ojs.call (Ojs.get_prop_ascii x7247 "join") "apply"
                 [|x7247;((let x7243 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x7242 with
                            | Some x7244 ->
                                ignore
                                  (Ojs.call x7243 "push"
                                     [|(Ojs.string_to_js x7244)|])
                            | None -> ());
                           x7243))|])
    let (lastIndexOf :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> float)
      =
      fun (x7252 : 'tags this) ->
        fun ~searchElement:(x7248 : float) ->
          fun ?fromIndex:(x7249 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x7254 = this_to_js Obj.magic x7252 in
                 Ojs.call (Ojs.get_prop_ascii x7254 "lastIndexOf") "apply"
                   [|x7254;((let x7250 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7250 "push"
                                  [|(Ojs.float_to_js x7248)|]);
                             (match x7249 with
                              | Some x7251 ->
                                  ignore
                                    (Ojs.call x7250 "push"
                                       [|(Ojs.float_to_js x7251)|])
                              | None -> ());
                             x7250))|])
    let (get_length : 'tags this -> float) =
      fun (x7255 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x7255) "length")
    let (map :
      'tags this ->
        callbackfn:(value:float -> index:float -> array:t -> float) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x7264 : 'tags this) ->
        fun
          ~callbackfn:(x7257 :
                        value:float -> index:float -> array:t -> float)
          ->
          fun ?thisArg:(x7258 : any option) ->
            fun () ->
              t_of_js
                (let x7266 = this_to_js Obj.magic x7264 in
                 Ojs.call (Ojs.get_prop_ascii x7266 "map") "apply"
                   [|x7266;((let x7259 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7259 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x7261 : Ojs.t) ->
                                          fun (x7262 : Ojs.t) ->
                                            fun (x7263 : Ojs.t) ->
                                              Ojs.float_to_js
                                                (x7257
                                                   ~value:(Ojs.float_of_js
                                                             x7261)
                                                   ~index:(Ojs.float_of_js
                                                             x7262)
                                                   ~array:(t_of_js x7263))))|]);
                             (match x7258 with
                              | Some x7260 ->
                                  ignore
                                    (Ojs.call x7259 "push"
                                       [|(any_to_js x7260)|])
                              | None -> ());
                             x7259))|])
    let (reduce :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> float)
      =
      fun (x7272 : 'tags this) ->
        fun
          ~callbackfn:(x7267 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x7272) "reduce"
               [|(Ojs.fun_to_js 4
                    (fun (x7268 : Ojs.t) ->
                       fun (x7269 : Ojs.t) ->
                         fun (x7270 : Ojs.t) ->
                           fun (x7271 : Ojs.t) ->
                             Ojs.float_to_js
                               (x7267 ~previousValue:(Ojs.float_of_js x7268)
                                  ~currentValue:(Ojs.float_of_js x7269)
                                  ~currentIndex:(Ojs.float_of_js x7270)
                                  ~array:(t_of_js x7271))))|])
    let (reduce' :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> initialValue:float -> float)
      =
      fun (x7280 : 'tags this) ->
        fun
          ~callbackfn:(x7274 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          fun ~initialValue:(x7279 : float) ->
            Ojs.float_of_js
              (Ojs.call (this_to_js Obj.magic x7280) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x7275 : Ojs.t) ->
                         fun (x7276 : Ojs.t) ->
                           fun (x7277 : Ojs.t) ->
                             fun (x7278 : Ojs.t) ->
                               Ojs.float_to_js
                                 (x7274
                                    ~previousValue:(Ojs.float_of_js x7275)
                                    ~currentValue:(Ojs.float_of_js x7276)
                                    ~currentIndex:(Ojs.float_of_js x7277)
                                    ~array:(t_of_js x7278))));(Ojs.float_to_js
                                                                 x7279)|])
    let (reduce'' :
      'tags this ->
        callbackfn:(previousValue:'U ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x7288 : 'tags this) ->
        fun
          ~callbackfn:(x7282 :
                        previousValue:'U ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x7287 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic x7288) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x7283 : Ojs.t) ->
                         fun (x7284 : Ojs.t) ->
                           fun (x7285 : Ojs.t) ->
                             fun (x7286 : Ojs.t) ->
                               Obj.magic
                                 (x7282 ~previousValue:(Obj.magic x7283)
                                    ~currentValue:(Ojs.float_of_js x7284)
                                    ~currentIndex:(Ojs.float_of_js x7285)
                                    ~array:(t_of_js x7286))));(Obj.magic
                                                                 x7287)|])
    let (reduceRight :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> float)
      =
      fun (x7295 : 'tags this) ->
        fun
          ~callbackfn:(x7290 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x7295) "reduceRight"
               [|(Ojs.fun_to_js 4
                    (fun (x7291 : Ojs.t) ->
                       fun (x7292 : Ojs.t) ->
                         fun (x7293 : Ojs.t) ->
                           fun (x7294 : Ojs.t) ->
                             Ojs.float_to_js
                               (x7290 ~previousValue:(Ojs.float_of_js x7291)
                                  ~currentValue:(Ojs.float_of_js x7292)
                                  ~currentIndex:(Ojs.float_of_js x7293)
                                  ~array:(t_of_js x7294))))|])
    let (reduceRight' :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> initialValue:float -> float)
      =
      fun (x7303 : 'tags this) ->
        fun
          ~callbackfn:(x7297 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          fun ~initialValue:(x7302 : float) ->
            Ojs.float_of_js
              (Ojs.call (this_to_js Obj.magic x7303) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x7298 : Ojs.t) ->
                         fun (x7299 : Ojs.t) ->
                           fun (x7300 : Ojs.t) ->
                             fun (x7301 : Ojs.t) ->
                               Ojs.float_to_js
                                 (x7297
                                    ~previousValue:(Ojs.float_of_js x7298)
                                    ~currentValue:(Ojs.float_of_js x7299)
                                    ~currentIndex:(Ojs.float_of_js x7300)
                                    ~array:(t_of_js x7301))));(Ojs.float_to_js
                                                                 x7302)|])
    let (reduceRight'' :
      'tags this ->
        callbackfn:(previousValue:'U ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x7311 : 'tags this) ->
        fun
          ~callbackfn:(x7305 :
                        previousValue:'U ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x7310 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic x7311) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x7306 : Ojs.t) ->
                         fun (x7307 : Ojs.t) ->
                           fun (x7308 : Ojs.t) ->
                             fun (x7309 : Ojs.t) ->
                               Obj.magic
                                 (x7305 ~previousValue:(Obj.magic x7306)
                                    ~currentValue:(Ojs.float_of_js x7307)
                                    ~currentIndex:(Ojs.float_of_js x7308)
                                    ~array:(t_of_js x7309))));(Obj.magic
                                                                 x7310)|])
    let (reverse : 'tags this -> t) =
      fun (x7313 : 'tags this) ->
        t_of_js (Ojs.call (this_to_js Obj.magic x7313) "reverse" [||])
    let (set_ :
      'tags this -> array:float ArrayLike.t -> ?offset:float -> unit -> unit)
      =
      fun (x7320 : 'tags this) ->
        fun ~array:(x7315 : float ArrayLike.t) ->
          fun ?offset:(x7316 : float option) ->
            fun () ->
              ignore
                (let x7322 = this_to_js Obj.magic x7320 in
                 Ojs.call (Ojs.get_prop_ascii x7322 "set") "apply"
                   [|x7322;((let x7317 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7317 "push"
                                  [|(ArrayLike.t_to_js Ojs.float_to_js x7315)|]);
                             (match x7316 with
                              | Some x7318 ->
                                  ignore
                                    (Ojs.call x7317 "push"
                                       [|(Ojs.float_to_js x7318)|])
                              | None -> ());
                             x7317))|])
    let (slice : 'tags this -> ?start:float -> ?end_:float -> unit -> t) =
      fun (x7328 : 'tags this) ->
        fun ?start:(x7323 : float option) ->
          fun ?end_:(x7324 : float option) ->
            fun () ->
              t_of_js
                (let x7330 = this_to_js Obj.magic x7328 in
                 Ojs.call (Ojs.get_prop_ascii x7330 "slice") "apply"
                   [|x7330;((let x7325 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x7323 with
                              | Some x7327 ->
                                  ignore
                                    (Ojs.call x7325 "push"
                                       [|(Ojs.float_to_js x7327)|])
                              | None -> ());
                             (match x7324 with
                              | Some x7326 ->
                                  ignore
                                    (Ojs.call x7325 "push"
                                       [|(Ojs.float_to_js x7326)|])
                              | None -> ());
                             x7325))|])
    let (some :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x7338 : 'tags this) ->
        fun
          ~predicate:(x7331 :
                       value:float -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x7332 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x7340 = this_to_js Obj.magic x7338 in
                 Ojs.call (Ojs.get_prop_ascii x7340 "some") "apply"
                   [|x7340;((let x7333 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7333 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x7335 : Ojs.t) ->
                                          fun (x7336 : Ojs.t) ->
                                            fun (x7337 : Ojs.t) ->
                                              unknown_to_js
                                                (x7331
                                                   ~value:(Ojs.float_of_js
                                                             x7335)
                                                   ~index:(Ojs.float_of_js
                                                             x7336)
                                                   ~array:(t_of_js x7337))))|]);
                             (match x7332 with
                              | Some x7334 ->
                                  ignore
                                    (Ojs.call x7333 "push"
                                       [|(any_to_js x7334)|])
                              | None -> ());
                             x7333))|])
    let (sort :
      'tags this ->
        ?compareFn:(a:float -> b:float -> float) -> unit -> 'tags this)
      =
      fun (x7346 : 'tags this) ->
        fun ?compareFn:(x7341 : (a:float -> b:float -> float) option) ->
          fun () ->
            this_of_js Obj.magic
              (let x7348 = this_to_js Obj.magic x7346 in
               Ojs.call (Ojs.get_prop_ascii x7348 "sort") "apply"
                 [|x7348;((let x7342 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x7341 with
                            | Some x7343 ->
                                ignore
                                  (Ojs.call x7342 "push"
                                     [|(Ojs.fun_to_js 2
                                          (fun (x7344 : Ojs.t) ->
                                             fun (x7345 : Ojs.t) ->
                                               Ojs.float_to_js
                                                 (x7343
                                                    ~a:(Ojs.float_of_js x7344)
                                                    ~b:(Ojs.float_of_js x7345))))|])
                            | None -> ());
                           x7342))|])
    let (subarray : 'tags this -> ?begin_:float -> ?end_:float -> unit -> t)
      =
      fun (x7355 : 'tags this) ->
        fun ?begin_:(x7350 : float option) ->
          fun ?end_:(x7351 : float option) ->
            fun () ->
              t_of_js
                (let x7357 = this_to_js Obj.magic x7355 in
                 Ojs.call (Ojs.get_prop_ascii x7357 "subarray") "apply"
                   [|x7357;((let x7352 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x7350 with
                              | Some x7354 ->
                                  ignore
                                    (Ojs.call x7352 "push"
                                       [|(Ojs.float_to_js x7354)|])
                              | None -> ());
                             (match x7351 with
                              | Some x7353 ->
                                  ignore
                                    (Ojs.call x7352 "push"
                                       [|(Ojs.float_to_js x7353)|])
                              | None -> ());
                             x7352))|])
    let (toLocaleString : 'tags this -> string) =
      fun (x7358 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x7358) "toLocaleString" [||])
    let (toString : 'tags this -> string) =
      fun (x7360 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x7360) "toString" [||])
    let (valueOf : 'tags this -> t) =
      fun (x7362 : 'tags this) ->
        t_of_js (Ojs.call (this_to_js Obj.magic x7362) "valueOf" [||])
    let (get : 'tags this -> float -> float) =
      fun (x7364 : 'tags this) ->
        fun (x7366 : float) ->
          Ojs.float_of_js
            (Ojs.get_prop (this_to_js Obj.magic x7364)
               (Ojs.float_to_js x7366))
    let (set : 'tags this -> float -> float -> unit) =
      fun (x7367 : 'tags this) ->
        fun (x7369 : float) ->
          fun (x7370 : float) ->
            Ojs.set_prop (this_to_js Obj.magic x7367) (Ojs.float_to_js x7369)
              (Ojs.float_to_js x7370)
    let (create : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Uint8Array") [||])
    let (create' : float Iterable.t -> t) =
      fun (x7371 : float Iterable.t) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Uint8Array")
             [|(Iterable.t_to_js Ojs.float_to_js x7371)|])
    let (from :
      arrayLike:float Iterable.t ->
        ?mapfn:(v:float -> k:float -> float) -> ?thisArg:any -> unit -> t)
      =
      fun ~arrayLike:(x7373 : float Iterable.t) ->
        fun ?mapfn:(x7374 : (v:float -> k:float -> float) option) ->
          fun ?thisArg:(x7375 : any option) ->
            fun () ->
              t_of_js
                (let x7382 = Ojs.get_prop_ascii Ojs.global "Uint8Array" in
                 Ojs.call (Ojs.get_prop_ascii x7382 "from") "apply"
                   [|x7382;((let x7376 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7376 "push"
                                  [|(Iterable.t_to_js Ojs.float_to_js x7373)|]);
                             (match x7374 with
                              | Some x7378 ->
                                  ignore
                                    (Ojs.call x7376 "push"
                                       [|(Ojs.fun_to_js 2
                                            (fun (x7379 : Ojs.t) ->
                                               fun (x7380 : Ojs.t) ->
                                                 Ojs.float_to_js
                                                   (x7378
                                                      ~v:(Ojs.float_of_js
                                                            x7379)
                                                      ~k:(Ojs.float_of_js
                                                            x7380))))|])
                              | None -> ());
                             (match x7375 with
                              | Some x7377 ->
                                  ignore
                                    (Ojs.call x7376 "push"
                                       [|(any_to_js x7377)|])
                              | None -> ());
                             x7376))|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Uint8Array")
             "prototype")
    let (create'' : float -> t) =
      fun (x7383 : float) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Uint8Array")
             [|(Ojs.float_to_js x7383)|])
    let (create''' :
      [ `U1 of float ArrayLike.t  | `U2 of ArrayBufferLike.t ] -> t) =
      fun (x7384 : [ `U1 of float ArrayLike.t  | `U2 of ArrayBufferLike.t ])
        ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Uint8Array")
             [|((match x7384 with
                 | `U1 x7385 -> ArrayLike.t_to_js Ojs.float_to_js x7385
                 | `U2 x7387 -> ArrayBufferLike.t_to_js x7387))|])
    let (create'''' :
      buffer:ArrayBufferLike.t ->
        ?byteOffset:float -> ?length:float -> unit -> t)
      =
      fun ~buffer:(x7388 : ArrayBufferLike.t) ->
        fun ?byteOffset:(x7389 : float option) ->
          fun ?length:(x7390 : float option) ->
            fun () ->
              t_of_js
                (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "Uint8Array")
                   (let x7391 =
                      Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                        [||] in
                    ignore
                      (Ojs.call x7391 "push"
                         [|(ArrayBufferLike.t_to_js x7388)|]);
                    (match x7389 with
                     | Some x7393 ->
                         ignore
                           (Ojs.call x7391 "push" [|(Ojs.float_to_js x7393)|])
                     | None -> ());
                    (match x7390 with
                     | Some x7392 ->
                         ignore
                           (Ojs.call x7391 "push" [|(Ojs.float_to_js x7392)|])
                     | None -> ());
                    x7391))
    let (bytes_per_element : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Uint8Array")
             "BYTES_PER_ELEMENT")
    let (of_ : float list -> t) =
      fun (x7394 : float list) ->
        t_of_js
          (let x7397 = Ojs.get_prop_ascii Ojs.global "Uint8Array" in
           Ojs.call (Ojs.get_prop_ascii x7397 "of") "apply"
             [|x7397;((let x7395 =
                         Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                           [||] in
                       List.iter
                         (fun (x7396 : float) ->
                            ignore
                              (Ojs.call x7395 "push"
                                 [|(Ojs.float_to_js x7396)|])) x7394;
                       x7395))|])
    let (from' : float ArrayLike.t -> t) =
      fun (x7398 : float ArrayLike.t) ->
        t_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Uint8Array") "from"
             [|(ArrayLike.t_to_js Ojs.float_to_js x7398)|])
    let (from'' :
      arrayLike:'T ArrayLike.t ->
        mapfn:(v:'T -> k:float -> float) -> ?thisArg:any -> unit -> t)
      =
      fun ~arrayLike:(x7400 : 'T ArrayLike.t) ->
        fun ~mapfn:(x7401 : v:'T -> k:float -> float) ->
          fun ?thisArg:(x7402 : any option) ->
            fun () ->
              t_of_js
                (let x7408 = Ojs.get_prop_ascii Ojs.global "Uint8Array" in
                 Ojs.call (Ojs.get_prop_ascii x7408 "from") "apply"
                   [|x7408;((let x7403 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7403 "push"
                                  [|(ArrayLike.t_to_js Obj.magic x7400)|]);
                             ignore
                               (Ojs.call x7403 "push"
                                  [|(Ojs.fun_to_js 2
                                       (fun (x7405 : Ojs.t) ->
                                          fun (x7406 : Ojs.t) ->
                                            Ojs.float_to_js
                                              (x7401 ~v:(Obj.magic x7405)
                                                 ~k:(Ojs.float_of_js x7406))))|]);
                             (match x7402 with
                              | Some x7404 ->
                                  ignore
                                    (Ojs.call x7403 "push"
                                       [|(any_to_js x7404)|])
                              | None -> ());
                             x7403))|])
    let cast_from = Obj.magic
  end
module Uint32Array =
  struct
    type t = [ `Uint32Array ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type tags = [ `Uint32Array ]
    type 'tags this = 'tags intf constraint 'tags = [> `Uint32Array ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x7411 : Ojs.t) -> intf_of_js __tags_of_js x7411
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x7409 : __tags intf) -> intf_to_js __tags_to_js x7409
    let (findLast :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> bool) ->
          ?thisArg:any -> unit -> 'S option)
      =
      fun (x7420 : 'tags this) ->
        fun
          ~predicate:(x7413 : value:float -> index:float -> array:t -> bool)
          ->
          fun ?thisArg:(x7414 : any option) ->
            fun () ->
              Ojs.option_of_js Obj.magic
                (let x7422 = this_to_js Obj.magic x7420 in
                 Ojs.call (Ojs.get_prop_ascii x7422 "findLast") "apply"
                   [|x7422;((let x7415 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7415 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x7417 : Ojs.t) ->
                                          fun (x7418 : Ojs.t) ->
                                            fun (x7419 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x7413
                                                   ~value:(Ojs.float_of_js
                                                             x7417)
                                                   ~index:(Ojs.float_of_js
                                                             x7418)
                                                   ~array:(t_of_js x7419))))|]);
                             (match x7414 with
                              | Some x7416 ->
                                  ignore
                                    (Ojs.call x7415 "push"
                                       [|(any_to_js x7416)|])
                              | None -> ());
                             x7415))|])
    let (findLast' :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> float option)
      =
      fun (x7431 : 'tags this) ->
        fun
          ~predicate:(x7424 :
                       value:float -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x7425 : any option) ->
            fun () ->
              Ojs.option_of_js Ojs.float_of_js
                (let x7433 = this_to_js Obj.magic x7431 in
                 Ojs.call (Ojs.get_prop_ascii x7433 "findLast") "apply"
                   [|x7433;((let x7426 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7426 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x7428 : Ojs.t) ->
                                          fun (x7429 : Ojs.t) ->
                                            fun (x7430 : Ojs.t) ->
                                              unknown_to_js
                                                (x7424
                                                   ~value:(Ojs.float_of_js
                                                             x7428)
                                                   ~index:(Ojs.float_of_js
                                                             x7429)
                                                   ~array:(t_of_js x7430))))|]);
                             (match x7425 with
                              | Some x7427 ->
                                  ignore
                                    (Ojs.call x7426 "push"
                                       [|(any_to_js x7427)|])
                              | None -> ());
                             x7426))|])
    let (findLastIndex :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> float)
      =
      fun (x7442 : 'tags this) ->
        fun
          ~predicate:(x7435 :
                       value:float -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x7436 : any option) ->
            fun () ->
              Ojs.float_of_js
                (let x7444 = this_to_js Obj.magic x7442 in
                 Ojs.call (Ojs.get_prop_ascii x7444 "findLastIndex") "apply"
                   [|x7444;((let x7437 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7437 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x7439 : Ojs.t) ->
                                          fun (x7440 : Ojs.t) ->
                                            fun (x7441 : Ojs.t) ->
                                              unknown_to_js
                                                (x7435
                                                   ~value:(Ojs.float_of_js
                                                             x7439)
                                                   ~index:(Ojs.float_of_js
                                                             x7440)
                                                   ~array:(t_of_js x7441))))|]);
                             (match x7436 with
                              | Some x7438 ->
                                  ignore
                                    (Ojs.call x7437 "push"
                                       [|(any_to_js x7438)|])
                              | None -> ());
                             x7437))|])
    let (at : 'tags this -> index:float -> float option) =
      fun (x7446 : 'tags this) ->
        fun ~index:(x7445 : float) ->
          Ojs.option_of_js Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x7446) "at"
               [|(Ojs.float_to_js x7445)|])
    let (includes :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> bool)
      =
      fun (x7453 : 'tags this) ->
        fun ~searchElement:(x7449 : float) ->
          fun ?fromIndex:(x7450 : float option) ->
            fun () ->
              Ojs.bool_of_js
                (let x7455 = this_to_js Obj.magic x7453 in
                 Ojs.call (Ojs.get_prop_ascii x7455 "includes") "apply"
                   [|x7455;((let x7451 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7451 "push"
                                  [|(Ojs.float_to_js x7449)|]);
                             (match x7450 with
                              | Some x7452 ->
                                  ignore
                                    (Ojs.call x7451 "push"
                                       [|(Ojs.float_to_js x7452)|])
                              | None -> ());
                             x7451))|])
    let (entries : 'tags this -> (float * float) IterableIterator.t) =
      fun (x7456 : 'tags this) ->
        IterableIterator.t_of_js
          (fun (x7458 : Ojs.t) ->
             let x7459 = x7458 in
             ((Ojs.float_of_js (Ojs.array_get x7459 0)),
               (Ojs.float_of_js (Ojs.array_get x7459 1))))
          (Ojs.call (this_to_js Obj.magic x7456) "entries" [||])
    let (keys : 'tags this -> float IterableIterator.t) =
      fun (x7460 : 'tags this) ->
        IterableIterator.t_of_js Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x7460) "keys" [||])
    let (values : 'tags this -> float IterableIterator.t) =
      fun (x7463 : 'tags this) ->
        IterableIterator.t_of_js Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x7463) "values" [||])
    let (get_BYTES_PER_ELEMENT : 'tags this -> float) =
      fun (x7466 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x7466)
             "BYTES_PER_ELEMENT")
    let (get_buffer : 'tags this -> ArrayBufferLike.t) =
      fun (x7468 : 'tags this) ->
        ArrayBufferLike.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x7468) "buffer")
    let (get_byteLength : 'tags this -> float) =
      fun (x7470 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x7470) "byteLength")
    let (get_byteOffset : 'tags this -> float) =
      fun (x7472 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x7472) "byteOffset")
    let (copyWithin :
      'tags this ->
        target:float -> ?start:float -> ?end_:float -> unit -> 'tags this)
      =
      fun (x7480 : 'tags this) ->
        fun ~target:(x7474 : float) ->
          fun ?start:(x7475 : float option) ->
            fun ?end_:(x7476 : float option) ->
              fun () ->
                this_of_js Obj.magic
                  (let x7482 = this_to_js Obj.magic x7480 in
                   Ojs.call (Ojs.get_prop_ascii x7482 "copyWithin") "apply"
                     [|x7482;((let x7477 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x7477 "push"
                                    [|(Ojs.float_to_js x7474)|]);
                               (match x7475 with
                                | Some x7479 ->
                                    ignore
                                      (Ojs.call x7477 "push"
                                         [|(Ojs.float_to_js x7479)|])
                                | None -> ());
                               (match x7476 with
                                | Some x7478 ->
                                    ignore
                                      (Ojs.call x7477 "push"
                                         [|(Ojs.float_to_js x7478)|])
                                | None -> ());
                               x7477))|])
    let (every :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x7491 : 'tags this) ->
        fun
          ~predicate:(x7484 :
                       value:float -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x7485 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x7493 = this_to_js Obj.magic x7491 in
                 Ojs.call (Ojs.get_prop_ascii x7493 "every") "apply"
                   [|x7493;((let x7486 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7486 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x7488 : Ojs.t) ->
                                          fun (x7489 : Ojs.t) ->
                                            fun (x7490 : Ojs.t) ->
                                              unknown_to_js
                                                (x7484
                                                   ~value:(Ojs.float_of_js
                                                             x7488)
                                                   ~index:(Ojs.float_of_js
                                                             x7489)
                                                   ~array:(t_of_js x7490))))|]);
                             (match x7485 with
                              | Some x7487 ->
                                  ignore
                                    (Ojs.call x7486 "push"
                                       [|(any_to_js x7487)|])
                              | None -> ());
                             x7486))|])
    let (fill :
      'tags this ->
        value:float -> ?start:float -> ?end_:float -> unit -> 'tags this)
      =
      fun (x7500 : 'tags this) ->
        fun ~value:(x7494 : float) ->
          fun ?start:(x7495 : float option) ->
            fun ?end_:(x7496 : float option) ->
              fun () ->
                this_of_js Obj.magic
                  (let x7502 = this_to_js Obj.magic x7500 in
                   Ojs.call (Ojs.get_prop_ascii x7502 "fill") "apply"
                     [|x7502;((let x7497 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x7497 "push"
                                    [|(Ojs.float_to_js x7494)|]);
                               (match x7495 with
                                | Some x7499 ->
                                    ignore
                                      (Ojs.call x7497 "push"
                                         [|(Ojs.float_to_js x7499)|])
                                | None -> ());
                               (match x7496 with
                                | Some x7498 ->
                                    ignore
                                      (Ojs.call x7497 "push"
                                         [|(Ojs.float_to_js x7498)|])
                                | None -> ());
                               x7497))|])
    let (filter :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> any) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x7511 : 'tags this) ->
        fun ~predicate:(x7504 : value:float -> index:float -> array:t -> any)
          ->
          fun ?thisArg:(x7505 : any option) ->
            fun () ->
              t_of_js
                (let x7513 = this_to_js Obj.magic x7511 in
                 Ojs.call (Ojs.get_prop_ascii x7513 "filter") "apply"
                   [|x7513;((let x7506 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7506 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x7508 : Ojs.t) ->
                                          fun (x7509 : Ojs.t) ->
                                            fun (x7510 : Ojs.t) ->
                                              any_to_js
                                                (x7504
                                                   ~value:(Ojs.float_of_js
                                                             x7508)
                                                   ~index:(Ojs.float_of_js
                                                             x7509)
                                                   ~array:(t_of_js x7510))))|]);
                             (match x7505 with
                              | Some x7507 ->
                                  ignore
                                    (Ojs.call x7506 "push"
                                       [|(any_to_js x7507)|])
                              | None -> ());
                             x7506))|])
    let (find :
      'tags this ->
        predicate:(value:float -> index:float -> obj:t -> bool) ->
          ?thisArg:any -> unit -> float option)
      =
      fun (x7521 : 'tags this) ->
        fun ~predicate:(x7514 : value:float -> index:float -> obj:t -> bool)
          ->
          fun ?thisArg:(x7515 : any option) ->
            fun () ->
              Ojs.option_of_js Ojs.float_of_js
                (let x7523 = this_to_js Obj.magic x7521 in
                 Ojs.call (Ojs.get_prop_ascii x7523 "find") "apply"
                   [|x7523;((let x7516 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7516 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x7518 : Ojs.t) ->
                                          fun (x7519 : Ojs.t) ->
                                            fun (x7520 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x7514
                                                   ~value:(Ojs.float_of_js
                                                             x7518)
                                                   ~index:(Ojs.float_of_js
                                                             x7519)
                                                   ~obj:(t_of_js x7520))))|]);
                             (match x7515 with
                              | Some x7517 ->
                                  ignore
                                    (Ojs.call x7516 "push"
                                       [|(any_to_js x7517)|])
                              | None -> ());
                             x7516))|])
    let (findIndex :
      'tags this ->
        predicate:(value:float -> index:float -> obj:t -> bool) ->
          ?thisArg:any -> unit -> float)
      =
      fun (x7532 : 'tags this) ->
        fun ~predicate:(x7525 : value:float -> index:float -> obj:t -> bool)
          ->
          fun ?thisArg:(x7526 : any option) ->
            fun () ->
              Ojs.float_of_js
                (let x7534 = this_to_js Obj.magic x7532 in
                 Ojs.call (Ojs.get_prop_ascii x7534 "findIndex") "apply"
                   [|x7534;((let x7527 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7527 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x7529 : Ojs.t) ->
                                          fun (x7530 : Ojs.t) ->
                                            fun (x7531 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x7525
                                                   ~value:(Ojs.float_of_js
                                                             x7529)
                                                   ~index:(Ojs.float_of_js
                                                             x7530)
                                                   ~obj:(t_of_js x7531))))|]);
                             (match x7526 with
                              | Some x7528 ->
                                  ignore
                                    (Ojs.call x7527 "push"
                                       [|(any_to_js x7528)|])
                              | None -> ());
                             x7527))|])
    let (forEach :
      'tags this ->
        callbackfn:(value:float -> index:float -> array:t -> unit) ->
          ?thisArg:any -> unit -> unit)
      =
      fun (x7542 : 'tags this) ->
        fun
          ~callbackfn:(x7535 : value:float -> index:float -> array:t -> unit)
          ->
          fun ?thisArg:(x7536 : any option) ->
            fun () ->
              ignore
                (let x7544 = this_to_js Obj.magic x7542 in
                 Ojs.call (Ojs.get_prop_ascii x7544 "forEach") "apply"
                   [|x7544;((let x7537 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7537 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x7539 : Ojs.t) ->
                                          fun (x7540 : Ojs.t) ->
                                            fun (x7541 : Ojs.t) ->
                                              x7535
                                                ~value:(Ojs.float_of_js x7539)
                                                ~index:(Ojs.float_of_js x7540)
                                                ~array:(t_of_js x7541)))|]);
                             (match x7536 with
                              | Some x7538 ->
                                  ignore
                                    (Ojs.call x7537 "push"
                                       [|(any_to_js x7538)|])
                              | None -> ());
                             x7537))|])
    let (indexOf :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> float)
      =
      fun (x7549 : 'tags this) ->
        fun ~searchElement:(x7545 : float) ->
          fun ?fromIndex:(x7546 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x7551 = this_to_js Obj.magic x7549 in
                 Ojs.call (Ojs.get_prop_ascii x7551 "indexOf") "apply"
                   [|x7551;((let x7547 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7547 "push"
                                  [|(Ojs.float_to_js x7545)|]);
                             (match x7546 with
                              | Some x7548 ->
                                  ignore
                                    (Ojs.call x7547 "push"
                                       [|(Ojs.float_to_js x7548)|])
                              | None -> ());
                             x7547))|])
    let (join : 'tags this -> ?separator:string -> unit -> string) =
      fun (x7555 : 'tags this) ->
        fun ?separator:(x7552 : string option) ->
          fun () ->
            Ojs.string_of_js
              (let x7557 = this_to_js Obj.magic x7555 in
               Ojs.call (Ojs.get_prop_ascii x7557 "join") "apply"
                 [|x7557;((let x7553 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x7552 with
                            | Some x7554 ->
                                ignore
                                  (Ojs.call x7553 "push"
                                     [|(Ojs.string_to_js x7554)|])
                            | None -> ());
                           x7553))|])
    let (lastIndexOf :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> float)
      =
      fun (x7562 : 'tags this) ->
        fun ~searchElement:(x7558 : float) ->
          fun ?fromIndex:(x7559 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x7564 = this_to_js Obj.magic x7562 in
                 Ojs.call (Ojs.get_prop_ascii x7564 "lastIndexOf") "apply"
                   [|x7564;((let x7560 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7560 "push"
                                  [|(Ojs.float_to_js x7558)|]);
                             (match x7559 with
                              | Some x7561 ->
                                  ignore
                                    (Ojs.call x7560 "push"
                                       [|(Ojs.float_to_js x7561)|])
                              | None -> ());
                             x7560))|])
    let (get_length : 'tags this -> float) =
      fun (x7565 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x7565) "length")
    let (map :
      'tags this ->
        callbackfn:(value:float -> index:float -> array:t -> float) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x7574 : 'tags this) ->
        fun
          ~callbackfn:(x7567 :
                        value:float -> index:float -> array:t -> float)
          ->
          fun ?thisArg:(x7568 : any option) ->
            fun () ->
              t_of_js
                (let x7576 = this_to_js Obj.magic x7574 in
                 Ojs.call (Ojs.get_prop_ascii x7576 "map") "apply"
                   [|x7576;((let x7569 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7569 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x7571 : Ojs.t) ->
                                          fun (x7572 : Ojs.t) ->
                                            fun (x7573 : Ojs.t) ->
                                              Ojs.float_to_js
                                                (x7567
                                                   ~value:(Ojs.float_of_js
                                                             x7571)
                                                   ~index:(Ojs.float_of_js
                                                             x7572)
                                                   ~array:(t_of_js x7573))))|]);
                             (match x7568 with
                              | Some x7570 ->
                                  ignore
                                    (Ojs.call x7569 "push"
                                       [|(any_to_js x7570)|])
                              | None -> ());
                             x7569))|])
    let (reduce :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> float)
      =
      fun (x7582 : 'tags this) ->
        fun
          ~callbackfn:(x7577 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x7582) "reduce"
               [|(Ojs.fun_to_js 4
                    (fun (x7578 : Ojs.t) ->
                       fun (x7579 : Ojs.t) ->
                         fun (x7580 : Ojs.t) ->
                           fun (x7581 : Ojs.t) ->
                             Ojs.float_to_js
                               (x7577 ~previousValue:(Ojs.float_of_js x7578)
                                  ~currentValue:(Ojs.float_of_js x7579)
                                  ~currentIndex:(Ojs.float_of_js x7580)
                                  ~array:(t_of_js x7581))))|])
    let (reduce' :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> initialValue:float -> float)
      =
      fun (x7590 : 'tags this) ->
        fun
          ~callbackfn:(x7584 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          fun ~initialValue:(x7589 : float) ->
            Ojs.float_of_js
              (Ojs.call (this_to_js Obj.magic x7590) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x7585 : Ojs.t) ->
                         fun (x7586 : Ojs.t) ->
                           fun (x7587 : Ojs.t) ->
                             fun (x7588 : Ojs.t) ->
                               Ojs.float_to_js
                                 (x7584
                                    ~previousValue:(Ojs.float_of_js x7585)
                                    ~currentValue:(Ojs.float_of_js x7586)
                                    ~currentIndex:(Ojs.float_of_js x7587)
                                    ~array:(t_of_js x7588))));(Ojs.float_to_js
                                                                 x7589)|])
    let (reduce'' :
      'tags this ->
        callbackfn:(previousValue:'U ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x7598 : 'tags this) ->
        fun
          ~callbackfn:(x7592 :
                        previousValue:'U ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x7597 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic x7598) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x7593 : Ojs.t) ->
                         fun (x7594 : Ojs.t) ->
                           fun (x7595 : Ojs.t) ->
                             fun (x7596 : Ojs.t) ->
                               Obj.magic
                                 (x7592 ~previousValue:(Obj.magic x7593)
                                    ~currentValue:(Ojs.float_of_js x7594)
                                    ~currentIndex:(Ojs.float_of_js x7595)
                                    ~array:(t_of_js x7596))));(Obj.magic
                                                                 x7597)|])
    let (reduceRight :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> float)
      =
      fun (x7605 : 'tags this) ->
        fun
          ~callbackfn:(x7600 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x7605) "reduceRight"
               [|(Ojs.fun_to_js 4
                    (fun (x7601 : Ojs.t) ->
                       fun (x7602 : Ojs.t) ->
                         fun (x7603 : Ojs.t) ->
                           fun (x7604 : Ojs.t) ->
                             Ojs.float_to_js
                               (x7600 ~previousValue:(Ojs.float_of_js x7601)
                                  ~currentValue:(Ojs.float_of_js x7602)
                                  ~currentIndex:(Ojs.float_of_js x7603)
                                  ~array:(t_of_js x7604))))|])
    let (reduceRight' :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> initialValue:float -> float)
      =
      fun (x7613 : 'tags this) ->
        fun
          ~callbackfn:(x7607 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          fun ~initialValue:(x7612 : float) ->
            Ojs.float_of_js
              (Ojs.call (this_to_js Obj.magic x7613) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x7608 : Ojs.t) ->
                         fun (x7609 : Ojs.t) ->
                           fun (x7610 : Ojs.t) ->
                             fun (x7611 : Ojs.t) ->
                               Ojs.float_to_js
                                 (x7607
                                    ~previousValue:(Ojs.float_of_js x7608)
                                    ~currentValue:(Ojs.float_of_js x7609)
                                    ~currentIndex:(Ojs.float_of_js x7610)
                                    ~array:(t_of_js x7611))));(Ojs.float_to_js
                                                                 x7612)|])
    let (reduceRight'' :
      'tags this ->
        callbackfn:(previousValue:'U ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x7621 : 'tags this) ->
        fun
          ~callbackfn:(x7615 :
                        previousValue:'U ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x7620 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic x7621) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x7616 : Ojs.t) ->
                         fun (x7617 : Ojs.t) ->
                           fun (x7618 : Ojs.t) ->
                             fun (x7619 : Ojs.t) ->
                               Obj.magic
                                 (x7615 ~previousValue:(Obj.magic x7616)
                                    ~currentValue:(Ojs.float_of_js x7617)
                                    ~currentIndex:(Ojs.float_of_js x7618)
                                    ~array:(t_of_js x7619))));(Obj.magic
                                                                 x7620)|])
    let (reverse : 'tags this -> t) =
      fun (x7623 : 'tags this) ->
        t_of_js (Ojs.call (this_to_js Obj.magic x7623) "reverse" [||])
    let (set_ :
      'tags this -> array:float ArrayLike.t -> ?offset:float -> unit -> unit)
      =
      fun (x7630 : 'tags this) ->
        fun ~array:(x7625 : float ArrayLike.t) ->
          fun ?offset:(x7626 : float option) ->
            fun () ->
              ignore
                (let x7632 = this_to_js Obj.magic x7630 in
                 Ojs.call (Ojs.get_prop_ascii x7632 "set") "apply"
                   [|x7632;((let x7627 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7627 "push"
                                  [|(ArrayLike.t_to_js Ojs.float_to_js x7625)|]);
                             (match x7626 with
                              | Some x7628 ->
                                  ignore
                                    (Ojs.call x7627 "push"
                                       [|(Ojs.float_to_js x7628)|])
                              | None -> ());
                             x7627))|])
    let (slice : 'tags this -> ?start:float -> ?end_:float -> unit -> t) =
      fun (x7638 : 'tags this) ->
        fun ?start:(x7633 : float option) ->
          fun ?end_:(x7634 : float option) ->
            fun () ->
              t_of_js
                (let x7640 = this_to_js Obj.magic x7638 in
                 Ojs.call (Ojs.get_prop_ascii x7640 "slice") "apply"
                   [|x7640;((let x7635 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x7633 with
                              | Some x7637 ->
                                  ignore
                                    (Ojs.call x7635 "push"
                                       [|(Ojs.float_to_js x7637)|])
                              | None -> ());
                             (match x7634 with
                              | Some x7636 ->
                                  ignore
                                    (Ojs.call x7635 "push"
                                       [|(Ojs.float_to_js x7636)|])
                              | None -> ());
                             x7635))|])
    let (some :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x7648 : 'tags this) ->
        fun
          ~predicate:(x7641 :
                       value:float -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x7642 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x7650 = this_to_js Obj.magic x7648 in
                 Ojs.call (Ojs.get_prop_ascii x7650 "some") "apply"
                   [|x7650;((let x7643 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7643 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x7645 : Ojs.t) ->
                                          fun (x7646 : Ojs.t) ->
                                            fun (x7647 : Ojs.t) ->
                                              unknown_to_js
                                                (x7641
                                                   ~value:(Ojs.float_of_js
                                                             x7645)
                                                   ~index:(Ojs.float_of_js
                                                             x7646)
                                                   ~array:(t_of_js x7647))))|]);
                             (match x7642 with
                              | Some x7644 ->
                                  ignore
                                    (Ojs.call x7643 "push"
                                       [|(any_to_js x7644)|])
                              | None -> ());
                             x7643))|])
    let (sort :
      'tags this ->
        ?compareFn:(a:float -> b:float -> float) -> unit -> 'tags this)
      =
      fun (x7656 : 'tags this) ->
        fun ?compareFn:(x7651 : (a:float -> b:float -> float) option) ->
          fun () ->
            this_of_js Obj.magic
              (let x7658 = this_to_js Obj.magic x7656 in
               Ojs.call (Ojs.get_prop_ascii x7658 "sort") "apply"
                 [|x7658;((let x7652 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x7651 with
                            | Some x7653 ->
                                ignore
                                  (Ojs.call x7652 "push"
                                     [|(Ojs.fun_to_js 2
                                          (fun (x7654 : Ojs.t) ->
                                             fun (x7655 : Ojs.t) ->
                                               Ojs.float_to_js
                                                 (x7653
                                                    ~a:(Ojs.float_of_js x7654)
                                                    ~b:(Ojs.float_of_js x7655))))|])
                            | None -> ());
                           x7652))|])
    let (subarray : 'tags this -> ?begin_:float -> ?end_:float -> unit -> t)
      =
      fun (x7665 : 'tags this) ->
        fun ?begin_:(x7660 : float option) ->
          fun ?end_:(x7661 : float option) ->
            fun () ->
              t_of_js
                (let x7667 = this_to_js Obj.magic x7665 in
                 Ojs.call (Ojs.get_prop_ascii x7667 "subarray") "apply"
                   [|x7667;((let x7662 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x7660 with
                              | Some x7664 ->
                                  ignore
                                    (Ojs.call x7662 "push"
                                       [|(Ojs.float_to_js x7664)|])
                              | None -> ());
                             (match x7661 with
                              | Some x7663 ->
                                  ignore
                                    (Ojs.call x7662 "push"
                                       [|(Ojs.float_to_js x7663)|])
                              | None -> ());
                             x7662))|])
    let (toLocaleString : 'tags this -> string) =
      fun (x7668 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x7668) "toLocaleString" [||])
    let (toString : 'tags this -> string) =
      fun (x7670 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x7670) "toString" [||])
    let (valueOf : 'tags this -> t) =
      fun (x7672 : 'tags this) ->
        t_of_js (Ojs.call (this_to_js Obj.magic x7672) "valueOf" [||])
    let (get : 'tags this -> float -> float) =
      fun (x7674 : 'tags this) ->
        fun (x7676 : float) ->
          Ojs.float_of_js
            (Ojs.get_prop (this_to_js Obj.magic x7674)
               (Ojs.float_to_js x7676))
    let (set : 'tags this -> float -> float -> unit) =
      fun (x7677 : 'tags this) ->
        fun (x7679 : float) ->
          fun (x7680 : float) ->
            Ojs.set_prop (this_to_js Obj.magic x7677) (Ojs.float_to_js x7679)
              (Ojs.float_to_js x7680)
    let (create : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Uint32Array") [||])
    let (create' : float Iterable.t -> t) =
      fun (x7681 : float Iterable.t) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Uint32Array")
             [|(Iterable.t_to_js Ojs.float_to_js x7681)|])
    let (from :
      arrayLike:float Iterable.t ->
        ?mapfn:(v:float -> k:float -> float) -> ?thisArg:any -> unit -> t)
      =
      fun ~arrayLike:(x7683 : float Iterable.t) ->
        fun ?mapfn:(x7684 : (v:float -> k:float -> float) option) ->
          fun ?thisArg:(x7685 : any option) ->
            fun () ->
              t_of_js
                (let x7692 = Ojs.get_prop_ascii Ojs.global "Uint32Array" in
                 Ojs.call (Ojs.get_prop_ascii x7692 "from") "apply"
                   [|x7692;((let x7686 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7686 "push"
                                  [|(Iterable.t_to_js Ojs.float_to_js x7683)|]);
                             (match x7684 with
                              | Some x7688 ->
                                  ignore
                                    (Ojs.call x7686 "push"
                                       [|(Ojs.fun_to_js 2
                                            (fun (x7689 : Ojs.t) ->
                                               fun (x7690 : Ojs.t) ->
                                                 Ojs.float_to_js
                                                   (x7688
                                                      ~v:(Ojs.float_of_js
                                                            x7689)
                                                      ~k:(Ojs.float_of_js
                                                            x7690))))|])
                              | None -> ());
                             (match x7685 with
                              | Some x7687 ->
                                  ignore
                                    (Ojs.call x7686 "push"
                                       [|(any_to_js x7687)|])
                              | None -> ());
                             x7686))|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Uint32Array")
             "prototype")
    let (create'' : float -> t) =
      fun (x7693 : float) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Uint32Array")
             [|(Ojs.float_to_js x7693)|])
    let (create''' :
      [ `U1 of float ArrayLike.t  | `U2 of ArrayBufferLike.t ] -> t) =
      fun (x7694 : [ `U1 of float ArrayLike.t  | `U2 of ArrayBufferLike.t ])
        ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Uint32Array")
             [|((match x7694 with
                 | `U1 x7695 -> ArrayLike.t_to_js Ojs.float_to_js x7695
                 | `U2 x7697 -> ArrayBufferLike.t_to_js x7697))|])
    let (create'''' :
      buffer:ArrayBufferLike.t ->
        ?byteOffset:float -> ?length:float -> unit -> t)
      =
      fun ~buffer:(x7698 : ArrayBufferLike.t) ->
        fun ?byteOffset:(x7699 : float option) ->
          fun ?length:(x7700 : float option) ->
            fun () ->
              t_of_js
                (Ojs.new_obj_arr
                   (Ojs.get_prop_ascii Ojs.global "Uint32Array")
                   (let x7701 =
                      Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                        [||] in
                    ignore
                      (Ojs.call x7701 "push"
                         [|(ArrayBufferLike.t_to_js x7698)|]);
                    (match x7699 with
                     | Some x7703 ->
                         ignore
                           (Ojs.call x7701 "push" [|(Ojs.float_to_js x7703)|])
                     | None -> ());
                    (match x7700 with
                     | Some x7702 ->
                         ignore
                           (Ojs.call x7701 "push" [|(Ojs.float_to_js x7702)|])
                     | None -> ());
                    x7701))
    let (bytes_per_element : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Uint32Array")
             "BYTES_PER_ELEMENT")
    let (of_ : float list -> t) =
      fun (x7704 : float list) ->
        t_of_js
          (let x7707 = Ojs.get_prop_ascii Ojs.global "Uint32Array" in
           Ojs.call (Ojs.get_prop_ascii x7707 "of") "apply"
             [|x7707;((let x7705 =
                         Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                           [||] in
                       List.iter
                         (fun (x7706 : float) ->
                            ignore
                              (Ojs.call x7705 "push"
                                 [|(Ojs.float_to_js x7706)|])) x7704;
                       x7705))|])
    let (from' : float ArrayLike.t -> t) =
      fun (x7708 : float ArrayLike.t) ->
        t_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Uint32Array") "from"
             [|(ArrayLike.t_to_js Ojs.float_to_js x7708)|])
    let (from'' :
      arrayLike:'T ArrayLike.t ->
        mapfn:(v:'T -> k:float -> float) -> ?thisArg:any -> unit -> t)
      =
      fun ~arrayLike:(x7710 : 'T ArrayLike.t) ->
        fun ~mapfn:(x7711 : v:'T -> k:float -> float) ->
          fun ?thisArg:(x7712 : any option) ->
            fun () ->
              t_of_js
                (let x7718 = Ojs.get_prop_ascii Ojs.global "Uint32Array" in
                 Ojs.call (Ojs.get_prop_ascii x7718 "from") "apply"
                   [|x7718;((let x7713 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7713 "push"
                                  [|(ArrayLike.t_to_js Obj.magic x7710)|]);
                             ignore
                               (Ojs.call x7713 "push"
                                  [|(Ojs.fun_to_js 2
                                       (fun (x7715 : Ojs.t) ->
                                          fun (x7716 : Ojs.t) ->
                                            Ojs.float_to_js
                                              (x7711 ~v:(Obj.magic x7715)
                                                 ~k:(Ojs.float_of_js x7716))))|]);
                             (match x7712 with
                              | Some x7714 ->
                                  ignore
                                    (Ojs.call x7713 "push"
                                       [|(any_to_js x7714)|])
                              | None -> ());
                             x7713))|])
    let cast_from = Obj.magic
  end
module Uint16Array =
  struct
    type t = [ `Uint16Array ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type tags = [ `Uint16Array ]
    type 'tags this = 'tags intf constraint 'tags = [> `Uint16Array ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x7721 : Ojs.t) -> intf_of_js __tags_of_js x7721
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x7719 : __tags intf) -> intf_to_js __tags_to_js x7719
    let (findLast :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> bool) ->
          ?thisArg:any -> unit -> 'S option)
      =
      fun (x7730 : 'tags this) ->
        fun
          ~predicate:(x7723 : value:float -> index:float -> array:t -> bool)
          ->
          fun ?thisArg:(x7724 : any option) ->
            fun () ->
              Ojs.option_of_js Obj.magic
                (let x7732 = this_to_js Obj.magic x7730 in
                 Ojs.call (Ojs.get_prop_ascii x7732 "findLast") "apply"
                   [|x7732;((let x7725 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7725 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x7727 : Ojs.t) ->
                                          fun (x7728 : Ojs.t) ->
                                            fun (x7729 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x7723
                                                   ~value:(Ojs.float_of_js
                                                             x7727)
                                                   ~index:(Ojs.float_of_js
                                                             x7728)
                                                   ~array:(t_of_js x7729))))|]);
                             (match x7724 with
                              | Some x7726 ->
                                  ignore
                                    (Ojs.call x7725 "push"
                                       [|(any_to_js x7726)|])
                              | None -> ());
                             x7725))|])
    let (findLast' :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> float option)
      =
      fun (x7741 : 'tags this) ->
        fun
          ~predicate:(x7734 :
                       value:float -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x7735 : any option) ->
            fun () ->
              Ojs.option_of_js Ojs.float_of_js
                (let x7743 = this_to_js Obj.magic x7741 in
                 Ojs.call (Ojs.get_prop_ascii x7743 "findLast") "apply"
                   [|x7743;((let x7736 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7736 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x7738 : Ojs.t) ->
                                          fun (x7739 : Ojs.t) ->
                                            fun (x7740 : Ojs.t) ->
                                              unknown_to_js
                                                (x7734
                                                   ~value:(Ojs.float_of_js
                                                             x7738)
                                                   ~index:(Ojs.float_of_js
                                                             x7739)
                                                   ~array:(t_of_js x7740))))|]);
                             (match x7735 with
                              | Some x7737 ->
                                  ignore
                                    (Ojs.call x7736 "push"
                                       [|(any_to_js x7737)|])
                              | None -> ());
                             x7736))|])
    let (findLastIndex :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> float)
      =
      fun (x7752 : 'tags this) ->
        fun
          ~predicate:(x7745 :
                       value:float -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x7746 : any option) ->
            fun () ->
              Ojs.float_of_js
                (let x7754 = this_to_js Obj.magic x7752 in
                 Ojs.call (Ojs.get_prop_ascii x7754 "findLastIndex") "apply"
                   [|x7754;((let x7747 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7747 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x7749 : Ojs.t) ->
                                          fun (x7750 : Ojs.t) ->
                                            fun (x7751 : Ojs.t) ->
                                              unknown_to_js
                                                (x7745
                                                   ~value:(Ojs.float_of_js
                                                             x7749)
                                                   ~index:(Ojs.float_of_js
                                                             x7750)
                                                   ~array:(t_of_js x7751))))|]);
                             (match x7746 with
                              | Some x7748 ->
                                  ignore
                                    (Ojs.call x7747 "push"
                                       [|(any_to_js x7748)|])
                              | None -> ());
                             x7747))|])
    let (at : 'tags this -> index:float -> float option) =
      fun (x7756 : 'tags this) ->
        fun ~index:(x7755 : float) ->
          Ojs.option_of_js Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x7756) "at"
               [|(Ojs.float_to_js x7755)|])
    let (includes :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> bool)
      =
      fun (x7763 : 'tags this) ->
        fun ~searchElement:(x7759 : float) ->
          fun ?fromIndex:(x7760 : float option) ->
            fun () ->
              Ojs.bool_of_js
                (let x7765 = this_to_js Obj.magic x7763 in
                 Ojs.call (Ojs.get_prop_ascii x7765 "includes") "apply"
                   [|x7765;((let x7761 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7761 "push"
                                  [|(Ojs.float_to_js x7759)|]);
                             (match x7760 with
                              | Some x7762 ->
                                  ignore
                                    (Ojs.call x7761 "push"
                                       [|(Ojs.float_to_js x7762)|])
                              | None -> ());
                             x7761))|])
    let (entries : 'tags this -> (float * float) IterableIterator.t) =
      fun (x7766 : 'tags this) ->
        IterableIterator.t_of_js
          (fun (x7768 : Ojs.t) ->
             let x7769 = x7768 in
             ((Ojs.float_of_js (Ojs.array_get x7769 0)),
               (Ojs.float_of_js (Ojs.array_get x7769 1))))
          (Ojs.call (this_to_js Obj.magic x7766) "entries" [||])
    let (keys : 'tags this -> float IterableIterator.t) =
      fun (x7770 : 'tags this) ->
        IterableIterator.t_of_js Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x7770) "keys" [||])
    let (values : 'tags this -> float IterableIterator.t) =
      fun (x7773 : 'tags this) ->
        IterableIterator.t_of_js Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x7773) "values" [||])
    let (get_BYTES_PER_ELEMENT : 'tags this -> float) =
      fun (x7776 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x7776)
             "BYTES_PER_ELEMENT")
    let (get_buffer : 'tags this -> ArrayBufferLike.t) =
      fun (x7778 : 'tags this) ->
        ArrayBufferLike.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x7778) "buffer")
    let (get_byteLength : 'tags this -> float) =
      fun (x7780 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x7780) "byteLength")
    let (get_byteOffset : 'tags this -> float) =
      fun (x7782 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x7782) "byteOffset")
    let (copyWithin :
      'tags this ->
        target:float -> ?start:float -> ?end_:float -> unit -> 'tags this)
      =
      fun (x7790 : 'tags this) ->
        fun ~target:(x7784 : float) ->
          fun ?start:(x7785 : float option) ->
            fun ?end_:(x7786 : float option) ->
              fun () ->
                this_of_js Obj.magic
                  (let x7792 = this_to_js Obj.magic x7790 in
                   Ojs.call (Ojs.get_prop_ascii x7792 "copyWithin") "apply"
                     [|x7792;((let x7787 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x7787 "push"
                                    [|(Ojs.float_to_js x7784)|]);
                               (match x7785 with
                                | Some x7789 ->
                                    ignore
                                      (Ojs.call x7787 "push"
                                         [|(Ojs.float_to_js x7789)|])
                                | None -> ());
                               (match x7786 with
                                | Some x7788 ->
                                    ignore
                                      (Ojs.call x7787 "push"
                                         [|(Ojs.float_to_js x7788)|])
                                | None -> ());
                               x7787))|])
    let (every :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x7801 : 'tags this) ->
        fun
          ~predicate:(x7794 :
                       value:float -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x7795 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x7803 = this_to_js Obj.magic x7801 in
                 Ojs.call (Ojs.get_prop_ascii x7803 "every") "apply"
                   [|x7803;((let x7796 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7796 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x7798 : Ojs.t) ->
                                          fun (x7799 : Ojs.t) ->
                                            fun (x7800 : Ojs.t) ->
                                              unknown_to_js
                                                (x7794
                                                   ~value:(Ojs.float_of_js
                                                             x7798)
                                                   ~index:(Ojs.float_of_js
                                                             x7799)
                                                   ~array:(t_of_js x7800))))|]);
                             (match x7795 with
                              | Some x7797 ->
                                  ignore
                                    (Ojs.call x7796 "push"
                                       [|(any_to_js x7797)|])
                              | None -> ());
                             x7796))|])
    let (fill :
      'tags this ->
        value:float -> ?start:float -> ?end_:float -> unit -> 'tags this)
      =
      fun (x7810 : 'tags this) ->
        fun ~value:(x7804 : float) ->
          fun ?start:(x7805 : float option) ->
            fun ?end_:(x7806 : float option) ->
              fun () ->
                this_of_js Obj.magic
                  (let x7812 = this_to_js Obj.magic x7810 in
                   Ojs.call (Ojs.get_prop_ascii x7812 "fill") "apply"
                     [|x7812;((let x7807 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x7807 "push"
                                    [|(Ojs.float_to_js x7804)|]);
                               (match x7805 with
                                | Some x7809 ->
                                    ignore
                                      (Ojs.call x7807 "push"
                                         [|(Ojs.float_to_js x7809)|])
                                | None -> ());
                               (match x7806 with
                                | Some x7808 ->
                                    ignore
                                      (Ojs.call x7807 "push"
                                         [|(Ojs.float_to_js x7808)|])
                                | None -> ());
                               x7807))|])
    let (filter :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> any) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x7821 : 'tags this) ->
        fun ~predicate:(x7814 : value:float -> index:float -> array:t -> any)
          ->
          fun ?thisArg:(x7815 : any option) ->
            fun () ->
              t_of_js
                (let x7823 = this_to_js Obj.magic x7821 in
                 Ojs.call (Ojs.get_prop_ascii x7823 "filter") "apply"
                   [|x7823;((let x7816 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7816 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x7818 : Ojs.t) ->
                                          fun (x7819 : Ojs.t) ->
                                            fun (x7820 : Ojs.t) ->
                                              any_to_js
                                                (x7814
                                                   ~value:(Ojs.float_of_js
                                                             x7818)
                                                   ~index:(Ojs.float_of_js
                                                             x7819)
                                                   ~array:(t_of_js x7820))))|]);
                             (match x7815 with
                              | Some x7817 ->
                                  ignore
                                    (Ojs.call x7816 "push"
                                       [|(any_to_js x7817)|])
                              | None -> ());
                             x7816))|])
    let (find :
      'tags this ->
        predicate:(value:float -> index:float -> obj:t -> bool) ->
          ?thisArg:any -> unit -> float option)
      =
      fun (x7831 : 'tags this) ->
        fun ~predicate:(x7824 : value:float -> index:float -> obj:t -> bool)
          ->
          fun ?thisArg:(x7825 : any option) ->
            fun () ->
              Ojs.option_of_js Ojs.float_of_js
                (let x7833 = this_to_js Obj.magic x7831 in
                 Ojs.call (Ojs.get_prop_ascii x7833 "find") "apply"
                   [|x7833;((let x7826 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7826 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x7828 : Ojs.t) ->
                                          fun (x7829 : Ojs.t) ->
                                            fun (x7830 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x7824
                                                   ~value:(Ojs.float_of_js
                                                             x7828)
                                                   ~index:(Ojs.float_of_js
                                                             x7829)
                                                   ~obj:(t_of_js x7830))))|]);
                             (match x7825 with
                              | Some x7827 ->
                                  ignore
                                    (Ojs.call x7826 "push"
                                       [|(any_to_js x7827)|])
                              | None -> ());
                             x7826))|])
    let (findIndex :
      'tags this ->
        predicate:(value:float -> index:float -> obj:t -> bool) ->
          ?thisArg:any -> unit -> float)
      =
      fun (x7842 : 'tags this) ->
        fun ~predicate:(x7835 : value:float -> index:float -> obj:t -> bool)
          ->
          fun ?thisArg:(x7836 : any option) ->
            fun () ->
              Ojs.float_of_js
                (let x7844 = this_to_js Obj.magic x7842 in
                 Ojs.call (Ojs.get_prop_ascii x7844 "findIndex") "apply"
                   [|x7844;((let x7837 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7837 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x7839 : Ojs.t) ->
                                          fun (x7840 : Ojs.t) ->
                                            fun (x7841 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x7835
                                                   ~value:(Ojs.float_of_js
                                                             x7839)
                                                   ~index:(Ojs.float_of_js
                                                             x7840)
                                                   ~obj:(t_of_js x7841))))|]);
                             (match x7836 with
                              | Some x7838 ->
                                  ignore
                                    (Ojs.call x7837 "push"
                                       [|(any_to_js x7838)|])
                              | None -> ());
                             x7837))|])
    let (forEach :
      'tags this ->
        callbackfn:(value:float -> index:float -> array:t -> unit) ->
          ?thisArg:any -> unit -> unit)
      =
      fun (x7852 : 'tags this) ->
        fun
          ~callbackfn:(x7845 : value:float -> index:float -> array:t -> unit)
          ->
          fun ?thisArg:(x7846 : any option) ->
            fun () ->
              ignore
                (let x7854 = this_to_js Obj.magic x7852 in
                 Ojs.call (Ojs.get_prop_ascii x7854 "forEach") "apply"
                   [|x7854;((let x7847 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7847 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x7849 : Ojs.t) ->
                                          fun (x7850 : Ojs.t) ->
                                            fun (x7851 : Ojs.t) ->
                                              x7845
                                                ~value:(Ojs.float_of_js x7849)
                                                ~index:(Ojs.float_of_js x7850)
                                                ~array:(t_of_js x7851)))|]);
                             (match x7846 with
                              | Some x7848 ->
                                  ignore
                                    (Ojs.call x7847 "push"
                                       [|(any_to_js x7848)|])
                              | None -> ());
                             x7847))|])
    let (indexOf :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> float)
      =
      fun (x7859 : 'tags this) ->
        fun ~searchElement:(x7855 : float) ->
          fun ?fromIndex:(x7856 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x7861 = this_to_js Obj.magic x7859 in
                 Ojs.call (Ojs.get_prop_ascii x7861 "indexOf") "apply"
                   [|x7861;((let x7857 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7857 "push"
                                  [|(Ojs.float_to_js x7855)|]);
                             (match x7856 with
                              | Some x7858 ->
                                  ignore
                                    (Ojs.call x7857 "push"
                                       [|(Ojs.float_to_js x7858)|])
                              | None -> ());
                             x7857))|])
    let (join : 'tags this -> ?separator:string -> unit -> string) =
      fun (x7865 : 'tags this) ->
        fun ?separator:(x7862 : string option) ->
          fun () ->
            Ojs.string_of_js
              (let x7867 = this_to_js Obj.magic x7865 in
               Ojs.call (Ojs.get_prop_ascii x7867 "join") "apply"
                 [|x7867;((let x7863 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x7862 with
                            | Some x7864 ->
                                ignore
                                  (Ojs.call x7863 "push"
                                     [|(Ojs.string_to_js x7864)|])
                            | None -> ());
                           x7863))|])
    let (lastIndexOf :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> float)
      =
      fun (x7872 : 'tags this) ->
        fun ~searchElement:(x7868 : float) ->
          fun ?fromIndex:(x7869 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x7874 = this_to_js Obj.magic x7872 in
                 Ojs.call (Ojs.get_prop_ascii x7874 "lastIndexOf") "apply"
                   [|x7874;((let x7870 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7870 "push"
                                  [|(Ojs.float_to_js x7868)|]);
                             (match x7869 with
                              | Some x7871 ->
                                  ignore
                                    (Ojs.call x7870 "push"
                                       [|(Ojs.float_to_js x7871)|])
                              | None -> ());
                             x7870))|])
    let (get_length : 'tags this -> float) =
      fun (x7875 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x7875) "length")
    let (map :
      'tags this ->
        callbackfn:(value:float -> index:float -> array:t -> float) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x7884 : 'tags this) ->
        fun
          ~callbackfn:(x7877 :
                        value:float -> index:float -> array:t -> float)
          ->
          fun ?thisArg:(x7878 : any option) ->
            fun () ->
              t_of_js
                (let x7886 = this_to_js Obj.magic x7884 in
                 Ojs.call (Ojs.get_prop_ascii x7886 "map") "apply"
                   [|x7886;((let x7879 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7879 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x7881 : Ojs.t) ->
                                          fun (x7882 : Ojs.t) ->
                                            fun (x7883 : Ojs.t) ->
                                              Ojs.float_to_js
                                                (x7877
                                                   ~value:(Ojs.float_of_js
                                                             x7881)
                                                   ~index:(Ojs.float_of_js
                                                             x7882)
                                                   ~array:(t_of_js x7883))))|]);
                             (match x7878 with
                              | Some x7880 ->
                                  ignore
                                    (Ojs.call x7879 "push"
                                       [|(any_to_js x7880)|])
                              | None -> ());
                             x7879))|])
    let (reduce :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> float)
      =
      fun (x7892 : 'tags this) ->
        fun
          ~callbackfn:(x7887 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x7892) "reduce"
               [|(Ojs.fun_to_js 4
                    (fun (x7888 : Ojs.t) ->
                       fun (x7889 : Ojs.t) ->
                         fun (x7890 : Ojs.t) ->
                           fun (x7891 : Ojs.t) ->
                             Ojs.float_to_js
                               (x7887 ~previousValue:(Ojs.float_of_js x7888)
                                  ~currentValue:(Ojs.float_of_js x7889)
                                  ~currentIndex:(Ojs.float_of_js x7890)
                                  ~array:(t_of_js x7891))))|])
    let (reduce' :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> initialValue:float -> float)
      =
      fun (x7900 : 'tags this) ->
        fun
          ~callbackfn:(x7894 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          fun ~initialValue:(x7899 : float) ->
            Ojs.float_of_js
              (Ojs.call (this_to_js Obj.magic x7900) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x7895 : Ojs.t) ->
                         fun (x7896 : Ojs.t) ->
                           fun (x7897 : Ojs.t) ->
                             fun (x7898 : Ojs.t) ->
                               Ojs.float_to_js
                                 (x7894
                                    ~previousValue:(Ojs.float_of_js x7895)
                                    ~currentValue:(Ojs.float_of_js x7896)
                                    ~currentIndex:(Ojs.float_of_js x7897)
                                    ~array:(t_of_js x7898))));(Ojs.float_to_js
                                                                 x7899)|])
    let (reduce'' :
      'tags this ->
        callbackfn:(previousValue:'U ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x7908 : 'tags this) ->
        fun
          ~callbackfn:(x7902 :
                        previousValue:'U ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x7907 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic x7908) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x7903 : Ojs.t) ->
                         fun (x7904 : Ojs.t) ->
                           fun (x7905 : Ojs.t) ->
                             fun (x7906 : Ojs.t) ->
                               Obj.magic
                                 (x7902 ~previousValue:(Obj.magic x7903)
                                    ~currentValue:(Ojs.float_of_js x7904)
                                    ~currentIndex:(Ojs.float_of_js x7905)
                                    ~array:(t_of_js x7906))));(Obj.magic
                                                                 x7907)|])
    let (reduceRight :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> float)
      =
      fun (x7915 : 'tags this) ->
        fun
          ~callbackfn:(x7910 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x7915) "reduceRight"
               [|(Ojs.fun_to_js 4
                    (fun (x7911 : Ojs.t) ->
                       fun (x7912 : Ojs.t) ->
                         fun (x7913 : Ojs.t) ->
                           fun (x7914 : Ojs.t) ->
                             Ojs.float_to_js
                               (x7910 ~previousValue:(Ojs.float_of_js x7911)
                                  ~currentValue:(Ojs.float_of_js x7912)
                                  ~currentIndex:(Ojs.float_of_js x7913)
                                  ~array:(t_of_js x7914))))|])
    let (reduceRight' :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> initialValue:float -> float)
      =
      fun (x7923 : 'tags this) ->
        fun
          ~callbackfn:(x7917 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          fun ~initialValue:(x7922 : float) ->
            Ojs.float_of_js
              (Ojs.call (this_to_js Obj.magic x7923) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x7918 : Ojs.t) ->
                         fun (x7919 : Ojs.t) ->
                           fun (x7920 : Ojs.t) ->
                             fun (x7921 : Ojs.t) ->
                               Ojs.float_to_js
                                 (x7917
                                    ~previousValue:(Ojs.float_of_js x7918)
                                    ~currentValue:(Ojs.float_of_js x7919)
                                    ~currentIndex:(Ojs.float_of_js x7920)
                                    ~array:(t_of_js x7921))));(Ojs.float_to_js
                                                                 x7922)|])
    let (reduceRight'' :
      'tags this ->
        callbackfn:(previousValue:'U ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x7931 : 'tags this) ->
        fun
          ~callbackfn:(x7925 :
                        previousValue:'U ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x7930 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic x7931) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x7926 : Ojs.t) ->
                         fun (x7927 : Ojs.t) ->
                           fun (x7928 : Ojs.t) ->
                             fun (x7929 : Ojs.t) ->
                               Obj.magic
                                 (x7925 ~previousValue:(Obj.magic x7926)
                                    ~currentValue:(Ojs.float_of_js x7927)
                                    ~currentIndex:(Ojs.float_of_js x7928)
                                    ~array:(t_of_js x7929))));(Obj.magic
                                                                 x7930)|])
    let (reverse : 'tags this -> t) =
      fun (x7933 : 'tags this) ->
        t_of_js (Ojs.call (this_to_js Obj.magic x7933) "reverse" [||])
    let (set_ :
      'tags this -> array:float ArrayLike.t -> ?offset:float -> unit -> unit)
      =
      fun (x7940 : 'tags this) ->
        fun ~array:(x7935 : float ArrayLike.t) ->
          fun ?offset:(x7936 : float option) ->
            fun () ->
              ignore
                (let x7942 = this_to_js Obj.magic x7940 in
                 Ojs.call (Ojs.get_prop_ascii x7942 "set") "apply"
                   [|x7942;((let x7937 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7937 "push"
                                  [|(ArrayLike.t_to_js Ojs.float_to_js x7935)|]);
                             (match x7936 with
                              | Some x7938 ->
                                  ignore
                                    (Ojs.call x7937 "push"
                                       [|(Ojs.float_to_js x7938)|])
                              | None -> ());
                             x7937))|])
    let (slice : 'tags this -> ?start:float -> ?end_:float -> unit -> t) =
      fun (x7948 : 'tags this) ->
        fun ?start:(x7943 : float option) ->
          fun ?end_:(x7944 : float option) ->
            fun () ->
              t_of_js
                (let x7950 = this_to_js Obj.magic x7948 in
                 Ojs.call (Ojs.get_prop_ascii x7950 "slice") "apply"
                   [|x7950;((let x7945 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x7943 with
                              | Some x7947 ->
                                  ignore
                                    (Ojs.call x7945 "push"
                                       [|(Ojs.float_to_js x7947)|])
                              | None -> ());
                             (match x7944 with
                              | Some x7946 ->
                                  ignore
                                    (Ojs.call x7945 "push"
                                       [|(Ojs.float_to_js x7946)|])
                              | None -> ());
                             x7945))|])
    let (some :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x7958 : 'tags this) ->
        fun
          ~predicate:(x7951 :
                       value:float -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x7952 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x7960 = this_to_js Obj.magic x7958 in
                 Ojs.call (Ojs.get_prop_ascii x7960 "some") "apply"
                   [|x7960;((let x7953 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7953 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x7955 : Ojs.t) ->
                                          fun (x7956 : Ojs.t) ->
                                            fun (x7957 : Ojs.t) ->
                                              unknown_to_js
                                                (x7951
                                                   ~value:(Ojs.float_of_js
                                                             x7955)
                                                   ~index:(Ojs.float_of_js
                                                             x7956)
                                                   ~array:(t_of_js x7957))))|]);
                             (match x7952 with
                              | Some x7954 ->
                                  ignore
                                    (Ojs.call x7953 "push"
                                       [|(any_to_js x7954)|])
                              | None -> ());
                             x7953))|])
    let (sort :
      'tags this ->
        ?compareFn:(a:float -> b:float -> float) -> unit -> 'tags this)
      =
      fun (x7966 : 'tags this) ->
        fun ?compareFn:(x7961 : (a:float -> b:float -> float) option) ->
          fun () ->
            this_of_js Obj.magic
              (let x7968 = this_to_js Obj.magic x7966 in
               Ojs.call (Ojs.get_prop_ascii x7968 "sort") "apply"
                 [|x7968;((let x7962 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x7961 with
                            | Some x7963 ->
                                ignore
                                  (Ojs.call x7962 "push"
                                     [|(Ojs.fun_to_js 2
                                          (fun (x7964 : Ojs.t) ->
                                             fun (x7965 : Ojs.t) ->
                                               Ojs.float_to_js
                                                 (x7963
                                                    ~a:(Ojs.float_of_js x7964)
                                                    ~b:(Ojs.float_of_js x7965))))|])
                            | None -> ());
                           x7962))|])
    let (subarray : 'tags this -> ?begin_:float -> ?end_:float -> unit -> t)
      =
      fun (x7975 : 'tags this) ->
        fun ?begin_:(x7970 : float option) ->
          fun ?end_:(x7971 : float option) ->
            fun () ->
              t_of_js
                (let x7977 = this_to_js Obj.magic x7975 in
                 Ojs.call (Ojs.get_prop_ascii x7977 "subarray") "apply"
                   [|x7977;((let x7972 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x7970 with
                              | Some x7974 ->
                                  ignore
                                    (Ojs.call x7972 "push"
                                       [|(Ojs.float_to_js x7974)|])
                              | None -> ());
                             (match x7971 with
                              | Some x7973 ->
                                  ignore
                                    (Ojs.call x7972 "push"
                                       [|(Ojs.float_to_js x7973)|])
                              | None -> ());
                             x7972))|])
    let (toLocaleString : 'tags this -> string) =
      fun (x7978 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x7978) "toLocaleString" [||])
    let (toString : 'tags this -> string) =
      fun (x7980 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x7980) "toString" [||])
    let (valueOf : 'tags this -> t) =
      fun (x7982 : 'tags this) ->
        t_of_js (Ojs.call (this_to_js Obj.magic x7982) "valueOf" [||])
    let (get : 'tags this -> float -> float) =
      fun (x7984 : 'tags this) ->
        fun (x7986 : float) ->
          Ojs.float_of_js
            (Ojs.get_prop (this_to_js Obj.magic x7984)
               (Ojs.float_to_js x7986))
    let (set : 'tags this -> float -> float -> unit) =
      fun (x7987 : 'tags this) ->
        fun (x7989 : float) ->
          fun (x7990 : float) ->
            Ojs.set_prop (this_to_js Obj.magic x7987) (Ojs.float_to_js x7989)
              (Ojs.float_to_js x7990)
    let (create : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Uint16Array") [||])
    let (create' : float Iterable.t -> t) =
      fun (x7991 : float Iterable.t) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Uint16Array")
             [|(Iterable.t_to_js Ojs.float_to_js x7991)|])
    let (from :
      arrayLike:float Iterable.t ->
        ?mapfn:(v:float -> k:float -> float) -> ?thisArg:any -> unit -> t)
      =
      fun ~arrayLike:(x7993 : float Iterable.t) ->
        fun ?mapfn:(x7994 : (v:float -> k:float -> float) option) ->
          fun ?thisArg:(x7995 : any option) ->
            fun () ->
              t_of_js
                (let x8002 = Ojs.get_prop_ascii Ojs.global "Uint16Array" in
                 Ojs.call (Ojs.get_prop_ascii x8002 "from") "apply"
                   [|x8002;((let x7996 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7996 "push"
                                  [|(Iterable.t_to_js Ojs.float_to_js x7993)|]);
                             (match x7994 with
                              | Some x7998 ->
                                  ignore
                                    (Ojs.call x7996 "push"
                                       [|(Ojs.fun_to_js 2
                                            (fun (x7999 : Ojs.t) ->
                                               fun (x8000 : Ojs.t) ->
                                                 Ojs.float_to_js
                                                   (x7998
                                                      ~v:(Ojs.float_of_js
                                                            x7999)
                                                      ~k:(Ojs.float_of_js
                                                            x8000))))|])
                              | None -> ());
                             (match x7995 with
                              | Some x7997 ->
                                  ignore
                                    (Ojs.call x7996 "push"
                                       [|(any_to_js x7997)|])
                              | None -> ());
                             x7996))|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Uint16Array")
             "prototype")
    let (create'' : float -> t) =
      fun (x8003 : float) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Uint16Array")
             [|(Ojs.float_to_js x8003)|])
    let (create''' :
      [ `U1 of float ArrayLike.t  | `U2 of ArrayBufferLike.t ] -> t) =
      fun (x8004 : [ `U1 of float ArrayLike.t  | `U2 of ArrayBufferLike.t ])
        ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Uint16Array")
             [|((match x8004 with
                 | `U1 x8005 -> ArrayLike.t_to_js Ojs.float_to_js x8005
                 | `U2 x8007 -> ArrayBufferLike.t_to_js x8007))|])
    let (create'''' :
      buffer:ArrayBufferLike.t ->
        ?byteOffset:float -> ?length:float -> unit -> t)
      =
      fun ~buffer:(x8008 : ArrayBufferLike.t) ->
        fun ?byteOffset:(x8009 : float option) ->
          fun ?length:(x8010 : float option) ->
            fun () ->
              t_of_js
                (Ojs.new_obj_arr
                   (Ojs.get_prop_ascii Ojs.global "Uint16Array")
                   (let x8011 =
                      Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                        [||] in
                    ignore
                      (Ojs.call x8011 "push"
                         [|(ArrayBufferLike.t_to_js x8008)|]);
                    (match x8009 with
                     | Some x8013 ->
                         ignore
                           (Ojs.call x8011 "push" [|(Ojs.float_to_js x8013)|])
                     | None -> ());
                    (match x8010 with
                     | Some x8012 ->
                         ignore
                           (Ojs.call x8011 "push" [|(Ojs.float_to_js x8012)|])
                     | None -> ());
                    x8011))
    let (bytes_per_element : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Uint16Array")
             "BYTES_PER_ELEMENT")
    let (of_ : float list -> t) =
      fun (x8014 : float list) ->
        t_of_js
          (let x8017 = Ojs.get_prop_ascii Ojs.global "Uint16Array" in
           Ojs.call (Ojs.get_prop_ascii x8017 "of") "apply"
             [|x8017;((let x8015 =
                         Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                           [||] in
                       List.iter
                         (fun (x8016 : float) ->
                            ignore
                              (Ojs.call x8015 "push"
                                 [|(Ojs.float_to_js x8016)|])) x8014;
                       x8015))|])
    let (from' : float ArrayLike.t -> t) =
      fun (x8018 : float ArrayLike.t) ->
        t_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Uint16Array") "from"
             [|(ArrayLike.t_to_js Ojs.float_to_js x8018)|])
    let (from'' :
      arrayLike:'T ArrayLike.t ->
        mapfn:(v:'T -> k:float -> float) -> ?thisArg:any -> unit -> t)
      =
      fun ~arrayLike:(x8020 : 'T ArrayLike.t) ->
        fun ~mapfn:(x8021 : v:'T -> k:float -> float) ->
          fun ?thisArg:(x8022 : any option) ->
            fun () ->
              t_of_js
                (let x8028 = Ojs.get_prop_ascii Ojs.global "Uint16Array" in
                 Ojs.call (Ojs.get_prop_ascii x8028 "from") "apply"
                   [|x8028;((let x8023 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8023 "push"
                                  [|(ArrayLike.t_to_js Obj.magic x8020)|]);
                             ignore
                               (Ojs.call x8023 "push"
                                  [|(Ojs.fun_to_js 2
                                       (fun (x8025 : Ojs.t) ->
                                          fun (x8026 : Ojs.t) ->
                                            Ojs.float_to_js
                                              (x8021 ~v:(Obj.magic x8025)
                                                 ~k:(Ojs.float_of_js x8026))))|]);
                             (match x8022 with
                              | Some x8024 ->
                                  ignore
                                    (Ojs.call x8023 "push"
                                       [|(any_to_js x8024)|])
                              | None -> ());
                             x8023))|])
    let cast_from = Obj.magic
  end
module Int8Array =
  struct
    type t = [ `Int8Array ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type tags = [ `Int8Array ]
    type 'tags this = 'tags intf constraint 'tags = [> `Int8Array ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x8031 : Ojs.t) -> intf_of_js __tags_of_js x8031
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x8029 : __tags intf) -> intf_to_js __tags_to_js x8029
    let (findLast :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> bool) ->
          ?thisArg:any -> unit -> 'S option)
      =
      fun (x8040 : 'tags this) ->
        fun
          ~predicate:(x8033 : value:float -> index:float -> array:t -> bool)
          ->
          fun ?thisArg:(x8034 : any option) ->
            fun () ->
              Ojs.option_of_js Obj.magic
                (let x8042 = this_to_js Obj.magic x8040 in
                 Ojs.call (Ojs.get_prop_ascii x8042 "findLast") "apply"
                   [|x8042;((let x8035 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8035 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x8037 : Ojs.t) ->
                                          fun (x8038 : Ojs.t) ->
                                            fun (x8039 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x8033
                                                   ~value:(Ojs.float_of_js
                                                             x8037)
                                                   ~index:(Ojs.float_of_js
                                                             x8038)
                                                   ~array:(t_of_js x8039))))|]);
                             (match x8034 with
                              | Some x8036 ->
                                  ignore
                                    (Ojs.call x8035 "push"
                                       [|(any_to_js x8036)|])
                              | None -> ());
                             x8035))|])
    let (findLast' :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> float option)
      =
      fun (x8051 : 'tags this) ->
        fun
          ~predicate:(x8044 :
                       value:float -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x8045 : any option) ->
            fun () ->
              Ojs.option_of_js Ojs.float_of_js
                (let x8053 = this_to_js Obj.magic x8051 in
                 Ojs.call (Ojs.get_prop_ascii x8053 "findLast") "apply"
                   [|x8053;((let x8046 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8046 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x8048 : Ojs.t) ->
                                          fun (x8049 : Ojs.t) ->
                                            fun (x8050 : Ojs.t) ->
                                              unknown_to_js
                                                (x8044
                                                   ~value:(Ojs.float_of_js
                                                             x8048)
                                                   ~index:(Ojs.float_of_js
                                                             x8049)
                                                   ~array:(t_of_js x8050))))|]);
                             (match x8045 with
                              | Some x8047 ->
                                  ignore
                                    (Ojs.call x8046 "push"
                                       [|(any_to_js x8047)|])
                              | None -> ());
                             x8046))|])
    let (findLastIndex :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> float)
      =
      fun (x8062 : 'tags this) ->
        fun
          ~predicate:(x8055 :
                       value:float -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x8056 : any option) ->
            fun () ->
              Ojs.float_of_js
                (let x8064 = this_to_js Obj.magic x8062 in
                 Ojs.call (Ojs.get_prop_ascii x8064 "findLastIndex") "apply"
                   [|x8064;((let x8057 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8057 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x8059 : Ojs.t) ->
                                          fun (x8060 : Ojs.t) ->
                                            fun (x8061 : Ojs.t) ->
                                              unknown_to_js
                                                (x8055
                                                   ~value:(Ojs.float_of_js
                                                             x8059)
                                                   ~index:(Ojs.float_of_js
                                                             x8060)
                                                   ~array:(t_of_js x8061))))|]);
                             (match x8056 with
                              | Some x8058 ->
                                  ignore
                                    (Ojs.call x8057 "push"
                                       [|(any_to_js x8058)|])
                              | None -> ());
                             x8057))|])
    let (at : 'tags this -> index:float -> float option) =
      fun (x8066 : 'tags this) ->
        fun ~index:(x8065 : float) ->
          Ojs.option_of_js Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x8066) "at"
               [|(Ojs.float_to_js x8065)|])
    let (includes :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> bool)
      =
      fun (x8073 : 'tags this) ->
        fun ~searchElement:(x8069 : float) ->
          fun ?fromIndex:(x8070 : float option) ->
            fun () ->
              Ojs.bool_of_js
                (let x8075 = this_to_js Obj.magic x8073 in
                 Ojs.call (Ojs.get_prop_ascii x8075 "includes") "apply"
                   [|x8075;((let x8071 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8071 "push"
                                  [|(Ojs.float_to_js x8069)|]);
                             (match x8070 with
                              | Some x8072 ->
                                  ignore
                                    (Ojs.call x8071 "push"
                                       [|(Ojs.float_to_js x8072)|])
                              | None -> ());
                             x8071))|])
    let (entries : 'tags this -> (float * float) IterableIterator.t) =
      fun (x8076 : 'tags this) ->
        IterableIterator.t_of_js
          (fun (x8078 : Ojs.t) ->
             let x8079 = x8078 in
             ((Ojs.float_of_js (Ojs.array_get x8079 0)),
               (Ojs.float_of_js (Ojs.array_get x8079 1))))
          (Ojs.call (this_to_js Obj.magic x8076) "entries" [||])
    let (keys : 'tags this -> float IterableIterator.t) =
      fun (x8080 : 'tags this) ->
        IterableIterator.t_of_js Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x8080) "keys" [||])
    let (values : 'tags this -> float IterableIterator.t) =
      fun (x8083 : 'tags this) ->
        IterableIterator.t_of_js Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x8083) "values" [||])
    let (get_BYTES_PER_ELEMENT : 'tags this -> float) =
      fun (x8086 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x8086)
             "BYTES_PER_ELEMENT")
    let (get_buffer : 'tags this -> ArrayBufferLike.t) =
      fun (x8088 : 'tags this) ->
        ArrayBufferLike.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x8088) "buffer")
    let (get_byteLength : 'tags this -> float) =
      fun (x8090 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x8090) "byteLength")
    let (get_byteOffset : 'tags this -> float) =
      fun (x8092 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x8092) "byteOffset")
    let (copyWithin :
      'tags this ->
        target:float -> ?start:float -> ?end_:float -> unit -> 'tags this)
      =
      fun (x8100 : 'tags this) ->
        fun ~target:(x8094 : float) ->
          fun ?start:(x8095 : float option) ->
            fun ?end_:(x8096 : float option) ->
              fun () ->
                this_of_js Obj.magic
                  (let x8102 = this_to_js Obj.magic x8100 in
                   Ojs.call (Ojs.get_prop_ascii x8102 "copyWithin") "apply"
                     [|x8102;((let x8097 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x8097 "push"
                                    [|(Ojs.float_to_js x8094)|]);
                               (match x8095 with
                                | Some x8099 ->
                                    ignore
                                      (Ojs.call x8097 "push"
                                         [|(Ojs.float_to_js x8099)|])
                                | None -> ());
                               (match x8096 with
                                | Some x8098 ->
                                    ignore
                                      (Ojs.call x8097 "push"
                                         [|(Ojs.float_to_js x8098)|])
                                | None -> ());
                               x8097))|])
    let (every :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x8111 : 'tags this) ->
        fun
          ~predicate:(x8104 :
                       value:float -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x8105 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x8113 = this_to_js Obj.magic x8111 in
                 Ojs.call (Ojs.get_prop_ascii x8113 "every") "apply"
                   [|x8113;((let x8106 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8106 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x8108 : Ojs.t) ->
                                          fun (x8109 : Ojs.t) ->
                                            fun (x8110 : Ojs.t) ->
                                              unknown_to_js
                                                (x8104
                                                   ~value:(Ojs.float_of_js
                                                             x8108)
                                                   ~index:(Ojs.float_of_js
                                                             x8109)
                                                   ~array:(t_of_js x8110))))|]);
                             (match x8105 with
                              | Some x8107 ->
                                  ignore
                                    (Ojs.call x8106 "push"
                                       [|(any_to_js x8107)|])
                              | None -> ());
                             x8106))|])
    let (fill :
      'tags this ->
        value:float -> ?start:float -> ?end_:float -> unit -> 'tags this)
      =
      fun (x8120 : 'tags this) ->
        fun ~value:(x8114 : float) ->
          fun ?start:(x8115 : float option) ->
            fun ?end_:(x8116 : float option) ->
              fun () ->
                this_of_js Obj.magic
                  (let x8122 = this_to_js Obj.magic x8120 in
                   Ojs.call (Ojs.get_prop_ascii x8122 "fill") "apply"
                     [|x8122;((let x8117 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x8117 "push"
                                    [|(Ojs.float_to_js x8114)|]);
                               (match x8115 with
                                | Some x8119 ->
                                    ignore
                                      (Ojs.call x8117 "push"
                                         [|(Ojs.float_to_js x8119)|])
                                | None -> ());
                               (match x8116 with
                                | Some x8118 ->
                                    ignore
                                      (Ojs.call x8117 "push"
                                         [|(Ojs.float_to_js x8118)|])
                                | None -> ());
                               x8117))|])
    let (filter :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> any) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x8131 : 'tags this) ->
        fun ~predicate:(x8124 : value:float -> index:float -> array:t -> any)
          ->
          fun ?thisArg:(x8125 : any option) ->
            fun () ->
              t_of_js
                (let x8133 = this_to_js Obj.magic x8131 in
                 Ojs.call (Ojs.get_prop_ascii x8133 "filter") "apply"
                   [|x8133;((let x8126 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8126 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x8128 : Ojs.t) ->
                                          fun (x8129 : Ojs.t) ->
                                            fun (x8130 : Ojs.t) ->
                                              any_to_js
                                                (x8124
                                                   ~value:(Ojs.float_of_js
                                                             x8128)
                                                   ~index:(Ojs.float_of_js
                                                             x8129)
                                                   ~array:(t_of_js x8130))))|]);
                             (match x8125 with
                              | Some x8127 ->
                                  ignore
                                    (Ojs.call x8126 "push"
                                       [|(any_to_js x8127)|])
                              | None -> ());
                             x8126))|])
    let (find :
      'tags this ->
        predicate:(value:float -> index:float -> obj:t -> bool) ->
          ?thisArg:any -> unit -> float option)
      =
      fun (x8141 : 'tags this) ->
        fun ~predicate:(x8134 : value:float -> index:float -> obj:t -> bool)
          ->
          fun ?thisArg:(x8135 : any option) ->
            fun () ->
              Ojs.option_of_js Ojs.float_of_js
                (let x8143 = this_to_js Obj.magic x8141 in
                 Ojs.call (Ojs.get_prop_ascii x8143 "find") "apply"
                   [|x8143;((let x8136 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8136 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x8138 : Ojs.t) ->
                                          fun (x8139 : Ojs.t) ->
                                            fun (x8140 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x8134
                                                   ~value:(Ojs.float_of_js
                                                             x8138)
                                                   ~index:(Ojs.float_of_js
                                                             x8139)
                                                   ~obj:(t_of_js x8140))))|]);
                             (match x8135 with
                              | Some x8137 ->
                                  ignore
                                    (Ojs.call x8136 "push"
                                       [|(any_to_js x8137)|])
                              | None -> ());
                             x8136))|])
    let (findIndex :
      'tags this ->
        predicate:(value:float -> index:float -> obj:t -> bool) ->
          ?thisArg:any -> unit -> float)
      =
      fun (x8152 : 'tags this) ->
        fun ~predicate:(x8145 : value:float -> index:float -> obj:t -> bool)
          ->
          fun ?thisArg:(x8146 : any option) ->
            fun () ->
              Ojs.float_of_js
                (let x8154 = this_to_js Obj.magic x8152 in
                 Ojs.call (Ojs.get_prop_ascii x8154 "findIndex") "apply"
                   [|x8154;((let x8147 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8147 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x8149 : Ojs.t) ->
                                          fun (x8150 : Ojs.t) ->
                                            fun (x8151 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x8145
                                                   ~value:(Ojs.float_of_js
                                                             x8149)
                                                   ~index:(Ojs.float_of_js
                                                             x8150)
                                                   ~obj:(t_of_js x8151))))|]);
                             (match x8146 with
                              | Some x8148 ->
                                  ignore
                                    (Ojs.call x8147 "push"
                                       [|(any_to_js x8148)|])
                              | None -> ());
                             x8147))|])
    let (forEach :
      'tags this ->
        callbackfn:(value:float -> index:float -> array:t -> unit) ->
          ?thisArg:any -> unit -> unit)
      =
      fun (x8162 : 'tags this) ->
        fun
          ~callbackfn:(x8155 : value:float -> index:float -> array:t -> unit)
          ->
          fun ?thisArg:(x8156 : any option) ->
            fun () ->
              ignore
                (let x8164 = this_to_js Obj.magic x8162 in
                 Ojs.call (Ojs.get_prop_ascii x8164 "forEach") "apply"
                   [|x8164;((let x8157 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8157 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x8159 : Ojs.t) ->
                                          fun (x8160 : Ojs.t) ->
                                            fun (x8161 : Ojs.t) ->
                                              x8155
                                                ~value:(Ojs.float_of_js x8159)
                                                ~index:(Ojs.float_of_js x8160)
                                                ~array:(t_of_js x8161)))|]);
                             (match x8156 with
                              | Some x8158 ->
                                  ignore
                                    (Ojs.call x8157 "push"
                                       [|(any_to_js x8158)|])
                              | None -> ());
                             x8157))|])
    let (indexOf :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> float)
      =
      fun (x8169 : 'tags this) ->
        fun ~searchElement:(x8165 : float) ->
          fun ?fromIndex:(x8166 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x8171 = this_to_js Obj.magic x8169 in
                 Ojs.call (Ojs.get_prop_ascii x8171 "indexOf") "apply"
                   [|x8171;((let x8167 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8167 "push"
                                  [|(Ojs.float_to_js x8165)|]);
                             (match x8166 with
                              | Some x8168 ->
                                  ignore
                                    (Ojs.call x8167 "push"
                                       [|(Ojs.float_to_js x8168)|])
                              | None -> ());
                             x8167))|])
    let (join : 'tags this -> ?separator:string -> unit -> string) =
      fun (x8175 : 'tags this) ->
        fun ?separator:(x8172 : string option) ->
          fun () ->
            Ojs.string_of_js
              (let x8177 = this_to_js Obj.magic x8175 in
               Ojs.call (Ojs.get_prop_ascii x8177 "join") "apply"
                 [|x8177;((let x8173 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x8172 with
                            | Some x8174 ->
                                ignore
                                  (Ojs.call x8173 "push"
                                     [|(Ojs.string_to_js x8174)|])
                            | None -> ());
                           x8173))|])
    let (lastIndexOf :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> float)
      =
      fun (x8182 : 'tags this) ->
        fun ~searchElement:(x8178 : float) ->
          fun ?fromIndex:(x8179 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x8184 = this_to_js Obj.magic x8182 in
                 Ojs.call (Ojs.get_prop_ascii x8184 "lastIndexOf") "apply"
                   [|x8184;((let x8180 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8180 "push"
                                  [|(Ojs.float_to_js x8178)|]);
                             (match x8179 with
                              | Some x8181 ->
                                  ignore
                                    (Ojs.call x8180 "push"
                                       [|(Ojs.float_to_js x8181)|])
                              | None -> ());
                             x8180))|])
    let (get_length : 'tags this -> float) =
      fun (x8185 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x8185) "length")
    let (map :
      'tags this ->
        callbackfn:(value:float -> index:float -> array:t -> float) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x8194 : 'tags this) ->
        fun
          ~callbackfn:(x8187 :
                        value:float -> index:float -> array:t -> float)
          ->
          fun ?thisArg:(x8188 : any option) ->
            fun () ->
              t_of_js
                (let x8196 = this_to_js Obj.magic x8194 in
                 Ojs.call (Ojs.get_prop_ascii x8196 "map") "apply"
                   [|x8196;((let x8189 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8189 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x8191 : Ojs.t) ->
                                          fun (x8192 : Ojs.t) ->
                                            fun (x8193 : Ojs.t) ->
                                              Ojs.float_to_js
                                                (x8187
                                                   ~value:(Ojs.float_of_js
                                                             x8191)
                                                   ~index:(Ojs.float_of_js
                                                             x8192)
                                                   ~array:(t_of_js x8193))))|]);
                             (match x8188 with
                              | Some x8190 ->
                                  ignore
                                    (Ojs.call x8189 "push"
                                       [|(any_to_js x8190)|])
                              | None -> ());
                             x8189))|])
    let (reduce :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> float)
      =
      fun (x8202 : 'tags this) ->
        fun
          ~callbackfn:(x8197 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x8202) "reduce"
               [|(Ojs.fun_to_js 4
                    (fun (x8198 : Ojs.t) ->
                       fun (x8199 : Ojs.t) ->
                         fun (x8200 : Ojs.t) ->
                           fun (x8201 : Ojs.t) ->
                             Ojs.float_to_js
                               (x8197 ~previousValue:(Ojs.float_of_js x8198)
                                  ~currentValue:(Ojs.float_of_js x8199)
                                  ~currentIndex:(Ojs.float_of_js x8200)
                                  ~array:(t_of_js x8201))))|])
    let (reduce' :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> initialValue:float -> float)
      =
      fun (x8210 : 'tags this) ->
        fun
          ~callbackfn:(x8204 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          fun ~initialValue:(x8209 : float) ->
            Ojs.float_of_js
              (Ojs.call (this_to_js Obj.magic x8210) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x8205 : Ojs.t) ->
                         fun (x8206 : Ojs.t) ->
                           fun (x8207 : Ojs.t) ->
                             fun (x8208 : Ojs.t) ->
                               Ojs.float_to_js
                                 (x8204
                                    ~previousValue:(Ojs.float_of_js x8205)
                                    ~currentValue:(Ojs.float_of_js x8206)
                                    ~currentIndex:(Ojs.float_of_js x8207)
                                    ~array:(t_of_js x8208))));(Ojs.float_to_js
                                                                 x8209)|])
    let (reduce'' :
      'tags this ->
        callbackfn:(previousValue:'U ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x8218 : 'tags this) ->
        fun
          ~callbackfn:(x8212 :
                        previousValue:'U ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x8217 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic x8218) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x8213 : Ojs.t) ->
                         fun (x8214 : Ojs.t) ->
                           fun (x8215 : Ojs.t) ->
                             fun (x8216 : Ojs.t) ->
                               Obj.magic
                                 (x8212 ~previousValue:(Obj.magic x8213)
                                    ~currentValue:(Ojs.float_of_js x8214)
                                    ~currentIndex:(Ojs.float_of_js x8215)
                                    ~array:(t_of_js x8216))));(Obj.magic
                                                                 x8217)|])
    let (reduceRight :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> float)
      =
      fun (x8225 : 'tags this) ->
        fun
          ~callbackfn:(x8220 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x8225) "reduceRight"
               [|(Ojs.fun_to_js 4
                    (fun (x8221 : Ojs.t) ->
                       fun (x8222 : Ojs.t) ->
                         fun (x8223 : Ojs.t) ->
                           fun (x8224 : Ojs.t) ->
                             Ojs.float_to_js
                               (x8220 ~previousValue:(Ojs.float_of_js x8221)
                                  ~currentValue:(Ojs.float_of_js x8222)
                                  ~currentIndex:(Ojs.float_of_js x8223)
                                  ~array:(t_of_js x8224))))|])
    let (reduceRight' :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> initialValue:float -> float)
      =
      fun (x8233 : 'tags this) ->
        fun
          ~callbackfn:(x8227 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          fun ~initialValue:(x8232 : float) ->
            Ojs.float_of_js
              (Ojs.call (this_to_js Obj.magic x8233) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x8228 : Ojs.t) ->
                         fun (x8229 : Ojs.t) ->
                           fun (x8230 : Ojs.t) ->
                             fun (x8231 : Ojs.t) ->
                               Ojs.float_to_js
                                 (x8227
                                    ~previousValue:(Ojs.float_of_js x8228)
                                    ~currentValue:(Ojs.float_of_js x8229)
                                    ~currentIndex:(Ojs.float_of_js x8230)
                                    ~array:(t_of_js x8231))));(Ojs.float_to_js
                                                                 x8232)|])
    let (reduceRight'' :
      'tags this ->
        callbackfn:(previousValue:'U ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x8241 : 'tags this) ->
        fun
          ~callbackfn:(x8235 :
                        previousValue:'U ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x8240 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic x8241) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x8236 : Ojs.t) ->
                         fun (x8237 : Ojs.t) ->
                           fun (x8238 : Ojs.t) ->
                             fun (x8239 : Ojs.t) ->
                               Obj.magic
                                 (x8235 ~previousValue:(Obj.magic x8236)
                                    ~currentValue:(Ojs.float_of_js x8237)
                                    ~currentIndex:(Ojs.float_of_js x8238)
                                    ~array:(t_of_js x8239))));(Obj.magic
                                                                 x8240)|])
    let (reverse : 'tags this -> t) =
      fun (x8243 : 'tags this) ->
        t_of_js (Ojs.call (this_to_js Obj.magic x8243) "reverse" [||])
    let (set_ :
      'tags this -> array:float ArrayLike.t -> ?offset:float -> unit -> unit)
      =
      fun (x8250 : 'tags this) ->
        fun ~array:(x8245 : float ArrayLike.t) ->
          fun ?offset:(x8246 : float option) ->
            fun () ->
              ignore
                (let x8252 = this_to_js Obj.magic x8250 in
                 Ojs.call (Ojs.get_prop_ascii x8252 "set") "apply"
                   [|x8252;((let x8247 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8247 "push"
                                  [|(ArrayLike.t_to_js Ojs.float_to_js x8245)|]);
                             (match x8246 with
                              | Some x8248 ->
                                  ignore
                                    (Ojs.call x8247 "push"
                                       [|(Ojs.float_to_js x8248)|])
                              | None -> ());
                             x8247))|])
    let (slice : 'tags this -> ?start:float -> ?end_:float -> unit -> t) =
      fun (x8258 : 'tags this) ->
        fun ?start:(x8253 : float option) ->
          fun ?end_:(x8254 : float option) ->
            fun () ->
              t_of_js
                (let x8260 = this_to_js Obj.magic x8258 in
                 Ojs.call (Ojs.get_prop_ascii x8260 "slice") "apply"
                   [|x8260;((let x8255 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x8253 with
                              | Some x8257 ->
                                  ignore
                                    (Ojs.call x8255 "push"
                                       [|(Ojs.float_to_js x8257)|])
                              | None -> ());
                             (match x8254 with
                              | Some x8256 ->
                                  ignore
                                    (Ojs.call x8255 "push"
                                       [|(Ojs.float_to_js x8256)|])
                              | None -> ());
                             x8255))|])
    let (some :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x8268 : 'tags this) ->
        fun
          ~predicate:(x8261 :
                       value:float -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x8262 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x8270 = this_to_js Obj.magic x8268 in
                 Ojs.call (Ojs.get_prop_ascii x8270 "some") "apply"
                   [|x8270;((let x8263 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8263 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x8265 : Ojs.t) ->
                                          fun (x8266 : Ojs.t) ->
                                            fun (x8267 : Ojs.t) ->
                                              unknown_to_js
                                                (x8261
                                                   ~value:(Ojs.float_of_js
                                                             x8265)
                                                   ~index:(Ojs.float_of_js
                                                             x8266)
                                                   ~array:(t_of_js x8267))))|]);
                             (match x8262 with
                              | Some x8264 ->
                                  ignore
                                    (Ojs.call x8263 "push"
                                       [|(any_to_js x8264)|])
                              | None -> ());
                             x8263))|])
    let (sort :
      'tags this ->
        ?compareFn:(a:float -> b:float -> float) -> unit -> 'tags this)
      =
      fun (x8276 : 'tags this) ->
        fun ?compareFn:(x8271 : (a:float -> b:float -> float) option) ->
          fun () ->
            this_of_js Obj.magic
              (let x8278 = this_to_js Obj.magic x8276 in
               Ojs.call (Ojs.get_prop_ascii x8278 "sort") "apply"
                 [|x8278;((let x8272 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x8271 with
                            | Some x8273 ->
                                ignore
                                  (Ojs.call x8272 "push"
                                     [|(Ojs.fun_to_js 2
                                          (fun (x8274 : Ojs.t) ->
                                             fun (x8275 : Ojs.t) ->
                                               Ojs.float_to_js
                                                 (x8273
                                                    ~a:(Ojs.float_of_js x8274)
                                                    ~b:(Ojs.float_of_js x8275))))|])
                            | None -> ());
                           x8272))|])
    let (subarray : 'tags this -> ?begin_:float -> ?end_:float -> unit -> t)
      =
      fun (x8285 : 'tags this) ->
        fun ?begin_:(x8280 : float option) ->
          fun ?end_:(x8281 : float option) ->
            fun () ->
              t_of_js
                (let x8287 = this_to_js Obj.magic x8285 in
                 Ojs.call (Ojs.get_prop_ascii x8287 "subarray") "apply"
                   [|x8287;((let x8282 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x8280 with
                              | Some x8284 ->
                                  ignore
                                    (Ojs.call x8282 "push"
                                       [|(Ojs.float_to_js x8284)|])
                              | None -> ());
                             (match x8281 with
                              | Some x8283 ->
                                  ignore
                                    (Ojs.call x8282 "push"
                                       [|(Ojs.float_to_js x8283)|])
                              | None -> ());
                             x8282))|])
    let (toLocaleString : 'tags this -> string) =
      fun (x8288 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x8288) "toLocaleString" [||])
    let (toString : 'tags this -> string) =
      fun (x8290 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x8290) "toString" [||])
    let (valueOf : 'tags this -> t) =
      fun (x8292 : 'tags this) ->
        t_of_js (Ojs.call (this_to_js Obj.magic x8292) "valueOf" [||])
    let (get : 'tags this -> float -> float) =
      fun (x8294 : 'tags this) ->
        fun (x8296 : float) ->
          Ojs.float_of_js
            (Ojs.get_prop (this_to_js Obj.magic x8294)
               (Ojs.float_to_js x8296))
    let (set : 'tags this -> float -> float -> unit) =
      fun (x8297 : 'tags this) ->
        fun (x8299 : float) ->
          fun (x8300 : float) ->
            Ojs.set_prop (this_to_js Obj.magic x8297) (Ojs.float_to_js x8299)
              (Ojs.float_to_js x8300)
    let (create : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Int8Array") [||])
    let (create' : float Iterable.t -> t) =
      fun (x8301 : float Iterable.t) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Int8Array")
             [|(Iterable.t_to_js Ojs.float_to_js x8301)|])
    let (from :
      arrayLike:float Iterable.t ->
        ?mapfn:(v:float -> k:float -> float) -> ?thisArg:any -> unit -> t)
      =
      fun ~arrayLike:(x8303 : float Iterable.t) ->
        fun ?mapfn:(x8304 : (v:float -> k:float -> float) option) ->
          fun ?thisArg:(x8305 : any option) ->
            fun () ->
              t_of_js
                (let x8312 = Ojs.get_prop_ascii Ojs.global "Int8Array" in
                 Ojs.call (Ojs.get_prop_ascii x8312 "from") "apply"
                   [|x8312;((let x8306 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8306 "push"
                                  [|(Iterable.t_to_js Ojs.float_to_js x8303)|]);
                             (match x8304 with
                              | Some x8308 ->
                                  ignore
                                    (Ojs.call x8306 "push"
                                       [|(Ojs.fun_to_js 2
                                            (fun (x8309 : Ojs.t) ->
                                               fun (x8310 : Ojs.t) ->
                                                 Ojs.float_to_js
                                                   (x8308
                                                      ~v:(Ojs.float_of_js
                                                            x8309)
                                                      ~k:(Ojs.float_of_js
                                                            x8310))))|])
                              | None -> ());
                             (match x8305 with
                              | Some x8307 ->
                                  ignore
                                    (Ojs.call x8306 "push"
                                       [|(any_to_js x8307)|])
                              | None -> ());
                             x8306))|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Int8Array")
             "prototype")
    let (create'' : float -> t) =
      fun (x8313 : float) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Int8Array")
             [|(Ojs.float_to_js x8313)|])
    let (create''' :
      [ `U1 of float ArrayLike.t  | `U2 of ArrayBufferLike.t ] -> t) =
      fun (x8314 : [ `U1 of float ArrayLike.t  | `U2 of ArrayBufferLike.t ])
        ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Int8Array")
             [|((match x8314 with
                 | `U1 x8315 -> ArrayLike.t_to_js Ojs.float_to_js x8315
                 | `U2 x8317 -> ArrayBufferLike.t_to_js x8317))|])
    let (create'''' :
      buffer:ArrayBufferLike.t ->
        ?byteOffset:float -> ?length:float -> unit -> t)
      =
      fun ~buffer:(x8318 : ArrayBufferLike.t) ->
        fun ?byteOffset:(x8319 : float option) ->
          fun ?length:(x8320 : float option) ->
            fun () ->
              t_of_js
                (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "Int8Array")
                   (let x8321 =
                      Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                        [||] in
                    ignore
                      (Ojs.call x8321 "push"
                         [|(ArrayBufferLike.t_to_js x8318)|]);
                    (match x8319 with
                     | Some x8323 ->
                         ignore
                           (Ojs.call x8321 "push" [|(Ojs.float_to_js x8323)|])
                     | None -> ());
                    (match x8320 with
                     | Some x8322 ->
                         ignore
                           (Ojs.call x8321 "push" [|(Ojs.float_to_js x8322)|])
                     | None -> ());
                    x8321))
    let (bytes_per_element : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Int8Array")
             "BYTES_PER_ELEMENT")
    let (of_ : float list -> t) =
      fun (x8324 : float list) ->
        t_of_js
          (let x8327 = Ojs.get_prop_ascii Ojs.global "Int8Array" in
           Ojs.call (Ojs.get_prop_ascii x8327 "of") "apply"
             [|x8327;((let x8325 =
                         Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                           [||] in
                       List.iter
                         (fun (x8326 : float) ->
                            ignore
                              (Ojs.call x8325 "push"
                                 [|(Ojs.float_to_js x8326)|])) x8324;
                       x8325))|])
    let (from' : float ArrayLike.t -> t) =
      fun (x8328 : float ArrayLike.t) ->
        t_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Int8Array") "from"
             [|(ArrayLike.t_to_js Ojs.float_to_js x8328)|])
    let (from'' :
      arrayLike:'T ArrayLike.t ->
        mapfn:(v:'T -> k:float -> float) -> ?thisArg:any -> unit -> t)
      =
      fun ~arrayLike:(x8330 : 'T ArrayLike.t) ->
        fun ~mapfn:(x8331 : v:'T -> k:float -> float) ->
          fun ?thisArg:(x8332 : any option) ->
            fun () ->
              t_of_js
                (let x8338 = Ojs.get_prop_ascii Ojs.global "Int8Array" in
                 Ojs.call (Ojs.get_prop_ascii x8338 "from") "apply"
                   [|x8338;((let x8333 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8333 "push"
                                  [|(ArrayLike.t_to_js Obj.magic x8330)|]);
                             ignore
                               (Ojs.call x8333 "push"
                                  [|(Ojs.fun_to_js 2
                                       (fun (x8335 : Ojs.t) ->
                                          fun (x8336 : Ojs.t) ->
                                            Ojs.float_to_js
                                              (x8331 ~v:(Obj.magic x8335)
                                                 ~k:(Ojs.float_of_js x8336))))|]);
                             (match x8332 with
                              | Some x8334 ->
                                  ignore
                                    (Ojs.call x8333 "push"
                                       [|(any_to_js x8334)|])
                              | None -> ());
                             x8333))|])
    let cast_from = Obj.magic
  end
module Int32Array =
  struct
    type t = [ `Int32Array ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type tags = [ `Int32Array ]
    type 'tags this = 'tags intf constraint 'tags = [> `Int32Array ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x8341 : Ojs.t) -> intf_of_js __tags_of_js x8341
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x8339 : __tags intf) -> intf_to_js __tags_to_js x8339
    let (findLast :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> bool) ->
          ?thisArg:any -> unit -> 'S option)
      =
      fun (x8350 : 'tags this) ->
        fun
          ~predicate:(x8343 : value:float -> index:float -> array:t -> bool)
          ->
          fun ?thisArg:(x8344 : any option) ->
            fun () ->
              Ojs.option_of_js Obj.magic
                (let x8352 = this_to_js Obj.magic x8350 in
                 Ojs.call (Ojs.get_prop_ascii x8352 "findLast") "apply"
                   [|x8352;((let x8345 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8345 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x8347 : Ojs.t) ->
                                          fun (x8348 : Ojs.t) ->
                                            fun (x8349 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x8343
                                                   ~value:(Ojs.float_of_js
                                                             x8347)
                                                   ~index:(Ojs.float_of_js
                                                             x8348)
                                                   ~array:(t_of_js x8349))))|]);
                             (match x8344 with
                              | Some x8346 ->
                                  ignore
                                    (Ojs.call x8345 "push"
                                       [|(any_to_js x8346)|])
                              | None -> ());
                             x8345))|])
    let (findLast' :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> float option)
      =
      fun (x8361 : 'tags this) ->
        fun
          ~predicate:(x8354 :
                       value:float -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x8355 : any option) ->
            fun () ->
              Ojs.option_of_js Ojs.float_of_js
                (let x8363 = this_to_js Obj.magic x8361 in
                 Ojs.call (Ojs.get_prop_ascii x8363 "findLast") "apply"
                   [|x8363;((let x8356 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8356 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x8358 : Ojs.t) ->
                                          fun (x8359 : Ojs.t) ->
                                            fun (x8360 : Ojs.t) ->
                                              unknown_to_js
                                                (x8354
                                                   ~value:(Ojs.float_of_js
                                                             x8358)
                                                   ~index:(Ojs.float_of_js
                                                             x8359)
                                                   ~array:(t_of_js x8360))))|]);
                             (match x8355 with
                              | Some x8357 ->
                                  ignore
                                    (Ojs.call x8356 "push"
                                       [|(any_to_js x8357)|])
                              | None -> ());
                             x8356))|])
    let (findLastIndex :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> float)
      =
      fun (x8372 : 'tags this) ->
        fun
          ~predicate:(x8365 :
                       value:float -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x8366 : any option) ->
            fun () ->
              Ojs.float_of_js
                (let x8374 = this_to_js Obj.magic x8372 in
                 Ojs.call (Ojs.get_prop_ascii x8374 "findLastIndex") "apply"
                   [|x8374;((let x8367 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8367 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x8369 : Ojs.t) ->
                                          fun (x8370 : Ojs.t) ->
                                            fun (x8371 : Ojs.t) ->
                                              unknown_to_js
                                                (x8365
                                                   ~value:(Ojs.float_of_js
                                                             x8369)
                                                   ~index:(Ojs.float_of_js
                                                             x8370)
                                                   ~array:(t_of_js x8371))))|]);
                             (match x8366 with
                              | Some x8368 ->
                                  ignore
                                    (Ojs.call x8367 "push"
                                       [|(any_to_js x8368)|])
                              | None -> ());
                             x8367))|])
    let (at : 'tags this -> index:float -> float option) =
      fun (x8376 : 'tags this) ->
        fun ~index:(x8375 : float) ->
          Ojs.option_of_js Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x8376) "at"
               [|(Ojs.float_to_js x8375)|])
    let (includes :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> bool)
      =
      fun (x8383 : 'tags this) ->
        fun ~searchElement:(x8379 : float) ->
          fun ?fromIndex:(x8380 : float option) ->
            fun () ->
              Ojs.bool_of_js
                (let x8385 = this_to_js Obj.magic x8383 in
                 Ojs.call (Ojs.get_prop_ascii x8385 "includes") "apply"
                   [|x8385;((let x8381 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8381 "push"
                                  [|(Ojs.float_to_js x8379)|]);
                             (match x8380 with
                              | Some x8382 ->
                                  ignore
                                    (Ojs.call x8381 "push"
                                       [|(Ojs.float_to_js x8382)|])
                              | None -> ());
                             x8381))|])
    let (entries : 'tags this -> (float * float) IterableIterator.t) =
      fun (x8386 : 'tags this) ->
        IterableIterator.t_of_js
          (fun (x8388 : Ojs.t) ->
             let x8389 = x8388 in
             ((Ojs.float_of_js (Ojs.array_get x8389 0)),
               (Ojs.float_of_js (Ojs.array_get x8389 1))))
          (Ojs.call (this_to_js Obj.magic x8386) "entries" [||])
    let (keys : 'tags this -> float IterableIterator.t) =
      fun (x8390 : 'tags this) ->
        IterableIterator.t_of_js Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x8390) "keys" [||])
    let (values : 'tags this -> float IterableIterator.t) =
      fun (x8393 : 'tags this) ->
        IterableIterator.t_of_js Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x8393) "values" [||])
    let (get_BYTES_PER_ELEMENT : 'tags this -> float) =
      fun (x8396 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x8396)
             "BYTES_PER_ELEMENT")
    let (get_buffer : 'tags this -> ArrayBufferLike.t) =
      fun (x8398 : 'tags this) ->
        ArrayBufferLike.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x8398) "buffer")
    let (get_byteLength : 'tags this -> float) =
      fun (x8400 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x8400) "byteLength")
    let (get_byteOffset : 'tags this -> float) =
      fun (x8402 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x8402) "byteOffset")
    let (copyWithin :
      'tags this ->
        target:float -> ?start:float -> ?end_:float -> unit -> 'tags this)
      =
      fun (x8410 : 'tags this) ->
        fun ~target:(x8404 : float) ->
          fun ?start:(x8405 : float option) ->
            fun ?end_:(x8406 : float option) ->
              fun () ->
                this_of_js Obj.magic
                  (let x8412 = this_to_js Obj.magic x8410 in
                   Ojs.call (Ojs.get_prop_ascii x8412 "copyWithin") "apply"
                     [|x8412;((let x8407 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x8407 "push"
                                    [|(Ojs.float_to_js x8404)|]);
                               (match x8405 with
                                | Some x8409 ->
                                    ignore
                                      (Ojs.call x8407 "push"
                                         [|(Ojs.float_to_js x8409)|])
                                | None -> ());
                               (match x8406 with
                                | Some x8408 ->
                                    ignore
                                      (Ojs.call x8407 "push"
                                         [|(Ojs.float_to_js x8408)|])
                                | None -> ());
                               x8407))|])
    let (every :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x8421 : 'tags this) ->
        fun
          ~predicate:(x8414 :
                       value:float -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x8415 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x8423 = this_to_js Obj.magic x8421 in
                 Ojs.call (Ojs.get_prop_ascii x8423 "every") "apply"
                   [|x8423;((let x8416 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8416 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x8418 : Ojs.t) ->
                                          fun (x8419 : Ojs.t) ->
                                            fun (x8420 : Ojs.t) ->
                                              unknown_to_js
                                                (x8414
                                                   ~value:(Ojs.float_of_js
                                                             x8418)
                                                   ~index:(Ojs.float_of_js
                                                             x8419)
                                                   ~array:(t_of_js x8420))))|]);
                             (match x8415 with
                              | Some x8417 ->
                                  ignore
                                    (Ojs.call x8416 "push"
                                       [|(any_to_js x8417)|])
                              | None -> ());
                             x8416))|])
    let (fill :
      'tags this ->
        value:float -> ?start:float -> ?end_:float -> unit -> 'tags this)
      =
      fun (x8430 : 'tags this) ->
        fun ~value:(x8424 : float) ->
          fun ?start:(x8425 : float option) ->
            fun ?end_:(x8426 : float option) ->
              fun () ->
                this_of_js Obj.magic
                  (let x8432 = this_to_js Obj.magic x8430 in
                   Ojs.call (Ojs.get_prop_ascii x8432 "fill") "apply"
                     [|x8432;((let x8427 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x8427 "push"
                                    [|(Ojs.float_to_js x8424)|]);
                               (match x8425 with
                                | Some x8429 ->
                                    ignore
                                      (Ojs.call x8427 "push"
                                         [|(Ojs.float_to_js x8429)|])
                                | None -> ());
                               (match x8426 with
                                | Some x8428 ->
                                    ignore
                                      (Ojs.call x8427 "push"
                                         [|(Ojs.float_to_js x8428)|])
                                | None -> ());
                               x8427))|])
    let (filter :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> any) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x8441 : 'tags this) ->
        fun ~predicate:(x8434 : value:float -> index:float -> array:t -> any)
          ->
          fun ?thisArg:(x8435 : any option) ->
            fun () ->
              t_of_js
                (let x8443 = this_to_js Obj.magic x8441 in
                 Ojs.call (Ojs.get_prop_ascii x8443 "filter") "apply"
                   [|x8443;((let x8436 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8436 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x8438 : Ojs.t) ->
                                          fun (x8439 : Ojs.t) ->
                                            fun (x8440 : Ojs.t) ->
                                              any_to_js
                                                (x8434
                                                   ~value:(Ojs.float_of_js
                                                             x8438)
                                                   ~index:(Ojs.float_of_js
                                                             x8439)
                                                   ~array:(t_of_js x8440))))|]);
                             (match x8435 with
                              | Some x8437 ->
                                  ignore
                                    (Ojs.call x8436 "push"
                                       [|(any_to_js x8437)|])
                              | None -> ());
                             x8436))|])
    let (find :
      'tags this ->
        predicate:(value:float -> index:float -> obj:t -> bool) ->
          ?thisArg:any -> unit -> float option)
      =
      fun (x8451 : 'tags this) ->
        fun ~predicate:(x8444 : value:float -> index:float -> obj:t -> bool)
          ->
          fun ?thisArg:(x8445 : any option) ->
            fun () ->
              Ojs.option_of_js Ojs.float_of_js
                (let x8453 = this_to_js Obj.magic x8451 in
                 Ojs.call (Ojs.get_prop_ascii x8453 "find") "apply"
                   [|x8453;((let x8446 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8446 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x8448 : Ojs.t) ->
                                          fun (x8449 : Ojs.t) ->
                                            fun (x8450 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x8444
                                                   ~value:(Ojs.float_of_js
                                                             x8448)
                                                   ~index:(Ojs.float_of_js
                                                             x8449)
                                                   ~obj:(t_of_js x8450))))|]);
                             (match x8445 with
                              | Some x8447 ->
                                  ignore
                                    (Ojs.call x8446 "push"
                                       [|(any_to_js x8447)|])
                              | None -> ());
                             x8446))|])
    let (findIndex :
      'tags this ->
        predicate:(value:float -> index:float -> obj:t -> bool) ->
          ?thisArg:any -> unit -> float)
      =
      fun (x8462 : 'tags this) ->
        fun ~predicate:(x8455 : value:float -> index:float -> obj:t -> bool)
          ->
          fun ?thisArg:(x8456 : any option) ->
            fun () ->
              Ojs.float_of_js
                (let x8464 = this_to_js Obj.magic x8462 in
                 Ojs.call (Ojs.get_prop_ascii x8464 "findIndex") "apply"
                   [|x8464;((let x8457 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8457 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x8459 : Ojs.t) ->
                                          fun (x8460 : Ojs.t) ->
                                            fun (x8461 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x8455
                                                   ~value:(Ojs.float_of_js
                                                             x8459)
                                                   ~index:(Ojs.float_of_js
                                                             x8460)
                                                   ~obj:(t_of_js x8461))))|]);
                             (match x8456 with
                              | Some x8458 ->
                                  ignore
                                    (Ojs.call x8457 "push"
                                       [|(any_to_js x8458)|])
                              | None -> ());
                             x8457))|])
    let (forEach :
      'tags this ->
        callbackfn:(value:float -> index:float -> array:t -> unit) ->
          ?thisArg:any -> unit -> unit)
      =
      fun (x8472 : 'tags this) ->
        fun
          ~callbackfn:(x8465 : value:float -> index:float -> array:t -> unit)
          ->
          fun ?thisArg:(x8466 : any option) ->
            fun () ->
              ignore
                (let x8474 = this_to_js Obj.magic x8472 in
                 Ojs.call (Ojs.get_prop_ascii x8474 "forEach") "apply"
                   [|x8474;((let x8467 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8467 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x8469 : Ojs.t) ->
                                          fun (x8470 : Ojs.t) ->
                                            fun (x8471 : Ojs.t) ->
                                              x8465
                                                ~value:(Ojs.float_of_js x8469)
                                                ~index:(Ojs.float_of_js x8470)
                                                ~array:(t_of_js x8471)))|]);
                             (match x8466 with
                              | Some x8468 ->
                                  ignore
                                    (Ojs.call x8467 "push"
                                       [|(any_to_js x8468)|])
                              | None -> ());
                             x8467))|])
    let (indexOf :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> float)
      =
      fun (x8479 : 'tags this) ->
        fun ~searchElement:(x8475 : float) ->
          fun ?fromIndex:(x8476 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x8481 = this_to_js Obj.magic x8479 in
                 Ojs.call (Ojs.get_prop_ascii x8481 "indexOf") "apply"
                   [|x8481;((let x8477 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8477 "push"
                                  [|(Ojs.float_to_js x8475)|]);
                             (match x8476 with
                              | Some x8478 ->
                                  ignore
                                    (Ojs.call x8477 "push"
                                       [|(Ojs.float_to_js x8478)|])
                              | None -> ());
                             x8477))|])
    let (join : 'tags this -> ?separator:string -> unit -> string) =
      fun (x8485 : 'tags this) ->
        fun ?separator:(x8482 : string option) ->
          fun () ->
            Ojs.string_of_js
              (let x8487 = this_to_js Obj.magic x8485 in
               Ojs.call (Ojs.get_prop_ascii x8487 "join") "apply"
                 [|x8487;((let x8483 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x8482 with
                            | Some x8484 ->
                                ignore
                                  (Ojs.call x8483 "push"
                                     [|(Ojs.string_to_js x8484)|])
                            | None -> ());
                           x8483))|])
    let (lastIndexOf :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> float)
      =
      fun (x8492 : 'tags this) ->
        fun ~searchElement:(x8488 : float) ->
          fun ?fromIndex:(x8489 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x8494 = this_to_js Obj.magic x8492 in
                 Ojs.call (Ojs.get_prop_ascii x8494 "lastIndexOf") "apply"
                   [|x8494;((let x8490 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8490 "push"
                                  [|(Ojs.float_to_js x8488)|]);
                             (match x8489 with
                              | Some x8491 ->
                                  ignore
                                    (Ojs.call x8490 "push"
                                       [|(Ojs.float_to_js x8491)|])
                              | None -> ());
                             x8490))|])
    let (get_length : 'tags this -> float) =
      fun (x8495 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x8495) "length")
    let (map :
      'tags this ->
        callbackfn:(value:float -> index:float -> array:t -> float) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x8504 : 'tags this) ->
        fun
          ~callbackfn:(x8497 :
                        value:float -> index:float -> array:t -> float)
          ->
          fun ?thisArg:(x8498 : any option) ->
            fun () ->
              t_of_js
                (let x8506 = this_to_js Obj.magic x8504 in
                 Ojs.call (Ojs.get_prop_ascii x8506 "map") "apply"
                   [|x8506;((let x8499 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8499 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x8501 : Ojs.t) ->
                                          fun (x8502 : Ojs.t) ->
                                            fun (x8503 : Ojs.t) ->
                                              Ojs.float_to_js
                                                (x8497
                                                   ~value:(Ojs.float_of_js
                                                             x8501)
                                                   ~index:(Ojs.float_of_js
                                                             x8502)
                                                   ~array:(t_of_js x8503))))|]);
                             (match x8498 with
                              | Some x8500 ->
                                  ignore
                                    (Ojs.call x8499 "push"
                                       [|(any_to_js x8500)|])
                              | None -> ());
                             x8499))|])
    let (reduce :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> float)
      =
      fun (x8512 : 'tags this) ->
        fun
          ~callbackfn:(x8507 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x8512) "reduce"
               [|(Ojs.fun_to_js 4
                    (fun (x8508 : Ojs.t) ->
                       fun (x8509 : Ojs.t) ->
                         fun (x8510 : Ojs.t) ->
                           fun (x8511 : Ojs.t) ->
                             Ojs.float_to_js
                               (x8507 ~previousValue:(Ojs.float_of_js x8508)
                                  ~currentValue:(Ojs.float_of_js x8509)
                                  ~currentIndex:(Ojs.float_of_js x8510)
                                  ~array:(t_of_js x8511))))|])
    let (reduce' :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> initialValue:float -> float)
      =
      fun (x8520 : 'tags this) ->
        fun
          ~callbackfn:(x8514 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          fun ~initialValue:(x8519 : float) ->
            Ojs.float_of_js
              (Ojs.call (this_to_js Obj.magic x8520) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x8515 : Ojs.t) ->
                         fun (x8516 : Ojs.t) ->
                           fun (x8517 : Ojs.t) ->
                             fun (x8518 : Ojs.t) ->
                               Ojs.float_to_js
                                 (x8514
                                    ~previousValue:(Ojs.float_of_js x8515)
                                    ~currentValue:(Ojs.float_of_js x8516)
                                    ~currentIndex:(Ojs.float_of_js x8517)
                                    ~array:(t_of_js x8518))));(Ojs.float_to_js
                                                                 x8519)|])
    let (reduce'' :
      'tags this ->
        callbackfn:(previousValue:'U ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x8528 : 'tags this) ->
        fun
          ~callbackfn:(x8522 :
                        previousValue:'U ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x8527 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic x8528) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x8523 : Ojs.t) ->
                         fun (x8524 : Ojs.t) ->
                           fun (x8525 : Ojs.t) ->
                             fun (x8526 : Ojs.t) ->
                               Obj.magic
                                 (x8522 ~previousValue:(Obj.magic x8523)
                                    ~currentValue:(Ojs.float_of_js x8524)
                                    ~currentIndex:(Ojs.float_of_js x8525)
                                    ~array:(t_of_js x8526))));(Obj.magic
                                                                 x8527)|])
    let (reduceRight :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> float)
      =
      fun (x8535 : 'tags this) ->
        fun
          ~callbackfn:(x8530 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x8535) "reduceRight"
               [|(Ojs.fun_to_js 4
                    (fun (x8531 : Ojs.t) ->
                       fun (x8532 : Ojs.t) ->
                         fun (x8533 : Ojs.t) ->
                           fun (x8534 : Ojs.t) ->
                             Ojs.float_to_js
                               (x8530 ~previousValue:(Ojs.float_of_js x8531)
                                  ~currentValue:(Ojs.float_of_js x8532)
                                  ~currentIndex:(Ojs.float_of_js x8533)
                                  ~array:(t_of_js x8534))))|])
    let (reduceRight' :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> initialValue:float -> float)
      =
      fun (x8543 : 'tags this) ->
        fun
          ~callbackfn:(x8537 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          fun ~initialValue:(x8542 : float) ->
            Ojs.float_of_js
              (Ojs.call (this_to_js Obj.magic x8543) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x8538 : Ojs.t) ->
                         fun (x8539 : Ojs.t) ->
                           fun (x8540 : Ojs.t) ->
                             fun (x8541 : Ojs.t) ->
                               Ojs.float_to_js
                                 (x8537
                                    ~previousValue:(Ojs.float_of_js x8538)
                                    ~currentValue:(Ojs.float_of_js x8539)
                                    ~currentIndex:(Ojs.float_of_js x8540)
                                    ~array:(t_of_js x8541))));(Ojs.float_to_js
                                                                 x8542)|])
    let (reduceRight'' :
      'tags this ->
        callbackfn:(previousValue:'U ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x8551 : 'tags this) ->
        fun
          ~callbackfn:(x8545 :
                        previousValue:'U ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x8550 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic x8551) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x8546 : Ojs.t) ->
                         fun (x8547 : Ojs.t) ->
                           fun (x8548 : Ojs.t) ->
                             fun (x8549 : Ojs.t) ->
                               Obj.magic
                                 (x8545 ~previousValue:(Obj.magic x8546)
                                    ~currentValue:(Ojs.float_of_js x8547)
                                    ~currentIndex:(Ojs.float_of_js x8548)
                                    ~array:(t_of_js x8549))));(Obj.magic
                                                                 x8550)|])
    let (reverse : 'tags this -> t) =
      fun (x8553 : 'tags this) ->
        t_of_js (Ojs.call (this_to_js Obj.magic x8553) "reverse" [||])
    let (set_ :
      'tags this -> array:float ArrayLike.t -> ?offset:float -> unit -> unit)
      =
      fun (x8560 : 'tags this) ->
        fun ~array:(x8555 : float ArrayLike.t) ->
          fun ?offset:(x8556 : float option) ->
            fun () ->
              ignore
                (let x8562 = this_to_js Obj.magic x8560 in
                 Ojs.call (Ojs.get_prop_ascii x8562 "set") "apply"
                   [|x8562;((let x8557 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8557 "push"
                                  [|(ArrayLike.t_to_js Ojs.float_to_js x8555)|]);
                             (match x8556 with
                              | Some x8558 ->
                                  ignore
                                    (Ojs.call x8557 "push"
                                       [|(Ojs.float_to_js x8558)|])
                              | None -> ());
                             x8557))|])
    let (slice : 'tags this -> ?start:float -> ?end_:float -> unit -> t) =
      fun (x8568 : 'tags this) ->
        fun ?start:(x8563 : float option) ->
          fun ?end_:(x8564 : float option) ->
            fun () ->
              t_of_js
                (let x8570 = this_to_js Obj.magic x8568 in
                 Ojs.call (Ojs.get_prop_ascii x8570 "slice") "apply"
                   [|x8570;((let x8565 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x8563 with
                              | Some x8567 ->
                                  ignore
                                    (Ojs.call x8565 "push"
                                       [|(Ojs.float_to_js x8567)|])
                              | None -> ());
                             (match x8564 with
                              | Some x8566 ->
                                  ignore
                                    (Ojs.call x8565 "push"
                                       [|(Ojs.float_to_js x8566)|])
                              | None -> ());
                             x8565))|])
    let (some :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x8578 : 'tags this) ->
        fun
          ~predicate:(x8571 :
                       value:float -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x8572 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x8580 = this_to_js Obj.magic x8578 in
                 Ojs.call (Ojs.get_prop_ascii x8580 "some") "apply"
                   [|x8580;((let x8573 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8573 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x8575 : Ojs.t) ->
                                          fun (x8576 : Ojs.t) ->
                                            fun (x8577 : Ojs.t) ->
                                              unknown_to_js
                                                (x8571
                                                   ~value:(Ojs.float_of_js
                                                             x8575)
                                                   ~index:(Ojs.float_of_js
                                                             x8576)
                                                   ~array:(t_of_js x8577))))|]);
                             (match x8572 with
                              | Some x8574 ->
                                  ignore
                                    (Ojs.call x8573 "push"
                                       [|(any_to_js x8574)|])
                              | None -> ());
                             x8573))|])
    let (sort :
      'tags this ->
        ?compareFn:(a:float -> b:float -> float) -> unit -> 'tags this)
      =
      fun (x8586 : 'tags this) ->
        fun ?compareFn:(x8581 : (a:float -> b:float -> float) option) ->
          fun () ->
            this_of_js Obj.magic
              (let x8588 = this_to_js Obj.magic x8586 in
               Ojs.call (Ojs.get_prop_ascii x8588 "sort") "apply"
                 [|x8588;((let x8582 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x8581 with
                            | Some x8583 ->
                                ignore
                                  (Ojs.call x8582 "push"
                                     [|(Ojs.fun_to_js 2
                                          (fun (x8584 : Ojs.t) ->
                                             fun (x8585 : Ojs.t) ->
                                               Ojs.float_to_js
                                                 (x8583
                                                    ~a:(Ojs.float_of_js x8584)
                                                    ~b:(Ojs.float_of_js x8585))))|])
                            | None -> ());
                           x8582))|])
    let (subarray : 'tags this -> ?begin_:float -> ?end_:float -> unit -> t)
      =
      fun (x8595 : 'tags this) ->
        fun ?begin_:(x8590 : float option) ->
          fun ?end_:(x8591 : float option) ->
            fun () ->
              t_of_js
                (let x8597 = this_to_js Obj.magic x8595 in
                 Ojs.call (Ojs.get_prop_ascii x8597 "subarray") "apply"
                   [|x8597;((let x8592 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x8590 with
                              | Some x8594 ->
                                  ignore
                                    (Ojs.call x8592 "push"
                                       [|(Ojs.float_to_js x8594)|])
                              | None -> ());
                             (match x8591 with
                              | Some x8593 ->
                                  ignore
                                    (Ojs.call x8592 "push"
                                       [|(Ojs.float_to_js x8593)|])
                              | None -> ());
                             x8592))|])
    let (toLocaleString : 'tags this -> string) =
      fun (x8598 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x8598) "toLocaleString" [||])
    let (toString : 'tags this -> string) =
      fun (x8600 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x8600) "toString" [||])
    let (valueOf : 'tags this -> t) =
      fun (x8602 : 'tags this) ->
        t_of_js (Ojs.call (this_to_js Obj.magic x8602) "valueOf" [||])
    let (get : 'tags this -> float -> float) =
      fun (x8604 : 'tags this) ->
        fun (x8606 : float) ->
          Ojs.float_of_js
            (Ojs.get_prop (this_to_js Obj.magic x8604)
               (Ojs.float_to_js x8606))
    let (set : 'tags this -> float -> float -> unit) =
      fun (x8607 : 'tags this) ->
        fun (x8609 : float) ->
          fun (x8610 : float) ->
            Ojs.set_prop (this_to_js Obj.magic x8607) (Ojs.float_to_js x8609)
              (Ojs.float_to_js x8610)
    let (create : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Int32Array") [||])
    let (create' : float Iterable.t -> t) =
      fun (x8611 : float Iterable.t) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Int32Array")
             [|(Iterable.t_to_js Ojs.float_to_js x8611)|])
    let (from :
      arrayLike:float Iterable.t ->
        ?mapfn:(v:float -> k:float -> float) -> ?thisArg:any -> unit -> t)
      =
      fun ~arrayLike:(x8613 : float Iterable.t) ->
        fun ?mapfn:(x8614 : (v:float -> k:float -> float) option) ->
          fun ?thisArg:(x8615 : any option) ->
            fun () ->
              t_of_js
                (let x8622 = Ojs.get_prop_ascii Ojs.global "Int32Array" in
                 Ojs.call (Ojs.get_prop_ascii x8622 "from") "apply"
                   [|x8622;((let x8616 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8616 "push"
                                  [|(Iterable.t_to_js Ojs.float_to_js x8613)|]);
                             (match x8614 with
                              | Some x8618 ->
                                  ignore
                                    (Ojs.call x8616 "push"
                                       [|(Ojs.fun_to_js 2
                                            (fun (x8619 : Ojs.t) ->
                                               fun (x8620 : Ojs.t) ->
                                                 Ojs.float_to_js
                                                   (x8618
                                                      ~v:(Ojs.float_of_js
                                                            x8619)
                                                      ~k:(Ojs.float_of_js
                                                            x8620))))|])
                              | None -> ());
                             (match x8615 with
                              | Some x8617 ->
                                  ignore
                                    (Ojs.call x8616 "push"
                                       [|(any_to_js x8617)|])
                              | None -> ());
                             x8616))|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Int32Array")
             "prototype")
    let (create'' : float -> t) =
      fun (x8623 : float) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Int32Array")
             [|(Ojs.float_to_js x8623)|])
    let (create''' :
      [ `U1 of float ArrayLike.t  | `U2 of ArrayBufferLike.t ] -> t) =
      fun (x8624 : [ `U1 of float ArrayLike.t  | `U2 of ArrayBufferLike.t ])
        ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Int32Array")
             [|((match x8624 with
                 | `U1 x8625 -> ArrayLike.t_to_js Ojs.float_to_js x8625
                 | `U2 x8627 -> ArrayBufferLike.t_to_js x8627))|])
    let (create'''' :
      buffer:ArrayBufferLike.t ->
        ?byteOffset:float -> ?length:float -> unit -> t)
      =
      fun ~buffer:(x8628 : ArrayBufferLike.t) ->
        fun ?byteOffset:(x8629 : float option) ->
          fun ?length:(x8630 : float option) ->
            fun () ->
              t_of_js
                (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "Int32Array")
                   (let x8631 =
                      Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                        [||] in
                    ignore
                      (Ojs.call x8631 "push"
                         [|(ArrayBufferLike.t_to_js x8628)|]);
                    (match x8629 with
                     | Some x8633 ->
                         ignore
                           (Ojs.call x8631 "push" [|(Ojs.float_to_js x8633)|])
                     | None -> ());
                    (match x8630 with
                     | Some x8632 ->
                         ignore
                           (Ojs.call x8631 "push" [|(Ojs.float_to_js x8632)|])
                     | None -> ());
                    x8631))
    let (bytes_per_element : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Int32Array")
             "BYTES_PER_ELEMENT")
    let (of_ : float list -> t) =
      fun (x8634 : float list) ->
        t_of_js
          (let x8637 = Ojs.get_prop_ascii Ojs.global "Int32Array" in
           Ojs.call (Ojs.get_prop_ascii x8637 "of") "apply"
             [|x8637;((let x8635 =
                         Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                           [||] in
                       List.iter
                         (fun (x8636 : float) ->
                            ignore
                              (Ojs.call x8635 "push"
                                 [|(Ojs.float_to_js x8636)|])) x8634;
                       x8635))|])
    let (from' : float ArrayLike.t -> t) =
      fun (x8638 : float ArrayLike.t) ->
        t_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Int32Array") "from"
             [|(ArrayLike.t_to_js Ojs.float_to_js x8638)|])
    let (from'' :
      arrayLike:'T ArrayLike.t ->
        mapfn:(v:'T -> k:float -> float) -> ?thisArg:any -> unit -> t)
      =
      fun ~arrayLike:(x8640 : 'T ArrayLike.t) ->
        fun ~mapfn:(x8641 : v:'T -> k:float -> float) ->
          fun ?thisArg:(x8642 : any option) ->
            fun () ->
              t_of_js
                (let x8648 = Ojs.get_prop_ascii Ojs.global "Int32Array" in
                 Ojs.call (Ojs.get_prop_ascii x8648 "from") "apply"
                   [|x8648;((let x8643 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8643 "push"
                                  [|(ArrayLike.t_to_js Obj.magic x8640)|]);
                             ignore
                               (Ojs.call x8643 "push"
                                  [|(Ojs.fun_to_js 2
                                       (fun (x8645 : Ojs.t) ->
                                          fun (x8646 : Ojs.t) ->
                                            Ojs.float_to_js
                                              (x8641 ~v:(Obj.magic x8645)
                                                 ~k:(Ojs.float_of_js x8646))))|]);
                             (match x8642 with
                              | Some x8644 ->
                                  ignore
                                    (Ojs.call x8643 "push"
                                       [|(any_to_js x8644)|])
                              | None -> ());
                             x8643))|])
    let cast_from = Obj.magic
  end
module Int16Array =
  struct
    type t = [ `Int16Array ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type tags = [ `Int16Array ]
    type 'tags this = 'tags intf constraint 'tags = [> `Int16Array ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x8651 : Ojs.t) -> intf_of_js __tags_of_js x8651
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x8649 : __tags intf) -> intf_to_js __tags_to_js x8649
    let (findLast :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> bool) ->
          ?thisArg:any -> unit -> 'S option)
      =
      fun (x8660 : 'tags this) ->
        fun
          ~predicate:(x8653 : value:float -> index:float -> array:t -> bool)
          ->
          fun ?thisArg:(x8654 : any option) ->
            fun () ->
              Ojs.option_of_js Obj.magic
                (let x8662 = this_to_js Obj.magic x8660 in
                 Ojs.call (Ojs.get_prop_ascii x8662 "findLast") "apply"
                   [|x8662;((let x8655 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8655 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x8657 : Ojs.t) ->
                                          fun (x8658 : Ojs.t) ->
                                            fun (x8659 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x8653
                                                   ~value:(Ojs.float_of_js
                                                             x8657)
                                                   ~index:(Ojs.float_of_js
                                                             x8658)
                                                   ~array:(t_of_js x8659))))|]);
                             (match x8654 with
                              | Some x8656 ->
                                  ignore
                                    (Ojs.call x8655 "push"
                                       [|(any_to_js x8656)|])
                              | None -> ());
                             x8655))|])
    let (findLast' :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> float option)
      =
      fun (x8671 : 'tags this) ->
        fun
          ~predicate:(x8664 :
                       value:float -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x8665 : any option) ->
            fun () ->
              Ojs.option_of_js Ojs.float_of_js
                (let x8673 = this_to_js Obj.magic x8671 in
                 Ojs.call (Ojs.get_prop_ascii x8673 "findLast") "apply"
                   [|x8673;((let x8666 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8666 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x8668 : Ojs.t) ->
                                          fun (x8669 : Ojs.t) ->
                                            fun (x8670 : Ojs.t) ->
                                              unknown_to_js
                                                (x8664
                                                   ~value:(Ojs.float_of_js
                                                             x8668)
                                                   ~index:(Ojs.float_of_js
                                                             x8669)
                                                   ~array:(t_of_js x8670))))|]);
                             (match x8665 with
                              | Some x8667 ->
                                  ignore
                                    (Ojs.call x8666 "push"
                                       [|(any_to_js x8667)|])
                              | None -> ());
                             x8666))|])
    let (findLastIndex :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> float)
      =
      fun (x8682 : 'tags this) ->
        fun
          ~predicate:(x8675 :
                       value:float -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x8676 : any option) ->
            fun () ->
              Ojs.float_of_js
                (let x8684 = this_to_js Obj.magic x8682 in
                 Ojs.call (Ojs.get_prop_ascii x8684 "findLastIndex") "apply"
                   [|x8684;((let x8677 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8677 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x8679 : Ojs.t) ->
                                          fun (x8680 : Ojs.t) ->
                                            fun (x8681 : Ojs.t) ->
                                              unknown_to_js
                                                (x8675
                                                   ~value:(Ojs.float_of_js
                                                             x8679)
                                                   ~index:(Ojs.float_of_js
                                                             x8680)
                                                   ~array:(t_of_js x8681))))|]);
                             (match x8676 with
                              | Some x8678 ->
                                  ignore
                                    (Ojs.call x8677 "push"
                                       [|(any_to_js x8678)|])
                              | None -> ());
                             x8677))|])
    let (at : 'tags this -> index:float -> float option) =
      fun (x8686 : 'tags this) ->
        fun ~index:(x8685 : float) ->
          Ojs.option_of_js Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x8686) "at"
               [|(Ojs.float_to_js x8685)|])
    let (includes :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> bool)
      =
      fun (x8693 : 'tags this) ->
        fun ~searchElement:(x8689 : float) ->
          fun ?fromIndex:(x8690 : float option) ->
            fun () ->
              Ojs.bool_of_js
                (let x8695 = this_to_js Obj.magic x8693 in
                 Ojs.call (Ojs.get_prop_ascii x8695 "includes") "apply"
                   [|x8695;((let x8691 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8691 "push"
                                  [|(Ojs.float_to_js x8689)|]);
                             (match x8690 with
                              | Some x8692 ->
                                  ignore
                                    (Ojs.call x8691 "push"
                                       [|(Ojs.float_to_js x8692)|])
                              | None -> ());
                             x8691))|])
    let (entries : 'tags this -> (float * float) IterableIterator.t) =
      fun (x8696 : 'tags this) ->
        IterableIterator.t_of_js
          (fun (x8698 : Ojs.t) ->
             let x8699 = x8698 in
             ((Ojs.float_of_js (Ojs.array_get x8699 0)),
               (Ojs.float_of_js (Ojs.array_get x8699 1))))
          (Ojs.call (this_to_js Obj.magic x8696) "entries" [||])
    let (keys : 'tags this -> float IterableIterator.t) =
      fun (x8700 : 'tags this) ->
        IterableIterator.t_of_js Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x8700) "keys" [||])
    let (values : 'tags this -> float IterableIterator.t) =
      fun (x8703 : 'tags this) ->
        IterableIterator.t_of_js Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x8703) "values" [||])
    let (get_BYTES_PER_ELEMENT : 'tags this -> float) =
      fun (x8706 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x8706)
             "BYTES_PER_ELEMENT")
    let (get_buffer : 'tags this -> ArrayBufferLike.t) =
      fun (x8708 : 'tags this) ->
        ArrayBufferLike.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x8708) "buffer")
    let (get_byteLength : 'tags this -> float) =
      fun (x8710 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x8710) "byteLength")
    let (get_byteOffset : 'tags this -> float) =
      fun (x8712 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x8712) "byteOffset")
    let (copyWithin :
      'tags this ->
        target:float -> ?start:float -> ?end_:float -> unit -> 'tags this)
      =
      fun (x8720 : 'tags this) ->
        fun ~target:(x8714 : float) ->
          fun ?start:(x8715 : float option) ->
            fun ?end_:(x8716 : float option) ->
              fun () ->
                this_of_js Obj.magic
                  (let x8722 = this_to_js Obj.magic x8720 in
                   Ojs.call (Ojs.get_prop_ascii x8722 "copyWithin") "apply"
                     [|x8722;((let x8717 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x8717 "push"
                                    [|(Ojs.float_to_js x8714)|]);
                               (match x8715 with
                                | Some x8719 ->
                                    ignore
                                      (Ojs.call x8717 "push"
                                         [|(Ojs.float_to_js x8719)|])
                                | None -> ());
                               (match x8716 with
                                | Some x8718 ->
                                    ignore
                                      (Ojs.call x8717 "push"
                                         [|(Ojs.float_to_js x8718)|])
                                | None -> ());
                               x8717))|])
    let (every :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x8731 : 'tags this) ->
        fun
          ~predicate:(x8724 :
                       value:float -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x8725 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x8733 = this_to_js Obj.magic x8731 in
                 Ojs.call (Ojs.get_prop_ascii x8733 "every") "apply"
                   [|x8733;((let x8726 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8726 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x8728 : Ojs.t) ->
                                          fun (x8729 : Ojs.t) ->
                                            fun (x8730 : Ojs.t) ->
                                              unknown_to_js
                                                (x8724
                                                   ~value:(Ojs.float_of_js
                                                             x8728)
                                                   ~index:(Ojs.float_of_js
                                                             x8729)
                                                   ~array:(t_of_js x8730))))|]);
                             (match x8725 with
                              | Some x8727 ->
                                  ignore
                                    (Ojs.call x8726 "push"
                                       [|(any_to_js x8727)|])
                              | None -> ());
                             x8726))|])
    let (fill :
      'tags this ->
        value:float -> ?start:float -> ?end_:float -> unit -> 'tags this)
      =
      fun (x8740 : 'tags this) ->
        fun ~value:(x8734 : float) ->
          fun ?start:(x8735 : float option) ->
            fun ?end_:(x8736 : float option) ->
              fun () ->
                this_of_js Obj.magic
                  (let x8742 = this_to_js Obj.magic x8740 in
                   Ojs.call (Ojs.get_prop_ascii x8742 "fill") "apply"
                     [|x8742;((let x8737 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x8737 "push"
                                    [|(Ojs.float_to_js x8734)|]);
                               (match x8735 with
                                | Some x8739 ->
                                    ignore
                                      (Ojs.call x8737 "push"
                                         [|(Ojs.float_to_js x8739)|])
                                | None -> ());
                               (match x8736 with
                                | Some x8738 ->
                                    ignore
                                      (Ojs.call x8737 "push"
                                         [|(Ojs.float_to_js x8738)|])
                                | None -> ());
                               x8737))|])
    let (filter :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> any) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x8751 : 'tags this) ->
        fun ~predicate:(x8744 : value:float -> index:float -> array:t -> any)
          ->
          fun ?thisArg:(x8745 : any option) ->
            fun () ->
              t_of_js
                (let x8753 = this_to_js Obj.magic x8751 in
                 Ojs.call (Ojs.get_prop_ascii x8753 "filter") "apply"
                   [|x8753;((let x8746 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8746 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x8748 : Ojs.t) ->
                                          fun (x8749 : Ojs.t) ->
                                            fun (x8750 : Ojs.t) ->
                                              any_to_js
                                                (x8744
                                                   ~value:(Ojs.float_of_js
                                                             x8748)
                                                   ~index:(Ojs.float_of_js
                                                             x8749)
                                                   ~array:(t_of_js x8750))))|]);
                             (match x8745 with
                              | Some x8747 ->
                                  ignore
                                    (Ojs.call x8746 "push"
                                       [|(any_to_js x8747)|])
                              | None -> ());
                             x8746))|])
    let (find :
      'tags this ->
        predicate:(value:float -> index:float -> obj:t -> bool) ->
          ?thisArg:any -> unit -> float option)
      =
      fun (x8761 : 'tags this) ->
        fun ~predicate:(x8754 : value:float -> index:float -> obj:t -> bool)
          ->
          fun ?thisArg:(x8755 : any option) ->
            fun () ->
              Ojs.option_of_js Ojs.float_of_js
                (let x8763 = this_to_js Obj.magic x8761 in
                 Ojs.call (Ojs.get_prop_ascii x8763 "find") "apply"
                   [|x8763;((let x8756 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8756 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x8758 : Ojs.t) ->
                                          fun (x8759 : Ojs.t) ->
                                            fun (x8760 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x8754
                                                   ~value:(Ojs.float_of_js
                                                             x8758)
                                                   ~index:(Ojs.float_of_js
                                                             x8759)
                                                   ~obj:(t_of_js x8760))))|]);
                             (match x8755 with
                              | Some x8757 ->
                                  ignore
                                    (Ojs.call x8756 "push"
                                       [|(any_to_js x8757)|])
                              | None -> ());
                             x8756))|])
    let (findIndex :
      'tags this ->
        predicate:(value:float -> index:float -> obj:t -> bool) ->
          ?thisArg:any -> unit -> float)
      =
      fun (x8772 : 'tags this) ->
        fun ~predicate:(x8765 : value:float -> index:float -> obj:t -> bool)
          ->
          fun ?thisArg:(x8766 : any option) ->
            fun () ->
              Ojs.float_of_js
                (let x8774 = this_to_js Obj.magic x8772 in
                 Ojs.call (Ojs.get_prop_ascii x8774 "findIndex") "apply"
                   [|x8774;((let x8767 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8767 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x8769 : Ojs.t) ->
                                          fun (x8770 : Ojs.t) ->
                                            fun (x8771 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x8765
                                                   ~value:(Ojs.float_of_js
                                                             x8769)
                                                   ~index:(Ojs.float_of_js
                                                             x8770)
                                                   ~obj:(t_of_js x8771))))|]);
                             (match x8766 with
                              | Some x8768 ->
                                  ignore
                                    (Ojs.call x8767 "push"
                                       [|(any_to_js x8768)|])
                              | None -> ());
                             x8767))|])
    let (forEach :
      'tags this ->
        callbackfn:(value:float -> index:float -> array:t -> unit) ->
          ?thisArg:any -> unit -> unit)
      =
      fun (x8782 : 'tags this) ->
        fun
          ~callbackfn:(x8775 : value:float -> index:float -> array:t -> unit)
          ->
          fun ?thisArg:(x8776 : any option) ->
            fun () ->
              ignore
                (let x8784 = this_to_js Obj.magic x8782 in
                 Ojs.call (Ojs.get_prop_ascii x8784 "forEach") "apply"
                   [|x8784;((let x8777 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8777 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x8779 : Ojs.t) ->
                                          fun (x8780 : Ojs.t) ->
                                            fun (x8781 : Ojs.t) ->
                                              x8775
                                                ~value:(Ojs.float_of_js x8779)
                                                ~index:(Ojs.float_of_js x8780)
                                                ~array:(t_of_js x8781)))|]);
                             (match x8776 with
                              | Some x8778 ->
                                  ignore
                                    (Ojs.call x8777 "push"
                                       [|(any_to_js x8778)|])
                              | None -> ());
                             x8777))|])
    let (indexOf :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> float)
      =
      fun (x8789 : 'tags this) ->
        fun ~searchElement:(x8785 : float) ->
          fun ?fromIndex:(x8786 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x8791 = this_to_js Obj.magic x8789 in
                 Ojs.call (Ojs.get_prop_ascii x8791 "indexOf") "apply"
                   [|x8791;((let x8787 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8787 "push"
                                  [|(Ojs.float_to_js x8785)|]);
                             (match x8786 with
                              | Some x8788 ->
                                  ignore
                                    (Ojs.call x8787 "push"
                                       [|(Ojs.float_to_js x8788)|])
                              | None -> ());
                             x8787))|])
    let (join : 'tags this -> ?separator:string -> unit -> string) =
      fun (x8795 : 'tags this) ->
        fun ?separator:(x8792 : string option) ->
          fun () ->
            Ojs.string_of_js
              (let x8797 = this_to_js Obj.magic x8795 in
               Ojs.call (Ojs.get_prop_ascii x8797 "join") "apply"
                 [|x8797;((let x8793 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x8792 with
                            | Some x8794 ->
                                ignore
                                  (Ojs.call x8793 "push"
                                     [|(Ojs.string_to_js x8794)|])
                            | None -> ());
                           x8793))|])
    let (lastIndexOf :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> float)
      =
      fun (x8802 : 'tags this) ->
        fun ~searchElement:(x8798 : float) ->
          fun ?fromIndex:(x8799 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x8804 = this_to_js Obj.magic x8802 in
                 Ojs.call (Ojs.get_prop_ascii x8804 "lastIndexOf") "apply"
                   [|x8804;((let x8800 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8800 "push"
                                  [|(Ojs.float_to_js x8798)|]);
                             (match x8799 with
                              | Some x8801 ->
                                  ignore
                                    (Ojs.call x8800 "push"
                                       [|(Ojs.float_to_js x8801)|])
                              | None -> ());
                             x8800))|])
    let (get_length : 'tags this -> float) =
      fun (x8805 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x8805) "length")
    let (map :
      'tags this ->
        callbackfn:(value:float -> index:float -> array:t -> float) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x8814 : 'tags this) ->
        fun
          ~callbackfn:(x8807 :
                        value:float -> index:float -> array:t -> float)
          ->
          fun ?thisArg:(x8808 : any option) ->
            fun () ->
              t_of_js
                (let x8816 = this_to_js Obj.magic x8814 in
                 Ojs.call (Ojs.get_prop_ascii x8816 "map") "apply"
                   [|x8816;((let x8809 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8809 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x8811 : Ojs.t) ->
                                          fun (x8812 : Ojs.t) ->
                                            fun (x8813 : Ojs.t) ->
                                              Ojs.float_to_js
                                                (x8807
                                                   ~value:(Ojs.float_of_js
                                                             x8811)
                                                   ~index:(Ojs.float_of_js
                                                             x8812)
                                                   ~array:(t_of_js x8813))))|]);
                             (match x8808 with
                              | Some x8810 ->
                                  ignore
                                    (Ojs.call x8809 "push"
                                       [|(any_to_js x8810)|])
                              | None -> ());
                             x8809))|])
    let (reduce :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> float)
      =
      fun (x8822 : 'tags this) ->
        fun
          ~callbackfn:(x8817 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x8822) "reduce"
               [|(Ojs.fun_to_js 4
                    (fun (x8818 : Ojs.t) ->
                       fun (x8819 : Ojs.t) ->
                         fun (x8820 : Ojs.t) ->
                           fun (x8821 : Ojs.t) ->
                             Ojs.float_to_js
                               (x8817 ~previousValue:(Ojs.float_of_js x8818)
                                  ~currentValue:(Ojs.float_of_js x8819)
                                  ~currentIndex:(Ojs.float_of_js x8820)
                                  ~array:(t_of_js x8821))))|])
    let (reduce' :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> initialValue:float -> float)
      =
      fun (x8830 : 'tags this) ->
        fun
          ~callbackfn:(x8824 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          fun ~initialValue:(x8829 : float) ->
            Ojs.float_of_js
              (Ojs.call (this_to_js Obj.magic x8830) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x8825 : Ojs.t) ->
                         fun (x8826 : Ojs.t) ->
                           fun (x8827 : Ojs.t) ->
                             fun (x8828 : Ojs.t) ->
                               Ojs.float_to_js
                                 (x8824
                                    ~previousValue:(Ojs.float_of_js x8825)
                                    ~currentValue:(Ojs.float_of_js x8826)
                                    ~currentIndex:(Ojs.float_of_js x8827)
                                    ~array:(t_of_js x8828))));(Ojs.float_to_js
                                                                 x8829)|])
    let (reduce'' :
      'tags this ->
        callbackfn:(previousValue:'U ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x8838 : 'tags this) ->
        fun
          ~callbackfn:(x8832 :
                        previousValue:'U ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x8837 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic x8838) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x8833 : Ojs.t) ->
                         fun (x8834 : Ojs.t) ->
                           fun (x8835 : Ojs.t) ->
                             fun (x8836 : Ojs.t) ->
                               Obj.magic
                                 (x8832 ~previousValue:(Obj.magic x8833)
                                    ~currentValue:(Ojs.float_of_js x8834)
                                    ~currentIndex:(Ojs.float_of_js x8835)
                                    ~array:(t_of_js x8836))));(Obj.magic
                                                                 x8837)|])
    let (reduceRight :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> float)
      =
      fun (x8845 : 'tags this) ->
        fun
          ~callbackfn:(x8840 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x8845) "reduceRight"
               [|(Ojs.fun_to_js 4
                    (fun (x8841 : Ojs.t) ->
                       fun (x8842 : Ojs.t) ->
                         fun (x8843 : Ojs.t) ->
                           fun (x8844 : Ojs.t) ->
                             Ojs.float_to_js
                               (x8840 ~previousValue:(Ojs.float_of_js x8841)
                                  ~currentValue:(Ojs.float_of_js x8842)
                                  ~currentIndex:(Ojs.float_of_js x8843)
                                  ~array:(t_of_js x8844))))|])
    let (reduceRight' :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> initialValue:float -> float)
      =
      fun (x8853 : 'tags this) ->
        fun
          ~callbackfn:(x8847 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          fun ~initialValue:(x8852 : float) ->
            Ojs.float_of_js
              (Ojs.call (this_to_js Obj.magic x8853) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x8848 : Ojs.t) ->
                         fun (x8849 : Ojs.t) ->
                           fun (x8850 : Ojs.t) ->
                             fun (x8851 : Ojs.t) ->
                               Ojs.float_to_js
                                 (x8847
                                    ~previousValue:(Ojs.float_of_js x8848)
                                    ~currentValue:(Ojs.float_of_js x8849)
                                    ~currentIndex:(Ojs.float_of_js x8850)
                                    ~array:(t_of_js x8851))));(Ojs.float_to_js
                                                                 x8852)|])
    let (reduceRight'' :
      'tags this ->
        callbackfn:(previousValue:'U ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x8861 : 'tags this) ->
        fun
          ~callbackfn:(x8855 :
                        previousValue:'U ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x8860 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic x8861) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x8856 : Ojs.t) ->
                         fun (x8857 : Ojs.t) ->
                           fun (x8858 : Ojs.t) ->
                             fun (x8859 : Ojs.t) ->
                               Obj.magic
                                 (x8855 ~previousValue:(Obj.magic x8856)
                                    ~currentValue:(Ojs.float_of_js x8857)
                                    ~currentIndex:(Ojs.float_of_js x8858)
                                    ~array:(t_of_js x8859))));(Obj.magic
                                                                 x8860)|])
    let (reverse : 'tags this -> t) =
      fun (x8863 : 'tags this) ->
        t_of_js (Ojs.call (this_to_js Obj.magic x8863) "reverse" [||])
    let (set_ :
      'tags this -> array:float ArrayLike.t -> ?offset:float -> unit -> unit)
      =
      fun (x8870 : 'tags this) ->
        fun ~array:(x8865 : float ArrayLike.t) ->
          fun ?offset:(x8866 : float option) ->
            fun () ->
              ignore
                (let x8872 = this_to_js Obj.magic x8870 in
                 Ojs.call (Ojs.get_prop_ascii x8872 "set") "apply"
                   [|x8872;((let x8867 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8867 "push"
                                  [|(ArrayLike.t_to_js Ojs.float_to_js x8865)|]);
                             (match x8866 with
                              | Some x8868 ->
                                  ignore
                                    (Ojs.call x8867 "push"
                                       [|(Ojs.float_to_js x8868)|])
                              | None -> ());
                             x8867))|])
    let (slice : 'tags this -> ?start:float -> ?end_:float -> unit -> t) =
      fun (x8878 : 'tags this) ->
        fun ?start:(x8873 : float option) ->
          fun ?end_:(x8874 : float option) ->
            fun () ->
              t_of_js
                (let x8880 = this_to_js Obj.magic x8878 in
                 Ojs.call (Ojs.get_prop_ascii x8880 "slice") "apply"
                   [|x8880;((let x8875 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x8873 with
                              | Some x8877 ->
                                  ignore
                                    (Ojs.call x8875 "push"
                                       [|(Ojs.float_to_js x8877)|])
                              | None -> ());
                             (match x8874 with
                              | Some x8876 ->
                                  ignore
                                    (Ojs.call x8875 "push"
                                       [|(Ojs.float_to_js x8876)|])
                              | None -> ());
                             x8875))|])
    let (some :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x8888 : 'tags this) ->
        fun
          ~predicate:(x8881 :
                       value:float -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x8882 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x8890 = this_to_js Obj.magic x8888 in
                 Ojs.call (Ojs.get_prop_ascii x8890 "some") "apply"
                   [|x8890;((let x8883 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8883 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x8885 : Ojs.t) ->
                                          fun (x8886 : Ojs.t) ->
                                            fun (x8887 : Ojs.t) ->
                                              unknown_to_js
                                                (x8881
                                                   ~value:(Ojs.float_of_js
                                                             x8885)
                                                   ~index:(Ojs.float_of_js
                                                             x8886)
                                                   ~array:(t_of_js x8887))))|]);
                             (match x8882 with
                              | Some x8884 ->
                                  ignore
                                    (Ojs.call x8883 "push"
                                       [|(any_to_js x8884)|])
                              | None -> ());
                             x8883))|])
    let (sort :
      'tags this ->
        ?compareFn:(a:float -> b:float -> float) -> unit -> 'tags this)
      =
      fun (x8896 : 'tags this) ->
        fun ?compareFn:(x8891 : (a:float -> b:float -> float) option) ->
          fun () ->
            this_of_js Obj.magic
              (let x8898 = this_to_js Obj.magic x8896 in
               Ojs.call (Ojs.get_prop_ascii x8898 "sort") "apply"
                 [|x8898;((let x8892 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x8891 with
                            | Some x8893 ->
                                ignore
                                  (Ojs.call x8892 "push"
                                     [|(Ojs.fun_to_js 2
                                          (fun (x8894 : Ojs.t) ->
                                             fun (x8895 : Ojs.t) ->
                                               Ojs.float_to_js
                                                 (x8893
                                                    ~a:(Ojs.float_of_js x8894)
                                                    ~b:(Ojs.float_of_js x8895))))|])
                            | None -> ());
                           x8892))|])
    let (subarray : 'tags this -> ?begin_:float -> ?end_:float -> unit -> t)
      =
      fun (x8905 : 'tags this) ->
        fun ?begin_:(x8900 : float option) ->
          fun ?end_:(x8901 : float option) ->
            fun () ->
              t_of_js
                (let x8907 = this_to_js Obj.magic x8905 in
                 Ojs.call (Ojs.get_prop_ascii x8907 "subarray") "apply"
                   [|x8907;((let x8902 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x8900 with
                              | Some x8904 ->
                                  ignore
                                    (Ojs.call x8902 "push"
                                       [|(Ojs.float_to_js x8904)|])
                              | None -> ());
                             (match x8901 with
                              | Some x8903 ->
                                  ignore
                                    (Ojs.call x8902 "push"
                                       [|(Ojs.float_to_js x8903)|])
                              | None -> ());
                             x8902))|])
    let (toLocaleString : 'tags this -> string) =
      fun (x8908 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x8908) "toLocaleString" [||])
    let (toString : 'tags this -> string) =
      fun (x8910 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x8910) "toString" [||])
    let (valueOf : 'tags this -> t) =
      fun (x8912 : 'tags this) ->
        t_of_js (Ojs.call (this_to_js Obj.magic x8912) "valueOf" [||])
    let (get : 'tags this -> float -> float) =
      fun (x8914 : 'tags this) ->
        fun (x8916 : float) ->
          Ojs.float_of_js
            (Ojs.get_prop (this_to_js Obj.magic x8914)
               (Ojs.float_to_js x8916))
    let (set : 'tags this -> float -> float -> unit) =
      fun (x8917 : 'tags this) ->
        fun (x8919 : float) ->
          fun (x8920 : float) ->
            Ojs.set_prop (this_to_js Obj.magic x8917) (Ojs.float_to_js x8919)
              (Ojs.float_to_js x8920)
    let (create : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Int16Array") [||])
    let (create' : float Iterable.t -> t) =
      fun (x8921 : float Iterable.t) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Int16Array")
             [|(Iterable.t_to_js Ojs.float_to_js x8921)|])
    let (from :
      arrayLike:float Iterable.t ->
        ?mapfn:(v:float -> k:float -> float) -> ?thisArg:any -> unit -> t)
      =
      fun ~arrayLike:(x8923 : float Iterable.t) ->
        fun ?mapfn:(x8924 : (v:float -> k:float -> float) option) ->
          fun ?thisArg:(x8925 : any option) ->
            fun () ->
              t_of_js
                (let x8932 = Ojs.get_prop_ascii Ojs.global "Int16Array" in
                 Ojs.call (Ojs.get_prop_ascii x8932 "from") "apply"
                   [|x8932;((let x8926 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8926 "push"
                                  [|(Iterable.t_to_js Ojs.float_to_js x8923)|]);
                             (match x8924 with
                              | Some x8928 ->
                                  ignore
                                    (Ojs.call x8926 "push"
                                       [|(Ojs.fun_to_js 2
                                            (fun (x8929 : Ojs.t) ->
                                               fun (x8930 : Ojs.t) ->
                                                 Ojs.float_to_js
                                                   (x8928
                                                      ~v:(Ojs.float_of_js
                                                            x8929)
                                                      ~k:(Ojs.float_of_js
                                                            x8930))))|])
                              | None -> ());
                             (match x8925 with
                              | Some x8927 ->
                                  ignore
                                    (Ojs.call x8926 "push"
                                       [|(any_to_js x8927)|])
                              | None -> ());
                             x8926))|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Int16Array")
             "prototype")
    let (create'' : float -> t) =
      fun (x8933 : float) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Int16Array")
             [|(Ojs.float_to_js x8933)|])
    let (create''' :
      [ `U1 of float ArrayLike.t  | `U2 of ArrayBufferLike.t ] -> t) =
      fun (x8934 : [ `U1 of float ArrayLike.t  | `U2 of ArrayBufferLike.t ])
        ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Int16Array")
             [|((match x8934 with
                 | `U1 x8935 -> ArrayLike.t_to_js Ojs.float_to_js x8935
                 | `U2 x8937 -> ArrayBufferLike.t_to_js x8937))|])
    let (create'''' :
      buffer:ArrayBufferLike.t ->
        ?byteOffset:float -> ?length:float -> unit -> t)
      =
      fun ~buffer:(x8938 : ArrayBufferLike.t) ->
        fun ?byteOffset:(x8939 : float option) ->
          fun ?length:(x8940 : float option) ->
            fun () ->
              t_of_js
                (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "Int16Array")
                   (let x8941 =
                      Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                        [||] in
                    ignore
                      (Ojs.call x8941 "push"
                         [|(ArrayBufferLike.t_to_js x8938)|]);
                    (match x8939 with
                     | Some x8943 ->
                         ignore
                           (Ojs.call x8941 "push" [|(Ojs.float_to_js x8943)|])
                     | None -> ());
                    (match x8940 with
                     | Some x8942 ->
                         ignore
                           (Ojs.call x8941 "push" [|(Ojs.float_to_js x8942)|])
                     | None -> ());
                    x8941))
    let (bytes_per_element : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Int16Array")
             "BYTES_PER_ELEMENT")
    let (of_ : float list -> t) =
      fun (x8944 : float list) ->
        t_of_js
          (let x8947 = Ojs.get_prop_ascii Ojs.global "Int16Array" in
           Ojs.call (Ojs.get_prop_ascii x8947 "of") "apply"
             [|x8947;((let x8945 =
                         Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                           [||] in
                       List.iter
                         (fun (x8946 : float) ->
                            ignore
                              (Ojs.call x8945 "push"
                                 [|(Ojs.float_to_js x8946)|])) x8944;
                       x8945))|])
    let (from' : float ArrayLike.t -> t) =
      fun (x8948 : float ArrayLike.t) ->
        t_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Int16Array") "from"
             [|(ArrayLike.t_to_js Ojs.float_to_js x8948)|])
    let (from'' :
      arrayLike:'T ArrayLike.t ->
        mapfn:(v:'T -> k:float -> float) -> ?thisArg:any -> unit -> t)
      =
      fun ~arrayLike:(x8950 : 'T ArrayLike.t) ->
        fun ~mapfn:(x8951 : v:'T -> k:float -> float) ->
          fun ?thisArg:(x8952 : any option) ->
            fun () ->
              t_of_js
                (let x8958 = Ojs.get_prop_ascii Ojs.global "Int16Array" in
                 Ojs.call (Ojs.get_prop_ascii x8958 "from") "apply"
                   [|x8958;((let x8953 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8953 "push"
                                  [|(ArrayLike.t_to_js Obj.magic x8950)|]);
                             ignore
                               (Ojs.call x8953 "push"
                                  [|(Ojs.fun_to_js 2
                                       (fun (x8955 : Ojs.t) ->
                                          fun (x8956 : Ojs.t) ->
                                            Ojs.float_to_js
                                              (x8951 ~v:(Obj.magic x8955)
                                                 ~k:(Ojs.float_of_js x8956))))|]);
                             (match x8952 with
                              | Some x8954 ->
                                  ignore
                                    (Ojs.call x8953 "push"
                                       [|(any_to_js x8954)|])
                              | None -> ());
                             x8953))|])
    let cast_from = Obj.magic
  end
module BigUint64Array =
  struct
    type t = [ `BigUint64Array ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type tags = [ `BigUint64Array ]
    type 'tags this = 'tags intf constraint 'tags = [> `BigUint64Array ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x8961 : Ojs.t) -> intf_of_js __tags_of_js x8961
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x8959 : __tags intf) -> intf_to_js __tags_to_js x8959
    let (findLast :
      'tags this ->
        predicate:(value:bigint -> index:float -> array:t -> bool) ->
          ?thisArg:any -> unit -> 'S option)
      =
      fun (x8970 : 'tags this) ->
        fun
          ~predicate:(x8963 : value:bigint -> index:float -> array:t -> bool)
          ->
          fun ?thisArg:(x8964 : any option) ->
            fun () ->
              Ojs.option_of_js Obj.magic
                (let x8972 = this_to_js Obj.magic x8970 in
                 Ojs.call (Ojs.get_prop_ascii x8972 "findLast") "apply"
                   [|x8972;((let x8965 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8965 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x8967 : Ojs.t) ->
                                          fun (x8968 : Ojs.t) ->
                                            fun (x8969 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x8963
                                                   ~value:(bigint_of_js x8967)
                                                   ~index:(Ojs.float_of_js
                                                             x8968)
                                                   ~array:(t_of_js x8969))))|]);
                             (match x8964 with
                              | Some x8966 ->
                                  ignore
                                    (Ojs.call x8965 "push"
                                       [|(any_to_js x8966)|])
                              | None -> ());
                             x8965))|])
    let (findLast' :
      'tags this ->
        predicate:(value:bigint -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> bigint option)
      =
      fun (x8981 : 'tags this) ->
        fun
          ~predicate:(x8974 :
                       value:bigint -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x8975 : any option) ->
            fun () ->
              Ojs.option_of_js bigint_of_js
                (let x8983 = this_to_js Obj.magic x8981 in
                 Ojs.call (Ojs.get_prop_ascii x8983 "findLast") "apply"
                   [|x8983;((let x8976 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8976 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x8978 : Ojs.t) ->
                                          fun (x8979 : Ojs.t) ->
                                            fun (x8980 : Ojs.t) ->
                                              unknown_to_js
                                                (x8974
                                                   ~value:(bigint_of_js x8978)
                                                   ~index:(Ojs.float_of_js
                                                             x8979)
                                                   ~array:(t_of_js x8980))))|]);
                             (match x8975 with
                              | Some x8977 ->
                                  ignore
                                    (Ojs.call x8976 "push"
                                       [|(any_to_js x8977)|])
                              | None -> ());
                             x8976))|])
    let (findLastIndex :
      'tags this ->
        predicate:(value:bigint -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> float)
      =
      fun (x8992 : 'tags this) ->
        fun
          ~predicate:(x8985 :
                       value:bigint -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x8986 : any option) ->
            fun () ->
              Ojs.float_of_js
                (let x8994 = this_to_js Obj.magic x8992 in
                 Ojs.call (Ojs.get_prop_ascii x8994 "findLastIndex") "apply"
                   [|x8994;((let x8987 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8987 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x8989 : Ojs.t) ->
                                          fun (x8990 : Ojs.t) ->
                                            fun (x8991 : Ojs.t) ->
                                              unknown_to_js
                                                (x8985
                                                   ~value:(bigint_of_js x8989)
                                                   ~index:(Ojs.float_of_js
                                                             x8990)
                                                   ~array:(t_of_js x8991))))|]);
                             (match x8986 with
                              | Some x8988 ->
                                  ignore
                                    (Ojs.call x8987 "push"
                                       [|(any_to_js x8988)|])
                              | None -> ());
                             x8987))|])
    let (at : 'tags this -> index:float -> bigint option) =
      fun (x8996 : 'tags this) ->
        fun ~index:(x8995 : float) ->
          Ojs.option_of_js bigint_of_js
            (Ojs.call (this_to_js Obj.magic x8996) "at"
               [|(Ojs.float_to_js x8995)|])
    let (get_BYTES_PER_ELEMENT : 'tags this -> float) =
      fun (x8999 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x8999)
             "BYTES_PER_ELEMENT")
    let (get_buffer : 'tags this -> ArrayBufferLike.t) =
      fun (x9001 : 'tags this) ->
        ArrayBufferLike.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x9001) "buffer")
    let (get_byteLength : 'tags this -> float) =
      fun (x9003 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x9003) "byteLength")
    let (get_byteOffset : 'tags this -> float) =
      fun (x9005 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x9005) "byteOffset")
    let (copyWithin :
      'tags this ->
        target:float -> ?start:float -> ?end_:float -> unit -> 'tags this)
      =
      fun (x9013 : 'tags this) ->
        fun ~target:(x9007 : float) ->
          fun ?start:(x9008 : float option) ->
            fun ?end_:(x9009 : float option) ->
              fun () ->
                this_of_js Obj.magic
                  (let x9015 = this_to_js Obj.magic x9013 in
                   Ojs.call (Ojs.get_prop_ascii x9015 "copyWithin") "apply"
                     [|x9015;((let x9010 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x9010 "push"
                                    [|(Ojs.float_to_js x9007)|]);
                               (match x9008 with
                                | Some x9012 ->
                                    ignore
                                      (Ojs.call x9010 "push"
                                         [|(Ojs.float_to_js x9012)|])
                                | None -> ());
                               (match x9009 with
                                | Some x9011 ->
                                    ignore
                                      (Ojs.call x9010 "push"
                                         [|(Ojs.float_to_js x9011)|])
                                | None -> ());
                               x9010))|])
    let (entries : 'tags this -> (float * bigint) IterableIterator.t) =
      fun (x9017 : 'tags this) ->
        IterableIterator.t_of_js
          (fun (x9019 : Ojs.t) ->
             let x9020 = x9019 in
             ((Ojs.float_of_js (Ojs.array_get x9020 0)),
               (bigint_of_js (Ojs.array_get x9020 1))))
          (Ojs.call (this_to_js Obj.magic x9017) "entries" [||])
    let (every :
      'tags this ->
        predicate:(value:bigint -> index:float -> array:t -> bool) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x9028 : 'tags this) ->
        fun
          ~predicate:(x9021 : value:bigint -> index:float -> array:t -> bool)
          ->
          fun ?thisArg:(x9022 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x9030 = this_to_js Obj.magic x9028 in
                 Ojs.call (Ojs.get_prop_ascii x9030 "every") "apply"
                   [|x9030;((let x9023 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x9023 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x9025 : Ojs.t) ->
                                          fun (x9026 : Ojs.t) ->
                                            fun (x9027 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x9021
                                                   ~value:(bigint_of_js x9025)
                                                   ~index:(Ojs.float_of_js
                                                             x9026)
                                                   ~array:(t_of_js x9027))))|]);
                             (match x9022 with
                              | Some x9024 ->
                                  ignore
                                    (Ojs.call x9023 "push"
                                       [|(any_to_js x9024)|])
                              | None -> ());
                             x9023))|])
    let (fill :
      'tags this ->
        value:bigint -> ?start:float -> ?end_:float -> unit -> 'tags this)
      =
      fun (x9037 : 'tags this) ->
        fun ~value:(x9031 : bigint) ->
          fun ?start:(x9032 : float option) ->
            fun ?end_:(x9033 : float option) ->
              fun () ->
                this_of_js Obj.magic
                  (let x9039 = this_to_js Obj.magic x9037 in
                   Ojs.call (Ojs.get_prop_ascii x9039 "fill") "apply"
                     [|x9039;((let x9034 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x9034 "push"
                                    [|(bigint_to_js x9031)|]);
                               (match x9032 with
                                | Some x9036 ->
                                    ignore
                                      (Ojs.call x9034 "push"
                                         [|(Ojs.float_to_js x9036)|])
                                | None -> ());
                               (match x9033 with
                                | Some x9035 ->
                                    ignore
                                      (Ojs.call x9034 "push"
                                         [|(Ojs.float_to_js x9035)|])
                                | None -> ());
                               x9034))|])
    let (filter :
      'tags this ->
        predicate:(value:bigint -> index:float -> array:t -> any) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x9048 : 'tags this) ->
        fun
          ~predicate:(x9041 : value:bigint -> index:float -> array:t -> any)
          ->
          fun ?thisArg:(x9042 : any option) ->
            fun () ->
              t_of_js
                (let x9050 = this_to_js Obj.magic x9048 in
                 Ojs.call (Ojs.get_prop_ascii x9050 "filter") "apply"
                   [|x9050;((let x9043 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x9043 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x9045 : Ojs.t) ->
                                          fun (x9046 : Ojs.t) ->
                                            fun (x9047 : Ojs.t) ->
                                              any_to_js
                                                (x9041
                                                   ~value:(bigint_of_js x9045)
                                                   ~index:(Ojs.float_of_js
                                                             x9046)
                                                   ~array:(t_of_js x9047))))|]);
                             (match x9042 with
                              | Some x9044 ->
                                  ignore
                                    (Ojs.call x9043 "push"
                                       [|(any_to_js x9044)|])
                              | None -> ());
                             x9043))|])
    let (find :
      'tags this ->
        predicate:(value:bigint -> index:float -> array:t -> bool) ->
          ?thisArg:any -> unit -> bigint option)
      =
      fun (x9058 : 'tags this) ->
        fun
          ~predicate:(x9051 : value:bigint -> index:float -> array:t -> bool)
          ->
          fun ?thisArg:(x9052 : any option) ->
            fun () ->
              Ojs.option_of_js bigint_of_js
                (let x9060 = this_to_js Obj.magic x9058 in
                 Ojs.call (Ojs.get_prop_ascii x9060 "find") "apply"
                   [|x9060;((let x9053 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x9053 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x9055 : Ojs.t) ->
                                          fun (x9056 : Ojs.t) ->
                                            fun (x9057 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x9051
                                                   ~value:(bigint_of_js x9055)
                                                   ~index:(Ojs.float_of_js
                                                             x9056)
                                                   ~array:(t_of_js x9057))))|]);
                             (match x9052 with
                              | Some x9054 ->
                                  ignore
                                    (Ojs.call x9053 "push"
                                       [|(any_to_js x9054)|])
                              | None -> ());
                             x9053))|])
    let (findIndex :
      'tags this ->
        predicate:(value:bigint -> index:float -> array:t -> bool) ->
          ?thisArg:any -> unit -> float)
      =
      fun (x9069 : 'tags this) ->
        fun
          ~predicate:(x9062 : value:bigint -> index:float -> array:t -> bool)
          ->
          fun ?thisArg:(x9063 : any option) ->
            fun () ->
              Ojs.float_of_js
                (let x9071 = this_to_js Obj.magic x9069 in
                 Ojs.call (Ojs.get_prop_ascii x9071 "findIndex") "apply"
                   [|x9071;((let x9064 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x9064 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x9066 : Ojs.t) ->
                                          fun (x9067 : Ojs.t) ->
                                            fun (x9068 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x9062
                                                   ~value:(bigint_of_js x9066)
                                                   ~index:(Ojs.float_of_js
                                                             x9067)
                                                   ~array:(t_of_js x9068))))|]);
                             (match x9063 with
                              | Some x9065 ->
                                  ignore
                                    (Ojs.call x9064 "push"
                                       [|(any_to_js x9065)|])
                              | None -> ());
                             x9064))|])
    let (forEach :
      'tags this ->
        callbackfn:(value:bigint -> index:float -> array:t -> unit) ->
          ?thisArg:any -> unit -> unit)
      =
      fun (x9079 : 'tags this) ->
        fun
          ~callbackfn:(x9072 :
                        value:bigint -> index:float -> array:t -> unit)
          ->
          fun ?thisArg:(x9073 : any option) ->
            fun () ->
              ignore
                (let x9081 = this_to_js Obj.magic x9079 in
                 Ojs.call (Ojs.get_prop_ascii x9081 "forEach") "apply"
                   [|x9081;((let x9074 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x9074 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x9076 : Ojs.t) ->
                                          fun (x9077 : Ojs.t) ->
                                            fun (x9078 : Ojs.t) ->
                                              x9072
                                                ~value:(bigint_of_js x9076)
                                                ~index:(Ojs.float_of_js x9077)
                                                ~array:(t_of_js x9078)))|]);
                             (match x9073 with
                              | Some x9075 ->
                                  ignore
                                    (Ojs.call x9074 "push"
                                       [|(any_to_js x9075)|])
                              | None -> ());
                             x9074))|])
    let (includes :
      'tags this -> searchElement:bigint -> ?fromIndex:float -> unit -> bool)
      =
      fun (x9086 : 'tags this) ->
        fun ~searchElement:(x9082 : bigint) ->
          fun ?fromIndex:(x9083 : float option) ->
            fun () ->
              Ojs.bool_of_js
                (let x9088 = this_to_js Obj.magic x9086 in
                 Ojs.call (Ojs.get_prop_ascii x9088 "includes") "apply"
                   [|x9088;((let x9084 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x9084 "push"
                                  [|(bigint_to_js x9082)|]);
                             (match x9083 with
                              | Some x9085 ->
                                  ignore
                                    (Ojs.call x9084 "push"
                                       [|(Ojs.float_to_js x9085)|])
                              | None -> ());
                             x9084))|])
    let (indexOf :
      'tags this -> searchElement:bigint -> ?fromIndex:float -> unit -> float)
      =
      fun (x9093 : 'tags this) ->
        fun ~searchElement:(x9089 : bigint) ->
          fun ?fromIndex:(x9090 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x9095 = this_to_js Obj.magic x9093 in
                 Ojs.call (Ojs.get_prop_ascii x9095 "indexOf") "apply"
                   [|x9095;((let x9091 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x9091 "push"
                                  [|(bigint_to_js x9089)|]);
                             (match x9090 with
                              | Some x9092 ->
                                  ignore
                                    (Ojs.call x9091 "push"
                                       [|(Ojs.float_to_js x9092)|])
                              | None -> ());
                             x9091))|])
    let (join : 'tags this -> ?separator:string -> unit -> string) =
      fun (x9099 : 'tags this) ->
        fun ?separator:(x9096 : string option) ->
          fun () ->
            Ojs.string_of_js
              (let x9101 = this_to_js Obj.magic x9099 in
               Ojs.call (Ojs.get_prop_ascii x9101 "join") "apply"
                 [|x9101;((let x9097 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x9096 with
                            | Some x9098 ->
                                ignore
                                  (Ojs.call x9097 "push"
                                     [|(Ojs.string_to_js x9098)|])
                            | None -> ());
                           x9097))|])
    let (keys : 'tags this -> float IterableIterator.t) =
      fun (x9102 : 'tags this) ->
        IterableIterator.t_of_js Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x9102) "keys" [||])
    let (lastIndexOf :
      'tags this -> searchElement:bigint -> ?fromIndex:float -> unit -> float)
      =
      fun (x9109 : 'tags this) ->
        fun ~searchElement:(x9105 : bigint) ->
          fun ?fromIndex:(x9106 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x9111 = this_to_js Obj.magic x9109 in
                 Ojs.call (Ojs.get_prop_ascii x9111 "lastIndexOf") "apply"
                   [|x9111;((let x9107 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x9107 "push"
                                  [|(bigint_to_js x9105)|]);
                             (match x9106 with
                              | Some x9108 ->
                                  ignore
                                    (Ojs.call x9107 "push"
                                       [|(Ojs.float_to_js x9108)|])
                              | None -> ());
                             x9107))|])
    let (get_length : 'tags this -> float) =
      fun (x9112 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x9112) "length")
    let (map :
      'tags this ->
        callbackfn:(value:bigint -> index:float -> array:t -> bigint) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x9121 : 'tags this) ->
        fun
          ~callbackfn:(x9114 :
                        value:bigint -> index:float -> array:t -> bigint)
          ->
          fun ?thisArg:(x9115 : any option) ->
            fun () ->
              t_of_js
                (let x9123 = this_to_js Obj.magic x9121 in
                 Ojs.call (Ojs.get_prop_ascii x9123 "map") "apply"
                   [|x9123;((let x9116 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x9116 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x9118 : Ojs.t) ->
                                          fun (x9119 : Ojs.t) ->
                                            fun (x9120 : Ojs.t) ->
                                              bigint_to_js
                                                (x9114
                                                   ~value:(bigint_of_js x9118)
                                                   ~index:(Ojs.float_of_js
                                                             x9119)
                                                   ~array:(t_of_js x9120))))|]);
                             (match x9115 with
                              | Some x9117 ->
                                  ignore
                                    (Ojs.call x9116 "push"
                                       [|(any_to_js x9117)|])
                              | None -> ());
                             x9116))|])
    let (reduce :
      'tags this ->
        callbackfn:(previousValue:bigint ->
                      currentValue:bigint ->
                        currentIndex:float -> array:t -> bigint)
          -> bigint)
      =
      fun (x9129 : 'tags this) ->
        fun
          ~callbackfn:(x9124 :
                        previousValue:bigint ->
                          currentValue:bigint ->
                            currentIndex:float -> array:t -> bigint)
          ->
          bigint_of_js
            (Ojs.call (this_to_js Obj.magic x9129) "reduce"
               [|(Ojs.fun_to_js 4
                    (fun (x9125 : Ojs.t) ->
                       fun (x9126 : Ojs.t) ->
                         fun (x9127 : Ojs.t) ->
                           fun (x9128 : Ojs.t) ->
                             bigint_to_js
                               (x9124 ~previousValue:(bigint_of_js x9125)
                                  ~currentValue:(bigint_of_js x9126)
                                  ~currentIndex:(Ojs.float_of_js x9127)
                                  ~array:(t_of_js x9128))))|])
    let (reduce' :
      'tags this ->
        callbackfn:(previousValue:'U ->
                      currentValue:bigint ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x9137 : 'tags this) ->
        fun
          ~callbackfn:(x9131 :
                        previousValue:'U ->
                          currentValue:bigint ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x9136 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic x9137) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x9132 : Ojs.t) ->
                         fun (x9133 : Ojs.t) ->
                           fun (x9134 : Ojs.t) ->
                             fun (x9135 : Ojs.t) ->
                               Obj.magic
                                 (x9131 ~previousValue:(Obj.magic x9132)
                                    ~currentValue:(bigint_of_js x9133)
                                    ~currentIndex:(Ojs.float_of_js x9134)
                                    ~array:(t_of_js x9135))));(Obj.magic
                                                                 x9136)|])
    let (reduceRight :
      'tags this ->
        callbackfn:(previousValue:bigint ->
                      currentValue:bigint ->
                        currentIndex:float -> array:t -> bigint)
          -> bigint)
      =
      fun (x9144 : 'tags this) ->
        fun
          ~callbackfn:(x9139 :
                        previousValue:bigint ->
                          currentValue:bigint ->
                            currentIndex:float -> array:t -> bigint)
          ->
          bigint_of_js
            (Ojs.call (this_to_js Obj.magic x9144) "reduceRight"
               [|(Ojs.fun_to_js 4
                    (fun (x9140 : Ojs.t) ->
                       fun (x9141 : Ojs.t) ->
                         fun (x9142 : Ojs.t) ->
                           fun (x9143 : Ojs.t) ->
                             bigint_to_js
                               (x9139 ~previousValue:(bigint_of_js x9140)
                                  ~currentValue:(bigint_of_js x9141)
                                  ~currentIndex:(Ojs.float_of_js x9142)
                                  ~array:(t_of_js x9143))))|])
    let (reduceRight' :
      'tags this ->
        callbackfn:(previousValue:'U ->
                      currentValue:bigint ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x9152 : 'tags this) ->
        fun
          ~callbackfn:(x9146 :
                        previousValue:'U ->
                          currentValue:bigint ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x9151 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic x9152) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x9147 : Ojs.t) ->
                         fun (x9148 : Ojs.t) ->
                           fun (x9149 : Ojs.t) ->
                             fun (x9150 : Ojs.t) ->
                               Obj.magic
                                 (x9146 ~previousValue:(Obj.magic x9147)
                                    ~currentValue:(bigint_of_js x9148)
                                    ~currentIndex:(Ojs.float_of_js x9149)
                                    ~array:(t_of_js x9150))));(Obj.magic
                                                                 x9151)|])
    let (reverse : 'tags this -> 'tags this) =
      fun (x9154 : 'tags this) ->
        this_of_js Obj.magic
          (Ojs.call (this_to_js Obj.magic x9154) "reverse" [||])
    let (set_ :
      'tags this -> array:bigint ArrayLike.t -> ?offset:float -> unit -> unit)
      =
      fun (x9162 : 'tags this) ->
        fun ~array:(x9157 : bigint ArrayLike.t) ->
          fun ?offset:(x9158 : float option) ->
            fun () ->
              ignore
                (let x9164 = this_to_js Obj.magic x9162 in
                 Ojs.call (Ojs.get_prop_ascii x9164 "set") "apply"
                   [|x9164;((let x9159 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x9159 "push"
                                  [|(ArrayLike.t_to_js bigint_to_js x9157)|]);
                             (match x9158 with
                              | Some x9160 ->
                                  ignore
                                    (Ojs.call x9159 "push"
                                       [|(Ojs.float_to_js x9160)|])
                              | None -> ());
                             x9159))|])
    let (slice : 'tags this -> ?start:float -> ?end_:float -> unit -> t) =
      fun (x9170 : 'tags this) ->
        fun ?start:(x9165 : float option) ->
          fun ?end_:(x9166 : float option) ->
            fun () ->
              t_of_js
                (let x9172 = this_to_js Obj.magic x9170 in
                 Ojs.call (Ojs.get_prop_ascii x9172 "slice") "apply"
                   [|x9172;((let x9167 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x9165 with
                              | Some x9169 ->
                                  ignore
                                    (Ojs.call x9167 "push"
                                       [|(Ojs.float_to_js x9169)|])
                              | None -> ());
                             (match x9166 with
                              | Some x9168 ->
                                  ignore
                                    (Ojs.call x9167 "push"
                                       [|(Ojs.float_to_js x9168)|])
                              | None -> ());
                             x9167))|])
    let (some :
      'tags this ->
        predicate:(value:bigint -> index:float -> array:t -> bool) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x9180 : 'tags this) ->
        fun
          ~predicate:(x9173 : value:bigint -> index:float -> array:t -> bool)
          ->
          fun ?thisArg:(x9174 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x9182 = this_to_js Obj.magic x9180 in
                 Ojs.call (Ojs.get_prop_ascii x9182 "some") "apply"
                   [|x9182;((let x9175 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x9175 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x9177 : Ojs.t) ->
                                          fun (x9178 : Ojs.t) ->
                                            fun (x9179 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x9173
                                                   ~value:(bigint_of_js x9177)
                                                   ~index:(Ojs.float_of_js
                                                             x9178)
                                                   ~array:(t_of_js x9179))))|]);
                             (match x9174 with
                              | Some x9176 ->
                                  ignore
                                    (Ojs.call x9175 "push"
                                       [|(any_to_js x9176)|])
                              | None -> ());
                             x9175))|])
    let (sort :
      'tags this ->
        ?compareFn:(a:bigint -> b:bigint -> [ `U1 of float  | `U2 of bigint ])
          -> unit -> 'tags this)
      =
      fun (x9190 : 'tags this) ->
        fun
          ?compareFn:(x9183 :
                       (a:bigint ->
                          b:bigint -> [ `U1 of float  | `U2 of bigint ])
                         option)
          ->
          fun () ->
            this_of_js Obj.magic
              (let x9192 = this_to_js Obj.magic x9190 in
               Ojs.call (Ojs.get_prop_ascii x9192 "sort") "apply"
                 [|x9192;((let x9184 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x9183 with
                            | Some x9185 ->
                                ignore
                                  (Ojs.call x9184 "push"
                                     [|(Ojs.fun_to_js 2
                                          (fun (x9186 : Ojs.t) ->
                                             fun (x9187 : Ojs.t) ->
                                               match x9185
                                                       ~a:(bigint_of_js x9186)
                                                       ~b:(bigint_of_js x9187)
                                               with
                                               | `U1 x9188 ->
                                                   Ojs.float_to_js x9188
                                               | `U2 x9189 ->
                                                   bigint_to_js x9189))|])
                            | None -> ());
                           x9184))|])
    let (subarray : 'tags this -> ?begin_:float -> ?end_:float -> unit -> t)
      =
      fun (x9199 : 'tags this) ->
        fun ?begin_:(x9194 : float option) ->
          fun ?end_:(x9195 : float option) ->
            fun () ->
              t_of_js
                (let x9201 = this_to_js Obj.magic x9199 in
                 Ojs.call (Ojs.get_prop_ascii x9201 "subarray") "apply"
                   [|x9201;((let x9196 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x9194 with
                              | Some x9198 ->
                                  ignore
                                    (Ojs.call x9196 "push"
                                       [|(Ojs.float_to_js x9198)|])
                              | None -> ());
                             (match x9195 with
                              | Some x9197 ->
                                  ignore
                                    (Ojs.call x9196 "push"
                                       [|(Ojs.float_to_js x9197)|])
                              | None -> ());
                             x9196))|])
    let (toLocaleString : 'tags this -> string) =
      fun (x9202 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x9202) "toLocaleString" [||])
    let (toString : 'tags this -> string) =
      fun (x9204 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x9204) "toString" [||])
    let (valueOf : 'tags this -> t) =
      fun (x9206 : 'tags this) ->
        t_of_js (Ojs.call (this_to_js Obj.magic x9206) "valueOf" [||])
    let (values : 'tags this -> bigint IterableIterator.t) =
      fun (x9208 : 'tags this) ->
        IterableIterator.t_of_js bigint_of_js
          (Ojs.call (this_to_js Obj.magic x9208) "values" [||])
    let (get : 'tags this -> float -> bigint) =
      fun (x9211 : 'tags this) ->
        fun (x9213 : float) ->
          bigint_of_js
            (Ojs.get_prop (this_to_js Obj.magic x9211)
               (Ojs.float_to_js x9213))
    let (set : 'tags this -> float -> bigint -> unit) =
      fun (x9214 : 'tags this) ->
        fun (x9216 : float) ->
          fun (x9217 : bigint) ->
            Ojs.set_prop (this_to_js Obj.magic x9214) (Ojs.float_to_js x9216)
              (bigint_to_js x9217)
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "BigUint64Array") "prototype")
    let (create : ?length:float -> unit -> t) =
      fun ?length:(x9218 : float option) ->
        fun () ->
          t_of_js
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "BigUint64Array")
               (let x9219 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x9218 with
                 | Some x9220 ->
                     ignore
                       (Ojs.call x9219 "push" [|(Ojs.float_to_js x9220)|])
                 | None -> ());
                x9219))
    let (create' : bigint Iterable.t -> t) =
      fun (x9221 : bigint Iterable.t) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "BigUint64Array")
             [|(Iterable.t_to_js bigint_to_js x9221)|])
    let (create'' :
      buffer:ArrayBufferLike.t ->
        ?byteOffset:float -> ?length:float -> unit -> t)
      =
      fun ~buffer:(x9223 : ArrayBufferLike.t) ->
        fun ?byteOffset:(x9224 : float option) ->
          fun ?length:(x9225 : float option) ->
            fun () ->
              t_of_js
                (Ojs.new_obj_arr
                   (Ojs.get_prop_ascii Ojs.global "BigUint64Array")
                   (let x9226 =
                      Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                        [||] in
                    ignore
                      (Ojs.call x9226 "push"
                         [|(ArrayBufferLike.t_to_js x9223)|]);
                    (match x9224 with
                     | Some x9228 ->
                         ignore
                           (Ojs.call x9226 "push" [|(Ojs.float_to_js x9228)|])
                     | None -> ());
                    (match x9225 with
                     | Some x9227 ->
                         ignore
                           (Ojs.call x9226 "push" [|(Ojs.float_to_js x9227)|])
                     | None -> ());
                    x9226))
    let (bytes_per_element : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "BigUint64Array")
             "BYTES_PER_ELEMENT")
    let (of_ : bigint list -> t) =
      fun (x9229 : bigint list) ->
        t_of_js
          (let x9232 = Ojs.get_prop_ascii Ojs.global "BigUint64Array" in
           Ojs.call (Ojs.get_prop_ascii x9232 "of") "apply"
             [|x9232;((let x9230 =
                         Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                           [||] in
                       List.iter
                         (fun (x9231 : bigint) ->
                            ignore
                              (Ojs.call x9230 "push" [|(bigint_to_js x9231)|]))
                         x9229;
                       x9230))|])
    let (from : bigint ArrayLike.t -> t) =
      fun (x9233 : bigint ArrayLike.t) ->
        t_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "BigUint64Array") "from"
             [|(ArrayLike.t_to_js bigint_to_js x9233)|])
    let (from' :
      arrayLike:'U ArrayLike.t ->
        mapfn:(v:'U -> k:float -> bigint) -> ?thisArg:any -> unit -> t)
      =
      fun ~arrayLike:(x9235 : 'U ArrayLike.t) ->
        fun ~mapfn:(x9236 : v:'U -> k:float -> bigint) ->
          fun ?thisArg:(x9237 : any option) ->
            fun () ->
              t_of_js
                (let x9243 = Ojs.get_prop_ascii Ojs.global "BigUint64Array" in
                 Ojs.call (Ojs.get_prop_ascii x9243 "from") "apply"
                   [|x9243;((let x9238 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x9238 "push"
                                  [|(ArrayLike.t_to_js Obj.magic x9235)|]);
                             ignore
                               (Ojs.call x9238 "push"
                                  [|(Ojs.fun_to_js 2
                                       (fun (x9240 : Ojs.t) ->
                                          fun (x9241 : Ojs.t) ->
                                            bigint_to_js
                                              (x9236 ~v:(Obj.magic x9240)
                                                 ~k:(Ojs.float_of_js x9241))))|]);
                             (match x9237 with
                              | Some x9239 ->
                                  ignore
                                    (Ojs.call x9238 "push"
                                       [|(any_to_js x9239)|])
                              | None -> ());
                             x9238))|])
    let cast_from = Obj.magic
  end
module BigInt64Array =
  struct
    type t = [ `BigInt64Array ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type tags = [ `BigInt64Array ]
    type 'tags this = 'tags intf constraint 'tags = [> `BigInt64Array ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x9246 : Ojs.t) -> intf_of_js __tags_of_js x9246
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x9244 : __tags intf) -> intf_to_js __tags_to_js x9244
    let (findLast :
      'tags this ->
        predicate:(value:bigint -> index:float -> array:t -> bool) ->
          ?thisArg:any -> unit -> 'S option)
      =
      fun (x9255 : 'tags this) ->
        fun
          ~predicate:(x9248 : value:bigint -> index:float -> array:t -> bool)
          ->
          fun ?thisArg:(x9249 : any option) ->
            fun () ->
              Ojs.option_of_js Obj.magic
                (let x9257 = this_to_js Obj.magic x9255 in
                 Ojs.call (Ojs.get_prop_ascii x9257 "findLast") "apply"
                   [|x9257;((let x9250 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x9250 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x9252 : Ojs.t) ->
                                          fun (x9253 : Ojs.t) ->
                                            fun (x9254 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x9248
                                                   ~value:(bigint_of_js x9252)
                                                   ~index:(Ojs.float_of_js
                                                             x9253)
                                                   ~array:(t_of_js x9254))))|]);
                             (match x9249 with
                              | Some x9251 ->
                                  ignore
                                    (Ojs.call x9250 "push"
                                       [|(any_to_js x9251)|])
                              | None -> ());
                             x9250))|])
    let (findLast' :
      'tags this ->
        predicate:(value:bigint -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> bigint option)
      =
      fun (x9266 : 'tags this) ->
        fun
          ~predicate:(x9259 :
                       value:bigint -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x9260 : any option) ->
            fun () ->
              Ojs.option_of_js bigint_of_js
                (let x9268 = this_to_js Obj.magic x9266 in
                 Ojs.call (Ojs.get_prop_ascii x9268 "findLast") "apply"
                   [|x9268;((let x9261 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x9261 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x9263 : Ojs.t) ->
                                          fun (x9264 : Ojs.t) ->
                                            fun (x9265 : Ojs.t) ->
                                              unknown_to_js
                                                (x9259
                                                   ~value:(bigint_of_js x9263)
                                                   ~index:(Ojs.float_of_js
                                                             x9264)
                                                   ~array:(t_of_js x9265))))|]);
                             (match x9260 with
                              | Some x9262 ->
                                  ignore
                                    (Ojs.call x9261 "push"
                                       [|(any_to_js x9262)|])
                              | None -> ());
                             x9261))|])
    let (findLastIndex :
      'tags this ->
        predicate:(value:bigint -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> float)
      =
      fun (x9277 : 'tags this) ->
        fun
          ~predicate:(x9270 :
                       value:bigint -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x9271 : any option) ->
            fun () ->
              Ojs.float_of_js
                (let x9279 = this_to_js Obj.magic x9277 in
                 Ojs.call (Ojs.get_prop_ascii x9279 "findLastIndex") "apply"
                   [|x9279;((let x9272 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x9272 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x9274 : Ojs.t) ->
                                          fun (x9275 : Ojs.t) ->
                                            fun (x9276 : Ojs.t) ->
                                              unknown_to_js
                                                (x9270
                                                   ~value:(bigint_of_js x9274)
                                                   ~index:(Ojs.float_of_js
                                                             x9275)
                                                   ~array:(t_of_js x9276))))|]);
                             (match x9271 with
                              | Some x9273 ->
                                  ignore
                                    (Ojs.call x9272 "push"
                                       [|(any_to_js x9273)|])
                              | None -> ());
                             x9272))|])
    let (at : 'tags this -> index:float -> bigint option) =
      fun (x9281 : 'tags this) ->
        fun ~index:(x9280 : float) ->
          Ojs.option_of_js bigint_of_js
            (Ojs.call (this_to_js Obj.magic x9281) "at"
               [|(Ojs.float_to_js x9280)|])
    let (get_BYTES_PER_ELEMENT : 'tags this -> float) =
      fun (x9284 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x9284)
             "BYTES_PER_ELEMENT")
    let (get_buffer : 'tags this -> ArrayBufferLike.t) =
      fun (x9286 : 'tags this) ->
        ArrayBufferLike.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x9286) "buffer")
    let (get_byteLength : 'tags this -> float) =
      fun (x9288 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x9288) "byteLength")
    let (get_byteOffset : 'tags this -> float) =
      fun (x9290 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x9290) "byteOffset")
    let (copyWithin :
      'tags this ->
        target:float -> ?start:float -> ?end_:float -> unit -> 'tags this)
      =
      fun (x9298 : 'tags this) ->
        fun ~target:(x9292 : float) ->
          fun ?start:(x9293 : float option) ->
            fun ?end_:(x9294 : float option) ->
              fun () ->
                this_of_js Obj.magic
                  (let x9300 = this_to_js Obj.magic x9298 in
                   Ojs.call (Ojs.get_prop_ascii x9300 "copyWithin") "apply"
                     [|x9300;((let x9295 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x9295 "push"
                                    [|(Ojs.float_to_js x9292)|]);
                               (match x9293 with
                                | Some x9297 ->
                                    ignore
                                      (Ojs.call x9295 "push"
                                         [|(Ojs.float_to_js x9297)|])
                                | None -> ());
                               (match x9294 with
                                | Some x9296 ->
                                    ignore
                                      (Ojs.call x9295 "push"
                                         [|(Ojs.float_to_js x9296)|])
                                | None -> ());
                               x9295))|])
    let (entries : 'tags this -> (float * bigint) IterableIterator.t) =
      fun (x9302 : 'tags this) ->
        IterableIterator.t_of_js
          (fun (x9304 : Ojs.t) ->
             let x9305 = x9304 in
             ((Ojs.float_of_js (Ojs.array_get x9305 0)),
               (bigint_of_js (Ojs.array_get x9305 1))))
          (Ojs.call (this_to_js Obj.magic x9302) "entries" [||])
    let (every :
      'tags this ->
        predicate:(value:bigint -> index:float -> array:t -> bool) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x9313 : 'tags this) ->
        fun
          ~predicate:(x9306 : value:bigint -> index:float -> array:t -> bool)
          ->
          fun ?thisArg:(x9307 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x9315 = this_to_js Obj.magic x9313 in
                 Ojs.call (Ojs.get_prop_ascii x9315 "every") "apply"
                   [|x9315;((let x9308 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x9308 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x9310 : Ojs.t) ->
                                          fun (x9311 : Ojs.t) ->
                                            fun (x9312 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x9306
                                                   ~value:(bigint_of_js x9310)
                                                   ~index:(Ojs.float_of_js
                                                             x9311)
                                                   ~array:(t_of_js x9312))))|]);
                             (match x9307 with
                              | Some x9309 ->
                                  ignore
                                    (Ojs.call x9308 "push"
                                       [|(any_to_js x9309)|])
                              | None -> ());
                             x9308))|])
    let (fill :
      'tags this ->
        value:bigint -> ?start:float -> ?end_:float -> unit -> 'tags this)
      =
      fun (x9322 : 'tags this) ->
        fun ~value:(x9316 : bigint) ->
          fun ?start:(x9317 : float option) ->
            fun ?end_:(x9318 : float option) ->
              fun () ->
                this_of_js Obj.magic
                  (let x9324 = this_to_js Obj.magic x9322 in
                   Ojs.call (Ojs.get_prop_ascii x9324 "fill") "apply"
                     [|x9324;((let x9319 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x9319 "push"
                                    [|(bigint_to_js x9316)|]);
                               (match x9317 with
                                | Some x9321 ->
                                    ignore
                                      (Ojs.call x9319 "push"
                                         [|(Ojs.float_to_js x9321)|])
                                | None -> ());
                               (match x9318 with
                                | Some x9320 ->
                                    ignore
                                      (Ojs.call x9319 "push"
                                         [|(Ojs.float_to_js x9320)|])
                                | None -> ());
                               x9319))|])
    let (filter :
      'tags this ->
        predicate:(value:bigint -> index:float -> array:t -> any) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x9333 : 'tags this) ->
        fun
          ~predicate:(x9326 : value:bigint -> index:float -> array:t -> any)
          ->
          fun ?thisArg:(x9327 : any option) ->
            fun () ->
              t_of_js
                (let x9335 = this_to_js Obj.magic x9333 in
                 Ojs.call (Ojs.get_prop_ascii x9335 "filter") "apply"
                   [|x9335;((let x9328 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x9328 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x9330 : Ojs.t) ->
                                          fun (x9331 : Ojs.t) ->
                                            fun (x9332 : Ojs.t) ->
                                              any_to_js
                                                (x9326
                                                   ~value:(bigint_of_js x9330)
                                                   ~index:(Ojs.float_of_js
                                                             x9331)
                                                   ~array:(t_of_js x9332))))|]);
                             (match x9327 with
                              | Some x9329 ->
                                  ignore
                                    (Ojs.call x9328 "push"
                                       [|(any_to_js x9329)|])
                              | None -> ());
                             x9328))|])
    let (find :
      'tags this ->
        predicate:(value:bigint -> index:float -> array:t -> bool) ->
          ?thisArg:any -> unit -> bigint option)
      =
      fun (x9343 : 'tags this) ->
        fun
          ~predicate:(x9336 : value:bigint -> index:float -> array:t -> bool)
          ->
          fun ?thisArg:(x9337 : any option) ->
            fun () ->
              Ojs.option_of_js bigint_of_js
                (let x9345 = this_to_js Obj.magic x9343 in
                 Ojs.call (Ojs.get_prop_ascii x9345 "find") "apply"
                   [|x9345;((let x9338 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x9338 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x9340 : Ojs.t) ->
                                          fun (x9341 : Ojs.t) ->
                                            fun (x9342 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x9336
                                                   ~value:(bigint_of_js x9340)
                                                   ~index:(Ojs.float_of_js
                                                             x9341)
                                                   ~array:(t_of_js x9342))))|]);
                             (match x9337 with
                              | Some x9339 ->
                                  ignore
                                    (Ojs.call x9338 "push"
                                       [|(any_to_js x9339)|])
                              | None -> ());
                             x9338))|])
    let (findIndex :
      'tags this ->
        predicate:(value:bigint -> index:float -> array:t -> bool) ->
          ?thisArg:any -> unit -> float)
      =
      fun (x9354 : 'tags this) ->
        fun
          ~predicate:(x9347 : value:bigint -> index:float -> array:t -> bool)
          ->
          fun ?thisArg:(x9348 : any option) ->
            fun () ->
              Ojs.float_of_js
                (let x9356 = this_to_js Obj.magic x9354 in
                 Ojs.call (Ojs.get_prop_ascii x9356 "findIndex") "apply"
                   [|x9356;((let x9349 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x9349 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x9351 : Ojs.t) ->
                                          fun (x9352 : Ojs.t) ->
                                            fun (x9353 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x9347
                                                   ~value:(bigint_of_js x9351)
                                                   ~index:(Ojs.float_of_js
                                                             x9352)
                                                   ~array:(t_of_js x9353))))|]);
                             (match x9348 with
                              | Some x9350 ->
                                  ignore
                                    (Ojs.call x9349 "push"
                                       [|(any_to_js x9350)|])
                              | None -> ());
                             x9349))|])
    let (forEach :
      'tags this ->
        callbackfn:(value:bigint -> index:float -> array:t -> unit) ->
          ?thisArg:any -> unit -> unit)
      =
      fun (x9364 : 'tags this) ->
        fun
          ~callbackfn:(x9357 :
                        value:bigint -> index:float -> array:t -> unit)
          ->
          fun ?thisArg:(x9358 : any option) ->
            fun () ->
              ignore
                (let x9366 = this_to_js Obj.magic x9364 in
                 Ojs.call (Ojs.get_prop_ascii x9366 "forEach") "apply"
                   [|x9366;((let x9359 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x9359 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x9361 : Ojs.t) ->
                                          fun (x9362 : Ojs.t) ->
                                            fun (x9363 : Ojs.t) ->
                                              x9357
                                                ~value:(bigint_of_js x9361)
                                                ~index:(Ojs.float_of_js x9362)
                                                ~array:(t_of_js x9363)))|]);
                             (match x9358 with
                              | Some x9360 ->
                                  ignore
                                    (Ojs.call x9359 "push"
                                       [|(any_to_js x9360)|])
                              | None -> ());
                             x9359))|])
    let (includes :
      'tags this -> searchElement:bigint -> ?fromIndex:float -> unit -> bool)
      =
      fun (x9371 : 'tags this) ->
        fun ~searchElement:(x9367 : bigint) ->
          fun ?fromIndex:(x9368 : float option) ->
            fun () ->
              Ojs.bool_of_js
                (let x9373 = this_to_js Obj.magic x9371 in
                 Ojs.call (Ojs.get_prop_ascii x9373 "includes") "apply"
                   [|x9373;((let x9369 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x9369 "push"
                                  [|(bigint_to_js x9367)|]);
                             (match x9368 with
                              | Some x9370 ->
                                  ignore
                                    (Ojs.call x9369 "push"
                                       [|(Ojs.float_to_js x9370)|])
                              | None -> ());
                             x9369))|])
    let (indexOf :
      'tags this -> searchElement:bigint -> ?fromIndex:float -> unit -> float)
      =
      fun (x9378 : 'tags this) ->
        fun ~searchElement:(x9374 : bigint) ->
          fun ?fromIndex:(x9375 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x9380 = this_to_js Obj.magic x9378 in
                 Ojs.call (Ojs.get_prop_ascii x9380 "indexOf") "apply"
                   [|x9380;((let x9376 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x9376 "push"
                                  [|(bigint_to_js x9374)|]);
                             (match x9375 with
                              | Some x9377 ->
                                  ignore
                                    (Ojs.call x9376 "push"
                                       [|(Ojs.float_to_js x9377)|])
                              | None -> ());
                             x9376))|])
    let (join : 'tags this -> ?separator:string -> unit -> string) =
      fun (x9384 : 'tags this) ->
        fun ?separator:(x9381 : string option) ->
          fun () ->
            Ojs.string_of_js
              (let x9386 = this_to_js Obj.magic x9384 in
               Ojs.call (Ojs.get_prop_ascii x9386 "join") "apply"
                 [|x9386;((let x9382 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x9381 with
                            | Some x9383 ->
                                ignore
                                  (Ojs.call x9382 "push"
                                     [|(Ojs.string_to_js x9383)|])
                            | None -> ());
                           x9382))|])
    let (keys : 'tags this -> float IterableIterator.t) =
      fun (x9387 : 'tags this) ->
        IterableIterator.t_of_js Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x9387) "keys" [||])
    let (lastIndexOf :
      'tags this -> searchElement:bigint -> ?fromIndex:float -> unit -> float)
      =
      fun (x9394 : 'tags this) ->
        fun ~searchElement:(x9390 : bigint) ->
          fun ?fromIndex:(x9391 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x9396 = this_to_js Obj.magic x9394 in
                 Ojs.call (Ojs.get_prop_ascii x9396 "lastIndexOf") "apply"
                   [|x9396;((let x9392 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x9392 "push"
                                  [|(bigint_to_js x9390)|]);
                             (match x9391 with
                              | Some x9393 ->
                                  ignore
                                    (Ojs.call x9392 "push"
                                       [|(Ojs.float_to_js x9393)|])
                              | None -> ());
                             x9392))|])
    let (get_length : 'tags this -> float) =
      fun (x9397 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x9397) "length")
    let (map :
      'tags this ->
        callbackfn:(value:bigint -> index:float -> array:t -> bigint) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x9406 : 'tags this) ->
        fun
          ~callbackfn:(x9399 :
                        value:bigint -> index:float -> array:t -> bigint)
          ->
          fun ?thisArg:(x9400 : any option) ->
            fun () ->
              t_of_js
                (let x9408 = this_to_js Obj.magic x9406 in
                 Ojs.call (Ojs.get_prop_ascii x9408 "map") "apply"
                   [|x9408;((let x9401 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x9401 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x9403 : Ojs.t) ->
                                          fun (x9404 : Ojs.t) ->
                                            fun (x9405 : Ojs.t) ->
                                              bigint_to_js
                                                (x9399
                                                   ~value:(bigint_of_js x9403)
                                                   ~index:(Ojs.float_of_js
                                                             x9404)
                                                   ~array:(t_of_js x9405))))|]);
                             (match x9400 with
                              | Some x9402 ->
                                  ignore
                                    (Ojs.call x9401 "push"
                                       [|(any_to_js x9402)|])
                              | None -> ());
                             x9401))|])
    let (reduce :
      'tags this ->
        callbackfn:(previousValue:bigint ->
                      currentValue:bigint ->
                        currentIndex:float -> array:t -> bigint)
          -> bigint)
      =
      fun (x9414 : 'tags this) ->
        fun
          ~callbackfn:(x9409 :
                        previousValue:bigint ->
                          currentValue:bigint ->
                            currentIndex:float -> array:t -> bigint)
          ->
          bigint_of_js
            (Ojs.call (this_to_js Obj.magic x9414) "reduce"
               [|(Ojs.fun_to_js 4
                    (fun (x9410 : Ojs.t) ->
                       fun (x9411 : Ojs.t) ->
                         fun (x9412 : Ojs.t) ->
                           fun (x9413 : Ojs.t) ->
                             bigint_to_js
                               (x9409 ~previousValue:(bigint_of_js x9410)
                                  ~currentValue:(bigint_of_js x9411)
                                  ~currentIndex:(Ojs.float_of_js x9412)
                                  ~array:(t_of_js x9413))))|])
    let (reduce' :
      'tags this ->
        callbackfn:(previousValue:'U ->
                      currentValue:bigint ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x9422 : 'tags this) ->
        fun
          ~callbackfn:(x9416 :
                        previousValue:'U ->
                          currentValue:bigint ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x9421 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic x9422) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x9417 : Ojs.t) ->
                         fun (x9418 : Ojs.t) ->
                           fun (x9419 : Ojs.t) ->
                             fun (x9420 : Ojs.t) ->
                               Obj.magic
                                 (x9416 ~previousValue:(Obj.magic x9417)
                                    ~currentValue:(bigint_of_js x9418)
                                    ~currentIndex:(Ojs.float_of_js x9419)
                                    ~array:(t_of_js x9420))));(Obj.magic
                                                                 x9421)|])
    let (reduceRight :
      'tags this ->
        callbackfn:(previousValue:bigint ->
                      currentValue:bigint ->
                        currentIndex:float -> array:t -> bigint)
          -> bigint)
      =
      fun (x9429 : 'tags this) ->
        fun
          ~callbackfn:(x9424 :
                        previousValue:bigint ->
                          currentValue:bigint ->
                            currentIndex:float -> array:t -> bigint)
          ->
          bigint_of_js
            (Ojs.call (this_to_js Obj.magic x9429) "reduceRight"
               [|(Ojs.fun_to_js 4
                    (fun (x9425 : Ojs.t) ->
                       fun (x9426 : Ojs.t) ->
                         fun (x9427 : Ojs.t) ->
                           fun (x9428 : Ojs.t) ->
                             bigint_to_js
                               (x9424 ~previousValue:(bigint_of_js x9425)
                                  ~currentValue:(bigint_of_js x9426)
                                  ~currentIndex:(Ojs.float_of_js x9427)
                                  ~array:(t_of_js x9428))))|])
    let (reduceRight' :
      'tags this ->
        callbackfn:(previousValue:'U ->
                      currentValue:bigint ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x9437 : 'tags this) ->
        fun
          ~callbackfn:(x9431 :
                        previousValue:'U ->
                          currentValue:bigint ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x9436 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic x9437) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x9432 : Ojs.t) ->
                         fun (x9433 : Ojs.t) ->
                           fun (x9434 : Ojs.t) ->
                             fun (x9435 : Ojs.t) ->
                               Obj.magic
                                 (x9431 ~previousValue:(Obj.magic x9432)
                                    ~currentValue:(bigint_of_js x9433)
                                    ~currentIndex:(Ojs.float_of_js x9434)
                                    ~array:(t_of_js x9435))));(Obj.magic
                                                                 x9436)|])
    let (reverse : 'tags this -> 'tags this) =
      fun (x9439 : 'tags this) ->
        this_of_js Obj.magic
          (Ojs.call (this_to_js Obj.magic x9439) "reverse" [||])
    let (set_ :
      'tags this -> array:bigint ArrayLike.t -> ?offset:float -> unit -> unit)
      =
      fun (x9447 : 'tags this) ->
        fun ~array:(x9442 : bigint ArrayLike.t) ->
          fun ?offset:(x9443 : float option) ->
            fun () ->
              ignore
                (let x9449 = this_to_js Obj.magic x9447 in
                 Ojs.call (Ojs.get_prop_ascii x9449 "set") "apply"
                   [|x9449;((let x9444 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x9444 "push"
                                  [|(ArrayLike.t_to_js bigint_to_js x9442)|]);
                             (match x9443 with
                              | Some x9445 ->
                                  ignore
                                    (Ojs.call x9444 "push"
                                       [|(Ojs.float_to_js x9445)|])
                              | None -> ());
                             x9444))|])
    let (slice : 'tags this -> ?start:float -> ?end_:float -> unit -> t) =
      fun (x9455 : 'tags this) ->
        fun ?start:(x9450 : float option) ->
          fun ?end_:(x9451 : float option) ->
            fun () ->
              t_of_js
                (let x9457 = this_to_js Obj.magic x9455 in
                 Ojs.call (Ojs.get_prop_ascii x9457 "slice") "apply"
                   [|x9457;((let x9452 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x9450 with
                              | Some x9454 ->
                                  ignore
                                    (Ojs.call x9452 "push"
                                       [|(Ojs.float_to_js x9454)|])
                              | None -> ());
                             (match x9451 with
                              | Some x9453 ->
                                  ignore
                                    (Ojs.call x9452 "push"
                                       [|(Ojs.float_to_js x9453)|])
                              | None -> ());
                             x9452))|])
    let (some :
      'tags this ->
        predicate:(value:bigint -> index:float -> array:t -> bool) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x9465 : 'tags this) ->
        fun
          ~predicate:(x9458 : value:bigint -> index:float -> array:t -> bool)
          ->
          fun ?thisArg:(x9459 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x9467 = this_to_js Obj.magic x9465 in
                 Ojs.call (Ojs.get_prop_ascii x9467 "some") "apply"
                   [|x9467;((let x9460 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x9460 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x9462 : Ojs.t) ->
                                          fun (x9463 : Ojs.t) ->
                                            fun (x9464 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x9458
                                                   ~value:(bigint_of_js x9462)
                                                   ~index:(Ojs.float_of_js
                                                             x9463)
                                                   ~array:(t_of_js x9464))))|]);
                             (match x9459 with
                              | Some x9461 ->
                                  ignore
                                    (Ojs.call x9460 "push"
                                       [|(any_to_js x9461)|])
                              | None -> ());
                             x9460))|])
    let (sort :
      'tags this ->
        ?compareFn:(a:bigint -> b:bigint -> [ `U1 of float  | `U2 of bigint ])
          -> unit -> 'tags this)
      =
      fun (x9475 : 'tags this) ->
        fun
          ?compareFn:(x9468 :
                       (a:bigint ->
                          b:bigint -> [ `U1 of float  | `U2 of bigint ])
                         option)
          ->
          fun () ->
            this_of_js Obj.magic
              (let x9477 = this_to_js Obj.magic x9475 in
               Ojs.call (Ojs.get_prop_ascii x9477 "sort") "apply"
                 [|x9477;((let x9469 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x9468 with
                            | Some x9470 ->
                                ignore
                                  (Ojs.call x9469 "push"
                                     [|(Ojs.fun_to_js 2
                                          (fun (x9471 : Ojs.t) ->
                                             fun (x9472 : Ojs.t) ->
                                               match x9470
                                                       ~a:(bigint_of_js x9471)
                                                       ~b:(bigint_of_js x9472)
                                               with
                                               | `U1 x9473 ->
                                                   Ojs.float_to_js x9473
                                               | `U2 x9474 ->
                                                   bigint_to_js x9474))|])
                            | None -> ());
                           x9469))|])
    let (subarray : 'tags this -> ?begin_:float -> ?end_:float -> unit -> t)
      =
      fun (x9484 : 'tags this) ->
        fun ?begin_:(x9479 : float option) ->
          fun ?end_:(x9480 : float option) ->
            fun () ->
              t_of_js
                (let x9486 = this_to_js Obj.magic x9484 in
                 Ojs.call (Ojs.get_prop_ascii x9486 "subarray") "apply"
                   [|x9486;((let x9481 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x9479 with
                              | Some x9483 ->
                                  ignore
                                    (Ojs.call x9481 "push"
                                       [|(Ojs.float_to_js x9483)|])
                              | None -> ());
                             (match x9480 with
                              | Some x9482 ->
                                  ignore
                                    (Ojs.call x9481 "push"
                                       [|(Ojs.float_to_js x9482)|])
                              | None -> ());
                             x9481))|])
    let (toLocaleString : 'tags this -> string) =
      fun (x9487 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x9487) "toLocaleString" [||])
    let (toString : 'tags this -> string) =
      fun (x9489 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x9489) "toString" [||])
    let (valueOf : 'tags this -> t) =
      fun (x9491 : 'tags this) ->
        t_of_js (Ojs.call (this_to_js Obj.magic x9491) "valueOf" [||])
    let (values : 'tags this -> bigint IterableIterator.t) =
      fun (x9493 : 'tags this) ->
        IterableIterator.t_of_js bigint_of_js
          (Ojs.call (this_to_js Obj.magic x9493) "values" [||])
    let (get : 'tags this -> float -> bigint) =
      fun (x9496 : 'tags this) ->
        fun (x9498 : float) ->
          bigint_of_js
            (Ojs.get_prop (this_to_js Obj.magic x9496)
               (Ojs.float_to_js x9498))
    let (set : 'tags this -> float -> bigint -> unit) =
      fun (x9499 : 'tags this) ->
        fun (x9501 : float) ->
          fun (x9502 : bigint) ->
            Ojs.set_prop (this_to_js Obj.magic x9499) (Ojs.float_to_js x9501)
              (bigint_to_js x9502)
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "BigInt64Array")
             "prototype")
    let (create : ?length:float -> unit -> t) =
      fun ?length:(x9503 : float option) ->
        fun () ->
          t_of_js
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "BigInt64Array")
               (let x9504 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x9503 with
                 | Some x9505 ->
                     ignore
                       (Ojs.call x9504 "push" [|(Ojs.float_to_js x9505)|])
                 | None -> ());
                x9504))
    let (create' : bigint Iterable.t -> t) =
      fun (x9506 : bigint Iterable.t) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "BigInt64Array")
             [|(Iterable.t_to_js bigint_to_js x9506)|])
    let (create'' :
      buffer:ArrayBufferLike.t ->
        ?byteOffset:float -> ?length:float -> unit -> t)
      =
      fun ~buffer:(x9508 : ArrayBufferLike.t) ->
        fun ?byteOffset:(x9509 : float option) ->
          fun ?length:(x9510 : float option) ->
            fun () ->
              t_of_js
                (Ojs.new_obj_arr
                   (Ojs.get_prop_ascii Ojs.global "BigInt64Array")
                   (let x9511 =
                      Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                        [||] in
                    ignore
                      (Ojs.call x9511 "push"
                         [|(ArrayBufferLike.t_to_js x9508)|]);
                    (match x9509 with
                     | Some x9513 ->
                         ignore
                           (Ojs.call x9511 "push" [|(Ojs.float_to_js x9513)|])
                     | None -> ());
                    (match x9510 with
                     | Some x9512 ->
                         ignore
                           (Ojs.call x9511 "push" [|(Ojs.float_to_js x9512)|])
                     | None -> ());
                    x9511))
    let (bytes_per_element : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "BigInt64Array")
             "BYTES_PER_ELEMENT")
    let (of_ : bigint list -> t) =
      fun (x9514 : bigint list) ->
        t_of_js
          (let x9517 = Ojs.get_prop_ascii Ojs.global "BigInt64Array" in
           Ojs.call (Ojs.get_prop_ascii x9517 "of") "apply"
             [|x9517;((let x9515 =
                         Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                           [||] in
                       List.iter
                         (fun (x9516 : bigint) ->
                            ignore
                              (Ojs.call x9515 "push" [|(bigint_to_js x9516)|]))
                         x9514;
                       x9515))|])
    let (from : bigint ArrayLike.t -> t) =
      fun (x9518 : bigint ArrayLike.t) ->
        t_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "BigInt64Array") "from"
             [|(ArrayLike.t_to_js bigint_to_js x9518)|])
    let (from' :
      arrayLike:'U ArrayLike.t ->
        mapfn:(v:'U -> k:float -> bigint) -> ?thisArg:any -> unit -> t)
      =
      fun ~arrayLike:(x9520 : 'U ArrayLike.t) ->
        fun ~mapfn:(x9521 : v:'U -> k:float -> bigint) ->
          fun ?thisArg:(x9522 : any option) ->
            fun () ->
              t_of_js
                (let x9528 = Ojs.get_prop_ascii Ojs.global "BigInt64Array" in
                 Ojs.call (Ojs.get_prop_ascii x9528 "from") "apply"
                   [|x9528;((let x9523 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x9523 "push"
                                  [|(ArrayLike.t_to_js Obj.magic x9520)|]);
                             ignore
                               (Ojs.call x9523 "push"
                                  [|(Ojs.fun_to_js 2
                                       (fun (x9525 : Ojs.t) ->
                                          fun (x9526 : Ojs.t) ->
                                            bigint_to_js
                                              (x9521 ~v:(Obj.magic x9525)
                                                 ~k:(Ojs.float_of_js x9526))))|]);
                             (match x9522 with
                              | Some x9524 ->
                                  ignore
                                    (Ojs.call x9523 "push"
                                       [|(any_to_js x9524)|])
                              | None -> ());
                             x9523))|])
    let cast_from = Obj.magic
  end
module PromiseRejectedResult =
  struct
    type t = [ `PromiseRejectedResult ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type tags = [ `PromiseRejectedResult ]
    type 'tags this =
      'tags intf constraint 'tags = [> `PromiseRejectedResult ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x9531 : Ojs.t) -> intf_of_js __tags_of_js x9531
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x9529 : __tags intf) -> intf_to_js __tags_to_js x9529
    let (get_status : 'tags this -> [ `L_s113_rejected ]) =
      fun (x9533 : 'tags this) ->
        let x9535 = Ojs.get_prop_ascii (this_to_js Obj.magic x9533) "status" in
        match Ojs.string_of_js x9535 with
        | "rejected" -> `L_s113_rejected
        | _ -> assert false
    let (set_status : 'tags this -> [ `L_s113_rejected ] -> unit) =
      fun (x9536 : 'tags this) ->
        fun (x9537 : [ `L_s113_rejected ]) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x9536) "status"
            (match x9537 with
             | `L_s113_rejected -> Ojs.string_to_js "rejected")
    let (get_reason : 'tags this -> any) =
      fun (x9539 : 'tags this) ->
        any_of_js (Ojs.get_prop_ascii (this_to_js Obj.magic x9539) "reason")
    let (set_reason : 'tags this -> any -> unit) =
      fun (x9541 : 'tags this) ->
        fun (x9542 : any) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x9541) "reason"
            (any_to_js x9542)
    let (create : status:[ `L_s113_rejected ] -> reason:any -> unit -> t) =
      fun ~status:(x9544 : [ `L_s113_rejected ]) ->
        fun ~reason:(x9545 : any) ->
          fun () ->
            let x9546 = Ojs.empty_obj () in
            Ojs.set_prop_ascii x9546 "status"
              (match x9544 with
               | `L_s113_rejected -> Ojs.string_to_js "rejected");
            Ojs.set_prop_ascii x9546 "reason" (any_to_js x9545);
            t_of_js x9546
    let cast_from = Obj.magic
  end
module PromiseFulfilledResult =
  struct
    type 'T t = [ `PromiseFulfilledResult of 'T ] intf
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun _T -> Obj.magic
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun _T -> Obj.magic
    type 'T tags = [ `PromiseFulfilledResult of 'T ]
    type ('tags, 'T) this =
      'tags intf constraint 'tags = [> `PromiseFulfilledResult of 'T ]
    let rec this_of_js :
      'tags 'T .
        (Ojs.t -> 'tags) -> (Ojs.t -> 'T) -> Ojs.t -> ('tags, 'T) this
      =
      fun (type __tags) ->
        fun (type __T) ->
          fun (__tags_of_js : Ojs.t -> __tags) ->
            fun (__T_of_js : Ojs.t -> __T) ->
              fun (x9549 : Ojs.t) -> intf_of_js __tags_of_js x9549
    and this_to_js :
      'tags 'T .
        ('tags -> Ojs.t) -> ('T -> Ojs.t) -> ('tags, 'T) this -> Ojs.t
      =
      fun (type __tags) ->
        fun (type __T) ->
          fun (__tags_to_js : __tags -> Ojs.t) ->
            fun (__T_to_js : __T -> Ojs.t) ->
              fun (x9547 : __tags intf) -> intf_to_js __tags_to_js x9547
    let (get_status : ('tags, 'T) this -> [ `L_s62_fulfilled ]) =
      fun (x9551 : ('tags, 'T) this) ->
        let x9554 =
          Ojs.get_prop_ascii (this_to_js Obj.magic Obj.magic x9551) "status" in
        match Ojs.string_of_js x9554 with
        | "fulfilled" -> `L_s62_fulfilled
        | _ -> assert false
    let (set_status : ('tags, 'T) this -> [ `L_s62_fulfilled ] -> unit) =
      fun (x9555 : ('tags, 'T) this) ->
        fun (x9556 : [ `L_s62_fulfilled ]) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic Obj.magic x9555) "status"
            (match x9556 with
             | `L_s62_fulfilled -> Ojs.string_to_js "fulfilled")
    let (get_value : ('tags, 'T) this -> 'T) =
      fun (x9559 : ('tags, 'T) this) ->
        Obj.magic
          (Ojs.get_prop_ascii (this_to_js Obj.magic Obj.magic x9559) "value")
    let (set_value : ('tags, 'T) this -> 'T -> unit) =
      fun (x9562 : ('tags, 'T) this) ->
        fun (x9563 : 'T) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic Obj.magic x9562) "value"
            (Obj.magic x9563)
    let (create : status:[ `L_s62_fulfilled ] -> value:'T -> unit -> 'T t) =
      fun ~status:(x9566 : [ `L_s62_fulfilled ]) ->
        fun ~value:(x9567 : 'T) ->
          fun () ->
            let x9568 = Ojs.empty_obj () in
            Ojs.set_prop_ascii x9568 "status"
              (match x9566 with
               | `L_s62_fulfilled -> Ojs.string_to_js "fulfilled");
            Ojs.set_prop_ascii x9568 "value" (Obj.magic x9567);
            t_of_js Obj.magic x9568
    let cast_from = Obj.magic
  end
module PromiseSettledResult =
  struct
    type 'T t =
      [ `U_s62_fulfilled of 'T PromiseFulfilledResult.t 
      | `U_s113_rejected of PromiseRejectedResult.t ]
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun (type __T) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x9574 : Ojs.t) ->
            let x9575 = x9574 in
            match Ojs.string_of_js (Ojs.get_prop_ascii x9575 "status") with
            | "fulfilled" ->
                `U_s62_fulfilled
                  (PromiseFulfilledResult.t_of_js __T_of_js x9575)
            | "rejected" ->
                `U_s113_rejected (PromiseRejectedResult.t_of_js x9575)
            | _ -> assert false
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t =
      fun (type __T) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun
            (x9570 :
              [ `U_s62_fulfilled of __T PromiseFulfilledResult.t 
              | `U_s113_rejected of PromiseRejectedResult.t ])
            ->
            match x9570 with
            | `U_s62_fulfilled x9571 ->
                PromiseFulfilledResult.t_to_js __T_to_js x9571
            | `U_s113_rejected x9573 -> PromiseRejectedResult.t_to_js x9573
  end
module Awaited =
  struct
    type 'T t = any
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun (type __T) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x9578 : Ojs.t) -> any_of_js x9578
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t =
      fun (type __T) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x9577 : any) -> any_to_js x9577
  end
module Promise =
  struct
    type 'T t = [ `Promise of 'T ] intf
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun _T -> Obj.magic
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun _T -> Obj.magic
    type 'T tags = [ `Promise of 'T ]
    type ('tags, 'T) this = 'tags intf constraint 'tags = [> `Promise of 'T ]
    let rec this_of_js :
      'tags 'T .
        (Ojs.t -> 'tags) -> (Ojs.t -> 'T) -> Ojs.t -> ('tags, 'T) this
      =
      fun (type __tags) ->
        fun (type __T) ->
          fun (__tags_of_js : Ojs.t -> __tags) ->
            fun (__T_of_js : Ojs.t -> __T) ->
              fun (x9581 : Ojs.t) -> intf_of_js __tags_of_js x9581
    and this_to_js :
      'tags 'T .
        ('tags -> Ojs.t) -> ('T -> Ojs.t) -> ('tags, 'T) this -> Ojs.t
      =
      fun (type __tags) ->
        fun (type __T) ->
          fun (__tags_to_js : __tags -> Ojs.t) ->
            fun (__T_to_js : __T -> Ojs.t) ->
              fun (x9579 : __tags intf) -> intf_to_js __tags_to_js x9579
    let (finally :
      ('tags, 'T) this ->
        ?onfinally:[ `Null  | `Undefined of undefined 
                   | `U1 of unit -> unit ]
          -> unit -> 'T t)
      =
      fun (x9588 : ('tags, 'T) this) ->
        fun
          ?onfinally:(x9583 :
                       [ `Null  | `Undefined of undefined 
                       | `U1 of unit -> unit ] option)
          ->
          fun () ->
            t_of_js Obj.magic
              (let x9591 = this_to_js Obj.magic Obj.magic x9588 in
               Ojs.call (Ojs.get_prop_ascii x9591 "finally") "apply"
                 [|x9591;((let x9584 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x9583 with
                            | Some x9585 ->
                                ignore
                                  (Ojs.call x9584 "push"
                                     [|((match x9585 with
                                         | `Null -> Ojs.null
                                         | `Undefined x9586 ->
                                             undefined_to_js x9586
                                         | `U1 x9587 ->
                                             Ojs.fun_to_js 1
                                               (fun _ -> x9587 ())))|])
                            | None -> ());
                           x9584))|])
    let (then_ :
      ('tags, 'T) this ->
        ?onfulfilled:[ `Null  | `Undefined of undefined 
                     | `U1 of
                         'T ->
                           [ `U1 of 'TResult1 
                           | `U2 of 'TResult1 PromiseLike.t ]
                         ]
          ->
          ?onrejected:[ `Null  | `Undefined of undefined 
                      | `U1 of
                          any ->
                            [ `U1 of 'TResult2 
                            | `U2 of 'TResult2 PromiseLike.t ]
                          ]
            -> unit -> ('TResult1, 'TResult2) union2 t)
      =
      fun (x9610 : ('tags, 'T) this) ->
        fun
          ?onfulfilled:(x9593 :
                         [ `Null  | `Undefined of undefined 
                         | `U1 of
                             'T ->
                               [ `U1 of 'TResult1 
                               | `U2 of 'TResult1 PromiseLike.t ]
                             ]
                           option)
          ->
          fun
            ?onrejected:(x9594 :
                          [ `Null  | `Undefined of undefined 
                          | `U1 of
                              any ->
                                [ `U1 of 'TResult2 
                                | `U2 of 'TResult2 PromiseLike.t ]
                              ]
                            option)
            ->
            fun () ->
              t_of_js
                (fun (x9614 : Ojs.t) ->
                   union2_of_js Obj.magic Obj.magic x9614)
                (let x9613 = this_to_js Obj.magic Obj.magic x9610 in
                 Ojs.call (Ojs.get_prop_ascii x9613 "then") "apply"
                   [|x9613;((let x9595 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x9593 with
                              | Some x9603 ->
                                  ignore
                                    (Ojs.call x9595 "push"
                                       [|((match x9603 with
                                           | `Null -> Ojs.null
                                           | `Undefined x9604 ->
                                               undefined_to_js x9604
                                           | `U1 x9605 ->
                                               Ojs.fun_to_js 1
                                                 (fun (x9606 : Ojs.t) ->
                                                    match x9605
                                                            (Obj.magic x9606)
                                                    with
                                                    | `U1 x9607 ->
                                                        Obj.magic x9607
                                                    | `U2 x9608 ->
                                                        PromiseLike.t_to_js
                                                          Obj.magic x9608)))|])
                              | None -> ());
                             (match x9594 with
                              | Some x9596 ->
                                  ignore
                                    (Ojs.call x9595 "push"
                                       [|((match x9596 with
                                           | `Null -> Ojs.null
                                           | `Undefined x9597 ->
                                               undefined_to_js x9597
                                           | `U1 x9598 ->
                                               Ojs.fun_to_js 1
                                                 (fun (x9599 : Ojs.t) ->
                                                    match x9598
                                                            (any_of_js x9599)
                                                    with
                                                    | `U1 x9600 ->
                                                        Obj.magic x9600
                                                    | `U2 x9601 ->
                                                        PromiseLike.t_to_js
                                                          Obj.magic x9601)))|])
                              | None -> ());
                             x9595))|])
    let (catch :
      ('tags, 'T) this ->
        ?onrejected:[ `Null  | `Undefined of undefined 
                    | `U1 of
                        any ->
                          [ `U1 of 'TResult 
                          | `U2 of 'TResult PromiseLike.t ]
                        ]
          -> unit -> ('T, 'TResult) union2 t)
      =
      fun (x9626 : ('tags, 'T) this) ->
        fun
          ?onrejected:(x9617 :
                        [ `Null  | `Undefined of undefined 
                        | `U1 of
                            any ->
                              [ `U1 of 'TResult 
                              | `U2 of 'TResult PromiseLike.t ]
                            ]
                          option)
          ->
          fun () ->
            t_of_js
              (fun (x9630 : Ojs.t) -> union2_of_js Obj.magic Obj.magic x9630)
              (let x9629 = this_to_js Obj.magic Obj.magic x9626 in
               Ojs.call (Ojs.get_prop_ascii x9629 "catch") "apply"
                 [|x9629;((let x9618 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x9617 with
                            | Some x9619 ->
                                ignore
                                  (Ojs.call x9618 "push"
                                     [|((match x9619 with
                                         | `Null -> Ojs.null
                                         | `Undefined x9620 ->
                                             undefined_to_js x9620
                                         | `U1 x9621 ->
                                             Ojs.fun_to_js 1
                                               (fun (x9622 : Ojs.t) ->
                                                  match x9621
                                                          (any_of_js x9622)
                                                  with
                                                  | `U1 x9623 ->
                                                      Obj.magic x9623
                                                  | `U2 x9624 ->
                                                      PromiseLike.t_to_js
                                                        Obj.magic x9624)))|])
                            | None -> ());
                           x9618))|])
    let (allSettled : 'T -> any t) =
      fun (x9633 : 'T) ->
        t_of_js any_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Promise") "allSettled"
             [|(Obj.magic x9633)|])
    let (allSettled' :
      [ `U1 of 'T  | `U2 of 'T PromiseLike.t ] Iterable.t ->
        'T Awaited.t PromiseSettledResult.t list t)
      =
      fun (x9635 : [ `U1 of 'T  | `U2 of 'T PromiseLike.t ] Iterable.t) ->
        t_of_js
          (fun (x9640 : Ojs.t) ->
             Ojs.list_of_js
               (fun (x9641 : Ojs.t) ->
                  PromiseSettledResult.t_of_js
                    (fun (x9642 : Ojs.t) -> Awaited.t_of_js Obj.magic x9642)
                    x9641) x9640)
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Promise") "allSettled"
             [|(Iterable.t_to_js
                  (fun (x9636 : [ `U1 of 'T  | `U2 of 'T PromiseLike.t ]) ->
                     match x9636 with
                     | `U1 x9637 -> Obj.magic x9637
                     | `U2 x9638 -> PromiseLike.t_to_js Obj.magic x9638)
                  x9635)|])
    let (any : 'T -> any Awaited.t t) =
      fun (x9644 : 'T) ->
        t_of_js (fun (x9645 : Ojs.t) -> Awaited.t_of_js any_of_js x9645)
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Promise") "any"
             [|(Obj.magic x9644)|])
    let (any' :
      [ `U1 of 'T  | `U2 of 'T PromiseLike.t ] Iterable.t -> 'T Awaited.t t)
      =
      fun (x9647 : [ `U1 of 'T  | `U2 of 'T PromiseLike.t ] Iterable.t) ->
        t_of_js (fun (x9652 : Ojs.t) -> Awaited.t_of_js Obj.magic x9652)
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Promise") "any"
             [|(Iterable.t_to_js
                  (fun (x9648 : [ `U1 of 'T  | `U2 of 'T PromiseLike.t ]) ->
                     match x9648 with
                     | `U1 x9649 -> Obj.magic x9649
                     | `U2 x9650 -> PromiseLike.t_to_js Obj.magic x9650)
                  x9647)|])
    let (prototype : unit -> any t) =
      fun () ->
        t_of_js any_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Promise")
             "prototype")
    let (create :
      (resolve:([ `U1 of 'T  | `U2 of 'T PromiseLike.t ] -> unit) ->
         reject:(?reason:any -> unit -> unit) -> unit)
        -> 'T t)
      =
      fun
        (x9655 :
          resolve:([ `U1 of 'T  | `U2 of 'T PromiseLike.t ] -> unit) ->
            reject:(?reason:any -> unit -> unit) -> unit)
        ->
        t_of_js Obj.magic
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Promise")
             [|(Ojs.fun_to_js 2
                  (fun (x9656 : Ojs.t) ->
                     fun (x9661 : Ojs.t) ->
                       x9655
                         ~resolve:(fun
                                     (x9657 :
                                       [ `U1 of 'T 
                                       | `U2 of 'T PromiseLike.t ])
                                     ->
                                     ignore
                                       (Ojs.apply x9656
                                          [|((match x9657 with
                                              | `U1 x9658 -> Obj.magic x9658
                                              | `U2 x9659 ->
                                                  PromiseLike.t_to_js
                                                    Obj.magic x9659))|]))
                         ~reject:(fun ?reason:(x9662 : any option) ->
                                    fun () ->
                                      ignore
                                        (Ojs.call x9661 "apply"
                                           [|Ojs.null;((let x9663 =
                                                          Ojs.new_obj
                                                            (Ojs.get_prop_ascii
                                                               Ojs.global
                                                               "Array") 
                                                            [||] in
                                                        (match x9662 with
                                                         | Some x9664 ->
                                                             ignore
                                                               (Ojs.call
                                                                  x9663
                                                                  "push"
                                                                  [|(
                                                                    any_to_js
                                                                    x9664)|])
                                                         | None -> ());
                                                        x9663))|]))))|])
    let (all : 'T -> any t) =
      fun (x9666 : 'T) ->
        t_of_js any_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Promise") "all"
             [|(Obj.magic x9666)|])
    let (race : 'T -> any Awaited.t t) =
      fun (x9668 : 'T) ->
        t_of_js (fun (x9669 : Ojs.t) -> Awaited.t_of_js any_of_js x9669)
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Promise") "race"
             [|(Obj.magic x9668)|])
    let (reject : ?reason:any -> unit -> 'T t) =
      fun ?reason:(x9671 : any option) ->
        fun () ->
          t_of_js Obj.magic
            (let x9674 = Ojs.get_prop_ascii Ojs.global "Promise" in
             Ojs.call (Ojs.get_prop_ascii x9674 "reject") "apply"
               [|x9674;((let x9672 =
                           Ojs.new_obj
                             (Ojs.get_prop_ascii Ojs.global "Array") 
                             [||] in
                         (match x9671 with
                          | Some x9673 ->
                              ignore
                                (Ojs.call x9672 "push" [|(any_to_js x9673)|])
                          | None -> ());
                         x9672))|])
    let (resolve : unit -> unit t) =
      fun () ->
        t_of_js Ojs.unit_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Promise") "resolve" [||])
    let (resolve' : 'T -> 'T Awaited.t t) =
      fun (x9677 : 'T) ->
        t_of_js (fun (x9678 : Ojs.t) -> Awaited.t_of_js Obj.magic x9678)
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Promise") "resolve"
             [|(Obj.magic x9677)|])
    let (resolve'' :
      [ `U1 of 'T  | `U2 of 'T PromiseLike.t ] -> 'T Awaited.t t) =
      fun (x9680 : [ `U1 of 'T  | `U2 of 'T PromiseLike.t ]) ->
        t_of_js (fun (x9684 : Ojs.t) -> Awaited.t_of_js Obj.magic x9684)
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Promise") "resolve"
             [|((match x9680 with
                 | `U1 x9681 -> Obj.magic x9681
                 | `U2 x9682 -> PromiseLike.t_to_js Obj.magic x9682))|])
    let (all' :
      [ `U1 of 'T  | `U2 of 'T PromiseLike.t ] Iterable.t ->
        'T Awaited.t list t)
      =
      fun (x9686 : [ `U1 of 'T  | `U2 of 'T PromiseLike.t ] Iterable.t) ->
        t_of_js
          (fun (x9691 : Ojs.t) ->
             Ojs.list_of_js
               (fun (x9692 : Ojs.t) -> Awaited.t_of_js Obj.magic x9692) x9691)
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Promise") "all"
             [|(Iterable.t_to_js
                  (fun (x9687 : [ `U1 of 'T  | `U2 of 'T PromiseLike.t ]) ->
                     match x9687 with
                     | `U1 x9688 -> Obj.magic x9688
                     | `U2 x9689 -> PromiseLike.t_to_js Obj.magic x9689)
                  x9686)|])
    let (race' :
      [ `U1 of 'T  | `U2 of 'T PromiseLike.t ] Iterable.t -> 'T Awaited.t t)
      =
      fun (x9694 : [ `U1 of 'T  | `U2 of 'T PromiseLike.t ] Iterable.t) ->
        t_of_js (fun (x9699 : Ojs.t) -> Awaited.t_of_js Obj.magic x9699)
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Promise") "race"
             [|(Iterable.t_to_js
                  (fun (x9695 : [ `U1 of 'T  | `U2 of 'T PromiseLike.t ]) ->
                     match x9695 with
                     | `U1 x9696 -> Obj.magic x9696
                     | `U2 x9697 -> PromiseLike.t_to_js Obj.magic x9697)
                  x9694)|])
    let cast_from = Obj.magic
  end
module Atomics =
  struct
    module AnonymousInterface2 =
      struct
        type t = Ojs.t
        let rec t_of_js : Ojs.t -> t = fun (x9702 : Ojs.t) -> x9702
        and t_to_js : t -> Ojs.t = fun (x9701 : Ojs.t) -> x9701
        let (get_async : t -> [ `L_b_true ]) =
          fun (x9703 : t) ->
            let x9704 = Ojs.get_prop_ascii (t_to_js x9703) "async" in
            match Ojs.bool_of_js x9704 with
            | true -> `L_b_true
            | _ -> assert false
        let (set_async : t -> [ `L_b_true ] -> unit) =
          fun (x9705 : t) ->
            fun (x9706 : [ `L_b_true ]) ->
              Ojs.set_prop_ascii (t_to_js x9705) "async"
                (match x9706 with | `L_b_true -> Ojs.bool_to_js true)
        let (get_value : t -> [ `L_s133_timed_out  | `L_s99_ok ] Promise.t) =
          fun (x9707 : t) ->
            Promise.t_of_js
              (fun (x9708 : Ojs.t) ->
                 let x9709 = x9708 in
                 match Ojs.string_of_js x9709 with
                 | "timed-out" -> `L_s133_timed_out
                 | "ok" -> `L_s99_ok
                 | _ -> assert false)
              (Ojs.get_prop_ascii (t_to_js x9707) "value")
        let (set_value :
          t ->
            [ `U1 of [ `L_s99_ok ]  | `U2 of [ `L_s133_timed_out ] ]
              Promise.t -> unit)
          =
          fun (x9710 : t) ->
            fun
              (x9711 :
                [ `U1 of [ `L_s99_ok ]  | `U2 of [ `L_s133_timed_out ] ]
                  Promise.t)
              ->
              Ojs.set_prop_ascii (t_to_js x9710) "value"
                (Promise.t_to_js
                   (fun
                      (x9712 :
                        [ `U1 of [ `L_s99_ok ] 
                        | `U2 of [ `L_s133_timed_out ] ])
                      ->
                      match x9712 with
                      | `U1 x9713 ->
                          (match x9713 with
                           | `L_s99_ok -> Ojs.string_to_js "ok")
                      | `U2 x9714 ->
                          (match x9714 with
                           | `L_s133_timed_out ->
                               Ojs.string_to_js "timed-out")) x9711)
        let (create :
          async:[ `L_b_true ] ->
            value:[ `L_s133_timed_out  | `L_s99_ok ] Promise.t -> unit -> t)
          =
          fun ~async:(x9715 : [ `L_b_true ]) ->
            fun ~value:(x9716 : [ `L_s133_timed_out  | `L_s99_ok ] Promise.t)
              ->
              fun () ->
                let x9717 = Ojs.empty_obj () in
                Ojs.set_prop_ascii x9717 "async"
                  (match x9715 with | `L_b_true -> Ojs.bool_to_js true);
                Ojs.set_prop_ascii x9717 "value"
                  (Promise.t_to_js
                     (fun (x9718 : [ `L_s133_timed_out  | `L_s99_ok ]) ->
                        match x9718 with
                        | `L_s133_timed_out -> Ojs.string_to_js "timed-out"
                        | `L_s99_ok -> Ojs.string_to_js "ok") x9716);
                t_of_js x9717
      end
    module AnonymousInterface1 =
      struct
        type t = Ojs.t
        let rec t_of_js : Ojs.t -> t = fun (x9720 : Ojs.t) -> x9720
        and t_to_js : t -> Ojs.t = fun (x9719 : Ojs.t) -> x9719
        let (get_async : t -> [ `L_b_false ]) =
          fun (x9721 : t) ->
            let x9722 = Ojs.get_prop_ascii (t_to_js x9721) "async" in
            match Ojs.bool_of_js x9722 with
            | false -> `L_b_false
            | _ -> assert false
        let (set_async : t -> [ `L_b_false ] -> unit) =
          fun (x9723 : t) ->
            fun (x9724 : [ `L_b_false ]) ->
              Ojs.set_prop_ascii (t_to_js x9723) "async"
                (match x9724 with | `L_b_false -> Ojs.bool_to_js false)
        let (get_value : t -> [ `L_s133_timed_out  | `L_s95_not_equal ]) =
          fun (x9725 : t) ->
            let x9726 = Ojs.get_prop_ascii (t_to_js x9725) "value" in
            match Ojs.string_of_js x9726 with
            | "timed-out" -> `L_s133_timed_out
            | "not-equal" -> `L_s95_not_equal
            | _ -> assert false
        let (set_value :
          t ->
            [ `U1 of [ `L_s95_not_equal ]  | `U2 of [ `L_s133_timed_out ] ]
              -> unit)
          =
          fun (x9727 : t) ->
            fun
              (x9728 :
                [ `U1 of [ `L_s95_not_equal ] 
                | `U2 of [ `L_s133_timed_out ] ])
              ->
              Ojs.set_prop_ascii (t_to_js x9727) "value"
                (match x9728 with
                 | `U1 x9729 ->
                     (match x9729 with
                      | `L_s95_not_equal -> Ojs.string_to_js "not-equal")
                 | `U2 x9730 ->
                     (match x9730 with
                      | `L_s133_timed_out -> Ojs.string_to_js "timed-out"))
        let (create :
          async:[ `L_b_false ] ->
            value:[ `L_s133_timed_out  | `L_s95_not_equal ] -> unit -> t)
          =
          fun ~async:(x9731 : [ `L_b_false ]) ->
            fun ~value:(x9732 : [ `L_s133_timed_out  | `L_s95_not_equal ]) ->
              fun () ->
                let x9733 = Ojs.empty_obj () in
                Ojs.set_prop_ascii x9733 "async"
                  (match x9731 with | `L_b_false -> Ojs.bool_to_js false);
                Ojs.set_prop_ascii x9733 "value"
                  (match x9732 with
                   | `L_s133_timed_out -> Ojs.string_to_js "timed-out"
                   | `L_s95_not_equal -> Ojs.string_to_js "not-equal");
                t_of_js x9733
      end
    let (waitAsync :
      typedArray:Int32Array.t ->
        index:float ->
          value:float ->
            ?timeout:float ->
              unit ->
                [ `U_b_false of AnonymousInterface1.t 
                | `U_b_true of AnonymousInterface2.t ])
      =
      fun ~typedArray:(x9734 : Int32Array.t) ->
        fun ~index:(x9735 : float) ->
          fun ~value:(x9736 : float) ->
            fun ?timeout:(x9737 : float option) ->
              fun () ->
                let x9741 =
                  let x9740 = Ojs.get_prop_ascii Ojs.global "Atomics" in
                  Ojs.call (Ojs.get_prop_ascii x9740 "waitAsync") "apply"
                    [|x9740;((let x9738 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x9738 "push"
                                   [|(Int32Array.t_to_js x9734)|]);
                              ignore
                                (Ojs.call x9738 "push"
                                   [|(Ojs.float_to_js x9735)|]);
                              ignore
                                (Ojs.call x9738 "push"
                                   [|(Ojs.float_to_js x9736)|]);
                              (match x9737 with
                               | Some x9739 ->
                                   ignore
                                     (Ojs.call x9738 "push"
                                        [|(Ojs.float_to_js x9739)|])
                               | None -> ());
                              x9738))|] in
                match Ojs.bool_of_js (Ojs.get_prop_ascii x9741 "async") with
                | false -> `U_b_false (AnonymousInterface1.t_of_js x9741)
                | true -> `U_b_true (AnonymousInterface2.t_of_js x9741)
    let (waitAsync' :
      typedArray:BigInt64Array.t ->
        index:float ->
          value:bigint ->
            ?timeout:float ->
              unit ->
                [ `U_b_false of AnonymousInterface1.t 
                | `U_b_true of AnonymousInterface2.t ])
      =
      fun ~typedArray:(x9742 : BigInt64Array.t) ->
        fun ~index:(x9743 : float) ->
          fun ~value:(x9744 : bigint) ->
            fun ?timeout:(x9745 : float option) ->
              fun () ->
                let x9749 =
                  let x9748 = Ojs.get_prop_ascii Ojs.global "Atomics" in
                  Ojs.call (Ojs.get_prop_ascii x9748 "waitAsync") "apply"
                    [|x9748;((let x9746 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x9746 "push"
                                   [|(BigInt64Array.t_to_js x9742)|]);
                              ignore
                                (Ojs.call x9746 "push"
                                   [|(Ojs.float_to_js x9743)|]);
                              ignore
                                (Ojs.call x9746 "push"
                                   [|(bigint_to_js x9744)|]);
                              (match x9745 with
                               | Some x9747 ->
                                   ignore
                                     (Ojs.call x9746 "push"
                                        [|(Ojs.float_to_js x9747)|])
                               | None -> ());
                              x9746))|] in
                match Ojs.bool_of_js (Ojs.get_prop_ascii x9749 "async") with
                | false -> `U_b_false (AnonymousInterface1.t_of_js x9749)
                | true -> `U_b_true (AnonymousInterface2.t_of_js x9749)
    let (add :
      typedArray:[ `U1 of BigInt64Array.t  | `U2 of BigUint64Array.t ] ->
        index:float -> value:bigint -> bigint)
      =
      fun
        ~typedArray:(x9750 :
                      [ `U1 of BigInt64Array.t  | `U2 of BigUint64Array.t ])
        ->
        fun ~index:(x9753 : float) ->
          fun ~value:(x9754 : bigint) ->
            bigint_of_js
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "Atomics") "add"
                 [|((match x9750 with
                     | `U1 x9751 -> BigInt64Array.t_to_js x9751
                     | `U2 x9752 -> BigUint64Array.t_to_js x9752));(Ojs.float_to_js
                                                                    x9753);(
                   bigint_to_js x9754)|])
    let (and_ :
      typedArray:[ `U1 of BigInt64Array.t  | `U2 of BigUint64Array.t ] ->
        index:float -> value:bigint -> bigint)
      =
      fun
        ~typedArray:(x9755 :
                      [ `U1 of BigInt64Array.t  | `U2 of BigUint64Array.t ])
        ->
        fun ~index:(x9758 : float) ->
          fun ~value:(x9759 : bigint) ->
            bigint_of_js
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "Atomics") "and"
                 [|((match x9755 with
                     | `U1 x9756 -> BigInt64Array.t_to_js x9756
                     | `U2 x9757 -> BigUint64Array.t_to_js x9757));(Ojs.float_to_js
                                                                    x9758);(
                   bigint_to_js x9759)|])
    let (compareExchange :
      typedArray:[ `U1 of BigInt64Array.t  | `U2 of BigUint64Array.t ] ->
        index:float ->
          expectedValue:bigint -> replacementValue:bigint -> bigint)
      =
      fun
        ~typedArray:(x9760 :
                      [ `U1 of BigInt64Array.t  | `U2 of BigUint64Array.t ])
        ->
        fun ~index:(x9763 : float) ->
          fun ~expectedValue:(x9764 : bigint) ->
            fun ~replacementValue:(x9765 : bigint) ->
              bigint_of_js
                (Ojs.call (Ojs.get_prop_ascii Ojs.global "Atomics")
                   "compareExchange"
                   [|((match x9760 with
                       | `U1 x9761 -> BigInt64Array.t_to_js x9761
                       | `U2 x9762 -> BigUint64Array.t_to_js x9762));(
                     Ojs.float_to_js x9763);(bigint_to_js x9764);(bigint_to_js
                                                                    x9765)|])
    let (exchange :
      typedArray:[ `U1 of BigInt64Array.t  | `U2 of BigUint64Array.t ] ->
        index:float -> value:bigint -> bigint)
      =
      fun
        ~typedArray:(x9766 :
                      [ `U1 of BigInt64Array.t  | `U2 of BigUint64Array.t ])
        ->
        fun ~index:(x9769 : float) ->
          fun ~value:(x9770 : bigint) ->
            bigint_of_js
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "Atomics") "exchange"
                 [|((match x9766 with
                     | `U1 x9767 -> BigInt64Array.t_to_js x9767
                     | `U2 x9768 -> BigUint64Array.t_to_js x9768));(Ojs.float_to_js
                                                                    x9769);(
                   bigint_to_js x9770)|])
    let (load :
      typedArray:[ `U1 of BigInt64Array.t  | `U2 of BigUint64Array.t ] ->
        index:float -> bigint)
      =
      fun
        ~typedArray:(x9771 :
                      [ `U1 of BigInt64Array.t  | `U2 of BigUint64Array.t ])
        ->
        fun ~index:(x9774 : float) ->
          bigint_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "Atomics") "load"
               [|((match x9771 with
                   | `U1 x9772 -> BigInt64Array.t_to_js x9772
                   | `U2 x9773 -> BigUint64Array.t_to_js x9773));(Ojs.float_to_js
                                                                    x9774)|])
    let (or_ :
      typedArray:[ `U1 of BigInt64Array.t  | `U2 of BigUint64Array.t ] ->
        index:float -> value:bigint -> bigint)
      =
      fun
        ~typedArray:(x9775 :
                      [ `U1 of BigInt64Array.t  | `U2 of BigUint64Array.t ])
        ->
        fun ~index:(x9778 : float) ->
          fun ~value:(x9779 : bigint) ->
            bigint_of_js
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "Atomics") "or"
                 [|((match x9775 with
                     | `U1 x9776 -> BigInt64Array.t_to_js x9776
                     | `U2 x9777 -> BigUint64Array.t_to_js x9777));(Ojs.float_to_js
                                                                    x9778);(
                   bigint_to_js x9779)|])
    let (store :
      typedArray:[ `U1 of BigInt64Array.t  | `U2 of BigUint64Array.t ] ->
        index:float -> value:bigint -> bigint)
      =
      fun
        ~typedArray:(x9780 :
                      [ `U1 of BigInt64Array.t  | `U2 of BigUint64Array.t ])
        ->
        fun ~index:(x9783 : float) ->
          fun ~value:(x9784 : bigint) ->
            bigint_of_js
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "Atomics") "store"
                 [|((match x9780 with
                     | `U1 x9781 -> BigInt64Array.t_to_js x9781
                     | `U2 x9782 -> BigUint64Array.t_to_js x9782));(Ojs.float_to_js
                                                                    x9783);(
                   bigint_to_js x9784)|])
    let (sub :
      typedArray:[ `U1 of BigInt64Array.t  | `U2 of BigUint64Array.t ] ->
        index:float -> value:bigint -> bigint)
      =
      fun
        ~typedArray:(x9785 :
                      [ `U1 of BigInt64Array.t  | `U2 of BigUint64Array.t ])
        ->
        fun ~index:(x9788 : float) ->
          fun ~value:(x9789 : bigint) ->
            bigint_of_js
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "Atomics") "sub"
                 [|((match x9785 with
                     | `U1 x9786 -> BigInt64Array.t_to_js x9786
                     | `U2 x9787 -> BigUint64Array.t_to_js x9787));(Ojs.float_to_js
                                                                    x9788);(
                   bigint_to_js x9789)|])
    let (wait :
      typedArray:BigInt64Array.t ->
        index:float ->
          value:bigint ->
            ?timeout:float ->
              unit -> [ `L_s133_timed_out  | `L_s95_not_equal  | `L_s99_ok ])
      =
      fun ~typedArray:(x9790 : BigInt64Array.t) ->
        fun ~index:(x9791 : float) ->
          fun ~value:(x9792 : bigint) ->
            fun ?timeout:(x9793 : float option) ->
              fun () ->
                let x9797 =
                  let x9796 = Ojs.get_prop_ascii Ojs.global "Atomics" in
                  Ojs.call (Ojs.get_prop_ascii x9796 "wait") "apply"
                    [|x9796;((let x9794 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x9794 "push"
                                   [|(BigInt64Array.t_to_js x9790)|]);
                              ignore
                                (Ojs.call x9794 "push"
                                   [|(Ojs.float_to_js x9791)|]);
                              ignore
                                (Ojs.call x9794 "push"
                                   [|(bigint_to_js x9792)|]);
                              (match x9793 with
                               | Some x9795 ->
                                   ignore
                                     (Ojs.call x9794 "push"
                                        [|(Ojs.float_to_js x9795)|])
                               | None -> ());
                              x9794))|] in
                match Ojs.string_of_js x9797 with
                | "timed-out" -> `L_s133_timed_out
                | "not-equal" -> `L_s95_not_equal
                | "ok" -> `L_s99_ok
                | _ -> assert false
    let (notify :
      typedArray:BigInt64Array.t ->
        index:float -> ?count:float -> unit -> float)
      =
      fun ~typedArray:(x9798 : BigInt64Array.t) ->
        fun ~index:(x9799 : float) ->
          fun ?count:(x9800 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x9803 = Ojs.get_prop_ascii Ojs.global "Atomics" in
                 Ojs.call (Ojs.get_prop_ascii x9803 "notify") "apply"
                   [|x9803;((let x9801 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x9801 "push"
                                  [|(BigInt64Array.t_to_js x9798)|]);
                             ignore
                               (Ojs.call x9801 "push"
                                  [|(Ojs.float_to_js x9799)|]);
                             (match x9800 with
                              | Some x9802 ->
                                  ignore
                                    (Ojs.call x9801 "push"
                                       [|(Ojs.float_to_js x9802)|])
                              | None -> ());
                             x9801))|])
    let (xor :
      typedArray:[ `U1 of BigInt64Array.t  | `U2 of BigUint64Array.t ] ->
        index:float -> value:bigint -> bigint)
      =
      fun
        ~typedArray:(x9804 :
                      [ `U1 of BigInt64Array.t  | `U2 of BigUint64Array.t ])
        ->
        fun ~index:(x9807 : float) ->
          fun ~value:(x9808 : bigint) ->
            bigint_of_js
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "Atomics") "xor"
                 [|((match x9804 with
                     | `U1 x9805 -> BigInt64Array.t_to_js x9805
                     | `U2 x9806 -> BigUint64Array.t_to_js x9806));(Ojs.float_to_js
                                                                    x9807);(
                   bigint_to_js x9808)|])
    let (add' :
      typedArray:[ `U1 of Int8Array.t  | `U2 of Uint8Array.t 
                 | `U3 of Int16Array.t  | `U4 of Uint16Array.t 
                 | `U5 of Int32Array.t  | `U6 of Uint32Array.t ]
        -> index:float -> value:float -> float)
      =
      fun
        ~typedArray:(x9809 :
                      [ `U1 of Int8Array.t  | `U2 of Uint8Array.t 
                      | `U3 of Int16Array.t  | `U4 of Uint16Array.t 
                      | `U5 of Int32Array.t  | `U6 of Uint32Array.t ])
        ->
        fun ~index:(x9816 : float) ->
          fun ~value:(x9817 : float) ->
            Ojs.float_of_js
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "Atomics") "add"
                 [|((match x9809 with
                     | `U1 x9810 -> Int8Array.t_to_js x9810
                     | `U2 x9811 -> Uint8Array.t_to_js x9811
                     | `U3 x9812 -> Int16Array.t_to_js x9812
                     | `U4 x9813 -> Uint16Array.t_to_js x9813
                     | `U5 x9814 -> Int32Array.t_to_js x9814
                     | `U6 x9815 -> Uint32Array.t_to_js x9815));(Ojs.float_to_js
                                                                   x9816);(
                   Ojs.float_to_js x9817)|])
    let (and_' :
      typedArray:[ `U1 of Int8Array.t  | `U2 of Uint8Array.t 
                 | `U3 of Int16Array.t  | `U4 of Uint16Array.t 
                 | `U5 of Int32Array.t  | `U6 of Uint32Array.t ]
        -> index:float -> value:float -> float)
      =
      fun
        ~typedArray:(x9818 :
                      [ `U1 of Int8Array.t  | `U2 of Uint8Array.t 
                      | `U3 of Int16Array.t  | `U4 of Uint16Array.t 
                      | `U5 of Int32Array.t  | `U6 of Uint32Array.t ])
        ->
        fun ~index:(x9825 : float) ->
          fun ~value:(x9826 : float) ->
            Ojs.float_of_js
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "Atomics") "and"
                 [|((match x9818 with
                     | `U1 x9819 -> Int8Array.t_to_js x9819
                     | `U2 x9820 -> Uint8Array.t_to_js x9820
                     | `U3 x9821 -> Int16Array.t_to_js x9821
                     | `U4 x9822 -> Uint16Array.t_to_js x9822
                     | `U5 x9823 -> Int32Array.t_to_js x9823
                     | `U6 x9824 -> Uint32Array.t_to_js x9824));(Ojs.float_to_js
                                                                   x9825);(
                   Ojs.float_to_js x9826)|])
    let (compareExchange' :
      typedArray:[ `U1 of Int8Array.t  | `U2 of Uint8Array.t 
                 | `U3 of Int16Array.t  | `U4 of Uint16Array.t 
                 | `U5 of Int32Array.t  | `U6 of Uint32Array.t ]
        ->
        index:float -> expectedValue:float -> replacementValue:float -> float)
      =
      fun
        ~typedArray:(x9827 :
                      [ `U1 of Int8Array.t  | `U2 of Uint8Array.t 
                      | `U3 of Int16Array.t  | `U4 of Uint16Array.t 
                      | `U5 of Int32Array.t  | `U6 of Uint32Array.t ])
        ->
        fun ~index:(x9834 : float) ->
          fun ~expectedValue:(x9835 : float) ->
            fun ~replacementValue:(x9836 : float) ->
              Ojs.float_of_js
                (Ojs.call (Ojs.get_prop_ascii Ojs.global "Atomics")
                   "compareExchange"
                   [|((match x9827 with
                       | `U1 x9828 -> Int8Array.t_to_js x9828
                       | `U2 x9829 -> Uint8Array.t_to_js x9829
                       | `U3 x9830 -> Int16Array.t_to_js x9830
                       | `U4 x9831 -> Uint16Array.t_to_js x9831
                       | `U5 x9832 -> Int32Array.t_to_js x9832
                       | `U6 x9833 -> Uint32Array.t_to_js x9833));(Ojs.float_to_js
                                                                    x9834);(
                     Ojs.float_to_js x9835);(Ojs.float_to_js x9836)|])
    let (exchange' :
      typedArray:[ `U1 of Int8Array.t  | `U2 of Uint8Array.t 
                 | `U3 of Int16Array.t  | `U4 of Uint16Array.t 
                 | `U5 of Int32Array.t  | `U6 of Uint32Array.t ]
        -> index:float -> value:float -> float)
      =
      fun
        ~typedArray:(x9837 :
                      [ `U1 of Int8Array.t  | `U2 of Uint8Array.t 
                      | `U3 of Int16Array.t  | `U4 of Uint16Array.t 
                      | `U5 of Int32Array.t  | `U6 of Uint32Array.t ])
        ->
        fun ~index:(x9844 : float) ->
          fun ~value:(x9845 : float) ->
            Ojs.float_of_js
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "Atomics") "exchange"
                 [|((match x9837 with
                     | `U1 x9838 -> Int8Array.t_to_js x9838
                     | `U2 x9839 -> Uint8Array.t_to_js x9839
                     | `U3 x9840 -> Int16Array.t_to_js x9840
                     | `U4 x9841 -> Uint16Array.t_to_js x9841
                     | `U5 x9842 -> Int32Array.t_to_js x9842
                     | `U6 x9843 -> Uint32Array.t_to_js x9843));(Ojs.float_to_js
                                                                   x9844);(
                   Ojs.float_to_js x9845)|])
    let (isLockFree : float -> bool) =
      fun (x9846 : float) ->
        Ojs.bool_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Atomics") "isLockFree"
             [|(Ojs.float_to_js x9846)|])
    let (load' :
      typedArray:[ `U1 of Int8Array.t  | `U2 of Uint8Array.t 
                 | `U3 of Int16Array.t  | `U4 of Uint16Array.t 
                 | `U5 of Int32Array.t  | `U6 of Uint32Array.t ]
        -> index:float -> float)
      =
      fun
        ~typedArray:(x9847 :
                      [ `U1 of Int8Array.t  | `U2 of Uint8Array.t 
                      | `U3 of Int16Array.t  | `U4 of Uint16Array.t 
                      | `U5 of Int32Array.t  | `U6 of Uint32Array.t ])
        ->
        fun ~index:(x9854 : float) ->
          Ojs.float_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "Atomics") "load"
               [|((match x9847 with
                   | `U1 x9848 -> Int8Array.t_to_js x9848
                   | `U2 x9849 -> Uint8Array.t_to_js x9849
                   | `U3 x9850 -> Int16Array.t_to_js x9850
                   | `U4 x9851 -> Uint16Array.t_to_js x9851
                   | `U5 x9852 -> Int32Array.t_to_js x9852
                   | `U6 x9853 -> Uint32Array.t_to_js x9853));(Ojs.float_to_js
                                                                 x9854)|])
    let (or_' :
      typedArray:[ `U1 of Int8Array.t  | `U2 of Uint8Array.t 
                 | `U3 of Int16Array.t  | `U4 of Uint16Array.t 
                 | `U5 of Int32Array.t  | `U6 of Uint32Array.t ]
        -> index:float -> value:float -> float)
      =
      fun
        ~typedArray:(x9855 :
                      [ `U1 of Int8Array.t  | `U2 of Uint8Array.t 
                      | `U3 of Int16Array.t  | `U4 of Uint16Array.t 
                      | `U5 of Int32Array.t  | `U6 of Uint32Array.t ])
        ->
        fun ~index:(x9862 : float) ->
          fun ~value:(x9863 : float) ->
            Ojs.float_of_js
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "Atomics") "or"
                 [|((match x9855 with
                     | `U1 x9856 -> Int8Array.t_to_js x9856
                     | `U2 x9857 -> Uint8Array.t_to_js x9857
                     | `U3 x9858 -> Int16Array.t_to_js x9858
                     | `U4 x9859 -> Uint16Array.t_to_js x9859
                     | `U5 x9860 -> Int32Array.t_to_js x9860
                     | `U6 x9861 -> Uint32Array.t_to_js x9861));(Ojs.float_to_js
                                                                   x9862);(
                   Ojs.float_to_js x9863)|])
    let (store' :
      typedArray:[ `U1 of Int8Array.t  | `U2 of Uint8Array.t 
                 | `U3 of Int16Array.t  | `U4 of Uint16Array.t 
                 | `U5 of Int32Array.t  | `U6 of Uint32Array.t ]
        -> index:float -> value:float -> float)
      =
      fun
        ~typedArray:(x9864 :
                      [ `U1 of Int8Array.t  | `U2 of Uint8Array.t 
                      | `U3 of Int16Array.t  | `U4 of Uint16Array.t 
                      | `U5 of Int32Array.t  | `U6 of Uint32Array.t ])
        ->
        fun ~index:(x9871 : float) ->
          fun ~value:(x9872 : float) ->
            Ojs.float_of_js
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "Atomics") "store"
                 [|((match x9864 with
                     | `U1 x9865 -> Int8Array.t_to_js x9865
                     | `U2 x9866 -> Uint8Array.t_to_js x9866
                     | `U3 x9867 -> Int16Array.t_to_js x9867
                     | `U4 x9868 -> Uint16Array.t_to_js x9868
                     | `U5 x9869 -> Int32Array.t_to_js x9869
                     | `U6 x9870 -> Uint32Array.t_to_js x9870));(Ojs.float_to_js
                                                                   x9871);(
                   Ojs.float_to_js x9872)|])
    let (sub' :
      typedArray:[ `U1 of Int8Array.t  | `U2 of Uint8Array.t 
                 | `U3 of Int16Array.t  | `U4 of Uint16Array.t 
                 | `U5 of Int32Array.t  | `U6 of Uint32Array.t ]
        -> index:float -> value:float -> float)
      =
      fun
        ~typedArray:(x9873 :
                      [ `U1 of Int8Array.t  | `U2 of Uint8Array.t 
                      | `U3 of Int16Array.t  | `U4 of Uint16Array.t 
                      | `U5 of Int32Array.t  | `U6 of Uint32Array.t ])
        ->
        fun ~index:(x9880 : float) ->
          fun ~value:(x9881 : float) ->
            Ojs.float_of_js
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "Atomics") "sub"
                 [|((match x9873 with
                     | `U1 x9874 -> Int8Array.t_to_js x9874
                     | `U2 x9875 -> Uint8Array.t_to_js x9875
                     | `U3 x9876 -> Int16Array.t_to_js x9876
                     | `U4 x9877 -> Uint16Array.t_to_js x9877
                     | `U5 x9878 -> Int32Array.t_to_js x9878
                     | `U6 x9879 -> Uint32Array.t_to_js x9879));(Ojs.float_to_js
                                                                   x9880);(
                   Ojs.float_to_js x9881)|])
    let (wait' :
      typedArray:Int32Array.t ->
        index:float ->
          value:float ->
            ?timeout:float ->
              unit -> [ `L_s133_timed_out  | `L_s95_not_equal  | `L_s99_ok ])
      =
      fun ~typedArray:(x9882 : Int32Array.t) ->
        fun ~index:(x9883 : float) ->
          fun ~value:(x9884 : float) ->
            fun ?timeout:(x9885 : float option) ->
              fun () ->
                let x9889 =
                  let x9888 = Ojs.get_prop_ascii Ojs.global "Atomics" in
                  Ojs.call (Ojs.get_prop_ascii x9888 "wait") "apply"
                    [|x9888;((let x9886 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x9886 "push"
                                   [|(Int32Array.t_to_js x9882)|]);
                              ignore
                                (Ojs.call x9886 "push"
                                   [|(Ojs.float_to_js x9883)|]);
                              ignore
                                (Ojs.call x9886 "push"
                                   [|(Ojs.float_to_js x9884)|]);
                              (match x9885 with
                               | Some x9887 ->
                                   ignore
                                     (Ojs.call x9886 "push"
                                        [|(Ojs.float_to_js x9887)|])
                               | None -> ());
                              x9886))|] in
                match Ojs.string_of_js x9889 with
                | "timed-out" -> `L_s133_timed_out
                | "not-equal" -> `L_s95_not_equal
                | "ok" -> `L_s99_ok
                | _ -> assert false
    let (notify' :
      typedArray:Int32Array.t -> index:float -> ?count:float -> unit -> float)
      =
      fun ~typedArray:(x9890 : Int32Array.t) ->
        fun ~index:(x9891 : float) ->
          fun ?count:(x9892 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x9895 = Ojs.get_prop_ascii Ojs.global "Atomics" in
                 Ojs.call (Ojs.get_prop_ascii x9895 "notify") "apply"
                   [|x9895;((let x9893 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x9893 "push"
                                  [|(Int32Array.t_to_js x9890)|]);
                             ignore
                               (Ojs.call x9893 "push"
                                  [|(Ojs.float_to_js x9891)|]);
                             (match x9892 with
                              | Some x9894 ->
                                  ignore
                                    (Ojs.call x9893 "push"
                                       [|(Ojs.float_to_js x9894)|])
                              | None -> ());
                             x9893))|])
    let (xor' :
      typedArray:[ `U1 of Int8Array.t  | `U2 of Uint8Array.t 
                 | `U3 of Int16Array.t  | `U4 of Uint16Array.t 
                 | `U5 of Int32Array.t  | `U6 of Uint32Array.t ]
        -> index:float -> value:float -> float)
      =
      fun
        ~typedArray:(x9896 :
                      [ `U1 of Int8Array.t  | `U2 of Uint8Array.t 
                      | `U3 of Int16Array.t  | `U4 of Uint16Array.t 
                      | `U5 of Int32Array.t  | `U6 of Uint32Array.t ])
        ->
        fun ~index:(x9903 : float) ->
          fun ~value:(x9904 : float) ->
            Ojs.float_of_js
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "Atomics") "xor"
                 [|((match x9896 with
                     | `U1 x9897 -> Int8Array.t_to_js x9897
                     | `U2 x9898 -> Uint8Array.t_to_js x9898
                     | `U3 x9899 -> Int16Array.t_to_js x9899
                     | `U4 x9900 -> Uint16Array.t_to_js x9900
                     | `U5 x9901 -> Int32Array.t_to_js x9901
                     | `U6 x9902 -> Uint32Array.t_to_js x9902));(Ojs.float_to_js
                                                                   x9903);(
                   Ojs.float_to_js x9904)|])
  end
module AsyncIterator =
  struct
    type ('T, 'TReturn, 'TNext) t =
      [ `AsyncIterator of ('T * 'TReturn * 'TNext) ] intf
    let rec t_of_js :
      'T 'TReturn 'TNext .
        (Ojs.t -> 'T) ->
          (Ojs.t -> 'TReturn) ->
            (Ojs.t -> 'TNext) -> Ojs.t -> ('T, 'TReturn, 'TNext) t
      = fun _T -> fun _TReturn -> fun _TNext -> Obj.magic
    and t_to_js :
      'T 'TReturn 'TNext .
        ('T -> Ojs.t) ->
          ('TReturn -> Ojs.t) ->
            ('TNext -> Ojs.t) -> ('T, 'TReturn, 'TNext) t -> Ojs.t
      = fun _T -> fun _TReturn -> fun _TNext -> Obj.magic
    type ('T, 'TReturn) t_2 = ('T, 'TReturn, undefined) t
    let rec t_2_of_js :
      'T 'TReturn .
        (Ojs.t -> 'T) -> (Ojs.t -> 'TReturn) -> Ojs.t -> ('T, 'TReturn) t_2
      =
      fun (type __T) ->
        fun (type __TReturn) ->
          fun (__T_of_js : Ojs.t -> __T) ->
            fun (__TReturn_of_js : Ojs.t -> __TReturn) ->
              fun (x9909 : Ojs.t) ->
                t_of_js __T_of_js __TReturn_of_js undefined_of_js x9909
    and t_2_to_js :
      'T 'TReturn .
        ('T -> Ojs.t) -> ('TReturn -> Ojs.t) -> ('T, 'TReturn) t_2 -> Ojs.t
      =
      fun (type __T) ->
        fun (type __TReturn) ->
          fun (__T_to_js : __T -> Ojs.t) ->
            fun (__TReturn_to_js : __TReturn -> Ojs.t) ->
              fun (x9905 : (__T, __TReturn, undefined) t) ->
                t_to_js __T_to_js __TReturn_to_js undefined_to_js x9905
    type 'T t_1 = ('T, any, undefined) t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 =
      fun (type __T) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x9917 : Ojs.t) ->
            t_of_js __T_of_js any_of_js undefined_of_js x9917
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t =
      fun (type __T) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x9913 : (__T, any, undefined) t) ->
            t_to_js __T_to_js any_to_js undefined_to_js x9913
    type ('T, 'TReturn, 'TNext) tags =
      [ `AsyncIterator of ('T * 'TReturn * 'TNext) ]
    type ('T, 'TReturn) tags_2 = ('T, 'TReturn, undefined) tags
    type 'T tags_1 = ('T, any, undefined) tags
    type ('tags, 'T, 'TReturn, 'TNext) this =
      'tags intf constraint 'tags =
                  [> `AsyncIterator of ('T * 'TReturn * 'TNext) ]
    let rec this_of_js :
      'tags 'T 'TReturn 'TNext .
        (Ojs.t -> 'tags) ->
          (Ojs.t -> 'T) ->
            (Ojs.t -> 'TReturn) ->
              (Ojs.t -> 'TNext) ->
                Ojs.t -> ('tags, 'T, 'TReturn, 'TNext) this
      =
      fun (type __tags) ->
        fun (type __T) ->
          fun (type __TReturn) ->
            fun (type __TNext) ->
              fun (__tags_of_js : Ojs.t -> __tags) ->
                fun (__T_of_js : Ojs.t -> __T) ->
                  fun (__TReturn_of_js : Ojs.t -> __TReturn) ->
                    fun (__TNext_of_js : Ojs.t -> __TNext) ->
                      fun (x9923 : Ojs.t) -> intf_of_js __tags_of_js x9923
    and this_to_js :
      'tags 'T 'TReturn 'TNext .
        ('tags -> Ojs.t) ->
          ('T -> Ojs.t) ->
            ('TReturn -> Ojs.t) ->
              ('TNext -> Ojs.t) ->
                ('tags, 'T, 'TReturn, 'TNext) this -> Ojs.t
      =
      fun (type __tags) ->
        fun (type __T) ->
          fun (type __TReturn) ->
            fun (type __TNext) ->
              fun (__tags_to_js : __tags -> Ojs.t) ->
                fun (__T_to_js : __T -> Ojs.t) ->
                  fun (__TReturn_to_js : __TReturn -> Ojs.t) ->
                    fun (__TNext_to_js : __TNext -> Ojs.t) ->
                      fun (x9921 : __tags intf) ->
                        intf_to_js __tags_to_js x9921
    let (next :
      ('tags, 'T, 'TReturn, 'TNext) this ->
        args:any list -> ('T, 'TReturn) IteratorResult.t Promise.t)
      =
      fun (x9928 : ('tags, 'T, 'TReturn, 'TNext) this) ->
        fun ~args:(x9925 : any list) ->
          Promise.t_of_js
            (fun (x9934 : Ojs.t) ->
               IteratorResult.t_of_js Obj.magic Obj.magic x9934)
            (let x9933 =
               this_to_js Obj.magic Obj.magic Obj.magic Obj.magic x9928 in
             Ojs.call (Ojs.get_prop_ascii x9933 "next") "apply"
               [|x9933;((let x9926 =
                           Ojs.new_obj
                             (Ojs.get_prop_ascii Ojs.global "Array") 
                             [||] in
                         List.iter
                           (fun (x9927 : any) ->
                              ignore
                                (Ojs.call x9926 "push" [|(any_to_js x9927)|]))
                           x9925;
                         x9926))|])
    let (return :
      ('tags, 'T, 'TReturn, 'TNext) this ->
        ?value:[ `U1 of 'TReturn  | `U2 of 'TReturn PromiseLike.t ] ->
          unit -> ('T, 'TReturn) IteratorResult.t Promise.t)
      =
      fun (x9943 : ('tags, 'T, 'TReturn, 'TNext) this) ->
        fun
          ?value:(x9937 :
                   [ `U1 of 'TReturn  | `U2 of 'TReturn PromiseLike.t ]
                     option)
          ->
          fun () ->
            Promise.t_of_js
              (fun (x9949 : Ojs.t) ->
                 IteratorResult.t_of_js Obj.magic Obj.magic x9949)
              (let x9948 =
                 this_to_js Obj.magic Obj.magic Obj.magic Obj.magic x9943 in
               Ojs.call (Ojs.get_prop_ascii x9948 "return") "apply"
                 [|x9948;((let x9938 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x9937 with
                            | Some x9939 ->
                                ignore
                                  (Ojs.call x9938 "push"
                                     [|((match x9939 with
                                         | `U1 x9940 -> Obj.magic x9940
                                         | `U2 x9941 ->
                                             PromiseLike.t_to_js Obj.magic
                                               x9941))|])
                            | None -> ());
                           x9938))|])
    let (throw :
      ('tags, 'T, 'TReturn, 'TNext) this ->
        ?e:any -> unit -> ('T, 'TReturn) IteratorResult.t Promise.t)
      =
      fun (x9955 : ('tags, 'T, 'TReturn, 'TNext) this) ->
        fun ?e:(x9952 : any option) ->
          fun () ->
            Promise.t_of_js
              (fun (x9961 : Ojs.t) ->
                 IteratorResult.t_of_js Obj.magic Obj.magic x9961)
              (let x9960 =
                 this_to_js Obj.magic Obj.magic Obj.magic Obj.magic x9955 in
               Ojs.call (Ojs.get_prop_ascii x9960 "throw") "apply"
                 [|x9960;((let x9953 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x9952 with
                            | Some x9954 ->
                                ignore
                                  (Ojs.call x9953 "push"
                                     [|(any_to_js x9954)|])
                            | None -> ());
                           x9953))|])
    let cast_from = Obj.magic
  end
module AsyncIterableIterator =
  struct
    type 'T t =
      [ `AsyncIterableIterator of 'T 
      | `AsyncIterator of ('T * any * undefined) ] intf
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun _T -> Obj.magic
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun _T -> Obj.magic
    type 'T tags =
      [ `AsyncIterableIterator of 'T 
      | `AsyncIterator of ('T * any * undefined) ]
    type ('tags, 'T) this =
      'tags intf constraint 'tags = [> `AsyncIterableIterator of 'T ]
    let rec this_of_js :
      'tags 'T .
        (Ojs.t -> 'tags) -> (Ojs.t -> 'T) -> Ojs.t -> ('tags, 'T) this
      =
      fun (type __tags) ->
        fun (type __T) ->
          fun (__tags_of_js : Ojs.t -> __tags) ->
            fun (__T_of_js : Ojs.t -> __T) ->
              fun (x9966 : Ojs.t) -> intf_of_js __tags_of_js x9966
    and this_to_js :
      'tags 'T .
        ('tags -> Ojs.t) -> ('T -> Ojs.t) -> ('tags, 'T) this -> Ojs.t
      =
      fun (type __tags) ->
        fun (type __T) ->
          fun (__tags_to_js : __tags -> Ojs.t) ->
            fun (__T_to_js : __T -> Ojs.t) ->
              fun (x9964 : __tags intf) -> intf_to_js __tags_to_js x9964
    let cast_from = Obj.magic
  end
module AsyncIterable =
  struct
    type 'T t = [ `AsyncIterable of 'T ] intf
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun _T -> Obj.magic
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun _T -> Obj.magic
    type 'T tags = [ `AsyncIterable of 'T ]
    type ('tags, 'T) this =
      'tags intf constraint 'tags = [> `AsyncIterable of 'T ]
    let rec this_of_js :
      'tags 'T .
        (Ojs.t -> 'tags) -> (Ojs.t -> 'T) -> Ojs.t -> ('tags, 'T) this
      =
      fun (type __tags) ->
        fun (type __T) ->
          fun (__tags_of_js : Ojs.t -> __tags) ->
            fun (__T_of_js : Ojs.t -> __T) ->
              fun (x9970 : Ojs.t) -> intf_of_js __tags_of_js x9970
    and this_to_js :
      'tags 'T .
        ('tags -> Ojs.t) -> ('T -> Ojs.t) -> ('tags, 'T) this -> Ojs.t
      =
      fun (type __tags) ->
        fun (type __T) ->
          fun (__tags_to_js : __tags -> Ojs.t) ->
            fun (__T_to_js : __T -> Ojs.t) ->
              fun (x9968 : __tags intf) -> intf_to_js __tags_to_js x9968
    let cast_from = Obj.magic
  end
module AsyncGenerator =
  struct
    type ('T, 'TReturn, 'TNext) t =
      [ `AsyncGenerator of ('T * 'TReturn * 'TNext) 
      | `AsyncIterator of ('T * 'TReturn * 'TNext) ] intf
    let rec t_of_js :
      'T 'TReturn 'TNext .
        (Ojs.t -> 'T) ->
          (Ojs.t -> 'TReturn) ->
            (Ojs.t -> 'TNext) -> Ojs.t -> ('T, 'TReturn, 'TNext) t
      = fun _T -> fun _TReturn -> fun _TNext -> Obj.magic
    and t_to_js :
      'T 'TReturn 'TNext .
        ('T -> Ojs.t) ->
          ('TReturn -> Ojs.t) ->
            ('TNext -> Ojs.t) -> ('T, 'TReturn, 'TNext) t -> Ojs.t
      = fun _T -> fun _TReturn -> fun _TNext -> Obj.magic
    type ('T, 'TReturn) t_2 = ('T, 'TReturn, unknown) t
    let rec t_2_of_js :
      'T 'TReturn .
        (Ojs.t -> 'T) -> (Ojs.t -> 'TReturn) -> Ojs.t -> ('T, 'TReturn) t_2
      =
      fun (type __T) ->
        fun (type __TReturn) ->
          fun (__T_of_js : Ojs.t -> __T) ->
            fun (__TReturn_of_js : Ojs.t -> __TReturn) ->
              fun (x9976 : Ojs.t) ->
                t_of_js __T_of_js __TReturn_of_js unknown_of_js x9976
    and t_2_to_js :
      'T 'TReturn .
        ('T -> Ojs.t) -> ('TReturn -> Ojs.t) -> ('T, 'TReturn) t_2 -> Ojs.t
      =
      fun (type __T) ->
        fun (type __TReturn) ->
          fun (__T_to_js : __T -> Ojs.t) ->
            fun (__TReturn_to_js : __TReturn -> Ojs.t) ->
              fun (x9972 : (__T, __TReturn, unknown) t) ->
                t_to_js __T_to_js __TReturn_to_js unknown_to_js x9972
    type 'T t_1 = ('T, any, unknown) t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 =
      fun (type __T) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x9984 : Ojs.t) ->
            t_of_js __T_of_js any_of_js unknown_of_js x9984
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t =
      fun (type __T) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x9980 : (__T, any, unknown) t) ->
            t_to_js __T_to_js any_to_js unknown_to_js x9980
    type t_0 = (unknown, any, unknown) t
    let rec t_0_of_js : Ojs.t -> t_0 =
      fun (x9992 : Ojs.t) ->
        t_of_js unknown_of_js any_of_js unknown_of_js x9992
    and t_0_to_js : t_0 -> Ojs.t =
      fun (x9988 : (unknown, any, unknown) t) ->
        t_to_js unknown_to_js any_to_js unknown_to_js x9988
    type ('T, 'TReturn, 'TNext) tags =
      [ `AsyncGenerator of ('T * 'TReturn * 'TNext) 
      | `AsyncIterator of ('T * 'TReturn * 'TNext) ]
    type ('T, 'TReturn) tags_2 = ('T, 'TReturn, unknown) tags
    type 'T tags_1 = ('T, any, unknown) tags
    type tags_0 = (unknown, any, unknown) tags
    type ('tags, 'T, 'TReturn, 'TNext) this =
      'tags intf constraint 'tags =
                  [> `AsyncGenerator of ('T * 'TReturn * 'TNext) ]
    let rec this_of_js :
      'tags 'T 'TReturn 'TNext .
        (Ojs.t -> 'tags) ->
          (Ojs.t -> 'T) ->
            (Ojs.t -> 'TReturn) ->
              (Ojs.t -> 'TNext) ->
                Ojs.t -> ('tags, 'T, 'TReturn, 'TNext) this
      =
      fun (type __tags) ->
        fun (type __T) ->
          fun (type __TReturn) ->
            fun (type __TNext) ->
              fun (__tags_of_js : Ojs.t -> __tags) ->
                fun (__T_of_js : Ojs.t -> __T) ->
                  fun (__TReturn_of_js : Ojs.t -> __TReturn) ->
                    fun (__TNext_of_js : Ojs.t -> __TNext) ->
                      fun (x9998 : Ojs.t) -> intf_of_js __tags_of_js x9998
    and this_to_js :
      'tags 'T 'TReturn 'TNext .
        ('tags -> Ojs.t) ->
          ('T -> Ojs.t) ->
            ('TReturn -> Ojs.t) ->
              ('TNext -> Ojs.t) ->
                ('tags, 'T, 'TReturn, 'TNext) this -> Ojs.t
      =
      fun (type __tags) ->
        fun (type __T) ->
          fun (type __TReturn) ->
            fun (type __TNext) ->
              fun (__tags_to_js : __tags -> Ojs.t) ->
                fun (__T_to_js : __T -> Ojs.t) ->
                  fun (__TReturn_to_js : __TReturn -> Ojs.t) ->
                    fun (__TNext_to_js : __TNext -> Ojs.t) ->
                      fun (x9996 : __tags intf) ->
                        intf_to_js __tags_to_js x9996
    let (next :
      ('tags, 'T, 'TReturn, 'TNext) this ->
        args:any list -> ('T, 'TReturn) IteratorResult.t Promise.t)
      =
      fun (x10003 : ('tags, 'T, 'TReturn, 'TNext) this) ->
        fun ~args:(x10000 : any list) ->
          Promise.t_of_js
            (fun (x10009 : Ojs.t) ->
               IteratorResult.t_of_js Obj.magic Obj.magic x10009)
            (let x10008 =
               this_to_js Obj.magic Obj.magic Obj.magic Obj.magic x10003 in
             Ojs.call (Ojs.get_prop_ascii x10008 "next") "apply"
               [|x10008;((let x10001 =
                            Ojs.new_obj
                              (Ojs.get_prop_ascii Ojs.global "Array") 
                              [||] in
                          List.iter
                            (fun (x10002 : any) ->
                               ignore
                                 (Ojs.call x10001 "push"
                                    [|(any_to_js x10002)|])) x10000;
                          x10001))|])
    let (return :
      ('tags, 'T, 'TReturn, 'TNext) this ->
        value:[ `U1 of 'TReturn  | `U2 of 'TReturn PromiseLike.t ] ->
          ('T, 'TReturn) IteratorResult.t Promise.t)
      =
      fun (x10016 : ('tags, 'T, 'TReturn, 'TNext) this) ->
        fun
          ~value:(x10012 :
                   [ `U1 of 'TReturn  | `U2 of 'TReturn PromiseLike.t ])
          ->
          Promise.t_of_js
            (fun (x10021 : Ojs.t) ->
               IteratorResult.t_of_js Obj.magic Obj.magic x10021)
            (Ojs.call
               (this_to_js Obj.magic Obj.magic Obj.magic Obj.magic x10016)
               "return"
               [|((match x10012 with
                   | `U1 x10013 -> Obj.magic x10013
                   | `U2 x10014 -> PromiseLike.t_to_js Obj.magic x10014))|])
    let (throw :
      ('tags, 'T, 'TReturn, 'TNext) this ->
        e:any -> ('T, 'TReturn) IteratorResult.t Promise.t)
      =
      fun (x10025 : ('tags, 'T, 'TReturn, 'TNext) this) ->
        fun ~e:(x10024 : any) ->
          Promise.t_of_js
            (fun (x10030 : Ojs.t) ->
               IteratorResult.t_of_js Obj.magic Obj.magic x10030)
            (Ojs.call
               (this_to_js Obj.magic Obj.magic Obj.magic Obj.magic x10025)
               "throw" [|(any_to_js x10024)|])
    let cast_from = Obj.magic
  end
module AsyncGeneratorFunction =
  struct
    type t = [ `AsyncGeneratorFunction ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type tags = [ `AsyncGeneratorFunction ]
    type 'tags this =
      'tags intf constraint 'tags = [> `AsyncGeneratorFunction ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x10035 : Ojs.t) -> intf_of_js __tags_of_js x10035
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x10033 : __tags intf) -> intf_to_js __tags_to_js x10033
    let (create : 'tags this -> args:any list -> AsyncGenerator.t_0) =
      fun (x10040 : 'tags this) ->
        fun ~args:(x10037 : any list) ->
          AsyncGenerator.t_0_of_js
            (Ojs.new_obj_arr (this_to_js Obj.magic x10040)
               (let x10038 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                List.iter
                  (fun (x10039 : any) ->
                     ignore (Ojs.call x10038 "push" [|(any_to_js x10039)|]))
                  x10037;
                x10038))
    let (apply : 'tags this -> args:any list -> AsyncGenerator.t_0) =
      fun (x10045 : 'tags this) ->
        fun ~args:(x10042 : any list) ->
          AsyncGenerator.t_0_of_js
            (Ojs.call (this_to_js Obj.magic x10045) "apply"
               [|Ojs.null;((let x10043 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            List.iter
                              (fun (x10044 : any) ->
                                 ignore
                                   (Ojs.call x10043 "push"
                                      [|(any_to_js x10044)|])) x10042;
                            x10043))|])
    let (get_length : 'tags this -> float) =
      fun (x10047 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x10047) "length")
    let (get_name : 'tags this -> string) =
      fun (x10049 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x10049) "name")
    let (get_prototype : 'tags this -> AsyncGenerator.t_0) =
      fun (x10051 : 'tags this) ->
        AsyncGenerator.t_0_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x10051) "prototype")
    let cast_from = Obj.magic
  end
module AsyncGeneratorFunctionConstructor =
  struct
    type t = [ `AsyncGeneratorFunctionConstructor ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type tags = [ `AsyncGeneratorFunctionConstructor ]
    type 'tags this =
      'tags intf constraint 'tags = [> `AsyncGeneratorFunctionConstructor ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x10055 : Ojs.t) -> intf_of_js __tags_of_js x10055
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x10053 : __tags intf) -> intf_to_js __tags_to_js x10053
    let (create : 'tags this -> args:string list -> AsyncGeneratorFunction.t)
      =
      fun (x10060 : 'tags this) ->
        fun ~args:(x10057 : string list) ->
          AsyncGeneratorFunction.t_of_js
            (Ojs.new_obj_arr (this_to_js Obj.magic x10060)
               (let x10058 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                List.iter
                  (fun (x10059 : string) ->
                     ignore
                       (Ojs.call x10058 "push" [|(Ojs.string_to_js x10059)|]))
                  x10057;
                x10058))
    let (apply : 'tags this -> args:string list -> AsyncGeneratorFunction.t)
      =
      fun (x10065 : 'tags this) ->
        fun ~args:(x10062 : string list) ->
          AsyncGeneratorFunction.t_of_js
            (Ojs.call (this_to_js Obj.magic x10065) "apply"
               [|Ojs.null;((let x10063 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            List.iter
                              (fun (x10064 : string) ->
                                 ignore
                                   (Ojs.call x10063 "push"
                                      [|(Ojs.string_to_js x10064)|])) x10062;
                            x10063))|])
    let (get_length : 'tags this -> float) =
      fun (x10067 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x10067) "length")
    let (get_name : 'tags this -> string) =
      fun (x10069 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x10069) "name")
    let (get_prototype : 'tags this -> AsyncGeneratorFunction.t) =
      fun (x10071 : 'tags this) ->
        AsyncGeneratorFunction.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x10071) "prototype")
    let cast_from = Obj.magic
  end
module ArrayBufferView =
  struct
    type t = [ `ArrayBufferView ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type tags = [ `ArrayBufferView ]
    type 'tags this = 'tags intf constraint 'tags = [> `ArrayBufferView ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x10075 : Ojs.t) -> intf_of_js __tags_of_js x10075
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x10073 : __tags intf) -> intf_to_js __tags_to_js x10073
    let (get_buffer : 'tags this -> ArrayBufferLike.t) =
      fun (x10077 : 'tags this) ->
        ArrayBufferLike.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x10077) "buffer")
    let (set_buffer : 'tags this -> ArrayBufferLike.t -> unit) =
      fun (x10079 : 'tags this) ->
        fun (x10080 : ArrayBufferLike.t) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x10079) "buffer"
            (ArrayBufferLike.t_to_js x10080)
    let (get_byteLength : 'tags this -> float) =
      fun (x10082 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x10082) "byteLength")
    let (set_byteLength : 'tags this -> float -> unit) =
      fun (x10084 : 'tags this) ->
        fun (x10085 : float) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x10084) "byteLength"
            (Ojs.float_to_js x10085)
    let (get_byteOffset : 'tags this -> float) =
      fun (x10087 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x10087) "byteOffset")
    let (set_byteOffset : 'tags this -> float -> unit) =
      fun (x10089 : 'tags this) ->
        fun (x10090 : float) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x10089) "byteOffset"
            (Ojs.float_to_js x10090)
    let (create :
      buffer:ArrayBufferLike.t ->
        byteLength:float -> byteOffset:float -> unit -> t)
      =
      fun ~buffer:(x10092 : ArrayBufferLike.t) ->
        fun ~byteLength:(x10093 : float) ->
          fun ~byteOffset:(x10094 : float) ->
            fun () ->
              let x10095 = Ojs.empty_obj () in
              Ojs.set_prop_ascii x10095 "buffer"
                (ArrayBufferLike.t_to_js x10092);
              Ojs.set_prop_ascii x10095 "byteLength" (Ojs.float_to_js x10093);
              Ojs.set_prop_ascii x10095 "byteOffset" (Ojs.float_to_js x10094);
              t_of_js x10095
    let cast_from = Obj.magic
  end
module ArrayBufferTypes =
  struct
    type t = [ `ArrayBufferTypes ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type tags = [ `ArrayBufferTypes ]
    type 'tags this = 'tags intf constraint 'tags = [> `ArrayBufferTypes ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x10098 : Ojs.t) -> intf_of_js __tags_of_js x10098
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x10096 : __tags intf) -> intf_to_js __tags_to_js x10096
    let (get_SharedArrayBuffer : 'tags this -> SharedArrayBuffer.t) =
      fun (x10100 : 'tags this) ->
        SharedArrayBuffer.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x10100)
             "SharedArrayBuffer")
    let (set_SharedArrayBuffer : 'tags this -> SharedArrayBuffer.t -> unit) =
      fun (x10102 : 'tags this) ->
        fun (x10103 : SharedArrayBuffer.t) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x10102)
            "SharedArrayBuffer" (SharedArrayBuffer.t_to_js x10103)
    let (get_ArrayBuffer : 'tags this -> ArrayBuffer.t) =
      fun (x10105 : 'tags this) ->
        ArrayBuffer.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x10105) "ArrayBuffer")
    let (set_ArrayBuffer : 'tags this -> ArrayBuffer.t -> unit) =
      fun (x10107 : 'tags this) ->
        fun (x10108 : ArrayBuffer.t) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x10107) "ArrayBuffer"
            (ArrayBuffer.t_to_js x10108)
    let (create :
      sharedArrayBuffer:SharedArrayBuffer.t ->
        arrayBuffer:ArrayBuffer.t -> unit -> t)
      =
      fun ~sharedArrayBuffer:(x10110 : SharedArrayBuffer.t) ->
        fun ~arrayBuffer:(x10111 : ArrayBuffer.t) ->
          fun () ->
            let x10112 = Ojs.empty_obj () in
            Ojs.set_prop_ascii x10112 "SharedArrayBuffer"
              (SharedArrayBuffer.t_to_js x10110);
            Ojs.set_prop_ascii x10112 "ArrayBuffer"
              (ArrayBuffer.t_to_js x10111);
            t_of_js x10112
    let cast_from = Obj.magic
  end
module AggregateError =
  struct
    type t = [ `AggregateError  | `Error ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type tags = [ `AggregateError  | `Error ]
    type 'tags this = 'tags intf constraint 'tags = [> `AggregateError ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x10115 : Ojs.t) -> intf_of_js __tags_of_js x10115
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x10113 : __tags intf) -> intf_to_js __tags_to_js x10113
    let (get_errors : 'tags this -> any list) =
      fun (x10117 : 'tags this) ->
        Ojs.list_of_js any_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x10117) "errors")
    let (set_errors : 'tags this -> any list -> unit) =
      fun (x10120 : 'tags this) ->
        fun (x10121 : any list) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x10120) "errors"
            (Ojs.list_to_js any_to_js x10121)
    let (create :
      errors:any Iterable.t ->
        ?message:string -> ?options:ErrorOptions.t -> unit -> t)
      =
      fun ~errors:(x10124 : any Iterable.t) ->
        fun ?message:(x10125 : string option) ->
          fun ?options:(x10126 : ErrorOptions.t option) ->
            fun () ->
              t_of_js
                (Ojs.new_obj_arr
                   (Ojs.get_prop_ascii Ojs.global "AggregateError")
                   (let x10127 =
                      Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                        [||] in
                    ignore
                      (Ojs.call x10127 "push"
                         [|(Iterable.t_to_js any_to_js x10124)|]);
                    (match x10125 with
                     | Some x10129 ->
                         ignore
                           (Ojs.call x10127 "push"
                              [|(Ojs.string_to_js x10129)|])
                     | None -> ());
                    (match x10126 with
                     | Some x10128 ->
                         ignore
                           (Ojs.call x10127 "push"
                              [|(ErrorOptions.t_to_js x10128)|])
                     | None -> ());
                    x10127))
    let (invoke :
      errors:any Iterable.t ->
        ?message:string -> ?options:ErrorOptions.t -> unit -> t)
      =
      fun ~errors:(x10131 : any Iterable.t) ->
        fun ?message:(x10132 : string option) ->
          fun ?options:(x10133 : ErrorOptions.t option) ->
            fun () ->
              t_of_js
                (Ojs.call (Ojs.get_prop_ascii Ojs.global "AggregateError")
                   "apply"
                   [|Ojs.null;((let x10134 =
                                  Ojs.new_obj
                                    (Ojs.get_prop_ascii Ojs.global "Array")
                                    [||] in
                                ignore
                                  (Ojs.call x10134 "push"
                                     [|(Iterable.t_to_js any_to_js x10131)|]);
                                (match x10132 with
                                 | Some x10136 ->
                                     ignore
                                       (Ojs.call x10134 "push"
                                          [|(Ojs.string_to_js x10136)|])
                                 | None -> ());
                                (match x10133 with
                                 | Some x10135 ->
                                     ignore
                                       (Ojs.call x10134 "push"
                                          [|(ErrorOptions.t_to_js x10135)|])
                                 | None -> ());
                                x10134))|])
    let (create' : errors:any Iterable.t -> ?message:string -> unit -> t) =
      fun ~errors:(x10138 : any Iterable.t) ->
        fun ?message:(x10139 : string option) ->
          fun () ->
            t_of_js
              (Ojs.new_obj_arr
                 (Ojs.get_prop_ascii Ojs.global "AggregateError")
                 (let x10140 =
                    Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                  ignore
                    (Ojs.call x10140 "push"
                       [|(Iterable.t_to_js any_to_js x10138)|]);
                  (match x10139 with
                   | Some x10141 ->
                       ignore
                         (Ojs.call x10140 "push"
                            [|(Ojs.string_to_js x10141)|])
                   | None -> ());
                  x10140))
    let (invoke' : errors:any Iterable.t -> ?message:string -> unit -> t) =
      fun ~errors:(x10143 : any Iterable.t) ->
        fun ?message:(x10144 : string option) ->
          fun () ->
            t_of_js
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "AggregateError")
                 "apply"
                 [|Ojs.null;((let x10145 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x10145 "push"
                                   [|(Iterable.t_to_js any_to_js x10143)|]);
                              (match x10144 with
                               | Some x10146 ->
                                   ignore
                                     (Ojs.call x10145 "push"
                                        [|(Ojs.string_to_js x10146)|])
                               | None -> ());
                              x10145))|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "AggregateError") "prototype")
    let (create'' : errors:any list -> unit -> t) =
      fun ~errors:(x10148 : any list) ->
        fun () ->
          let x10149 = Ojs.empty_obj () in
          Ojs.set_prop_ascii x10149 "errors"
            (Ojs.list_to_js any_to_js x10148);
          t_of_js x10149
    let cast_from = Obj.magic
  end
module ReadonlyArray_Make(T:Ojs.T) =
  struct
    type 'T parent = 'T ReadonlyArray.t
    let rec parent_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T parent =
      fun (type __T) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x10153 : Ojs.t) -> ReadonlyArray.t_of_js __T_of_js x10153
    and parent_to_js : 'T . ('T -> Ojs.t) -> 'T parent -> Ojs.t =
      fun (type __T) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x10151 : __T ReadonlyArray.t) ->
            ReadonlyArray.t_to_js __T_to_js x10151
    type t = T.t parent
    let rec t_of_js : Ojs.t -> t =
      fun (x10157 : Ojs.t) -> parent_of_js T.t_of_js x10157
    and t_to_js : t -> Ojs.t =
      fun (x10155 : T.t parent) -> parent_to_js T.t_to_js x10155
    let (findLast :
      t ->
        predicate:(value:T.t -> index:float -> array:T.t list -> bool) ->
          ?thisArg:any -> unit -> 'S option)
      =
      fun (x10167 : t) ->
        fun
          ~predicate:(x10159 :
                       value:T.t -> index:float -> array:T.t list -> bool)
          ->
          fun ?thisArg:(x10160 : any option) ->
            fun () ->
              Ojs.option_of_js Obj.magic
                (let x10168 = t_to_js x10167 in
                 Ojs.call (Ojs.get_prop_ascii x10168 "findLast") "apply"
                   [|x10168;((let x10161 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x10161 "push"
                                   [|(Ojs.fun_to_js 3
                                        (fun (x10163 : Ojs.t) ->
                                           fun (x10164 : Ojs.t) ->
                                             fun (x10165 : Ojs.t) ->
                                               Ojs.bool_to_js
                                                 (x10159
                                                    ~value:(T.t_of_js x10163)
                                                    ~index:(Ojs.float_of_js
                                                              x10164)
                                                    ~array:(Ojs.list_of_js
                                                              T.t_of_js
                                                              x10165))))|]);
                              (match x10160 with
                               | Some x10162 ->
                                   ignore
                                     (Ojs.call x10161 "push"
                                        [|(any_to_js x10162)|])
                               | None -> ());
                              x10161))|])
    let (findLast :
      t ->
        predicate:(value:T.t -> index:float -> array:T.t list -> unknown) ->
          ?thisArg:any -> unit -> T.t option)
      =
      fun (x10178 : t) ->
        fun
          ~predicate:(x10170 :
                       value:T.t -> index:float -> array:T.t list -> unknown)
          ->
          fun ?thisArg:(x10171 : any option) ->
            fun () ->
              Ojs.option_of_js T.t_of_js
                (let x10179 = t_to_js x10178 in
                 Ojs.call (Ojs.get_prop_ascii x10179 "findLast") "apply"
                   [|x10179;((let x10172 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x10172 "push"
                                   [|(Ojs.fun_to_js 3
                                        (fun (x10174 : Ojs.t) ->
                                           fun (x10175 : Ojs.t) ->
                                             fun (x10176 : Ojs.t) ->
                                               unknown_to_js
                                                 (x10170
                                                    ~value:(T.t_of_js x10174)
                                                    ~index:(Ojs.float_of_js
                                                              x10175)
                                                    ~array:(Ojs.list_of_js
                                                              T.t_of_js
                                                              x10176))))|]);
                              (match x10171 with
                               | Some x10173 ->
                                   ignore
                                     (Ojs.call x10172 "push"
                                        [|(any_to_js x10173)|])
                               | None -> ());
                              x10172))|])
    let (findLastIndex :
      t ->
        predicate:(value:T.t -> index:float -> array:T.t list -> unknown) ->
          ?thisArg:any -> unit -> float)
      =
      fun (x10189 : t) ->
        fun
          ~predicate:(x10181 :
                       value:T.t -> index:float -> array:T.t list -> unknown)
          ->
          fun ?thisArg:(x10182 : any option) ->
            fun () ->
              Ojs.float_of_js
                (let x10190 = t_to_js x10189 in
                 Ojs.call (Ojs.get_prop_ascii x10190 "findLastIndex") "apply"
                   [|x10190;((let x10183 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x10183 "push"
                                   [|(Ojs.fun_to_js 3
                                        (fun (x10185 : Ojs.t) ->
                                           fun (x10186 : Ojs.t) ->
                                             fun (x10187 : Ojs.t) ->
                                               unknown_to_js
                                                 (x10181
                                                    ~value:(T.t_of_js x10185)
                                                    ~index:(Ojs.float_of_js
                                                              x10186)
                                                    ~array:(Ojs.list_of_js
                                                              T.t_of_js
                                                              x10187))))|]);
                              (match x10182 with
                               | Some x10184 ->
                                   ignore
                                     (Ojs.call x10183 "push"
                                        [|(any_to_js x10184)|])
                               | None -> ());
                              x10183))|])
    let (at : t -> index:float -> T.t option) =
      fun (x10192 : t) ->
        fun ~index:(x10191 : float) ->
          Ojs.option_of_js T.t_of_js
            (Ojs.call (t_to_js x10192) "at" [|(Ojs.float_to_js x10191)|])
    let (flatMap :
      t ->
        callback:(this:'This ->
                    value:T.t ->
                      index:float ->
                        array:T.t list -> [ `U1 of 'U  | `U2 of 'U parent ])
          -> ?thisArg:'This -> unit -> 'U list)
      =
      fun (x10206 : t) ->
        fun
          ~callback:(x10194 :
                      this:'This ->
                        value:T.t ->
                          index:float ->
                            array:T.t list ->
                              [ `U1 of 'U  | `U2 of 'U parent ])
          ->
          fun ?thisArg:(x10195 : 'This option) ->
            fun () ->
              Ojs.list_of_js Obj.magic
                (let x10207 = t_to_js x10206 in
                 Ojs.call (Ojs.get_prop_ascii x10207 "flatMap") "apply"
                   [|x10207;((let x10196 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x10196 "push"
                                   [|(Ojs.fun_to_js 4
                                        (fun (x10198 : Ojs.t) ->
                                           fun (x10199 : Ojs.t) ->
                                             fun (x10200 : Ojs.t) ->
                                               fun (x10201 : Ojs.t) ->
                                                 match x10194
                                                         ~this:(Obj.magic
                                                                  x10198)
                                                         ~value:(T.t_of_js
                                                                   x10199)
                                                         ~index:(Ojs.float_of_js
                                                                   x10200)
                                                         ~array:(Ojs.list_of_js
                                                                   T.t_of_js
                                                                   x10201)
                                                 with
                                                 | `U1 x10203 ->
                                                     Obj.magic x10203
                                                 | `U2 x10204 ->
                                                     parent_to_js Obj.magic
                                                       x10204))|]);
                              (match x10195 with
                               | Some x10197 ->
                                   ignore
                                     (Ojs.call x10196 "push"
                                        [|(Obj.magic x10197)|])
                               | None -> ());
                              x10196))|])
    let (flat :
      t -> this:'A -> ?depth:'D -> unit -> ('A, 'D) FlatArray.t list) =
      fun (x10213 : t) ->
        fun ~this:(x10209 : 'A) ->
          fun ?depth:(x10210 : 'D option) ->
            fun () ->
              Ojs.list_of_js
                (fun (x10215 : Ojs.t) ->
                   FlatArray.t_of_js Obj.magic Obj.magic x10215)
                (let x10214 = t_to_js x10213 in
                 Ojs.call (Ojs.get_prop_ascii x10214 "flat") "apply"
                   [|x10214;((let x10211 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x10211 "push"
                                   [|(Obj.magic x10209)|]);
                              (match x10210 with
                               | Some x10212 ->
                                   ignore
                                     (Ojs.call x10211 "push"
                                        [|(Obj.magic x10212)|])
                               | None -> ());
                              x10211))|])
    let (includes :
      t -> searchElement:T.t -> ?fromIndex:float -> unit -> bool) =
      fun (x10222 : t) ->
        fun ~searchElement:(x10218 : T.t) ->
          fun ?fromIndex:(x10219 : float option) ->
            fun () ->
              Ojs.bool_of_js
                (let x10223 = t_to_js x10222 in
                 Ojs.call (Ojs.get_prop_ascii x10223 "includes") "apply"
                   [|x10223;((let x10220 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x10220 "push"
                                   [|(T.t_to_js x10218)|]);
                              (match x10219 with
                               | Some x10221 ->
                                   ignore
                                     (Ojs.call x10220 "push"
                                        [|(Ojs.float_to_js x10221)|])
                               | None -> ());
                              x10220))|])
    let (entries : t -> (float * T.t) IterableIterator.t) =
      fun (x10224 : t) ->
        IterableIterator.t_of_js
          (fun (x10225 : Ojs.t) ->
             let x10226 = x10225 in
             ((Ojs.float_of_js (Ojs.array_get x10226 0)),
               (T.t_of_js (Ojs.array_get x10226 1))))
          (Ojs.call (t_to_js x10224) "entries" [||])
    let (keys : t -> float IterableIterator.t) =
      fun (x10227 : t) ->
        IterableIterator.t_of_js Ojs.float_of_js
          (Ojs.call (t_to_js x10227) "keys" [||])
    let (values : t -> T.t IterableIterator.t) =
      fun (x10229 : t) ->
        IterableIterator.t_of_js T.t_of_js
          (Ojs.call (t_to_js x10229) "values" [||])
    let (find :
      t ->
        predicate:(value:T.t -> index:float -> obj:T.t list -> bool) ->
          ?thisArg:any -> unit -> 'S option)
      =
      fun (x10239 : t) ->
        fun
          ~predicate:(x10231 :
                       value:T.t -> index:float -> obj:T.t list -> bool)
          ->
          fun ?thisArg:(x10232 : any option) ->
            fun () ->
              Ojs.option_of_js Obj.magic
                (let x10240 = t_to_js x10239 in
                 Ojs.call (Ojs.get_prop_ascii x10240 "find") "apply"
                   [|x10240;((let x10233 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x10233 "push"
                                   [|(Ojs.fun_to_js 3
                                        (fun (x10235 : Ojs.t) ->
                                           fun (x10236 : Ojs.t) ->
                                             fun (x10237 : Ojs.t) ->
                                               Ojs.bool_to_js
                                                 (x10231
                                                    ~value:(T.t_of_js x10235)
                                                    ~index:(Ojs.float_of_js
                                                              x10236)
                                                    ~obj:(Ojs.list_of_js
                                                            T.t_of_js x10237))))|]);
                              (match x10232 with
                               | Some x10234 ->
                                   ignore
                                     (Ojs.call x10233 "push"
                                        [|(any_to_js x10234)|])
                               | None -> ());
                              x10233))|])
    let (find :
      t ->
        predicate:(value:T.t -> index:float -> obj:T.t list -> unknown) ->
          ?thisArg:any -> unit -> T.t option)
      =
      fun (x10250 : t) ->
        fun
          ~predicate:(x10242 :
                       value:T.t -> index:float -> obj:T.t list -> unknown)
          ->
          fun ?thisArg:(x10243 : any option) ->
            fun () ->
              Ojs.option_of_js T.t_of_js
                (let x10251 = t_to_js x10250 in
                 Ojs.call (Ojs.get_prop_ascii x10251 "find") "apply"
                   [|x10251;((let x10244 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x10244 "push"
                                   [|(Ojs.fun_to_js 3
                                        (fun (x10246 : Ojs.t) ->
                                           fun (x10247 : Ojs.t) ->
                                             fun (x10248 : Ojs.t) ->
                                               unknown_to_js
                                                 (x10242
                                                    ~value:(T.t_of_js x10246)
                                                    ~index:(Ojs.float_of_js
                                                              x10247)
                                                    ~obj:(Ojs.list_of_js
                                                            T.t_of_js x10248))))|]);
                              (match x10243 with
                               | Some x10245 ->
                                   ignore
                                     (Ojs.call x10244 "push"
                                        [|(any_to_js x10245)|])
                               | None -> ());
                              x10244))|])
    let (findIndex :
      t ->
        predicate:(value:T.t -> index:float -> obj:T.t list -> unknown) ->
          ?thisArg:any -> unit -> float)
      =
      fun (x10261 : t) ->
        fun
          ~predicate:(x10253 :
                       value:T.t -> index:float -> obj:T.t list -> unknown)
          ->
          fun ?thisArg:(x10254 : any option) ->
            fun () ->
              Ojs.float_of_js
                (let x10262 = t_to_js x10261 in
                 Ojs.call (Ojs.get_prop_ascii x10262 "findIndex") "apply"
                   [|x10262;((let x10255 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x10255 "push"
                                   [|(Ojs.fun_to_js 3
                                        (fun (x10257 : Ojs.t) ->
                                           fun (x10258 : Ojs.t) ->
                                             fun (x10259 : Ojs.t) ->
                                               unknown_to_js
                                                 (x10253
                                                    ~value:(T.t_of_js x10257)
                                                    ~index:(Ojs.float_of_js
                                                              x10258)
                                                    ~obj:(Ojs.list_of_js
                                                            T.t_of_js x10259))))|]);
                              (match x10254 with
                               | Some x10256 ->
                                   ignore
                                     (Ojs.call x10255 "push"
                                        [|(any_to_js x10256)|])
                               | None -> ());
                              x10255))|])
    let (get_length : t -> float) =
      fun (x10263 : t) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x10263) "length")
    let (toString : t -> string) =
      fun (x10264 : t) ->
        Ojs.string_of_js (Ojs.call (t_to_js x10264) "toString" [||])
    let (toLocaleString : t -> string) =
      fun (x10265 : t) ->
        Ojs.string_of_js (Ojs.call (t_to_js x10265) "toLocaleString" [||])
    let (concat : t -> items:T.t ConcatArray.t list -> T.t list) =
      fun (x10270 : t) ->
        fun ~items:(x10266 : T.t ConcatArray.t list) ->
          Ojs.list_of_js T.t_of_js
            (let x10271 = t_to_js x10270 in
             Ojs.call (Ojs.get_prop_ascii x10271 "concat") "apply"
               [|x10271;((let x10267 =
                            Ojs.new_obj
                              (Ojs.get_prop_ascii Ojs.global "Array") 
                              [||] in
                          List.iter
                            (fun (x10268 : T.t ConcatArray.t) ->
                               ignore
                                 (Ojs.call x10267 "push"
                                    [|(ConcatArray.t_to_js T.t_to_js x10268)|]))
                            x10266;
                          x10267))|])
    let (concat :
      t -> items:[ `U1 of T.t  | `U2 of T.t ConcatArray.t ] list -> T.t list)
      =
      fun (x10279 : t) ->
        fun ~items:(x10273 : [ `U1 of T.t  | `U2 of T.t ConcatArray.t ] list)
          ->
          Ojs.list_of_js T.t_of_js
            (let x10280 = t_to_js x10279 in
             Ojs.call (Ojs.get_prop_ascii x10280 "concat") "apply"
               [|x10280;((let x10274 =
                            Ojs.new_obj
                              (Ojs.get_prop_ascii Ojs.global "Array") 
                              [||] in
                          List.iter
                            (fun
                               (x10275 :
                                 [ `U1 of T.t  | `U2 of T.t ConcatArray.t ])
                               ->
                               ignore
                                 (Ojs.call x10274 "push"
                                    [|((match x10275 with
                                        | `U1 x10276 -> T.t_to_js x10276
                                        | `U2 x10277 ->
                                            ConcatArray.t_to_js T.t_to_js
                                              x10277))|])) x10273;
                          x10274))|])
    let (join : t -> ?separator:string -> unit -> string) =
      fun (x10285 : t) ->
        fun ?separator:(x10282 : string option) ->
          fun () ->
            Ojs.string_of_js
              (let x10286 = t_to_js x10285 in
               Ojs.call (Ojs.get_prop_ascii x10286 "join") "apply"
                 [|x10286;((let x10283 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x10282 with
                             | Some x10284 ->
                                 ignore
                                   (Ojs.call x10283 "push"
                                      [|(Ojs.string_to_js x10284)|])
                             | None -> ());
                            x10283))|])
    let (slice : t -> ?start:float -> ?end_:float -> unit -> T.t list) =
      fun (x10292 : t) ->
        fun ?start:(x10287 : float option) ->
          fun ?end_:(x10288 : float option) ->
            fun () ->
              Ojs.list_of_js T.t_of_js
                (let x10293 = t_to_js x10292 in
                 Ojs.call (Ojs.get_prop_ascii x10293 "slice") "apply"
                   [|x10293;((let x10289 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              (match x10287 with
                               | Some x10291 ->
                                   ignore
                                     (Ojs.call x10289 "push"
                                        [|(Ojs.float_to_js x10291)|])
                               | None -> ());
                              (match x10288 with
                               | Some x10290 ->
                                   ignore
                                     (Ojs.call x10289 "push"
                                        [|(Ojs.float_to_js x10290)|])
                               | None -> ());
                              x10289))|])
    let (indexOf :
      t -> searchElement:T.t -> ?fromIndex:float -> unit -> float) =
      fun (x10299 : t) ->
        fun ~searchElement:(x10295 : T.t) ->
          fun ?fromIndex:(x10296 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x10300 = t_to_js x10299 in
                 Ojs.call (Ojs.get_prop_ascii x10300 "indexOf") "apply"
                   [|x10300;((let x10297 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x10297 "push"
                                   [|(T.t_to_js x10295)|]);
                              (match x10296 with
                               | Some x10298 ->
                                   ignore
                                     (Ojs.call x10297 "push"
                                        [|(Ojs.float_to_js x10298)|])
                               | None -> ());
                              x10297))|])
    let (lastIndexOf :
      t -> searchElement:T.t -> ?fromIndex:float -> unit -> float) =
      fun (x10305 : t) ->
        fun ~searchElement:(x10301 : T.t) ->
          fun ?fromIndex:(x10302 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x10306 = t_to_js x10305 in
                 Ojs.call (Ojs.get_prop_ascii x10306 "lastIndexOf") "apply"
                   [|x10306;((let x10303 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x10303 "push"
                                   [|(T.t_to_js x10301)|]);
                              (match x10302 with
                               | Some x10304 ->
                                   ignore
                                     (Ojs.call x10303 "push"
                                        [|(Ojs.float_to_js x10304)|])
                               | None -> ());
                              x10303))|])
    let (every :
      t ->
        predicate:(value:T.t -> index:float -> array:T.t list -> bool) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x10315 : t) ->
        fun
          ~predicate:(x10307 :
                       value:T.t -> index:float -> array:T.t list -> bool)
          ->
          fun ?thisArg:(x10308 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x10316 = t_to_js x10315 in
                 Ojs.call (Ojs.get_prop_ascii x10316 "every") "apply"
                   [|x10316;((let x10309 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x10309 "push"
                                   [|(Ojs.fun_to_js 3
                                        (fun (x10311 : Ojs.t) ->
                                           fun (x10312 : Ojs.t) ->
                                             fun (x10313 : Ojs.t) ->
                                               Ojs.bool_to_js
                                                 (x10307
                                                    ~value:(T.t_of_js x10311)
                                                    ~index:(Ojs.float_of_js
                                                              x10312)
                                                    ~array:(Ojs.list_of_js
                                                              T.t_of_js
                                                              x10313))))|]);
                              (match x10308 with
                               | Some x10310 ->
                                   ignore
                                     (Ojs.call x10309 "push"
                                        [|(any_to_js x10310)|])
                               | None -> ());
                              x10309))|])
    let (every :
      t ->
        predicate:(value:T.t -> index:float -> array:T.t list -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x10325 : t) ->
        fun
          ~predicate:(x10317 :
                       value:T.t -> index:float -> array:T.t list -> unknown)
          ->
          fun ?thisArg:(x10318 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x10326 = t_to_js x10325 in
                 Ojs.call (Ojs.get_prop_ascii x10326 "every") "apply"
                   [|x10326;((let x10319 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x10319 "push"
                                   [|(Ojs.fun_to_js 3
                                        (fun (x10321 : Ojs.t) ->
                                           fun (x10322 : Ojs.t) ->
                                             fun (x10323 : Ojs.t) ->
                                               unknown_to_js
                                                 (x10317
                                                    ~value:(T.t_of_js x10321)
                                                    ~index:(Ojs.float_of_js
                                                              x10322)
                                                    ~array:(Ojs.list_of_js
                                                              T.t_of_js
                                                              x10323))))|]);
                              (match x10318 with
                               | Some x10320 ->
                                   ignore
                                     (Ojs.call x10319 "push"
                                        [|(any_to_js x10320)|])
                               | None -> ());
                              x10319))|])
    let (some :
      t ->
        predicate:(value:T.t -> index:float -> array:T.t list -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x10335 : t) ->
        fun
          ~predicate:(x10327 :
                       value:T.t -> index:float -> array:T.t list -> unknown)
          ->
          fun ?thisArg:(x10328 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x10336 = t_to_js x10335 in
                 Ojs.call (Ojs.get_prop_ascii x10336 "some") "apply"
                   [|x10336;((let x10329 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x10329 "push"
                                   [|(Ojs.fun_to_js 3
                                        (fun (x10331 : Ojs.t) ->
                                           fun (x10332 : Ojs.t) ->
                                             fun (x10333 : Ojs.t) ->
                                               unknown_to_js
                                                 (x10327
                                                    ~value:(T.t_of_js x10331)
                                                    ~index:(Ojs.float_of_js
                                                              x10332)
                                                    ~array:(Ojs.list_of_js
                                                              T.t_of_js
                                                              x10333))))|]);
                              (match x10328 with
                               | Some x10330 ->
                                   ignore
                                     (Ojs.call x10329 "push"
                                        [|(any_to_js x10330)|])
                               | None -> ());
                              x10329))|])
    let (forEach :
      t ->
        callbackfn:(value:T.t -> index:float -> array:T.t list -> unit) ->
          ?thisArg:any -> unit -> unit)
      =
      fun (x10345 : t) ->
        fun
          ~callbackfn:(x10337 :
                        value:T.t -> index:float -> array:T.t list -> unit)
          ->
          fun ?thisArg:(x10338 : any option) ->
            fun () ->
              ignore
                (let x10346 = t_to_js x10345 in
                 Ojs.call (Ojs.get_prop_ascii x10346 "forEach") "apply"
                   [|x10346;((let x10339 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x10339 "push"
                                   [|(Ojs.fun_to_js 3
                                        (fun (x10341 : Ojs.t) ->
                                           fun (x10342 : Ojs.t) ->
                                             fun (x10343 : Ojs.t) ->
                                               x10337
                                                 ~value:(T.t_of_js x10341)
                                                 ~index:(Ojs.float_of_js
                                                           x10342)
                                                 ~array:(Ojs.list_of_js
                                                           T.t_of_js x10343)))|]);
                              (match x10338 with
                               | Some x10340 ->
                                   ignore
                                     (Ojs.call x10339 "push"
                                        [|(any_to_js x10340)|])
                               | None -> ());
                              x10339))|])
    let (map :
      t ->
        callbackfn:(value:T.t -> index:float -> array:T.t list -> 'U) ->
          ?thisArg:any -> unit -> 'U list)
      =
      fun (x10355 : t) ->
        fun
          ~callbackfn:(x10347 :
                        value:T.t -> index:float -> array:T.t list -> 'U)
          ->
          fun ?thisArg:(x10348 : any option) ->
            fun () ->
              Ojs.list_of_js Obj.magic
                (let x10356 = t_to_js x10355 in
                 Ojs.call (Ojs.get_prop_ascii x10356 "map") "apply"
                   [|x10356;((let x10349 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x10349 "push"
                                   [|(Ojs.fun_to_js 3
                                        (fun (x10351 : Ojs.t) ->
                                           fun (x10352 : Ojs.t) ->
                                             fun (x10353 : Ojs.t) ->
                                               Obj.magic
                                                 (x10347
                                                    ~value:(T.t_of_js x10351)
                                                    ~index:(Ojs.float_of_js
                                                              x10352)
                                                    ~array:(Ojs.list_of_js
                                                              T.t_of_js
                                                              x10353))))|]);
                              (match x10348 with
                               | Some x10350 ->
                                   ignore
                                     (Ojs.call x10349 "push"
                                        [|(any_to_js x10350)|])
                               | None -> ());
                              x10349))|])
    let (filter :
      t ->
        predicate:(value:T.t -> index:float -> array:T.t list -> bool) ->
          ?thisArg:any -> unit -> 'S list)
      =
      fun (x10366 : t) ->
        fun
          ~predicate:(x10358 :
                       value:T.t -> index:float -> array:T.t list -> bool)
          ->
          fun ?thisArg:(x10359 : any option) ->
            fun () ->
              Ojs.list_of_js Obj.magic
                (let x10367 = t_to_js x10366 in
                 Ojs.call (Ojs.get_prop_ascii x10367 "filter") "apply"
                   [|x10367;((let x10360 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x10360 "push"
                                   [|(Ojs.fun_to_js 3
                                        (fun (x10362 : Ojs.t) ->
                                           fun (x10363 : Ojs.t) ->
                                             fun (x10364 : Ojs.t) ->
                                               Ojs.bool_to_js
                                                 (x10358
                                                    ~value:(T.t_of_js x10362)
                                                    ~index:(Ojs.float_of_js
                                                              x10363)
                                                    ~array:(Ojs.list_of_js
                                                              T.t_of_js
                                                              x10364))))|]);
                              (match x10359 with
                               | Some x10361 ->
                                   ignore
                                     (Ojs.call x10360 "push"
                                        [|(any_to_js x10361)|])
                               | None -> ());
                              x10360))|])
    let (filter :
      t ->
        predicate:(value:T.t -> index:float -> array:T.t list -> unknown) ->
          ?thisArg:any -> unit -> T.t list)
      =
      fun (x10377 : t) ->
        fun
          ~predicate:(x10369 :
                       value:T.t -> index:float -> array:T.t list -> unknown)
          ->
          fun ?thisArg:(x10370 : any option) ->
            fun () ->
              Ojs.list_of_js T.t_of_js
                (let x10378 = t_to_js x10377 in
                 Ojs.call (Ojs.get_prop_ascii x10378 "filter") "apply"
                   [|x10378;((let x10371 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x10371 "push"
                                   [|(Ojs.fun_to_js 3
                                        (fun (x10373 : Ojs.t) ->
                                           fun (x10374 : Ojs.t) ->
                                             fun (x10375 : Ojs.t) ->
                                               unknown_to_js
                                                 (x10369
                                                    ~value:(T.t_of_js x10373)
                                                    ~index:(Ojs.float_of_js
                                                              x10374)
                                                    ~array:(Ojs.list_of_js
                                                              T.t_of_js
                                                              x10375))))|]);
                              (match x10370 with
                               | Some x10372 ->
                                   ignore
                                     (Ojs.call x10371 "push"
                                        [|(any_to_js x10372)|])
                               | None -> ());
                              x10371))|])
    let (reduce :
      t ->
        callbackfn:(previousValue:T.t ->
                      currentValue:T.t ->
                        currentIndex:float -> array:T.t list -> T.t)
          -> T.t)
      =
      fun (x10386 : t) ->
        fun
          ~callbackfn:(x10380 :
                        previousValue:T.t ->
                          currentValue:T.t ->
                            currentIndex:float -> array:T.t list -> T.t)
          ->
          T.t_of_js
            (Ojs.call (t_to_js x10386) "reduce"
               [|(Ojs.fun_to_js 4
                    (fun (x10381 : Ojs.t) ->
                       fun (x10382 : Ojs.t) ->
                         fun (x10383 : Ojs.t) ->
                           fun (x10384 : Ojs.t) ->
                             T.t_to_js
                               (x10380 ~previousValue:(T.t_of_js x10381)
                                  ~currentValue:(T.t_of_js x10382)
                                  ~currentIndex:(Ojs.float_of_js x10383)
                                  ~array:(Ojs.list_of_js T.t_of_js x10384))))|])
    let (reduce :
      t ->
        callbackfn:(previousValue:T.t ->
                      currentValue:T.t ->
                        currentIndex:float -> array:T.t list -> T.t)
          -> initialValue:T.t -> T.t)
      =
      fun (x10394 : t) ->
        fun
          ~callbackfn:(x10387 :
                        previousValue:T.t ->
                          currentValue:T.t ->
                            currentIndex:float -> array:T.t list -> T.t)
          ->
          fun ~initialValue:(x10393 : T.t) ->
            T.t_of_js
              (Ojs.call (t_to_js x10394) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x10388 : Ojs.t) ->
                         fun (x10389 : Ojs.t) ->
                           fun (x10390 : Ojs.t) ->
                             fun (x10391 : Ojs.t) ->
                               T.t_to_js
                                 (x10387 ~previousValue:(T.t_of_js x10388)
                                    ~currentValue:(T.t_of_js x10389)
                                    ~currentIndex:(Ojs.float_of_js x10390)
                                    ~array:(Ojs.list_of_js T.t_of_js x10391))));(
                   T.t_to_js x10393)|])
    let (reduce :
      t ->
        callbackfn:(previousValue:'U ->
                      currentValue:T.t ->
                        currentIndex:float -> array:T.t list -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x10402 : t) ->
        fun
          ~callbackfn:(x10395 :
                        previousValue:'U ->
                          currentValue:T.t ->
                            currentIndex:float -> array:T.t list -> 'U)
          ->
          fun ~initialValue:(x10401 : 'U) ->
            Obj.magic
              (Ojs.call (t_to_js x10402) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x10396 : Ojs.t) ->
                         fun (x10397 : Ojs.t) ->
                           fun (x10398 : Ojs.t) ->
                             fun (x10399 : Ojs.t) ->
                               Obj.magic
                                 (x10395 ~previousValue:(Obj.magic x10396)
                                    ~currentValue:(T.t_of_js x10397)
                                    ~currentIndex:(Ojs.float_of_js x10398)
                                    ~array:(Ojs.list_of_js T.t_of_js x10399))));(
                   Obj.magic x10401)|])
    let (reduceRight :
      t ->
        callbackfn:(previousValue:T.t ->
                      currentValue:T.t ->
                        currentIndex:float -> array:T.t list -> T.t)
          -> T.t)
      =
      fun (x10409 : t) ->
        fun
          ~callbackfn:(x10403 :
                        previousValue:T.t ->
                          currentValue:T.t ->
                            currentIndex:float -> array:T.t list -> T.t)
          ->
          T.t_of_js
            (Ojs.call (t_to_js x10409) "reduceRight"
               [|(Ojs.fun_to_js 4
                    (fun (x10404 : Ojs.t) ->
                       fun (x10405 : Ojs.t) ->
                         fun (x10406 : Ojs.t) ->
                           fun (x10407 : Ojs.t) ->
                             T.t_to_js
                               (x10403 ~previousValue:(T.t_of_js x10404)
                                  ~currentValue:(T.t_of_js x10405)
                                  ~currentIndex:(Ojs.float_of_js x10406)
                                  ~array:(Ojs.list_of_js T.t_of_js x10407))))|])
    let (reduceRight :
      t ->
        callbackfn:(previousValue:T.t ->
                      currentValue:T.t ->
                        currentIndex:float -> array:T.t list -> T.t)
          -> initialValue:T.t -> T.t)
      =
      fun (x10417 : t) ->
        fun
          ~callbackfn:(x10410 :
                        previousValue:T.t ->
                          currentValue:T.t ->
                            currentIndex:float -> array:T.t list -> T.t)
          ->
          fun ~initialValue:(x10416 : T.t) ->
            T.t_of_js
              (Ojs.call (t_to_js x10417) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x10411 : Ojs.t) ->
                         fun (x10412 : Ojs.t) ->
                           fun (x10413 : Ojs.t) ->
                             fun (x10414 : Ojs.t) ->
                               T.t_to_js
                                 (x10410 ~previousValue:(T.t_of_js x10411)
                                    ~currentValue:(T.t_of_js x10412)
                                    ~currentIndex:(Ojs.float_of_js x10413)
                                    ~array:(Ojs.list_of_js T.t_of_js x10414))));(
                   T.t_to_js x10416)|])
    let (reduceRight :
      t ->
        callbackfn:(previousValue:'U ->
                      currentValue:T.t ->
                        currentIndex:float -> array:T.t list -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x10425 : t) ->
        fun
          ~callbackfn:(x10418 :
                        previousValue:'U ->
                          currentValue:T.t ->
                            currentIndex:float -> array:T.t list -> 'U)
          ->
          fun ~initialValue:(x10424 : 'U) ->
            Obj.magic
              (Ojs.call (t_to_js x10425) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x10419 : Ojs.t) ->
                         fun (x10420 : Ojs.t) ->
                           fun (x10421 : Ojs.t) ->
                             fun (x10422 : Ojs.t) ->
                               Obj.magic
                                 (x10418 ~previousValue:(Obj.magic x10419)
                                    ~currentValue:(T.t_of_js x10420)
                                    ~currentIndex:(Ojs.float_of_js x10421)
                                    ~array:(Ojs.list_of_js T.t_of_js x10422))));(
                   Obj.magic x10424)|])
    let (get : t -> float -> T.t) =
      fun (x10426 : t) ->
        fun (x10427 : float) ->
          T.t_of_js (Ojs.get_prop (t_to_js x10426) (Ojs.float_to_js x10427))
  end
module ConcatArray_Make(T:Ojs.T) =
  struct
    type 'T parent = 'T ConcatArray.t
    let rec parent_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T parent =
      fun (type __T) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x10430 : Ojs.t) -> ConcatArray.t_of_js __T_of_js x10430
    and parent_to_js : 'T . ('T -> Ojs.t) -> 'T parent -> Ojs.t =
      fun (type __T) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x10428 : __T ConcatArray.t) ->
            ConcatArray.t_to_js __T_to_js x10428
    type t = T.t parent
    let rec t_of_js : Ojs.t -> t =
      fun (x10434 : Ojs.t) -> parent_of_js T.t_of_js x10434
    and t_to_js : t -> Ojs.t =
      fun (x10432 : T.t parent) -> parent_to_js T.t_to_js x10432
    let (get_length : t -> float) =
      fun (x10436 : t) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x10436) "length")
    let (get : t -> float -> T.t) =
      fun (x10437 : t) ->
        fun (x10438 : float) ->
          T.t_of_js (Ojs.get_prop (t_to_js x10437) (Ojs.float_to_js x10438))
    let (join : t -> ?separator:string -> unit -> string) =
      fun (x10442 : t) ->
        fun ?separator:(x10439 : string option) ->
          fun () ->
            Ojs.string_of_js
              (let x10443 = t_to_js x10442 in
               Ojs.call (Ojs.get_prop_ascii x10443 "join") "apply"
                 [|x10443;((let x10440 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x10439 with
                             | Some x10441 ->
                                 ignore
                                   (Ojs.call x10440 "push"
                                      [|(Ojs.string_to_js x10441)|])
                             | None -> ());
                            x10440))|])
    let (slice : t -> ?start:float -> ?end_:float -> unit -> T.t list) =
      fun (x10449 : t) ->
        fun ?start:(x10444 : float option) ->
          fun ?end_:(x10445 : float option) ->
            fun () ->
              Ojs.list_of_js T.t_of_js
                (let x10450 = t_to_js x10449 in
                 Ojs.call (Ojs.get_prop_ascii x10450 "slice") "apply"
                   [|x10450;((let x10446 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              (match x10444 with
                               | Some x10448 ->
                                   ignore
                                     (Ojs.call x10446 "push"
                                        [|(Ojs.float_to_js x10448)|])
                               | None -> ());
                              (match x10445 with
                               | Some x10447 ->
                                   ignore
                                     (Ojs.call x10446 "push"
                                        [|(Ojs.float_to_js x10447)|])
                               | None -> ());
                              x10446))|])
  end
module Array_Make(T:Ojs.T) =
  struct
    type 'T parent = 'T Array.t
    let rec parent_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T parent =
      fun (type __T) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x10454 : Ojs.t) -> Array.t_of_js __T_of_js x10454
    and parent_to_js : 'T . ('T -> Ojs.t) -> 'T parent -> Ojs.t =
      fun (type __T) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x10452 : __T Array.t) -> Array.t_to_js __T_to_js x10452
    type t = T.t parent
    let rec t_of_js : Ojs.t -> t =
      fun (x10458 : Ojs.t) -> parent_of_js T.t_of_js x10458
    and t_to_js : t -> Ojs.t =
      fun (x10456 : T.t parent) -> parent_to_js T.t_to_js x10456
    let (findLast :
      t ->
        predicate:(value:T.t -> index:float -> array:T.t list -> bool) ->
          ?thisArg:any -> unit -> 'S option)
      =
      fun (x10468 : t) ->
        fun
          ~predicate:(x10460 :
                       value:T.t -> index:float -> array:T.t list -> bool)
          ->
          fun ?thisArg:(x10461 : any option) ->
            fun () ->
              Ojs.option_of_js Obj.magic
                (let x10469 = t_to_js x10468 in
                 Ojs.call (Ojs.get_prop_ascii x10469 "findLast") "apply"
                   [|x10469;((let x10462 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x10462 "push"
                                   [|(Ojs.fun_to_js 3
                                        (fun (x10464 : Ojs.t) ->
                                           fun (x10465 : Ojs.t) ->
                                             fun (x10466 : Ojs.t) ->
                                               Ojs.bool_to_js
                                                 (x10460
                                                    ~value:(T.t_of_js x10464)
                                                    ~index:(Ojs.float_of_js
                                                              x10465)
                                                    ~array:(Ojs.list_of_js
                                                              T.t_of_js
                                                              x10466))))|]);
                              (match x10461 with
                               | Some x10463 ->
                                   ignore
                                     (Ojs.call x10462 "push"
                                        [|(any_to_js x10463)|])
                               | None -> ());
                              x10462))|])
    let (findLast :
      t ->
        predicate:(value:T.t -> index:float -> array:T.t list -> unknown) ->
          ?thisArg:any -> unit -> T.t option)
      =
      fun (x10479 : t) ->
        fun
          ~predicate:(x10471 :
                       value:T.t -> index:float -> array:T.t list -> unknown)
          ->
          fun ?thisArg:(x10472 : any option) ->
            fun () ->
              Ojs.option_of_js T.t_of_js
                (let x10480 = t_to_js x10479 in
                 Ojs.call (Ojs.get_prop_ascii x10480 "findLast") "apply"
                   [|x10480;((let x10473 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x10473 "push"
                                   [|(Ojs.fun_to_js 3
                                        (fun (x10475 : Ojs.t) ->
                                           fun (x10476 : Ojs.t) ->
                                             fun (x10477 : Ojs.t) ->
                                               unknown_to_js
                                                 (x10471
                                                    ~value:(T.t_of_js x10475)
                                                    ~index:(Ojs.float_of_js
                                                              x10476)
                                                    ~array:(Ojs.list_of_js
                                                              T.t_of_js
                                                              x10477))))|]);
                              (match x10472 with
                               | Some x10474 ->
                                   ignore
                                     (Ojs.call x10473 "push"
                                        [|(any_to_js x10474)|])
                               | None -> ());
                              x10473))|])
    let (findLastIndex :
      t ->
        predicate:(value:T.t -> index:float -> array:T.t list -> unknown) ->
          ?thisArg:any -> unit -> float)
      =
      fun (x10490 : t) ->
        fun
          ~predicate:(x10482 :
                       value:T.t -> index:float -> array:T.t list -> unknown)
          ->
          fun ?thisArg:(x10483 : any option) ->
            fun () ->
              Ojs.float_of_js
                (let x10491 = t_to_js x10490 in
                 Ojs.call (Ojs.get_prop_ascii x10491 "findLastIndex") "apply"
                   [|x10491;((let x10484 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x10484 "push"
                                   [|(Ojs.fun_to_js 3
                                        (fun (x10486 : Ojs.t) ->
                                           fun (x10487 : Ojs.t) ->
                                             fun (x10488 : Ojs.t) ->
                                               unknown_to_js
                                                 (x10482
                                                    ~value:(T.t_of_js x10486)
                                                    ~index:(Ojs.float_of_js
                                                              x10487)
                                                    ~array:(Ojs.list_of_js
                                                              T.t_of_js
                                                              x10488))))|]);
                              (match x10483 with
                               | Some x10485 ->
                                   ignore
                                     (Ojs.call x10484 "push"
                                        [|(any_to_js x10485)|])
                               | None -> ());
                              x10484))|])
    let (at : t -> index:float -> T.t option) =
      fun (x10493 : t) ->
        fun ~index:(x10492 : float) ->
          Ojs.option_of_js T.t_of_js
            (Ojs.call (t_to_js x10493) "at" [|(Ojs.float_to_js x10492)|])
    let (flatMap :
      t ->
        callback:(this:'This ->
                    value:T.t ->
                      index:float ->
                        array:T.t list ->
                          [ `U1 of 'U  | `U2 of 'U ReadonlyArray.t ])
          -> ?thisArg:'This -> unit -> 'U list)
      =
      fun (x10507 : t) ->
        fun
          ~callback:(x10495 :
                      this:'This ->
                        value:T.t ->
                          index:float ->
                            array:T.t list ->
                              [ `U1 of 'U  | `U2 of 'U ReadonlyArray.t ])
          ->
          fun ?thisArg:(x10496 : 'This option) ->
            fun () ->
              Ojs.list_of_js Obj.magic
                (let x10508 = t_to_js x10507 in
                 Ojs.call (Ojs.get_prop_ascii x10508 "flatMap") "apply"
                   [|x10508;((let x10497 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x10497 "push"
                                   [|(Ojs.fun_to_js 4
                                        (fun (x10499 : Ojs.t) ->
                                           fun (x10500 : Ojs.t) ->
                                             fun (x10501 : Ojs.t) ->
                                               fun (x10502 : Ojs.t) ->
                                                 match x10495
                                                         ~this:(Obj.magic
                                                                  x10499)
                                                         ~value:(T.t_of_js
                                                                   x10500)
                                                         ~index:(Ojs.float_of_js
                                                                   x10501)
                                                         ~array:(Ojs.list_of_js
                                                                   T.t_of_js
                                                                   x10502)
                                                 with
                                                 | `U1 x10504 ->
                                                     Obj.magic x10504
                                                 | `U2 x10505 ->
                                                     ReadonlyArray.t_to_js
                                                       Obj.magic x10505))|]);
                              (match x10496 with
                               | Some x10498 ->
                                   ignore
                                     (Ojs.call x10497 "push"
                                        [|(Obj.magic x10498)|])
                               | None -> ());
                              x10497))|])
    let (flat :
      t -> this:'A -> ?depth:'D -> unit -> ('A, 'D) FlatArray.t list) =
      fun (x10514 : t) ->
        fun ~this:(x10510 : 'A) ->
          fun ?depth:(x10511 : 'D option) ->
            fun () ->
              Ojs.list_of_js
                (fun (x10516 : Ojs.t) ->
                   FlatArray.t_of_js Obj.magic Obj.magic x10516)
                (let x10515 = t_to_js x10514 in
                 Ojs.call (Ojs.get_prop_ascii x10515 "flat") "apply"
                   [|x10515;((let x10512 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x10512 "push"
                                   [|(Obj.magic x10510)|]);
                              (match x10511 with
                               | Some x10513 ->
                                   ignore
                                     (Ojs.call x10512 "push"
                                        [|(Obj.magic x10513)|])
                               | None -> ());
                              x10512))|])
    let (includes :
      t -> searchElement:T.t -> ?fromIndex:float -> unit -> bool) =
      fun (x10523 : t) ->
        fun ~searchElement:(x10519 : T.t) ->
          fun ?fromIndex:(x10520 : float option) ->
            fun () ->
              Ojs.bool_of_js
                (let x10524 = t_to_js x10523 in
                 Ojs.call (Ojs.get_prop_ascii x10524 "includes") "apply"
                   [|x10524;((let x10521 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x10521 "push"
                                   [|(T.t_to_js x10519)|]);
                              (match x10520 with
                               | Some x10522 ->
                                   ignore
                                     (Ojs.call x10521 "push"
                                        [|(Ojs.float_to_js x10522)|])
                               | None -> ());
                              x10521))|])
    let (entries : t -> (float * T.t) IterableIterator.t) =
      fun (x10525 : t) ->
        IterableIterator.t_of_js
          (fun (x10526 : Ojs.t) ->
             let x10527 = x10526 in
             ((Ojs.float_of_js (Ojs.array_get x10527 0)),
               (T.t_of_js (Ojs.array_get x10527 1))))
          (Ojs.call (t_to_js x10525) "entries" [||])
    let (keys : t -> float IterableIterator.t) =
      fun (x10528 : t) ->
        IterableIterator.t_of_js Ojs.float_of_js
          (Ojs.call (t_to_js x10528) "keys" [||])
    let (values : t -> T.t IterableIterator.t) =
      fun (x10530 : t) ->
        IterableIterator.t_of_js T.t_of_js
          (Ojs.call (t_to_js x10530) "values" [||])
    let (find :
      t ->
        predicate:(value:T.t -> index:float -> obj:T.t list -> bool) ->
          ?thisArg:any -> unit -> 'S option)
      =
      fun (x10540 : t) ->
        fun
          ~predicate:(x10532 :
                       value:T.t -> index:float -> obj:T.t list -> bool)
          ->
          fun ?thisArg:(x10533 : any option) ->
            fun () ->
              Ojs.option_of_js Obj.magic
                (let x10541 = t_to_js x10540 in
                 Ojs.call (Ojs.get_prop_ascii x10541 "find") "apply"
                   [|x10541;((let x10534 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x10534 "push"
                                   [|(Ojs.fun_to_js 3
                                        (fun (x10536 : Ojs.t) ->
                                           fun (x10537 : Ojs.t) ->
                                             fun (x10538 : Ojs.t) ->
                                               Ojs.bool_to_js
                                                 (x10532
                                                    ~value:(T.t_of_js x10536)
                                                    ~index:(Ojs.float_of_js
                                                              x10537)
                                                    ~obj:(Ojs.list_of_js
                                                            T.t_of_js x10538))))|]);
                              (match x10533 with
                               | Some x10535 ->
                                   ignore
                                     (Ojs.call x10534 "push"
                                        [|(any_to_js x10535)|])
                               | None -> ());
                              x10534))|])
    let (find :
      t ->
        predicate:(value:T.t -> index:float -> obj:T.t list -> unknown) ->
          ?thisArg:any -> unit -> T.t option)
      =
      fun (x10551 : t) ->
        fun
          ~predicate:(x10543 :
                       value:T.t -> index:float -> obj:T.t list -> unknown)
          ->
          fun ?thisArg:(x10544 : any option) ->
            fun () ->
              Ojs.option_of_js T.t_of_js
                (let x10552 = t_to_js x10551 in
                 Ojs.call (Ojs.get_prop_ascii x10552 "find") "apply"
                   [|x10552;((let x10545 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x10545 "push"
                                   [|(Ojs.fun_to_js 3
                                        (fun (x10547 : Ojs.t) ->
                                           fun (x10548 : Ojs.t) ->
                                             fun (x10549 : Ojs.t) ->
                                               unknown_to_js
                                                 (x10543
                                                    ~value:(T.t_of_js x10547)
                                                    ~index:(Ojs.float_of_js
                                                              x10548)
                                                    ~obj:(Ojs.list_of_js
                                                            T.t_of_js x10549))))|]);
                              (match x10544 with
                               | Some x10546 ->
                                   ignore
                                     (Ojs.call x10545 "push"
                                        [|(any_to_js x10546)|])
                               | None -> ());
                              x10545))|])
    let (findIndex :
      t ->
        predicate:(value:T.t -> index:float -> obj:T.t list -> unknown) ->
          ?thisArg:any -> unit -> float)
      =
      fun (x10562 : t) ->
        fun
          ~predicate:(x10554 :
                       value:T.t -> index:float -> obj:T.t list -> unknown)
          ->
          fun ?thisArg:(x10555 : any option) ->
            fun () ->
              Ojs.float_of_js
                (let x10563 = t_to_js x10562 in
                 Ojs.call (Ojs.get_prop_ascii x10563 "findIndex") "apply"
                   [|x10563;((let x10556 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x10556 "push"
                                   [|(Ojs.fun_to_js 3
                                        (fun (x10558 : Ojs.t) ->
                                           fun (x10559 : Ojs.t) ->
                                             fun (x10560 : Ojs.t) ->
                                               unknown_to_js
                                                 (x10554
                                                    ~value:(T.t_of_js x10558)
                                                    ~index:(Ojs.float_of_js
                                                              x10559)
                                                    ~obj:(Ojs.list_of_js
                                                            T.t_of_js x10560))))|]);
                              (match x10555 with
                               | Some x10557 ->
                                   ignore
                                     (Ojs.call x10556 "push"
                                        [|(any_to_js x10557)|])
                               | None -> ());
                              x10556))|])
    let (fill : t -> value:T.t -> ?start:float -> ?end_:float -> unit -> t) =
      fun (x10570 : t) ->
        fun ~value:(x10564 : T.t) ->
          fun ?start:(x10565 : float option) ->
            fun ?end_:(x10566 : float option) ->
              fun () ->
                t_of_js
                  (let x10571 = t_to_js x10570 in
                   Ojs.call (Ojs.get_prop_ascii x10571 "fill") "apply"
                     [|x10571;((let x10567 =
                                  Ojs.new_obj
                                    (Ojs.get_prop_ascii Ojs.global "Array")
                                    [||] in
                                ignore
                                  (Ojs.call x10567 "push"
                                     [|(T.t_to_js x10564)|]);
                                (match x10565 with
                                 | Some x10569 ->
                                     ignore
                                       (Ojs.call x10567 "push"
                                          [|(Ojs.float_to_js x10569)|])
                                 | None -> ());
                                (match x10566 with
                                 | Some x10568 ->
                                     ignore
                                       (Ojs.call x10567 "push"
                                          [|(Ojs.float_to_js x10568)|])
                                 | None -> ());
                                x10567))|])
    let (copyWithin :
      t -> target:float -> ?start:float -> ?end_:float -> unit -> t) =
      fun (x10578 : t) ->
        fun ~target:(x10572 : float) ->
          fun ?start:(x10573 : float option) ->
            fun ?end_:(x10574 : float option) ->
              fun () ->
                t_of_js
                  (let x10579 = t_to_js x10578 in
                   Ojs.call (Ojs.get_prop_ascii x10579 "copyWithin") "apply"
                     [|x10579;((let x10575 =
                                  Ojs.new_obj
                                    (Ojs.get_prop_ascii Ojs.global "Array")
                                    [||] in
                                ignore
                                  (Ojs.call x10575 "push"
                                     [|(Ojs.float_to_js x10572)|]);
                                (match x10573 with
                                 | Some x10577 ->
                                     ignore
                                       (Ojs.call x10575 "push"
                                          [|(Ojs.float_to_js x10577)|])
                                 | None -> ());
                                (match x10574 with
                                 | Some x10576 ->
                                     ignore
                                       (Ojs.call x10575 "push"
                                          [|(Ojs.float_to_js x10576)|])
                                 | None -> ());
                                x10575))|])
    let (get_length : t -> float) =
      fun (x10580 : t) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x10580) "length")
    let (set_length : t -> float -> unit) =
      fun (x10581 : t) ->
        fun (x10582 : float) ->
          Ojs.set_prop_ascii (t_to_js x10581) "length"
            (Ojs.float_to_js x10582)
    let (toString : t -> string) =
      fun (x10583 : t) ->
        Ojs.string_of_js (Ojs.call (t_to_js x10583) "toString" [||])
    let (toLocaleString : t -> string) =
      fun (x10584 : t) ->
        Ojs.string_of_js (Ojs.call (t_to_js x10584) "toLocaleString" [||])
    let (pop : t -> T.t option) =
      fun (x10585 : t) ->
        Ojs.option_of_js T.t_of_js (Ojs.call (t_to_js x10585) "pop" [||])
    let (push : t -> items:T.t list -> float) =
      fun (x10590 : t) ->
        fun ~items:(x10587 : T.t list) ->
          Ojs.float_of_js
            (let x10591 = t_to_js x10590 in
             Ojs.call (Ojs.get_prop_ascii x10591 "push") "apply"
               [|x10591;((let x10588 =
                            Ojs.new_obj
                              (Ojs.get_prop_ascii Ojs.global "Array") 
                              [||] in
                          List.iter
                            (fun (x10589 : T.t) ->
                               ignore
                                 (Ojs.call x10588 "push"
                                    [|(T.t_to_js x10589)|])) x10587;
                          x10588))|])
    let (concat : t -> items:T.t ConcatArray.t list -> T.t list) =
      fun (x10596 : t) ->
        fun ~items:(x10592 : T.t ConcatArray.t list) ->
          Ojs.list_of_js T.t_of_js
            (let x10597 = t_to_js x10596 in
             Ojs.call (Ojs.get_prop_ascii x10597 "concat") "apply"
               [|x10597;((let x10593 =
                            Ojs.new_obj
                              (Ojs.get_prop_ascii Ojs.global "Array") 
                              [||] in
                          List.iter
                            (fun (x10594 : T.t ConcatArray.t) ->
                               ignore
                                 (Ojs.call x10593 "push"
                                    [|(ConcatArray.t_to_js T.t_to_js x10594)|]))
                            x10592;
                          x10593))|])
    let (concat :
      t -> items:[ `U1 of T.t  | `U2 of T.t ConcatArray.t ] list -> T.t list)
      =
      fun (x10605 : t) ->
        fun ~items:(x10599 : [ `U1 of T.t  | `U2 of T.t ConcatArray.t ] list)
          ->
          Ojs.list_of_js T.t_of_js
            (let x10606 = t_to_js x10605 in
             Ojs.call (Ojs.get_prop_ascii x10606 "concat") "apply"
               [|x10606;((let x10600 =
                            Ojs.new_obj
                              (Ojs.get_prop_ascii Ojs.global "Array") 
                              [||] in
                          List.iter
                            (fun
                               (x10601 :
                                 [ `U1 of T.t  | `U2 of T.t ConcatArray.t ])
                               ->
                               ignore
                                 (Ojs.call x10600 "push"
                                    [|((match x10601 with
                                        | `U1 x10602 -> T.t_to_js x10602
                                        | `U2 x10603 ->
                                            ConcatArray.t_to_js T.t_to_js
                                              x10603))|])) x10599;
                          x10600))|])
    let (join : t -> ?separator:string -> unit -> string) =
      fun (x10611 : t) ->
        fun ?separator:(x10608 : string option) ->
          fun () ->
            Ojs.string_of_js
              (let x10612 = t_to_js x10611 in
               Ojs.call (Ojs.get_prop_ascii x10612 "join") "apply"
                 [|x10612;((let x10609 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x10608 with
                             | Some x10610 ->
                                 ignore
                                   (Ojs.call x10609 "push"
                                      [|(Ojs.string_to_js x10610)|])
                             | None -> ());
                            x10609))|])
    let (reverse : t -> T.t list) =
      fun (x10613 : t) ->
        Ojs.list_of_js T.t_of_js (Ojs.call (t_to_js x10613) "reverse" [||])
    let (shift : t -> T.t option) =
      fun (x10615 : t) ->
        Ojs.option_of_js T.t_of_js (Ojs.call (t_to_js x10615) "shift" [||])
    let (slice : t -> ?start:float -> ?end_:float -> unit -> T.t list) =
      fun (x10622 : t) ->
        fun ?start:(x10617 : float option) ->
          fun ?end_:(x10618 : float option) ->
            fun () ->
              Ojs.list_of_js T.t_of_js
                (let x10623 = t_to_js x10622 in
                 Ojs.call (Ojs.get_prop_ascii x10623 "slice") "apply"
                   [|x10623;((let x10619 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              (match x10617 with
                               | Some x10621 ->
                                   ignore
                                     (Ojs.call x10619 "push"
                                        [|(Ojs.float_to_js x10621)|])
                               | None -> ());
                              (match x10618 with
                               | Some x10620 ->
                                   ignore
                                     (Ojs.call x10619 "push"
                                        [|(Ojs.float_to_js x10620)|])
                               | None -> ());
                              x10619))|])
    let (sort : t -> ?compareFn:(a:T.t -> b:T.t -> float) -> unit -> t) =
      fun (x10630 : t) ->
        fun ?compareFn:(x10625 : (a:T.t -> b:T.t -> float) option) ->
          fun () ->
            t_of_js
              (let x10631 = t_to_js x10630 in
               Ojs.call (Ojs.get_prop_ascii x10631 "sort") "apply"
                 [|x10631;((let x10626 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x10625 with
                             | Some x10627 ->
                                 ignore
                                   (Ojs.call x10626 "push"
                                      [|(Ojs.fun_to_js 2
                                           (fun (x10628 : Ojs.t) ->
                                              fun (x10629 : Ojs.t) ->
                                                Ojs.float_to_js
                                                  (x10627
                                                     ~a:(T.t_of_js x10628)
                                                     ~b:(T.t_of_js x10629))))|])
                             | None -> ());
                            x10626))|])
    let (splice : t -> start:float -> ?deleteCount:float -> unit -> T.t list)
      =
      fun (x10636 : t) ->
        fun ~start:(x10632 : float) ->
          fun ?deleteCount:(x10633 : float option) ->
            fun () ->
              Ojs.list_of_js T.t_of_js
                (let x10637 = t_to_js x10636 in
                 Ojs.call (Ojs.get_prop_ascii x10637 "splice") "apply"
                   [|x10637;((let x10634 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x10634 "push"
                                   [|(Ojs.float_to_js x10632)|]);
                              (match x10633 with
                               | Some x10635 ->
                                   ignore
                                     (Ojs.call x10634 "push"
                                        [|(Ojs.float_to_js x10635)|])
                               | None -> ());
                              x10634))|])
    let (splice :
      t -> start:float -> deleteCount:float -> items:T.t list -> T.t list) =
      fun (x10644 : t) ->
        fun ~start:(x10639 : float) ->
          fun ~deleteCount:(x10640 : float) ->
            fun ~items:(x10641 : T.t list) ->
              Ojs.list_of_js T.t_of_js
                (let x10645 = t_to_js x10644 in
                 Ojs.call (Ojs.get_prop_ascii x10645 "splice") "apply"
                   [|x10645;((let x10642 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x10642 "push"
                                   [|(Ojs.float_to_js x10639)|]);
                              ignore
                                (Ojs.call x10642 "push"
                                   [|(Ojs.float_to_js x10640)|]);
                              List.iter
                                (fun (x10643 : T.t) ->
                                   ignore
                                     (Ojs.call x10642 "push"
                                        [|(T.t_to_js x10643)|])) x10641;
                              x10642))|])
    let (unshift : t -> items:T.t list -> float) =
      fun (x10650 : t) ->
        fun ~items:(x10647 : T.t list) ->
          Ojs.float_of_js
            (let x10651 = t_to_js x10650 in
             Ojs.call (Ojs.get_prop_ascii x10651 "unshift") "apply"
               [|x10651;((let x10648 =
                            Ojs.new_obj
                              (Ojs.get_prop_ascii Ojs.global "Array") 
                              [||] in
                          List.iter
                            (fun (x10649 : T.t) ->
                               ignore
                                 (Ojs.call x10648 "push"
                                    [|(T.t_to_js x10649)|])) x10647;
                          x10648))|])
    let (indexOf :
      t -> searchElement:T.t -> ?fromIndex:float -> unit -> float) =
      fun (x10656 : t) ->
        fun ~searchElement:(x10652 : T.t) ->
          fun ?fromIndex:(x10653 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x10657 = t_to_js x10656 in
                 Ojs.call (Ojs.get_prop_ascii x10657 "indexOf") "apply"
                   [|x10657;((let x10654 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x10654 "push"
                                   [|(T.t_to_js x10652)|]);
                              (match x10653 with
                               | Some x10655 ->
                                   ignore
                                     (Ojs.call x10654 "push"
                                        [|(Ojs.float_to_js x10655)|])
                               | None -> ());
                              x10654))|])
    let (lastIndexOf :
      t -> searchElement:T.t -> ?fromIndex:float -> unit -> float) =
      fun (x10662 : t) ->
        fun ~searchElement:(x10658 : T.t) ->
          fun ?fromIndex:(x10659 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x10663 = t_to_js x10662 in
                 Ojs.call (Ojs.get_prop_ascii x10663 "lastIndexOf") "apply"
                   [|x10663;((let x10660 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x10660 "push"
                                   [|(T.t_to_js x10658)|]);
                              (match x10659 with
                               | Some x10661 ->
                                   ignore
                                     (Ojs.call x10660 "push"
                                        [|(Ojs.float_to_js x10661)|])
                               | None -> ());
                              x10660))|])
    let (every :
      t ->
        predicate:(value:T.t -> index:float -> array:T.t list -> bool) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x10672 : t) ->
        fun
          ~predicate:(x10664 :
                       value:T.t -> index:float -> array:T.t list -> bool)
          ->
          fun ?thisArg:(x10665 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x10673 = t_to_js x10672 in
                 Ojs.call (Ojs.get_prop_ascii x10673 "every") "apply"
                   [|x10673;((let x10666 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x10666 "push"
                                   [|(Ojs.fun_to_js 3
                                        (fun (x10668 : Ojs.t) ->
                                           fun (x10669 : Ojs.t) ->
                                             fun (x10670 : Ojs.t) ->
                                               Ojs.bool_to_js
                                                 (x10664
                                                    ~value:(T.t_of_js x10668)
                                                    ~index:(Ojs.float_of_js
                                                              x10669)
                                                    ~array:(Ojs.list_of_js
                                                              T.t_of_js
                                                              x10670))))|]);
                              (match x10665 with
                               | Some x10667 ->
                                   ignore
                                     (Ojs.call x10666 "push"
                                        [|(any_to_js x10667)|])
                               | None -> ());
                              x10666))|])
    let (every :
      t ->
        predicate:(value:T.t -> index:float -> array:T.t list -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x10682 : t) ->
        fun
          ~predicate:(x10674 :
                       value:T.t -> index:float -> array:T.t list -> unknown)
          ->
          fun ?thisArg:(x10675 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x10683 = t_to_js x10682 in
                 Ojs.call (Ojs.get_prop_ascii x10683 "every") "apply"
                   [|x10683;((let x10676 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x10676 "push"
                                   [|(Ojs.fun_to_js 3
                                        (fun (x10678 : Ojs.t) ->
                                           fun (x10679 : Ojs.t) ->
                                             fun (x10680 : Ojs.t) ->
                                               unknown_to_js
                                                 (x10674
                                                    ~value:(T.t_of_js x10678)
                                                    ~index:(Ojs.float_of_js
                                                              x10679)
                                                    ~array:(Ojs.list_of_js
                                                              T.t_of_js
                                                              x10680))))|]);
                              (match x10675 with
                               | Some x10677 ->
                                   ignore
                                     (Ojs.call x10676 "push"
                                        [|(any_to_js x10677)|])
                               | None -> ());
                              x10676))|])
    let (some :
      t ->
        predicate:(value:T.t -> index:float -> array:T.t list -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x10692 : t) ->
        fun
          ~predicate:(x10684 :
                       value:T.t -> index:float -> array:T.t list -> unknown)
          ->
          fun ?thisArg:(x10685 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x10693 = t_to_js x10692 in
                 Ojs.call (Ojs.get_prop_ascii x10693 "some") "apply"
                   [|x10693;((let x10686 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x10686 "push"
                                   [|(Ojs.fun_to_js 3
                                        (fun (x10688 : Ojs.t) ->
                                           fun (x10689 : Ojs.t) ->
                                             fun (x10690 : Ojs.t) ->
                                               unknown_to_js
                                                 (x10684
                                                    ~value:(T.t_of_js x10688)
                                                    ~index:(Ojs.float_of_js
                                                              x10689)
                                                    ~array:(Ojs.list_of_js
                                                              T.t_of_js
                                                              x10690))))|]);
                              (match x10685 with
                               | Some x10687 ->
                                   ignore
                                     (Ojs.call x10686 "push"
                                        [|(any_to_js x10687)|])
                               | None -> ());
                              x10686))|])
    let (forEach :
      t ->
        callbackfn:(value:T.t -> index:float -> array:T.t list -> unit) ->
          ?thisArg:any -> unit -> unit)
      =
      fun (x10702 : t) ->
        fun
          ~callbackfn:(x10694 :
                        value:T.t -> index:float -> array:T.t list -> unit)
          ->
          fun ?thisArg:(x10695 : any option) ->
            fun () ->
              ignore
                (let x10703 = t_to_js x10702 in
                 Ojs.call (Ojs.get_prop_ascii x10703 "forEach") "apply"
                   [|x10703;((let x10696 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x10696 "push"
                                   [|(Ojs.fun_to_js 3
                                        (fun (x10698 : Ojs.t) ->
                                           fun (x10699 : Ojs.t) ->
                                             fun (x10700 : Ojs.t) ->
                                               x10694
                                                 ~value:(T.t_of_js x10698)
                                                 ~index:(Ojs.float_of_js
                                                           x10699)
                                                 ~array:(Ojs.list_of_js
                                                           T.t_of_js x10700)))|]);
                              (match x10695 with
                               | Some x10697 ->
                                   ignore
                                     (Ojs.call x10696 "push"
                                        [|(any_to_js x10697)|])
                               | None -> ());
                              x10696))|])
    let (map :
      t ->
        callbackfn:(value:T.t -> index:float -> array:T.t list -> 'U) ->
          ?thisArg:any -> unit -> 'U list)
      =
      fun (x10712 : t) ->
        fun
          ~callbackfn:(x10704 :
                        value:T.t -> index:float -> array:T.t list -> 'U)
          ->
          fun ?thisArg:(x10705 : any option) ->
            fun () ->
              Ojs.list_of_js Obj.magic
                (let x10713 = t_to_js x10712 in
                 Ojs.call (Ojs.get_prop_ascii x10713 "map") "apply"
                   [|x10713;((let x10706 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x10706 "push"
                                   [|(Ojs.fun_to_js 3
                                        (fun (x10708 : Ojs.t) ->
                                           fun (x10709 : Ojs.t) ->
                                             fun (x10710 : Ojs.t) ->
                                               Obj.magic
                                                 (x10704
                                                    ~value:(T.t_of_js x10708)
                                                    ~index:(Ojs.float_of_js
                                                              x10709)
                                                    ~array:(Ojs.list_of_js
                                                              T.t_of_js
                                                              x10710))))|]);
                              (match x10705 with
                               | Some x10707 ->
                                   ignore
                                     (Ojs.call x10706 "push"
                                        [|(any_to_js x10707)|])
                               | None -> ());
                              x10706))|])
    let (filter :
      t ->
        predicate:(value:T.t -> index:float -> array:T.t list -> bool) ->
          ?thisArg:any -> unit -> 'S list)
      =
      fun (x10723 : t) ->
        fun
          ~predicate:(x10715 :
                       value:T.t -> index:float -> array:T.t list -> bool)
          ->
          fun ?thisArg:(x10716 : any option) ->
            fun () ->
              Ojs.list_of_js Obj.magic
                (let x10724 = t_to_js x10723 in
                 Ojs.call (Ojs.get_prop_ascii x10724 "filter") "apply"
                   [|x10724;((let x10717 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x10717 "push"
                                   [|(Ojs.fun_to_js 3
                                        (fun (x10719 : Ojs.t) ->
                                           fun (x10720 : Ojs.t) ->
                                             fun (x10721 : Ojs.t) ->
                                               Ojs.bool_to_js
                                                 (x10715
                                                    ~value:(T.t_of_js x10719)
                                                    ~index:(Ojs.float_of_js
                                                              x10720)
                                                    ~array:(Ojs.list_of_js
                                                              T.t_of_js
                                                              x10721))))|]);
                              (match x10716 with
                               | Some x10718 ->
                                   ignore
                                     (Ojs.call x10717 "push"
                                        [|(any_to_js x10718)|])
                               | None -> ());
                              x10717))|])
    let (filter :
      t ->
        predicate:(value:T.t -> index:float -> array:T.t list -> unknown) ->
          ?thisArg:any -> unit -> T.t list)
      =
      fun (x10734 : t) ->
        fun
          ~predicate:(x10726 :
                       value:T.t -> index:float -> array:T.t list -> unknown)
          ->
          fun ?thisArg:(x10727 : any option) ->
            fun () ->
              Ojs.list_of_js T.t_of_js
                (let x10735 = t_to_js x10734 in
                 Ojs.call (Ojs.get_prop_ascii x10735 "filter") "apply"
                   [|x10735;((let x10728 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x10728 "push"
                                   [|(Ojs.fun_to_js 3
                                        (fun (x10730 : Ojs.t) ->
                                           fun (x10731 : Ojs.t) ->
                                             fun (x10732 : Ojs.t) ->
                                               unknown_to_js
                                                 (x10726
                                                    ~value:(T.t_of_js x10730)
                                                    ~index:(Ojs.float_of_js
                                                              x10731)
                                                    ~array:(Ojs.list_of_js
                                                              T.t_of_js
                                                              x10732))))|]);
                              (match x10727 with
                               | Some x10729 ->
                                   ignore
                                     (Ojs.call x10728 "push"
                                        [|(any_to_js x10729)|])
                               | None -> ());
                              x10728))|])
    let (reduce :
      t ->
        callbackfn:(previousValue:T.t ->
                      currentValue:T.t ->
                        currentIndex:float -> array:T.t list -> T.t)
          -> T.t)
      =
      fun (x10743 : t) ->
        fun
          ~callbackfn:(x10737 :
                        previousValue:T.t ->
                          currentValue:T.t ->
                            currentIndex:float -> array:T.t list -> T.t)
          ->
          T.t_of_js
            (Ojs.call (t_to_js x10743) "reduce"
               [|(Ojs.fun_to_js 4
                    (fun (x10738 : Ojs.t) ->
                       fun (x10739 : Ojs.t) ->
                         fun (x10740 : Ojs.t) ->
                           fun (x10741 : Ojs.t) ->
                             T.t_to_js
                               (x10737 ~previousValue:(T.t_of_js x10738)
                                  ~currentValue:(T.t_of_js x10739)
                                  ~currentIndex:(Ojs.float_of_js x10740)
                                  ~array:(Ojs.list_of_js T.t_of_js x10741))))|])
    let (reduce :
      t ->
        callbackfn:(previousValue:T.t ->
                      currentValue:T.t ->
                        currentIndex:float -> array:T.t list -> T.t)
          -> initialValue:T.t -> T.t)
      =
      fun (x10751 : t) ->
        fun
          ~callbackfn:(x10744 :
                        previousValue:T.t ->
                          currentValue:T.t ->
                            currentIndex:float -> array:T.t list -> T.t)
          ->
          fun ~initialValue:(x10750 : T.t) ->
            T.t_of_js
              (Ojs.call (t_to_js x10751) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x10745 : Ojs.t) ->
                         fun (x10746 : Ojs.t) ->
                           fun (x10747 : Ojs.t) ->
                             fun (x10748 : Ojs.t) ->
                               T.t_to_js
                                 (x10744 ~previousValue:(T.t_of_js x10745)
                                    ~currentValue:(T.t_of_js x10746)
                                    ~currentIndex:(Ojs.float_of_js x10747)
                                    ~array:(Ojs.list_of_js T.t_of_js x10748))));(
                   T.t_to_js x10750)|])
    let (reduce :
      t ->
        callbackfn:(previousValue:'U ->
                      currentValue:T.t ->
                        currentIndex:float -> array:T.t list -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x10759 : t) ->
        fun
          ~callbackfn:(x10752 :
                        previousValue:'U ->
                          currentValue:T.t ->
                            currentIndex:float -> array:T.t list -> 'U)
          ->
          fun ~initialValue:(x10758 : 'U) ->
            Obj.magic
              (Ojs.call (t_to_js x10759) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x10753 : Ojs.t) ->
                         fun (x10754 : Ojs.t) ->
                           fun (x10755 : Ojs.t) ->
                             fun (x10756 : Ojs.t) ->
                               Obj.magic
                                 (x10752 ~previousValue:(Obj.magic x10753)
                                    ~currentValue:(T.t_of_js x10754)
                                    ~currentIndex:(Ojs.float_of_js x10755)
                                    ~array:(Ojs.list_of_js T.t_of_js x10756))));(
                   Obj.magic x10758)|])
    let (reduceRight :
      t ->
        callbackfn:(previousValue:T.t ->
                      currentValue:T.t ->
                        currentIndex:float -> array:T.t list -> T.t)
          -> T.t)
      =
      fun (x10766 : t) ->
        fun
          ~callbackfn:(x10760 :
                        previousValue:T.t ->
                          currentValue:T.t ->
                            currentIndex:float -> array:T.t list -> T.t)
          ->
          T.t_of_js
            (Ojs.call (t_to_js x10766) "reduceRight"
               [|(Ojs.fun_to_js 4
                    (fun (x10761 : Ojs.t) ->
                       fun (x10762 : Ojs.t) ->
                         fun (x10763 : Ojs.t) ->
                           fun (x10764 : Ojs.t) ->
                             T.t_to_js
                               (x10760 ~previousValue:(T.t_of_js x10761)
                                  ~currentValue:(T.t_of_js x10762)
                                  ~currentIndex:(Ojs.float_of_js x10763)
                                  ~array:(Ojs.list_of_js T.t_of_js x10764))))|])
    let (reduceRight :
      t ->
        callbackfn:(previousValue:T.t ->
                      currentValue:T.t ->
                        currentIndex:float -> array:T.t list -> T.t)
          -> initialValue:T.t -> T.t)
      =
      fun (x10774 : t) ->
        fun
          ~callbackfn:(x10767 :
                        previousValue:T.t ->
                          currentValue:T.t ->
                            currentIndex:float -> array:T.t list -> T.t)
          ->
          fun ~initialValue:(x10773 : T.t) ->
            T.t_of_js
              (Ojs.call (t_to_js x10774) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x10768 : Ojs.t) ->
                         fun (x10769 : Ojs.t) ->
                           fun (x10770 : Ojs.t) ->
                             fun (x10771 : Ojs.t) ->
                               T.t_to_js
                                 (x10767 ~previousValue:(T.t_of_js x10768)
                                    ~currentValue:(T.t_of_js x10769)
                                    ~currentIndex:(Ojs.float_of_js x10770)
                                    ~array:(Ojs.list_of_js T.t_of_js x10771))));(
                   T.t_to_js x10773)|])
    let (reduceRight :
      t ->
        callbackfn:(previousValue:'U ->
                      currentValue:T.t ->
                        currentIndex:float -> array:T.t list -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x10782 : t) ->
        fun
          ~callbackfn:(x10775 :
                        previousValue:'U ->
                          currentValue:T.t ->
                            currentIndex:float -> array:T.t list -> 'U)
          ->
          fun ~initialValue:(x10781 : 'U) ->
            Obj.magic
              (Ojs.call (t_to_js x10782) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x10776 : Ojs.t) ->
                         fun (x10777 : Ojs.t) ->
                           fun (x10778 : Ojs.t) ->
                             fun (x10779 : Ojs.t) ->
                               Obj.magic
                                 (x10775 ~previousValue:(Obj.magic x10776)
                                    ~currentValue:(T.t_of_js x10777)
                                    ~currentIndex:(Ojs.float_of_js x10778)
                                    ~array:(Ojs.list_of_js T.t_of_js x10779))));(
                   Obj.magic x10781)|])
    let (get : t -> float -> T.t) =
      fun (x10783 : t) ->
        fun (x10784 : float) ->
          T.t_of_js (Ojs.get_prop (t_to_js x10783) (Ojs.float_to_js x10784))
    let (set : t -> float -> T.t -> unit) =
      fun (x10785 : t) ->
        fun (x10786 : float) ->
          fun (x10787 : T.t) ->
            Ojs.set_prop (t_to_js x10785) (Ojs.float_to_js x10786)
              (T.t_to_js x10787)
    let (from :
      [ `U1 of T.t Iterable.t  | `U2 of T.t ArrayLike.t ] -> T.t list) =
      fun (x10788 : [ `U1 of T.t Iterable.t  | `U2 of T.t ArrayLike.t ]) ->
        Ojs.list_of_js T.t_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Array") "from"
             [|((match x10788 with
                 | `U1 x10789 -> Iterable.t_to_js T.t_to_js x10789
                 | `U2 x10791 -> ArrayLike.t_to_js T.t_to_js x10791))|])
    let (from :
      iterable:[ `U1 of T.t Iterable.t  | `U2 of T.t ArrayLike.t ] ->
        mapfn:(v:T.t -> k:float -> 'U) -> ?thisArg:any -> unit -> 'U list)
      =
      fun
        ~iterable:(x10794 :
                    [ `U1 of T.t Iterable.t  | `U2 of T.t ArrayLike.t ])
        ->
        fun ~mapfn:(x10795 : v:T.t -> k:float -> 'U) ->
          fun ?thisArg:(x10796 : any option) ->
            fun () ->
              Ojs.list_of_js Obj.magic
                (let x10805 = Ojs.get_prop_ascii Ojs.global "Array" in
                 Ojs.call (Ojs.get_prop_ascii x10805 "from") "apply"
                   [|x10805;((let x10797 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x10797 "push"
                                   [|((match x10794 with
                                       | `U1 x10801 ->
                                           Iterable.t_to_js T.t_to_js x10801
                                       | `U2 x10803 ->
                                           ArrayLike.t_to_js T.t_to_js x10803))|]);
                              ignore
                                (Ojs.call x10797 "push"
                                   [|(Ojs.fun_to_js 2
                                        (fun (x10799 : Ojs.t) ->
                                           fun (x10800 : Ojs.t) ->
                                             Obj.magic
                                               (x10795 ~v:(T.t_of_js x10799)
                                                  ~k:(Ojs.float_of_js x10800))))|]);
                              (match x10796 with
                               | Some x10798 ->
                                   ignore
                                     (Ojs.call x10797 "push"
                                        [|(any_to_js x10798)|])
                               | None -> ());
                              x10797))|])
    let (from : T.t ArrayLike.t -> T.t list) =
      fun (x10807 : T.t ArrayLike.t) ->
        Ojs.list_of_js T.t_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Array") "from"
             [|(ArrayLike.t_to_js T.t_to_js x10807)|])
    let (from :
      arrayLike:T.t ArrayLike.t ->
        mapfn:(v:T.t -> k:float -> 'U) -> ?thisArg:any -> unit -> 'U list)
      =
      fun ~arrayLike:(x10810 : T.t ArrayLike.t) ->
        fun ~mapfn:(x10811 : v:T.t -> k:float -> 'U) ->
          fun ?thisArg:(x10812 : any option) ->
            fun () ->
              Ojs.list_of_js Obj.magic
                (let x10818 = Ojs.get_prop_ascii Ojs.global "Array" in
                 Ojs.call (Ojs.get_prop_ascii x10818 "from") "apply"
                   [|x10818;((let x10813 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x10813 "push"
                                   [|(ArrayLike.t_to_js T.t_to_js x10810)|]);
                              ignore
                                (Ojs.call x10813 "push"
                                   [|(Ojs.fun_to_js 2
                                        (fun (x10815 : Ojs.t) ->
                                           fun (x10816 : Ojs.t) ->
                                             Obj.magic
                                               (x10811 ~v:(T.t_of_js x10815)
                                                  ~k:(Ojs.float_of_js x10816))))|]);
                              (match x10812 with
                               | Some x10814 ->
                                   ignore
                                     (Ojs.call x10813 "push"
                                        [|(any_to_js x10814)|])
                               | None -> ());
                              x10813))|])
    let (of_ : T.t list -> T.t list) =
      fun (x10820 : T.t list) ->
        Ojs.list_of_js T.t_of_js
          (let x10823 = Ojs.get_prop_ascii Ojs.global "Array" in
           Ojs.call (Ojs.get_prop_ascii x10823 "of") "apply"
             [|x10823;((let x10821 =
                          Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                            [||] in
                        List.iter
                          (fun (x10822 : T.t) ->
                             ignore
                               (Ojs.call x10821 "push" [|(T.t_to_js x10822)|]))
                          x10820;
                        x10821))|])
    let (create : ?arrayLength:float -> unit -> any list) =
      fun ?arrayLength:(x10825 : float option) ->
        fun () ->
          Ojs.list_of_js any_of_js
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "Array")
               (let x10826 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x10825 with
                 | Some x10827 ->
                     ignore
                       (Ojs.call x10826 "push" [|(Ojs.float_to_js x10827)|])
                 | None -> ());
                x10826))
    let (create : float -> T.t list) =
      fun (x10829 : float) ->
        Ojs.list_of_js T.t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
             [|(Ojs.float_to_js x10829)|])
    let (create : T.t list -> T.t list) =
      fun (x10831 : T.t list) ->
        Ojs.list_of_js T.t_of_js
          (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "Array")
             (let x10832 =
                Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
              List.iter
                (fun (x10833 : T.t) ->
                   ignore (Ojs.call x10832 "push" [|(T.t_to_js x10833)|]))
                x10831;
              x10832))
    let (invoke : ?arrayLength:float -> unit -> any list) =
      fun ?arrayLength:(x10835 : float option) ->
        fun () ->
          Ojs.list_of_js any_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "Array") "apply"
               [|Ojs.null;((let x10836 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x10835 with
                             | Some x10837 ->
                                 ignore
                                   (Ojs.call x10836 "push"
                                      [|(Ojs.float_to_js x10837)|])
                             | None -> ());
                            x10836))|])
    let (invoke : float -> T.t list) =
      fun (x10839 : float) ->
        Ojs.list_of_js T.t_of_js
          (Ojs.apply (Ojs.get_prop_ascii Ojs.global "Array")
             [|(Ojs.float_to_js x10839)|])
    let (invoke : T.t list -> T.t list) =
      fun (x10841 : T.t list) ->
        Ojs.list_of_js T.t_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Array") "apply"
             [|Ojs.null;((let x10842 =
                            Ojs.new_obj
                              (Ojs.get_prop_ascii Ojs.global "Array") 
                              [||] in
                          List.iter
                            (fun (x10843 : T.t) ->
                               ignore
                                 (Ojs.call x10842 "push"
                                    [|(T.t_to_js x10843)|])) x10841;
                          x10842))|])
    let (isArray : any -> bool) =
      fun (x10845 : any) ->
        Ojs.bool_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Array") "isArray"
             [|(any_to_js x10845)|])
    let (prototype : unit -> any list) =
      fun () ->
        Ojs.list_of_js any_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Array")
             "prototype")
  end
module TypedPropertyDescriptor_Make(T:Ojs.T) =
  struct
    type 'T parent = 'T TypedPropertyDescriptor.t
    let rec parent_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T parent =
      fun (type __T) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x10849 : Ojs.t) ->
            TypedPropertyDescriptor.t_of_js __T_of_js x10849
    and parent_to_js : 'T . ('T -> Ojs.t) -> 'T parent -> Ojs.t =
      fun (type __T) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x10847 : __T TypedPropertyDescriptor.t) ->
            TypedPropertyDescriptor.t_to_js __T_to_js x10847
    type t = T.t parent
    let rec t_of_js : Ojs.t -> t =
      fun (x10853 : Ojs.t) -> parent_of_js T.t_of_js x10853
    and t_to_js : t -> Ojs.t =
      fun (x10851 : T.t parent) -> parent_to_js T.t_to_js x10851
    let (get_enumerable : t -> bool option) =
      fun (x10855 : t) ->
        Ojs.option_of_js Ojs.bool_of_js
          (Ojs.get_prop_ascii (t_to_js x10855) "enumerable")
    let (set_enumerable : t -> bool -> unit) =
      fun (x10857 : t) ->
        fun (x10858 : bool) ->
          Ojs.set_prop_ascii (t_to_js x10857) "enumerable"
            (Ojs.bool_to_js x10858)
    let (get_configurable : t -> bool option) =
      fun (x10859 : t) ->
        Ojs.option_of_js Ojs.bool_of_js
          (Ojs.get_prop_ascii (t_to_js x10859) "configurable")
    let (set_configurable : t -> bool -> unit) =
      fun (x10861 : t) ->
        fun (x10862 : bool) ->
          Ojs.set_prop_ascii (t_to_js x10861) "configurable"
            (Ojs.bool_to_js x10862)
    let (get_writable : t -> bool option) =
      fun (x10863 : t) ->
        Ojs.option_of_js Ojs.bool_of_js
          (Ojs.get_prop_ascii (t_to_js x10863) "writable")
    let (set_writable : t -> bool -> unit) =
      fun (x10865 : t) ->
        fun (x10866 : bool) ->
          Ojs.set_prop_ascii (t_to_js x10865) "writable"
            (Ojs.bool_to_js x10866)
    let (get_value : t -> T.t option) =
      fun (x10867 : t) ->
        Ojs.option_of_js T.t_of_js
          (Ojs.get_prop_ascii (t_to_js x10867) "value")
    let (set_value : t -> T.t -> unit) =
      fun (x10869 : t) ->
        fun (x10870 : T.t) ->
          Ojs.set_prop_ascii (t_to_js x10869) "value" (T.t_to_js x10870)
    let (get_get : t -> (unit -> T.t) option) =
      fun (x10871 : t) ->
        Ojs.option_of_js
          (fun (x10872 : Ojs.t) ->
             fun () -> T.t_of_js (Ojs.apply x10872 [||]))
          (Ojs.get_prop_ascii (t_to_js x10871) "get")
    let (set_get : t -> (unit -> T.t) -> unit) =
      fun (x10873 : t) ->
        fun (x10874 : unit -> T.t) ->
          Ojs.set_prop_ascii (t_to_js x10873) "get"
            (Ojs.fun_to_js 1 (fun _ -> T.t_to_js (x10874 ())))
    let (get_set : t -> (T.t -> unit) option) =
      fun (x10875 : t) ->
        Ojs.option_of_js
          (fun (x10876 : Ojs.t) ->
             fun (x10877 : T.t) ->
               ignore (Ojs.apply x10876 [|(T.t_to_js x10877)|]))
          (Ojs.get_prop_ascii (t_to_js x10875) "set")
    let (set_set : t -> (T.t -> unit) -> unit) =
      fun (x10878 : t) ->
        fun (x10879 : T.t -> unit) ->
          Ojs.set_prop_ascii (t_to_js x10878) "set"
            (Ojs.fun_to_js 1
               (fun (x10880 : Ojs.t) -> x10879 (T.t_of_js x10880)))
  end
module PromiseLike_Make(T:Ojs.T) =
  struct
    type 'T parent = 'T PromiseLike.t
    let rec parent_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T parent =
      fun (type __T) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x10883 : Ojs.t) -> PromiseLike.t_of_js __T_of_js x10883
    and parent_to_js : 'T . ('T -> Ojs.t) -> 'T parent -> Ojs.t =
      fun (type __T) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x10881 : __T PromiseLike.t) ->
            PromiseLike.t_to_js __T_to_js x10881
    type t = T.t parent
    let rec t_of_js : Ojs.t -> t =
      fun (x10887 : Ojs.t) -> parent_of_js T.t_of_js x10887
    and t_to_js : t -> Ojs.t =
      fun (x10885 : T.t parent) -> parent_to_js T.t_to_js x10885
    let (then_ :
      t ->
        ?onfulfilled:[ `Null  | `Undefined of undefined 
                     | `U1 of
                         T.t ->
                           [ `U1 of 'TResult1  | `U2 of 'TResult1 parent ]
                         ]
          ->
          ?onrejected:[ `Null  | `Undefined of undefined 
                      | `U1 of
                          any ->
                            [ `U1 of 'TResult2  | `U2 of 'TResult2 parent ]
                          ]
            -> unit -> ('TResult1, 'TResult2) union2 parent)
      =
      fun (x10906 : t) ->
        fun
          ?onfulfilled:(x10889 :
                         [ `Null  | `Undefined of undefined 
                         | `U1 of
                             T.t ->
                               [ `U1 of 'TResult1 
                               | `U2 of 'TResult1 parent ]
                             ]
                           option)
          ->
          fun
            ?onrejected:(x10890 :
                          [ `Null  | `Undefined of undefined 
                          | `U1 of
                              any ->
                                [ `U1 of 'TResult2 
                                | `U2 of 'TResult2 parent ]
                              ]
                            option)
            ->
            fun () ->
              parent_of_js
                (fun (x10908 : Ojs.t) ->
                   union2_of_js Obj.magic Obj.magic x10908)
                (let x10907 = t_to_js x10906 in
                 Ojs.call (Ojs.get_prop_ascii x10907 "then") "apply"
                   [|x10907;((let x10891 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              (match x10889 with
                               | Some x10899 ->
                                   ignore
                                     (Ojs.call x10891 "push"
                                        [|((match x10899 with
                                            | `Null -> Ojs.null
                                            | `Undefined x10900 ->
                                                undefined_to_js x10900
                                            | `U1 x10901 ->
                                                Ojs.fun_to_js 1
                                                  (fun (x10902 : Ojs.t) ->
                                                     match x10901
                                                             (T.t_of_js
                                                                x10902)
                                                     with
                                                     | `U1 x10903 ->
                                                         Obj.magic x10903
                                                     | `U2 x10904 ->
                                                         parent_to_js
                                                           Obj.magic x10904)))|])
                               | None -> ());
                              (match x10890 with
                               | Some x10892 ->
                                   ignore
                                     (Ojs.call x10891 "push"
                                        [|((match x10892 with
                                            | `Null -> Ojs.null
                                            | `Undefined x10893 ->
                                                undefined_to_js x10893
                                            | `U1 x10894 ->
                                                Ojs.fun_to_js 1
                                                  (fun (x10895 : Ojs.t) ->
                                                     match x10894
                                                             (any_of_js
                                                                x10895)
                                                     with
                                                     | `U1 x10896 ->
                                                         Obj.magic x10896
                                                     | `U2 x10897 ->
                                                         parent_to_js
                                                           Obj.magic x10897)))|])
                               | None -> ());
                              x10891))|])
  end
module ArrayLike_Make(T:Ojs.T) =
  struct
    type 'T parent = 'T ArrayLike.t
    let rec parent_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T parent =
      fun (type __T) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x10913 : Ojs.t) -> ArrayLike.t_of_js __T_of_js x10913
    and parent_to_js : 'T . ('T -> Ojs.t) -> 'T parent -> Ojs.t =
      fun (type __T) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x10911 : __T ArrayLike.t) ->
            ArrayLike.t_to_js __T_to_js x10911
    type t = T.t parent
    let rec t_of_js : Ojs.t -> t =
      fun (x10917 : Ojs.t) -> parent_of_js T.t_of_js x10917
    and t_to_js : t -> Ojs.t =
      fun (x10915 : T.t parent) -> parent_to_js T.t_to_js x10915
    let (get_length : t -> float) =
      fun (x10919 : t) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x10919) "length")
    let (get : t -> float -> T.t) =
      fun (x10920 : t) ->
        fun (x10921 : float) ->
          T.t_of_js (Ojs.get_prop (t_to_js x10920) (Ojs.float_to_js x10921))
  end
module Map_Make(K:Ojs.T)(V:Ojs.T) =
  struct
    type ('K, 'V) parent = ('K, 'V) Map.t
    let rec parent_of_js :
      'K 'V . (Ojs.t -> 'K) -> (Ojs.t -> 'V) -> Ojs.t -> ('K, 'V) parent =
      fun (type __K) ->
        fun (type __V) ->
          fun (__K_of_js : Ojs.t -> __K) ->
            fun (__V_of_js : Ojs.t -> __V) ->
              fun (x10925 : Ojs.t) -> Map.t_of_js __K_of_js __V_of_js x10925
    and parent_to_js :
      'K 'V . ('K -> Ojs.t) -> ('V -> Ojs.t) -> ('K, 'V) parent -> Ojs.t =
      fun (type __K) ->
        fun (type __V) ->
          fun (__K_to_js : __K -> Ojs.t) ->
            fun (__V_to_js : __V -> Ojs.t) ->
              fun (x10922 : (__K, __V) Map.t) ->
                Map.t_to_js __K_to_js __V_to_js x10922
    type t = (K.t, V.t) parent
    let rec t_of_js : Ojs.t -> t =
      fun (x10931 : Ojs.t) -> parent_of_js K.t_of_js V.t_of_js x10931
    and t_to_js : t -> Ojs.t =
      fun (x10928 : (K.t, V.t) parent) ->
        parent_to_js K.t_to_js V.t_to_js x10928
    let (entries : t -> (K.t * V.t) IterableIterator.t) =
      fun (x10934 : t) ->
        IterableIterator.t_of_js
          (fun (x10935 : Ojs.t) ->
             let x10936 = x10935 in
             ((K.t_of_js (Ojs.array_get x10936 0)),
               (V.t_of_js (Ojs.array_get x10936 1))))
          (Ojs.call (t_to_js x10934) "entries" [||])
    let (keys : t -> K.t IterableIterator.t) =
      fun (x10937 : t) ->
        IterableIterator.t_of_js K.t_of_js
          (Ojs.call (t_to_js x10937) "keys" [||])
    let (values : t -> V.t IterableIterator.t) =
      fun (x10939 : t) ->
        IterableIterator.t_of_js V.t_of_js
          (Ojs.call (t_to_js x10939) "values" [||])
    let (clear : t -> unit) =
      fun (x10941 : t) -> ignore (Ojs.call (t_to_js x10941) "clear" [||])
    let (delete : t -> key:K.t -> bool) =
      fun (x10943 : t) ->
        fun ~key:(x10942 : K.t) ->
          Ojs.bool_of_js
            (Ojs.call (t_to_js x10943) "delete" [|(K.t_to_js x10942)|])
    let (forEach :
      t ->
        callbackfn:(value:V.t -> key:K.t -> map:t -> unit) ->
          ?thisArg:any -> unit -> unit)
      =
      fun (x10951 : t) ->
        fun ~callbackfn:(x10944 : value:V.t -> key:K.t -> map:t -> unit) ->
          fun ?thisArg:(x10945 : any option) ->
            fun () ->
              ignore
                (let x10952 = t_to_js x10951 in
                 Ojs.call (Ojs.get_prop_ascii x10952 "forEach") "apply"
                   [|x10952;((let x10946 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x10946 "push"
                                   [|(Ojs.fun_to_js 3
                                        (fun (x10948 : Ojs.t) ->
                                           fun (x10949 : Ojs.t) ->
                                             fun (x10950 : Ojs.t) ->
                                               x10944
                                                 ~value:(V.t_of_js x10948)
                                                 ~key:(K.t_of_js x10949)
                                                 ~map:(t_of_js x10950)))|]);
                              (match x10945 with
                               | Some x10947 ->
                                   ignore
                                     (Ojs.call x10946 "push"
                                        [|(any_to_js x10947)|])
                               | None -> ());
                              x10946))|])
    let (get_ : t -> key:K.t -> V.t option) =
      fun (x10954 : t) ->
        fun ~key:(x10953 : K.t) ->
          Ojs.option_of_js V.t_of_js
            (Ojs.call (t_to_js x10954) "get" [|(K.t_to_js x10953)|])
    let (has : t -> key:K.t -> bool) =
      fun (x10957 : t) ->
        fun ~key:(x10956 : K.t) ->
          Ojs.bool_of_js
            (Ojs.call (t_to_js x10957) "has" [|(K.t_to_js x10956)|])
    let (set_ : t -> key:K.t -> value:V.t -> t) =
      fun (x10960 : t) ->
        fun ~key:(x10958 : K.t) ->
          fun ~value:(x10959 : V.t) ->
            t_of_js
              (Ojs.call (t_to_js x10960) "set"
                 [|(K.t_to_js x10958);(V.t_to_js x10959)|])
    let (get_size : t -> float) =
      fun (x10961 : t) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x10961) "size")
    let (create : unit -> (any, any) parent) =
      fun () ->
        parent_of_js any_of_js any_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Map") [||])
    let (create : ?iterable:(K.t * V.t) Iterable.t option -> unit -> t) =
      fun ?iterable:(x10964 : (K.t * V.t) Iterable.t option option) ->
        fun () ->
          t_of_js
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "Map")
               (let x10965 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x10964 with
                 | Some x10966 ->
                     ignore
                       (Ojs.call x10965 "push"
                          [|(Ojs.option_to_js
                               (fun (x10967 : (K.t * V.t) Iterable.t) ->
                                  Iterable.t_to_js
                                    (fun (x10968 : (K.t * V.t)) ->
                                       let (x10969, x10970) = x10968 in
                                       let x10971 = Ojs.array_make 2 in
                                       Ojs.array_set x10971 0
                                         (K.t_to_js x10969);
                                       Ojs.array_set x10971 1
                                         (V.t_to_js x10970);
                                       x10971) x10967) x10966)|])
                 | None -> ());
                x10965))
    let (create : unit -> (any, any) parent) =
      fun () ->
        parent_of_js any_of_js any_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Map") [||])
    let (create : ?entries:(K.t * V.t) list option -> unit -> t) =
      fun ?entries:(x10974 : (K.t * V.t) list option option) ->
        fun () ->
          t_of_js
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "Map")
               (let x10975 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x10974 with
                 | Some x10976 ->
                     ignore
                       (Ojs.call x10975 "push"
                          [|(Ojs.option_to_js
                               (fun (x10977 : (K.t * V.t) list) ->
                                  Ojs.list_to_js
                                    (fun (x10978 : (K.t * V.t)) ->
                                       let (x10979, x10980) = x10978 in
                                       let x10981 = Ojs.array_make 2 in
                                       Ojs.array_set x10981 0
                                         (K.t_to_js x10979);
                                       Ojs.array_set x10981 1
                                         (V.t_to_js x10980);
                                       x10981) x10977) x10976)|])
                 | None -> ());
                x10975))
    let (prototype : unit -> (any, any) parent) =
      fun () ->
        parent_of_js any_of_js any_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Map")
             "prototype")
  end
module ReadonlyMap_Make(K:Ojs.T)(V:Ojs.T) =
  struct
    type ('K, 'V) parent = ('K, 'V) ReadonlyMap.t
    let rec parent_of_js :
      'K 'V . (Ojs.t -> 'K) -> (Ojs.t -> 'V) -> Ojs.t -> ('K, 'V) parent =
      fun (type __K) ->
        fun (type __V) ->
          fun (__K_of_js : Ojs.t -> __K) ->
            fun (__V_of_js : Ojs.t -> __V) ->
              fun (x10987 : Ojs.t) ->
                ReadonlyMap.t_of_js __K_of_js __V_of_js x10987
    and parent_to_js :
      'K 'V . ('K -> Ojs.t) -> ('V -> Ojs.t) -> ('K, 'V) parent -> Ojs.t =
      fun (type __K) ->
        fun (type __V) ->
          fun (__K_to_js : __K -> Ojs.t) ->
            fun (__V_to_js : __V -> Ojs.t) ->
              fun (x10984 : (__K, __V) ReadonlyMap.t) ->
                ReadonlyMap.t_to_js __K_to_js __V_to_js x10984
    type t = (K.t, V.t) parent
    let rec t_of_js : Ojs.t -> t =
      fun (x10993 : Ojs.t) -> parent_of_js K.t_of_js V.t_of_js x10993
    and t_to_js : t -> Ojs.t =
      fun (x10990 : (K.t, V.t) parent) ->
        parent_to_js K.t_to_js V.t_to_js x10990
    let (entries : t -> (K.t * V.t) IterableIterator.t) =
      fun (x10996 : t) ->
        IterableIterator.t_of_js
          (fun (x10997 : Ojs.t) ->
             let x10998 = x10997 in
             ((K.t_of_js (Ojs.array_get x10998 0)),
               (V.t_of_js (Ojs.array_get x10998 1))))
          (Ojs.call (t_to_js x10996) "entries" [||])
    let (keys : t -> K.t IterableIterator.t) =
      fun (x10999 : t) ->
        IterableIterator.t_of_js K.t_of_js
          (Ojs.call (t_to_js x10999) "keys" [||])
    let (values : t -> V.t IterableIterator.t) =
      fun (x11001 : t) ->
        IterableIterator.t_of_js V.t_of_js
          (Ojs.call (t_to_js x11001) "values" [||])
    let (forEach :
      t ->
        callbackfn:(value:V.t -> key:K.t -> map:t -> unit) ->
          ?thisArg:any -> unit -> unit)
      =
      fun (x11010 : t) ->
        fun ~callbackfn:(x11003 : value:V.t -> key:K.t -> map:t -> unit) ->
          fun ?thisArg:(x11004 : any option) ->
            fun () ->
              ignore
                (let x11011 = t_to_js x11010 in
                 Ojs.call (Ojs.get_prop_ascii x11011 "forEach") "apply"
                   [|x11011;((let x11005 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x11005 "push"
                                   [|(Ojs.fun_to_js 3
                                        (fun (x11007 : Ojs.t) ->
                                           fun (x11008 : Ojs.t) ->
                                             fun (x11009 : Ojs.t) ->
                                               x11003
                                                 ~value:(V.t_of_js x11007)
                                                 ~key:(K.t_of_js x11008)
                                                 ~map:(t_of_js x11009)))|]);
                              (match x11004 with
                               | Some x11006 ->
                                   ignore
                                     (Ojs.call x11005 "push"
                                        [|(any_to_js x11006)|])
                               | None -> ());
                              x11005))|])
    let (get_ : t -> key:K.t -> V.t option) =
      fun (x11013 : t) ->
        fun ~key:(x11012 : K.t) ->
          Ojs.option_of_js V.t_of_js
            (Ojs.call (t_to_js x11013) "get" [|(K.t_to_js x11012)|])
    let (has : t -> key:K.t -> bool) =
      fun (x11016 : t) ->
        fun ~key:(x11015 : K.t) ->
          Ojs.bool_of_js
            (Ojs.call (t_to_js x11016) "has" [|(K.t_to_js x11015)|])
    let (get_size : t -> float) =
      fun (x11017 : t) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x11017) "size")
  end
module WeakMap_Make(K:Ojs.T)(V:Ojs.T) =
  struct
    type ('K, 'V) parent = ('K, 'V) WeakMap.t
    let rec parent_of_js :
      'K 'V . (Ojs.t -> 'K) -> (Ojs.t -> 'V) -> Ojs.t -> ('K, 'V) parent =
      fun (type __K) ->
        fun (type __V) ->
          fun (__K_of_js : Ojs.t -> __K) ->
            fun (__V_of_js : Ojs.t -> __V) ->
              fun (x11021 : Ojs.t) ->
                WeakMap.t_of_js __K_of_js __V_of_js x11021
    and parent_to_js :
      'K 'V . ('K -> Ojs.t) -> ('V -> Ojs.t) -> ('K, 'V) parent -> Ojs.t =
      fun (type __K) ->
        fun (type __V) ->
          fun (__K_to_js : __K -> Ojs.t) ->
            fun (__V_to_js : __V -> Ojs.t) ->
              fun (x11018 : (__K, __V) WeakMap.t) ->
                WeakMap.t_to_js __K_to_js __V_to_js x11018
    type t = (K.t, V.t) parent
    let rec t_of_js : Ojs.t -> t =
      fun (x11027 : Ojs.t) -> parent_of_js K.t_of_js V.t_of_js x11027
    and t_to_js : t -> Ojs.t =
      fun (x11024 : (K.t, V.t) parent) ->
        parent_to_js K.t_to_js V.t_to_js x11024
    let (delete : t -> key:K.t -> bool) =
      fun (x11031 : t) ->
        fun ~key:(x11030 : K.t) ->
          Ojs.bool_of_js
            (Ojs.call (t_to_js x11031) "delete" [|(K.t_to_js x11030)|])
    let (get_ : t -> key:K.t -> V.t option) =
      fun (x11033 : t) ->
        fun ~key:(x11032 : K.t) ->
          Ojs.option_of_js V.t_of_js
            (Ojs.call (t_to_js x11033) "get" [|(K.t_to_js x11032)|])
    let (has : t -> key:K.t -> bool) =
      fun (x11036 : t) ->
        fun ~key:(x11035 : K.t) ->
          Ojs.bool_of_js
            (Ojs.call (t_to_js x11036) "has" [|(K.t_to_js x11035)|])
    let (set_ : t -> key:K.t -> value:V.t -> t) =
      fun (x11039 : t) ->
        fun ~key:(x11037 : K.t) ->
          fun ~value:(x11038 : V.t) ->
            t_of_js
              (Ojs.call (t_to_js x11039) "set"
                 [|(K.t_to_js x11037);(V.t_to_js x11038)|])
    let (create : (K.t * V.t) Iterable.t -> t) =
      fun (x11040 : (K.t * V.t) Iterable.t) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "WeakMap")
             [|(Iterable.t_to_js
                  (fun (x11041 : (K.t * V.t)) ->
                     let (x11042, x11043) = x11041 in
                     let x11044 = Ojs.array_make 2 in
                     Ojs.array_set x11044 0 (K.t_to_js x11042);
                     Ojs.array_set x11044 1 (V.t_to_js x11043);
                     x11044) x11040)|])
    let (create : ?entries:(K.t * V.t) list option -> unit -> t) =
      fun ?entries:(x11045 : (K.t * V.t) list option option) ->
        fun () ->
          t_of_js
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "WeakMap")
               (let x11046 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x11045 with
                 | Some x11047 ->
                     ignore
                       (Ojs.call x11046 "push"
                          [|(Ojs.option_to_js
                               (fun (x11048 : (K.t * V.t) list) ->
                                  Ojs.list_to_js
                                    (fun (x11049 : (K.t * V.t)) ->
                                       let (x11050, x11051) = x11049 in
                                       let x11052 = Ojs.array_make 2 in
                                       Ojs.array_set x11052 0
                                         (K.t_to_js x11050);
                                       Ojs.array_set x11052 1
                                         (V.t_to_js x11051);
                                       x11052) x11048) x11047)|])
                 | None -> ());
                x11046))
    let (prototype : unit -> (untyped_object, any) parent) =
      fun () ->
        parent_of_js untyped_object_of_js any_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "WeakMap")
             "prototype")
  end
module Set_Make(T:Ojs.T) =
  struct
    type 'T parent = 'T Set.t
    let rec parent_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T parent =
      fun (type __T) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x11057 : Ojs.t) -> Set.t_of_js __T_of_js x11057
    and parent_to_js : 'T . ('T -> Ojs.t) -> 'T parent -> Ojs.t =
      fun (type __T) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x11055 : __T Set.t) -> Set.t_to_js __T_to_js x11055
    type t = T.t parent
    let rec t_of_js : Ojs.t -> t =
      fun (x11061 : Ojs.t) -> parent_of_js T.t_of_js x11061
    and t_to_js : t -> Ojs.t =
      fun (x11059 : T.t parent) -> parent_to_js T.t_to_js x11059
    let (entries : t -> (T.t * T.t) IterableIterator.t) =
      fun (x11063 : t) ->
        IterableIterator.t_of_js
          (fun (x11064 : Ojs.t) ->
             let x11065 = x11064 in
             ((T.t_of_js (Ojs.array_get x11065 0)),
               (T.t_of_js (Ojs.array_get x11065 1))))
          (Ojs.call (t_to_js x11063) "entries" [||])
    let (keys : t -> T.t IterableIterator.t) =
      fun (x11066 : t) ->
        IterableIterator.t_of_js T.t_of_js
          (Ojs.call (t_to_js x11066) "keys" [||])
    let (values : t -> T.t IterableIterator.t) =
      fun (x11068 : t) ->
        IterableIterator.t_of_js T.t_of_js
          (Ojs.call (t_to_js x11068) "values" [||])
    let (add : t -> value:T.t -> t) =
      fun (x11071 : t) ->
        fun ~value:(x11070 : T.t) ->
          t_of_js (Ojs.call (t_to_js x11071) "add" [|(T.t_to_js x11070)|])
    let (clear : t -> unit) =
      fun (x11072 : t) -> ignore (Ojs.call (t_to_js x11072) "clear" [||])
    let (delete : t -> value:T.t -> bool) =
      fun (x11074 : t) ->
        fun ~value:(x11073 : T.t) ->
          Ojs.bool_of_js
            (Ojs.call (t_to_js x11074) "delete" [|(T.t_to_js x11073)|])
    let (forEach :
      t ->
        callbackfn:(value:T.t -> value2:T.t -> set_:t -> unit) ->
          ?thisArg:any -> unit -> unit)
      =
      fun (x11082 : t) ->
        fun ~callbackfn:(x11075 : value:T.t -> value2:T.t -> set_:t -> unit)
          ->
          fun ?thisArg:(x11076 : any option) ->
            fun () ->
              ignore
                (let x11083 = t_to_js x11082 in
                 Ojs.call (Ojs.get_prop_ascii x11083 "forEach") "apply"
                   [|x11083;((let x11077 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x11077 "push"
                                   [|(Ojs.fun_to_js 3
                                        (fun (x11079 : Ojs.t) ->
                                           fun (x11080 : Ojs.t) ->
                                             fun (x11081 : Ojs.t) ->
                                               x11075
                                                 ~value:(T.t_of_js x11079)
                                                 ~value2:(T.t_of_js x11080)
                                                 ~set_:(t_of_js x11081)))|]);
                              (match x11076 with
                               | Some x11078 ->
                                   ignore
                                     (Ojs.call x11077 "push"
                                        [|(any_to_js x11078)|])
                               | None -> ());
                              x11077))|])
    let (has : t -> value:T.t -> bool) =
      fun (x11085 : t) ->
        fun ~value:(x11084 : T.t) ->
          Ojs.bool_of_js
            (Ojs.call (t_to_js x11085) "has" [|(T.t_to_js x11084)|])
    let (get_size : t -> float) =
      fun (x11086 : t) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x11086) "size")
    let (create : ?iterable:T.t Iterable.t option -> unit -> t) =
      fun ?iterable:(x11087 : T.t Iterable.t option option) ->
        fun () ->
          t_of_js
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "Set")
               (let x11088 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x11087 with
                 | Some x11089 ->
                     ignore
                       (Ojs.call x11088 "push"
                          [|(Ojs.option_to_js
                               (fun (x11090 : T.t Iterable.t) ->
                                  Iterable.t_to_js T.t_to_js x11090) x11089)|])
                 | None -> ());
                x11088))
    let (create : ?values:T.t list option -> unit -> t) =
      fun ?values:(x11092 : T.t list option option) ->
        fun () ->
          t_of_js
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "Set")
               (let x11093 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x11092 with
                 | Some x11094 ->
                     ignore
                       (Ojs.call x11093 "push"
                          [|(Ojs.option_to_js
                               (fun (x11095 : T.t list) ->
                                  Ojs.list_to_js T.t_to_js x11095) x11094)|])
                 | None -> ());
                x11093))
    let (prototype : unit -> any parent) =
      fun () ->
        parent_of_js any_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Set")
             "prototype")
  end
module ReadonlySet_Make(T:Ojs.T) =
  struct
    type 'T parent = 'T ReadonlySet.t
    let rec parent_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T parent =
      fun (type __T) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x11100 : Ojs.t) -> ReadonlySet.t_of_js __T_of_js x11100
    and parent_to_js : 'T . ('T -> Ojs.t) -> 'T parent -> Ojs.t =
      fun (type __T) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x11098 : __T ReadonlySet.t) ->
            ReadonlySet.t_to_js __T_to_js x11098
    type t = T.t parent
    let rec t_of_js : Ojs.t -> t =
      fun (x11104 : Ojs.t) -> parent_of_js T.t_of_js x11104
    and t_to_js : t -> Ojs.t =
      fun (x11102 : T.t parent) -> parent_to_js T.t_to_js x11102
    let (entries : t -> (T.t * T.t) IterableIterator.t) =
      fun (x11106 : t) ->
        IterableIterator.t_of_js
          (fun (x11107 : Ojs.t) ->
             let x11108 = x11107 in
             ((T.t_of_js (Ojs.array_get x11108 0)),
               (T.t_of_js (Ojs.array_get x11108 1))))
          (Ojs.call (t_to_js x11106) "entries" [||])
    let (keys : t -> T.t IterableIterator.t) =
      fun (x11109 : t) ->
        IterableIterator.t_of_js T.t_of_js
          (Ojs.call (t_to_js x11109) "keys" [||])
    let (values : t -> T.t IterableIterator.t) =
      fun (x11111 : t) ->
        IterableIterator.t_of_js T.t_of_js
          (Ojs.call (t_to_js x11111) "values" [||])
    let (forEach :
      t ->
        callbackfn:(value:T.t -> value2:T.t -> set_:t -> unit) ->
          ?thisArg:any -> unit -> unit)
      =
      fun (x11120 : t) ->
        fun ~callbackfn:(x11113 : value:T.t -> value2:T.t -> set_:t -> unit)
          ->
          fun ?thisArg:(x11114 : any option) ->
            fun () ->
              ignore
                (let x11121 = t_to_js x11120 in
                 Ojs.call (Ojs.get_prop_ascii x11121 "forEach") "apply"
                   [|x11121;((let x11115 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x11115 "push"
                                   [|(Ojs.fun_to_js 3
                                        (fun (x11117 : Ojs.t) ->
                                           fun (x11118 : Ojs.t) ->
                                             fun (x11119 : Ojs.t) ->
                                               x11113
                                                 ~value:(T.t_of_js x11117)
                                                 ~value2:(T.t_of_js x11118)
                                                 ~set_:(t_of_js x11119)))|]);
                              (match x11114 with
                               | Some x11116 ->
                                   ignore
                                     (Ojs.call x11115 "push"
                                        [|(any_to_js x11116)|])
                               | None -> ());
                              x11115))|])
    let (has : t -> value:T.t -> bool) =
      fun (x11123 : t) ->
        fun ~value:(x11122 : T.t) ->
          Ojs.bool_of_js
            (Ojs.call (t_to_js x11123) "has" [|(T.t_to_js x11122)|])
    let (get_size : t -> float) =
      fun (x11124 : t) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x11124) "size")
  end
module WeakSet_Make(T:Ojs.T) =
  struct
    type 'T parent = 'T WeakSet.t
    let rec parent_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T parent =
      fun (type __T) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x11127 : Ojs.t) -> WeakSet.t_of_js __T_of_js x11127
    and parent_to_js : 'T . ('T -> Ojs.t) -> 'T parent -> Ojs.t =
      fun (type __T) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x11125 : __T WeakSet.t) -> WeakSet.t_to_js __T_to_js x11125
    type t = T.t parent
    let rec t_of_js : Ojs.t -> t =
      fun (x11131 : Ojs.t) -> parent_of_js T.t_of_js x11131
    and t_to_js : t -> Ojs.t =
      fun (x11129 : T.t parent) -> parent_to_js T.t_to_js x11129
    let (add : t -> value:T.t -> t) =
      fun (x11134 : t) ->
        fun ~value:(x11133 : T.t) ->
          t_of_js (Ojs.call (t_to_js x11134) "add" [|(T.t_to_js x11133)|])
    let (delete : t -> value:T.t -> bool) =
      fun (x11136 : t) ->
        fun ~value:(x11135 : T.t) ->
          Ojs.bool_of_js
            (Ojs.call (t_to_js x11136) "delete" [|(T.t_to_js x11135)|])
    let (has : t -> value:T.t -> bool) =
      fun (x11138 : t) ->
        fun ~value:(x11137 : T.t) ->
          Ojs.bool_of_js
            (Ojs.call (t_to_js x11138) "has" [|(T.t_to_js x11137)|])
    let (create : T.t Iterable.t -> t) =
      fun (x11139 : T.t Iterable.t) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "WeakSet")
             [|(Iterable.t_to_js T.t_to_js x11139)|])
    let (create : ?values:T.t list option -> unit -> t) =
      fun ?values:(x11141 : T.t list option option) ->
        fun () ->
          t_of_js
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "WeakSet")
               (let x11142 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x11141 with
                 | Some x11143 ->
                     ignore
                       (Ojs.call x11142 "push"
                          [|(Ojs.option_to_js
                               (fun (x11144 : T.t list) ->
                                  Ojs.list_to_js T.t_to_js x11144) x11143)|])
                 | None -> ());
                x11142))
    let (prototype : unit -> untyped_object parent) =
      fun () ->
        parent_of_js untyped_object_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "WeakSet")
             "prototype")
  end
module Generator_Make(T:Ojs.T)(TReturn:Ojs.T)(TNext:Ojs.T) =
  struct
    type ('T, 'TReturn, 'TNext) parent = ('T, 'TReturn, 'TNext) Generator.t
    let rec parent_of_js :
      'T 'TReturn 'TNext .
        (Ojs.t -> 'T) ->
          (Ojs.t -> 'TReturn) ->
            (Ojs.t -> 'TNext) -> Ojs.t -> ('T, 'TReturn, 'TNext) parent
      =
      fun (type __T) ->
        fun (type __TReturn) ->
          fun (type __TNext) ->
            fun (__T_of_js : Ojs.t -> __T) ->
              fun (__TReturn_of_js : Ojs.t -> __TReturn) ->
                fun (__TNext_of_js : Ojs.t -> __TNext) ->
                  fun (x11151 : Ojs.t) ->
                    Generator.t_of_js __T_of_js __TReturn_of_js __TNext_of_js
                      x11151
    and parent_to_js :
      'T 'TReturn 'TNext .
        ('T -> Ojs.t) ->
          ('TReturn -> Ojs.t) ->
            ('TNext -> Ojs.t) -> ('T, 'TReturn, 'TNext) parent -> Ojs.t
      =
      fun (type __T) ->
        fun (type __TReturn) ->
          fun (type __TNext) ->
            fun (__T_to_js : __T -> Ojs.t) ->
              fun (__TReturn_to_js : __TReturn -> Ojs.t) ->
                fun (__TNext_to_js : __TNext -> Ojs.t) ->
                  fun (x11147 : (__T, __TReturn, __TNext) Generator.t) ->
                    Generator.t_to_js __T_to_js __TReturn_to_js __TNext_to_js
                      x11147
    type t = (T.t, TReturn.t, TNext.t) parent
    let rec t_of_js : Ojs.t -> t =
      fun (x11159 : Ojs.t) ->
        parent_of_js T.t_of_js TReturn.t_of_js TNext.t_of_js x11159
    and t_to_js : t -> Ojs.t =
      fun (x11155 : (T.t, TReturn.t, TNext.t) parent) ->
        parent_to_js T.t_to_js TReturn.t_to_js TNext.t_to_js x11155
    let (next : t -> args:any list -> (T.t, TReturn.t) IteratorResult.t) =
      fun (x11166 : t) ->
        fun ~args:(x11163 : any list) ->
          IteratorResult.t_of_js T.t_of_js TReturn.t_of_js
            (let x11167 = t_to_js x11166 in
             Ojs.call (Ojs.get_prop_ascii x11167 "next") "apply"
               [|x11167;((let x11164 =
                            Ojs.new_obj
                              (Ojs.get_prop_ascii Ojs.global "Array") 
                              [||] in
                          List.iter
                            (fun (x11165 : any) ->
                               ignore
                                 (Ojs.call x11164 "push"
                                    [|(any_to_js x11165)|])) x11163;
                          x11164))|])
    let (return : t -> value:TReturn.t -> (T.t, TReturn.t) IteratorResult.t)
      =
      fun (x11171 : t) ->
        fun ~value:(x11170 : TReturn.t) ->
          IteratorResult.t_of_js T.t_of_js TReturn.t_of_js
            (Ojs.call (t_to_js x11171) "return" [|(TReturn.t_to_js x11170)|])
    let (throw : t -> e:any -> (T.t, TReturn.t) IteratorResult.t) =
      fun (x11175 : t) ->
        fun ~e:(x11174 : any) ->
          IteratorResult.t_of_js T.t_of_js TReturn.t_of_js
            (Ojs.call (t_to_js x11175) "throw" [|(any_to_js x11174)|])
  end
module IteratorYieldResult_Make(TYield:Ojs.T) =
  struct
    type 'TYield parent = 'TYield IteratorYieldResult.t
    let rec parent_of_js :
      'TYield . (Ojs.t -> 'TYield) -> Ojs.t -> 'TYield parent =
      fun (type __TYield) ->
        fun (__TYield_of_js : Ojs.t -> __TYield) ->
          fun (x11180 : Ojs.t) ->
            IteratorYieldResult.t_of_js __TYield_of_js x11180
    and parent_to_js :
      'TYield . ('TYield -> Ojs.t) -> 'TYield parent -> Ojs.t =
      fun (type __TYield) ->
        fun (__TYield_to_js : __TYield -> Ojs.t) ->
          fun (x11178 : __TYield IteratorYieldResult.t) ->
            IteratorYieldResult.t_to_js __TYield_to_js x11178
    type t = TYield.t parent
    let rec t_of_js : Ojs.t -> t =
      fun (x11184 : Ojs.t) -> parent_of_js TYield.t_of_js x11184
    and t_to_js : t -> Ojs.t =
      fun (x11182 : TYield.t parent) -> parent_to_js TYield.t_to_js x11182
    let (get_done : t -> [ `L_b_false ] option) =
      fun (x11186 : t) ->
        Ojs.option_of_js
          (fun (x11187 : Ojs.t) ->
             let x11188 = x11187 in
             match Ojs.bool_of_js x11188 with
             | false -> `L_b_false
             | _ -> assert false)
          (Ojs.get_prop_ascii (t_to_js x11186) "done")
    let (set_done : t -> [ `L_b_false ] -> unit) =
      fun (x11189 : t) ->
        fun (x11190 : [ `L_b_false ]) ->
          Ojs.set_prop_ascii (t_to_js x11189) "done"
            (match x11190 with | `L_b_false -> Ojs.bool_to_js false)
    let (get_value : t -> TYield.t) =
      fun (x11191 : t) ->
        TYield.t_of_js (Ojs.get_prop_ascii (t_to_js x11191) "value")
    let (set_value : t -> TYield.t -> unit) =
      fun (x11192 : t) ->
        fun (x11193 : TYield.t) ->
          Ojs.set_prop_ascii (t_to_js x11192) "value" (TYield.t_to_js x11193)
  end
module IteratorReturnResult_Make(TReturn:Ojs.T) =
  struct
    type 'TReturn parent = 'TReturn IteratorReturnResult.t
    let rec parent_of_js :
      'TReturn . (Ojs.t -> 'TReturn) -> Ojs.t -> 'TReturn parent =
      fun (type __TReturn) ->
        fun (__TReturn_of_js : Ojs.t -> __TReturn) ->
          fun (x11196 : Ojs.t) ->
            IteratorReturnResult.t_of_js __TReturn_of_js x11196
    and parent_to_js :
      'TReturn . ('TReturn -> Ojs.t) -> 'TReturn parent -> Ojs.t =
      fun (type __TReturn) ->
        fun (__TReturn_to_js : __TReturn -> Ojs.t) ->
          fun (x11194 : __TReturn IteratorReturnResult.t) ->
            IteratorReturnResult.t_to_js __TReturn_to_js x11194
    type t = TReturn.t parent
    let rec t_of_js : Ojs.t -> t =
      fun (x11200 : Ojs.t) -> parent_of_js TReturn.t_of_js x11200
    and t_to_js : t -> Ojs.t =
      fun (x11198 : TReturn.t parent) -> parent_to_js TReturn.t_to_js x11198
    let (get_done : t -> [ `L_b_true ]) =
      fun (x11202 : t) ->
        let x11203 = Ojs.get_prop_ascii (t_to_js x11202) "done" in
        match Ojs.bool_of_js x11203 with
        | true -> `L_b_true
        | _ -> assert false
    let (set_done : t -> [ `L_b_true ] -> unit) =
      fun (x11204 : t) ->
        fun (x11205 : [ `L_b_true ]) ->
          Ojs.set_prop_ascii (t_to_js x11204) "done"
            (match x11205 with | `L_b_true -> Ojs.bool_to_js true)
    let (get_value : t -> TReturn.t) =
      fun (x11206 : t) ->
        TReturn.t_of_js (Ojs.get_prop_ascii (t_to_js x11206) "value")
    let (set_value : t -> TReturn.t -> unit) =
      fun (x11207 : t) ->
        fun (x11208 : TReturn.t) ->
          Ojs.set_prop_ascii (t_to_js x11207) "value"
            (TReturn.t_to_js x11208)
  end
module Iterator_Make(T:Ojs.T)(TReturn:Ojs.T)(TNext:Ojs.T) =
  struct
    type ('T, 'TReturn, 'TNext) parent = ('T, 'TReturn, 'TNext) Iterator.t
    let rec parent_of_js :
      'T 'TReturn 'TNext .
        (Ojs.t -> 'T) ->
          (Ojs.t -> 'TReturn) ->
            (Ojs.t -> 'TNext) -> Ojs.t -> ('T, 'TReturn, 'TNext) parent
      =
      fun (type __T) ->
        fun (type __TReturn) ->
          fun (type __TNext) ->
            fun (__T_of_js : Ojs.t -> __T) ->
              fun (__TReturn_of_js : Ojs.t -> __TReturn) ->
                fun (__TNext_of_js : Ojs.t -> __TNext) ->
                  fun (x11213 : Ojs.t) ->
                    Iterator.t_of_js __T_of_js __TReturn_of_js __TNext_of_js
                      x11213
    and parent_to_js :
      'T 'TReturn 'TNext .
        ('T -> Ojs.t) ->
          ('TReturn -> Ojs.t) ->
            ('TNext -> Ojs.t) -> ('T, 'TReturn, 'TNext) parent -> Ojs.t
      =
      fun (type __T) ->
        fun (type __TReturn) ->
          fun (type __TNext) ->
            fun (__T_to_js : __T -> Ojs.t) ->
              fun (__TReturn_to_js : __TReturn -> Ojs.t) ->
                fun (__TNext_to_js : __TNext -> Ojs.t) ->
                  fun (x11209 : (__T, __TReturn, __TNext) Iterator.t) ->
                    Iterator.t_to_js __T_to_js __TReturn_to_js __TNext_to_js
                      x11209
    type t = (T.t, TReturn.t, TNext.t) parent
    let rec t_of_js : Ojs.t -> t =
      fun (x11221 : Ojs.t) ->
        parent_of_js T.t_of_js TReturn.t_of_js TNext.t_of_js x11221
    and t_to_js : t -> Ojs.t =
      fun (x11217 : (T.t, TReturn.t, TNext.t) parent) ->
        parent_to_js T.t_to_js TReturn.t_to_js TNext.t_to_js x11217
    let (next : t -> args:any list -> (T.t, TReturn.t) IteratorResult.t) =
      fun (x11228 : t) ->
        fun ~args:(x11225 : any list) ->
          IteratorResult.t_of_js T.t_of_js TReturn.t_of_js
            (let x11229 = t_to_js x11228 in
             Ojs.call (Ojs.get_prop_ascii x11229 "next") "apply"
               [|x11229;((let x11226 =
                            Ojs.new_obj
                              (Ojs.get_prop_ascii Ojs.global "Array") 
                              [||] in
                          List.iter
                            (fun (x11227 : any) ->
                               ignore
                                 (Ojs.call x11226 "push"
                                    [|(any_to_js x11227)|])) x11225;
                          x11226))|])
    let (return :
      t -> ?value:TReturn.t -> unit -> (T.t, TReturn.t) IteratorResult.t) =
      fun (x11235 : t) ->
        fun ?value:(x11232 : TReturn.t option) ->
          fun () ->
            IteratorResult.t_of_js T.t_of_js TReturn.t_of_js
              (let x11236 = t_to_js x11235 in
               Ojs.call (Ojs.get_prop_ascii x11236 "return") "apply"
                 [|x11236;((let x11233 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x11232 with
                             | Some x11234 ->
                                 ignore
                                   (Ojs.call x11233 "push"
                                      [|(TReturn.t_to_js x11234)|])
                             | None -> ());
                            x11233))|])
    let (throw : t -> ?e:any -> unit -> (T.t, TReturn.t) IteratorResult.t) =
      fun (x11242 : t) ->
        fun ?e:(x11239 : any option) ->
          fun () ->
            IteratorResult.t_of_js T.t_of_js TReturn.t_of_js
              (let x11243 = t_to_js x11242 in
               Ojs.call (Ojs.get_prop_ascii x11243 "throw") "apply"
                 [|x11243;((let x11240 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x11239 with
                             | Some x11241 ->
                                 ignore
                                   (Ojs.call x11240 "push"
                                      [|(any_to_js x11241)|])
                             | None -> ());
                            x11240))|])
  end
module Promise_Make(T:Ojs.T) =
  struct
    type 'T parent = 'T Promise.t
    let rec parent_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T parent =
      fun (type __T) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x11248 : Ojs.t) -> Promise.t_of_js __T_of_js x11248
    and parent_to_js : 'T . ('T -> Ojs.t) -> 'T parent -> Ojs.t =
      fun (type __T) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x11246 : __T Promise.t) -> Promise.t_to_js __T_to_js x11246
    type t = T.t parent
    let rec t_of_js : Ojs.t -> t =
      fun (x11252 : Ojs.t) -> parent_of_js T.t_of_js x11252
    and t_to_js : t -> Ojs.t =
      fun (x11250 : T.t parent) -> parent_to_js T.t_to_js x11250
    let (finally :
      t ->
        ?onfinally:[ `Null  | `Undefined of undefined 
                   | `U1 of unit -> unit ]
          -> unit -> t)
      =
      fun (x11259 : t) ->
        fun
          ?onfinally:(x11254 :
                       [ `Null  | `Undefined of undefined 
                       | `U1 of unit -> unit ] option)
          ->
          fun () ->
            t_of_js
              (let x11260 = t_to_js x11259 in
               Ojs.call (Ojs.get_prop_ascii x11260 "finally") "apply"
                 [|x11260;((let x11255 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x11254 with
                             | Some x11256 ->
                                 ignore
                                   (Ojs.call x11255 "push"
                                      [|((match x11256 with
                                          | `Null -> Ojs.null
                                          | `Undefined x11257 ->
                                              undefined_to_js x11257
                                          | `U1 x11258 ->
                                              Ojs.fun_to_js 1
                                                (fun _ -> x11258 ())))|])
                             | None -> ());
                            x11255))|])
    let (then_ :
      t ->
        ?onfulfilled:[ `Null  | `Undefined of undefined 
                     | `U1 of
                         T.t ->
                           [ `U1 of 'TResult1 
                           | `U2 of 'TResult1 PromiseLike.t ]
                         ]
          ->
          ?onrejected:[ `Null  | `Undefined of undefined 
                      | `U1 of
                          any ->
                            [ `U1 of 'TResult2 
                            | `U2 of 'TResult2 PromiseLike.t ]
                          ]
            -> unit -> ('TResult1, 'TResult2) union2 parent)
      =
      fun (x11278 : t) ->
        fun
          ?onfulfilled:(x11261 :
                         [ `Null  | `Undefined of undefined 
                         | `U1 of
                             T.t ->
                               [ `U1 of 'TResult1 
                               | `U2 of 'TResult1 PromiseLike.t ]
                             ]
                           option)
          ->
          fun
            ?onrejected:(x11262 :
                          [ `Null  | `Undefined of undefined 
                          | `U1 of
                              any ->
                                [ `U1 of 'TResult2 
                                | `U2 of 'TResult2 PromiseLike.t ]
                              ]
                            option)
            ->
            fun () ->
              parent_of_js
                (fun (x11280 : Ojs.t) ->
                   union2_of_js Obj.magic Obj.magic x11280)
                (let x11279 = t_to_js x11278 in
                 Ojs.call (Ojs.get_prop_ascii x11279 "then") "apply"
                   [|x11279;((let x11263 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              (match x11261 with
                               | Some x11271 ->
                                   ignore
                                     (Ojs.call x11263 "push"
                                        [|((match x11271 with
                                            | `Null -> Ojs.null
                                            | `Undefined x11272 ->
                                                undefined_to_js x11272
                                            | `U1 x11273 ->
                                                Ojs.fun_to_js 1
                                                  (fun (x11274 : Ojs.t) ->
                                                     match x11273
                                                             (T.t_of_js
                                                                x11274)
                                                     with
                                                     | `U1 x11275 ->
                                                         Obj.magic x11275
                                                     | `U2 x11276 ->
                                                         PromiseLike.t_to_js
                                                           Obj.magic x11276)))|])
                               | None -> ());
                              (match x11262 with
                               | Some x11264 ->
                                   ignore
                                     (Ojs.call x11263 "push"
                                        [|((match x11264 with
                                            | `Null -> Ojs.null
                                            | `Undefined x11265 ->
                                                undefined_to_js x11265
                                            | `U1 x11266 ->
                                                Ojs.fun_to_js 1
                                                  (fun (x11267 : Ojs.t) ->
                                                     match x11266
                                                             (any_of_js
                                                                x11267)
                                                     with
                                                     | `U1 x11268 ->
                                                         Obj.magic x11268
                                                     | `U2 x11269 ->
                                                         PromiseLike.t_to_js
                                                           Obj.magic x11269)))|])
                               | None -> ());
                              x11263))|])
    let (catch :
      t ->
        ?onrejected:[ `Null  | `Undefined of undefined 
                    | `U1 of
                        any ->
                          [ `U1 of 'TResult 
                          | `U2 of 'TResult PromiseLike.t ]
                        ]
          -> unit -> (T.t, 'TResult) union2 parent)
      =
      fun (x11292 : t) ->
        fun
          ?onrejected:(x11283 :
                        [ `Null  | `Undefined of undefined 
                        | `U1 of
                            any ->
                              [ `U1 of 'TResult 
                              | `U2 of 'TResult PromiseLike.t ]
                            ]
                          option)
          ->
          fun () ->
            parent_of_js
              (fun (x11294 : Ojs.t) ->
                 union2_of_js T.t_of_js Obj.magic x11294)
              (let x11293 = t_to_js x11292 in
               Ojs.call (Ojs.get_prop_ascii x11293 "catch") "apply"
                 [|x11293;((let x11284 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x11283 with
                             | Some x11285 ->
                                 ignore
                                   (Ojs.call x11284 "push"
                                      [|((match x11285 with
                                          | `Null -> Ojs.null
                                          | `Undefined x11286 ->
                                              undefined_to_js x11286
                                          | `U1 x11287 ->
                                              Ojs.fun_to_js 1
                                                (fun (x11288 : Ojs.t) ->
                                                   match x11287
                                                           (any_of_js x11288)
                                                   with
                                                   | `U1 x11289 ->
                                                       Obj.magic x11289
                                                   | `U2 x11290 ->
                                                       PromiseLike.t_to_js
                                                         Obj.magic x11290)))|])
                             | None -> ());
                            x11284))|])
    let (allSettled : T.t -> any parent) =
      fun (x11297 : T.t) ->
        parent_of_js any_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Promise") "allSettled"
             [|(T.t_to_js x11297)|])
    let (allSettled :
      [ `U1 of T.t  | `U2 of T.t PromiseLike.t ] Iterable.t ->
        T.t Awaited.t PromiseSettledResult.t list Awaited.t
          PromiseSettledResult.t list parent)
      =
      fun (x11299 : [ `U1 of T.t  | `U2 of T.t PromiseLike.t ] Iterable.t) ->
        parent_of_js
          (fun (x11304 : Ojs.t) ->
             Ojs.list_of_js
               (fun (x11305 : Ojs.t) ->
                  PromiseSettledResult.t_of_js
                    (fun (x11306 : Ojs.t) ->
                       Awaited.t_of_js
                         (fun (x11307 : Ojs.t) ->
                            Ojs.list_of_js
                              (fun (x11308 : Ojs.t) ->
                                 PromiseSettledResult.t_of_js
                                   (fun (x11309 : Ojs.t) ->
                                      Awaited.t_of_js T.t_of_js x11309)
                                   x11308) x11307) x11306) x11305) x11304)
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Promise") "allSettled"
             [|(Iterable.t_to_js
                  (fun (x11300 : [ `U1 of T.t  | `U2 of T.t PromiseLike.t ])
                     ->
                     match x11300 with
                     | `U1 x11301 -> T.t_to_js x11301
                     | `U2 x11302 -> PromiseLike.t_to_js T.t_to_js x11302)
                  x11299)|])
    let (any : T.t -> any Awaited.t parent) =
      fun (x11311 : T.t) ->
        parent_of_js
          (fun (x11312 : Ojs.t) -> Awaited.t_of_js any_of_js x11312)
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Promise") "any"
             [|(T.t_to_js x11311)|])
    let (any :
      [ `U1 of T.t  | `U2 of T.t PromiseLike.t ] Iterable.t ->
        T.t Awaited.t Awaited.t parent)
      =
      fun (x11314 : [ `U1 of T.t  | `U2 of T.t PromiseLike.t ] Iterable.t) ->
        parent_of_js
          (fun (x11319 : Ojs.t) ->
             Awaited.t_of_js
               (fun (x11320 : Ojs.t) -> Awaited.t_of_js T.t_of_js x11320)
               x11319)
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Promise") "any"
             [|(Iterable.t_to_js
                  (fun (x11315 : [ `U1 of T.t  | `U2 of T.t PromiseLike.t ])
                     ->
                     match x11315 with
                     | `U1 x11316 -> T.t_to_js x11316
                     | `U2 x11317 -> PromiseLike.t_to_js T.t_to_js x11317)
                  x11314)|])
    let (prototype : unit -> any parent) =
      fun () ->
        parent_of_js any_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Promise")
             "prototype")
    let (create :
      (resolve:([ `U1 of T.t  | `U2 of T.t PromiseLike.t ] -> unit) ->
         reject:(?reason:any -> unit -> unit) -> unit)
        -> t)
      =
      fun
        (x11323 :
          resolve:([ `U1 of T.t  | `U2 of T.t PromiseLike.t ] -> unit) ->
            reject:(?reason:any -> unit -> unit) -> unit)
        ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Promise")
             [|(Ojs.fun_to_js 2
                  (fun (x11324 : Ojs.t) ->
                     fun (x11329 : Ojs.t) ->
                       x11323
                         ~resolve:(fun
                                     (x11325 :
                                       [ `U1 of T.t 
                                       | `U2 of T.t PromiseLike.t ])
                                     ->
                                     ignore
                                       (Ojs.apply x11324
                                          [|((match x11325 with
                                              | `U1 x11326 ->
                                                  T.t_to_js x11326
                                              | `U2 x11327 ->
                                                  PromiseLike.t_to_js
                                                    T.t_to_js x11327))|]))
                         ~reject:(fun ?reason:(x11330 : any option) ->
                                    fun () ->
                                      ignore
                                        (Ojs.call x11329 "apply"
                                           [|Ojs.null;((let x11331 =
                                                          Ojs.new_obj
                                                            (Ojs.get_prop_ascii
                                                               Ojs.global
                                                               "Array") 
                                                            [||] in
                                                        (match x11330 with
                                                         | Some x11332 ->
                                                             ignore
                                                               (Ojs.call
                                                                  x11331
                                                                  "push"
                                                                  [|(
                                                                    any_to_js
                                                                    x11332)|])
                                                         | None -> ());
                                                        x11331))|]))))|])
    let (all : T.t -> any parent) =
      fun (x11333 : T.t) ->
        parent_of_js any_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Promise") "all"
             [|(T.t_to_js x11333)|])
    let (race : T.t -> any Awaited.t parent) =
      fun (x11335 : T.t) ->
        parent_of_js
          (fun (x11336 : Ojs.t) -> Awaited.t_of_js any_of_js x11336)
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Promise") "race"
             [|(T.t_to_js x11335)|])
    let (reject : ?reason:any -> unit -> t) =
      fun ?reason:(x11338 : any option) ->
        fun () ->
          t_of_js
            (let x11341 = Ojs.get_prop_ascii Ojs.global "Promise" in
             Ojs.call (Ojs.get_prop_ascii x11341 "reject") "apply"
               [|x11341;((let x11339 =
                            Ojs.new_obj
                              (Ojs.get_prop_ascii Ojs.global "Array") 
                              [||] in
                          (match x11338 with
                           | Some x11340 ->
                               ignore
                                 (Ojs.call x11339 "push"
                                    [|(any_to_js x11340)|])
                           | None -> ());
                          x11339))|])
    let (resolve : unit -> unit parent) =
      fun () ->
        parent_of_js Ojs.unit_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Promise") "resolve" [||])
    let (resolve : T.t -> T.t Awaited.t Awaited.t parent) =
      fun (x11343 : T.t) ->
        parent_of_js
          (fun (x11344 : Ojs.t) ->
             Awaited.t_of_js
               (fun (x11345 : Ojs.t) -> Awaited.t_of_js T.t_of_js x11345)
               x11344)
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Promise") "resolve"
             [|(T.t_to_js x11343)|])
    let (resolve :
      [ `U1 of T.t  | `U2 of T.t PromiseLike.t ] ->
        T.t Awaited.t Awaited.t parent)
      =
      fun (x11347 : [ `U1 of T.t  | `U2 of T.t PromiseLike.t ]) ->
        parent_of_js
          (fun (x11351 : Ojs.t) ->
             Awaited.t_of_js
               (fun (x11352 : Ojs.t) -> Awaited.t_of_js T.t_of_js x11352)
               x11351)
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Promise") "resolve"
             [|((match x11347 with
                 | `U1 x11348 -> T.t_to_js x11348
                 | `U2 x11349 -> PromiseLike.t_to_js T.t_to_js x11349))|])
    let (all :
      [ `U1 of T.t  | `U2 of T.t PromiseLike.t ] Iterable.t ->
        T.t Awaited.t list Awaited.t list parent)
      =
      fun (x11354 : [ `U1 of T.t  | `U2 of T.t PromiseLike.t ] Iterable.t) ->
        parent_of_js
          (fun (x11359 : Ojs.t) ->
             Ojs.list_of_js
               (fun (x11360 : Ojs.t) ->
                  Awaited.t_of_js
                    (fun (x11361 : Ojs.t) ->
                       Ojs.list_of_js
                         (fun (x11362 : Ojs.t) ->
                            Awaited.t_of_js T.t_of_js x11362) x11361) x11360)
               x11359)
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Promise") "all"
             [|(Iterable.t_to_js
                  (fun (x11355 : [ `U1 of T.t  | `U2 of T.t PromiseLike.t ])
                     ->
                     match x11355 with
                     | `U1 x11356 -> T.t_to_js x11356
                     | `U2 x11357 -> PromiseLike.t_to_js T.t_to_js x11357)
                  x11354)|])
    let (race :
      [ `U1 of T.t  | `U2 of T.t PromiseLike.t ] Iterable.t ->
        T.t Awaited.t Awaited.t parent)
      =
      fun (x11364 : [ `U1 of T.t  | `U2 of T.t PromiseLike.t ] Iterable.t) ->
        parent_of_js
          (fun (x11369 : Ojs.t) ->
             Awaited.t_of_js
               (fun (x11370 : Ojs.t) -> Awaited.t_of_js T.t_of_js x11370)
               x11369)
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Promise") "race"
             [|(Iterable.t_to_js
                  (fun (x11365 : [ `U1 of T.t  | `U2 of T.t PromiseLike.t ])
                     ->
                     match x11365 with
                     | `U1 x11366 -> T.t_to_js x11366
                     | `U2 x11367 -> PromiseLike.t_to_js T.t_to_js x11367)
                  x11364)|])
  end
module ProxyHandler_Make(T:Ojs.T) =
  struct
    type 'T parent = 'T ProxyHandler.t
    let rec parent_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T parent =
      fun (type __T) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x11374 : Ojs.t) -> ProxyHandler.t_of_js __T_of_js x11374
    and parent_to_js : 'T . ('T -> Ojs.t) -> 'T parent -> Ojs.t =
      fun (type __T) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x11372 : __T ProxyHandler.t) ->
            ProxyHandler.t_to_js __T_to_js x11372
    type t = T.t parent
    let rec t_of_js : Ojs.t -> t =
      fun (x11378 : Ojs.t) -> parent_of_js T.t_of_js x11378
    and t_to_js : t -> Ojs.t =
      fun (x11376 : T.t parent) -> parent_to_js T.t_to_js x11376
    let (apply_ : t -> target:T.t -> thisArg:any -> argArray:any list -> any)
      =
      fun (x11384 : t) ->
        fun ~target:(x11380 : T.t) ->
          fun ~thisArg:(x11381 : any) ->
            fun ~argArray:(x11382 : any list) ->
              any_of_js
                (Ojs.call (t_to_js x11384) "apply"
                   [|(T.t_to_js x11380);(any_to_js x11381);(Ojs.list_to_js
                                                              any_to_js
                                                              x11382)|])
    let (construct :
      t ->
        target:T.t ->
          argArray:any list -> newTarget:Function.t -> untyped_object)
      =
      fun (x11389 : t) ->
        fun ~target:(x11385 : T.t) ->
          fun ~argArray:(x11386 : any list) ->
            fun ~newTarget:(x11388 : Function.t) ->
              untyped_object_of_js
                (Ojs.call (t_to_js x11389) "construct"
                   [|(T.t_to_js x11385);(Ojs.list_to_js any_to_js x11386);(
                     Function.t_to_js x11388)|])
    let (defineProperty :
      t ->
        target:T.t ->
          property:[ `U1 of string  | `U2 of symbol ] ->
            attributes:PropertyDescriptor.t -> bool)
      =
      fun (x11395 : t) ->
        fun ~target:(x11390 : T.t) ->
          fun ~property:(x11391 : [ `U1 of string  | `U2 of symbol ]) ->
            fun ~attributes:(x11394 : PropertyDescriptor.t) ->
              Ojs.bool_of_js
                (Ojs.call (t_to_js x11395) "defineProperty"
                   [|(T.t_to_js x11390);((match x11391 with
                                          | `U1 x11392 ->
                                              Ojs.string_to_js x11392
                                          | `U2 x11393 -> symbol_to_js x11393));(
                     PropertyDescriptor.t_to_js x11394)|])
    let (deleteProperty :
      t -> target:T.t -> p:[ `U1 of string  | `U2 of symbol ] -> bool) =
      fun (x11400 : t) ->
        fun ~target:(x11396 : T.t) ->
          fun ~p:(x11397 : [ `U1 of string  | `U2 of symbol ]) ->
            Ojs.bool_of_js
              (Ojs.call (t_to_js x11400) "deleteProperty"
                 [|(T.t_to_js x11396);((match x11397 with
                                        | `U1 x11398 ->
                                            Ojs.string_to_js x11398
                                        | `U2 x11399 -> symbol_to_js x11399))|])
    let (get_ :
      t ->
        target:T.t ->
          p:[ `U1 of string  | `U2 of symbol ] -> receiver:any -> any)
      =
      fun (x11406 : t) ->
        fun ~target:(x11401 : T.t) ->
          fun ~p:(x11402 : [ `U1 of string  | `U2 of symbol ]) ->
            fun ~receiver:(x11405 : any) ->
              any_of_js
                (Ojs.call (t_to_js x11406) "get"
                   [|(T.t_to_js x11401);((match x11402 with
                                          | `U1 x11403 ->
                                              Ojs.string_to_js x11403
                                          | `U2 x11404 -> symbol_to_js x11404));(
                     any_to_js x11405)|])
    let (getOwnPropertyDescriptor :
      t ->
        target:T.t ->
          p:[ `U1 of string  | `U2 of symbol ] -> PropertyDescriptor.t option)
      =
      fun (x11411 : t) ->
        fun ~target:(x11407 : T.t) ->
          fun ~p:(x11408 : [ `U1 of string  | `U2 of symbol ]) ->
            Ojs.option_of_js PropertyDescriptor.t_of_js
              (Ojs.call (t_to_js x11411) "getOwnPropertyDescriptor"
                 [|(T.t_to_js x11407);((match x11408 with
                                        | `U1 x11409 ->
                                            Ojs.string_to_js x11409
                                        | `U2 x11410 -> symbol_to_js x11410))|])
    let (getPrototypeOf : t -> target:T.t -> untyped_object option) =
      fun (x11414 : t) ->
        fun ~target:(x11413 : T.t) ->
          Ojs.option_of_js untyped_object_of_js
            (Ojs.call (t_to_js x11414) "getPrototypeOf"
               [|(T.t_to_js x11413)|])
    let (has :
      t -> target:T.t -> p:[ `U1 of string  | `U2 of symbol ] -> bool) =
      fun (x11420 : t) ->
        fun ~target:(x11416 : T.t) ->
          fun ~p:(x11417 : [ `U1 of string  | `U2 of symbol ]) ->
            Ojs.bool_of_js
              (Ojs.call (t_to_js x11420) "has"
                 [|(T.t_to_js x11416);((match x11417 with
                                        | `U1 x11418 ->
                                            Ojs.string_to_js x11418
                                        | `U2 x11419 -> symbol_to_js x11419))|])
    let (isExtensible : t -> target:T.t -> bool) =
      fun (x11422 : t) ->
        fun ~target:(x11421 : T.t) ->
          Ojs.bool_of_js
            (Ojs.call (t_to_js x11422) "isExtensible" [|(T.t_to_js x11421)|])
    let (ownKeys :
      t ->
        target:T.t ->
          [ `String of string  | `Symbol of symbol ] Primitive.t ArrayLike.t)
      =
      fun (x11424 : t) ->
        fun ~target:(x11423 : T.t) ->
          ArrayLike.t_of_js
            (fun (x11425 : Ojs.t) ->
               Primitive.t_of_js
                 (fun (x11426 : Ojs.t) ->
                    let x11427 = x11426 in
                    match Ojs.string_of_js
                            (Ojs.get_prop_ascii x11427 "dummy")
                    with
                    | "String" -> `String (Ojs.string_of_js x11427)
                    | "Symbol" -> `Symbol (symbol_of_js x11427)
                    | _ -> assert false) x11425)
            (Ojs.call (t_to_js x11424) "ownKeys" [|(T.t_to_js x11423)|])
    let (preventExtensions : t -> target:T.t -> bool) =
      fun (x11429 : t) ->
        fun ~target:(x11428 : T.t) ->
          Ojs.bool_of_js
            (Ojs.call (t_to_js x11429) "preventExtensions"
               [|(T.t_to_js x11428)|])
    let (set_ :
      t ->
        target:T.t ->
          p:[ `U1 of string  | `U2 of symbol ] ->
            newValue:any -> receiver:any -> bool)
      =
      fun (x11436 : t) ->
        fun ~target:(x11430 : T.t) ->
          fun ~p:(x11431 : [ `U1 of string  | `U2 of symbol ]) ->
            fun ~newValue:(x11434 : any) ->
              fun ~receiver:(x11435 : any) ->
                Ojs.bool_of_js
                  (Ojs.call (t_to_js x11436) "set"
                     [|(T.t_to_js x11430);((match x11431 with
                                            | `U1 x11432 ->
                                                Ojs.string_to_js x11432
                                            | `U2 x11433 ->
                                                symbol_to_js x11433));(
                       any_to_js x11434);(any_to_js x11435)|])
    let (setPrototypeOf : t -> target:T.t -> v:untyped_object option -> bool)
      =
      fun (x11440 : t) ->
        fun ~target:(x11437 : T.t) ->
          fun ~v:(x11438 : untyped_object option) ->
            Ojs.bool_of_js
              (Ojs.call (t_to_js x11440) "setPrototypeOf"
                 [|(T.t_to_js x11437);(Ojs.option_to_js untyped_object_to_js
                                         x11438)|])
  end
module AsyncGenerator_Make(T:Ojs.T)(TReturn:Ojs.T)(TNext:Ojs.T) =
  struct
    type ('T, 'TReturn, 'TNext) parent =
      ('T, 'TReturn, 'TNext) AsyncGenerator.t
    let rec parent_of_js :
      'T 'TReturn 'TNext .
        (Ojs.t -> 'T) ->
          (Ojs.t -> 'TReturn) ->
            (Ojs.t -> 'TNext) -> Ojs.t -> ('T, 'TReturn, 'TNext) parent
      =
      fun (type __T) ->
        fun (type __TReturn) ->
          fun (type __TNext) ->
            fun (__T_of_js : Ojs.t -> __T) ->
              fun (__TReturn_of_js : Ojs.t -> __TReturn) ->
                fun (__TNext_of_js : Ojs.t -> __TNext) ->
                  fun (x11445 : Ojs.t) ->
                    AsyncGenerator.t_of_js __T_of_js __TReturn_of_js
                      __TNext_of_js x11445
    and parent_to_js :
      'T 'TReturn 'TNext .
        ('T -> Ojs.t) ->
          ('TReturn -> Ojs.t) ->
            ('TNext -> Ojs.t) -> ('T, 'TReturn, 'TNext) parent -> Ojs.t
      =
      fun (type __T) ->
        fun (type __TReturn) ->
          fun (type __TNext) ->
            fun (__T_to_js : __T -> Ojs.t) ->
              fun (__TReturn_to_js : __TReturn -> Ojs.t) ->
                fun (__TNext_to_js : __TNext -> Ojs.t) ->
                  fun (x11441 : (__T, __TReturn, __TNext) AsyncGenerator.t)
                    ->
                    AsyncGenerator.t_to_js __T_to_js __TReturn_to_js
                      __TNext_to_js x11441
    type t = (T.t, TReturn.t, TNext.t) parent
    let rec t_of_js : Ojs.t -> t =
      fun (x11453 : Ojs.t) ->
        parent_of_js T.t_of_js TReturn.t_of_js TNext.t_of_js x11453
    and t_to_js : t -> Ojs.t =
      fun (x11449 : (T.t, TReturn.t, TNext.t) parent) ->
        parent_to_js T.t_to_js TReturn.t_to_js TNext.t_to_js x11449
    let (next :
      t -> args:any list -> (T.t, TReturn.t) IteratorResult.t Promise.t) =
      fun (x11460 : t) ->
        fun ~args:(x11457 : any list) ->
          Promise.t_of_js
            (fun (x11462 : Ojs.t) ->
               IteratorResult.t_of_js T.t_of_js TReturn.t_of_js x11462)
            (let x11461 = t_to_js x11460 in
             Ojs.call (Ojs.get_prop_ascii x11461 "next") "apply"
               [|x11461;((let x11458 =
                            Ojs.new_obj
                              (Ojs.get_prop_ascii Ojs.global "Array") 
                              [||] in
                          List.iter
                            (fun (x11459 : any) ->
                               ignore
                                 (Ojs.call x11458 "push"
                                    [|(any_to_js x11459)|])) x11457;
                          x11458))|])
    let (return :
      t ->
        value:[ `U1 of TReturn.t  | `U2 of TReturn.t PromiseLike.t ] ->
          (T.t, TReturn.t) IteratorResult.t Promise.t)
      =
      fun (x11469 : t) ->
        fun
          ~value:(x11465 :
                   [ `U1 of TReturn.t  | `U2 of TReturn.t PromiseLike.t ])
          ->
          Promise.t_of_js
            (fun (x11470 : Ojs.t) ->
               IteratorResult.t_of_js T.t_of_js TReturn.t_of_js x11470)
            (Ojs.call (t_to_js x11469) "return"
               [|((match x11465 with
                   | `U1 x11466 -> TReturn.t_to_js x11466
                   | `U2 x11467 -> PromiseLike.t_to_js TReturn.t_to_js x11467))|])
    let (throw : t -> e:any -> (T.t, TReturn.t) IteratorResult.t Promise.t) =
      fun (x11474 : t) ->
        fun ~e:(x11473 : any) ->
          Promise.t_of_js
            (fun (x11475 : Ojs.t) ->
               IteratorResult.t_of_js T.t_of_js TReturn.t_of_js x11475)
            (Ojs.call (t_to_js x11474) "throw" [|(any_to_js x11473)|])
  end
module AsyncIterator_Make(T:Ojs.T)(TReturn:Ojs.T)(TNext:Ojs.T) =
  struct
    type ('T, 'TReturn, 'TNext) parent =
      ('T, 'TReturn, 'TNext) AsyncIterator.t
    let rec parent_of_js :
      'T 'TReturn 'TNext .
        (Ojs.t -> 'T) ->
          (Ojs.t -> 'TReturn) ->
            (Ojs.t -> 'TNext) -> Ojs.t -> ('T, 'TReturn, 'TNext) parent
      =
      fun (type __T) ->
        fun (type __TReturn) ->
          fun (type __TNext) ->
            fun (__T_of_js : Ojs.t -> __T) ->
              fun (__TReturn_of_js : Ojs.t -> __TReturn) ->
                fun (__TNext_of_js : Ojs.t -> __TNext) ->
                  fun (x11482 : Ojs.t) ->
                    AsyncIterator.t_of_js __T_of_js __TReturn_of_js
                      __TNext_of_js x11482
    and parent_to_js :
      'T 'TReturn 'TNext .
        ('T -> Ojs.t) ->
          ('TReturn -> Ojs.t) ->
            ('TNext -> Ojs.t) -> ('T, 'TReturn, 'TNext) parent -> Ojs.t
      =
      fun (type __T) ->
        fun (type __TReturn) ->
          fun (type __TNext) ->
            fun (__T_to_js : __T -> Ojs.t) ->
              fun (__TReturn_to_js : __TReturn -> Ojs.t) ->
                fun (__TNext_to_js : __TNext -> Ojs.t) ->
                  fun (x11478 : (__T, __TReturn, __TNext) AsyncIterator.t) ->
                    AsyncIterator.t_to_js __T_to_js __TReturn_to_js
                      __TNext_to_js x11478
    type t = (T.t, TReturn.t, TNext.t) parent
    let rec t_of_js : Ojs.t -> t =
      fun (x11490 : Ojs.t) ->
        parent_of_js T.t_of_js TReturn.t_of_js TNext.t_of_js x11490
    and t_to_js : t -> Ojs.t =
      fun (x11486 : (T.t, TReturn.t, TNext.t) parent) ->
        parent_to_js T.t_to_js TReturn.t_to_js TNext.t_to_js x11486
    let (next :
      t -> args:any list -> (T.t, TReturn.t) IteratorResult.t Promise.t) =
      fun (x11497 : t) ->
        fun ~args:(x11494 : any list) ->
          Promise.t_of_js
            (fun (x11499 : Ojs.t) ->
               IteratorResult.t_of_js T.t_of_js TReturn.t_of_js x11499)
            (let x11498 = t_to_js x11497 in
             Ojs.call (Ojs.get_prop_ascii x11498 "next") "apply"
               [|x11498;((let x11495 =
                            Ojs.new_obj
                              (Ojs.get_prop_ascii Ojs.global "Array") 
                              [||] in
                          List.iter
                            (fun (x11496 : any) ->
                               ignore
                                 (Ojs.call x11495 "push"
                                    [|(any_to_js x11496)|])) x11494;
                          x11495))|])
    let (return :
      t ->
        ?value:[ `U1 of TReturn.t  | `U2 of TReturn.t PromiseLike.t ] ->
          unit -> (T.t, TReturn.t) IteratorResult.t Promise.t)
      =
      fun (x11508 : t) ->
        fun
          ?value:(x11502 :
                   [ `U1 of TReturn.t  | `U2 of TReturn.t PromiseLike.t ]
                     option)
          ->
          fun () ->
            Promise.t_of_js
              (fun (x11510 : Ojs.t) ->
                 IteratorResult.t_of_js T.t_of_js TReturn.t_of_js x11510)
              (let x11509 = t_to_js x11508 in
               Ojs.call (Ojs.get_prop_ascii x11509 "return") "apply"
                 [|x11509;((let x11503 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x11502 with
                             | Some x11504 ->
                                 ignore
                                   (Ojs.call x11503 "push"
                                      [|((match x11504 with
                                          | `U1 x11505 ->
                                              TReturn.t_to_js x11505
                                          | `U2 x11506 ->
                                              PromiseLike.t_to_js
                                                TReturn.t_to_js x11506))|])
                             | None -> ());
                            x11503))|])
    let (throw :
      t -> ?e:any -> unit -> (T.t, TReturn.t) IteratorResult.t Promise.t) =
      fun (x11516 : t) ->
        fun ?e:(x11513 : any option) ->
          fun () ->
            Promise.t_of_js
              (fun (x11518 : Ojs.t) ->
                 IteratorResult.t_of_js T.t_of_js TReturn.t_of_js x11518)
              (let x11517 = t_to_js x11516 in
               Ojs.call (Ojs.get_prop_ascii x11517 "throw") "apply"
                 [|x11517;((let x11514 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x11513 with
                             | Some x11515 ->
                                 ignore
                                   (Ojs.call x11514 "push"
                                      [|(any_to_js x11515)|])
                             | None -> ());
                            x11514))|])
  end
module WeakRef_Make(T:Ojs.T) =
  struct
    type 'T parent = 'T WeakRef.t
    let rec parent_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T parent =
      fun (type __T) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x11523 : Ojs.t) -> WeakRef.t_of_js __T_of_js x11523
    and parent_to_js : 'T . ('T -> Ojs.t) -> 'T parent -> Ojs.t =
      fun (type __T) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x11521 : __T WeakRef.t) -> WeakRef.t_to_js __T_to_js x11521
    type t = T.t parent
    let rec t_of_js : Ojs.t -> t =
      fun (x11527 : Ojs.t) -> parent_of_js T.t_of_js x11527
    and t_to_js : t -> Ojs.t =
      fun (x11525 : T.t parent) -> parent_to_js T.t_to_js x11525
    let (deref : t -> T.t option) =
      fun (x11529 : t) ->
        Ojs.option_of_js T.t_of_js (Ojs.call (t_to_js x11529) "deref" [||])
    let (prototype : unit -> any parent) =
      fun () ->
        parent_of_js any_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "WeakRef")
             "prototype")
    let (create : T.t -> t) =
      fun (x11532 : T.t) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "WeakRef")
             [|(T.t_to_js x11532)|])
  end
module FinalizationRegistry_Make(T:Ojs.T) =
  struct
    type 'T parent = 'T FinalizationRegistry.t
    let rec parent_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T parent =
      fun (type __T) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x11535 : Ojs.t) ->
            FinalizationRegistry.t_of_js __T_of_js x11535
    and parent_to_js : 'T . ('T -> Ojs.t) -> 'T parent -> Ojs.t =
      fun (type __T) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x11533 : __T FinalizationRegistry.t) ->
            FinalizationRegistry.t_to_js __T_to_js x11533
    type t = T.t parent
    let rec t_of_js : Ojs.t -> t =
      fun (x11539 : Ojs.t) -> parent_of_js T.t_of_js x11539
    and t_to_js : t -> Ojs.t =
      fun (x11537 : T.t parent) -> parent_to_js T.t_to_js x11537
    let (register :
      t ->
        target:untyped_object ->
          heldValue:T.t -> ?unregisterToken:untyped_object -> unit -> unit)
      =
      fun (x11546 : t) ->
        fun ~target:(x11541 : untyped_object) ->
          fun ~heldValue:(x11542 : T.t) ->
            fun ?unregisterToken:(x11543 : untyped_object option) ->
              fun () ->
                ignore
                  (let x11547 = t_to_js x11546 in
                   Ojs.call (Ojs.get_prop_ascii x11547 "register") "apply"
                     [|x11547;((let x11544 =
                                  Ojs.new_obj
                                    (Ojs.get_prop_ascii Ojs.global "Array")
                                    [||] in
                                ignore
                                  (Ojs.call x11544 "push"
                                     [|(untyped_object_to_js x11541)|]);
                                ignore
                                  (Ojs.call x11544 "push"
                                     [|(T.t_to_js x11542)|]);
                                (match x11543 with
                                 | Some x11545 ->
                                     ignore
                                       (Ojs.call x11544 "push"
                                          [|(untyped_object_to_js x11545)|])
                                 | None -> ());
                                x11544))|])
    let (unregister : t -> unregisterToken:untyped_object -> unit) =
      fun (x11549 : t) ->
        fun ~unregisterToken:(x11548 : untyped_object) ->
          ignore
            (Ojs.call (t_to_js x11549) "unregister"
               [|(untyped_object_to_js x11548)|])
    let (prototype : unit -> any parent) =
      fun () ->
        parent_of_js any_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "FinalizationRegistry")
             "prototype")
    let (create : (T.t -> unit) -> t) =
      fun (x11551 : T.t -> unit) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "FinalizationRegistry")
             [|(Ojs.fun_to_js 1
                  (fun (x11552 : Ojs.t) -> x11551 (T.t_of_js x11552)))|])
  end
module PromiseFulfilledResult_Make(T:Ojs.T) =
  struct
    type 'T parent = 'T PromiseFulfilledResult.t
    let rec parent_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T parent =
      fun (type __T) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x11555 : Ojs.t) ->
            PromiseFulfilledResult.t_of_js __T_of_js x11555
    and parent_to_js : 'T . ('T -> Ojs.t) -> 'T parent -> Ojs.t =
      fun (type __T) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x11553 : __T PromiseFulfilledResult.t) ->
            PromiseFulfilledResult.t_to_js __T_to_js x11553
    type t = T.t parent
    let rec t_of_js : Ojs.t -> t =
      fun (x11559 : Ojs.t) -> parent_of_js T.t_of_js x11559
    and t_to_js : t -> Ojs.t =
      fun (x11557 : T.t parent) -> parent_to_js T.t_to_js x11557
    let (get_status : t -> [ `L_s62_fulfilled ]) =
      fun (x11561 : t) ->
        let x11562 = Ojs.get_prop_ascii (t_to_js x11561) "status" in
        match Ojs.string_of_js x11562 with
        | "fulfilled" -> `L_s62_fulfilled
        | _ -> assert false
    let (set_status : t -> [ `L_s62_fulfilled ] -> unit) =
      fun (x11563 : t) ->
        fun (x11564 : [ `L_s62_fulfilled ]) ->
          Ojs.set_prop_ascii (t_to_js x11563) "status"
            (match x11564 with
             | `L_s62_fulfilled -> Ojs.string_to_js "fulfilled")
    let (get_value : t -> T.t) =
      fun (x11565 : t) ->
        T.t_of_js (Ojs.get_prop_ascii (t_to_js x11565) "value")
    let (set_value : t -> T.t -> unit) =
      fun (x11566 : t) ->
        fun (x11567 : T.t) ->
          Ojs.set_prop_ascii (t_to_js x11566) "value" (T.t_to_js x11567)
  end
let (nan : unit -> float) =
  fun () -> Ojs.float_of_js (Ojs.get_prop_ascii Ojs.global "NaN")
let (infinity : unit -> float) =
  fun () -> Ojs.float_of_js (Ojs.get_prop_ascii Ojs.global "Infinity")
let (eval : string -> any) =
  fun (x11568 : string) ->
    any_of_js (Ojs.call Ojs.global "eval" [|(Ojs.string_to_js x11568)|])
let (parseInt : string:string -> ?radix:float -> unit -> float) =
  fun ~string:(x11569 : string) ->
    fun ?radix:(x11570 : float option) ->
      fun () ->
        Ojs.float_of_js
          (let x11573 = Ojs.global in
           Ojs.call (Ojs.get_prop_ascii x11573 "parseInt") "apply"
             [|x11573;((let x11571 =
                          Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                            [||] in
                        ignore
                          (Ojs.call x11571 "push"
                             [|(Ojs.string_to_js x11569)|]);
                        (match x11570 with
                         | Some x11572 ->
                             ignore
                               (Ojs.call x11571 "push"
                                  [|(Ojs.float_to_js x11572)|])
                         | None -> ());
                        x11571))|])
let (parseFloat : string -> float) =
  fun (x11574 : string) ->
    Ojs.float_of_js
      (Ojs.call Ojs.global "parseFloat" [|(Ojs.string_to_js x11574)|])
let (isNaN : float -> bool) =
  fun (x11575 : float) ->
    Ojs.bool_of_js (Ojs.call Ojs.global "isNaN" [|(Ojs.float_to_js x11575)|])
let (isFinite : float -> bool) =
  fun (x11576 : float) ->
    Ojs.bool_of_js
      (Ojs.call Ojs.global "isFinite" [|(Ojs.float_to_js x11576)|])
let (decodeURI : string -> string) =
  fun (x11577 : string) ->
    Ojs.string_of_js
      (Ojs.call Ojs.global "decodeURI" [|(Ojs.string_to_js x11577)|])
let (decodeURIComponent : string -> string) =
  fun (x11578 : string) ->
    Ojs.string_of_js
      (Ojs.call Ojs.global "decodeURIComponent" [|(Ojs.string_to_js x11578)|])
let (encodeURI : string -> string) =
  fun (x11579 : string) ->
    Ojs.string_of_js
      (Ojs.call Ojs.global "encodeURI" [|(Ojs.string_to_js x11579)|])
let (encodeURIComponent :
  [ `Number of float  | `String of string  | `Boolean of bool ] Primitive.t
    -> string)
  =
  fun
    (x11580 :
      [ `Number of float  | `String of string  | `Boolean of bool ]
        Primitive.t)
    ->
    Ojs.string_of_js
      (Ojs.call Ojs.global "encodeURIComponent"
         [|(Primitive.t_to_js
              (fun
                 (x11581 :
                   [ `Number of float  | `String of string 
                   | `Boolean of bool ])
                 ->
                 match x11581 with
                 | `Number x11582 -> Ojs.float_to_js x11582
                 | `String x11583 -> Ojs.string_to_js x11583
                 | `Boolean x11584 -> Ojs.bool_to_js x11584) x11580)|])
let (escape : string -> string) =
  fun (x11585 : string) ->
    Ojs.string_of_js
      (Ojs.call Ojs.global "escape" [|(Ojs.string_to_js x11585)|])
let (unescape : string -> string) =
  fun (x11586 : string) ->
    Ojs.string_of_js
      (Ojs.call Ojs.global "unescape" [|(Ojs.string_to_js x11586)|])
let (proxy : unit -> ProxyConstructor.t) =
  fun () -> ProxyConstructor.t_of_js (Ojs.get_prop_ascii Ojs.global "Proxy")
