[@@@js.dummy "!! This code has been generated by gen_js_api !!"]
[@@@ocaml.warning "-7-32-39"]
[@@@ocaml.warning "-7-11-32-33-39"]
open Ts2ocaml_min
module WeakKey =
  struct
    type t = [ `Symbol of symbol  | `Other of untyped_object ] Primitive.t
    let rec t_of_js : Ojs.t -> t =
      fun (x5 : Ojs.t) ->
        Primitive.t_of_js
          (fun (x6 : Ojs.t) ->
             let x7 = x6 in
             match Ojs.string_of_js (Ojs.get_prop_ascii x7 "dummy") with
             | "Symbol" -> `Symbol (symbol_of_js x7)
             | "Other" -> `Other (untyped_object_of_js x7)
             | _ -> assert false) x5
    and t_to_js : t -> Ojs.t =
      fun
        (x1 : [ `Symbol of symbol  | `Other of untyped_object ] Primitive.t)
        ->
        Primitive.t_to_js
          (fun (x2 : [ `Symbol of symbol  | `Other of untyped_object ]) ->
             match x2 with
             | `Symbol x3 -> symbol_to_js x3
             | `Other x4 -> untyped_object_to_js x4) x1
  end
module IteratorYieldResult =
  struct
    type 'TYield t = [ `IteratorYieldResult of 'TYield ] intf
    let rec t_of_js : 'TYield . (Ojs.t -> 'TYield) -> Ojs.t -> 'TYield t =
      fun _TYield -> Obj.magic
    and t_to_js : 'TYield . ('TYield -> Ojs.t) -> 'TYield t -> Ojs.t =
      fun _TYield -> Obj.magic
    type 'TYield tags = [ `IteratorYieldResult of 'TYield ]
    type ('tags, 'TYield) this =
      'tags intf constraint 'tags = [> `IteratorYieldResult of 'TYield ]
    let rec this_of_js :
      'tags 'TYield .
        (Ojs.t -> 'tags) ->
          (Ojs.t -> 'TYield) -> Ojs.t -> ('tags, 'TYield) this
      =
      fun (type __tags) ->
        fun (type __TYield) ->
          fun (__tags_of_js : Ojs.t -> __tags) ->
            fun (__TYield_of_js : Ojs.t -> __TYield) ->
              fun (x10 : Ojs.t) -> intf_of_js __tags_of_js x10
    and this_to_js :
      'tags 'TYield .
        ('tags -> Ojs.t) ->
          ('TYield -> Ojs.t) -> ('tags, 'TYield) this -> Ojs.t
      =
      fun (type __tags) ->
        fun (type __TYield) ->
          fun (__tags_to_js : __tags -> Ojs.t) ->
            fun (__TYield_to_js : __TYield -> Ojs.t) ->
              fun (x8 : __tags intf) -> intf_to_js __tags_to_js x8
    let (get_done : ('tags, 'TYield) this -> [ `L_b_false ] option) =
      fun (x12 : ('tags, 'TYield) this) ->
        Ojs.option_of_js
          (fun (x15 : Ojs.t) ->
             let x16 = x15 in
             match Ojs.bool_of_js x16 with
             | false -> `L_b_false
             | _ -> assert false)
          (Ojs.get_prop_ascii (this_to_js Obj.magic Obj.magic x12) "done")
    let (set_done : ('tags, 'TYield) this -> [ `L_b_false ] -> unit) =
      fun (x17 : ('tags, 'TYield) this) ->
        fun (x18 : [ `L_b_false ]) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic Obj.magic x17) "done"
            (match x18 with | `L_b_false -> Ojs.bool_to_js false)
    let (get_value : ('tags, 'TYield) this -> 'TYield) =
      fun (x21 : ('tags, 'TYield) this) ->
        Obj.magic
          (Ojs.get_prop_ascii (this_to_js Obj.magic Obj.magic x21) "value")
    let (set_value : ('tags, 'TYield) this -> 'TYield -> unit) =
      fun (x24 : ('tags, 'TYield) this) ->
        fun (x25 : 'TYield) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic Obj.magic x24) "value"
            (Obj.magic x25)
    let (create :
      ?done_:[ `L_b_false ] -> value:'TYield -> unit -> 'TYield t) =
      fun ?done_:(x28 : [ `L_b_false ] option) ->
        fun ~value:(x29 : 'TYield) ->
          fun () ->
            let x30 = Ojs.empty_obj () in
            (match x28 with
             | Some x32 ->
                 Ojs.set_prop_ascii x30 "done"
                   (match x32 with | `L_b_false -> Ojs.bool_to_js false)
             | None -> ());
            Ojs.set_prop_ascii x30 "value" (Obj.magic x29);
            t_of_js Obj.magic x30
    let cast_from = Obj.magic
  end
module IteratorReturnResult =
  struct
    type 'TReturn t = [ `IteratorReturnResult of 'TReturn ] intf
    let rec t_of_js : 'TReturn . (Ojs.t -> 'TReturn) -> Ojs.t -> 'TReturn t =
      fun _TReturn -> Obj.magic
    and t_to_js : 'TReturn . ('TReturn -> Ojs.t) -> 'TReturn t -> Ojs.t =
      fun _TReturn -> Obj.magic
    type 'TReturn tags = [ `IteratorReturnResult of 'TReturn ]
    type ('tags, 'TReturn) this =
      'tags intf constraint 'tags = [> `IteratorReturnResult of 'TReturn ]
    let rec this_of_js :
      'tags 'TReturn .
        (Ojs.t -> 'tags) ->
          (Ojs.t -> 'TReturn) -> Ojs.t -> ('tags, 'TReturn) this
      =
      fun (type __tags) ->
        fun (type __TReturn) ->
          fun (__tags_of_js : Ojs.t -> __tags) ->
            fun (__TReturn_of_js : Ojs.t -> __TReturn) ->
              fun (x35 : Ojs.t) -> intf_of_js __tags_of_js x35
    and this_to_js :
      'tags 'TReturn .
        ('tags -> Ojs.t) ->
          ('TReturn -> Ojs.t) -> ('tags, 'TReturn) this -> Ojs.t
      =
      fun (type __tags) ->
        fun (type __TReturn) ->
          fun (__tags_to_js : __tags -> Ojs.t) ->
            fun (__TReturn_to_js : __TReturn -> Ojs.t) ->
              fun (x33 : __tags intf) -> intf_to_js __tags_to_js x33
    let (get_done : ('tags, 'TReturn) this -> [ `L_b_true ]) =
      fun (x37 : ('tags, 'TReturn) this) ->
        let x40 =
          Ojs.get_prop_ascii (this_to_js Obj.magic Obj.magic x37) "done" in
        match Ojs.bool_of_js x40 with | true -> `L_b_true | _ -> assert false
    let (set_done : ('tags, 'TReturn) this -> [ `L_b_true ] -> unit) =
      fun (x41 : ('tags, 'TReturn) this) ->
        fun (x42 : [ `L_b_true ]) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic Obj.magic x41) "done"
            (match x42 with | `L_b_true -> Ojs.bool_to_js true)
    let (get_value : ('tags, 'TReturn) this -> 'TReturn) =
      fun (x45 : ('tags, 'TReturn) this) ->
        Obj.magic
          (Ojs.get_prop_ascii (this_to_js Obj.magic Obj.magic x45) "value")
    let (set_value : ('tags, 'TReturn) this -> 'TReturn -> unit) =
      fun (x48 : ('tags, 'TReturn) this) ->
        fun (x49 : 'TReturn) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic Obj.magic x48) "value"
            (Obj.magic x49)
    let (create :
      done_:[ `L_b_true ] -> value:'TReturn -> unit -> 'TReturn t) =
      fun ~done_:(x52 : [ `L_b_true ]) ->
        fun ~value:(x53 : 'TReturn) ->
          fun () ->
            let x54 = Ojs.empty_obj () in
            Ojs.set_prop_ascii x54 "done"
              (match x52 with | `L_b_true -> Ojs.bool_to_js true);
            Ojs.set_prop_ascii x54 "value" (Obj.magic x53);
            t_of_js Obj.magic x54
    let cast_from = Obj.magic
  end
module IteratorResult =
  struct
    type ('T, 'TReturn) t =
      [ `U_b_false of 'T IteratorYieldResult.t 
      | `U_b_true of 'TReturn IteratorReturnResult.t ]
    let rec t_of_js :
      'T 'TReturn .
        (Ojs.t -> 'T) -> (Ojs.t -> 'TReturn) -> Ojs.t -> ('T, 'TReturn) t
      =
      fun (type __T) ->
        fun (type __TReturn) ->
          fun (__T_of_js : Ojs.t -> __T) ->
            fun (__TReturn_of_js : Ojs.t -> __TReturn) ->
              fun (x61 : Ojs.t) ->
                let x62 = x61 in
                match Ojs.bool_of_js (Ojs.get_prop_ascii x62 "done") with
                | false ->
                    `U_b_false (IteratorYieldResult.t_of_js __T_of_js x62)
                | true ->
                    `U_b_true
                      (IteratorReturnResult.t_of_js __TReturn_of_js x62)
    and t_to_js :
      'T 'TReturn .
        ('T -> Ojs.t) -> ('TReturn -> Ojs.t) -> ('T, 'TReturn) t -> Ojs.t
      =
      fun (type __T) ->
        fun (type __TReturn) ->
          fun (__T_to_js : __T -> Ojs.t) ->
            fun (__TReturn_to_js : __TReturn -> Ojs.t) ->
              fun
                (x56 :
                  [ `U_b_false of __T IteratorYieldResult.t 
                  | `U_b_true of __TReturn IteratorReturnResult.t ])
                ->
                match x56 with
                | `U_b_false x57 -> IteratorYieldResult.t_to_js __T_to_js x57
                | `U_b_true x59 ->
                    IteratorReturnResult.t_to_js __TReturn_to_js x59
    type 'T t_1 = ('T, any) t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 =
      fun (type __T) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x68 : Ojs.t) -> t_of_js __T_of_js any_of_js x68
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t =
      fun (type __T) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x65 : (__T, any) t) -> t_to_js __T_to_js any_to_js x65
  end
module Iterator =
  struct
    type ('T, 'TReturn, 'TNext) t =
      [ `Iterator of ('T * 'TReturn * 'TNext) ] intf
    let rec t_of_js :
      'T 'TReturn 'TNext .
        (Ojs.t -> 'T) ->
          (Ojs.t -> 'TReturn) ->
            (Ojs.t -> 'TNext) -> Ojs.t -> ('T, 'TReturn, 'TNext) t
      = fun _T -> fun _TReturn -> fun _TNext -> Obj.magic
    and t_to_js :
      'T 'TReturn 'TNext .
        ('T -> Ojs.t) ->
          ('TReturn -> Ojs.t) ->
            ('TNext -> Ojs.t) -> ('T, 'TReturn, 'TNext) t -> Ojs.t
      = fun _T -> fun _TReturn -> fun _TNext -> Obj.magic
    type ('T, 'TReturn) t_2 = ('T, 'TReturn, undefined) t
    let rec t_2_of_js :
      'T 'TReturn .
        (Ojs.t -> 'T) -> (Ojs.t -> 'TReturn) -> Ojs.t -> ('T, 'TReturn) t_2
      =
      fun (type __T) ->
        fun (type __TReturn) ->
          fun (__T_of_js : Ojs.t -> __T) ->
            fun (__TReturn_of_js : Ojs.t -> __TReturn) ->
              fun (x75 : Ojs.t) ->
                t_of_js __T_of_js __TReturn_of_js undefined_of_js x75
    and t_2_to_js :
      'T 'TReturn .
        ('T -> Ojs.t) -> ('TReturn -> Ojs.t) -> ('T, 'TReturn) t_2 -> Ojs.t
      =
      fun (type __T) ->
        fun (type __TReturn) ->
          fun (__T_to_js : __T -> Ojs.t) ->
            fun (__TReturn_to_js : __TReturn -> Ojs.t) ->
              fun (x71 : (__T, __TReturn, undefined) t) ->
                t_to_js __T_to_js __TReturn_to_js undefined_to_js x71
    type 'T t_1 = ('T, any, undefined) t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 =
      fun (type __T) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x83 : Ojs.t) ->
            t_of_js __T_of_js any_of_js undefined_of_js x83
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t =
      fun (type __T) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x79 : (__T, any, undefined) t) ->
            t_to_js __T_to_js any_to_js undefined_to_js x79
    type ('T, 'TReturn, 'TNext) tags =
      [ `Iterator of ('T * 'TReturn * 'TNext) ]
    type ('T, 'TReturn) tags_2 = ('T, 'TReturn, undefined) tags
    type 'T tags_1 = ('T, any, undefined) tags
    type ('tags, 'T, 'TReturn, 'TNext) this =
      'tags intf constraint 'tags =
                  [> `Iterator of ('T * 'TReturn * 'TNext) ]
    let rec this_of_js :
      'tags 'T 'TReturn 'TNext .
        (Ojs.t -> 'tags) ->
          (Ojs.t -> 'T) ->
            (Ojs.t -> 'TReturn) ->
              (Ojs.t -> 'TNext) ->
                Ojs.t -> ('tags, 'T, 'TReturn, 'TNext) this
      =
      fun (type __tags) ->
        fun (type __T) ->
          fun (type __TReturn) ->
            fun (type __TNext) ->
              fun (__tags_of_js : Ojs.t -> __tags) ->
                fun (__T_of_js : Ojs.t -> __T) ->
                  fun (__TReturn_of_js : Ojs.t -> __TReturn) ->
                    fun (__TNext_of_js : Ojs.t -> __TNext) ->
                      fun (x89 : Ojs.t) -> intf_of_js __tags_of_js x89
    and this_to_js :
      'tags 'T 'TReturn 'TNext .
        ('tags -> Ojs.t) ->
          ('T -> Ojs.t) ->
            ('TReturn -> Ojs.t) ->
              ('TNext -> Ojs.t) ->
                ('tags, 'T, 'TReturn, 'TNext) this -> Ojs.t
      =
      fun (type __tags) ->
        fun (type __T) ->
          fun (type __TReturn) ->
            fun (type __TNext) ->
              fun (__tags_to_js : __tags -> Ojs.t) ->
                fun (__T_to_js : __T -> Ojs.t) ->
                  fun (__TReturn_to_js : __TReturn -> Ojs.t) ->
                    fun (__TNext_to_js : __TNext -> Ojs.t) ->
                      fun (x87 : __tags intf) -> intf_to_js __tags_to_js x87
    let (next :
      ('tags, 'T, 'TReturn, 'TNext) this ->
        args:any list -> ('T, 'TReturn) IteratorResult.t)
      =
      fun (x94 : ('tags, 'T, 'TReturn, 'TNext) this) ->
        fun ~args:(x91 : any list) ->
          IteratorResult.t_of_js Obj.magic Obj.magic
            (let x99 = this_to_js Obj.magic Obj.magic Obj.magic Obj.magic x94 in
             Ojs.call (Ojs.get_prop_ascii x99 "next") "apply"
               [|x99;((let x92 =
                         Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                           [||] in
                       List.iter
                         (fun (x93 : any) ->
                            ignore (Ojs.call x92 "push" [|(any_to_js x93)|]))
                         x91;
                       x92))|])
    let (return :
      ('tags, 'T, 'TReturn, 'TNext) this ->
        ?value:'TReturn -> unit -> ('T, 'TReturn) IteratorResult.t)
      =
      fun (x105 : ('tags, 'T, 'TReturn, 'TNext) this) ->
        fun ?value:(x102 : 'TReturn option) ->
          fun () ->
            IteratorResult.t_of_js Obj.magic Obj.magic
              (let x110 =
                 this_to_js Obj.magic Obj.magic Obj.magic Obj.magic x105 in
               Ojs.call (Ojs.get_prop_ascii x110 "return") "apply"
                 [|x110;((let x103 =
                            Ojs.new_obj
                              (Ojs.get_prop_ascii Ojs.global "Array") 
                              [||] in
                          (match x102 with
                           | Some x104 ->
                               ignore
                                 (Ojs.call x103 "push" [|(Obj.magic x104)|])
                           | None -> ());
                          x103))|])
    let (throw :
      ('tags, 'T, 'TReturn, 'TNext) this ->
        ?e:any -> unit -> ('T, 'TReturn) IteratorResult.t)
      =
      fun (x116 : ('tags, 'T, 'TReturn, 'TNext) this) ->
        fun ?e:(x113 : any option) ->
          fun () ->
            IteratorResult.t_of_js Obj.magic Obj.magic
              (let x121 =
                 this_to_js Obj.magic Obj.magic Obj.magic Obj.magic x116 in
               Ojs.call (Ojs.get_prop_ascii x121 "throw") "apply"
                 [|x121;((let x114 =
                            Ojs.new_obj
                              (Ojs.get_prop_ascii Ojs.global "Array") 
                              [||] in
                          (match x113 with
                           | Some x115 ->
                               ignore
                                 (Ojs.call x114 "push" [|(any_to_js x115)|])
                           | None -> ());
                          x114))|])
    let cast_from = Obj.magic
  end
module Iterable =
  struct
    type 'T t = [ `Iterable of 'T ] intf
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun _T -> Obj.magic
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun _T -> Obj.magic
    type 'T tags = [ `Iterable of 'T ]
    type ('tags, 'T) this =
      'tags intf constraint 'tags = [> `Iterable of 'T ]
    let rec this_of_js :
      'tags 'T .
        (Ojs.t -> 'tags) -> (Ojs.t -> 'T) -> Ojs.t -> ('tags, 'T) this
      =
      fun (type __tags) ->
        fun (type __T) ->
          fun (__tags_of_js : Ojs.t -> __tags) ->
            fun (__T_of_js : Ojs.t -> __T) ->
              fun (x126 : Ojs.t) -> intf_of_js __tags_of_js x126
    and this_to_js :
      'tags 'T .
        ('tags -> Ojs.t) -> ('T -> Ojs.t) -> ('tags, 'T) this -> Ojs.t
      =
      fun (type __tags) ->
        fun (type __T) ->
          fun (__tags_to_js : __tags -> Ojs.t) ->
            fun (__T_to_js : __T -> Ojs.t) ->
              fun (x124 : __tags intf) -> intf_to_js __tags_to_js x124
    let cast_from = Obj.magic
  end
module WeakSet =
  struct
    type 'T t = [ `WeakSet of 'T ] intf
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun _T -> Obj.magic
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun _T -> Obj.magic
    type 'T tags = [ `WeakSet of 'T ]
    type ('tags, 'T) this = 'tags intf constraint 'tags = [> `WeakSet of 'T ]
    let rec this_of_js :
      'tags 'T .
        (Ojs.t -> 'tags) -> (Ojs.t -> 'T) -> Ojs.t -> ('tags, 'T) this
      =
      fun (type __tags) ->
        fun (type __T) ->
          fun (__tags_of_js : Ojs.t -> __tags) ->
            fun (__T_of_js : Ojs.t -> __T) ->
              fun (x130 : Ojs.t) -> intf_of_js __tags_of_js x130
    and this_to_js :
      'tags 'T .
        ('tags -> Ojs.t) -> ('T -> Ojs.t) -> ('tags, 'T) this -> Ojs.t
      =
      fun (type __tags) ->
        fun (type __T) ->
          fun (__tags_to_js : __tags -> Ojs.t) ->
            fun (__T_to_js : __T -> Ojs.t) ->
              fun (x128 : __tags intf) -> intf_to_js __tags_to_js x128
    let (add : ('tags, 'T) this -> value:'T -> ('tags, 'T) this) =
      fun (x133 : ('tags, 'T) this) ->
        fun ~value:(x132 : 'T) ->
          this_of_js Obj.magic Obj.magic
            (Ojs.call (this_to_js Obj.magic Obj.magic x133) "add"
               [|(Obj.magic x132)|])
    let (delete : ('tags, 'T) this -> value:'T -> bool) =
      fun (x139 : ('tags, 'T) this) ->
        fun ~value:(x138 : 'T) ->
          Ojs.bool_of_js
            (Ojs.call (this_to_js Obj.magic Obj.magic x139) "delete"
               [|(Obj.magic x138)|])
    let (has : ('tags, 'T) this -> value:'T -> bool) =
      fun (x143 : ('tags, 'T) this) ->
        fun ~value:(x142 : 'T) ->
          Ojs.bool_of_js
            (Ojs.call (this_to_js Obj.magic Obj.magic x143) "has"
               [|(Obj.magic x142)|])
    let (create : 'T Iterable.t -> 'T t) =
      fun (x146 : 'T Iterable.t) ->
        t_of_js Obj.magic
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "WeakSet")
             [|(Iterable.t_to_js Obj.magic x146)|])
    let (create' : ?values:'T list option -> unit -> 'T t) =
      fun ?values:(x149 : 'T list option option) ->
        fun () ->
          t_of_js Obj.magic
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "WeakSet")
               (let x150 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x149 with
                 | Some x151 ->
                     ignore
                       (Ojs.call x150 "push"
                          [|(Ojs.option_to_js
                               (fun (x152 : 'T list) ->
                                  Ojs.list_to_js Obj.magic x152) x151)|])
                 | None -> ());
                x150))
    let (prototype : unit -> WeakKey.t t) =
      fun () ->
        t_of_js WeakKey.t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "WeakSet")
             "prototype")
    let cast_from = Obj.magic
  end
module WeakRef =
  struct
    type 'T t = [ `WeakRef of 'T ] intf
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun _T -> Obj.magic
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun _T -> Obj.magic
    type 'T tags = [ `WeakRef of 'T ]
    type ('tags, 'T) this = 'tags intf constraint 'tags = [> `WeakRef of 'T ]
    let rec this_of_js :
      'tags 'T .
        (Ojs.t -> 'tags) -> (Ojs.t -> 'T) -> Ojs.t -> ('tags, 'T) this
      =
      fun (type __tags) ->
        fun (type __T) ->
          fun (__tags_of_js : Ojs.t -> __tags) ->
            fun (__T_of_js : Ojs.t -> __T) ->
              fun (x158 : Ojs.t) -> intf_of_js __tags_of_js x158
    and this_to_js :
      'tags 'T .
        ('tags -> Ojs.t) -> ('T -> Ojs.t) -> ('tags, 'T) this -> Ojs.t
      =
      fun (type __tags) ->
        fun (type __T) ->
          fun (__tags_to_js : __tags -> Ojs.t) ->
            fun (__T_to_js : __T -> Ojs.t) ->
              fun (x156 : __tags intf) -> intf_to_js __tags_to_js x156
    let (deref : ('tags, 'T) this -> 'T option) =
      fun (x160 : ('tags, 'T) this) ->
        Ojs.option_of_js Obj.magic
          (Ojs.call (this_to_js Obj.magic Obj.magic x160) "deref" [||])
    let (prototype : unit -> any t) =
      fun () ->
        t_of_js any_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "WeakRef")
             "prototype")
    let (create : 'T -> 'T t) =
      fun (x165 : 'T) ->
        t_of_js Obj.magic
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "WeakRef")
             [|(Obj.magic x165)|])
    let cast_from = Obj.magic
  end
module WeakMap =
  struct
    type ('K, 'V) t = [ `WeakMap of ('K * 'V) ] intf
    let rec t_of_js :
      'K 'V . (Ojs.t -> 'K) -> (Ojs.t -> 'V) -> Ojs.t -> ('K, 'V) t =
      fun _K -> fun _V -> Obj.magic
    and t_to_js :
      'K 'V . ('K -> Ojs.t) -> ('V -> Ojs.t) -> ('K, 'V) t -> Ojs.t =
      fun _K -> fun _V -> Obj.magic
    type ('K, 'V) tags = [ `WeakMap of ('K * 'V) ]
    type ('tags, 'K, 'V) this =
      'tags intf constraint 'tags = [> `WeakMap of ('K * 'V) ]
    let rec this_of_js :
      'tags 'K 'V .
        (Ojs.t -> 'tags) ->
          (Ojs.t -> 'K) -> (Ojs.t -> 'V) -> Ojs.t -> ('tags, 'K, 'V) this
      =
      fun (type __tags) ->
        fun (type __K) ->
          fun (type __V) ->
            fun (__tags_of_js : Ojs.t -> __tags) ->
              fun (__K_of_js : Ojs.t -> __K) ->
                fun (__V_of_js : Ojs.t -> __V) ->
                  fun (x169 : Ojs.t) -> intf_of_js __tags_of_js x169
    and this_to_js :
      'tags 'K 'V .
        ('tags -> Ojs.t) ->
          ('K -> Ojs.t) -> ('V -> Ojs.t) -> ('tags, 'K, 'V) this -> Ojs.t
      =
      fun (type __tags) ->
        fun (type __K) ->
          fun (type __V) ->
            fun (__tags_to_js : __tags -> Ojs.t) ->
              fun (__K_to_js : __K -> Ojs.t) ->
                fun (__V_to_js : __V -> Ojs.t) ->
                  fun (x167 : __tags intf) -> intf_to_js __tags_to_js x167
    let (delete : ('tags, 'K, 'V) this -> key:'K -> bool) =
      fun (x172 : ('tags, 'K, 'V) this) ->
        fun ~key:(x171 : 'K) ->
          Ojs.bool_of_js
            (Ojs.call (this_to_js Obj.magic Obj.magic Obj.magic x172)
               "delete" [|(Obj.magic x171)|])
    let (get_ : ('tags, 'K, 'V) this -> key:'K -> 'V option) =
      fun (x177 : ('tags, 'K, 'V) this) ->
        fun ~key:(x176 : 'K) ->
          Ojs.option_of_js Obj.magic
            (Ojs.call (this_to_js Obj.magic Obj.magic Obj.magic x177) "get"
               [|(Obj.magic x176)|])
    let (has : ('tags, 'K, 'V) this -> key:'K -> bool) =
      fun (x183 : ('tags, 'K, 'V) this) ->
        fun ~key:(x182 : 'K) ->
          Ojs.bool_of_js
            (Ojs.call (this_to_js Obj.magic Obj.magic Obj.magic x183) "has"
               [|(Obj.magic x182)|])
    let (set_ :
      ('tags, 'K, 'V) this -> key:'K -> value:'V -> ('tags, 'K, 'V) this) =
      fun (x189 : ('tags, 'K, 'V) this) ->
        fun ~key:(x187 : 'K) ->
          fun ~value:(x188 : 'V) ->
            this_of_js Obj.magic Obj.magic Obj.magic
              (Ojs.call (this_to_js Obj.magic Obj.magic Obj.magic x189) "set"
                 [|(Obj.magic x187);(Obj.magic x188)|])
    let (create : ('K * 'V) Iterable.t -> ('K, 'V) t) =
      fun (x196 : ('K * 'V) Iterable.t) ->
        t_of_js Obj.magic Obj.magic
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "WeakMap")
             [|(Iterable.t_to_js
                  (fun (x197 : ('K * 'V)) ->
                     let (x198, x199) = x197 in
                     let x200 = Ojs.array_make 2 in
                     Ojs.array_set x200 0 (Obj.magic x198);
                     Ojs.array_set x200 1 (Obj.magic x199);
                     x200) x196)|])
    let (create' : ?entries:('K * 'V) list option -> unit -> ('K, 'V) t) =
      fun ?entries:(x203 : ('K * 'V) list option option) ->
        fun () ->
          t_of_js Obj.magic Obj.magic
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "WeakMap")
               (let x204 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x203 with
                 | Some x205 ->
                     ignore
                       (Ojs.call x204 "push"
                          [|(Ojs.option_to_js
                               (fun (x206 : ('K * 'V) list) ->
                                  Ojs.list_to_js
                                    (fun (x207 : ('K * 'V)) ->
                                       let (x208, x209) = x207 in
                                       let x210 = Ojs.array_make 2 in
                                       Ojs.array_set x210 0 (Obj.magic x208);
                                       Ojs.array_set x210 1 (Obj.magic x209);
                                       x210) x206) x205)|])
                 | None -> ());
                x204))
    let (prototype : unit -> (WeakKey.t, any) t) =
      fun () ->
        t_of_js WeakKey.t_of_js any_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "WeakMap")
             "prototype")
    let cast_from = Obj.magic
  end
module WeakKeyTypes =
  struct
    type t = [ `WeakKeyTypes ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type tags = [ `WeakKeyTypes ]
    type 'tags this = 'tags intf constraint 'tags = [> `WeakKeyTypes ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x217 : Ojs.t) -> intf_of_js __tags_of_js x217
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x215 : __tags intf) -> intf_to_js __tags_to_js x215
    let (get_symbol : 'tags this -> symbol) =
      fun (x219 : 'tags this) ->
        symbol_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x219) "symbol")
    let (set_symbol : 'tags this -> symbol -> unit) =
      fun (x221 : 'tags this) ->
        fun (x222 : symbol) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x221) "symbol"
            (symbol_to_js x222)
    let (get_object : 'tags this -> untyped_object) =
      fun (x224 : 'tags this) ->
        untyped_object_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x224) "object")
    let (set_object : 'tags this -> untyped_object -> unit) =
      fun (x226 : 'tags this) ->
        fun (x227 : untyped_object) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x226) "object"
            (untyped_object_to_js x227)
    let (create : symbol:symbol -> object_:untyped_object -> unit -> t) =
      fun ~symbol:(x229 : symbol) ->
        fun ~object_:(x230 : untyped_object) ->
          fun () ->
            let x231 = Ojs.empty_obj () in
            Ojs.set_prop_ascii x231 "symbol" (symbol_to_js x229);
            Ojs.set_prop_ascii x231 "object" (untyped_object_to_js x230);
            t_of_js x231
    let cast_from = Obj.magic
  end
module Uppercase =
  struct
    type 'S t = Ojs.t
    let rec t_of_js : 'S . (Ojs.t -> 'S) -> Ojs.t -> 'S t =
      fun (type __S) ->
        fun (__S_of_js : Ojs.t -> __S) -> fun (x233 : Ojs.t) -> x233
    and t_to_js : 'S . ('S -> Ojs.t) -> 'S t -> Ojs.t =
      fun (type __S) ->
        fun (__S_to_js : __S -> Ojs.t) -> fun (x232 : Ojs.t) -> x232
  end
module Uncapitalize =
  struct
    type 'S t = Ojs.t
    let rec t_of_js : 'S . (Ojs.t -> 'S) -> Ojs.t -> 'S t =
      fun (type __S) ->
        fun (__S_of_js : Ojs.t -> __S) -> fun (x235 : Ojs.t) -> x235
    and t_to_js : 'S . ('S -> Ojs.t) -> 'S t -> Ojs.t =
      fun (type __S) ->
        fun (__S_to_js : __S -> Ojs.t) -> fun (x234 : Ojs.t) -> x234
  end
module SharedArrayBuffer =
  struct
    type t = [ `SharedArrayBuffer ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type tags = [ `SharedArrayBuffer ]
    type 'tags this = 'tags intf constraint 'tags = [> `SharedArrayBuffer ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x238 : Ojs.t) -> intf_of_js __tags_of_js x238
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x236 : __tags intf) -> intf_to_js __tags_to_js x236
    let (get_byteLength : 'tags this -> float) =
      fun (x240 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x240) "byteLength")
    let (slice : 'tags this -> begin_:float -> ?end_:float -> unit -> t) =
      fun (x246 : 'tags this) ->
        fun ~begin_:(x242 : float) ->
          fun ?end_:(x243 : float option) ->
            fun () ->
              t_of_js
                (let x248 = this_to_js Obj.magic x246 in
                 Ojs.call (Ojs.get_prop_ascii x248 "slice") "apply"
                   [|x248;((let x244 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x244 "push"
                                 [|(Ojs.float_to_js x242)|]);
                            (match x243 with
                             | Some x245 ->
                                 ignore
                                   (Ojs.call x244 "push"
                                      [|(Ojs.float_to_js x245)|])
                             | None -> ());
                            x244))|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "SharedArrayBuffer") "prototype")
    let (create : float -> t) =
      fun (x249 : float) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "SharedArrayBuffer")
             [|(Ojs.float_to_js x249)|])
    let cast_from = Obj.magic
  end
module ArrayBuffer =
  struct
    type t = [ `ArrayBuffer ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type tags = [ `ArrayBuffer ]
    type 'tags this = 'tags intf constraint 'tags = [> `ArrayBuffer ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x252 : Ojs.t) -> intf_of_js __tags_of_js x252
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x250 : __tags intf) -> intf_to_js __tags_to_js x250
    let (get_byteLength : 'tags this -> float) =
      fun (x254 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x254) "byteLength")
    let (slice : 'tags this -> begin_:float -> ?end_:float -> unit -> t) =
      fun (x260 : 'tags this) ->
        fun ~begin_:(x256 : float) ->
          fun ?end_:(x257 : float option) ->
            fun () ->
              t_of_js
                (let x262 = this_to_js Obj.magic x260 in
                 Ojs.call (Ojs.get_prop_ascii x262 "slice") "apply"
                   [|x262;((let x258 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x258 "push"
                                 [|(Ojs.float_to_js x256)|]);
                            (match x257 with
                             | Some x259 ->
                                 ignore
                                   (Ojs.call x258 "push"
                                      [|(Ojs.float_to_js x259)|])
                             | None -> ());
                            x258))|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "ArrayBuffer")
             "prototype")
    let (create : float -> t) =
      fun (x263 : float) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "ArrayBuffer")
             [|(Ojs.float_to_js x263)|])
    let (isView : any -> bool) =
      fun (x264 : any) ->
        Ojs.bool_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "ArrayBuffer") "isView"
             [|(any_to_js x264)|])
    let cast_from = Obj.magic
  end
module ArrayBufferLike =
  struct
    type t = (ArrayBuffer.t, SharedArrayBuffer.t) union2
    let rec t_of_js : Ojs.t -> t =
      fun (x268 : Ojs.t) ->
        union2_of_js ArrayBuffer.t_of_js SharedArrayBuffer.t_of_js x268
    and t_to_js : t -> Ojs.t =
      fun (x265 : (ArrayBuffer.t, SharedArrayBuffer.t) union2) ->
        union2_to_js ArrayBuffer.t_to_js SharedArrayBuffer.t_to_js x265
  end
module IterableIterator =
  struct
    type 'T t =
      [ `IterableIterator of 'T  | `Iterator of ('T * any * undefined) ] intf
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun _T -> Obj.magic
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun _T -> Obj.magic
    type 'T tags =
      [ `IterableIterator of 'T  | `Iterator of ('T * any * undefined) ]
    type ('tags, 'T) this =
      'tags intf constraint 'tags = [> `IterableIterator of 'T ]
    let rec this_of_js :
      'tags 'T .
        (Ojs.t -> 'tags) -> (Ojs.t -> 'T) -> Ojs.t -> ('tags, 'T) this
      =
      fun (type __tags) ->
        fun (type __T) ->
          fun (__tags_of_js : Ojs.t -> __tags) ->
            fun (__T_of_js : Ojs.t -> __T) ->
              fun (x273 : Ojs.t) -> intf_of_js __tags_of_js x273
    and this_to_js :
      'tags 'T .
        ('tags -> Ojs.t) -> ('T -> Ojs.t) -> ('tags, 'T) this -> Ojs.t
      =
      fun (type __tags) ->
        fun (type __T) ->
          fun (__tags_to_js : __tags -> Ojs.t) ->
            fun (__T_to_js : __T -> Ojs.t) ->
              fun (x271 : __tags intf) -> intf_to_js __tags_to_js x271
    let cast_from = Obj.magic
  end
module ArrayLike =
  struct
    type 'T t = [ `ArrayLike of 'T ] intf
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun _T -> Obj.magic
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun _T -> Obj.magic
    type 'T tags = [ `ArrayLike of 'T ]
    type ('tags, 'T) this =
      'tags intf constraint 'tags = [> `ArrayLike of 'T ]
    let rec this_of_js :
      'tags 'T .
        (Ojs.t -> 'tags) -> (Ojs.t -> 'T) -> Ojs.t -> ('tags, 'T) this
      =
      fun (type __tags) ->
        fun (type __T) ->
          fun (__tags_of_js : Ojs.t -> __tags) ->
            fun (__T_of_js : Ojs.t -> __T) ->
              fun (x277 : Ojs.t) -> intf_of_js __tags_of_js x277
    and this_to_js :
      'tags 'T .
        ('tags -> Ojs.t) -> ('T -> Ojs.t) -> ('tags, 'T) this -> Ojs.t
      =
      fun (type __tags) ->
        fun (type __T) ->
          fun (__tags_to_js : __tags -> Ojs.t) ->
            fun (__T_to_js : __T -> Ojs.t) ->
              fun (x275 : __tags intf) -> intf_to_js __tags_to_js x275
    let (get_length : ('tags, 'T) this -> float) =
      fun (x279 : ('tags, 'T) this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic Obj.magic x279) "length")
    let (get : ('tags, 'T) this -> float -> 'T) =
      fun (x282 : ('tags, 'T) this) ->
        fun (x285 : float) ->
          Obj.magic
            (Ojs.get_prop (this_to_js Obj.magic Obj.magic x282)
               (Ojs.float_to_js x285))
    let (create : length:float -> unit -> 'T t) =
      fun ~length:(x286 : float) ->
        fun () ->
          let x287 = Ojs.empty_obj () in
          Ojs.set_prop_ascii x287 "length" (Ojs.float_to_js x286);
          t_of_js Obj.magic x287
    let cast_from = Obj.magic
    let (of_ml : 'T list -> 'T t) =
      fun (x289 : 'T list) ->
        t_of_js Obj.magic (Ojs.list_to_js Obj.magic x289)
    let (to_ml : 'T t -> 'T list) =
      fun (x292 : 'T t) -> Ojs.list_of_js Obj.magic (t_to_js Obj.magic x292)
  end
module Uint8ClampedArray =
  struct
    type t = [ `Uint8ClampedArray ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type tags = [ `Uint8ClampedArray ]
    type 'tags this = 'tags intf constraint 'tags = [> `Uint8ClampedArray ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x297 : Ojs.t) -> intf_of_js __tags_of_js x297
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x295 : __tags intf) -> intf_to_js __tags_to_js x295
    let (at : 'tags this -> index:float -> float option) =
      fun (x300 : 'tags this) ->
        fun ~index:(x299 : float) ->
          Ojs.option_of_js Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x300) "at"
               [|(Ojs.float_to_js x299)|])
    let (findLast :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> bool) ->
          ?thisArg:any -> unit -> 'S option)
      =
      fun (x310 : 'tags this) ->
        fun ~predicate:(x303 : value:float -> index:float -> array:t -> bool)
          ->
          fun ?thisArg:(x304 : any option) ->
            fun () ->
              Ojs.option_of_js Obj.magic
                (let x312 = this_to_js Obj.magic x310 in
                 Ojs.call (Ojs.get_prop_ascii x312 "findLast") "apply"
                   [|x312;((let x305 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x305 "push"
                                 [|(Ojs.fun_to_js 3
                                      (fun (x307 : Ojs.t) ->
                                         fun (x308 : Ojs.t) ->
                                           fun (x309 : Ojs.t) ->
                                             Ojs.bool_to_js
                                               (x303
                                                  ~value:(Ojs.float_of_js
                                                            x307)
                                                  ~index:(Ojs.float_of_js
                                                            x308)
                                                  ~array:(t_of_js x309))))|]);
                            (match x304 with
                             | Some x306 ->
                                 ignore
                                   (Ojs.call x305 "push" [|(any_to_js x306)|])
                             | None -> ());
                            x305))|])
    let (findLast' :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> float option)
      =
      fun (x321 : 'tags this) ->
        fun
          ~predicate:(x314 :
                       value:float -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x315 : any option) ->
            fun () ->
              Ojs.option_of_js Ojs.float_of_js
                (let x323 = this_to_js Obj.magic x321 in
                 Ojs.call (Ojs.get_prop_ascii x323 "findLast") "apply"
                   [|x323;((let x316 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x316 "push"
                                 [|(Ojs.fun_to_js 3
                                      (fun (x318 : Ojs.t) ->
                                         fun (x319 : Ojs.t) ->
                                           fun (x320 : Ojs.t) ->
                                             unknown_to_js
                                               (x314
                                                  ~value:(Ojs.float_of_js
                                                            x318)
                                                  ~index:(Ojs.float_of_js
                                                            x319)
                                                  ~array:(t_of_js x320))))|]);
                            (match x315 with
                             | Some x317 ->
                                 ignore
                                   (Ojs.call x316 "push" [|(any_to_js x317)|])
                             | None -> ());
                            x316))|])
    let (findLastIndex :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> float)
      =
      fun (x332 : 'tags this) ->
        fun
          ~predicate:(x325 :
                       value:float -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x326 : any option) ->
            fun () ->
              Ojs.float_of_js
                (let x334 = this_to_js Obj.magic x332 in
                 Ojs.call (Ojs.get_prop_ascii x334 "findLastIndex") "apply"
                   [|x334;((let x327 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x327 "push"
                                 [|(Ojs.fun_to_js 3
                                      (fun (x329 : Ojs.t) ->
                                         fun (x330 : Ojs.t) ->
                                           fun (x331 : Ojs.t) ->
                                             unknown_to_js
                                               (x325
                                                  ~value:(Ojs.float_of_js
                                                            x329)
                                                  ~index:(Ojs.float_of_js
                                                            x330)
                                                  ~array:(t_of_js x331))))|]);
                            (match x326 with
                             | Some x328 ->
                                 ignore
                                   (Ojs.call x327 "push" [|(any_to_js x328)|])
                             | None -> ());
                            x327))|])
    let (toReversed : 'tags this -> t) =
      fun (x335 : 'tags this) ->
        t_of_js (Ojs.call (this_to_js Obj.magic x335) "toReversed" [||])
    let (toSorted :
      'tags this -> ?compareFn:(a:float -> b:float -> float) -> unit -> t) =
      fun (x342 : 'tags this) ->
        fun ?compareFn:(x337 : (a:float -> b:float -> float) option) ->
          fun () ->
            t_of_js
              (let x344 = this_to_js Obj.magic x342 in
               Ojs.call (Ojs.get_prop_ascii x344 "toSorted") "apply"
                 [|x344;((let x338 =
                            Ojs.new_obj
                              (Ojs.get_prop_ascii Ojs.global "Array") 
                              [||] in
                          (match x337 with
                           | Some x339 ->
                               ignore
                                 (Ojs.call x338 "push"
                                    [|(Ojs.fun_to_js 2
                                         (fun (x340 : Ojs.t) ->
                                            fun (x341 : Ojs.t) ->
                                              Ojs.float_to_js
                                                (x339
                                                   ~a:(Ojs.float_of_js x340)
                                                   ~b:(Ojs.float_of_js x341))))|])
                           | None -> ());
                          x338))|])
    let (with_ : 'tags this -> index:float -> value:float -> t) =
      fun (x347 : 'tags this) ->
        fun ~index:(x345 : float) ->
          fun ~value:(x346 : float) ->
            t_of_js
              (Ojs.call (this_to_js Obj.magic x347) "with"
                 [|(Ojs.float_to_js x345);(Ojs.float_to_js x346)|])
    let (includes :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> bool)
      =
      fun (x353 : 'tags this) ->
        fun ~searchElement:(x349 : float) ->
          fun ?fromIndex:(x350 : float option) ->
            fun () ->
              Ojs.bool_of_js
                (let x355 = this_to_js Obj.magic x353 in
                 Ojs.call (Ojs.get_prop_ascii x355 "includes") "apply"
                   [|x355;((let x351 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x351 "push"
                                 [|(Ojs.float_to_js x349)|]);
                            (match x350 with
                             | Some x352 ->
                                 ignore
                                   (Ojs.call x351 "push"
                                      [|(Ojs.float_to_js x352)|])
                             | None -> ());
                            x351))|])
    let (entries : 'tags this -> (float * float) IterableIterator.t) =
      fun (x356 : 'tags this) ->
        IterableIterator.t_of_js
          (fun (x358 : Ojs.t) ->
             let x359 = x358 in
             ((Ojs.float_of_js (Ojs.array_get x359 0)),
               (Ojs.float_of_js (Ojs.array_get x359 1))))
          (Ojs.call (this_to_js Obj.magic x356) "entries" [||])
    let (keys : 'tags this -> float IterableIterator.t) =
      fun (x360 : 'tags this) ->
        IterableIterator.t_of_js Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x360) "keys" [||])
    let (values : 'tags this -> float IterableIterator.t) =
      fun (x363 : 'tags this) ->
        IterableIterator.t_of_js Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x363) "values" [||])
    let (get_BYTES_PER_ELEMENT : 'tags this -> float) =
      fun (x366 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x366) "BYTES_PER_ELEMENT")
    let (get_buffer : 'tags this -> ArrayBufferLike.t) =
      fun (x368 : 'tags this) ->
        ArrayBufferLike.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x368) "buffer")
    let (get_byteLength : 'tags this -> float) =
      fun (x370 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x370) "byteLength")
    let (get_byteOffset : 'tags this -> float) =
      fun (x372 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x372) "byteOffset")
    let (copyWithin :
      'tags this ->
        target:float -> start:float -> ?end_:float -> unit -> 'tags this)
      =
      fun (x379 : 'tags this) ->
        fun ~target:(x374 : float) ->
          fun ~start:(x375 : float) ->
            fun ?end_:(x376 : float option) ->
              fun () ->
                this_of_js Obj.magic
                  (let x381 = this_to_js Obj.magic x379 in
                   Ojs.call (Ojs.get_prop_ascii x381 "copyWithin") "apply"
                     [|x381;((let x377 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x377 "push"
                                   [|(Ojs.float_to_js x374)|]);
                              ignore
                                (Ojs.call x377 "push"
                                   [|(Ojs.float_to_js x375)|]);
                              (match x376 with
                               | Some x378 ->
                                   ignore
                                     (Ojs.call x377 "push"
                                        [|(Ojs.float_to_js x378)|])
                               | None -> ());
                              x377))|])
    let (every :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x390 : 'tags this) ->
        fun
          ~predicate:(x383 :
                       value:float -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x384 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x392 = this_to_js Obj.magic x390 in
                 Ojs.call (Ojs.get_prop_ascii x392 "every") "apply"
                   [|x392;((let x385 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x385 "push"
                                 [|(Ojs.fun_to_js 3
                                      (fun (x387 : Ojs.t) ->
                                         fun (x388 : Ojs.t) ->
                                           fun (x389 : Ojs.t) ->
                                             unknown_to_js
                                               (x383
                                                  ~value:(Ojs.float_of_js
                                                            x387)
                                                  ~index:(Ojs.float_of_js
                                                            x388)
                                                  ~array:(t_of_js x389))))|]);
                            (match x384 with
                             | Some x386 ->
                                 ignore
                                   (Ojs.call x385 "push" [|(any_to_js x386)|])
                             | None -> ());
                            x385))|])
    let (fill :
      'tags this ->
        value:float -> ?start:float -> ?end_:float -> unit -> 'tags this)
      =
      fun (x399 : 'tags this) ->
        fun ~value:(x393 : float) ->
          fun ?start:(x394 : float option) ->
            fun ?end_:(x395 : float option) ->
              fun () ->
                this_of_js Obj.magic
                  (let x401 = this_to_js Obj.magic x399 in
                   Ojs.call (Ojs.get_prop_ascii x401 "fill") "apply"
                     [|x401;((let x396 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x396 "push"
                                   [|(Ojs.float_to_js x393)|]);
                              (match x394 with
                               | Some x398 ->
                                   ignore
                                     (Ojs.call x396 "push"
                                        [|(Ojs.float_to_js x398)|])
                               | None -> ());
                              (match x395 with
                               | Some x397 ->
                                   ignore
                                     (Ojs.call x396 "push"
                                        [|(Ojs.float_to_js x397)|])
                               | None -> ());
                              x396))|])
    let (filter :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> any) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x410 : 'tags this) ->
        fun ~predicate:(x403 : value:float -> index:float -> array:t -> any)
          ->
          fun ?thisArg:(x404 : any option) ->
            fun () ->
              t_of_js
                (let x412 = this_to_js Obj.magic x410 in
                 Ojs.call (Ojs.get_prop_ascii x412 "filter") "apply"
                   [|x412;((let x405 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x405 "push"
                                 [|(Ojs.fun_to_js 3
                                      (fun (x407 : Ojs.t) ->
                                         fun (x408 : Ojs.t) ->
                                           fun (x409 : Ojs.t) ->
                                             any_to_js
                                               (x403
                                                  ~value:(Ojs.float_of_js
                                                            x407)
                                                  ~index:(Ojs.float_of_js
                                                            x408)
                                                  ~array:(t_of_js x409))))|]);
                            (match x404 with
                             | Some x406 ->
                                 ignore
                                   (Ojs.call x405 "push" [|(any_to_js x406)|])
                             | None -> ());
                            x405))|])
    let (find :
      'tags this ->
        predicate:(value:float -> index:float -> obj:t -> bool) ->
          ?thisArg:any -> unit -> float option)
      =
      fun (x420 : 'tags this) ->
        fun ~predicate:(x413 : value:float -> index:float -> obj:t -> bool)
          ->
          fun ?thisArg:(x414 : any option) ->
            fun () ->
              Ojs.option_of_js Ojs.float_of_js
                (let x422 = this_to_js Obj.magic x420 in
                 Ojs.call (Ojs.get_prop_ascii x422 "find") "apply"
                   [|x422;((let x415 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x415 "push"
                                 [|(Ojs.fun_to_js 3
                                      (fun (x417 : Ojs.t) ->
                                         fun (x418 : Ojs.t) ->
                                           fun (x419 : Ojs.t) ->
                                             Ojs.bool_to_js
                                               (x413
                                                  ~value:(Ojs.float_of_js
                                                            x417)
                                                  ~index:(Ojs.float_of_js
                                                            x418)
                                                  ~obj:(t_of_js x419))))|]);
                            (match x414 with
                             | Some x416 ->
                                 ignore
                                   (Ojs.call x415 "push" [|(any_to_js x416)|])
                             | None -> ());
                            x415))|])
    let (findIndex :
      'tags this ->
        predicate:(value:float -> index:float -> obj:t -> bool) ->
          ?thisArg:any -> unit -> float)
      =
      fun (x431 : 'tags this) ->
        fun ~predicate:(x424 : value:float -> index:float -> obj:t -> bool)
          ->
          fun ?thisArg:(x425 : any option) ->
            fun () ->
              Ojs.float_of_js
                (let x433 = this_to_js Obj.magic x431 in
                 Ojs.call (Ojs.get_prop_ascii x433 "findIndex") "apply"
                   [|x433;((let x426 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x426 "push"
                                 [|(Ojs.fun_to_js 3
                                      (fun (x428 : Ojs.t) ->
                                         fun (x429 : Ojs.t) ->
                                           fun (x430 : Ojs.t) ->
                                             Ojs.bool_to_js
                                               (x424
                                                  ~value:(Ojs.float_of_js
                                                            x428)
                                                  ~index:(Ojs.float_of_js
                                                            x429)
                                                  ~obj:(t_of_js x430))))|]);
                            (match x425 with
                             | Some x427 ->
                                 ignore
                                   (Ojs.call x426 "push" [|(any_to_js x427)|])
                             | None -> ());
                            x426))|])
    let (forEach :
      'tags this ->
        callbackfn:(value:float -> index:float -> array:t -> unit) ->
          ?thisArg:any -> unit -> unit)
      =
      fun (x441 : 'tags this) ->
        fun
          ~callbackfn:(x434 : value:float -> index:float -> array:t -> unit)
          ->
          fun ?thisArg:(x435 : any option) ->
            fun () ->
              ignore
                (let x443 = this_to_js Obj.magic x441 in
                 Ojs.call (Ojs.get_prop_ascii x443 "forEach") "apply"
                   [|x443;((let x436 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x436 "push"
                                 [|(Ojs.fun_to_js 3
                                      (fun (x438 : Ojs.t) ->
                                         fun (x439 : Ojs.t) ->
                                           fun (x440 : Ojs.t) ->
                                             x434
                                               ~value:(Ojs.float_of_js x438)
                                               ~index:(Ojs.float_of_js x439)
                                               ~array:(t_of_js x440)))|]);
                            (match x435 with
                             | Some x437 ->
                                 ignore
                                   (Ojs.call x436 "push" [|(any_to_js x437)|])
                             | None -> ());
                            x436))|])
    let (indexOf :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> float)
      =
      fun (x448 : 'tags this) ->
        fun ~searchElement:(x444 : float) ->
          fun ?fromIndex:(x445 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x450 = this_to_js Obj.magic x448 in
                 Ojs.call (Ojs.get_prop_ascii x450 "indexOf") "apply"
                   [|x450;((let x446 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x446 "push"
                                 [|(Ojs.float_to_js x444)|]);
                            (match x445 with
                             | Some x447 ->
                                 ignore
                                   (Ojs.call x446 "push"
                                      [|(Ojs.float_to_js x447)|])
                             | None -> ());
                            x446))|])
    let (join : 'tags this -> ?separator:string -> unit -> string) =
      fun (x454 : 'tags this) ->
        fun ?separator:(x451 : string option) ->
          fun () ->
            Ojs.string_of_js
              (let x456 = this_to_js Obj.magic x454 in
               Ojs.call (Ojs.get_prop_ascii x456 "join") "apply"
                 [|x456;((let x452 =
                            Ojs.new_obj
                              (Ojs.get_prop_ascii Ojs.global "Array") 
                              [||] in
                          (match x451 with
                           | Some x453 ->
                               ignore
                                 (Ojs.call x452 "push"
                                    [|(Ojs.string_to_js x453)|])
                           | None -> ());
                          x452))|])
    let (lastIndexOf :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> float)
      =
      fun (x461 : 'tags this) ->
        fun ~searchElement:(x457 : float) ->
          fun ?fromIndex:(x458 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x463 = this_to_js Obj.magic x461 in
                 Ojs.call (Ojs.get_prop_ascii x463 "lastIndexOf") "apply"
                   [|x463;((let x459 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x459 "push"
                                 [|(Ojs.float_to_js x457)|]);
                            (match x458 with
                             | Some x460 ->
                                 ignore
                                   (Ojs.call x459 "push"
                                      [|(Ojs.float_to_js x460)|])
                             | None -> ());
                            x459))|])
    let (get_length : 'tags this -> float) =
      fun (x464 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x464) "length")
    let (map :
      'tags this ->
        callbackfn:(value:float -> index:float -> array:t -> float) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x473 : 'tags this) ->
        fun
          ~callbackfn:(x466 : value:float -> index:float -> array:t -> float)
          ->
          fun ?thisArg:(x467 : any option) ->
            fun () ->
              t_of_js
                (let x475 = this_to_js Obj.magic x473 in
                 Ojs.call (Ojs.get_prop_ascii x475 "map") "apply"
                   [|x475;((let x468 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x468 "push"
                                 [|(Ojs.fun_to_js 3
                                      (fun (x470 : Ojs.t) ->
                                         fun (x471 : Ojs.t) ->
                                           fun (x472 : Ojs.t) ->
                                             Ojs.float_to_js
                                               (x466
                                                  ~value:(Ojs.float_of_js
                                                            x470)
                                                  ~index:(Ojs.float_of_js
                                                            x471)
                                                  ~array:(t_of_js x472))))|]);
                            (match x467 with
                             | Some x469 ->
                                 ignore
                                   (Ojs.call x468 "push" [|(any_to_js x469)|])
                             | None -> ());
                            x468))|])
    let (reduce :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> float)
      =
      fun (x481 : 'tags this) ->
        fun
          ~callbackfn:(x476 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x481) "reduce"
               [|(Ojs.fun_to_js 4
                    (fun (x477 : Ojs.t) ->
                       fun (x478 : Ojs.t) ->
                         fun (x479 : Ojs.t) ->
                           fun (x480 : Ojs.t) ->
                             Ojs.float_to_js
                               (x476 ~previousValue:(Ojs.float_of_js x477)
                                  ~currentValue:(Ojs.float_of_js x478)
                                  ~currentIndex:(Ojs.float_of_js x479)
                                  ~array:(t_of_js x480))))|])
    let (reduce' :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> initialValue:float -> float)
      =
      fun (x489 : 'tags this) ->
        fun
          ~callbackfn:(x483 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          fun ~initialValue:(x488 : float) ->
            Ojs.float_of_js
              (Ojs.call (this_to_js Obj.magic x489) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x484 : Ojs.t) ->
                         fun (x485 : Ojs.t) ->
                           fun (x486 : Ojs.t) ->
                             fun (x487 : Ojs.t) ->
                               Ojs.float_to_js
                                 (x483 ~previousValue:(Ojs.float_of_js x484)
                                    ~currentValue:(Ojs.float_of_js x485)
                                    ~currentIndex:(Ojs.float_of_js x486)
                                    ~array:(t_of_js x487))));(Ojs.float_to_js
                                                                x488)|])
    let (reduce'' :
      'tags this ->
        callbackfn:(previousValue:'U ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x497 : 'tags this) ->
        fun
          ~callbackfn:(x491 :
                        previousValue:'U ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x496 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic x497) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x492 : Ojs.t) ->
                         fun (x493 : Ojs.t) ->
                           fun (x494 : Ojs.t) ->
                             fun (x495 : Ojs.t) ->
                               Obj.magic
                                 (x491 ~previousValue:(Obj.magic x492)
                                    ~currentValue:(Ojs.float_of_js x493)
                                    ~currentIndex:(Ojs.float_of_js x494)
                                    ~array:(t_of_js x495))));(Obj.magic x496)|])
    let (reduceRight :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> float)
      =
      fun (x504 : 'tags this) ->
        fun
          ~callbackfn:(x499 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x504) "reduceRight"
               [|(Ojs.fun_to_js 4
                    (fun (x500 : Ojs.t) ->
                       fun (x501 : Ojs.t) ->
                         fun (x502 : Ojs.t) ->
                           fun (x503 : Ojs.t) ->
                             Ojs.float_to_js
                               (x499 ~previousValue:(Ojs.float_of_js x500)
                                  ~currentValue:(Ojs.float_of_js x501)
                                  ~currentIndex:(Ojs.float_of_js x502)
                                  ~array:(t_of_js x503))))|])
    let (reduceRight' :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> initialValue:float -> float)
      =
      fun (x512 : 'tags this) ->
        fun
          ~callbackfn:(x506 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          fun ~initialValue:(x511 : float) ->
            Ojs.float_of_js
              (Ojs.call (this_to_js Obj.magic x512) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x507 : Ojs.t) ->
                         fun (x508 : Ojs.t) ->
                           fun (x509 : Ojs.t) ->
                             fun (x510 : Ojs.t) ->
                               Ojs.float_to_js
                                 (x506 ~previousValue:(Ojs.float_of_js x507)
                                    ~currentValue:(Ojs.float_of_js x508)
                                    ~currentIndex:(Ojs.float_of_js x509)
                                    ~array:(t_of_js x510))));(Ojs.float_to_js
                                                                x511)|])
    let (reduceRight'' :
      'tags this ->
        callbackfn:(previousValue:'U ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x520 : 'tags this) ->
        fun
          ~callbackfn:(x514 :
                        previousValue:'U ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x519 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic x520) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x515 : Ojs.t) ->
                         fun (x516 : Ojs.t) ->
                           fun (x517 : Ojs.t) ->
                             fun (x518 : Ojs.t) ->
                               Obj.magic
                                 (x514 ~previousValue:(Obj.magic x515)
                                    ~currentValue:(Ojs.float_of_js x516)
                                    ~currentIndex:(Ojs.float_of_js x517)
                                    ~array:(t_of_js x518))));(Obj.magic x519)|])
    let (reverse : 'tags this -> t) =
      fun (x522 : 'tags this) ->
        t_of_js (Ojs.call (this_to_js Obj.magic x522) "reverse" [||])
    let (set_ :
      'tags this -> array:float ArrayLike.t -> ?offset:float -> unit -> unit)
      =
      fun (x529 : 'tags this) ->
        fun ~array:(x524 : float ArrayLike.t) ->
          fun ?offset:(x525 : float option) ->
            fun () ->
              ignore
                (let x531 = this_to_js Obj.magic x529 in
                 Ojs.call (Ojs.get_prop_ascii x531 "set") "apply"
                   [|x531;((let x526 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x526 "push"
                                 [|(ArrayLike.t_to_js Ojs.float_to_js x524)|]);
                            (match x525 with
                             | Some x527 ->
                                 ignore
                                   (Ojs.call x526 "push"
                                      [|(Ojs.float_to_js x527)|])
                             | None -> ());
                            x526))|])
    let (slice : 'tags this -> ?start:float -> ?end_:float -> unit -> t) =
      fun (x537 : 'tags this) ->
        fun ?start:(x532 : float option) ->
          fun ?end_:(x533 : float option) ->
            fun () ->
              t_of_js
                (let x539 = this_to_js Obj.magic x537 in
                 Ojs.call (Ojs.get_prop_ascii x539 "slice") "apply"
                   [|x539;((let x534 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x532 with
                             | Some x536 ->
                                 ignore
                                   (Ojs.call x534 "push"
                                      [|(Ojs.float_to_js x536)|])
                             | None -> ());
                            (match x533 with
                             | Some x535 ->
                                 ignore
                                   (Ojs.call x534 "push"
                                      [|(Ojs.float_to_js x535)|])
                             | None -> ());
                            x534))|])
    let (some :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x547 : 'tags this) ->
        fun
          ~predicate:(x540 :
                       value:float -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x541 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x549 = this_to_js Obj.magic x547 in
                 Ojs.call (Ojs.get_prop_ascii x549 "some") "apply"
                   [|x549;((let x542 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x542 "push"
                                 [|(Ojs.fun_to_js 3
                                      (fun (x544 : Ojs.t) ->
                                         fun (x545 : Ojs.t) ->
                                           fun (x546 : Ojs.t) ->
                                             unknown_to_js
                                               (x540
                                                  ~value:(Ojs.float_of_js
                                                            x544)
                                                  ~index:(Ojs.float_of_js
                                                            x545)
                                                  ~array:(t_of_js x546))))|]);
                            (match x541 with
                             | Some x543 ->
                                 ignore
                                   (Ojs.call x542 "push" [|(any_to_js x543)|])
                             | None -> ());
                            x542))|])
    let (sort :
      'tags this ->
        ?compareFn:(a:float -> b:float -> float) -> unit -> 'tags this)
      =
      fun (x555 : 'tags this) ->
        fun ?compareFn:(x550 : (a:float -> b:float -> float) option) ->
          fun () ->
            this_of_js Obj.magic
              (let x557 = this_to_js Obj.magic x555 in
               Ojs.call (Ojs.get_prop_ascii x557 "sort") "apply"
                 [|x557;((let x551 =
                            Ojs.new_obj
                              (Ojs.get_prop_ascii Ojs.global "Array") 
                              [||] in
                          (match x550 with
                           | Some x552 ->
                               ignore
                                 (Ojs.call x551 "push"
                                    [|(Ojs.fun_to_js 2
                                         (fun (x553 : Ojs.t) ->
                                            fun (x554 : Ojs.t) ->
                                              Ojs.float_to_js
                                                (x552
                                                   ~a:(Ojs.float_of_js x553)
                                                   ~b:(Ojs.float_of_js x554))))|])
                           | None -> ());
                          x551))|])
    let (subarray : 'tags this -> ?begin_:float -> ?end_:float -> unit -> t)
      =
      fun (x564 : 'tags this) ->
        fun ?begin_:(x559 : float option) ->
          fun ?end_:(x560 : float option) ->
            fun () ->
              t_of_js
                (let x566 = this_to_js Obj.magic x564 in
                 Ojs.call (Ojs.get_prop_ascii x566 "subarray") "apply"
                   [|x566;((let x561 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x559 with
                             | Some x563 ->
                                 ignore
                                   (Ojs.call x561 "push"
                                      [|(Ojs.float_to_js x563)|])
                             | None -> ());
                            (match x560 with
                             | Some x562 ->
                                 ignore
                                   (Ojs.call x561 "push"
                                      [|(Ojs.float_to_js x562)|])
                             | None -> ());
                            x561))|])
    let (toLocaleString : 'tags this -> string) =
      fun (x567 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x567) "toLocaleString" [||])
    let (toString : 'tags this -> string) =
      fun (x569 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x569) "toString" [||])
    let (valueOf : 'tags this -> t) =
      fun (x571 : 'tags this) ->
        t_of_js (Ojs.call (this_to_js Obj.magic x571) "valueOf" [||])
    let (get : 'tags this -> float -> float) =
      fun (x573 : 'tags this) ->
        fun (x575 : float) ->
          Ojs.float_of_js
            (Ojs.get_prop (this_to_js Obj.magic x573) (Ojs.float_to_js x575))
    let (set : 'tags this -> float -> float -> unit) =
      fun (x576 : 'tags this) ->
        fun (x578 : float) ->
          fun (x579 : float) ->
            Ojs.set_prop (this_to_js Obj.magic x576) (Ojs.float_to_js x578)
              (Ojs.float_to_js x579)
    let (create : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Uint8ClampedArray")
             [||])
    let (create' : float Iterable.t -> t) =
      fun (x580 : float Iterable.t) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Uint8ClampedArray")
             [|(Iterable.t_to_js Ojs.float_to_js x580)|])
    let (from :
      arrayLike:float Iterable.t ->
        ?mapfn:(v:float -> k:float -> float) -> ?thisArg:any -> unit -> t)
      =
      fun ~arrayLike:(x582 : float Iterable.t) ->
        fun ?mapfn:(x583 : (v:float -> k:float -> float) option) ->
          fun ?thisArg:(x584 : any option) ->
            fun () ->
              t_of_js
                (let x591 = Ojs.get_prop_ascii Ojs.global "Uint8ClampedArray" in
                 Ojs.call (Ojs.get_prop_ascii x591 "from") "apply"
                   [|x591;((let x585 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x585 "push"
                                 [|(Iterable.t_to_js Ojs.float_to_js x582)|]);
                            (match x583 with
                             | Some x587 ->
                                 ignore
                                   (Ojs.call x585 "push"
                                      [|(Ojs.fun_to_js 2
                                           (fun (x588 : Ojs.t) ->
                                              fun (x589 : Ojs.t) ->
                                                Ojs.float_to_js
                                                  (x587
                                                     ~v:(Ojs.float_of_js x588)
                                                     ~k:(Ojs.float_of_js x589))))|])
                             | None -> ());
                            (match x584 with
                             | Some x586 ->
                                 ignore
                                   (Ojs.call x585 "push" [|(any_to_js x586)|])
                             | None -> ());
                            x585))|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "Uint8ClampedArray") "prototype")
    let (create'' : float -> t) =
      fun (x592 : float) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Uint8ClampedArray")
             [|(Ojs.float_to_js x592)|])
    let (create''' :
      [ `U1 of float ArrayLike.t  | `U2 of ArrayBufferLike.t ] -> t) =
      fun (x593 : [ `U1 of float ArrayLike.t  | `U2 of ArrayBufferLike.t ])
        ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Uint8ClampedArray")
             [|((match x593 with
                 | `U1 x594 -> ArrayLike.t_to_js Ojs.float_to_js x594
                 | `U2 x596 -> ArrayBufferLike.t_to_js x596))|])
    let (create'''' :
      buffer:ArrayBufferLike.t ->
        ?byteOffset:float -> ?length:float -> unit -> t)
      =
      fun ~buffer:(x597 : ArrayBufferLike.t) ->
        fun ?byteOffset:(x598 : float option) ->
          fun ?length:(x599 : float option) ->
            fun () ->
              t_of_js
                (Ojs.new_obj_arr
                   (Ojs.get_prop_ascii Ojs.global "Uint8ClampedArray")
                   (let x600 =
                      Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                        [||] in
                    ignore
                      (Ojs.call x600 "push"
                         [|(ArrayBufferLike.t_to_js x597)|]);
                    (match x598 with
                     | Some x602 ->
                         ignore
                           (Ojs.call x600 "push" [|(Ojs.float_to_js x602)|])
                     | None -> ());
                    (match x599 with
                     | Some x601 ->
                         ignore
                           (Ojs.call x600 "push" [|(Ojs.float_to_js x601)|])
                     | None -> ());
                    x600))
    let (bytes_per_element : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "Uint8ClampedArray")
             "BYTES_PER_ELEMENT")
    let (of_ : float list -> t) =
      fun (x603 : float list) ->
        t_of_js
          (let x606 = Ojs.get_prop_ascii Ojs.global "Uint8ClampedArray" in
           Ojs.call (Ojs.get_prop_ascii x606 "of") "apply"
             [|x606;((let x604 =
                        Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                          [||] in
                      List.iter
                        (fun (x605 : float) ->
                           ignore
                             (Ojs.call x604 "push" [|(Ojs.float_to_js x605)|]))
                        x603;
                      x604))|])
    let (from' : float ArrayLike.t -> t) =
      fun (x607 : float ArrayLike.t) ->
        t_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Uint8ClampedArray")
             "from" [|(ArrayLike.t_to_js Ojs.float_to_js x607)|])
    let (from'' :
      arrayLike:'T ArrayLike.t ->
        mapfn:(v:'T -> k:float -> float) -> ?thisArg:any -> unit -> t)
      =
      fun ~arrayLike:(x609 : 'T ArrayLike.t) ->
        fun ~mapfn:(x610 : v:'T -> k:float -> float) ->
          fun ?thisArg:(x611 : any option) ->
            fun () ->
              t_of_js
                (let x617 = Ojs.get_prop_ascii Ojs.global "Uint8ClampedArray" in
                 Ojs.call (Ojs.get_prop_ascii x617 "from") "apply"
                   [|x617;((let x612 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x612 "push"
                                 [|(ArrayLike.t_to_js Obj.magic x609)|]);
                            ignore
                              (Ojs.call x612 "push"
                                 [|(Ojs.fun_to_js 2
                                      (fun (x614 : Ojs.t) ->
                                         fun (x615 : Ojs.t) ->
                                           Ojs.float_to_js
                                             (x610 ~v:(Obj.magic x614)
                                                ~k:(Ojs.float_of_js x615))))|]);
                            (match x611 with
                             | Some x613 ->
                                 ignore
                                   (Ojs.call x612 "push" [|(any_to_js x613)|])
                             | None -> ());
                            x612))|])
    let cast_from = Obj.magic
  end
module ErrorOptions =
  struct
    type t = [ `ErrorOptions ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type tags = [ `ErrorOptions ]
    type 'tags this = 'tags intf constraint 'tags = [> `ErrorOptions ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x620 : Ojs.t) -> intf_of_js __tags_of_js x620
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x618 : __tags intf) -> intf_to_js __tags_to_js x618
    let (get_cause : 'tags this -> unknown option) =
      fun (x622 : 'tags this) ->
        Ojs.option_of_js unknown_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x622) "cause")
    let (set_cause : 'tags this -> unknown -> unit) =
      fun (x625 : 'tags this) ->
        fun (x626 : unknown) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x625) "cause"
            (unknown_to_js x626)
    let (create : ?cause:unknown -> unit -> t) =
      fun ?cause:(x628 : unknown option) ->
        fun () ->
          let x629 = Ojs.empty_obj () in
          (match x628 with
           | Some x630 ->
               Ojs.set_prop_ascii x629 "cause" (unknown_to_js x630)
           | None -> ());
          t_of_js x629
    let cast_from = Obj.magic
  end
module Error =
  struct
    type t = [ `Error ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type tags = [ `Error ]
    type 'tags this = 'tags intf constraint 'tags = [> `Error ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x633 : Ojs.t) -> intf_of_js __tags_of_js x633
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x631 : __tags intf) -> intf_to_js __tags_to_js x631
    let (get_cause : 'tags this -> unknown option) =
      fun (x635 : 'tags this) ->
        Ojs.option_of_js unknown_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x635) "cause")
    let (set_cause : 'tags this -> unknown -> unit) =
      fun (x638 : 'tags this) ->
        fun (x639 : unknown) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x638) "cause"
            (unknown_to_js x639)
    let (get_name : 'tags this -> string) =
      fun (x641 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x641) "name")
    let (set_name : 'tags this -> string -> unit) =
      fun (x643 : 'tags this) ->
        fun (x644 : string) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x643) "name"
            (Ojs.string_to_js x644)
    let (get_message : 'tags this -> string) =
      fun (x646 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x646) "message")
    let (set_message : 'tags this -> string -> unit) =
      fun (x648 : 'tags this) ->
        fun (x649 : string) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x648) "message"
            (Ojs.string_to_js x649)
    let (get_stack : 'tags this -> string option) =
      fun (x651 : 'tags this) ->
        Ojs.option_of_js Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x651) "stack")
    let (set_stack : 'tags this -> string -> unit) =
      fun (x654 : 'tags this) ->
        fun (x655 : string) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x654) "stack"
            (Ojs.string_to_js x655)
    let (create : ?message:string -> ?options:ErrorOptions.t -> unit -> t) =
      fun ?message:(x657 : string option) ->
        fun ?options:(x658 : ErrorOptions.t option) ->
          fun () ->
            t_of_js
              (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "Error")
                 (let x659 =
                    Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                  (match x657 with
                   | Some x661 ->
                       ignore
                         (Ojs.call x659 "push" [|(Ojs.string_to_js x661)|])
                   | None -> ());
                  (match x658 with
                   | Some x660 ->
                       ignore
                         (Ojs.call x659 "push"
                            [|(ErrorOptions.t_to_js x660)|])
                   | None -> ());
                  x659))
    let (invoke : ?message:string -> ?options:ErrorOptions.t -> unit -> t) =
      fun ?message:(x662 : string option) ->
        fun ?options:(x663 : ErrorOptions.t option) ->
          fun () ->
            t_of_js
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "Error") "apply"
                 [|Ojs.null;((let x664 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              (match x662 with
                               | Some x666 ->
                                   ignore
                                     (Ojs.call x664 "push"
                                        [|(Ojs.string_to_js x666)|])
                               | None -> ());
                              (match x663 with
                               | Some x665 ->
                                   ignore
                                     (Ojs.call x664 "push"
                                        [|(ErrorOptions.t_to_js x665)|])
                               | None -> ());
                              x664))|])
    let (create' : ?message:string -> unit -> t) =
      fun ?message:(x667 : string option) ->
        fun () ->
          t_of_js
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "Error")
               (let x668 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x667 with
                 | Some x669 ->
                     ignore
                       (Ojs.call x668 "push" [|(Ojs.string_to_js x669)|])
                 | None -> ());
                x668))
    let (invoke' : ?message:string -> unit -> t) =
      fun ?message:(x670 : string option) ->
        fun () ->
          t_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "Error") "apply"
               [|Ojs.null;((let x671 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x670 with
                             | Some x672 ->
                                 ignore
                                   (Ojs.call x671 "push"
                                      [|(Ojs.string_to_js x672)|])
                             | None -> ());
                            x671))|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Error")
             "prototype")
    let (create'' :
      ?cause:unknown ->
        name:string -> message:string -> ?stack:string -> unit -> t)
      =
      fun ?cause:(x673 : unknown option) ->
        fun ~name:(x674 : string) ->
          fun ~message:(x675 : string) ->
            fun ?stack:(x676 : string option) ->
              fun () ->
                let x677 = Ojs.empty_obj () in
                (match x673 with
                 | Some x679 ->
                     Ojs.set_prop_ascii x677 "cause" (unknown_to_js x679)
                 | None -> ());
                Ojs.set_prop_ascii x677 "name" (Ojs.string_to_js x674);
                Ojs.set_prop_ascii x677 "message" (Ojs.string_to_js x675);
                (match x676 with
                 | Some x678 ->
                     Ojs.set_prop_ascii x677 "stack" (Ojs.string_to_js x678)
                 | None -> ());
                t_of_js x677
    let cast_from = Obj.magic
  end
module URIError =
  struct
    type t = [ `Error  | `URIError ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type tags = [ `Error  | `URIError ]
    type 'tags this = 'tags intf constraint 'tags = [> `URIError ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x682 : Ojs.t) -> intf_of_js __tags_of_js x682
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x680 : __tags intf) -> intf_to_js __tags_to_js x680
    let (create : ?message:string -> ?options:ErrorOptions.t -> unit -> t) =
      fun ?message:(x684 : string option) ->
        fun ?options:(x685 : ErrorOptions.t option) ->
          fun () ->
            t_of_js
              (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "URIError")
                 (let x686 =
                    Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                  (match x684 with
                   | Some x688 ->
                       ignore
                         (Ojs.call x686 "push" [|(Ojs.string_to_js x688)|])
                   | None -> ());
                  (match x685 with
                   | Some x687 ->
                       ignore
                         (Ojs.call x686 "push"
                            [|(ErrorOptions.t_to_js x687)|])
                   | None -> ());
                  x686))
    let (invoke : ?message:string -> ?options:ErrorOptions.t -> unit -> t) =
      fun ?message:(x689 : string option) ->
        fun ?options:(x690 : ErrorOptions.t option) ->
          fun () ->
            t_of_js
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "URIError") "apply"
                 [|Ojs.null;((let x691 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              (match x689 with
                               | Some x693 ->
                                   ignore
                                     (Ojs.call x691 "push"
                                        [|(Ojs.string_to_js x693)|])
                               | None -> ());
                              (match x690 with
                               | Some x692 ->
                                   ignore
                                     (Ojs.call x691 "push"
                                        [|(ErrorOptions.t_to_js x692)|])
                               | None -> ());
                              x691))|])
    let (create' : ?message:string -> unit -> t) =
      fun ?message:(x694 : string option) ->
        fun () ->
          t_of_js
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "URIError")
               (let x695 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x694 with
                 | Some x696 ->
                     ignore
                       (Ojs.call x695 "push" [|(Ojs.string_to_js x696)|])
                 | None -> ());
                x695))
    let (invoke' : ?message:string -> unit -> t) =
      fun ?message:(x697 : string option) ->
        fun () ->
          t_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "URIError") "apply"
               [|Ojs.null;((let x698 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x697 with
                             | Some x699 ->
                                 ignore
                                   (Ojs.call x698 "push"
                                      [|(Ojs.string_to_js x699)|])
                             | None -> ());
                            x698))|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "URIError")
             "prototype")
    let cast_from = Obj.magic
  end
module TypeError =
  struct
    type t = [ `Error  | `TypeError ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type tags = [ `Error  | `TypeError ]
    type 'tags this = 'tags intf constraint 'tags = [> `TypeError ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x702 : Ojs.t) -> intf_of_js __tags_of_js x702
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x700 : __tags intf) -> intf_to_js __tags_to_js x700
    let (create : ?message:string -> ?options:ErrorOptions.t -> unit -> t) =
      fun ?message:(x704 : string option) ->
        fun ?options:(x705 : ErrorOptions.t option) ->
          fun () ->
            t_of_js
              (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "TypeError")
                 (let x706 =
                    Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                  (match x704 with
                   | Some x708 ->
                       ignore
                         (Ojs.call x706 "push" [|(Ojs.string_to_js x708)|])
                   | None -> ());
                  (match x705 with
                   | Some x707 ->
                       ignore
                         (Ojs.call x706 "push"
                            [|(ErrorOptions.t_to_js x707)|])
                   | None -> ());
                  x706))
    let (invoke : ?message:string -> ?options:ErrorOptions.t -> unit -> t) =
      fun ?message:(x709 : string option) ->
        fun ?options:(x710 : ErrorOptions.t option) ->
          fun () ->
            t_of_js
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "TypeError") "apply"
                 [|Ojs.null;((let x711 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              (match x709 with
                               | Some x713 ->
                                   ignore
                                     (Ojs.call x711 "push"
                                        [|(Ojs.string_to_js x713)|])
                               | None -> ());
                              (match x710 with
                               | Some x712 ->
                                   ignore
                                     (Ojs.call x711 "push"
                                        [|(ErrorOptions.t_to_js x712)|])
                               | None -> ());
                              x711))|])
    let (create' : ?message:string -> unit -> t) =
      fun ?message:(x714 : string option) ->
        fun () ->
          t_of_js
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "TypeError")
               (let x715 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x714 with
                 | Some x716 ->
                     ignore
                       (Ojs.call x715 "push" [|(Ojs.string_to_js x716)|])
                 | None -> ());
                x715))
    let (invoke' : ?message:string -> unit -> t) =
      fun ?message:(x717 : string option) ->
        fun () ->
          t_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "TypeError") "apply"
               [|Ojs.null;((let x718 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x717 with
                             | Some x719 ->
                                 ignore
                                   (Ojs.call x718 "push"
                                      [|(Ojs.string_to_js x719)|])
                             | None -> ());
                            x718))|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "TypeError")
             "prototype")
    let cast_from = Obj.magic
  end
module FlatArray =
  struct
    type ('Arr, 'Depth) t = any
    let rec t_of_js :
      'Arr 'Depth .
        (Ojs.t -> 'Arr) -> (Ojs.t -> 'Depth) -> Ojs.t -> ('Arr, 'Depth) t
      =
      fun (type __Arr) ->
        fun (type __Depth) ->
          fun (__Arr_of_js : Ojs.t -> __Arr) ->
            fun (__Depth_of_js : Ojs.t -> __Depth) ->
              fun (x721 : Ojs.t) -> any_of_js x721
    and t_to_js :
      'Arr 'Depth .
        ('Arr -> Ojs.t) -> ('Depth -> Ojs.t) -> ('Arr, 'Depth) t -> Ojs.t
      =
      fun (type __Arr) ->
        fun (type __Depth) ->
          fun (__Arr_to_js : __Arr -> Ojs.t) ->
            fun (__Depth_to_js : __Depth -> Ojs.t) ->
              fun (x720 : any) -> any_to_js x720
  end
module ConcatArray =
  struct
    type 'T t = [ `ConcatArray of 'T ] intf
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun _T -> Obj.magic
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun _T -> Obj.magic
    type 'T tags = [ `ConcatArray of 'T ]
    type ('tags, 'T) this =
      'tags intf constraint 'tags = [> `ConcatArray of 'T ]
    let rec this_of_js :
      'tags 'T .
        (Ojs.t -> 'tags) -> (Ojs.t -> 'T) -> Ojs.t -> ('tags, 'T) this
      =
      fun (type __tags) ->
        fun (type __T) ->
          fun (__tags_of_js : Ojs.t -> __tags) ->
            fun (__T_of_js : Ojs.t -> __T) ->
              fun (x724 : Ojs.t) -> intf_of_js __tags_of_js x724
    and this_to_js :
      'tags 'T .
        ('tags -> Ojs.t) -> ('T -> Ojs.t) -> ('tags, 'T) this -> Ojs.t
      =
      fun (type __tags) ->
        fun (type __T) ->
          fun (__tags_to_js : __tags -> Ojs.t) ->
            fun (__T_to_js : __T -> Ojs.t) ->
              fun (x722 : __tags intf) -> intf_to_js __tags_to_js x722
    let (get_length : ('tags, 'T) this -> float) =
      fun (x726 : ('tags, 'T) this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic Obj.magic x726) "length")
    let (get : ('tags, 'T) this -> float -> 'T) =
      fun (x729 : ('tags, 'T) this) ->
        fun (x732 : float) ->
          Obj.magic
            (Ojs.get_prop (this_to_js Obj.magic Obj.magic x729)
               (Ojs.float_to_js x732))
    let (join : ('tags, 'T) this -> ?separator:string -> unit -> string) =
      fun (x736 : ('tags, 'T) this) ->
        fun ?separator:(x733 : string option) ->
          fun () ->
            Ojs.string_of_js
              (let x739 = this_to_js Obj.magic Obj.magic x736 in
               Ojs.call (Ojs.get_prop_ascii x739 "join") "apply"
                 [|x739;((let x734 =
                            Ojs.new_obj
                              (Ojs.get_prop_ascii Ojs.global "Array") 
                              [||] in
                          (match x733 with
                           | Some x735 ->
                               ignore
                                 (Ojs.call x734 "push"
                                    [|(Ojs.string_to_js x735)|])
                           | None -> ());
                          x734))|])
    let (slice :
      ('tags, 'T) this -> ?start:float -> ?end_:float -> unit -> 'T list) =
      fun (x745 : ('tags, 'T) this) ->
        fun ?start:(x740 : float option) ->
          fun ?end_:(x741 : float option) ->
            fun () ->
              Ojs.list_of_js Obj.magic
                (let x748 = this_to_js Obj.magic Obj.magic x745 in
                 Ojs.call (Ojs.get_prop_ascii x748 "slice") "apply"
                   [|x748;((let x742 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x740 with
                             | Some x744 ->
                                 ignore
                                   (Ojs.call x742 "push"
                                      [|(Ojs.float_to_js x744)|])
                             | None -> ());
                            (match x741 with
                             | Some x743 ->
                                 ignore
                                   (Ojs.call x742 "push"
                                      [|(Ojs.float_to_js x743)|])
                             | None -> ());
                            x742))|])
    let cast_from = Obj.magic
  end
module ReadonlyArray =
  struct
    type 'T t = [ `ReadonlyArray of 'T ] intf
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun _T -> Obj.magic
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun _T -> Obj.magic
    type 'T tags = [ `ReadonlyArray of 'T ]
    type ('tags, 'T) this =
      'tags intf constraint 'tags = [> `ReadonlyArray of 'T ]
    let rec this_of_js :
      'tags 'T .
        (Ojs.t -> 'tags) -> (Ojs.t -> 'T) -> Ojs.t -> ('tags, 'T) this
      =
      fun (type __tags) ->
        fun (type __T) ->
          fun (__tags_of_js : Ojs.t -> __tags) ->
            fun (__T_of_js : Ojs.t -> __T) ->
              fun (x752 : Ojs.t) -> intf_of_js __tags_of_js x752
    and this_to_js :
      'tags 'T .
        ('tags -> Ojs.t) -> ('T -> Ojs.t) -> ('tags, 'T) this -> Ojs.t
      =
      fun (type __tags) ->
        fun (type __T) ->
          fun (__tags_to_js : __tags -> Ojs.t) ->
            fun (__T_to_js : __T -> Ojs.t) ->
              fun (x750 : __tags intf) -> intf_to_js __tags_to_js x750
    let (at : ('tags, 'T) this -> index:float -> 'T option) =
      fun (x755 : ('tags, 'T) this) ->
        fun ~index:(x754 : float) ->
          Ojs.option_of_js Obj.magic
            (Ojs.call (this_to_js Obj.magic Obj.magic x755) "at"
               [|(Ojs.float_to_js x754)|])
    let (findLast :
      ('tags, 'T) this ->
        predicate:(value:'T -> index:float -> array:'T list -> bool) ->
          ?thisArg:any -> unit -> 'S option)
      =
      fun (x767 : ('tags, 'T) this) ->
        fun
          ~predicate:(x759 :
                       value:'T -> index:float -> array:'T list -> bool)
          ->
          fun ?thisArg:(x760 : any option) ->
            fun () ->
              Ojs.option_of_js Obj.magic
                (let x770 = this_to_js Obj.magic Obj.magic x767 in
                 Ojs.call (Ojs.get_prop_ascii x770 "findLast") "apply"
                   [|x770;((let x761 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x761 "push"
                                 [|(Ojs.fun_to_js 3
                                      (fun (x763 : Ojs.t) ->
                                         fun (x764 : Ojs.t) ->
                                           fun (x765 : Ojs.t) ->
                                             Ojs.bool_to_js
                                               (x759 ~value:(Obj.magic x763)
                                                  ~index:(Ojs.float_of_js
                                                            x764)
                                                  ~array:(Ojs.list_of_js
                                                            Obj.magic x765))))|]);
                            (match x760 with
                             | Some x762 ->
                                 ignore
                                   (Ojs.call x761 "push" [|(any_to_js x762)|])
                             | None -> ());
                            x761))|])
    let (findLast' :
      ('tags, 'T) this ->
        predicate:(value:'T -> index:float -> array:'T list -> unknown) ->
          ?thisArg:any -> unit -> 'T option)
      =
      fun (x780 : ('tags, 'T) this) ->
        fun
          ~predicate:(x772 :
                       value:'T -> index:float -> array:'T list -> unknown)
          ->
          fun ?thisArg:(x773 : any option) ->
            fun () ->
              Ojs.option_of_js Obj.magic
                (let x783 = this_to_js Obj.magic Obj.magic x780 in
                 Ojs.call (Ojs.get_prop_ascii x783 "findLast") "apply"
                   [|x783;((let x774 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x774 "push"
                                 [|(Ojs.fun_to_js 3
                                      (fun (x776 : Ojs.t) ->
                                         fun (x777 : Ojs.t) ->
                                           fun (x778 : Ojs.t) ->
                                             unknown_to_js
                                               (x772 ~value:(Obj.magic x776)
                                                  ~index:(Ojs.float_of_js
                                                            x777)
                                                  ~array:(Ojs.list_of_js
                                                            Obj.magic x778))))|]);
                            (match x773 with
                             | Some x775 ->
                                 ignore
                                   (Ojs.call x774 "push" [|(any_to_js x775)|])
                             | None -> ());
                            x774))|])
    let (findLastIndex :
      ('tags, 'T) this ->
        predicate:(value:'T -> index:float -> array:'T list -> unknown) ->
          ?thisArg:any -> unit -> float)
      =
      fun (x793 : ('tags, 'T) this) ->
        fun
          ~predicate:(x785 :
                       value:'T -> index:float -> array:'T list -> unknown)
          ->
          fun ?thisArg:(x786 : any option) ->
            fun () ->
              Ojs.float_of_js
                (let x796 = this_to_js Obj.magic Obj.magic x793 in
                 Ojs.call (Ojs.get_prop_ascii x796 "findLastIndex") "apply"
                   [|x796;((let x787 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x787 "push"
                                 [|(Ojs.fun_to_js 3
                                      (fun (x789 : Ojs.t) ->
                                         fun (x790 : Ojs.t) ->
                                           fun (x791 : Ojs.t) ->
                                             unknown_to_js
                                               (x785 ~value:(Obj.magic x789)
                                                  ~index:(Ojs.float_of_js
                                                            x790)
                                                  ~array:(Ojs.list_of_js
                                                            Obj.magic x791))))|]);
                            (match x786 with
                             | Some x788 ->
                                 ignore
                                   (Ojs.call x787 "push" [|(any_to_js x788)|])
                             | None -> ());
                            x787))|])
    let (toReversed : ('tags, 'T) this -> 'T list) =
      fun (x797 : ('tags, 'T) this) ->
        Ojs.list_of_js Obj.magic
          (Ojs.call (this_to_js Obj.magic Obj.magic x797) "toReversed" [||])
    let (toSorted :
      ('tags, 'T) this ->
        ?compareFn:(a:'T -> b:'T -> float) -> unit -> 'T list)
      =
      fun (x806 : ('tags, 'T) this) ->
        fun ?compareFn:(x801 : (a:'T -> b:'T -> float) option) ->
          fun () ->
            Ojs.list_of_js Obj.magic
              (let x809 = this_to_js Obj.magic Obj.magic x806 in
               Ojs.call (Ojs.get_prop_ascii x809 "toSorted") "apply"
                 [|x809;((let x802 =
                            Ojs.new_obj
                              (Ojs.get_prop_ascii Ojs.global "Array") 
                              [||] in
                          (match x801 with
                           | Some x803 ->
                               ignore
                                 (Ojs.call x802 "push"
                                    [|(Ojs.fun_to_js 2
                                         (fun (x804 : Ojs.t) ->
                                            fun (x805 : Ojs.t) ->
                                              Ojs.float_to_js
                                                (x803 ~a:(Obj.magic x804)
                                                   ~b:(Obj.magic x805))))|])
                           | None -> ());
                          x802))|])
    let (toSpliced :
      ('tags, 'T) this ->
        start:float -> deleteCount:float -> items:'T list -> 'T list)
      =
      fun (x816 : ('tags, 'T) this) ->
        fun ~start:(x811 : float) ->
          fun ~deleteCount:(x812 : float) ->
            fun ~items:(x813 : 'T list) ->
              Ojs.list_of_js Obj.magic
                (let x819 = this_to_js Obj.magic Obj.magic x816 in
                 Ojs.call (Ojs.get_prop_ascii x819 "toSpliced") "apply"
                   [|x819;((let x814 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x814 "push"
                                 [|(Ojs.float_to_js x811)|]);
                            ignore
                              (Ojs.call x814 "push"
                                 [|(Ojs.float_to_js x812)|]);
                            List.iter
                              (fun (x815 : 'T) ->
                                 ignore
                                   (Ojs.call x814 "push" [|(Obj.magic x815)|]))
                              x813;
                            x814))|])
    let (toSpliced' :
      ('tags, 'T) this ->
        start:float -> ?deleteCount:float -> unit -> 'T list)
      =
      fun (x825 : ('tags, 'T) this) ->
        fun ~start:(x821 : float) ->
          fun ?deleteCount:(x822 : float option) ->
            fun () ->
              Ojs.list_of_js Obj.magic
                (let x828 = this_to_js Obj.magic Obj.magic x825 in
                 Ojs.call (Ojs.get_prop_ascii x828 "toSpliced") "apply"
                   [|x828;((let x823 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x823 "push"
                                 [|(Ojs.float_to_js x821)|]);
                            (match x822 with
                             | Some x824 ->
                                 ignore
                                   (Ojs.call x823 "push"
                                      [|(Ojs.float_to_js x824)|])
                             | None -> ());
                            x823))|])
    let (with_ : ('tags, 'T) this -> index:float -> value:'T -> 'T list) =
      fun (x832 : ('tags, 'T) this) ->
        fun ~index:(x830 : float) ->
          fun ~value:(x831 : 'T) ->
            Ojs.list_of_js Obj.magic
              (Ojs.call (this_to_js Obj.magic Obj.magic x832) "with"
                 [|(Ojs.float_to_js x830);(Obj.magic x831)|])
    let (flatMap :
      ('tags, 'T) this ->
        callback:(this:'This ->
                    value:'T ->
                      index:float ->
                        array:'T list -> [ `U1 of 'U  | `U2 of 'U t ])
          -> ?thisArg:'This -> unit -> 'U list)
      =
      fun (x848 : ('tags, 'T) this) ->
        fun
          ~callback:(x836 :
                      this:'This ->
                        value:'T ->
                          index:float ->
                            array:'T list -> [ `U1 of 'U  | `U2 of 'U t ])
          ->
          fun ?thisArg:(x837 : 'This option) ->
            fun () ->
              Ojs.list_of_js Obj.magic
                (let x851 = this_to_js Obj.magic Obj.magic x848 in
                 Ojs.call (Ojs.get_prop_ascii x851 "flatMap") "apply"
                   [|x851;((let x838 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x838 "push"
                                 [|(Ojs.fun_to_js 4
                                      (fun (x840 : Ojs.t) ->
                                         fun (x841 : Ojs.t) ->
                                           fun (x842 : Ojs.t) ->
                                             fun (x843 : Ojs.t) ->
                                               match x836
                                                       ~this:(Obj.magic x840)
                                                       ~value:(Obj.magic x841)
                                                       ~index:(Ojs.float_of_js
                                                                 x842)
                                                       ~array:(Ojs.list_of_js
                                                                 Obj.magic
                                                                 x843)
                                               with
                                               | `U1 x845 -> Obj.magic x845
                                               | `U2 x846 ->
                                                   t_to_js Obj.magic x846))|]);
                            (match x837 with
                             | Some x839 ->
                                 ignore
                                   (Ojs.call x838 "push" [|(Obj.magic x839)|])
                             | None -> ());
                            x838))|])
    let (flat :
      ('tags, 'T) this ->
        this:'A -> ?depth:'D -> unit -> ('A, 'D) FlatArray.t list)
      =
      fun (x857 : ('tags, 'T) this) ->
        fun ~this:(x853 : 'A) ->
          fun ?depth:(x854 : 'D option) ->
            fun () ->
              Ojs.list_of_js
                (fun (x861 : Ojs.t) ->
                   FlatArray.t_of_js Obj.magic Obj.magic x861)
                (let x860 = this_to_js Obj.magic Obj.magic x857 in
                 Ojs.call (Ojs.get_prop_ascii x860 "flat") "apply"
                   [|x860;((let x855 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x855 "push" [|(Obj.magic x853)|]);
                            (match x854 with
                             | Some x856 ->
                                 ignore
                                   (Ojs.call x855 "push" [|(Obj.magic x856)|])
                             | None -> ());
                            x855))|])
    let (includes :
      ('tags, 'T) this ->
        searchElement:'T -> ?fromIndex:float -> unit -> bool)
      =
      fun (x868 : ('tags, 'T) this) ->
        fun ~searchElement:(x864 : 'T) ->
          fun ?fromIndex:(x865 : float option) ->
            fun () ->
              Ojs.bool_of_js
                (let x871 = this_to_js Obj.magic Obj.magic x868 in
                 Ojs.call (Ojs.get_prop_ascii x871 "includes") "apply"
                   [|x871;((let x866 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x866 "push" [|(Obj.magic x864)|]);
                            (match x865 with
                             | Some x867 ->
                                 ignore
                                   (Ojs.call x866 "push"
                                      [|(Ojs.float_to_js x867)|])
                             | None -> ());
                            x866))|])
    let (entries : ('tags, 'T) this -> (float * 'T) IterableIterator.t) =
      fun (x872 : ('tags, 'T) this) ->
        IterableIterator.t_of_js
          (fun (x875 : Ojs.t) ->
             let x876 = x875 in
             ((Ojs.float_of_js (Ojs.array_get x876 0)),
               (Obj.magic (Ojs.array_get x876 1))))
          (Ojs.call (this_to_js Obj.magic Obj.magic x872) "entries" [||])
    let (keys : ('tags, 'T) this -> float IterableIterator.t) =
      fun (x877 : ('tags, 'T) this) ->
        IterableIterator.t_of_js Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic Obj.magic x877) "keys" [||])
    let (values : ('tags, 'T) this -> 'T IterableIterator.t) =
      fun (x881 : ('tags, 'T) this) ->
        IterableIterator.t_of_js Obj.magic
          (Ojs.call (this_to_js Obj.magic Obj.magic x881) "values" [||])
    let (find :
      ('tags, 'T) this ->
        predicate:(value:'T -> index:float -> obj:'T list -> bool) ->
          ?thisArg:any -> unit -> 'S option)
      =
      fun (x893 : ('tags, 'T) this) ->
        fun
          ~predicate:(x885 : value:'T -> index:float -> obj:'T list -> bool)
          ->
          fun ?thisArg:(x886 : any option) ->
            fun () ->
              Ojs.option_of_js Obj.magic
                (let x896 = this_to_js Obj.magic Obj.magic x893 in
                 Ojs.call (Ojs.get_prop_ascii x896 "find") "apply"
                   [|x896;((let x887 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x887 "push"
                                 [|(Ojs.fun_to_js 3
                                      (fun (x889 : Ojs.t) ->
                                         fun (x890 : Ojs.t) ->
                                           fun (x891 : Ojs.t) ->
                                             Ojs.bool_to_js
                                               (x885 ~value:(Obj.magic x889)
                                                  ~index:(Ojs.float_of_js
                                                            x890)
                                                  ~obj:(Ojs.list_of_js
                                                          Obj.magic x891))))|]);
                            (match x886 with
                             | Some x888 ->
                                 ignore
                                   (Ojs.call x887 "push" [|(any_to_js x888)|])
                             | None -> ());
                            x887))|])
    let (find' :
      ('tags, 'T) this ->
        predicate:(value:'T -> index:float -> obj:'T list -> unknown) ->
          ?thisArg:any -> unit -> 'T option)
      =
      fun (x906 : ('tags, 'T) this) ->
        fun
          ~predicate:(x898 :
                       value:'T -> index:float -> obj:'T list -> unknown)
          ->
          fun ?thisArg:(x899 : any option) ->
            fun () ->
              Ojs.option_of_js Obj.magic
                (let x909 = this_to_js Obj.magic Obj.magic x906 in
                 Ojs.call (Ojs.get_prop_ascii x909 "find") "apply"
                   [|x909;((let x900 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x900 "push"
                                 [|(Ojs.fun_to_js 3
                                      (fun (x902 : Ojs.t) ->
                                         fun (x903 : Ojs.t) ->
                                           fun (x904 : Ojs.t) ->
                                             unknown_to_js
                                               (x898 ~value:(Obj.magic x902)
                                                  ~index:(Ojs.float_of_js
                                                            x903)
                                                  ~obj:(Ojs.list_of_js
                                                          Obj.magic x904))))|]);
                            (match x899 with
                             | Some x901 ->
                                 ignore
                                   (Ojs.call x900 "push" [|(any_to_js x901)|])
                             | None -> ());
                            x900))|])
    let (findIndex :
      ('tags, 'T) this ->
        predicate:(value:'T -> index:float -> obj:'T list -> unknown) ->
          ?thisArg:any -> unit -> float)
      =
      fun (x919 : ('tags, 'T) this) ->
        fun
          ~predicate:(x911 :
                       value:'T -> index:float -> obj:'T list -> unknown)
          ->
          fun ?thisArg:(x912 : any option) ->
            fun () ->
              Ojs.float_of_js
                (let x922 = this_to_js Obj.magic Obj.magic x919 in
                 Ojs.call (Ojs.get_prop_ascii x922 "findIndex") "apply"
                   [|x922;((let x913 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x913 "push"
                                 [|(Ojs.fun_to_js 3
                                      (fun (x915 : Ojs.t) ->
                                         fun (x916 : Ojs.t) ->
                                           fun (x917 : Ojs.t) ->
                                             unknown_to_js
                                               (x911 ~value:(Obj.magic x915)
                                                  ~index:(Ojs.float_of_js
                                                            x916)
                                                  ~obj:(Ojs.list_of_js
                                                          Obj.magic x917))))|]);
                            (match x912 with
                             | Some x914 ->
                                 ignore
                                   (Ojs.call x913 "push" [|(any_to_js x914)|])
                             | None -> ());
                            x913))|])
    let (get_length : ('tags, 'T) this -> float) =
      fun (x923 : ('tags, 'T) this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic Obj.magic x923) "length")
    let (toString : ('tags, 'T) this -> string) =
      fun (x926 : ('tags, 'T) this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic Obj.magic x926) "toString" [||])
    let (toLocaleString : ('tags, 'T) this -> string) =
      fun (x929 : ('tags, 'T) this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic Obj.magic x929) "toLocaleString"
             [||])
    let (concat : ('tags, 'T) this -> items:'T ConcatArray.t list -> 'T list)
      =
      fun (x936 : ('tags, 'T) this) ->
        fun ~items:(x932 : 'T ConcatArray.t list) ->
          Ojs.list_of_js Obj.magic
            (let x939 = this_to_js Obj.magic Obj.magic x936 in
             Ojs.call (Ojs.get_prop_ascii x939 "concat") "apply"
               [|x939;((let x933 =
                          Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                            [||] in
                        List.iter
                          (fun (x934 : 'T ConcatArray.t) ->
                             ignore
                               (Ojs.call x933 "push"
                                  [|(ConcatArray.t_to_js Obj.magic x934)|]))
                          x932;
                        x933))|])
    let (concat' :
      ('tags, 'T) this ->
        items:[ `U1 of 'T  | `U2 of 'T ConcatArray.t ] list -> 'T list)
      =
      fun (x947 : ('tags, 'T) this) ->
        fun ~items:(x941 : [ `U1 of 'T  | `U2 of 'T ConcatArray.t ] list) ->
          Ojs.list_of_js Obj.magic
            (let x950 = this_to_js Obj.magic Obj.magic x947 in
             Ojs.call (Ojs.get_prop_ascii x950 "concat") "apply"
               [|x950;((let x942 =
                          Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                            [||] in
                        List.iter
                          (fun
                             (x943 :
                               [ `U1 of 'T  | `U2 of 'T ConcatArray.t ])
                             ->
                             ignore
                               (Ojs.call x942 "push"
                                  [|((match x943 with
                                      | `U1 x944 -> Obj.magic x944
                                      | `U2 x945 ->
                                          ConcatArray.t_to_js Obj.magic x945))|]))
                          x941;
                        x942))|])
    let (join : ('tags, 'T) this -> ?separator:string -> unit -> string) =
      fun (x955 : ('tags, 'T) this) ->
        fun ?separator:(x952 : string option) ->
          fun () ->
            Ojs.string_of_js
              (let x958 = this_to_js Obj.magic Obj.magic x955 in
               Ojs.call (Ojs.get_prop_ascii x958 "join") "apply"
                 [|x958;((let x953 =
                            Ojs.new_obj
                              (Ojs.get_prop_ascii Ojs.global "Array") 
                              [||] in
                          (match x952 with
                           | Some x954 ->
                               ignore
                                 (Ojs.call x953 "push"
                                    [|(Ojs.string_to_js x954)|])
                           | None -> ());
                          x953))|])
    let (slice :
      ('tags, 'T) this -> ?start:float -> ?end_:float -> unit -> 'T list) =
      fun (x964 : ('tags, 'T) this) ->
        fun ?start:(x959 : float option) ->
          fun ?end_:(x960 : float option) ->
            fun () ->
              Ojs.list_of_js Obj.magic
                (let x967 = this_to_js Obj.magic Obj.magic x964 in
                 Ojs.call (Ojs.get_prop_ascii x967 "slice") "apply"
                   [|x967;((let x961 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x959 with
                             | Some x963 ->
                                 ignore
                                   (Ojs.call x961 "push"
                                      [|(Ojs.float_to_js x963)|])
                             | None -> ());
                            (match x960 with
                             | Some x962 ->
                                 ignore
                                   (Ojs.call x961 "push"
                                      [|(Ojs.float_to_js x962)|])
                             | None -> ());
                            x961))|])
    let (indexOf :
      ('tags, 'T) this ->
        searchElement:'T -> ?fromIndex:float -> unit -> float)
      =
      fun (x973 : ('tags, 'T) this) ->
        fun ~searchElement:(x969 : 'T) ->
          fun ?fromIndex:(x970 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x976 = this_to_js Obj.magic Obj.magic x973 in
                 Ojs.call (Ojs.get_prop_ascii x976 "indexOf") "apply"
                   [|x976;((let x971 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x971 "push" [|(Obj.magic x969)|]);
                            (match x970 with
                             | Some x972 ->
                                 ignore
                                   (Ojs.call x971 "push"
                                      [|(Ojs.float_to_js x972)|])
                             | None -> ());
                            x971))|])
    let (lastIndexOf :
      ('tags, 'T) this ->
        searchElement:'T -> ?fromIndex:float -> unit -> float)
      =
      fun (x981 : ('tags, 'T) this) ->
        fun ~searchElement:(x977 : 'T) ->
          fun ?fromIndex:(x978 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x984 = this_to_js Obj.magic Obj.magic x981 in
                 Ojs.call (Ojs.get_prop_ascii x984 "lastIndexOf") "apply"
                   [|x984;((let x979 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x979 "push" [|(Obj.magic x977)|]);
                            (match x978 with
                             | Some x980 ->
                                 ignore
                                   (Ojs.call x979 "push"
                                      [|(Ojs.float_to_js x980)|])
                             | None -> ());
                            x979))|])
    let (every :
      ('tags, 'T) this ->
        predicate:(value:'T -> index:float -> array:'T list -> bool) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x993 : ('tags, 'T) this) ->
        fun
          ~predicate:(x985 :
                       value:'T -> index:float -> array:'T list -> bool)
          ->
          fun ?thisArg:(x986 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x996 = this_to_js Obj.magic Obj.magic x993 in
                 Ojs.call (Ojs.get_prop_ascii x996 "every") "apply"
                   [|x996;((let x987 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x987 "push"
                                 [|(Ojs.fun_to_js 3
                                      (fun (x989 : Ojs.t) ->
                                         fun (x990 : Ojs.t) ->
                                           fun (x991 : Ojs.t) ->
                                             Ojs.bool_to_js
                                               (x985 ~value:(Obj.magic x989)
                                                  ~index:(Ojs.float_of_js
                                                            x990)
                                                  ~array:(Ojs.list_of_js
                                                            Obj.magic x991))))|]);
                            (match x986 with
                             | Some x988 ->
                                 ignore
                                   (Ojs.call x987 "push" [|(any_to_js x988)|])
                             | None -> ());
                            x987))|])
    let (every' :
      ('tags, 'T) this ->
        predicate:(value:'T -> index:float -> array:'T list -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x1005 : ('tags, 'T) this) ->
        fun
          ~predicate:(x997 :
                       value:'T -> index:float -> array:'T list -> unknown)
          ->
          fun ?thisArg:(x998 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x1008 = this_to_js Obj.magic Obj.magic x1005 in
                 Ojs.call (Ojs.get_prop_ascii x1008 "every") "apply"
                   [|x1008;((let x999 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x999 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x1001 : Ojs.t) ->
                                          fun (x1002 : Ojs.t) ->
                                            fun (x1003 : Ojs.t) ->
                                              unknown_to_js
                                                (x997
                                                   ~value:(Obj.magic x1001)
                                                   ~index:(Ojs.float_of_js
                                                             x1002)
                                                   ~array:(Ojs.list_of_js
                                                             Obj.magic x1003))))|]);
                             (match x998 with
                              | Some x1000 ->
                                  ignore
                                    (Ojs.call x999 "push"
                                       [|(any_to_js x1000)|])
                              | None -> ());
                             x999))|])
    let (some :
      ('tags, 'T) this ->
        predicate:(value:'T -> index:float -> array:'T list -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x1017 : ('tags, 'T) this) ->
        fun
          ~predicate:(x1009 :
                       value:'T -> index:float -> array:'T list -> unknown)
          ->
          fun ?thisArg:(x1010 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x1020 = this_to_js Obj.magic Obj.magic x1017 in
                 Ojs.call (Ojs.get_prop_ascii x1020 "some") "apply"
                   [|x1020;((let x1011 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1011 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x1013 : Ojs.t) ->
                                          fun (x1014 : Ojs.t) ->
                                            fun (x1015 : Ojs.t) ->
                                              unknown_to_js
                                                (x1009
                                                   ~value:(Obj.magic x1013)
                                                   ~index:(Ojs.float_of_js
                                                             x1014)
                                                   ~array:(Ojs.list_of_js
                                                             Obj.magic x1015))))|]);
                             (match x1010 with
                              | Some x1012 ->
                                  ignore
                                    (Ojs.call x1011 "push"
                                       [|(any_to_js x1012)|])
                              | None -> ());
                             x1011))|])
    let (forEach :
      ('tags, 'T) this ->
        callbackfn:(value:'T -> index:float -> array:'T list -> unit) ->
          ?thisArg:any -> unit -> unit)
      =
      fun (x1029 : ('tags, 'T) this) ->
        fun
          ~callbackfn:(x1021 :
                        value:'T -> index:float -> array:'T list -> unit)
          ->
          fun ?thisArg:(x1022 : any option) ->
            fun () ->
              ignore
                (let x1032 = this_to_js Obj.magic Obj.magic x1029 in
                 Ojs.call (Ojs.get_prop_ascii x1032 "forEach") "apply"
                   [|x1032;((let x1023 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1023 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x1025 : Ojs.t) ->
                                          fun (x1026 : Ojs.t) ->
                                            fun (x1027 : Ojs.t) ->
                                              x1021 ~value:(Obj.magic x1025)
                                                ~index:(Ojs.float_of_js x1026)
                                                ~array:(Ojs.list_of_js
                                                          Obj.magic x1027)))|]);
                             (match x1022 with
                              | Some x1024 ->
                                  ignore
                                    (Ojs.call x1023 "push"
                                       [|(any_to_js x1024)|])
                              | None -> ());
                             x1023))|])
    let (map :
      ('tags, 'T) this ->
        callbackfn:(value:'T -> index:float -> array:'T list -> 'U) ->
          ?thisArg:any -> unit -> 'U list)
      =
      fun (x1041 : ('tags, 'T) this) ->
        fun
          ~callbackfn:(x1033 :
                        value:'T -> index:float -> array:'T list -> 'U)
          ->
          fun ?thisArg:(x1034 : any option) ->
            fun () ->
              Ojs.list_of_js Obj.magic
                (let x1044 = this_to_js Obj.magic Obj.magic x1041 in
                 Ojs.call (Ojs.get_prop_ascii x1044 "map") "apply"
                   [|x1044;((let x1035 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1035 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x1037 : Ojs.t) ->
                                          fun (x1038 : Ojs.t) ->
                                            fun (x1039 : Ojs.t) ->
                                              Obj.magic
                                                (x1033
                                                   ~value:(Obj.magic x1037)
                                                   ~index:(Ojs.float_of_js
                                                             x1038)
                                                   ~array:(Ojs.list_of_js
                                                             Obj.magic x1039))))|]);
                             (match x1034 with
                              | Some x1036 ->
                                  ignore
                                    (Ojs.call x1035 "push"
                                       [|(any_to_js x1036)|])
                              | None -> ());
                             x1035))|])
    let (filter :
      ('tags, 'T) this ->
        predicate:(value:'T -> index:float -> array:'T list -> bool) ->
          ?thisArg:any -> unit -> 'S list)
      =
      fun (x1054 : ('tags, 'T) this) ->
        fun
          ~predicate:(x1046 :
                       value:'T -> index:float -> array:'T list -> bool)
          ->
          fun ?thisArg:(x1047 : any option) ->
            fun () ->
              Ojs.list_of_js Obj.magic
                (let x1057 = this_to_js Obj.magic Obj.magic x1054 in
                 Ojs.call (Ojs.get_prop_ascii x1057 "filter") "apply"
                   [|x1057;((let x1048 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1048 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x1050 : Ojs.t) ->
                                          fun (x1051 : Ojs.t) ->
                                            fun (x1052 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x1046
                                                   ~value:(Obj.magic x1050)
                                                   ~index:(Ojs.float_of_js
                                                             x1051)
                                                   ~array:(Ojs.list_of_js
                                                             Obj.magic x1052))))|]);
                             (match x1047 with
                              | Some x1049 ->
                                  ignore
                                    (Ojs.call x1048 "push"
                                       [|(any_to_js x1049)|])
                              | None -> ());
                             x1048))|])
    let (filter' :
      ('tags, 'T) this ->
        predicate:(value:'T -> index:float -> array:'T list -> unknown) ->
          ?thisArg:any -> unit -> 'T list)
      =
      fun (x1067 : ('tags, 'T) this) ->
        fun
          ~predicate:(x1059 :
                       value:'T -> index:float -> array:'T list -> unknown)
          ->
          fun ?thisArg:(x1060 : any option) ->
            fun () ->
              Ojs.list_of_js Obj.magic
                (let x1070 = this_to_js Obj.magic Obj.magic x1067 in
                 Ojs.call (Ojs.get_prop_ascii x1070 "filter") "apply"
                   [|x1070;((let x1061 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1061 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x1063 : Ojs.t) ->
                                          fun (x1064 : Ojs.t) ->
                                            fun (x1065 : Ojs.t) ->
                                              unknown_to_js
                                                (x1059
                                                   ~value:(Obj.magic x1063)
                                                   ~index:(Ojs.float_of_js
                                                             x1064)
                                                   ~array:(Ojs.list_of_js
                                                             Obj.magic x1065))))|]);
                             (match x1060 with
                              | Some x1062 ->
                                  ignore
                                    (Ojs.call x1061 "push"
                                       [|(any_to_js x1062)|])
                              | None -> ());
                             x1061))|])
    let (reduce :
      ('tags, 'T) this ->
        callbackfn:(previousValue:'T ->
                      currentValue:'T ->
                        currentIndex:float -> array:'T list -> 'T)
          -> 'T)
      =
      fun (x1078 : ('tags, 'T) this) ->
        fun
          ~callbackfn:(x1072 :
                        previousValue:'T ->
                          currentValue:'T ->
                            currentIndex:float -> array:'T list -> 'T)
          ->
          Obj.magic
            (Ojs.call (this_to_js Obj.magic Obj.magic x1078) "reduce"
               [|(Ojs.fun_to_js 4
                    (fun (x1073 : Ojs.t) ->
                       fun (x1074 : Ojs.t) ->
                         fun (x1075 : Ojs.t) ->
                           fun (x1076 : Ojs.t) ->
                             Obj.magic
                               (x1072 ~previousValue:(Obj.magic x1073)
                                  ~currentValue:(Obj.magic x1074)
                                  ~currentIndex:(Ojs.float_of_js x1075)
                                  ~array:(Ojs.list_of_js Obj.magic x1076))))|])
    let (reduce' :
      ('tags, 'T) this ->
        callbackfn:(previousValue:'T ->
                      currentValue:'T ->
                        currentIndex:float -> array:'T list -> 'T)
          -> initialValue:'T -> 'T)
      =
      fun (x1088 : ('tags, 'T) this) ->
        fun
          ~callbackfn:(x1081 :
                        previousValue:'T ->
                          currentValue:'T ->
                            currentIndex:float -> array:'T list -> 'T)
          ->
          fun ~initialValue:(x1087 : 'T) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic Obj.magic x1088) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x1082 : Ojs.t) ->
                         fun (x1083 : Ojs.t) ->
                           fun (x1084 : Ojs.t) ->
                             fun (x1085 : Ojs.t) ->
                               Obj.magic
                                 (x1081 ~previousValue:(Obj.magic x1082)
                                    ~currentValue:(Obj.magic x1083)
                                    ~currentIndex:(Ojs.float_of_js x1084)
                                    ~array:(Ojs.list_of_js Obj.magic x1085))));(
                   Obj.magic x1087)|])
    let (reduce'' :
      ('tags, 'T) this ->
        callbackfn:(previousValue:'U ->
                      currentValue:'T ->
                        currentIndex:float -> array:'T list -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x1098 : ('tags, 'T) this) ->
        fun
          ~callbackfn:(x1091 :
                        previousValue:'U ->
                          currentValue:'T ->
                            currentIndex:float -> array:'T list -> 'U)
          ->
          fun ~initialValue:(x1097 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic Obj.magic x1098) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x1092 : Ojs.t) ->
                         fun (x1093 : Ojs.t) ->
                           fun (x1094 : Ojs.t) ->
                             fun (x1095 : Ojs.t) ->
                               Obj.magic
                                 (x1091 ~previousValue:(Obj.magic x1092)
                                    ~currentValue:(Obj.magic x1093)
                                    ~currentIndex:(Ojs.float_of_js x1094)
                                    ~array:(Ojs.list_of_js Obj.magic x1095))));(
                   Obj.magic x1097)|])
    let (reduceRight :
      ('tags, 'T) this ->
        callbackfn:(previousValue:'T ->
                      currentValue:'T ->
                        currentIndex:float -> array:'T list -> 'T)
          -> 'T)
      =
      fun (x1107 : ('tags, 'T) this) ->
        fun
          ~callbackfn:(x1101 :
                        previousValue:'T ->
                          currentValue:'T ->
                            currentIndex:float -> array:'T list -> 'T)
          ->
          Obj.magic
            (Ojs.call (this_to_js Obj.magic Obj.magic x1107) "reduceRight"
               [|(Ojs.fun_to_js 4
                    (fun (x1102 : Ojs.t) ->
                       fun (x1103 : Ojs.t) ->
                         fun (x1104 : Ojs.t) ->
                           fun (x1105 : Ojs.t) ->
                             Obj.magic
                               (x1101 ~previousValue:(Obj.magic x1102)
                                  ~currentValue:(Obj.magic x1103)
                                  ~currentIndex:(Ojs.float_of_js x1104)
                                  ~array:(Ojs.list_of_js Obj.magic x1105))))|])
    let (reduceRight' :
      ('tags, 'T) this ->
        callbackfn:(previousValue:'T ->
                      currentValue:'T ->
                        currentIndex:float -> array:'T list -> 'T)
          -> initialValue:'T -> 'T)
      =
      fun (x1117 : ('tags, 'T) this) ->
        fun
          ~callbackfn:(x1110 :
                        previousValue:'T ->
                          currentValue:'T ->
                            currentIndex:float -> array:'T list -> 'T)
          ->
          fun ~initialValue:(x1116 : 'T) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic Obj.magic x1117) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x1111 : Ojs.t) ->
                         fun (x1112 : Ojs.t) ->
                           fun (x1113 : Ojs.t) ->
                             fun (x1114 : Ojs.t) ->
                               Obj.magic
                                 (x1110 ~previousValue:(Obj.magic x1111)
                                    ~currentValue:(Obj.magic x1112)
                                    ~currentIndex:(Ojs.float_of_js x1113)
                                    ~array:(Ojs.list_of_js Obj.magic x1114))));(
                   Obj.magic x1116)|])
    let (reduceRight'' :
      ('tags, 'T) this ->
        callbackfn:(previousValue:'U ->
                      currentValue:'T ->
                        currentIndex:float -> array:'T list -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x1127 : ('tags, 'T) this) ->
        fun
          ~callbackfn:(x1120 :
                        previousValue:'U ->
                          currentValue:'T ->
                            currentIndex:float -> array:'T list -> 'U)
          ->
          fun ~initialValue:(x1126 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic Obj.magic x1127) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x1121 : Ojs.t) ->
                         fun (x1122 : Ojs.t) ->
                           fun (x1123 : Ojs.t) ->
                             fun (x1124 : Ojs.t) ->
                               Obj.magic
                                 (x1120 ~previousValue:(Obj.magic x1121)
                                    ~currentValue:(Obj.magic x1122)
                                    ~currentIndex:(Ojs.float_of_js x1123)
                                    ~array:(Ojs.list_of_js Obj.magic x1124))));(
                   Obj.magic x1126)|])
    let (get : ('tags, 'T) this -> float -> 'T) =
      fun (x1130 : ('tags, 'T) this) ->
        fun (x1133 : float) ->
          Obj.magic
            (Ojs.get_prop (this_to_js Obj.magic Obj.magic x1130)
               (Ojs.float_to_js x1133))
    let cast_from = Obj.magic
    let (of_ml : 'T list -> 'T t) =
      fun (x1134 : 'T list) ->
        t_of_js Obj.magic (Ojs.list_to_js Obj.magic x1134)
    let (to_ml : 'T t -> 'T list) =
      fun (x1137 : 'T t) ->
        Ojs.list_of_js Obj.magic (t_to_js Obj.magic x1137)
  end
module TemplateStringsArray =
  struct
    type t =
      [ `ReadonlyArray of string  | `ReadonlyArray of string 
      | `TemplateStringsArray ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type tags =
      [ `ReadonlyArray of string  | `ReadonlyArray of string 
      | `TemplateStringsArray ]
    type 'tags this =
      'tags intf constraint 'tags = [> `TemplateStringsArray ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x1142 : Ojs.t) -> intf_of_js __tags_of_js x1142
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x1140 : __tags intf) -> intf_to_js __tags_to_js x1140
    let (get_raw : 'tags this -> string list) =
      fun (x1144 : 'tags this) ->
        Ojs.list_of_js Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x1144) "raw")
    let (create : raw:string list -> unit -> t) =
      fun ~raw:(x1147 : string list) ->
        fun () ->
          let x1148 = Ojs.empty_obj () in
          Ojs.set_prop_ascii x1148 "raw"
            (Ojs.list_to_js Ojs.string_to_js x1147);
          t_of_js x1148
    let cast_from = Obj.magic
  end
module SyntaxError =
  struct
    type t = [ `Error  | `SyntaxError ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type tags = [ `Error  | `SyntaxError ]
    type 'tags this = 'tags intf constraint 'tags = [> `SyntaxError ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x1152 : Ojs.t) -> intf_of_js __tags_of_js x1152
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x1150 : __tags intf) -> intf_to_js __tags_to_js x1150
    let (create : ?message:string -> ?options:ErrorOptions.t -> unit -> t) =
      fun ?message:(x1154 : string option) ->
        fun ?options:(x1155 : ErrorOptions.t option) ->
          fun () ->
            t_of_js
              (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "SyntaxError")
                 (let x1156 =
                    Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                  (match x1154 with
                   | Some x1158 ->
                       ignore
                         (Ojs.call x1156 "push" [|(Ojs.string_to_js x1158)|])
                   | None -> ());
                  (match x1155 with
                   | Some x1157 ->
                       ignore
                         (Ojs.call x1156 "push"
                            [|(ErrorOptions.t_to_js x1157)|])
                   | None -> ());
                  x1156))
    let (invoke : ?message:string -> ?options:ErrorOptions.t -> unit -> t) =
      fun ?message:(x1159 : string option) ->
        fun ?options:(x1160 : ErrorOptions.t option) ->
          fun () ->
            t_of_js
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "SyntaxError") "apply"
                 [|Ojs.null;((let x1161 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              (match x1159 with
                               | Some x1163 ->
                                   ignore
                                     (Ojs.call x1161 "push"
                                        [|(Ojs.string_to_js x1163)|])
                               | None -> ());
                              (match x1160 with
                               | Some x1162 ->
                                   ignore
                                     (Ojs.call x1161 "push"
                                        [|(ErrorOptions.t_to_js x1162)|])
                               | None -> ());
                              x1161))|])
    let (create' : ?message:string -> unit -> t) =
      fun ?message:(x1164 : string option) ->
        fun () ->
          t_of_js
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "SyntaxError")
               (let x1165 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x1164 with
                 | Some x1166 ->
                     ignore
                       (Ojs.call x1165 "push" [|(Ojs.string_to_js x1166)|])
                 | None -> ());
                x1165))
    let (invoke' : ?message:string -> unit -> t) =
      fun ?message:(x1167 : string option) ->
        fun () ->
          t_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "SyntaxError") "apply"
               [|Ojs.null;((let x1168 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x1167 with
                             | Some x1169 ->
                                 ignore
                                   (Ojs.call x1168 "push"
                                      [|(Ojs.string_to_js x1169)|])
                             | None -> ());
                            x1168))|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "SyntaxError")
             "prototype")
    let cast_from = Obj.magic
  end
module Symbol =
  struct
    type t = [ `Symbol ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type tags = [ `Symbol ]
    type 'tags this = 'tags intf constraint 'tags = [> `Symbol ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x1172 : Ojs.t) -> intf_of_js __tags_of_js x1172
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x1170 : __tags intf) -> intf_to_js __tags_to_js x1170
    let (get_description : 'tags this -> string option) =
      fun (x1174 : 'tags this) ->
        Ojs.option_of_js Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x1174) "description")
    let (toString : 'tags this -> string) =
      fun (x1177 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x1177) "toString" [||])
    let (valueOf : 'tags this -> symbol) =
      fun (x1179 : 'tags this) ->
        symbol_of_js (Ojs.call (this_to_js Obj.magic x1179) "valueOf" [||])
    let (metadata : unit -> symbol) =
      fun () ->
        symbol_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Symbol")
             "metadata")
    let (dispose : unit -> symbol) =
      fun () ->
        symbol_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Symbol")
             "dispose")
    let (asyncDispose : unit -> symbol) =
      fun () ->
        symbol_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Symbol")
             "asyncDispose")
    let (matchAll : unit -> symbol) =
      fun () ->
        symbol_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Symbol")
             "matchAll")
    let (asyncIterator : unit -> symbol) =
      fun () ->
        symbol_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Symbol")
             "asyncIterator")
    let (hasInstance : unit -> symbol) =
      fun () ->
        symbol_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Symbol")
             "hasInstance")
    let (isConcatSpreadable : unit -> symbol) =
      fun () ->
        symbol_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Symbol")
             "isConcatSpreadable")
    let (match_ : unit -> symbol) =
      fun () ->
        symbol_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Symbol")
             "match")
    let (replace : unit -> symbol) =
      fun () ->
        symbol_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Symbol")
             "replace")
    let (search : unit -> symbol) =
      fun () ->
        symbol_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Symbol")
             "search")
    let (species : unit -> symbol) =
      fun () ->
        symbol_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Symbol")
             "species")
    let (split : unit -> symbol) =
      fun () ->
        symbol_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Symbol")
             "split")
    let (toPrimitive : unit -> symbol) =
      fun () ->
        symbol_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Symbol")
             "toPrimitive")
    let (toStringTag : unit -> symbol) =
      fun () ->
        symbol_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Symbol")
             "toStringTag")
    let (unscopables : unit -> symbol) =
      fun () ->
        symbol_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Symbol")
             "unscopables")
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Symbol")
             "prototype")
    let (invoke :
      ?description:[ `U1 of string  | `U2 of float ] -> unit -> symbol) =
      fun ?description:(x1181 : [ `U1 of string  | `U2 of float ] option) ->
        fun () ->
          symbol_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "Symbol") "apply"
               [|Ojs.null;((let x1182 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x1181 with
                             | Some x1183 ->
                                 ignore
                                   (Ojs.call x1182 "push"
                                      [|((match x1183 with
                                          | `U1 x1184 ->
                                              Ojs.string_to_js x1184
                                          | `U2 x1185 ->
                                              Ojs.float_to_js x1185))|])
                             | None -> ());
                            x1182))|])
    let (for_ : string -> symbol) =
      fun (x1186 : string) ->
        symbol_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Symbol") "for"
             [|(Ojs.string_to_js x1186)|])
    let (keyFor : symbol -> string option) =
      fun (x1187 : symbol) ->
        Ojs.option_of_js Ojs.string_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Symbol") "keyFor"
             [|(symbol_to_js x1187)|])
    let (iterator : unit -> symbol) =
      fun () ->
        symbol_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Symbol")
             "iterator")
    let cast_from = Obj.magic
  end
module SuppressedError =
  struct
    type t = [ `Error  | `SuppressedError ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type tags = [ `Error  | `SuppressedError ]
    type 'tags this = 'tags intf constraint 'tags = [> `SuppressedError ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x1191 : Ojs.t) -> intf_of_js __tags_of_js x1191
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x1189 : __tags intf) -> intf_to_js __tags_to_js x1189
    let (get_error : 'tags this -> any) =
      fun (x1193 : 'tags this) ->
        any_of_js (Ojs.get_prop_ascii (this_to_js Obj.magic x1193) "error")
    let (set_error : 'tags this -> any -> unit) =
      fun (x1195 : 'tags this) ->
        fun (x1196 : any) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x1195) "error"
            (any_to_js x1196)
    let (get_suppressed : 'tags this -> any) =
      fun (x1198 : 'tags this) ->
        any_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x1198) "suppressed")
    let (set_suppressed : 'tags this -> any -> unit) =
      fun (x1200 : 'tags this) ->
        fun (x1201 : any) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x1200) "suppressed"
            (any_to_js x1201)
    let (create :
      error:any -> suppressed:any -> ?message:string -> unit -> t) =
      fun ~error:(x1203 : any) ->
        fun ~suppressed:(x1204 : any) ->
          fun ?message:(x1205 : string option) ->
            fun () ->
              t_of_js
                (Ojs.new_obj_arr
                   (Ojs.get_prop_ascii Ojs.global "SuppressedError")
                   (let x1206 =
                      Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                        [||] in
                    ignore (Ojs.call x1206 "push" [|(any_to_js x1203)|]);
                    ignore (Ojs.call x1206 "push" [|(any_to_js x1204)|]);
                    (match x1205 with
                     | Some x1207 ->
                         ignore
                           (Ojs.call x1206 "push"
                              [|(Ojs.string_to_js x1207)|])
                     | None -> ());
                    x1206))
    let (invoke :
      error:any -> suppressed:any -> ?message:string -> unit -> t) =
      fun ~error:(x1208 : any) ->
        fun ~suppressed:(x1209 : any) ->
          fun ?message:(x1210 : string option) ->
            fun () ->
              t_of_js
                (Ojs.call (Ojs.get_prop_ascii Ojs.global "SuppressedError")
                   "apply"
                   [|Ojs.null;((let x1211 =
                                  Ojs.new_obj
                                    (Ojs.get_prop_ascii Ojs.global "Array")
                                    [||] in
                                ignore
                                  (Ojs.call x1211 "push"
                                     [|(any_to_js x1208)|]);
                                ignore
                                  (Ojs.call x1211 "push"
                                     [|(any_to_js x1209)|]);
                                (match x1210 with
                                 | Some x1212 ->
                                     ignore
                                       (Ojs.call x1211 "push"
                                          [|(Ojs.string_to_js x1212)|])
                                 | None -> ());
                                x1211))|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "SuppressedError") "prototype")
    let (create' : error:any -> suppressed:any -> unit -> t) =
      fun ~error:(x1213 : any) ->
        fun ~suppressed:(x1214 : any) ->
          fun () ->
            let x1215 = Ojs.empty_obj () in
            Ojs.set_prop_ascii x1215 "error" (any_to_js x1213);
            Ojs.set_prop_ascii x1215 "suppressed" (any_to_js x1214);
            t_of_js x1215
    let cast_from = Obj.magic
  end
module Array =
  struct
    type 'T t = [ `Array of 'T ] intf
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun _T -> Obj.magic
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun _T -> Obj.magic
    type 'T tags = [ `Array of 'T ]
    type ('tags, 'T) this = 'tags intf constraint 'tags = [> `Array of 'T ]
    let rec this_of_js :
      'tags 'T .
        (Ojs.t -> 'tags) -> (Ojs.t -> 'T) -> Ojs.t -> ('tags, 'T) this
      =
      fun (type __tags) ->
        fun (type __T) ->
          fun (__tags_of_js : Ojs.t -> __tags) ->
            fun (__T_of_js : Ojs.t -> __T) ->
              fun (x1218 : Ojs.t) -> intf_of_js __tags_of_js x1218
    and this_to_js :
      'tags 'T .
        ('tags -> Ojs.t) -> ('T -> Ojs.t) -> ('tags, 'T) this -> Ojs.t
      =
      fun (type __tags) ->
        fun (type __T) ->
          fun (__tags_to_js : __tags -> Ojs.t) ->
            fun (__T_to_js : __T -> Ojs.t) ->
              fun (x1216 : __tags intf) -> intf_to_js __tags_to_js x1216
    let (at : ('tags, 'T) this -> index:float -> 'T option) =
      fun (x1221 : ('tags, 'T) this) ->
        fun ~index:(x1220 : float) ->
          Ojs.option_of_js Obj.magic
            (Ojs.call (this_to_js Obj.magic Obj.magic x1221) "at"
               [|(Ojs.float_to_js x1220)|])
    let (findLast :
      ('tags, 'T) this ->
        predicate:(value:'T -> index:float -> array:'T list -> bool) ->
          ?thisArg:any -> unit -> 'S option)
      =
      fun (x1233 : ('tags, 'T) this) ->
        fun
          ~predicate:(x1225 :
                       value:'T -> index:float -> array:'T list -> bool)
          ->
          fun ?thisArg:(x1226 : any option) ->
            fun () ->
              Ojs.option_of_js Obj.magic
                (let x1236 = this_to_js Obj.magic Obj.magic x1233 in
                 Ojs.call (Ojs.get_prop_ascii x1236 "findLast") "apply"
                   [|x1236;((let x1227 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1227 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x1229 : Ojs.t) ->
                                          fun (x1230 : Ojs.t) ->
                                            fun (x1231 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x1225
                                                   ~value:(Obj.magic x1229)
                                                   ~index:(Ojs.float_of_js
                                                             x1230)
                                                   ~array:(Ojs.list_of_js
                                                             Obj.magic x1231))))|]);
                             (match x1226 with
                              | Some x1228 ->
                                  ignore
                                    (Ojs.call x1227 "push"
                                       [|(any_to_js x1228)|])
                              | None -> ());
                             x1227))|])
    let (findLast' :
      ('tags, 'T) this ->
        predicate:(value:'T -> index:float -> array:'T list -> unknown) ->
          ?thisArg:any -> unit -> 'T option)
      =
      fun (x1246 : ('tags, 'T) this) ->
        fun
          ~predicate:(x1238 :
                       value:'T -> index:float -> array:'T list -> unknown)
          ->
          fun ?thisArg:(x1239 : any option) ->
            fun () ->
              Ojs.option_of_js Obj.magic
                (let x1249 = this_to_js Obj.magic Obj.magic x1246 in
                 Ojs.call (Ojs.get_prop_ascii x1249 "findLast") "apply"
                   [|x1249;((let x1240 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1240 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x1242 : Ojs.t) ->
                                          fun (x1243 : Ojs.t) ->
                                            fun (x1244 : Ojs.t) ->
                                              unknown_to_js
                                                (x1238
                                                   ~value:(Obj.magic x1242)
                                                   ~index:(Ojs.float_of_js
                                                             x1243)
                                                   ~array:(Ojs.list_of_js
                                                             Obj.magic x1244))))|]);
                             (match x1239 with
                              | Some x1241 ->
                                  ignore
                                    (Ojs.call x1240 "push"
                                       [|(any_to_js x1241)|])
                              | None -> ());
                             x1240))|])
    let (findLastIndex :
      ('tags, 'T) this ->
        predicate:(value:'T -> index:float -> array:'T list -> unknown) ->
          ?thisArg:any -> unit -> float)
      =
      fun (x1259 : ('tags, 'T) this) ->
        fun
          ~predicate:(x1251 :
                       value:'T -> index:float -> array:'T list -> unknown)
          ->
          fun ?thisArg:(x1252 : any option) ->
            fun () ->
              Ojs.float_of_js
                (let x1262 = this_to_js Obj.magic Obj.magic x1259 in
                 Ojs.call (Ojs.get_prop_ascii x1262 "findLastIndex") "apply"
                   [|x1262;((let x1253 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1253 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x1255 : Ojs.t) ->
                                          fun (x1256 : Ojs.t) ->
                                            fun (x1257 : Ojs.t) ->
                                              unknown_to_js
                                                (x1251
                                                   ~value:(Obj.magic x1255)
                                                   ~index:(Ojs.float_of_js
                                                             x1256)
                                                   ~array:(Ojs.list_of_js
                                                             Obj.magic x1257))))|]);
                             (match x1252 with
                              | Some x1254 ->
                                  ignore
                                    (Ojs.call x1253 "push"
                                       [|(any_to_js x1254)|])
                              | None -> ());
                             x1253))|])
    let (toReversed : ('tags, 'T) this -> 'T list) =
      fun (x1263 : ('tags, 'T) this) ->
        Ojs.list_of_js Obj.magic
          (Ojs.call (this_to_js Obj.magic Obj.magic x1263) "toReversed" [||])
    let (toSorted :
      ('tags, 'T) this ->
        ?compareFn:(a:'T -> b:'T -> float) -> unit -> 'T list)
      =
      fun (x1272 : ('tags, 'T) this) ->
        fun ?compareFn:(x1267 : (a:'T -> b:'T -> float) option) ->
          fun () ->
            Ojs.list_of_js Obj.magic
              (let x1275 = this_to_js Obj.magic Obj.magic x1272 in
               Ojs.call (Ojs.get_prop_ascii x1275 "toSorted") "apply"
                 [|x1275;((let x1268 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x1267 with
                            | Some x1269 ->
                                ignore
                                  (Ojs.call x1268 "push"
                                     [|(Ojs.fun_to_js 2
                                          (fun (x1270 : Ojs.t) ->
                                             fun (x1271 : Ojs.t) ->
                                               Ojs.float_to_js
                                                 (x1269 ~a:(Obj.magic x1270)
                                                    ~b:(Obj.magic x1271))))|])
                            | None -> ());
                           x1268))|])
    let (toSpliced :
      ('tags, 'T) this ->
        start:float -> deleteCount:float -> items:'T list -> 'T list)
      =
      fun (x1282 : ('tags, 'T) this) ->
        fun ~start:(x1277 : float) ->
          fun ~deleteCount:(x1278 : float) ->
            fun ~items:(x1279 : 'T list) ->
              Ojs.list_of_js Obj.magic
                (let x1285 = this_to_js Obj.magic Obj.magic x1282 in
                 Ojs.call (Ojs.get_prop_ascii x1285 "toSpliced") "apply"
                   [|x1285;((let x1280 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1280 "push"
                                  [|(Ojs.float_to_js x1277)|]);
                             ignore
                               (Ojs.call x1280 "push"
                                  [|(Ojs.float_to_js x1278)|]);
                             List.iter
                               (fun (x1281 : 'T) ->
                                  ignore
                                    (Ojs.call x1280 "push"
                                       [|(Obj.magic x1281)|])) x1279;
                             x1280))|])
    let (toSpliced' :
      ('tags, 'T) this ->
        start:float -> ?deleteCount:float -> unit -> 'T list)
      =
      fun (x1291 : ('tags, 'T) this) ->
        fun ~start:(x1287 : float) ->
          fun ?deleteCount:(x1288 : float option) ->
            fun () ->
              Ojs.list_of_js Obj.magic
                (let x1294 = this_to_js Obj.magic Obj.magic x1291 in
                 Ojs.call (Ojs.get_prop_ascii x1294 "toSpliced") "apply"
                   [|x1294;((let x1289 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1289 "push"
                                  [|(Ojs.float_to_js x1287)|]);
                             (match x1288 with
                              | Some x1290 ->
                                  ignore
                                    (Ojs.call x1289 "push"
                                       [|(Ojs.float_to_js x1290)|])
                              | None -> ());
                             x1289))|])
    let (with_ : ('tags, 'T) this -> index:float -> value:'T -> 'T list) =
      fun (x1298 : ('tags, 'T) this) ->
        fun ~index:(x1296 : float) ->
          fun ~value:(x1297 : 'T) ->
            Ojs.list_of_js Obj.magic
              (Ojs.call (this_to_js Obj.magic Obj.magic x1298) "with"
                 [|(Ojs.float_to_js x1296);(Obj.magic x1297)|])
    let (flatMap :
      ('tags, 'T) this ->
        callback:(this:'This ->
                    value:'T ->
                      index:float ->
                        array:'T list ->
                          [ `U1 of 'U  | `U2 of 'U ReadonlyArray.t ])
          -> ?thisArg:'This -> unit -> 'U list)
      =
      fun (x1314 : ('tags, 'T) this) ->
        fun
          ~callback:(x1302 :
                      this:'This ->
                        value:'T ->
                          index:float ->
                            array:'T list ->
                              [ `U1 of 'U  | `U2 of 'U ReadonlyArray.t ])
          ->
          fun ?thisArg:(x1303 : 'This option) ->
            fun () ->
              Ojs.list_of_js Obj.magic
                (let x1317 = this_to_js Obj.magic Obj.magic x1314 in
                 Ojs.call (Ojs.get_prop_ascii x1317 "flatMap") "apply"
                   [|x1317;((let x1304 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1304 "push"
                                  [|(Ojs.fun_to_js 4
                                       (fun (x1306 : Ojs.t) ->
                                          fun (x1307 : Ojs.t) ->
                                            fun (x1308 : Ojs.t) ->
                                              fun (x1309 : Ojs.t) ->
                                                match x1302
                                                        ~this:(Obj.magic
                                                                 x1306)
                                                        ~value:(Obj.magic
                                                                  x1307)
                                                        ~index:(Ojs.float_of_js
                                                                  x1308)
                                                        ~array:(Ojs.list_of_js
                                                                  Obj.magic
                                                                  x1309)
                                                with
                                                | `U1 x1311 ->
                                                    Obj.magic x1311
                                                | `U2 x1312 ->
                                                    ReadonlyArray.t_to_js
                                                      Obj.magic x1312))|]);
                             (match x1303 with
                              | Some x1305 ->
                                  ignore
                                    (Ojs.call x1304 "push"
                                       [|(Obj.magic x1305)|])
                              | None -> ());
                             x1304))|])
    let (flat :
      ('tags, 'T) this ->
        this:'A -> ?depth:'D -> unit -> ('A, 'D) FlatArray.t list)
      =
      fun (x1323 : ('tags, 'T) this) ->
        fun ~this:(x1319 : 'A) ->
          fun ?depth:(x1320 : 'D option) ->
            fun () ->
              Ojs.list_of_js
                (fun (x1327 : Ojs.t) ->
                   FlatArray.t_of_js Obj.magic Obj.magic x1327)
                (let x1326 = this_to_js Obj.magic Obj.magic x1323 in
                 Ojs.call (Ojs.get_prop_ascii x1326 "flat") "apply"
                   [|x1326;((let x1321 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1321 "push" [|(Obj.magic x1319)|]);
                             (match x1320 with
                              | Some x1322 ->
                                  ignore
                                    (Ojs.call x1321 "push"
                                       [|(Obj.magic x1322)|])
                              | None -> ());
                             x1321))|])
    let (includes :
      ('tags, 'T) this ->
        searchElement:'T -> ?fromIndex:float -> unit -> bool)
      =
      fun (x1334 : ('tags, 'T) this) ->
        fun ~searchElement:(x1330 : 'T) ->
          fun ?fromIndex:(x1331 : float option) ->
            fun () ->
              Ojs.bool_of_js
                (let x1337 = this_to_js Obj.magic Obj.magic x1334 in
                 Ojs.call (Ojs.get_prop_ascii x1337 "includes") "apply"
                   [|x1337;((let x1332 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1332 "push" [|(Obj.magic x1330)|]);
                             (match x1331 with
                              | Some x1333 ->
                                  ignore
                                    (Ojs.call x1332 "push"
                                       [|(Ojs.float_to_js x1333)|])
                              | None -> ());
                             x1332))|])
    let (entries : ('tags, 'T) this -> (float * 'T) IterableIterator.t) =
      fun (x1338 : ('tags, 'T) this) ->
        IterableIterator.t_of_js
          (fun (x1341 : Ojs.t) ->
             let x1342 = x1341 in
             ((Ojs.float_of_js (Ojs.array_get x1342 0)),
               (Obj.magic (Ojs.array_get x1342 1))))
          (Ojs.call (this_to_js Obj.magic Obj.magic x1338) "entries" [||])
    let (keys : ('tags, 'T) this -> float IterableIterator.t) =
      fun (x1343 : ('tags, 'T) this) ->
        IterableIterator.t_of_js Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic Obj.magic x1343) "keys" [||])
    let (values : ('tags, 'T) this -> 'T IterableIterator.t) =
      fun (x1347 : ('tags, 'T) this) ->
        IterableIterator.t_of_js Obj.magic
          (Ojs.call (this_to_js Obj.magic Obj.magic x1347) "values" [||])
    let (find :
      ('tags, 'T) this ->
        predicate:(value:'T -> index:float -> obj:'T list -> bool) ->
          ?thisArg:any -> unit -> 'S option)
      =
      fun (x1359 : ('tags, 'T) this) ->
        fun
          ~predicate:(x1351 : value:'T -> index:float -> obj:'T list -> bool)
          ->
          fun ?thisArg:(x1352 : any option) ->
            fun () ->
              Ojs.option_of_js Obj.magic
                (let x1362 = this_to_js Obj.magic Obj.magic x1359 in
                 Ojs.call (Ojs.get_prop_ascii x1362 "find") "apply"
                   [|x1362;((let x1353 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1353 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x1355 : Ojs.t) ->
                                          fun (x1356 : Ojs.t) ->
                                            fun (x1357 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x1351
                                                   ~value:(Obj.magic x1355)
                                                   ~index:(Ojs.float_of_js
                                                             x1356)
                                                   ~obj:(Ojs.list_of_js
                                                           Obj.magic x1357))))|]);
                             (match x1352 with
                              | Some x1354 ->
                                  ignore
                                    (Ojs.call x1353 "push"
                                       [|(any_to_js x1354)|])
                              | None -> ());
                             x1353))|])
    let (find' :
      ('tags, 'T) this ->
        predicate:(value:'T -> index:float -> obj:'T list -> unknown) ->
          ?thisArg:any -> unit -> 'T option)
      =
      fun (x1372 : ('tags, 'T) this) ->
        fun
          ~predicate:(x1364 :
                       value:'T -> index:float -> obj:'T list -> unknown)
          ->
          fun ?thisArg:(x1365 : any option) ->
            fun () ->
              Ojs.option_of_js Obj.magic
                (let x1375 = this_to_js Obj.magic Obj.magic x1372 in
                 Ojs.call (Ojs.get_prop_ascii x1375 "find") "apply"
                   [|x1375;((let x1366 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1366 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x1368 : Ojs.t) ->
                                          fun (x1369 : Ojs.t) ->
                                            fun (x1370 : Ojs.t) ->
                                              unknown_to_js
                                                (x1364
                                                   ~value:(Obj.magic x1368)
                                                   ~index:(Ojs.float_of_js
                                                             x1369)
                                                   ~obj:(Ojs.list_of_js
                                                           Obj.magic x1370))))|]);
                             (match x1365 with
                              | Some x1367 ->
                                  ignore
                                    (Ojs.call x1366 "push"
                                       [|(any_to_js x1367)|])
                              | None -> ());
                             x1366))|])
    let (findIndex :
      ('tags, 'T) this ->
        predicate:(value:'T -> index:float -> obj:'T list -> unknown) ->
          ?thisArg:any -> unit -> float)
      =
      fun (x1385 : ('tags, 'T) this) ->
        fun
          ~predicate:(x1377 :
                       value:'T -> index:float -> obj:'T list -> unknown)
          ->
          fun ?thisArg:(x1378 : any option) ->
            fun () ->
              Ojs.float_of_js
                (let x1388 = this_to_js Obj.magic Obj.magic x1385 in
                 Ojs.call (Ojs.get_prop_ascii x1388 "findIndex") "apply"
                   [|x1388;((let x1379 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1379 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x1381 : Ojs.t) ->
                                          fun (x1382 : Ojs.t) ->
                                            fun (x1383 : Ojs.t) ->
                                              unknown_to_js
                                                (x1377
                                                   ~value:(Obj.magic x1381)
                                                   ~index:(Ojs.float_of_js
                                                             x1382)
                                                   ~obj:(Ojs.list_of_js
                                                           Obj.magic x1383))))|]);
                             (match x1378 with
                              | Some x1380 ->
                                  ignore
                                    (Ojs.call x1379 "push"
                                       [|(any_to_js x1380)|])
                              | None -> ());
                             x1379))|])
    let (fill :
      ('tags, 'T) this ->
        value:'T -> ?start:float -> ?end_:float -> unit -> ('tags, 'T) this)
      =
      fun (x1395 : ('tags, 'T) this) ->
        fun ~value:(x1389 : 'T) ->
          fun ?start:(x1390 : float option) ->
            fun ?end_:(x1391 : float option) ->
              fun () ->
                this_of_js Obj.magic Obj.magic
                  (let x1398 = this_to_js Obj.magic Obj.magic x1395 in
                   Ojs.call (Ojs.get_prop_ascii x1398 "fill") "apply"
                     [|x1398;((let x1392 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x1392 "push" [|(Obj.magic x1389)|]);
                               (match x1390 with
                                | Some x1394 ->
                                    ignore
                                      (Ojs.call x1392 "push"
                                         [|(Ojs.float_to_js x1394)|])
                                | None -> ());
                               (match x1391 with
                                | Some x1393 ->
                                    ignore
                                      (Ojs.call x1392 "push"
                                         [|(Ojs.float_to_js x1393)|])
                                | None -> ());
                               x1392))|])
    let (copyWithin :
      ('tags, 'T) this ->
        target:float ->
          start:float -> ?end_:float -> unit -> ('tags, 'T) this)
      =
      fun (x1406 : ('tags, 'T) this) ->
        fun ~target:(x1401 : float) ->
          fun ~start:(x1402 : float) ->
            fun ?end_:(x1403 : float option) ->
              fun () ->
                this_of_js Obj.magic Obj.magic
                  (let x1409 = this_to_js Obj.magic Obj.magic x1406 in
                   Ojs.call (Ojs.get_prop_ascii x1409 "copyWithin") "apply"
                     [|x1409;((let x1404 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x1404 "push"
                                    [|(Ojs.float_to_js x1401)|]);
                               ignore
                                 (Ojs.call x1404 "push"
                                    [|(Ojs.float_to_js x1402)|]);
                               (match x1403 with
                                | Some x1405 ->
                                    ignore
                                      (Ojs.call x1404 "push"
                                         [|(Ojs.float_to_js x1405)|])
                                | None -> ());
                               x1404))|])
    let (get_length : ('tags, 'T) this -> float) =
      fun (x1412 : ('tags, 'T) this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic Obj.magic x1412) "length")
    let (set_length : ('tags, 'T) this -> float -> unit) =
      fun (x1415 : ('tags, 'T) this) ->
        fun (x1416 : float) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic Obj.magic x1415) "length"
            (Ojs.float_to_js x1416)
    let (toString : ('tags, 'T) this -> string) =
      fun (x1419 : ('tags, 'T) this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic Obj.magic x1419) "toString" [||])
    let (toLocaleString : ('tags, 'T) this -> string) =
      fun (x1422 : ('tags, 'T) this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic Obj.magic x1422) "toLocaleString"
             [||])
    let (pop : ('tags, 'T) this -> 'T option) =
      fun (x1425 : ('tags, 'T) this) ->
        Ojs.option_of_js Obj.magic
          (Ojs.call (this_to_js Obj.magic Obj.magic x1425) "pop" [||])
    let (push : ('tags, 'T) this -> items:'T list -> float) =
      fun (x1432 : ('tags, 'T) this) ->
        fun ~items:(x1429 : 'T list) ->
          Ojs.float_of_js
            (let x1435 = this_to_js Obj.magic Obj.magic x1432 in
             Ojs.call (Ojs.get_prop_ascii x1435 "push") "apply"
               [|x1435;((let x1430 =
                           Ojs.new_obj
                             (Ojs.get_prop_ascii Ojs.global "Array") 
                             [||] in
                         List.iter
                           (fun (x1431 : 'T) ->
                              ignore
                                (Ojs.call x1430 "push" [|(Obj.magic x1431)|]))
                           x1429;
                         x1430))|])
    let (concat : ('tags, 'T) this -> items:'T ConcatArray.t list -> 'T list)
      =
      fun (x1440 : ('tags, 'T) this) ->
        fun ~items:(x1436 : 'T ConcatArray.t list) ->
          Ojs.list_of_js Obj.magic
            (let x1443 = this_to_js Obj.magic Obj.magic x1440 in
             Ojs.call (Ojs.get_prop_ascii x1443 "concat") "apply"
               [|x1443;((let x1437 =
                           Ojs.new_obj
                             (Ojs.get_prop_ascii Ojs.global "Array") 
                             [||] in
                         List.iter
                           (fun (x1438 : 'T ConcatArray.t) ->
                              ignore
                                (Ojs.call x1437 "push"
                                   [|(ConcatArray.t_to_js Obj.magic x1438)|]))
                           x1436;
                         x1437))|])
    let (concat' :
      ('tags, 'T) this ->
        items:[ `U1 of 'T  | `U2 of 'T ConcatArray.t ] list -> 'T list)
      =
      fun (x1451 : ('tags, 'T) this) ->
        fun ~items:(x1445 : [ `U1 of 'T  | `U2 of 'T ConcatArray.t ] list) ->
          Ojs.list_of_js Obj.magic
            (let x1454 = this_to_js Obj.magic Obj.magic x1451 in
             Ojs.call (Ojs.get_prop_ascii x1454 "concat") "apply"
               [|x1454;((let x1446 =
                           Ojs.new_obj
                             (Ojs.get_prop_ascii Ojs.global "Array") 
                             [||] in
                         List.iter
                           (fun
                              (x1447 :
                                [ `U1 of 'T  | `U2 of 'T ConcatArray.t ])
                              ->
                              ignore
                                (Ojs.call x1446 "push"
                                   [|((match x1447 with
                                       | `U1 x1448 -> Obj.magic x1448
                                       | `U2 x1449 ->
                                           ConcatArray.t_to_js Obj.magic
                                             x1449))|])) x1445;
                         x1446))|])
    let (join : ('tags, 'T) this -> ?separator:string -> unit -> string) =
      fun (x1459 : ('tags, 'T) this) ->
        fun ?separator:(x1456 : string option) ->
          fun () ->
            Ojs.string_of_js
              (let x1462 = this_to_js Obj.magic Obj.magic x1459 in
               Ojs.call (Ojs.get_prop_ascii x1462 "join") "apply"
                 [|x1462;((let x1457 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x1456 with
                            | Some x1458 ->
                                ignore
                                  (Ojs.call x1457 "push"
                                     [|(Ojs.string_to_js x1458)|])
                            | None -> ());
                           x1457))|])
    let (reverse : ('tags, 'T) this -> 'T list) =
      fun (x1463 : ('tags, 'T) this) ->
        Ojs.list_of_js Obj.magic
          (Ojs.call (this_to_js Obj.magic Obj.magic x1463) "reverse" [||])
    let (shift : ('tags, 'T) this -> 'T option) =
      fun (x1467 : ('tags, 'T) this) ->
        Ojs.option_of_js Obj.magic
          (Ojs.call (this_to_js Obj.magic Obj.magic x1467) "shift" [||])
    let (slice :
      ('tags, 'T) this -> ?start:float -> ?end_:float -> unit -> 'T list) =
      fun (x1476 : ('tags, 'T) this) ->
        fun ?start:(x1471 : float option) ->
          fun ?end_:(x1472 : float option) ->
            fun () ->
              Ojs.list_of_js Obj.magic
                (let x1479 = this_to_js Obj.magic Obj.magic x1476 in
                 Ojs.call (Ojs.get_prop_ascii x1479 "slice") "apply"
                   [|x1479;((let x1473 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x1471 with
                              | Some x1475 ->
                                  ignore
                                    (Ojs.call x1473 "push"
                                       [|(Ojs.float_to_js x1475)|])
                              | None -> ());
                             (match x1472 with
                              | Some x1474 ->
                                  ignore
                                    (Ojs.call x1473 "push"
                                       [|(Ojs.float_to_js x1474)|])
                              | None -> ());
                             x1473))|])
    let (sort :
      ('tags, 'T) this ->
        ?compareFn:(a:'T -> b:'T -> float) -> unit -> ('tags, 'T) this)
      =
      fun (x1486 : ('tags, 'T) this) ->
        fun ?compareFn:(x1481 : (a:'T -> b:'T -> float) option) ->
          fun () ->
            this_of_js Obj.magic Obj.magic
              (let x1489 = this_to_js Obj.magic Obj.magic x1486 in
               Ojs.call (Ojs.get_prop_ascii x1489 "sort") "apply"
                 [|x1489;((let x1482 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x1481 with
                            | Some x1483 ->
                                ignore
                                  (Ojs.call x1482 "push"
                                     [|(Ojs.fun_to_js 2
                                          (fun (x1484 : Ojs.t) ->
                                             fun (x1485 : Ojs.t) ->
                                               Ojs.float_to_js
                                                 (x1483 ~a:(Obj.magic x1484)
                                                    ~b:(Obj.magic x1485))))|])
                            | None -> ());
                           x1482))|])
    let (splice :
      ('tags, 'T) this ->
        start:float -> ?deleteCount:float -> unit -> 'T list)
      =
      fun (x1496 : ('tags, 'T) this) ->
        fun ~start:(x1492 : float) ->
          fun ?deleteCount:(x1493 : float option) ->
            fun () ->
              Ojs.list_of_js Obj.magic
                (let x1499 = this_to_js Obj.magic Obj.magic x1496 in
                 Ojs.call (Ojs.get_prop_ascii x1499 "splice") "apply"
                   [|x1499;((let x1494 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1494 "push"
                                  [|(Ojs.float_to_js x1492)|]);
                             (match x1493 with
                              | Some x1495 ->
                                  ignore
                                    (Ojs.call x1494 "push"
                                       [|(Ojs.float_to_js x1495)|])
                              | None -> ());
                             x1494))|])
    let (splice' :
      ('tags, 'T) this ->
        start:float -> deleteCount:float -> items:'T list -> 'T list)
      =
      fun (x1506 : ('tags, 'T) this) ->
        fun ~start:(x1501 : float) ->
          fun ~deleteCount:(x1502 : float) ->
            fun ~items:(x1503 : 'T list) ->
              Ojs.list_of_js Obj.magic
                (let x1509 = this_to_js Obj.magic Obj.magic x1506 in
                 Ojs.call (Ojs.get_prop_ascii x1509 "splice") "apply"
                   [|x1509;((let x1504 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1504 "push"
                                  [|(Ojs.float_to_js x1501)|]);
                             ignore
                               (Ojs.call x1504 "push"
                                  [|(Ojs.float_to_js x1502)|]);
                             List.iter
                               (fun (x1505 : 'T) ->
                                  ignore
                                    (Ojs.call x1504 "push"
                                       [|(Obj.magic x1505)|])) x1503;
                             x1504))|])
    let (unshift : ('tags, 'T) this -> items:'T list -> float) =
      fun (x1514 : ('tags, 'T) this) ->
        fun ~items:(x1511 : 'T list) ->
          Ojs.float_of_js
            (let x1517 = this_to_js Obj.magic Obj.magic x1514 in
             Ojs.call (Ojs.get_prop_ascii x1517 "unshift") "apply"
               [|x1517;((let x1512 =
                           Ojs.new_obj
                             (Ojs.get_prop_ascii Ojs.global "Array") 
                             [||] in
                         List.iter
                           (fun (x1513 : 'T) ->
                              ignore
                                (Ojs.call x1512 "push" [|(Obj.magic x1513)|]))
                           x1511;
                         x1512))|])
    let (indexOf :
      ('tags, 'T) this ->
        searchElement:'T -> ?fromIndex:float -> unit -> float)
      =
      fun (x1522 : ('tags, 'T) this) ->
        fun ~searchElement:(x1518 : 'T) ->
          fun ?fromIndex:(x1519 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x1525 = this_to_js Obj.magic Obj.magic x1522 in
                 Ojs.call (Ojs.get_prop_ascii x1525 "indexOf") "apply"
                   [|x1525;((let x1520 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1520 "push" [|(Obj.magic x1518)|]);
                             (match x1519 with
                              | Some x1521 ->
                                  ignore
                                    (Ojs.call x1520 "push"
                                       [|(Ojs.float_to_js x1521)|])
                              | None -> ());
                             x1520))|])
    let (lastIndexOf :
      ('tags, 'T) this ->
        searchElement:'T -> ?fromIndex:float -> unit -> float)
      =
      fun (x1530 : ('tags, 'T) this) ->
        fun ~searchElement:(x1526 : 'T) ->
          fun ?fromIndex:(x1527 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x1533 = this_to_js Obj.magic Obj.magic x1530 in
                 Ojs.call (Ojs.get_prop_ascii x1533 "lastIndexOf") "apply"
                   [|x1533;((let x1528 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1528 "push" [|(Obj.magic x1526)|]);
                             (match x1527 with
                              | Some x1529 ->
                                  ignore
                                    (Ojs.call x1528 "push"
                                       [|(Ojs.float_to_js x1529)|])
                              | None -> ());
                             x1528))|])
    let (every :
      ('tags, 'T) this ->
        predicate:(value:'T -> index:float -> array:'T list -> bool) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x1542 : ('tags, 'T) this) ->
        fun
          ~predicate:(x1534 :
                       value:'T -> index:float -> array:'T list -> bool)
          ->
          fun ?thisArg:(x1535 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x1545 = this_to_js Obj.magic Obj.magic x1542 in
                 Ojs.call (Ojs.get_prop_ascii x1545 "every") "apply"
                   [|x1545;((let x1536 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1536 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x1538 : Ojs.t) ->
                                          fun (x1539 : Ojs.t) ->
                                            fun (x1540 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x1534
                                                   ~value:(Obj.magic x1538)
                                                   ~index:(Ojs.float_of_js
                                                             x1539)
                                                   ~array:(Ojs.list_of_js
                                                             Obj.magic x1540))))|]);
                             (match x1535 with
                              | Some x1537 ->
                                  ignore
                                    (Ojs.call x1536 "push"
                                       [|(any_to_js x1537)|])
                              | None -> ());
                             x1536))|])
    let (every' :
      ('tags, 'T) this ->
        predicate:(value:'T -> index:float -> array:'T list -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x1554 : ('tags, 'T) this) ->
        fun
          ~predicate:(x1546 :
                       value:'T -> index:float -> array:'T list -> unknown)
          ->
          fun ?thisArg:(x1547 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x1557 = this_to_js Obj.magic Obj.magic x1554 in
                 Ojs.call (Ojs.get_prop_ascii x1557 "every") "apply"
                   [|x1557;((let x1548 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1548 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x1550 : Ojs.t) ->
                                          fun (x1551 : Ojs.t) ->
                                            fun (x1552 : Ojs.t) ->
                                              unknown_to_js
                                                (x1546
                                                   ~value:(Obj.magic x1550)
                                                   ~index:(Ojs.float_of_js
                                                             x1551)
                                                   ~array:(Ojs.list_of_js
                                                             Obj.magic x1552))))|]);
                             (match x1547 with
                              | Some x1549 ->
                                  ignore
                                    (Ojs.call x1548 "push"
                                       [|(any_to_js x1549)|])
                              | None -> ());
                             x1548))|])
    let (some :
      ('tags, 'T) this ->
        predicate:(value:'T -> index:float -> array:'T list -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x1566 : ('tags, 'T) this) ->
        fun
          ~predicate:(x1558 :
                       value:'T -> index:float -> array:'T list -> unknown)
          ->
          fun ?thisArg:(x1559 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x1569 = this_to_js Obj.magic Obj.magic x1566 in
                 Ojs.call (Ojs.get_prop_ascii x1569 "some") "apply"
                   [|x1569;((let x1560 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1560 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x1562 : Ojs.t) ->
                                          fun (x1563 : Ojs.t) ->
                                            fun (x1564 : Ojs.t) ->
                                              unknown_to_js
                                                (x1558
                                                   ~value:(Obj.magic x1562)
                                                   ~index:(Ojs.float_of_js
                                                             x1563)
                                                   ~array:(Ojs.list_of_js
                                                             Obj.magic x1564))))|]);
                             (match x1559 with
                              | Some x1561 ->
                                  ignore
                                    (Ojs.call x1560 "push"
                                       [|(any_to_js x1561)|])
                              | None -> ());
                             x1560))|])
    let (forEach :
      ('tags, 'T) this ->
        callbackfn:(value:'T -> index:float -> array:'T list -> unit) ->
          ?thisArg:any -> unit -> unit)
      =
      fun (x1578 : ('tags, 'T) this) ->
        fun
          ~callbackfn:(x1570 :
                        value:'T -> index:float -> array:'T list -> unit)
          ->
          fun ?thisArg:(x1571 : any option) ->
            fun () ->
              ignore
                (let x1581 = this_to_js Obj.magic Obj.magic x1578 in
                 Ojs.call (Ojs.get_prop_ascii x1581 "forEach") "apply"
                   [|x1581;((let x1572 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1572 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x1574 : Ojs.t) ->
                                          fun (x1575 : Ojs.t) ->
                                            fun (x1576 : Ojs.t) ->
                                              x1570 ~value:(Obj.magic x1574)
                                                ~index:(Ojs.float_of_js x1575)
                                                ~array:(Ojs.list_of_js
                                                          Obj.magic x1576)))|]);
                             (match x1571 with
                              | Some x1573 ->
                                  ignore
                                    (Ojs.call x1572 "push"
                                       [|(any_to_js x1573)|])
                              | None -> ());
                             x1572))|])
    let (map :
      ('tags, 'T) this ->
        callbackfn:(value:'T -> index:float -> array:'T list -> 'U) ->
          ?thisArg:any -> unit -> 'U list)
      =
      fun (x1590 : ('tags, 'T) this) ->
        fun
          ~callbackfn:(x1582 :
                        value:'T -> index:float -> array:'T list -> 'U)
          ->
          fun ?thisArg:(x1583 : any option) ->
            fun () ->
              Ojs.list_of_js Obj.magic
                (let x1593 = this_to_js Obj.magic Obj.magic x1590 in
                 Ojs.call (Ojs.get_prop_ascii x1593 "map") "apply"
                   [|x1593;((let x1584 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1584 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x1586 : Ojs.t) ->
                                          fun (x1587 : Ojs.t) ->
                                            fun (x1588 : Ojs.t) ->
                                              Obj.magic
                                                (x1582
                                                   ~value:(Obj.magic x1586)
                                                   ~index:(Ojs.float_of_js
                                                             x1587)
                                                   ~array:(Ojs.list_of_js
                                                             Obj.magic x1588))))|]);
                             (match x1583 with
                              | Some x1585 ->
                                  ignore
                                    (Ojs.call x1584 "push"
                                       [|(any_to_js x1585)|])
                              | None -> ());
                             x1584))|])
    let (filter :
      ('tags, 'T) this ->
        predicate:(value:'T -> index:float -> array:'T list -> bool) ->
          ?thisArg:any -> unit -> 'S list)
      =
      fun (x1603 : ('tags, 'T) this) ->
        fun
          ~predicate:(x1595 :
                       value:'T -> index:float -> array:'T list -> bool)
          ->
          fun ?thisArg:(x1596 : any option) ->
            fun () ->
              Ojs.list_of_js Obj.magic
                (let x1606 = this_to_js Obj.magic Obj.magic x1603 in
                 Ojs.call (Ojs.get_prop_ascii x1606 "filter") "apply"
                   [|x1606;((let x1597 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1597 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x1599 : Ojs.t) ->
                                          fun (x1600 : Ojs.t) ->
                                            fun (x1601 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x1595
                                                   ~value:(Obj.magic x1599)
                                                   ~index:(Ojs.float_of_js
                                                             x1600)
                                                   ~array:(Ojs.list_of_js
                                                             Obj.magic x1601))))|]);
                             (match x1596 with
                              | Some x1598 ->
                                  ignore
                                    (Ojs.call x1597 "push"
                                       [|(any_to_js x1598)|])
                              | None -> ());
                             x1597))|])
    let (filter' :
      ('tags, 'T) this ->
        predicate:(value:'T -> index:float -> array:'T list -> unknown) ->
          ?thisArg:any -> unit -> 'T list)
      =
      fun (x1616 : ('tags, 'T) this) ->
        fun
          ~predicate:(x1608 :
                       value:'T -> index:float -> array:'T list -> unknown)
          ->
          fun ?thisArg:(x1609 : any option) ->
            fun () ->
              Ojs.list_of_js Obj.magic
                (let x1619 = this_to_js Obj.magic Obj.magic x1616 in
                 Ojs.call (Ojs.get_prop_ascii x1619 "filter") "apply"
                   [|x1619;((let x1610 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1610 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x1612 : Ojs.t) ->
                                          fun (x1613 : Ojs.t) ->
                                            fun (x1614 : Ojs.t) ->
                                              unknown_to_js
                                                (x1608
                                                   ~value:(Obj.magic x1612)
                                                   ~index:(Ojs.float_of_js
                                                             x1613)
                                                   ~array:(Ojs.list_of_js
                                                             Obj.magic x1614))))|]);
                             (match x1609 with
                              | Some x1611 ->
                                  ignore
                                    (Ojs.call x1610 "push"
                                       [|(any_to_js x1611)|])
                              | None -> ());
                             x1610))|])
    let (reduce :
      ('tags, 'T) this ->
        callbackfn:(previousValue:'T ->
                      currentValue:'T ->
                        currentIndex:float -> array:'T list -> 'T)
          -> 'T)
      =
      fun (x1627 : ('tags, 'T) this) ->
        fun
          ~callbackfn:(x1621 :
                        previousValue:'T ->
                          currentValue:'T ->
                            currentIndex:float -> array:'T list -> 'T)
          ->
          Obj.magic
            (Ojs.call (this_to_js Obj.magic Obj.magic x1627) "reduce"
               [|(Ojs.fun_to_js 4
                    (fun (x1622 : Ojs.t) ->
                       fun (x1623 : Ojs.t) ->
                         fun (x1624 : Ojs.t) ->
                           fun (x1625 : Ojs.t) ->
                             Obj.magic
                               (x1621 ~previousValue:(Obj.magic x1622)
                                  ~currentValue:(Obj.magic x1623)
                                  ~currentIndex:(Ojs.float_of_js x1624)
                                  ~array:(Ojs.list_of_js Obj.magic x1625))))|])
    let (reduce' :
      ('tags, 'T) this ->
        callbackfn:(previousValue:'T ->
                      currentValue:'T ->
                        currentIndex:float -> array:'T list -> 'T)
          -> initialValue:'T -> 'T)
      =
      fun (x1637 : ('tags, 'T) this) ->
        fun
          ~callbackfn:(x1630 :
                        previousValue:'T ->
                          currentValue:'T ->
                            currentIndex:float -> array:'T list -> 'T)
          ->
          fun ~initialValue:(x1636 : 'T) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic Obj.magic x1637) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x1631 : Ojs.t) ->
                         fun (x1632 : Ojs.t) ->
                           fun (x1633 : Ojs.t) ->
                             fun (x1634 : Ojs.t) ->
                               Obj.magic
                                 (x1630 ~previousValue:(Obj.magic x1631)
                                    ~currentValue:(Obj.magic x1632)
                                    ~currentIndex:(Ojs.float_of_js x1633)
                                    ~array:(Ojs.list_of_js Obj.magic x1634))));(
                   Obj.magic x1636)|])
    let (reduce'' :
      ('tags, 'T) this ->
        callbackfn:(previousValue:'U ->
                      currentValue:'T ->
                        currentIndex:float -> array:'T list -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x1647 : ('tags, 'T) this) ->
        fun
          ~callbackfn:(x1640 :
                        previousValue:'U ->
                          currentValue:'T ->
                            currentIndex:float -> array:'T list -> 'U)
          ->
          fun ~initialValue:(x1646 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic Obj.magic x1647) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x1641 : Ojs.t) ->
                         fun (x1642 : Ojs.t) ->
                           fun (x1643 : Ojs.t) ->
                             fun (x1644 : Ojs.t) ->
                               Obj.magic
                                 (x1640 ~previousValue:(Obj.magic x1641)
                                    ~currentValue:(Obj.magic x1642)
                                    ~currentIndex:(Ojs.float_of_js x1643)
                                    ~array:(Ojs.list_of_js Obj.magic x1644))));(
                   Obj.magic x1646)|])
    let (reduceRight :
      ('tags, 'T) this ->
        callbackfn:(previousValue:'T ->
                      currentValue:'T ->
                        currentIndex:float -> array:'T list -> 'T)
          -> 'T)
      =
      fun (x1656 : ('tags, 'T) this) ->
        fun
          ~callbackfn:(x1650 :
                        previousValue:'T ->
                          currentValue:'T ->
                            currentIndex:float -> array:'T list -> 'T)
          ->
          Obj.magic
            (Ojs.call (this_to_js Obj.magic Obj.magic x1656) "reduceRight"
               [|(Ojs.fun_to_js 4
                    (fun (x1651 : Ojs.t) ->
                       fun (x1652 : Ojs.t) ->
                         fun (x1653 : Ojs.t) ->
                           fun (x1654 : Ojs.t) ->
                             Obj.magic
                               (x1650 ~previousValue:(Obj.magic x1651)
                                  ~currentValue:(Obj.magic x1652)
                                  ~currentIndex:(Ojs.float_of_js x1653)
                                  ~array:(Ojs.list_of_js Obj.magic x1654))))|])
    let (reduceRight' :
      ('tags, 'T) this ->
        callbackfn:(previousValue:'T ->
                      currentValue:'T ->
                        currentIndex:float -> array:'T list -> 'T)
          -> initialValue:'T -> 'T)
      =
      fun (x1666 : ('tags, 'T) this) ->
        fun
          ~callbackfn:(x1659 :
                        previousValue:'T ->
                          currentValue:'T ->
                            currentIndex:float -> array:'T list -> 'T)
          ->
          fun ~initialValue:(x1665 : 'T) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic Obj.magic x1666) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x1660 : Ojs.t) ->
                         fun (x1661 : Ojs.t) ->
                           fun (x1662 : Ojs.t) ->
                             fun (x1663 : Ojs.t) ->
                               Obj.magic
                                 (x1659 ~previousValue:(Obj.magic x1660)
                                    ~currentValue:(Obj.magic x1661)
                                    ~currentIndex:(Ojs.float_of_js x1662)
                                    ~array:(Ojs.list_of_js Obj.magic x1663))));(
                   Obj.magic x1665)|])
    let (reduceRight'' :
      ('tags, 'T) this ->
        callbackfn:(previousValue:'U ->
                      currentValue:'T ->
                        currentIndex:float -> array:'T list -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x1676 : ('tags, 'T) this) ->
        fun
          ~callbackfn:(x1669 :
                        previousValue:'U ->
                          currentValue:'T ->
                            currentIndex:float -> array:'T list -> 'U)
          ->
          fun ~initialValue:(x1675 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic Obj.magic x1676) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x1670 : Ojs.t) ->
                         fun (x1671 : Ojs.t) ->
                           fun (x1672 : Ojs.t) ->
                             fun (x1673 : Ojs.t) ->
                               Obj.magic
                                 (x1669 ~previousValue:(Obj.magic x1670)
                                    ~currentValue:(Obj.magic x1671)
                                    ~currentIndex:(Ojs.float_of_js x1672)
                                    ~array:(Ojs.list_of_js Obj.magic x1673))));(
                   Obj.magic x1675)|])
    let (get : ('tags, 'T) this -> float -> 'T) =
      fun (x1679 : ('tags, 'T) this) ->
        fun (x1682 : float) ->
          Obj.magic
            (Ojs.get_prop (this_to_js Obj.magic Obj.magic x1679)
               (Ojs.float_to_js x1682))
    let (set : ('tags, 'T) this -> float -> 'T -> unit) =
      fun (x1683 : ('tags, 'T) this) ->
        fun (x1686 : float) ->
          fun (x1687 : 'T) ->
            Ojs.set_prop (this_to_js Obj.magic Obj.magic x1683)
              (Ojs.float_to_js x1686) (Obj.magic x1687)
    let (from : [ `U1 of 'T Iterable.t  | `U2 of 'T ArrayLike.t ] -> 'T list)
      =
      fun (x1688 : [ `U1 of 'T Iterable.t  | `U2 of 'T ArrayLike.t ]) ->
        Ojs.list_of_js Obj.magic
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Array") "from"
             [|((match x1688 with
                 | `U1 x1689 -> Iterable.t_to_js Obj.magic x1689
                 | `U2 x1691 -> ArrayLike.t_to_js Obj.magic x1691))|])
    let (from' :
      iterable:[ `U1 of 'T Iterable.t  | `U2 of 'T ArrayLike.t ] ->
        mapfn:(v:'T -> k:float -> 'U) -> ?thisArg:any -> unit -> 'U list)
      =
      fun
        ~iterable:(x1694 : [ `U1 of 'T Iterable.t  | `U2 of 'T ArrayLike.t ])
        ->
        fun ~mapfn:(x1695 : v:'T -> k:float -> 'U) ->
          fun ?thisArg:(x1696 : any option) ->
            fun () ->
              Ojs.list_of_js Obj.magic
                (let x1705 = Ojs.get_prop_ascii Ojs.global "Array" in
                 Ojs.call (Ojs.get_prop_ascii x1705 "from") "apply"
                   [|x1705;((let x1697 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1697 "push"
                                  [|((match x1694 with
                                      | `U1 x1701 ->
                                          Iterable.t_to_js Obj.magic x1701
                                      | `U2 x1703 ->
                                          ArrayLike.t_to_js Obj.magic x1703))|]);
                             ignore
                               (Ojs.call x1697 "push"
                                  [|(Ojs.fun_to_js 2
                                       (fun (x1699 : Ojs.t) ->
                                          fun (x1700 : Ojs.t) ->
                                            Obj.magic
                                              (x1695 ~v:(Obj.magic x1699)
                                                 ~k:(Ojs.float_of_js x1700))))|]);
                             (match x1696 with
                              | Some x1698 ->
                                  ignore
                                    (Ojs.call x1697 "push"
                                       [|(any_to_js x1698)|])
                              | None -> ());
                             x1697))|])
    let (from'' : 'T ArrayLike.t -> 'T list) =
      fun (x1707 : 'T ArrayLike.t) ->
        Ojs.list_of_js Obj.magic
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Array") "from"
             [|(ArrayLike.t_to_js Obj.magic x1707)|])
    let (from''' :
      arrayLike:'T ArrayLike.t ->
        mapfn:(v:'T -> k:float -> 'U) -> ?thisArg:any -> unit -> 'U list)
      =
      fun ~arrayLike:(x1710 : 'T ArrayLike.t) ->
        fun ~mapfn:(x1711 : v:'T -> k:float -> 'U) ->
          fun ?thisArg:(x1712 : any option) ->
            fun () ->
              Ojs.list_of_js Obj.magic
                (let x1718 = Ojs.get_prop_ascii Ojs.global "Array" in
                 Ojs.call (Ojs.get_prop_ascii x1718 "from") "apply"
                   [|x1718;((let x1713 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1713 "push"
                                  [|(ArrayLike.t_to_js Obj.magic x1710)|]);
                             ignore
                               (Ojs.call x1713 "push"
                                  [|(Ojs.fun_to_js 2
                                       (fun (x1715 : Ojs.t) ->
                                          fun (x1716 : Ojs.t) ->
                                            Obj.magic
                                              (x1711 ~v:(Obj.magic x1715)
                                                 ~k:(Ojs.float_of_js x1716))))|]);
                             (match x1712 with
                              | Some x1714 ->
                                  ignore
                                    (Ojs.call x1713 "push"
                                       [|(any_to_js x1714)|])
                              | None -> ());
                             x1713))|])
    let (of_ : 'T list -> 'T list) =
      fun (x1720 : 'T list) ->
        Ojs.list_of_js Obj.magic
          (let x1723 = Ojs.get_prop_ascii Ojs.global "Array" in
           Ojs.call (Ojs.get_prop_ascii x1723 "of") "apply"
             [|x1723;((let x1721 =
                         Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                           [||] in
                       List.iter
                         (fun (x1722 : 'T) ->
                            ignore
                              (Ojs.call x1721 "push" [|(Obj.magic x1722)|]))
                         x1720;
                       x1721))|])
    let (create : ?arrayLength:float -> unit -> any list) =
      fun ?arrayLength:(x1725 : float option) ->
        fun () ->
          Ojs.list_of_js any_of_js
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "Array")
               (let x1726 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x1725 with
                 | Some x1727 ->
                     ignore
                       (Ojs.call x1726 "push" [|(Ojs.float_to_js x1727)|])
                 | None -> ());
                x1726))
    let (create' : float -> 'T list) =
      fun (x1729 : float) ->
        Ojs.list_of_js Obj.magic
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
             [|(Ojs.float_to_js x1729)|])
    let (create'' : 'T list -> 'T list) =
      fun (x1731 : 'T list) ->
        Ojs.list_of_js Obj.magic
          (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "Array")
             (let x1732 =
                Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
              List.iter
                (fun (x1733 : 'T) ->
                   ignore (Ojs.call x1732 "push" [|(Obj.magic x1733)|]))
                x1731;
              x1732))
    let (invoke : ?arrayLength:float -> unit -> any list) =
      fun ?arrayLength:(x1735 : float option) ->
        fun () ->
          Ojs.list_of_js any_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "Array") "apply"
               [|Ojs.null;((let x1736 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x1735 with
                             | Some x1737 ->
                                 ignore
                                   (Ojs.call x1736 "push"
                                      [|(Ojs.float_to_js x1737)|])
                             | None -> ());
                            x1736))|])
    let (invoke' : float -> 'T list) =
      fun (x1739 : float) ->
        Ojs.list_of_js Obj.magic
          (Ojs.apply (Ojs.get_prop_ascii Ojs.global "Array")
             [|(Ojs.float_to_js x1739)|])
    let (invoke'' : 'T list -> 'T list) =
      fun (x1741 : 'T list) ->
        Ojs.list_of_js Obj.magic
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Array") "apply"
             [|Ojs.null;((let x1742 =
                            Ojs.new_obj
                              (Ojs.get_prop_ascii Ojs.global "Array") 
                              [||] in
                          List.iter
                            (fun (x1743 : 'T) ->
                               ignore
                                 (Ojs.call x1742 "push" [|(Obj.magic x1743)|]))
                            x1741;
                          x1742))|])
    let (isArray : any -> bool) =
      fun (x1745 : any) ->
        Ojs.bool_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Array") "isArray"
             [|(any_to_js x1745)|])
    let (prototype : unit -> any list) =
      fun () ->
        Ojs.list_of_js any_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Array")
             "prototype")
    let cast_from = Obj.magic
    let (of_ml : 'T list -> 'T t) =
      fun (x1747 : 'T list) ->
        t_of_js Obj.magic (Ojs.list_to_js Obj.magic x1747)
    let (to_ml : 'T t -> 'T list) =
      fun (x1750 : 'T t) ->
        Ojs.list_of_js Obj.magic (t_to_js Obj.magic x1750)
  end
module RegExpIndicesArray =
  struct
    module AnonymousInterface20 =
      struct
        type t = Ojs.t
        let rec t_of_js : Ojs.t -> t = fun (x1754 : Ojs.t) -> x1754
        and t_to_js : t -> Ojs.t = fun (x1753 : Ojs.t) -> x1753
        let (get : t -> string -> (float * float)) =
          fun (x1755 : t) ->
            fun (x1756 : string) ->
              let x1757 =
                Ojs.get_prop (t_to_js x1755) (Ojs.string_to_js x1756) in
              ((Ojs.float_of_js (Ojs.array_get x1757 0)),
                (Ojs.float_of_js (Ojs.array_get x1757 1)))
        let (set : t -> string -> (float * float) -> unit) =
          fun (x1758 : t) ->
            fun (x1759 : string) ->
              fun (x1760 : (float * float)) ->
                Ojs.set_prop (t_to_js x1758) (Ojs.string_to_js x1759)
                  (let (x1761, x1762) = x1760 in
                   let x1763 = Ojs.array_make 2 in
                   Ojs.array_set x1763 0 (Ojs.float_to_js x1761);
                   Ojs.array_set x1763 1 (Ojs.float_to_js x1762);
                   x1763)
      end
    type t =
      [ `Array of (float * float)  | `Array of (float * float) 
      | `RegExpIndicesArray ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type tags =
      [ `Array of (float * float)  | `Array of (float * float) 
      | `RegExpIndicesArray ]
    type 'tags this = 'tags intf constraint 'tags = [> `RegExpIndicesArray ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x1766 : Ojs.t) -> intf_of_js __tags_of_js x1766
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x1764 : __tags intf) -> intf_to_js __tags_to_js x1764
    let (get_groups : 'tags this -> AnonymousInterface20.t option) =
      fun (x1768 : 'tags this) ->
        Ojs.option_of_js AnonymousInterface20.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x1768) "groups")
    let (set_groups : 'tags this -> AnonymousInterface20.t -> unit) =
      fun (x1771 : 'tags this) ->
        fun (x1772 : AnonymousInterface20.t) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x1771) "groups"
            (AnonymousInterface20.t_to_js x1772)
    let (create : ?groups:AnonymousInterface20.t -> unit -> t) =
      fun ?groups:(x1774 : AnonymousInterface20.t option) ->
        fun () ->
          let x1775 = Ojs.empty_obj () in
          (match x1774 with
           | Some x1776 ->
               Ojs.set_prop_ascii x1775 "groups"
                 (AnonymousInterface20.t_to_js x1776)
           | None -> ());
          t_of_js x1775
    let cast_from = Obj.magic
  end
module RegExpMatchArray =
  struct
    module AnonymousInterface19 =
      struct
        type t = Ojs.t
        let rec t_of_js : Ojs.t -> t = fun (x1778 : Ojs.t) -> x1778
        and t_to_js : t -> Ojs.t = fun (x1777 : Ojs.t) -> x1777
        let (get : t -> string -> string) =
          fun (x1779 : t) ->
            fun (x1780 : string) ->
              Ojs.string_of_js
                (Ojs.get_prop (t_to_js x1779) (Ojs.string_to_js x1780))
        let (set : t -> string -> string -> unit) =
          fun (x1781 : t) ->
            fun (x1782 : string) ->
              fun (x1783 : string) ->
                Ojs.set_prop (t_to_js x1781) (Ojs.string_to_js x1782)
                  (Ojs.string_to_js x1783)
      end
    type t =
      [ `Array of string  | `Array of string  | `RegExpMatchArray ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type tags = [ `Array of string  | `Array of string  | `RegExpMatchArray ]
    type 'tags this = 'tags intf constraint 'tags = [> `RegExpMatchArray ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x1786 : Ojs.t) -> intf_of_js __tags_of_js x1786
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x1784 : __tags intf) -> intf_to_js __tags_to_js x1784
    let (get_indices : 'tags this -> RegExpIndicesArray.t option) =
      fun (x1788 : 'tags this) ->
        Ojs.option_of_js RegExpIndicesArray.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x1788) "indices")
    let (set_indices : 'tags this -> RegExpIndicesArray.t -> unit) =
      fun (x1791 : 'tags this) ->
        fun (x1792 : RegExpIndicesArray.t) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x1791) "indices"
            (RegExpIndicesArray.t_to_js x1792)
    let (get_groups : 'tags this -> AnonymousInterface19.t option) =
      fun (x1794 : 'tags this) ->
        Ojs.option_of_js AnonymousInterface19.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x1794) "groups")
    let (set_groups : 'tags this -> AnonymousInterface19.t -> unit) =
      fun (x1797 : 'tags this) ->
        fun (x1798 : AnonymousInterface19.t) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x1797) "groups"
            (AnonymousInterface19.t_to_js x1798)
    let (get_index : 'tags this -> float option) =
      fun (x1800 : 'tags this) ->
        Ojs.option_of_js Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x1800) "index")
    let (set_index : 'tags this -> float -> unit) =
      fun (x1803 : 'tags this) ->
        fun (x1804 : float) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x1803) "index"
            (Ojs.float_to_js x1804)
    let (get_input : 'tags this -> string option) =
      fun (x1806 : 'tags this) ->
        Ojs.option_of_js Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x1806) "input")
    let (set_input : 'tags this -> string -> unit) =
      fun (x1809 : 'tags this) ->
        fun (x1810 : string) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x1809) "input"
            (Ojs.string_to_js x1810)
    let (get_0 : 'tags this -> string) =
      fun (x1812 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x1812) "0")
    let (set_0 : 'tags this -> string -> unit) =
      fun (x1814 : 'tags this) ->
        fun (x1815 : string) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x1814) "0"
            (Ojs.string_to_js x1815)
    let (create :
      ?indices:RegExpIndicesArray.t ->
        ?groups:AnonymousInterface19.t ->
          ?index:float -> ?input:string -> _0:string -> unit -> t)
      =
      fun ?indices:(x1817 : RegExpIndicesArray.t option) ->
        fun ?groups:(x1818 : AnonymousInterface19.t option) ->
          fun ?index:(x1819 : float option) ->
            fun ?input:(x1820 : string option) ->
              fun ~_0:(x1821 : string) ->
                fun () ->
                  let x1822 = Ojs.empty_obj () in
                  (match x1817 with
                   | Some x1826 ->
                       Ojs.set_prop_ascii x1822 "indices"
                         (RegExpIndicesArray.t_to_js x1826)
                   | None -> ());
                  (match x1818 with
                   | Some x1825 ->
                       Ojs.set_prop_ascii x1822 "groups"
                         (AnonymousInterface19.t_to_js x1825)
                   | None -> ());
                  (match x1819 with
                   | Some x1824 ->
                       Ojs.set_prop_ascii x1822 "index"
                         (Ojs.float_to_js x1824)
                   | None -> ());
                  (match x1820 with
                   | Some x1823 ->
                       Ojs.set_prop_ascii x1822 "input"
                         (Ojs.string_to_js x1823)
                   | None -> ());
                  Ojs.set_prop_ascii x1822 "0" (Ojs.string_to_js x1821);
                  t_of_js x1822
    let cast_from = Obj.magic
  end
module RegExpExecArray =
  struct
    module AnonymousInterface19 =
      struct
        type t = Ojs.t
        let rec t_of_js : Ojs.t -> t = fun (x1828 : Ojs.t) -> x1828
        and t_to_js : t -> Ojs.t = fun (x1827 : Ojs.t) -> x1827
        let (get : t -> string -> string) =
          fun (x1829 : t) ->
            fun (x1830 : string) ->
              Ojs.string_of_js
                (Ojs.get_prop (t_to_js x1829) (Ojs.string_to_js x1830))
        let (set : t -> string -> string -> unit) =
          fun (x1831 : t) ->
            fun (x1832 : string) ->
              fun (x1833 : string) ->
                Ojs.set_prop (t_to_js x1831) (Ojs.string_to_js x1832)
                  (Ojs.string_to_js x1833)
      end
    type t =
      [ `Array of string  | `Array of string  | `RegExpExecArray ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type tags = [ `Array of string  | `Array of string  | `RegExpExecArray ]
    type 'tags this = 'tags intf constraint 'tags = [> `RegExpExecArray ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x1836 : Ojs.t) -> intf_of_js __tags_of_js x1836
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x1834 : __tags intf) -> intf_to_js __tags_to_js x1834
    let (get_indices : 'tags this -> RegExpIndicesArray.t option) =
      fun (x1838 : 'tags this) ->
        Ojs.option_of_js RegExpIndicesArray.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x1838) "indices")
    let (set_indices : 'tags this -> RegExpIndicesArray.t -> unit) =
      fun (x1841 : 'tags this) ->
        fun (x1842 : RegExpIndicesArray.t) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x1841) "indices"
            (RegExpIndicesArray.t_to_js x1842)
    let (get_groups : 'tags this -> AnonymousInterface19.t option) =
      fun (x1844 : 'tags this) ->
        Ojs.option_of_js AnonymousInterface19.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x1844) "groups")
    let (set_groups : 'tags this -> AnonymousInterface19.t -> unit) =
      fun (x1847 : 'tags this) ->
        fun (x1848 : AnonymousInterface19.t) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x1847) "groups"
            (AnonymousInterface19.t_to_js x1848)
    let (get_index : 'tags this -> float) =
      fun (x1850 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x1850) "index")
    let (set_index : 'tags this -> float -> unit) =
      fun (x1852 : 'tags this) ->
        fun (x1853 : float) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x1852) "index"
            (Ojs.float_to_js x1853)
    let (get_input : 'tags this -> string) =
      fun (x1855 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x1855) "input")
    let (set_input : 'tags this -> string -> unit) =
      fun (x1857 : 'tags this) ->
        fun (x1858 : string) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x1857) "input"
            (Ojs.string_to_js x1858)
    let (get_0 : 'tags this -> string) =
      fun (x1860 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x1860) "0")
    let (set_0 : 'tags this -> string -> unit) =
      fun (x1862 : 'tags this) ->
        fun (x1863 : string) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x1862) "0"
            (Ojs.string_to_js x1863)
    let (create :
      ?indices:RegExpIndicesArray.t ->
        ?groups:AnonymousInterface19.t ->
          index:float -> input:string -> _0:string -> unit -> t)
      =
      fun ?indices:(x1865 : RegExpIndicesArray.t option) ->
        fun ?groups:(x1866 : AnonymousInterface19.t option) ->
          fun ~index:(x1867 : float) ->
            fun ~input:(x1868 : string) ->
              fun ~_0:(x1869 : string) ->
                fun () ->
                  let x1870 = Ojs.empty_obj () in
                  (match x1865 with
                   | Some x1872 ->
                       Ojs.set_prop_ascii x1870 "indices"
                         (RegExpIndicesArray.t_to_js x1872)
                   | None -> ());
                  (match x1866 with
                   | Some x1871 ->
                       Ojs.set_prop_ascii x1870 "groups"
                         (AnonymousInterface19.t_to_js x1871)
                   | None -> ());
                  Ojs.set_prop_ascii x1870 "index" (Ojs.float_to_js x1867);
                  Ojs.set_prop_ascii x1870 "input" (Ojs.string_to_js x1868);
                  Ojs.set_prop_ascii x1870 "0" (Ojs.string_to_js x1869);
                  t_of_js x1870
    let cast_from = Obj.magic
  end
module RegExp =
  struct
    type t = [ `RegExp ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type tags = [ `RegExp ]
    type 'tags this = 'tags intf constraint 'tags = [> `RegExp ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x1875 : Ojs.t) -> intf_of_js __tags_of_js x1875
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x1873 : __tags intf) -> intf_to_js __tags_to_js x1873
    let (get_hasIndices : 'tags this -> bool) =
      fun (x1877 : 'tags this) ->
        Ojs.bool_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x1877) "hasIndices")
    let (get_dotAll : 'tags this -> bool) =
      fun (x1879 : 'tags this) ->
        Ojs.bool_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x1879) "dotAll")
    let (get_flags : 'tags this -> string) =
      fun (x1881 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x1881) "flags")
    let (get_sticky : 'tags this -> bool) =
      fun (x1883 : 'tags this) ->
        Ojs.bool_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x1883) "sticky")
    let (get_unicode : 'tags this -> bool) =
      fun (x1885 : 'tags this) ->
        Ojs.bool_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x1885) "unicode")
    let (exec : 'tags this -> string:string -> RegExpExecArray.t option) =
      fun (x1888 : 'tags this) ->
        fun ~string:(x1887 : string) ->
          Ojs.option_of_js RegExpExecArray.t_of_js
            (Ojs.call (this_to_js Obj.magic x1888) "exec"
               [|(Ojs.string_to_js x1887)|])
    let (test : 'tags this -> string:string -> bool) =
      fun (x1892 : 'tags this) ->
        fun ~string:(x1891 : string) ->
          Ojs.bool_of_js
            (Ojs.call (this_to_js Obj.magic x1892) "test"
               [|(Ojs.string_to_js x1891)|])
    let (get_source : 'tags this -> string) =
      fun (x1894 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x1894) "source")
    let (get_global : 'tags this -> bool) =
      fun (x1896 : 'tags this) ->
        Ojs.bool_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x1896) "global")
    let (get_ignoreCase : 'tags this -> bool) =
      fun (x1898 : 'tags this) ->
        Ojs.bool_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x1898) "ignoreCase")
    let (get_multiline : 'tags this -> bool) =
      fun (x1900 : 'tags this) ->
        Ojs.bool_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x1900) "multiline")
    let (get_lastIndex : 'tags this -> float) =
      fun (x1902 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x1902) "lastIndex")
    let (set_lastIndex : 'tags this -> float -> unit) =
      fun (x1904 : 'tags this) ->
        fun (x1905 : float) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x1904) "lastIndex"
            (Ojs.float_to_js x1905)
    let (compile :
      'tags this -> pattern:string -> ?flags:string -> unit -> 'tags this) =
      fun (x1911 : 'tags this) ->
        fun ~pattern:(x1907 : string) ->
          fun ?flags:(x1908 : string option) ->
            fun () ->
              this_of_js Obj.magic
                (let x1913 = this_to_js Obj.magic x1911 in
                 Ojs.call (Ojs.get_prop_ascii x1913 "compile") "apply"
                   [|x1913;((let x1909 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1909 "push"
                                  [|(Ojs.string_to_js x1907)|]);
                             (match x1908 with
                              | Some x1910 ->
                                  ignore
                                    (Ojs.call x1909 "push"
                                       [|(Ojs.string_to_js x1910)|])
                              | None -> ());
                             x1909))|])
    let (create :
      pattern:[ `U1 of t  | `U2 of string ] -> ?flags:string -> unit -> t) =
      fun ~pattern:(x1915 : [ `U1 of t  | `U2 of string ]) ->
        fun ?flags:(x1916 : string option) ->
          fun () ->
            t_of_js
              (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "RegExp")
                 (let x1917 =
                    Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                  ignore
                    (Ojs.call x1917 "push"
                       [|((match x1915 with
                           | `U1 x1919 -> t_to_js x1919
                           | `U2 x1920 -> Ojs.string_to_js x1920))|]);
                  (match x1916 with
                   | Some x1918 ->
                       ignore
                         (Ojs.call x1917 "push" [|(Ojs.string_to_js x1918)|])
                   | None -> ());
                  x1917))
    let (invoke :
      pattern:[ `U1 of t  | `U2 of string ] -> ?flags:string -> unit -> t) =
      fun ~pattern:(x1921 : [ `U1 of t  | `U2 of string ]) ->
        fun ?flags:(x1922 : string option) ->
          fun () ->
            t_of_js
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "RegExp") "apply"
                 [|Ojs.null;((let x1923 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x1923 "push"
                                   [|((match x1921 with
                                       | `U1 x1925 -> t_to_js x1925
                                       | `U2 x1926 -> Ojs.string_to_js x1926))|]);
                              (match x1922 with
                               | Some x1924 ->
                                   ignore
                                     (Ojs.call x1923 "push"
                                        [|(Ojs.string_to_js x1924)|])
                               | None -> ());
                              x1923))|])
    let (create' : [ `U1 of t  | `U2 of string ] -> t) =
      fun (x1927 : [ `U1 of t  | `U2 of string ]) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "RegExp")
             [|((match x1927 with
                 | `U1 x1928 -> t_to_js x1928
                 | `U2 x1929 -> Ojs.string_to_js x1929))|])
    let (create'' : pattern:string -> ?flags:string -> unit -> t) =
      fun ~pattern:(x1930 : string) ->
        fun ?flags:(x1931 : string option) ->
          fun () ->
            t_of_js
              (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "RegExp")
                 (let x1932 =
                    Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                  ignore (Ojs.call x1932 "push" [|(Ojs.string_to_js x1930)|]);
                  (match x1931 with
                   | Some x1933 ->
                       ignore
                         (Ojs.call x1932 "push" [|(Ojs.string_to_js x1933)|])
                   | None -> ());
                  x1932))
    let (invoke' : [ `U1 of t  | `U2 of string ] -> t) =
      fun (x1934 : [ `U1 of t  | `U2 of string ]) ->
        t_of_js
          (Ojs.apply (Ojs.get_prop_ascii Ojs.global "RegExp")
             [|((match x1934 with
                 | `U1 x1935 -> t_to_js x1935
                 | `U2 x1936 -> Ojs.string_to_js x1936))|])
    let (invoke'' : pattern:string -> ?flags:string -> unit -> t) =
      fun ~pattern:(x1937 : string) ->
        fun ?flags:(x1938 : string option) ->
          fun () ->
            t_of_js
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "RegExp") "apply"
                 [|Ojs.null;((let x1939 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x1939 "push"
                                   [|(Ojs.string_to_js x1937)|]);
                              (match x1938 with
                               | Some x1940 ->
                                   ignore
                                     (Ojs.call x1939 "push"
                                        [|(Ojs.string_to_js x1940)|])
                               | None -> ());
                              x1939))|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "RegExp")
             "prototype")
    let (_1 : unit -> string) =
      fun () ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "RegExp") "$1")
    let (_2 : unit -> string) =
      fun () ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "RegExp") "$2")
    let (_3 : unit -> string) =
      fun () ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "RegExp") "$3")
    let (_4 : unit -> string) =
      fun () ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "RegExp") "$4")
    let (_5 : unit -> string) =
      fun () ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "RegExp") "$5")
    let (_6 : unit -> string) =
      fun () ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "RegExp") "$6")
    let (_7 : unit -> string) =
      fun () ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "RegExp") "$7")
    let (_8 : unit -> string) =
      fun () ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "RegExp") "$8")
    let (_9 : unit -> string) =
      fun () ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "RegExp") "$9")
    let (input : unit -> string) =
      fun () ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "RegExp")
             "input")
    let (__ : unit -> string) =
      fun () ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "RegExp") "$_")
    let (lastMatch : unit -> string) =
      fun () ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "RegExp")
             "lastMatch")
    let (__' : unit -> string) =
      fun () ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "RegExp") "$&")
    let (lastParen : unit -> string) =
      fun () ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "RegExp")
             "lastParen")
    let (__'' : unit -> string) =
      fun () ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "RegExp") "$+")
    let (leftContext : unit -> string) =
      fun () ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "RegExp")
             "leftContext")
    let (__''' : unit -> string) =
      fun () ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "RegExp") "$`")
    let (rightContext : unit -> string) =
      fun () ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "RegExp")
             "rightContext")
    let (__'''' : unit -> string) =
      fun () ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "RegExp") "$'")
    let cast_from = Obj.magic
  end
module Pick =
  struct
    type ('T, 'K) t = any
    let rec t_of_js :
      'T 'K . (Ojs.t -> 'T) -> (Ojs.t -> 'K) -> Ojs.t -> ('T, 'K) t =
      fun (type __T) ->
        fun (type __K) ->
          fun (__T_of_js : Ojs.t -> __T) ->
            fun (__K_of_js : Ojs.t -> __K) ->
              fun (x1942 : Ojs.t) -> any_of_js x1942
    and t_to_js :
      'T 'K . ('T -> Ojs.t) -> ('K -> Ojs.t) -> ('T, 'K) t -> Ojs.t =
      fun (type __T) ->
        fun (type __K) ->
          fun (__T_to_js : __T -> Ojs.t) ->
            fun (__K_to_js : __K -> Ojs.t) ->
              fun (x1941 : any) -> any_to_js x1941
  end
module Exclude =
  struct
    type ('T, 'U) t = any
    let rec t_of_js :
      'T 'U . (Ojs.t -> 'T) -> (Ojs.t -> 'U) -> Ojs.t -> ('T, 'U) t =
      fun (type __T) ->
        fun (type __U) ->
          fun (__T_of_js : Ojs.t -> __T) ->
            fun (__U_of_js : Ojs.t -> __U) ->
              fun (x1944 : Ojs.t) -> any_of_js x1944
    and t_to_js :
      'T 'U . ('T -> Ojs.t) -> ('U -> Ojs.t) -> ('T, 'U) t -> Ojs.t =
      fun (type __T) ->
        fun (type __U) ->
          fun (__T_to_js : __T -> Ojs.t) ->
            fun (__U_to_js : __U -> Ojs.t) ->
              fun (x1943 : any) -> any_to_js x1943
  end
module rec
  Date:sig
         type t = [ `Date ] intf
         [@@@js.stop ]
         type tags = [ `Date ]
         [@@@js.start ]
         [@@@js.implem type tags = [ `Date ]]
         type 'tags this = 'tags intf constraint 'tags = [> `Date ]
         val t_to_js : t -> Ojs.t
         val t_of_js : Ojs.t -> t
         val toLocaleString :
           'tags this ->
             ?locales:Intl.LocalesArgument.t ->
               ?options:Intl.DateTimeFormatOptions.t -> unit -> string
         val toLocaleDateString :
           'tags this ->
             ?locales:Intl.LocalesArgument.t ->
               ?options:Intl.DateTimeFormatOptions.t -> unit -> string
         val toLocaleTimeString :
           'tags this ->
             ?locales:Intl.LocalesArgument.t ->
               ?options:Intl.DateTimeFormatOptions.t -> unit -> string
         val toLocaleString' :
           'tags this ->
             ?locales:[ `U1 of string  | `U2 of string list ] ->
               ?options:Intl.DateTimeFormatOptions.t -> unit -> string
         val toLocaleDateString' :
           'tags this ->
             ?locales:[ `U1 of string  | `U2 of string list ] ->
               ?options:Intl.DateTimeFormatOptions.t -> unit -> string
         val toLocaleTimeString' :
           'tags this ->
             ?locales:[ `U1 of string  | `U2 of string list ] ->
               ?options:Intl.DateTimeFormatOptions.t -> unit -> string
         val toString : 'tags this -> string
         val toDateString : 'tags this -> string
         val toTimeString : 'tags this -> string
         val toLocaleString'' : 'tags this -> string
         val toLocaleDateString'' : 'tags this -> string
         val toLocaleTimeString'' : 'tags this -> string
         val valueOf : 'tags this -> float
         val getTime : 'tags this -> float
         val getFullYear : 'tags this -> float
         val getUTCFullYear : 'tags this -> float
         val getMonth : 'tags this -> float
         val getUTCMonth : 'tags this -> float
         val getDate : 'tags this -> float
         val getUTCDate : 'tags this -> float
         val getDay : 'tags this -> float
         val getUTCDay : 'tags this -> float
         val getHours : 'tags this -> float
         val getUTCHours : 'tags this -> float
         val getMinutes : 'tags this -> float
         val getUTCMinutes : 'tags this -> float
         val getSeconds : 'tags this -> float
         val getUTCSeconds : 'tags this -> float
         val getMilliseconds : 'tags this -> float
         val getUTCMilliseconds : 'tags this -> float
         val getTimezoneOffset : 'tags this -> float
         val setTime : 'tags this -> time:float -> float
         val setMilliseconds : 'tags this -> ms:float -> float
         val setUTCMilliseconds : 'tags this -> ms:float -> float
         val setSeconds :
           'tags this -> sec:float -> ?ms:float -> unit -> float
         val setUTCSeconds :
           'tags this -> sec:float -> ?ms:float -> unit -> float
         val setMinutes :
           'tags this ->
             min:float -> ?sec:float -> ?ms:float -> unit -> float
         val setUTCMinutes :
           'tags this ->
             min:float -> ?sec:float -> ?ms:float -> unit -> float
         val setHours :
           'tags this ->
             hours:float ->
               ?min:float -> ?sec:float -> ?ms:float -> unit -> float
         val setUTCHours :
           'tags this ->
             hours:float ->
               ?min:float -> ?sec:float -> ?ms:float -> unit -> float
         val setDate : 'tags this -> date:float -> float
         val setUTCDate : 'tags this -> date:float -> float
         val setMonth :
           'tags this -> month:float -> ?date:float -> unit -> float
         val setUTCMonth :
           'tags this -> month:float -> ?date:float -> unit -> float
         val setFullYear :
           'tags this ->
             year:float -> ?month:float -> ?date:float -> unit -> float
         val setUTCFullYear :
           'tags this ->
             year:float -> ?month:float -> ?date:float -> unit -> float
         val toUTCString : 'tags this -> string
         val toISOString : 'tags this -> string
         val toJSON : 'tags this -> ?key:any -> unit -> string
         val utc :
           year:float ->
             ?monthIndex:float ->
               ?date:float ->
                 ?hours:float ->
                   ?minutes:float ->
                     ?seconds:float -> ?ms:float -> unit -> float
         val create : [ `U1 of float  | `U2 of string  | `U3 of t ] -> t
         val create' : unit -> t
         val create'' : [ `U1 of float  | `U2 of string ] -> t
         val create''' :
           year:float ->
             monthIndex:float ->
               ?date:float ->
                 ?hours:float ->
                   ?minutes:float -> ?seconds:float -> ?ms:float -> unit -> t
         val invoke : unit -> string
         val prototype : unit -> t
         val parse : string -> float
         val utc' :
           year:float ->
             monthIndex:float ->
               ?date:float ->
                 ?hours:float ->
                   ?minutes:float ->
                     ?seconds:float -> ?ms:float -> unit -> float
         val now : unit -> float
         val cast_from : 'tags this -> t
       end =
  struct
    type t = [ `Date ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type tags = [ `Date ]
    type 'tags this = 'tags intf constraint 'tags = [> `Date ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x1947 : Ojs.t) -> intf_of_js __tags_of_js x1947
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x1945 : __tags intf) -> intf_to_js __tags_to_js x1945
    let (toLocaleString :
      'tags this ->
        ?locales:Intl.LocalesArgument.t ->
          ?options:Intl.DateTimeFormatOptions.t -> unit -> string)
      =
      fun (x1954 : 'tags this) ->
        fun ?locales:(x1949 : Intl.LocalesArgument.t option) ->
          fun ?options:(x1950 : Intl.DateTimeFormatOptions.t option) ->
            fun () ->
              Ojs.string_of_js
                (let x1956 = this_to_js Obj.magic x1954 in
                 Ojs.call (Ojs.get_prop_ascii x1956 "toLocaleString") "apply"
                   [|x1956;((let x1951 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x1949 with
                              | Some x1953 ->
                                  ignore
                                    (Ojs.call x1951 "push"
                                       [|(Intl.LocalesArgument.t_to_js x1953)|])
                              | None -> ());
                             (match x1950 with
                              | Some x1952 ->
                                  ignore
                                    (Ojs.call x1951 "push"
                                       [|(Intl.DateTimeFormatOptions.t_to_js
                                            x1952)|])
                              | None -> ());
                             x1951))|])
    let (toLocaleDateString :
      'tags this ->
        ?locales:Intl.LocalesArgument.t ->
          ?options:Intl.DateTimeFormatOptions.t -> unit -> string)
      =
      fun (x1962 : 'tags this) ->
        fun ?locales:(x1957 : Intl.LocalesArgument.t option) ->
          fun ?options:(x1958 : Intl.DateTimeFormatOptions.t option) ->
            fun () ->
              Ojs.string_of_js
                (let x1964 = this_to_js Obj.magic x1962 in
                 Ojs.call (Ojs.get_prop_ascii x1964 "toLocaleDateString")
                   "apply"
                   [|x1964;((let x1959 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x1957 with
                              | Some x1961 ->
                                  ignore
                                    (Ojs.call x1959 "push"
                                       [|(Intl.LocalesArgument.t_to_js x1961)|])
                              | None -> ());
                             (match x1958 with
                              | Some x1960 ->
                                  ignore
                                    (Ojs.call x1959 "push"
                                       [|(Intl.DateTimeFormatOptions.t_to_js
                                            x1960)|])
                              | None -> ());
                             x1959))|])
    let (toLocaleTimeString :
      'tags this ->
        ?locales:Intl.LocalesArgument.t ->
          ?options:Intl.DateTimeFormatOptions.t -> unit -> string)
      =
      fun (x1970 : 'tags this) ->
        fun ?locales:(x1965 : Intl.LocalesArgument.t option) ->
          fun ?options:(x1966 : Intl.DateTimeFormatOptions.t option) ->
            fun () ->
              Ojs.string_of_js
                (let x1972 = this_to_js Obj.magic x1970 in
                 Ojs.call (Ojs.get_prop_ascii x1972 "toLocaleTimeString")
                   "apply"
                   [|x1972;((let x1967 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x1965 with
                              | Some x1969 ->
                                  ignore
                                    (Ojs.call x1967 "push"
                                       [|(Intl.LocalesArgument.t_to_js x1969)|])
                              | None -> ());
                             (match x1966 with
                              | Some x1968 ->
                                  ignore
                                    (Ojs.call x1967 "push"
                                       [|(Intl.DateTimeFormatOptions.t_to_js
                                            x1968)|])
                              | None -> ());
                             x1967))|])
    let (toLocaleString' :
      'tags this ->
        ?locales:[ `U1 of string  | `U2 of string list ] ->
          ?options:Intl.DateTimeFormatOptions.t -> unit -> string)
      =
      fun (x1981 : 'tags this) ->
        fun ?locales:(x1973 : [ `U1 of string  | `U2 of string list ] option)
          ->
          fun ?options:(x1974 : Intl.DateTimeFormatOptions.t option) ->
            fun () ->
              Ojs.string_of_js
                (let x1983 = this_to_js Obj.magic x1981 in
                 Ojs.call (Ojs.get_prop_ascii x1983 "toLocaleString") "apply"
                   [|x1983;((let x1975 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x1973 with
                              | Some x1977 ->
                                  ignore
                                    (Ojs.call x1975 "push"
                                       [|((match x1977 with
                                           | `U1 x1978 ->
                                               Ojs.string_to_js x1978
                                           | `U2 x1979 ->
                                               Ojs.list_to_js
                                                 Ojs.string_to_js x1979))|])
                              | None -> ());
                             (match x1974 with
                              | Some x1976 ->
                                  ignore
                                    (Ojs.call x1975 "push"
                                       [|(Intl.DateTimeFormatOptions.t_to_js
                                            x1976)|])
                              | None -> ());
                             x1975))|])
    let (toLocaleDateString' :
      'tags this ->
        ?locales:[ `U1 of string  | `U2 of string list ] ->
          ?options:Intl.DateTimeFormatOptions.t -> unit -> string)
      =
      fun (x1992 : 'tags this) ->
        fun ?locales:(x1984 : [ `U1 of string  | `U2 of string list ] option)
          ->
          fun ?options:(x1985 : Intl.DateTimeFormatOptions.t option) ->
            fun () ->
              Ojs.string_of_js
                (let x1994 = this_to_js Obj.magic x1992 in
                 Ojs.call (Ojs.get_prop_ascii x1994 "toLocaleDateString")
                   "apply"
                   [|x1994;((let x1986 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x1984 with
                              | Some x1988 ->
                                  ignore
                                    (Ojs.call x1986 "push"
                                       [|((match x1988 with
                                           | `U1 x1989 ->
                                               Ojs.string_to_js x1989
                                           | `U2 x1990 ->
                                               Ojs.list_to_js
                                                 Ojs.string_to_js x1990))|])
                              | None -> ());
                             (match x1985 with
                              | Some x1987 ->
                                  ignore
                                    (Ojs.call x1986 "push"
                                       [|(Intl.DateTimeFormatOptions.t_to_js
                                            x1987)|])
                              | None -> ());
                             x1986))|])
    let (toLocaleTimeString' :
      'tags this ->
        ?locales:[ `U1 of string  | `U2 of string list ] ->
          ?options:Intl.DateTimeFormatOptions.t -> unit -> string)
      =
      fun (x2003 : 'tags this) ->
        fun ?locales:(x1995 : [ `U1 of string  | `U2 of string list ] option)
          ->
          fun ?options:(x1996 : Intl.DateTimeFormatOptions.t option) ->
            fun () ->
              Ojs.string_of_js
                (let x2005 = this_to_js Obj.magic x2003 in
                 Ojs.call (Ojs.get_prop_ascii x2005 "toLocaleTimeString")
                   "apply"
                   [|x2005;((let x1997 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x1995 with
                              | Some x1999 ->
                                  ignore
                                    (Ojs.call x1997 "push"
                                       [|((match x1999 with
                                           | `U1 x2000 ->
                                               Ojs.string_to_js x2000
                                           | `U2 x2001 ->
                                               Ojs.list_to_js
                                                 Ojs.string_to_js x2001))|])
                              | None -> ());
                             (match x1996 with
                              | Some x1998 ->
                                  ignore
                                    (Ojs.call x1997 "push"
                                       [|(Intl.DateTimeFormatOptions.t_to_js
                                            x1998)|])
                              | None -> ());
                             x1997))|])
    let (toString : 'tags this -> string) =
      fun (x2006 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x2006) "toString" [||])
    let (toDateString : 'tags this -> string) =
      fun (x2008 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x2008) "toDateString" [||])
    let (toTimeString : 'tags this -> string) =
      fun (x2010 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x2010) "toTimeString" [||])
    let (toLocaleString'' : 'tags this -> string) =
      fun (x2012 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x2012) "toLocaleString" [||])
    let (toLocaleDateString'' : 'tags this -> string) =
      fun (x2014 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x2014) "toLocaleDateString" [||])
    let (toLocaleTimeString'' : 'tags this -> string) =
      fun (x2016 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x2016) "toLocaleTimeString" [||])
    let (valueOf : 'tags this -> float) =
      fun (x2018 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x2018) "valueOf" [||])
    let (getTime : 'tags this -> float) =
      fun (x2020 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x2020) "getTime" [||])
    let (getFullYear : 'tags this -> float) =
      fun (x2022 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x2022) "getFullYear" [||])
    let (getUTCFullYear : 'tags this -> float) =
      fun (x2024 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x2024) "getUTCFullYear" [||])
    let (getMonth : 'tags this -> float) =
      fun (x2026 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x2026) "getMonth" [||])
    let (getUTCMonth : 'tags this -> float) =
      fun (x2028 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x2028) "getUTCMonth" [||])
    let (getDate : 'tags this -> float) =
      fun (x2030 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x2030) "getDate" [||])
    let (getUTCDate : 'tags this -> float) =
      fun (x2032 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x2032) "getUTCDate" [||])
    let (getDay : 'tags this -> float) =
      fun (x2034 : 'tags this) ->
        Ojs.float_of_js (Ojs.call (this_to_js Obj.magic x2034) "getDay" [||])
    let (getUTCDay : 'tags this -> float) =
      fun (x2036 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x2036) "getUTCDay" [||])
    let (getHours : 'tags this -> float) =
      fun (x2038 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x2038) "getHours" [||])
    let (getUTCHours : 'tags this -> float) =
      fun (x2040 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x2040) "getUTCHours" [||])
    let (getMinutes : 'tags this -> float) =
      fun (x2042 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x2042) "getMinutes" [||])
    let (getUTCMinutes : 'tags this -> float) =
      fun (x2044 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x2044) "getUTCMinutes" [||])
    let (getSeconds : 'tags this -> float) =
      fun (x2046 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x2046) "getSeconds" [||])
    let (getUTCSeconds : 'tags this -> float) =
      fun (x2048 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x2048) "getUTCSeconds" [||])
    let (getMilliseconds : 'tags this -> float) =
      fun (x2050 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x2050) "getMilliseconds" [||])
    let (getUTCMilliseconds : 'tags this -> float) =
      fun (x2052 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x2052) "getUTCMilliseconds" [||])
    let (getTimezoneOffset : 'tags this -> float) =
      fun (x2054 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x2054) "getTimezoneOffset" [||])
    let (setTime : 'tags this -> time:float -> float) =
      fun (x2057 : 'tags this) ->
        fun ~time:(x2056 : float) ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x2057) "setTime"
               [|(Ojs.float_to_js x2056)|])
    let (setMilliseconds : 'tags this -> ms:float -> float) =
      fun (x2060 : 'tags this) ->
        fun ~ms:(x2059 : float) ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x2060) "setMilliseconds"
               [|(Ojs.float_to_js x2059)|])
    let (setUTCMilliseconds : 'tags this -> ms:float -> float) =
      fun (x2063 : 'tags this) ->
        fun ~ms:(x2062 : float) ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x2063) "setUTCMilliseconds"
               [|(Ojs.float_to_js x2062)|])
    let (setSeconds : 'tags this -> sec:float -> ?ms:float -> unit -> float)
      =
      fun (x2069 : 'tags this) ->
        fun ~sec:(x2065 : float) ->
          fun ?ms:(x2066 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x2071 = this_to_js Obj.magic x2069 in
                 Ojs.call (Ojs.get_prop_ascii x2071 "setSeconds") "apply"
                   [|x2071;((let x2067 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x2067 "push"
                                  [|(Ojs.float_to_js x2065)|]);
                             (match x2066 with
                              | Some x2068 ->
                                  ignore
                                    (Ojs.call x2067 "push"
                                       [|(Ojs.float_to_js x2068)|])
                              | None -> ());
                             x2067))|])
    let (setUTCSeconds :
      'tags this -> sec:float -> ?ms:float -> unit -> float) =
      fun (x2076 : 'tags this) ->
        fun ~sec:(x2072 : float) ->
          fun ?ms:(x2073 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x2078 = this_to_js Obj.magic x2076 in
                 Ojs.call (Ojs.get_prop_ascii x2078 "setUTCSeconds") "apply"
                   [|x2078;((let x2074 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x2074 "push"
                                  [|(Ojs.float_to_js x2072)|]);
                             (match x2073 with
                              | Some x2075 ->
                                  ignore
                                    (Ojs.call x2074 "push"
                                       [|(Ojs.float_to_js x2075)|])
                              | None -> ());
                             x2074))|])
    let (setMinutes :
      'tags this -> min:float -> ?sec:float -> ?ms:float -> unit -> float) =
      fun (x2085 : 'tags this) ->
        fun ~min:(x2079 : float) ->
          fun ?sec:(x2080 : float option) ->
            fun ?ms:(x2081 : float option) ->
              fun () ->
                Ojs.float_of_js
                  (let x2087 = this_to_js Obj.magic x2085 in
                   Ojs.call (Ojs.get_prop_ascii x2087 "setMinutes") "apply"
                     [|x2087;((let x2082 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x2082 "push"
                                    [|(Ojs.float_to_js x2079)|]);
                               (match x2080 with
                                | Some x2084 ->
                                    ignore
                                      (Ojs.call x2082 "push"
                                         [|(Ojs.float_to_js x2084)|])
                                | None -> ());
                               (match x2081 with
                                | Some x2083 ->
                                    ignore
                                      (Ojs.call x2082 "push"
                                         [|(Ojs.float_to_js x2083)|])
                                | None -> ());
                               x2082))|])
    let (setUTCMinutes :
      'tags this -> min:float -> ?sec:float -> ?ms:float -> unit -> float) =
      fun (x2094 : 'tags this) ->
        fun ~min:(x2088 : float) ->
          fun ?sec:(x2089 : float option) ->
            fun ?ms:(x2090 : float option) ->
              fun () ->
                Ojs.float_of_js
                  (let x2096 = this_to_js Obj.magic x2094 in
                   Ojs.call (Ojs.get_prop_ascii x2096 "setUTCMinutes")
                     "apply"
                     [|x2096;((let x2091 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x2091 "push"
                                    [|(Ojs.float_to_js x2088)|]);
                               (match x2089 with
                                | Some x2093 ->
                                    ignore
                                      (Ojs.call x2091 "push"
                                         [|(Ojs.float_to_js x2093)|])
                                | None -> ());
                               (match x2090 with
                                | Some x2092 ->
                                    ignore
                                      (Ojs.call x2091 "push"
                                         [|(Ojs.float_to_js x2092)|])
                                | None -> ());
                               x2091))|])
    let (setHours :
      'tags this ->
        hours:float -> ?min:float -> ?sec:float -> ?ms:float -> unit -> float)
      =
      fun (x2105 : 'tags this) ->
        fun ~hours:(x2097 : float) ->
          fun ?min:(x2098 : float option) ->
            fun ?sec:(x2099 : float option) ->
              fun ?ms:(x2100 : float option) ->
                fun () ->
                  Ojs.float_of_js
                    (let x2107 = this_to_js Obj.magic x2105 in
                     Ojs.call (Ojs.get_prop_ascii x2107 "setHours") "apply"
                       [|x2107;((let x2101 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x2101 "push"
                                      [|(Ojs.float_to_js x2097)|]);
                                 (match x2098 with
                                  | Some x2104 ->
                                      ignore
                                        (Ojs.call x2101 "push"
                                           [|(Ojs.float_to_js x2104)|])
                                  | None -> ());
                                 (match x2099 with
                                  | Some x2103 ->
                                      ignore
                                        (Ojs.call x2101 "push"
                                           [|(Ojs.float_to_js x2103)|])
                                  | None -> ());
                                 (match x2100 with
                                  | Some x2102 ->
                                      ignore
                                        (Ojs.call x2101 "push"
                                           [|(Ojs.float_to_js x2102)|])
                                  | None -> ());
                                 x2101))|])
    let (setUTCHours :
      'tags this ->
        hours:float -> ?min:float -> ?sec:float -> ?ms:float -> unit -> float)
      =
      fun (x2116 : 'tags this) ->
        fun ~hours:(x2108 : float) ->
          fun ?min:(x2109 : float option) ->
            fun ?sec:(x2110 : float option) ->
              fun ?ms:(x2111 : float option) ->
                fun () ->
                  Ojs.float_of_js
                    (let x2118 = this_to_js Obj.magic x2116 in
                     Ojs.call (Ojs.get_prop_ascii x2118 "setUTCHours")
                       "apply"
                       [|x2118;((let x2112 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x2112 "push"
                                      [|(Ojs.float_to_js x2108)|]);
                                 (match x2109 with
                                  | Some x2115 ->
                                      ignore
                                        (Ojs.call x2112 "push"
                                           [|(Ojs.float_to_js x2115)|])
                                  | None -> ());
                                 (match x2110 with
                                  | Some x2114 ->
                                      ignore
                                        (Ojs.call x2112 "push"
                                           [|(Ojs.float_to_js x2114)|])
                                  | None -> ());
                                 (match x2111 with
                                  | Some x2113 ->
                                      ignore
                                        (Ojs.call x2112 "push"
                                           [|(Ojs.float_to_js x2113)|])
                                  | None -> ());
                                 x2112))|])
    let (setDate : 'tags this -> date:float -> float) =
      fun (x2120 : 'tags this) ->
        fun ~date:(x2119 : float) ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x2120) "setDate"
               [|(Ojs.float_to_js x2119)|])
    let (setUTCDate : 'tags this -> date:float -> float) =
      fun (x2123 : 'tags this) ->
        fun ~date:(x2122 : float) ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x2123) "setUTCDate"
               [|(Ojs.float_to_js x2122)|])
    let (setMonth :
      'tags this -> month:float -> ?date:float -> unit -> float) =
      fun (x2129 : 'tags this) ->
        fun ~month:(x2125 : float) ->
          fun ?date:(x2126 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x2131 = this_to_js Obj.magic x2129 in
                 Ojs.call (Ojs.get_prop_ascii x2131 "setMonth") "apply"
                   [|x2131;((let x2127 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x2127 "push"
                                  [|(Ojs.float_to_js x2125)|]);
                             (match x2126 with
                              | Some x2128 ->
                                  ignore
                                    (Ojs.call x2127 "push"
                                       [|(Ojs.float_to_js x2128)|])
                              | None -> ());
                             x2127))|])
    let (setUTCMonth :
      'tags this -> month:float -> ?date:float -> unit -> float) =
      fun (x2136 : 'tags this) ->
        fun ~month:(x2132 : float) ->
          fun ?date:(x2133 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x2138 = this_to_js Obj.magic x2136 in
                 Ojs.call (Ojs.get_prop_ascii x2138 "setUTCMonth") "apply"
                   [|x2138;((let x2134 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x2134 "push"
                                  [|(Ojs.float_to_js x2132)|]);
                             (match x2133 with
                              | Some x2135 ->
                                  ignore
                                    (Ojs.call x2134 "push"
                                       [|(Ojs.float_to_js x2135)|])
                              | None -> ());
                             x2134))|])
    let (setFullYear :
      'tags this ->
        year:float -> ?month:float -> ?date:float -> unit -> float)
      =
      fun (x2145 : 'tags this) ->
        fun ~year:(x2139 : float) ->
          fun ?month:(x2140 : float option) ->
            fun ?date:(x2141 : float option) ->
              fun () ->
                Ojs.float_of_js
                  (let x2147 = this_to_js Obj.magic x2145 in
                   Ojs.call (Ojs.get_prop_ascii x2147 "setFullYear") "apply"
                     [|x2147;((let x2142 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x2142 "push"
                                    [|(Ojs.float_to_js x2139)|]);
                               (match x2140 with
                                | Some x2144 ->
                                    ignore
                                      (Ojs.call x2142 "push"
                                         [|(Ojs.float_to_js x2144)|])
                                | None -> ());
                               (match x2141 with
                                | Some x2143 ->
                                    ignore
                                      (Ojs.call x2142 "push"
                                         [|(Ojs.float_to_js x2143)|])
                                | None -> ());
                               x2142))|])
    let (setUTCFullYear :
      'tags this ->
        year:float -> ?month:float -> ?date:float -> unit -> float)
      =
      fun (x2154 : 'tags this) ->
        fun ~year:(x2148 : float) ->
          fun ?month:(x2149 : float option) ->
            fun ?date:(x2150 : float option) ->
              fun () ->
                Ojs.float_of_js
                  (let x2156 = this_to_js Obj.magic x2154 in
                   Ojs.call (Ojs.get_prop_ascii x2156 "setUTCFullYear")
                     "apply"
                     [|x2156;((let x2151 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x2151 "push"
                                    [|(Ojs.float_to_js x2148)|]);
                               (match x2149 with
                                | Some x2153 ->
                                    ignore
                                      (Ojs.call x2151 "push"
                                         [|(Ojs.float_to_js x2153)|])
                                | None -> ());
                               (match x2150 with
                                | Some x2152 ->
                                    ignore
                                      (Ojs.call x2151 "push"
                                         [|(Ojs.float_to_js x2152)|])
                                | None -> ());
                               x2151))|])
    let (toUTCString : 'tags this -> string) =
      fun (x2157 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x2157) "toUTCString" [||])
    let (toISOString : 'tags this -> string) =
      fun (x2159 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x2159) "toISOString" [||])
    let (toJSON : 'tags this -> ?key:any -> unit -> string) =
      fun (x2164 : 'tags this) ->
        fun ?key:(x2161 : any option) ->
          fun () ->
            Ojs.string_of_js
              (let x2166 = this_to_js Obj.magic x2164 in
               Ojs.call (Ojs.get_prop_ascii x2166 "toJSON") "apply"
                 [|x2166;((let x2162 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x2161 with
                            | Some x2163 ->
                                ignore
                                  (Ojs.call x2162 "push"
                                     [|(any_to_js x2163)|])
                            | None -> ());
                           x2162))|])
    let (utc :
      year:float ->
        ?monthIndex:float ->
          ?date:float ->
            ?hours:float ->
              ?minutes:float -> ?seconds:float -> ?ms:float -> unit -> float)
      =
      fun ~year:(x2167 : float) ->
        fun ?monthIndex:(x2168 : float option) ->
          fun ?date:(x2169 : float option) ->
            fun ?hours:(x2170 : float option) ->
              fun ?minutes:(x2171 : float option) ->
                fun ?seconds:(x2172 : float option) ->
                  fun ?ms:(x2173 : float option) ->
                    fun () ->
                      Ojs.float_of_js
                        (let x2181 = Ojs.get_prop_ascii Ojs.global "Date" in
                         Ojs.call (Ojs.get_prop_ascii x2181 "UTC") "apply"
                           [|x2181;((let x2174 =
                                       Ojs.new_obj
                                         (Ojs.get_prop_ascii Ojs.global
                                            "Array") [||] in
                                     ignore
                                       (Ojs.call x2174 "push"
                                          [|(Ojs.float_to_js x2167)|]);
                                     (match x2168 with
                                      | Some x2180 ->
                                          ignore
                                            (Ojs.call x2174 "push"
                                               [|(Ojs.float_to_js x2180)|])
                                      | None -> ());
                                     (match x2169 with
                                      | Some x2179 ->
                                          ignore
                                            (Ojs.call x2174 "push"
                                               [|(Ojs.float_to_js x2179)|])
                                      | None -> ());
                                     (match x2170 with
                                      | Some x2178 ->
                                          ignore
                                            (Ojs.call x2174 "push"
                                               [|(Ojs.float_to_js x2178)|])
                                      | None -> ());
                                     (match x2171 with
                                      | Some x2177 ->
                                          ignore
                                            (Ojs.call x2174 "push"
                                               [|(Ojs.float_to_js x2177)|])
                                      | None -> ());
                                     (match x2172 with
                                      | Some x2176 ->
                                          ignore
                                            (Ojs.call x2174 "push"
                                               [|(Ojs.float_to_js x2176)|])
                                      | None -> ());
                                     (match x2173 with
                                      | Some x2175 ->
                                          ignore
                                            (Ojs.call x2174 "push"
                                               [|(Ojs.float_to_js x2175)|])
                                      | None -> ());
                                     x2174))|])
    let (create : [ `U1 of float  | `U2 of string  | `U3 of t ] -> t) =
      fun (x2182 : [ `U1 of float  | `U2 of string  | `U3 of t ]) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Date")
             [|((match x2182 with
                 | `U1 x2183 -> Ojs.float_to_js x2183
                 | `U2 x2184 -> Ojs.string_to_js x2184
                 | `U3 x2185 -> t_to_js x2185))|])
    let (create' : unit -> t) =
      fun () ->
        t_of_js (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Date") [||])
    let (create'' : [ `U1 of float  | `U2 of string ] -> t) =
      fun (x2186 : [ `U1 of float  | `U2 of string ]) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Date")
             [|((match x2186 with
                 | `U1 x2187 -> Ojs.float_to_js x2187
                 | `U2 x2188 -> Ojs.string_to_js x2188))|])
    let (create''' :
      year:float ->
        monthIndex:float ->
          ?date:float ->
            ?hours:float ->
              ?minutes:float -> ?seconds:float -> ?ms:float -> unit -> t)
      =
      fun ~year:(x2189 : float) ->
        fun ~monthIndex:(x2190 : float) ->
          fun ?date:(x2191 : float option) ->
            fun ?hours:(x2192 : float option) ->
              fun ?minutes:(x2193 : float option) ->
                fun ?seconds:(x2194 : float option) ->
                  fun ?ms:(x2195 : float option) ->
                    fun () ->
                      t_of_js
                        (Ojs.new_obj_arr
                           (Ojs.get_prop_ascii Ojs.global "Date")
                           (let x2196 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x2196 "push"
                                 [|(Ojs.float_to_js x2189)|]);
                            ignore
                              (Ojs.call x2196 "push"
                                 [|(Ojs.float_to_js x2190)|]);
                            (match x2191 with
                             | Some x2201 ->
                                 ignore
                                   (Ojs.call x2196 "push"
                                      [|(Ojs.float_to_js x2201)|])
                             | None -> ());
                            (match x2192 with
                             | Some x2200 ->
                                 ignore
                                   (Ojs.call x2196 "push"
                                      [|(Ojs.float_to_js x2200)|])
                             | None -> ());
                            (match x2193 with
                             | Some x2199 ->
                                 ignore
                                   (Ojs.call x2196 "push"
                                      [|(Ojs.float_to_js x2199)|])
                             | None -> ());
                            (match x2194 with
                             | Some x2198 ->
                                 ignore
                                   (Ojs.call x2196 "push"
                                      [|(Ojs.float_to_js x2198)|])
                             | None -> ());
                            (match x2195 with
                             | Some x2197 ->
                                 ignore
                                   (Ojs.call x2196 "push"
                                      [|(Ojs.float_to_js x2197)|])
                             | None -> ());
                            x2196))
    let (invoke : unit -> string) =
      fun () ->
        Ojs.string_of_js
          (Ojs.apply (Ojs.get_prop_ascii Ojs.global "Date") [||])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Date")
             "prototype")
    let (parse : string -> float) =
      fun (x2202 : string) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Date") "parse"
             [|(Ojs.string_to_js x2202)|])
    let (utc' :
      year:float ->
        monthIndex:float ->
          ?date:float ->
            ?hours:float ->
              ?minutes:float -> ?seconds:float -> ?ms:float -> unit -> float)
      =
      fun ~year:(x2203 : float) ->
        fun ~monthIndex:(x2204 : float) ->
          fun ?date:(x2205 : float option) ->
            fun ?hours:(x2206 : float option) ->
              fun ?minutes:(x2207 : float option) ->
                fun ?seconds:(x2208 : float option) ->
                  fun ?ms:(x2209 : float option) ->
                    fun () ->
                      Ojs.float_of_js
                        (let x2216 = Ojs.get_prop_ascii Ojs.global "Date" in
                         Ojs.call (Ojs.get_prop_ascii x2216 "UTC") "apply"
                           [|x2216;((let x2210 =
                                       Ojs.new_obj
                                         (Ojs.get_prop_ascii Ojs.global
                                            "Array") [||] in
                                     ignore
                                       (Ojs.call x2210 "push"
                                          [|(Ojs.float_to_js x2203)|]);
                                     ignore
                                       (Ojs.call x2210 "push"
                                          [|(Ojs.float_to_js x2204)|]);
                                     (match x2205 with
                                      | Some x2215 ->
                                          ignore
                                            (Ojs.call x2210 "push"
                                               [|(Ojs.float_to_js x2215)|])
                                      | None -> ());
                                     (match x2206 with
                                      | Some x2214 ->
                                          ignore
                                            (Ojs.call x2210 "push"
                                               [|(Ojs.float_to_js x2214)|])
                                      | None -> ());
                                     (match x2207 with
                                      | Some x2213 ->
                                          ignore
                                            (Ojs.call x2210 "push"
                                               [|(Ojs.float_to_js x2213)|])
                                      | None -> ());
                                     (match x2208 with
                                      | Some x2212 ->
                                          ignore
                                            (Ojs.call x2210 "push"
                                               [|(Ojs.float_to_js x2212)|])
                                      | None -> ());
                                     (match x2209 with
                                      | Some x2211 ->
                                          ignore
                                            (Ojs.call x2210 "push"
                                               [|(Ojs.float_to_js x2211)|])
                                      | None -> ());
                                     x2210))|])
    let (now : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Date") "now" [||])
    let cast_from = Obj.magic
  end
 and
  Intl:sig
         module SegmentData :
         sig
           type t = [ `Intl_SegmentData ] intf
           [@@@js.stop ]
           type tags = [ `Intl_SegmentData ]
           [@@@js.start ]
           [@@@js.implem type tags = [ `Intl_SegmentData ]]
           type 'tags this =
             'tags intf constraint 'tags = [> `Intl_SegmentData ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val get_segment : 'tags this -> string
           val set_segment : 'tags this -> string -> unit
           val get_index : 'tags this -> float
           val set_index : 'tags this -> float -> unit
           val get_input : 'tags this -> string
           val set_input : 'tags this -> string -> unit
           val get_isWordLike : 'tags this -> bool option
           val set_isWordLike : 'tags this -> bool -> unit
           val create :
             segment:string ->
               index:float -> input:string -> ?isWordLike:bool -> unit -> t
           val cast_from : 'tags this -> t
         end
         module Segments :
         sig
           type t = [ `Intl_Segments ] intf
           [@@@js.stop ]
           type tags = [ `Intl_Segments ]
           [@@@js.start ]
           [@@@js.implem type tags = [ `Intl_Segments ]]
           type 'tags this =
             'tags intf constraint 'tags = [> `Intl_Segments ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val containing :
             'tags this -> ?codeUnitIndex:float -> unit -> SegmentData.t
           val cast_from : 'tags this -> t
         end
         module SegmenterOptions :
         sig
           type t = [ `Intl_SegmenterOptions ] intf
           [@@@js.stop ]
           type tags = [ `Intl_SegmenterOptions ]
           [@@@js.start ]
           [@@@js.implem type tags = [ `Intl_SegmenterOptions ]]
           type 'tags this =
             'tags intf constraint 'tags = [> `Intl_SegmenterOptions ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val get_localeMatcher :
             'tags this -> [ `L_s26_best_fit  | `L_s81_lookup ] option
           val set_localeMatcher :
             'tags this ->
               [ `Undefined of undefined  | `U1 of [ `L_s26_best_fit ] 
               | `U2 of [ `L_s81_lookup ] ] -> unit
           val get_granularity :
             'tags this ->
               [ `L_s120_sentence  | `L_s144_word  | `L_s65_grapheme ] option
           val set_granularity :
             'tags this ->
               [ `Undefined of undefined  | `U1 of [ `L_s65_grapheme ] 
               | `U2 of [ `L_s144_word ]  | `U3 of [ `L_s120_sentence ] ] ->
                 unit
           val create :
             ?localeMatcher:[ `L_s26_best_fit  | `L_s81_lookup ] ->
               ?granularity:[ `L_s120_sentence  | `L_s144_word 
                            | `L_s65_grapheme ]
                 -> unit -> t
           val cast_from : 'tags this -> t
         end
         module ResolvedSegmenterOptions :
         sig
           type t = [ `Intl_ResolvedSegmenterOptions ] intf
           [@@@js.stop ]
           type tags = [ `Intl_ResolvedSegmenterOptions ]
           [@@@js.start ]
           [@@@js.implem type tags = [ `Intl_ResolvedSegmenterOptions ]]
           type 'tags this =
             'tags intf constraint 'tags =
                         [> `Intl_ResolvedSegmenterOptions ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val get_locale : 'tags this -> string
           val set_locale : 'tags this -> string -> unit
           val get_granularity :
             'tags this ->
               [ `L_s120_sentence  | `L_s144_word  | `L_s65_grapheme ]
           val set_granularity :
             'tags this ->
               [ `U1 of [ `L_s65_grapheme ]  | `U2 of [ `L_s144_word ] 
               | `U3 of [ `L_s120_sentence ] ] -> unit
           val create :
             locale:string ->
               granularity:[ `L_s120_sentence  | `L_s144_word 
                           | `L_s65_grapheme ]
                 -> unit -> t
           val cast_from : 'tags this -> t
         end
         module UnicodeBCP47LocaleIdentifier :
         sig
           type t = string
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
         end
         module LocaleHourCycleKey :
         sig
           type t = [ `L_s67_h11  | `L_s68_h12  | `L_s69_h23  | `L_s70_h24 ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
         end
         module LocaleCollationCaseFirst :
         sig
           type t = [ `L_s139_upper  | `L_s58_false  | `L_s82_lower ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
         end
         module LocaleOptions :
         sig
           type t = [ `Intl_LocaleOptions ] intf
           [@@@js.stop ]
           type tags = [ `Intl_LocaleOptions ]
           [@@@js.start ]
           [@@@js.implem type tags = [ `Intl_LocaleOptions ]]
           type 'tags this =
             'tags intf constraint 'tags = [> `Intl_LocaleOptions ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val get_baseName : 'tags this -> string option
           val set_baseName : 'tags this -> string -> unit
           val get_calendar : 'tags this -> string option
           val set_calendar : 'tags this -> string -> unit
           val get_caseFirst :
             'tags this -> LocaleCollationCaseFirst.t option
           val set_caseFirst :
             'tags this -> LocaleCollationCaseFirst.t -> unit
           val get_collation : 'tags this -> string option
           val set_collation : 'tags this -> string -> unit
           val get_hourCycle : 'tags this -> LocaleHourCycleKey.t option
           val set_hourCycle : 'tags this -> LocaleHourCycleKey.t -> unit
           val get_language : 'tags this -> string option
           val set_language : 'tags this -> string -> unit
           val get_numberingSystem : 'tags this -> string option
           val set_numberingSystem : 'tags this -> string -> unit
           val get_numeric : 'tags this -> bool option
           val set_numeric : 'tags this -> bool -> unit
           val get_region : 'tags this -> string option
           val set_region : 'tags this -> string -> unit
           val get_script : 'tags this -> string option
           val set_script : 'tags this -> string -> unit
           val create :
             ?baseName:string ->
               ?calendar:string ->
                 ?caseFirst:LocaleCollationCaseFirst.t ->
                   ?collation:string ->
                     ?hourCycle:LocaleHourCycleKey.t ->
                       ?language:string ->
                         ?numberingSystem:string ->
                           ?numeric:bool ->
                             ?region:string -> ?script:string -> unit -> t
           val cast_from : 'tags this -> t
         end
         module Locale :
         sig
           type t = [ `Intl_Locale  | `Intl_LocaleOptions ] intf
           [@@@js.stop ]
           type tags = [ `Intl_Locale  | `Intl_LocaleOptions ]
           [@@@js.start ]
           [@@@js.implem type tags = [ `Intl_Locale  | `Intl_LocaleOptions ]]
           type 'tags this = 'tags intf constraint 'tags = [> `Intl_Locale ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val get_baseName : 'tags this -> string
           val set_baseName : 'tags this -> string -> unit
           val get_language : 'tags this -> string
           val set_language : 'tags this -> string -> unit
           val maximize : 'tags this -> t
           val minimize : 'tags this -> t
           val toString : 'tags this -> UnicodeBCP47LocaleIdentifier.t
           val cast_from : 'tags this -> t
           val create :
             tag:[ `U1 of UnicodeBCP47LocaleIdentifier.t  | `U2 of t ] ->
               ?options:LocaleOptions.t -> unit -> t
         end
         module LocalesArgument :
         sig
           type t =
             (Locale.t, UnicodeBCP47LocaleIdentifier.t,
               (Locale.t, UnicodeBCP47LocaleIdentifier.t) union2 list) union3
               option
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
         end
         module Segmenter :
         sig
           type t = [ `Intl_Segmenter ] intf
           [@@@js.stop ]
           type tags = [ `Intl_Segmenter ]
           [@@@js.start ]
           [@@@js.implem type tags = [ `Intl_Segmenter ]]
           type 'tags this =
             'tags intf constraint 'tags = [> `Intl_Segmenter ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val segment : 'tags this -> input:string -> Segments.t
           val resolvedOptions : 'tags this -> ResolvedSegmenterOptions.t
           val cast_from : 'tags this -> t
           val prototype : unit -> t
           val create :
             ?locales:LocalesArgument.t ->
               ?options:SegmenterOptions.t -> unit -> t
           val supportedLocalesOf :
             locales:LocalesArgument.t ->
               ?options:(SegmenterOptions.t, [ `L_s77_localeMatcher ]) Pick.t
                 -> unit -> UnicodeBCP47LocaleIdentifier.t list
         end
         module RelativeTimeFormatNumeric :
         sig
           type t = [ `L_s22_always  | `L_s23_auto ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
         end
         module RelativeTimeFormatStyle :
         sig
           type t = [ `L_s122_short  | `L_s78_long  | `L_s92_narrow ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
         end
         module ResolvedRelativeTimeFormatOptions :
         sig
           type t = [ `Intl_ResolvedRelativeTimeFormatOptions ] intf
           [@@@js.stop ]
           type tags = [ `Intl_ResolvedRelativeTimeFormatOptions ]
           [@@@js.start ]
           [@@@js.implem
             type tags = [ `Intl_ResolvedRelativeTimeFormatOptions ]]
           type 'tags this =
             'tags intf constraint 'tags =
                         [> `Intl_ResolvedRelativeTimeFormatOptions ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val get_locale : 'tags this -> UnicodeBCP47LocaleIdentifier.t
           val set_locale :
             'tags this -> UnicodeBCP47LocaleIdentifier.t -> unit
           val get_style : 'tags this -> RelativeTimeFormatStyle.t
           val set_style : 'tags this -> RelativeTimeFormatStyle.t -> unit
           val get_numeric : 'tags this -> RelativeTimeFormatNumeric.t
           val set_numeric :
             'tags this -> RelativeTimeFormatNumeric.t -> unit
           val get_numberingSystem : 'tags this -> string
           val set_numberingSystem : 'tags this -> string -> unit
           val create :
             locale:UnicodeBCP47LocaleIdentifier.t ->
               style:RelativeTimeFormatStyle.t ->
                 numeric:RelativeTimeFormatNumeric.t ->
                   numberingSystem:string -> unit -> t
           val cast_from : 'tags this -> t
         end
         module RelativeTimeFormatUnit :
         sig
           type t =
             [ `L_s109_quarter  | `L_s110_quarters  | `L_s118_second 
             | `L_s119_seconds  | `L_s141_week  | `L_s143_weeks 
             | `L_s145_year  | `L_s146_years  | `L_s38_day  | `L_s40_days 
             | `L_s71_hour  | `L_s72_hours  | `L_s86_minute 
             | `L_s87_minutes  | `L_s88_month  | `L_s89_months ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
         end
         module RelativeTimeFormatUnitSingular :
         sig
           type t =
             [ `L_s109_quarter  | `L_s118_second  | `L_s141_week 
             | `L_s145_year  | `L_s38_day  | `L_s71_hour  | `L_s86_minute 
             | `L_s88_month ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
         end
         module ES2020NumberFormatPartType :
         sig
           type t =
             [ `L_s137_unit  | `L_s138_unknown  | `L_s33_compact 
             | `L_s55_exponentInteger  | `L_s56_exponentMinusSign 
             | `L_s57_exponentSeparator ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
         end
         module ES2018NumberFormatPartType :
         sig
           type t =
             [ `L_s103_percent  | `L_s104_percentSign  | `L_s108_plusSign 
             | `L_s130_symbol  | `L_s31_code  | `L_s36_currency 
             | `L_s41_decimal  | `L_s60_fraction  | `L_s66_group 
             | `L_s73_infinity  | `L_s74_integer  | `L_s76_literal 
             | `L_s85_minusSign  | `L_s90_name  | `L_s91_nan ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
         end
         module NumberFormatPartTypes :
         sig
           type t =
             [ `L_s103_percent  | `L_s104_percentSign  | `L_s108_plusSign 
             | `L_s130_symbol  | `L_s137_unit  | `L_s138_unknown 
             | `L_s31_code  | `L_s33_compact  | `L_s36_currency 
             | `L_s41_decimal  | `L_s55_exponentInteger 
             | `L_s56_exponentMinusSign  | `L_s57_exponentSeparator 
             | `L_s60_fraction  | `L_s66_group  | `L_s73_infinity 
             | `L_s74_integer  | `L_s76_literal  | `L_s85_minusSign 
             | `L_s90_name  | `L_s91_nan ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
         end
         module RelativeTimeFormatPart :
         sig
           module AnonymousInterface12 :
           sig
             type t = private Ojs.t
             val t_to_js : t -> Ojs.t
             val t_of_js : Ojs.t -> t
             val get_type :
               t -> (NumberFormatPartTypes.t, [ `L_s76_literal ]) Exclude.t
             val set_type :
               t ->
                 (NumberFormatPartTypes.t, [ `L_s76_literal ]) Exclude.t ->
                   unit
             val get_value : t -> string
             val set_value : t -> string -> unit
             val get_unit : t -> RelativeTimeFormatUnitSingular.t
             val set_unit : t -> RelativeTimeFormatUnitSingular.t -> unit
             val create :
               type_:(NumberFormatPartTypes.t, [ `L_s76_literal ]) Exclude.t
                 ->
                 value:string ->
                   unit:RelativeTimeFormatUnitSingular.t -> unit -> t
           end
           module AnonymousInterface10 :
           sig
             type t = private Ojs.t
             val t_to_js : t -> Ojs.t
             val t_of_js : Ojs.t -> t
             val get_type : t -> [ `L_s76_literal ]
             val set_type : t -> [ `L_s76_literal ] -> unit
             val get_value : t -> string
             val set_value : t -> string -> unit
             val create :
               type_:[ `L_s76_literal ] -> value:string -> unit -> t
           end
           type t = (AnonymousInterface10.t, AnonymousInterface12.t) union2
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
         end
         module RelativeTimeFormatLocaleMatcher :
         sig
           type t = [ `L_s26_best_fit  | `L_s81_lookup ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
         end
         module RelativeTimeFormatOptions :
         sig
           type t = [ `Intl_RelativeTimeFormatOptions ] intf
           [@@@js.stop ]
           type tags = [ `Intl_RelativeTimeFormatOptions ]
           [@@@js.start ]
           [@@@js.implem type tags = [ `Intl_RelativeTimeFormatOptions ]]
           type 'tags this =
             'tags intf constraint 'tags =
                         [> `Intl_RelativeTimeFormatOptions ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val get_localeMatcher :
             'tags this -> RelativeTimeFormatLocaleMatcher.t option
           val set_localeMatcher :
             'tags this -> RelativeTimeFormatLocaleMatcher.t -> unit
           val get_numeric : 'tags this -> RelativeTimeFormatNumeric.t option
           val set_numeric :
             'tags this -> RelativeTimeFormatNumeric.t -> unit
           val get_style : 'tags this -> RelativeTimeFormatStyle.t option
           val set_style : 'tags this -> RelativeTimeFormatStyle.t -> unit
           val create :
             ?localeMatcher:RelativeTimeFormatLocaleMatcher.t ->
               ?numeric:RelativeTimeFormatNumeric.t ->
                 ?style:RelativeTimeFormatStyle.t -> unit -> t
           val cast_from : 'tags this -> t
         end
         module RelativeTimeFormat :
         sig
           type t = [ `Intl_RelativeTimeFormat ] intf
           [@@@js.stop ]
           type tags = [ `Intl_RelativeTimeFormat ]
           [@@@js.start ]
           [@@@js.implem type tags = [ `Intl_RelativeTimeFormat ]]
           type 'tags this =
             'tags intf constraint 'tags = [> `Intl_RelativeTimeFormat ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val format :
             'tags this ->
               value:float -> unit:RelativeTimeFormatUnit.t -> string
           val formatToParts :
             'tags this ->
               value:float ->
                 unit:RelativeTimeFormatUnit.t ->
                   RelativeTimeFormatPart.t list
           val resolvedOptions :
             'tags this -> ResolvedRelativeTimeFormatOptions.t
           val cast_from : 'tags this -> t
           val create :
             ?locales:LocalesArgument.t ->
               ?options:RelativeTimeFormatOptions.t -> unit -> t
           val supportedLocalesOf :
             ?locales:LocalesArgument.t ->
               ?options:RelativeTimeFormatOptions.t ->
                 unit -> UnicodeBCP47LocaleIdentifier.t list
         end
         module PluralRuleType :
         sig
           type t = [ `L_s101_ordinal  | `L_s29_cardinal ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
         end
         module LDMLPluralRule :
         sig
           type t =
             [ `L_s100_one  | `L_s102_other  | `L_s135_two  | `L_s147_zero 
             | `L_s59_few  | `L_s83_many ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
         end
         module ResolvedPluralRulesOptions :
         sig
           type t = [ `Intl_ResolvedPluralRulesOptions ] intf
           [@@@js.stop ]
           type tags = [ `Intl_ResolvedPluralRulesOptions ]
           [@@@js.start ]
           [@@@js.implem type tags = [ `Intl_ResolvedPluralRulesOptions ]]
           type 'tags this =
             'tags intf constraint 'tags =
                         [> `Intl_ResolvedPluralRulesOptions ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val get_locale : 'tags this -> string
           val set_locale : 'tags this -> string -> unit
           val get_pluralCategories : 'tags this -> LDMLPluralRule.t list
           val set_pluralCategories :
             'tags this -> LDMLPluralRule.t list -> unit
           val get_type : 'tags this -> PluralRuleType.t
           val set_type : 'tags this -> PluralRuleType.t -> unit
           val get_minimumIntegerDigits : 'tags this -> float
           val set_minimumIntegerDigits : 'tags this -> float -> unit
           val get_minimumFractionDigits : 'tags this -> float
           val set_minimumFractionDigits : 'tags this -> float -> unit
           val get_maximumFractionDigits : 'tags this -> float
           val set_maximumFractionDigits : 'tags this -> float -> unit
           val get_minimumSignificantDigits : 'tags this -> float option
           val set_minimumSignificantDigits : 'tags this -> float -> unit
           val get_maximumSignificantDigits : 'tags this -> float option
           val set_maximumSignificantDigits : 'tags this -> float -> unit
           val create :
             locale:string ->
               pluralCategories:LDMLPluralRule.t list ->
                 type_:PluralRuleType.t ->
                   minimumIntegerDigits:float ->
                     minimumFractionDigits:float ->
                       maximumFractionDigits:float ->
                         ?minimumSignificantDigits:float ->
                           ?maximumSignificantDigits:float -> unit -> t
           val cast_from : 'tags this -> t
         end
         module PluralRulesOptions :
         sig
           type t = [ `Intl_PluralRulesOptions ] intf
           [@@@js.stop ]
           type tags = [ `Intl_PluralRulesOptions ]
           [@@@js.start ]
           [@@@js.implem type tags = [ `Intl_PluralRulesOptions ]]
           type 'tags this =
             'tags intf constraint 'tags = [> `Intl_PluralRulesOptions ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val get_localeMatcher :
             'tags this -> [ `L_s26_best_fit  | `L_s81_lookup ] option
           val set_localeMatcher :
             'tags this ->
               [ `Undefined of undefined  | `U1 of [ `L_s81_lookup ] 
               | `U2 of [ `L_s26_best_fit ] ] -> unit
           val get_type : 'tags this -> PluralRuleType.t option
           val set_type :
             'tags this ->
               [ `Undefined of undefined  | `U1 of PluralRuleType.t ] -> unit
           val get_minimumIntegerDigits : 'tags this -> float option
           val set_minimumIntegerDigits :
             'tags this ->
               [ `Undefined of undefined  | `U1 of float ] -> unit
           val get_minimumFractionDigits : 'tags this -> float option
           val set_minimumFractionDigits :
             'tags this ->
               [ `Undefined of undefined  | `U1 of float ] -> unit
           val get_maximumFractionDigits : 'tags this -> float option
           val set_maximumFractionDigits :
             'tags this ->
               [ `Undefined of undefined  | `U1 of float ] -> unit
           val get_minimumSignificantDigits : 'tags this -> float option
           val set_minimumSignificantDigits :
             'tags this ->
               [ `Undefined of undefined  | `U1 of float ] -> unit
           val get_maximumSignificantDigits : 'tags this -> float option
           val set_maximumSignificantDigits :
             'tags this ->
               [ `Undefined of undefined  | `U1 of float ] -> unit
           val create :
             ?localeMatcher:[ `L_s26_best_fit  | `L_s81_lookup ] ->
               ?type_:PluralRuleType.t ->
                 ?minimumIntegerDigits:float ->
                   ?minimumFractionDigits:float ->
                     ?maximumFractionDigits:float ->
                       ?minimumSignificantDigits:float ->
                         ?maximumSignificantDigits:float -> unit -> t
           val cast_from : 'tags this -> t
         end
         module PluralRules :
         sig
           module AnonymousInterface5 :
           sig
             type t = private Ojs.t
             val t_to_js : t -> Ojs.t
             val t_of_js : Ojs.t -> t
             val get_localeMatcher :
               t -> [ `L_s26_best_fit  | `L_s81_lookup ] option
             val set_localeMatcher :
               t ->
                 [ `U1 of [ `L_s81_lookup ]  | `U2 of [ `L_s26_best_fit ] ]
                   -> unit
             val create :
               ?localeMatcher:[ `L_s26_best_fit  | `L_s81_lookup ] ->
                 unit -> t
           end
           type t = [ `Intl_PluralRules ] intf
           [@@@js.stop ]
           type tags = [ `Intl_PluralRules ]
           [@@@js.start ]
           [@@@js.implem type tags = [ `Intl_PluralRules ]]
           type 'tags this =
             'tags intf constraint 'tags = [> `Intl_PluralRules ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val resolvedOptions : 'tags this -> ResolvedPluralRulesOptions.t
           val select : 'tags this -> n:float -> LDMLPluralRule.t
           val create :
             ?locales:LocalesArgument.t ->
               ?options:PluralRulesOptions.t -> unit -> t
           val invoke :
             ?locales:LocalesArgument.t ->
               ?options:PluralRulesOptions.t -> unit -> t
           val supportedLocalesOf :
             locales:LocalesArgument.t ->
               ?options:AnonymousInterface5.t -> unit -> string list
           val create' :
             ?locales:[ `U1 of string  | `U2 of string list ] ->
               ?options:PluralRulesOptions.t -> unit -> t
           val invoke' :
             ?locales:[ `U1 of string  | `U2 of string list ] ->
               ?options:PluralRulesOptions.t -> unit -> t
           val supportedLocalesOf' :
             locales:[ `U1 of string  | `U2 of string list ] ->
               ?options:AnonymousInterface5.t -> unit -> string list
           val cast_from : 'tags this -> t
         end
         module ResolvedNumberFormatOptions :
         sig
           type t = [ `Intl_ResolvedNumberFormatOptions ] intf
           [@@@js.stop ]
           type tags = [ `Intl_ResolvedNumberFormatOptions ]
           [@@@js.start ]
           [@@@js.implem type tags = [ `Intl_ResolvedNumberFormatOptions ]]
           type 'tags this =
             'tags intf constraint 'tags =
                         [> `Intl_ResolvedNumberFormatOptions ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val get_compactDisplay :
             'tags this -> [ `L_s122_short  | `L_s78_long ] option
           val set_compactDisplay :
             'tags this ->
               [ `U1 of [ `L_s122_short ]  | `U2 of [ `L_s78_long ] ] -> unit
           val get_notation :
             'tags this ->
               [ `L_s114_scientific  | `L_s126_standard  | `L_s33_compact 
               | `L_s51_engineering ] option
           val set_notation :
             'tags this ->
               [ `U1 of [ `L_s126_standard ] 
               | `U2 of [ `L_s114_scientific ] 
               | `U3 of [ `L_s51_engineering ]  | `U4 of [ `L_s33_compact ] ]
                 -> unit
           val get_signDisplay :
             'tags this ->
               [ `L_s22_always  | `L_s23_auto  | `L_s54_exceptZero 
               | `L_s93_never ] option
           val set_signDisplay :
             'tags this ->
               [ `U1 of [ `L_s23_auto ]  | `U2 of [ `L_s93_never ] 
               | `U3 of [ `L_s22_always ]  | `U4 of [ `L_s54_exceptZero ] ]
                 -> unit
           val get_unit : 'tags this -> string option
           val set_unit : 'tags this -> string -> unit
           val get_unitDisplay :
             'tags this ->
               [ `L_s122_short  | `L_s78_long  | `L_s92_narrow ] option
           val set_unitDisplay :
             'tags this ->
               [ `U1 of [ `L_s122_short ]  | `U2 of [ `L_s78_long ] 
               | `U3 of [ `L_s92_narrow ] ] -> unit
           val get_currencyDisplay : 'tags this -> string option
           val set_currencyDisplay : 'tags this -> string -> unit
           val get_currencySign : 'tags this -> string option
           val set_currencySign : 'tags this -> string -> unit
           val get_locale : 'tags this -> string
           val set_locale : 'tags this -> string -> unit
           val get_numberingSystem : 'tags this -> string
           val set_numberingSystem : 'tags this -> string -> unit
           val get_style : 'tags this -> string
           val set_style : 'tags this -> string -> unit
           val get_currency : 'tags this -> string option
           val set_currency : 'tags this -> string -> unit
           val get_minimumIntegerDigits : 'tags this -> float
           val set_minimumIntegerDigits : 'tags this -> float -> unit
           val get_minimumFractionDigits : 'tags this -> float
           val set_minimumFractionDigits : 'tags this -> float -> unit
           val get_maximumFractionDigits : 'tags this -> float
           val set_maximumFractionDigits : 'tags this -> float -> unit
           val get_minimumSignificantDigits : 'tags this -> float option
           val set_minimumSignificantDigits : 'tags this -> float -> unit
           val get_maximumSignificantDigits : 'tags this -> float option
           val set_maximumSignificantDigits : 'tags this -> float -> unit
           val get_useGrouping : 'tags this -> bool
           val set_useGrouping : 'tags this -> bool -> unit
           val create :
             ?compactDisplay:[ `L_s122_short  | `L_s78_long ] ->
               ?notation:[ `L_s114_scientific  | `L_s126_standard 
                         | `L_s33_compact  | `L_s51_engineering ]
                 ->
                 ?signDisplay:[ `L_s22_always  | `L_s23_auto 
                              | `L_s54_exceptZero  | `L_s93_never ]
                   ->
                   ?unit:string ->
                     ?unitDisplay:[ `L_s122_short  | `L_s78_long 
                                  | `L_s92_narrow ]
                       ->
                       ?currencyDisplay:string ->
                         ?currencySign:string ->
                           locale:string ->
                             numberingSystem:string ->
                               style:string ->
                                 ?currency:string ->
                                   minimumIntegerDigits:float ->
                                     minimumFractionDigits:float ->
                                       maximumFractionDigits:float ->
                                         ?minimumSignificantDigits:float ->
                                           ?maximumSignificantDigits:float ->
                                             useGrouping:bool -> unit -> t
           val cast_from : 'tags this -> t
         end
         module NumberFormatPart :
         sig
           type t = [ `Intl_NumberFormatPart ] intf
           [@@@js.stop ]
           type tags = [ `Intl_NumberFormatPart ]
           [@@@js.start ]
           [@@@js.implem type tags = [ `Intl_NumberFormatPart ]]
           type 'tags this =
             'tags intf constraint 'tags = [> `Intl_NumberFormatPart ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val get_type : 'tags this -> NumberFormatPartTypes.t
           val set_type : 'tags this -> NumberFormatPartTypes.t -> unit
           val get_value : 'tags this -> string
           val set_value : 'tags this -> string -> unit
           val create :
             type_:NumberFormatPartTypes.t -> value:string -> unit -> t
           val cast_from : 'tags this -> t
         end
         module NumberRangeFormatPart :
         sig
           type t =
             [ `Intl_NumberFormatPart  | `Intl_NumberRangeFormatPart ] intf
           [@@@js.stop ]
           type tags =
             [ `Intl_NumberFormatPart  | `Intl_NumberRangeFormatPart ]
           [@@@js.start ]
           [@@@js.implem
             type tags =
               [ `Intl_NumberFormatPart  | `Intl_NumberRangeFormatPart ]]
           type 'tags this =
             'tags intf constraint 'tags = [> `Intl_NumberRangeFormatPart ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val get_source :
             'tags this ->
               [ `L_s121_shared  | `L_s127_startRange  | `L_s50_endRange ]
           val set_source :
             'tags this ->
               [ `U1 of [ `L_s127_startRange ]  | `U2 of [ `L_s50_endRange ] 
               | `U3 of [ `L_s121_shared ] ] -> unit
           val create :
             source:[ `L_s121_shared  | `L_s127_startRange 
                    | `L_s50_endRange ]
               -> unit -> t
           val cast_from : 'tags this -> t
         end
         module NumberFormatOptions :
         sig
           type t = [ `Intl_NumberFormatOptions ] intf
           [@@@js.stop ]
           type tags = [ `Intl_NumberFormatOptions ]
           [@@@js.start ]
           [@@@js.implem type tags = [ `Intl_NumberFormatOptions ]]
           type 'tags this =
             'tags intf constraint 'tags = [> `Intl_NumberFormatOptions ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val get_compactDisplay :
             'tags this -> [ `L_s122_short  | `L_s78_long ] option
           val set_compactDisplay :
             'tags this ->
               [ `Undefined of undefined  | `U1 of [ `L_s122_short ] 
               | `U2 of [ `L_s78_long ] ] -> unit
           val get_notation :
             'tags this ->
               [ `L_s114_scientific  | `L_s126_standard  | `L_s33_compact 
               | `L_s51_engineering ] option
           val set_notation :
             'tags this ->
               [ `Undefined of undefined  | `U1 of [ `L_s126_standard ] 
               | `U2 of [ `L_s114_scientific ] 
               | `U3 of [ `L_s51_engineering ]  | `U4 of [ `L_s33_compact ] ]
                 -> unit
           val get_signDisplay :
             'tags this ->
               [ `L_s22_always  | `L_s23_auto  | `L_s54_exceptZero 
               | `L_s93_never ] option
           val set_signDisplay :
             'tags this ->
               [ `Undefined of undefined  | `U1 of [ `L_s23_auto ] 
               | `U2 of [ `L_s93_never ]  | `U3 of [ `L_s22_always ] 
               | `U4 of [ `L_s54_exceptZero ] ] -> unit
           val get_unit : 'tags this -> string option
           val set_unit :
             'tags this ->
               [ `Undefined of undefined  | `U1 of string ] -> unit
           val get_unitDisplay :
             'tags this ->
               [ `L_s122_short  | `L_s78_long  | `L_s92_narrow ] option
           val set_unitDisplay :
             'tags this ->
               [ `Undefined of undefined  | `U1 of [ `L_s122_short ] 
               | `U2 of [ `L_s78_long ]  | `U3 of [ `L_s92_narrow ] ] -> 
                 unit
           val get_currencyDisplay : 'tags this -> string option
           val set_currencyDisplay :
             'tags this ->
               [ `Undefined of undefined  | `U1 of string ] -> unit
           val get_currencySign : 'tags this -> string option
           val set_currencySign :
             'tags this ->
               [ `Undefined of undefined  | `U1 of string ] -> unit
           val get_localeMatcher : 'tags this -> string option
           val set_localeMatcher :
             'tags this ->
               [ `Undefined of undefined  | `U1 of string ] -> unit
           val get_style : 'tags this -> string option
           val set_style :
             'tags this ->
               [ `Undefined of undefined  | `U1 of string ] -> unit
           val get_currency : 'tags this -> string option
           val set_currency :
             'tags this ->
               [ `Undefined of undefined  | `U1 of string ] -> unit
           val get_currencySign' : 'tags this -> string option
           val set_currencySign' :
             'tags this ->
               [ `Undefined of undefined  | `U1 of string ] -> unit
           val get_useGrouping : 'tags this -> bool option
           val set_useGrouping :
             'tags this -> [ `Undefined of undefined  | `U1 of bool ] -> unit
           val get_minimumIntegerDigits : 'tags this -> float option
           val set_minimumIntegerDigits :
             'tags this ->
               [ `Undefined of undefined  | `U1 of float ] -> unit
           val get_minimumFractionDigits : 'tags this -> float option
           val set_minimumFractionDigits :
             'tags this ->
               [ `Undefined of undefined  | `U1 of float ] -> unit
           val get_maximumFractionDigits : 'tags this -> float option
           val set_maximumFractionDigits :
             'tags this ->
               [ `Undefined of undefined  | `U1 of float ] -> unit
           val get_minimumSignificantDigits : 'tags this -> float option
           val set_minimumSignificantDigits :
             'tags this ->
               [ `Undefined of undefined  | `U1 of float ] -> unit
           val get_maximumSignificantDigits : 'tags this -> float option
           val set_maximumSignificantDigits :
             'tags this ->
               [ `Undefined of undefined  | `U1 of float ] -> unit
           val create :
             ?compactDisplay:[ `L_s122_short  | `L_s78_long ] ->
               ?notation:[ `L_s114_scientific  | `L_s126_standard 
                         | `L_s33_compact  | `L_s51_engineering ]
                 ->
                 ?signDisplay:[ `L_s22_always  | `L_s23_auto 
                              | `L_s54_exceptZero  | `L_s93_never ]
                   ->
                   ?unit:string ->
                     ?unitDisplay:[ `L_s122_short  | `L_s78_long 
                                  | `L_s92_narrow ]
                       ->
                       ?currencyDisplay:string ->
                         ?currencySign:string ->
                           ?localeMatcher:string ->
                             ?style:string ->
                               ?currency:string ->
                                 ?useGrouping:bool ->
                                   ?minimumIntegerDigits:float ->
                                     ?minimumFractionDigits:float ->
                                       ?maximumFractionDigits:float ->
                                         ?minimumSignificantDigits:float ->
                                           ?maximumSignificantDigits:float ->
                                             unit -> t
           val cast_from : 'tags this -> t
         end
         module NumberFormat :
         sig
           type t = [ `Intl_NumberFormat ] intf
           [@@@js.stop ]
           type tags = [ `Intl_NumberFormat ]
           [@@@js.start ]
           [@@@js.implem type tags = [ `Intl_NumberFormat ]]
           type 'tags this =
             'tags intf constraint 'tags = [> `Intl_NumberFormat ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val formatRange :
             'tags this ->
               start:[ `U1 of float  | `U2 of bigint ] ->
                 end_:[ `U1 of float  | `U2 of bigint ] -> string
           val formatRangeToParts :
             'tags this ->
               start:[ `U1 of float  | `U2 of bigint ] ->
                 end_:[ `U1 of float  | `U2 of bigint ] ->
                   NumberRangeFormatPart.t list
           val format :
             'tags this -> value:[ `U1 of float  | `U2 of bigint ] -> string
           val resolvedOptions : 'tags this -> ResolvedNumberFormatOptions.t
           val formatToParts :
             'tags this ->
               ?number:[ `U1 of float  | `U2 of bigint ] ->
                 unit -> NumberFormatPart.t list
           val format' : 'tags this -> value:float -> string
           val resolvedOptions' : 'tags this -> ResolvedNumberFormatOptions.t
           val create :
             ?locales:LocalesArgument.t ->
               ?options:NumberFormatOptions.t -> unit -> t
           val invoke :
             ?locales:LocalesArgument.t ->
               ?options:NumberFormatOptions.t -> unit -> t
           val supportedLocalesOf :
             locales:LocalesArgument.t ->
               ?options:NumberFormatOptions.t -> unit -> string list
           val create' :
             ?locales:[ `U1 of string  | `U2 of string list ] ->
               ?options:NumberFormatOptions.t -> unit -> t
           val invoke' :
             ?locales:[ `U1 of string  | `U2 of string list ] ->
               ?options:NumberFormatOptions.t -> unit -> t
           val supportedLocalesOf' :
             locales:[ `U1 of string  | `U2 of string list ] ->
               ?options:NumberFormatOptions.t -> unit -> string list
           val prototype : unit -> t
           val cast_from : 'tags this -> t
         end
         module ListFormatType :
         sig
           type t =
             [ `L_s137_unit  | `L_s35_conjunction  | `L_s46_disjunction ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
         end
         module ListFormatStyle :
         sig
           type t = [ `L_s122_short  | `L_s78_long  | `L_s92_narrow ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
         end
         module ResolvedListFormatOptions :
         sig
           type t = [ `Intl_ResolvedListFormatOptions ] intf
           [@@@js.stop ]
           type tags = [ `Intl_ResolvedListFormatOptions ]
           [@@@js.start ]
           [@@@js.implem type tags = [ `Intl_ResolvedListFormatOptions ]]
           type 'tags this =
             'tags intf constraint 'tags =
                         [> `Intl_ResolvedListFormatOptions ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val get_locale : 'tags this -> string
           val set_locale : 'tags this -> string -> unit
           val get_style : 'tags this -> ListFormatStyle.t
           val set_style : 'tags this -> ListFormatStyle.t -> unit
           val get_type : 'tags this -> ListFormatType.t
           val set_type : 'tags this -> ListFormatType.t -> unit
           val create :
             locale:string ->
               style:ListFormatStyle.t -> type_:ListFormatType.t -> unit -> t
           val cast_from : 'tags this -> t
         end
         module ListFormatLocaleMatcher :
         sig
           type t = [ `L_s26_best_fit  | `L_s81_lookup ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
         end
         module ListFormatOptions :
         sig
           type t = [ `Intl_ListFormatOptions ] intf
           [@@@js.stop ]
           type tags = [ `Intl_ListFormatOptions ]
           [@@@js.start ]
           [@@@js.implem type tags = [ `Intl_ListFormatOptions ]]
           type 'tags this =
             'tags intf constraint 'tags = [> `Intl_ListFormatOptions ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val get_localeMatcher :
             'tags this -> ListFormatLocaleMatcher.t option
           val set_localeMatcher :
             'tags this ->
               [ `Undefined of undefined 
               | `U1 of ListFormatLocaleMatcher.t ] -> unit
           val get_type : 'tags this -> ListFormatType.t option
           val set_type :
             'tags this ->
               [ `Undefined of undefined  | `U1 of ListFormatType.t ] -> unit
           val get_style : 'tags this -> ListFormatStyle.t option
           val set_style :
             'tags this ->
               [ `Undefined of undefined  | `U1 of ListFormatStyle.t ] ->
                 unit
           val create :
             ?localeMatcher:ListFormatLocaleMatcher.t ->
               ?type_:ListFormatType.t ->
                 ?style:ListFormatStyle.t -> unit -> t
           val cast_from : 'tags this -> t
         end
         module ListFormat :
         sig
           module AnonymousInterface11 :
           sig
             type t = private Ojs.t
             val t_to_js : t -> Ojs.t
             val t_of_js : Ojs.t -> t
             val get_type : t -> [ `L_s48_element  | `L_s76_literal ]
             val set_type :
               t ->
                 [ `U1 of [ `L_s48_element ]  | `U2 of [ `L_s76_literal ] ]
                   -> unit
             val get_value : t -> string
             val set_value : t -> string -> unit
             val create :
               type_:[ `L_s48_element  | `L_s76_literal ] ->
                 value:string -> unit -> t
           end
           type t = [ `Intl_ListFormat ] intf
           [@@@js.stop ]
           type tags = [ `Intl_ListFormat ]
           [@@@js.start ]
           [@@@js.implem type tags = [ `Intl_ListFormat ]]
           type 'tags this =
             'tags intf constraint 'tags = [> `Intl_ListFormat ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val format : 'tags this -> list:string Iterable.t -> string
           val formatToParts :
             'tags this ->
               list:string Iterable.t -> AnonymousInterface11.t list
           val resolvedOptions : 'tags this -> ResolvedListFormatOptions.t
           val cast_from : 'tags this -> t
           val prototype : unit -> t
           val create :
             ?locales:LocalesArgument.t ->
               ?options:ListFormatOptions.t -> unit -> t
           val supportedLocalesOf :
             locales:LocalesArgument.t ->
               ?options:(ListFormatOptions.t, [ `L_s77_localeMatcher ])
                 Pick.t -> unit -> UnicodeBCP47LocaleIdentifier.t list
         end
         module DisplayNamesType :
         sig
           type t =
             [ `L_s112_region  | `L_s115_script  | `L_s28_calendar 
             | `L_s36_currency  | `L_s37_dateTimeField  | `L_s75_language ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
         end
         module DisplayNamesLanguageDisplay :
         sig
           type t = [ `L_s126_standard  | `L_s43_dialect ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
         end
         module DisplayNamesFallback :
         sig
           type t = [ `L_s31_code  | `L_s94_none ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
         end
         module ResolvedDisplayNamesOptions :
         sig
           type t = [ `Intl_ResolvedDisplayNamesOptions ] intf
           [@@@js.stop ]
           type tags = [ `Intl_ResolvedDisplayNamesOptions ]
           [@@@js.start ]
           [@@@js.implem type tags = [ `Intl_ResolvedDisplayNamesOptions ]]
           type 'tags this =
             'tags intf constraint 'tags =
                         [> `Intl_ResolvedDisplayNamesOptions ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val get_locale : 'tags this -> UnicodeBCP47LocaleIdentifier.t
           val set_locale :
             'tags this -> UnicodeBCP47LocaleIdentifier.t -> unit
           val get_style : 'tags this -> RelativeTimeFormatStyle.t
           val set_style : 'tags this -> RelativeTimeFormatStyle.t -> unit
           val get_type : 'tags this -> DisplayNamesType.t
           val set_type : 'tags this -> DisplayNamesType.t -> unit
           val get_fallback : 'tags this -> DisplayNamesFallback.t
           val set_fallback : 'tags this -> DisplayNamesFallback.t -> unit
           val get_languageDisplay :
             'tags this -> DisplayNamesLanguageDisplay.t option
           val set_languageDisplay :
             'tags this -> DisplayNamesLanguageDisplay.t -> unit
           val create :
             locale:UnicodeBCP47LocaleIdentifier.t ->
               style:RelativeTimeFormatStyle.t ->
                 type_:DisplayNamesType.t ->
                   fallback:DisplayNamesFallback.t ->
                     ?languageDisplay:DisplayNamesLanguageDisplay.t ->
                       unit -> t
           val cast_from : 'tags this -> t
         end
         module DisplayNamesOptions :
         sig
           type t = [ `Intl_DisplayNamesOptions ] intf
           [@@@js.stop ]
           type tags = [ `Intl_DisplayNamesOptions ]
           [@@@js.start ]
           [@@@js.implem type tags = [ `Intl_DisplayNamesOptions ]]
           type 'tags this =
             'tags intf constraint 'tags = [> `Intl_DisplayNamesOptions ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val get_localeMatcher :
             'tags this -> RelativeTimeFormatLocaleMatcher.t option
           val set_localeMatcher :
             'tags this -> RelativeTimeFormatLocaleMatcher.t -> unit
           val get_style : 'tags this -> RelativeTimeFormatStyle.t option
           val set_style : 'tags this -> RelativeTimeFormatStyle.t -> unit
           val get_type : 'tags this -> DisplayNamesType.t
           val set_type : 'tags this -> DisplayNamesType.t -> unit
           val get_languageDisplay :
             'tags this -> DisplayNamesLanguageDisplay.t option
           val set_languageDisplay :
             'tags this -> DisplayNamesLanguageDisplay.t -> unit
           val get_fallback : 'tags this -> DisplayNamesFallback.t option
           val set_fallback : 'tags this -> DisplayNamesFallback.t -> unit
           val create :
             ?localeMatcher:RelativeTimeFormatLocaleMatcher.t ->
               ?style:RelativeTimeFormatStyle.t ->
                 type_:DisplayNamesType.t ->
                   ?languageDisplay:DisplayNamesLanguageDisplay.t ->
                     ?fallback:DisplayNamesFallback.t -> unit -> t
           val cast_from : 'tags this -> t
         end
         module DisplayNames :
         sig
           module AnonymousInterface4 :
           sig
             type t = private Ojs.t
             val t_to_js : t -> Ojs.t
             val t_of_js : Ojs.t -> t
             val get_localeMatcher :
               t -> RelativeTimeFormatLocaleMatcher.t option
             val set_localeMatcher :
               t -> RelativeTimeFormatLocaleMatcher.t -> unit
             val create :
               ?localeMatcher:RelativeTimeFormatLocaleMatcher.t -> unit -> t
           end
           type t = [ `Intl_DisplayNames ] intf
           [@@@js.stop ]
           type tags = [ `Intl_DisplayNames ]
           [@@@js.start ]
           [@@@js.implem type tags = [ `Intl_DisplayNames ]]
           type 'tags this =
             'tags intf constraint 'tags = [> `Intl_DisplayNames ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val of_ : 'tags this -> code:string -> string option
           val resolvedOptions : 'tags this -> ResolvedDisplayNamesOptions.t
           val cast_from : 'tags this -> t
           val prototype : unit -> t
           val create :
             locales:LocalesArgument.t -> options:DisplayNamesOptions.t -> t
           val supportedLocalesOf :
             ?locales:LocalesArgument.t ->
               ?options:AnonymousInterface4.t ->
                 unit -> UnicodeBCP47LocaleIdentifier.t list
         end
         module DateTimeFormatPartTypesRegistry :
         sig
           type t = [ `Intl_DateTimeFormatPartTypesRegistry ] intf
           [@@@js.stop ]
           type tags = [ `Intl_DateTimeFormatPartTypesRegistry ]
           [@@@js.start ]
           [@@@js.implem
             type tags = [ `Intl_DateTimeFormatPartTypesRegistry ]]
           type 'tags this =
             'tags intf constraint 'tags =
                         [> `Intl_DateTimeFormatPartTypesRegistry ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val get_fractionalSecond : 'tags this -> any
           val set_fractionalSecond : 'tags this -> any -> unit
           val get_unknown : 'tags this -> any
           val set_unknown : 'tags this -> any -> unit
           val get_day : 'tags this -> any
           val set_day : 'tags this -> any -> unit
           val get_dayPeriod : 'tags this -> any
           val set_dayPeriod : 'tags this -> any -> unit
           val get_era : 'tags this -> any
           val set_era : 'tags this -> any -> unit
           val get_hour : 'tags this -> any
           val set_hour : 'tags this -> any -> unit
           val get_literal : 'tags this -> any
           val set_literal : 'tags this -> any -> unit
           val get_minute : 'tags this -> any
           val set_minute : 'tags this -> any -> unit
           val get_month : 'tags this -> any
           val set_month : 'tags this -> any -> unit
           val get_second : 'tags this -> any
           val set_second : 'tags this -> any -> unit
           val get_timeZoneName : 'tags this -> any
           val set_timeZoneName : 'tags this -> any -> unit
           val get_weekday : 'tags this -> any
           val set_weekday : 'tags this -> any -> unit
           val get_year : 'tags this -> any
           val set_year : 'tags this -> any -> unit
           val create :
             fractionalSecond:any ->
               unknown:any ->
                 day:any ->
                   dayPeriod:any ->
                     era:any ->
                       hour:any ->
                         literal:any ->
                           minute:any ->
                             month:any ->
                               second:any ->
                                 timeZoneName:any ->
                                   weekday:any -> year:any -> unit -> t
           val cast_from : 'tags this -> t
         end
         module ResolvedDateTimeFormatOptions :
         sig
           type t = [ `Intl_ResolvedDateTimeFormatOptions ] intf
           [@@@js.stop ]
           type tags = [ `Intl_ResolvedDateTimeFormatOptions ]
           [@@@js.start ]
           [@@@js.implem type tags = [ `Intl_ResolvedDateTimeFormatOptions ]]
           type 'tags this =
             'tags intf constraint 'tags =
                         [> `Intl_ResolvedDateTimeFormatOptions ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val get_formatMatcher :
             'tags this -> [ `L_s25_basic  | `L_s26_best_fit ] option
           val set_formatMatcher :
             'tags this ->
               [ `U1 of [ `L_s25_basic ]  | `U2 of [ `L_s26_best_fit ] ] ->
                 unit
           val get_dateStyle :
             'tags this ->
               [ `L_s122_short  | `L_s63_full  | `L_s78_long 
               | `L_s84_medium ] option
           val set_dateStyle :
             'tags this ->
               [ `U1 of [ `L_s63_full ]  | `U2 of [ `L_s78_long ] 
               | `U3 of [ `L_s84_medium ]  | `U4 of [ `L_s122_short ] ] ->
                 unit
           val get_timeStyle :
             'tags this ->
               [ `L_s122_short  | `L_s63_full  | `L_s78_long 
               | `L_s84_medium ] option
           val set_timeStyle :
             'tags this ->
               [ `U1 of [ `L_s63_full ]  | `U2 of [ `L_s78_long ] 
               | `U3 of [ `L_s84_medium ]  | `U4 of [ `L_s122_short ] ] ->
                 unit
           val get_hourCycle :
             'tags this ->
               [ `L_s67_h11  | `L_s68_h12  | `L_s69_h23  | `L_s70_h24 ]
                 option
           val set_hourCycle :
             'tags this ->
               [ `U1 of [ `L_s67_h11 ]  | `U2 of [ `L_s68_h12 ] 
               | `U3 of [ `L_s69_h23 ]  | `U4 of [ `L_s70_h24 ] ] -> 
                 unit
           val get_dayPeriod :
             'tags this ->
               [ `L_s122_short  | `L_s78_long  | `L_s92_narrow ] option
           val set_dayPeriod :
             'tags this ->
               [ `U1 of [ `L_s92_narrow ]  | `U2 of [ `L_s122_short ] 
               | `U3 of [ `L_s78_long ] ] -> unit
           val get_fractionalSecondDigits :
             'tags this -> [ `L_n_1  | `L_n_2  | `L_n_3 ] option
           val set_fractionalSecondDigits :
             'tags this ->
               [ `U1 of [ `L_n_1 ]  | `U2 of [ `L_n_2 ] 
               | `U3 of [ `L_n_3 ] ] -> unit
           val get_locale : 'tags this -> string
           val set_locale : 'tags this -> string -> unit
           val get_calendar : 'tags this -> string
           val set_calendar : 'tags this -> string -> unit
           val get_numberingSystem : 'tags this -> string
           val set_numberingSystem : 'tags this -> string -> unit
           val get_timeZone : 'tags this -> string
           val set_timeZone : 'tags this -> string -> unit
           val get_hour12 : 'tags this -> bool option
           val set_hour12 : 'tags this -> bool -> unit
           val get_weekday : 'tags this -> string option
           val set_weekday : 'tags this -> string -> unit
           val get_era : 'tags this -> string option
           val set_era : 'tags this -> string -> unit
           val get_year : 'tags this -> string option
           val set_year : 'tags this -> string -> unit
           val get_month : 'tags this -> string option
           val set_month : 'tags this -> string -> unit
           val get_day : 'tags this -> string option
           val set_day : 'tags this -> string -> unit
           val get_hour : 'tags this -> string option
           val set_hour : 'tags this -> string -> unit
           val get_minute : 'tags this -> string option
           val set_minute : 'tags this -> string -> unit
           val get_second : 'tags this -> string option
           val set_second : 'tags this -> string -> unit
           val get_timeZoneName : 'tags this -> string option
           val set_timeZoneName : 'tags this -> string -> unit
           val create :
             ?formatMatcher:[ `L_s25_basic  | `L_s26_best_fit ] ->
               ?dateStyle:[ `L_s122_short  | `L_s63_full  | `L_s78_long 
                          | `L_s84_medium ]
                 ->
                 ?timeStyle:[ `L_s122_short  | `L_s63_full  | `L_s78_long 
                            | `L_s84_medium ]
                   ->
                   ?hourCycle:[ `L_s67_h11  | `L_s68_h12  | `L_s69_h23 
                              | `L_s70_h24 ]
                     ->
                     ?dayPeriod:[ `L_s122_short  | `L_s78_long 
                                | `L_s92_narrow ]
                       ->
                       ?fractionalSecondDigits:[ `L_n_1  | `L_n_2  | `L_n_3 ]
                         ->
                         locale:string ->
                           calendar:string ->
                             numberingSystem:string ->
                               timeZone:string ->
                                 ?hour12:bool ->
                                   ?weekday:string ->
                                     ?era:string ->
                                       ?year:string ->
                                         ?month:string ->
                                           ?day:string ->
                                             ?hour:string ->
                                               ?minute:string ->
                                                 ?second:string ->
                                                   ?timeZoneName:string ->
                                                     unit -> t
           val cast_from : 'tags this -> t
         end
         module DateTimeFormatPartTypes :
         sig
           type t =
             [ `L_s118_second  | `L_s132_timeZoneName  | `L_s138_unknown 
             | `L_s142_weekday  | `L_s145_year  | `L_s38_day 
             | `L_s39_dayPeriod  | `L_s53_era  | `L_s61_fractionalSecond 
             | `L_s71_hour  | `L_s76_literal  | `L_s86_minute 
             | `L_s88_month ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
         end
         module DateTimeFormatPart :
         sig
           type t = [ `Intl_DateTimeFormatPart ] intf
           [@@@js.stop ]
           type tags = [ `Intl_DateTimeFormatPart ]
           [@@@js.start ]
           [@@@js.implem type tags = [ `Intl_DateTimeFormatPart ]]
           type 'tags this =
             'tags intf constraint 'tags = [> `Intl_DateTimeFormatPart ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val get_type : 'tags this -> DateTimeFormatPartTypes.t
           val set_type : 'tags this -> DateTimeFormatPartTypes.t -> unit
           val get_value : 'tags this -> string
           val set_value : 'tags this -> string -> unit
           val create :
             type_:DateTimeFormatPartTypes.t -> value:string -> unit -> t
           val cast_from : 'tags this -> t
         end
         module DateTimeRangeFormatPart :
         sig
           type t =
             [ `Intl_DateTimeFormatPart  | `Intl_DateTimeRangeFormatPart ]
               intf
           [@@@js.stop ]
           type tags =
             [ `Intl_DateTimeFormatPart  | `Intl_DateTimeRangeFormatPart ]
           [@@@js.start ]
           [@@@js.implem
             type tags =
               [ `Intl_DateTimeFormatPart  | `Intl_DateTimeRangeFormatPart ]]
           type 'tags this =
             'tags intf constraint 'tags = [> `Intl_DateTimeRangeFormatPart ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val get_source :
             'tags this ->
               [ `L_s121_shared  | `L_s127_startRange  | `L_s50_endRange ]
           val set_source :
             'tags this ->
               [ `U1 of [ `L_s127_startRange ]  | `U2 of [ `L_s50_endRange ] 
               | `U3 of [ `L_s121_shared ] ] -> unit
           val create :
             source:[ `L_s121_shared  | `L_s127_startRange 
                    | `L_s50_endRange ]
               -> unit -> t
           val cast_from : 'tags this -> t
         end
         module DateTimeFormatOptions :
         sig
           type t = [ `Intl_DateTimeFormatOptions ] intf
           [@@@js.stop ]
           type tags = [ `Intl_DateTimeFormatOptions ]
           [@@@js.start ]
           [@@@js.implem type tags = [ `Intl_DateTimeFormatOptions ]]
           type 'tags this =
             'tags intf constraint 'tags = [> `Intl_DateTimeFormatOptions ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val get_formatMatcher :
             'tags this -> [ `L_s25_basic  | `L_s26_best_fit ] option
           val set_formatMatcher :
             'tags this ->
               [ `Undefined of undefined  | `U1 of [ `L_s25_basic ] 
               | `U2 of [ `L_s26_best_fit ] ] -> unit
           val get_dateStyle :
             'tags this ->
               [ `L_s122_short  | `L_s63_full  | `L_s78_long 
               | `L_s84_medium ] option
           val set_dateStyle :
             'tags this ->
               [ `Undefined of undefined  | `U1 of [ `L_s63_full ] 
               | `U2 of [ `L_s78_long ]  | `U3 of [ `L_s84_medium ] 
               | `U4 of [ `L_s122_short ] ] -> unit
           val get_timeStyle :
             'tags this ->
               [ `L_s122_short  | `L_s63_full  | `L_s78_long 
               | `L_s84_medium ] option
           val set_timeStyle :
             'tags this ->
               [ `Undefined of undefined  | `U1 of [ `L_s63_full ] 
               | `U2 of [ `L_s78_long ]  | `U3 of [ `L_s84_medium ] 
               | `U4 of [ `L_s122_short ] ] -> unit
           val get_dayPeriod :
             'tags this ->
               [ `L_s122_short  | `L_s78_long  | `L_s92_narrow ] option
           val set_dayPeriod :
             'tags this ->
               [ `Undefined of undefined  | `U1 of [ `L_s92_narrow ] 
               | `U2 of [ `L_s122_short ]  | `U3 of [ `L_s78_long ] ] -> 
                 unit
           val get_fractionalSecondDigits :
             'tags this -> [ `L_n_1  | `L_n_2  | `L_n_3 ] option
           val set_fractionalSecondDigits :
             'tags this ->
               [ `Undefined of undefined  | `U1 of [ `L_n_1 ] 
               | `U2 of [ `L_n_2 ]  | `U3 of [ `L_n_3 ] ] -> unit
           val get_calendar : 'tags this -> string option
           val set_calendar :
             'tags this ->
               [ `Undefined of undefined  | `U1 of string ] -> unit
           val get_dayPeriod' :
             'tags this ->
               [ `L_s122_short  | `L_s78_long  | `L_s92_narrow ] option
           val set_dayPeriod' :
             'tags this ->
               [ `Undefined of undefined  | `U1 of [ `L_s92_narrow ] 
               | `U2 of [ `L_s122_short ]  | `U3 of [ `L_s78_long ] ] -> 
                 unit
           val get_numberingSystem : 'tags this -> string option
           val set_numberingSystem :
             'tags this ->
               [ `Undefined of undefined  | `U1 of string ] -> unit
           val get_dateStyle' :
             'tags this ->
               [ `L_s122_short  | `L_s63_full  | `L_s78_long 
               | `L_s84_medium ] option
           val set_dateStyle' :
             'tags this ->
               [ `Undefined of undefined  | `U1 of [ `L_s63_full ] 
               | `U2 of [ `L_s78_long ]  | `U3 of [ `L_s84_medium ] 
               | `U4 of [ `L_s122_short ] ] -> unit
           val get_timeStyle' :
             'tags this ->
               [ `L_s122_short  | `L_s63_full  | `L_s78_long 
               | `L_s84_medium ] option
           val set_timeStyle' :
             'tags this ->
               [ `Undefined of undefined  | `U1 of [ `L_s63_full ] 
               | `U2 of [ `L_s78_long ]  | `U3 of [ `L_s84_medium ] 
               | `U4 of [ `L_s122_short ] ] -> unit
           val get_hourCycle :
             'tags this ->
               [ `L_s67_h11  | `L_s68_h12  | `L_s69_h23  | `L_s70_h24 ]
                 option
           val set_hourCycle :
             'tags this ->
               [ `Undefined of undefined  | `U1 of [ `L_s67_h11 ] 
               | `U2 of [ `L_s68_h12 ]  | `U3 of [ `L_s69_h23 ] 
               | `U4 of [ `L_s70_h24 ] ] -> unit
           val get_localeMatcher :
             'tags this -> [ `L_s26_best_fit  | `L_s81_lookup ] option
           val set_localeMatcher :
             'tags this ->
               [ `Undefined of undefined  | `U1 of [ `L_s26_best_fit ] 
               | `U2 of [ `L_s81_lookup ] ] -> unit
           val get_weekday :
             'tags this ->
               [ `L_s122_short  | `L_s78_long  | `L_s92_narrow ] option
           val set_weekday :
             'tags this ->
               [ `Undefined of undefined  | `U1 of [ `L_s78_long ] 
               | `U2 of [ `L_s122_short ]  | `U3 of [ `L_s92_narrow ] ] ->
                 unit
           val get_era :
             'tags this ->
               [ `L_s122_short  | `L_s78_long  | `L_s92_narrow ] option
           val set_era :
             'tags this ->
               [ `Undefined of undefined  | `U1 of [ `L_s78_long ] 
               | `U2 of [ `L_s122_short ]  | `U3 of [ `L_s92_narrow ] ] ->
                 unit
           val get_year :
             'tags this -> [ `L_s0_2_digit  | `L_s98_numeric ] option
           val set_year :
             'tags this ->
               [ `Undefined of undefined  | `U1 of [ `L_s98_numeric ] 
               | `U2 of [ `L_s0_2_digit ] ] -> unit
           val get_month :
             'tags this ->
               [ `L_s0_2_digit  | `L_s122_short  | `L_s78_long 
               | `L_s92_narrow  | `L_s98_numeric ] option
           val set_month :
             'tags this ->
               [ `Undefined of undefined  | `U1 of [ `L_s98_numeric ] 
               | `U2 of [ `L_s0_2_digit ]  | `U3 of [ `L_s78_long ] 
               | `U4 of [ `L_s122_short ]  | `U5 of [ `L_s92_narrow ] ] ->
                 unit
           val get_day :
             'tags this -> [ `L_s0_2_digit  | `L_s98_numeric ] option
           val set_day :
             'tags this ->
               [ `Undefined of undefined  | `U1 of [ `L_s98_numeric ] 
               | `U2 of [ `L_s0_2_digit ] ] -> unit
           val get_hour :
             'tags this -> [ `L_s0_2_digit  | `L_s98_numeric ] option
           val set_hour :
             'tags this ->
               [ `Undefined of undefined  | `U1 of [ `L_s98_numeric ] 
               | `U2 of [ `L_s0_2_digit ] ] -> unit
           val get_minute :
             'tags this -> [ `L_s0_2_digit  | `L_s98_numeric ] option
           val set_minute :
             'tags this ->
               [ `Undefined of undefined  | `U1 of [ `L_s98_numeric ] 
               | `U2 of [ `L_s0_2_digit ] ] -> unit
           val get_second :
             'tags this -> [ `L_s0_2_digit  | `L_s98_numeric ] option
           val set_second :
             'tags this ->
               [ `Undefined of undefined  | `U1 of [ `L_s98_numeric ] 
               | `U2 of [ `L_s0_2_digit ] ] -> unit
           val get_timeZoneName :
             'tags this ->
               [ `L_s122_short  | `L_s123_shortGeneric 
               | `L_s124_shortOffset  | `L_s78_long  | `L_s79_longGeneric 
               | `L_s80_longOffset ] option
           val set_timeZoneName :
             'tags this ->
               [ `Undefined of undefined  | `U1 of [ `L_s122_short ] 
               | `U2 of [ `L_s78_long ]  | `U3 of [ `L_s124_shortOffset ] 
               | `U4 of [ `L_s80_longOffset ] 
               | `U5 of [ `L_s123_shortGeneric ] 
               | `U6 of [ `L_s79_longGeneric ] ] -> unit
           val get_formatMatcher' :
             'tags this -> [ `L_s25_basic  | `L_s26_best_fit ] option
           val set_formatMatcher' :
             'tags this ->
               [ `Undefined of undefined  | `U1 of [ `L_s26_best_fit ] 
               | `U2 of [ `L_s25_basic ] ] -> unit
           val get_hour12 : 'tags this -> bool option
           val set_hour12 :
             'tags this -> [ `Undefined of undefined  | `U1 of bool ] -> unit
           val get_timeZone : 'tags this -> string option
           val set_timeZone :
             'tags this ->
               [ `Undefined of undefined  | `U1 of string ] -> unit
           val create :
             ?formatMatcher:[ `L_s25_basic  | `L_s26_best_fit ] ->
               ?dateStyle:[ `L_s122_short  | `L_s63_full  | `L_s78_long 
                          | `L_s84_medium ]
                 ->
                 ?timeStyle:[ `L_s122_short  | `L_s63_full  | `L_s78_long 
                            | `L_s84_medium ]
                   ->
                   ?dayPeriod:[ `L_s122_short  | `L_s78_long 
                              | `L_s92_narrow ]
                     ->
                     ?fractionalSecondDigits:[ `L_n_1  | `L_n_2  | `L_n_3 ]
                       ->
                       ?calendar:string ->
                         ?numberingSystem:string ->
                           ?hourCycle:[ `L_s67_h11  | `L_s68_h12 
                                      | `L_s69_h23  | `L_s70_h24 ]
                             ->
                             ?localeMatcher:[ `L_s26_best_fit 
                                            | `L_s81_lookup ]
                               ->
                               ?weekday:[ `L_s122_short  | `L_s78_long 
                                        | `L_s92_narrow ]
                                 ->
                                 ?era:[ `L_s122_short  | `L_s78_long 
                                      | `L_s92_narrow ]
                                   ->
                                   ?year:[ `L_s0_2_digit  | `L_s98_numeric ]
                                     ->
                                     ?month:[ `L_s0_2_digit  | `L_s122_short 
                                            | `L_s78_long  | `L_s92_narrow 
                                            | `L_s98_numeric ]
                                       ->
                                       ?day:[ `L_s0_2_digit 
                                            | `L_s98_numeric ]
                                         ->
                                         ?hour:[ `L_s0_2_digit 
                                               | `L_s98_numeric ]
                                           ->
                                           ?minute:[ `L_s0_2_digit 
                                                   | `L_s98_numeric ]
                                             ->
                                             ?second:[ `L_s0_2_digit 
                                                     | `L_s98_numeric ]
                                               ->
                                               ?timeZoneName:[ `L_s122_short 
                                                             | `L_s123_shortGeneric
                                                                  | `L_s124_shortOffset
                                                                     | 
                                                               `L_s78_long 
                                                             | `L_s79_longGeneric
                                                                  | `L_s80_longOffset
                                                                    ]
                                                 ->
                                                 ?hour12:bool ->
                                                   ?timeZone:string ->
                                                     unit -> t
           val cast_from : 'tags this -> t
         end
         module DateTimeFormat :
         sig
           type t = [ `Intl_DateTimeFormat ] intf
           [@@@js.stop ]
           type tags = [ `Intl_DateTimeFormat ]
           [@@@js.start ]
           [@@@js.implem type tags = [ `Intl_DateTimeFormat ]]
           type 'tags this =
             'tags intf constraint 'tags = [> `Intl_DateTimeFormat ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val formatRange :
             'tags this ->
               startDate:[ `U1 of Date.t  | `U2 of float  | `U3 of bigint ]
                 ->
                 endDate:[ `U1 of Date.t  | `U2 of float  | `U3 of bigint ]
                   -> string
           val formatRangeToParts :
             'tags this ->
               startDate:[ `U1 of Date.t  | `U2 of float  | `U3 of bigint ]
                 ->
                 endDate:[ `U1 of Date.t  | `U2 of float  | `U3 of bigint ]
                   -> DateTimeRangeFormatPart.t list
           val formatToParts :
             'tags this ->
               ?date:[ `U1 of Date.t  | `U2 of float ] ->
                 unit -> DateTimeFormatPart.t list
           val format :
             'tags this ->
               ?date:[ `U1 of Date.t  | `U2 of float ] -> unit -> string
           val resolvedOptions :
             'tags this -> ResolvedDateTimeFormatOptions.t
           val create :
             ?locales:LocalesArgument.t ->
               ?options:DateTimeFormatOptions.t -> unit -> t
           val invoke :
             ?locales:LocalesArgument.t ->
               ?options:DateTimeFormatOptions.t -> unit -> t
           val supportedLocalesOf :
             locales:LocalesArgument.t ->
               ?options:DateTimeFormatOptions.t -> unit -> string list
           val create' :
             ?locales:[ `U1 of string  | `U2 of string list ] ->
               ?options:DateTimeFormatOptions.t -> unit -> t
           val invoke' :
             ?locales:[ `U1 of string  | `U2 of string list ] ->
               ?options:DateTimeFormatOptions.t -> unit -> t
           val supportedLocalesOf' :
             locales:[ `U1 of string  | `U2 of string list ] ->
               ?options:DateTimeFormatOptions.t -> unit -> string list
           val prototype : unit -> t
           val cast_from : 'tags this -> t
         end
         module ResolvedCollatorOptions :
         sig
           type t = [ `Intl_ResolvedCollatorOptions ] intf
           [@@@js.stop ]
           type tags = [ `Intl_ResolvedCollatorOptions ]
           [@@@js.start ]
           [@@@js.implem type tags = [ `Intl_ResolvedCollatorOptions ]]
           type 'tags this =
             'tags intf constraint 'tags = [> `Intl_ResolvedCollatorOptions ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val get_locale : 'tags this -> string
           val set_locale : 'tags this -> string -> unit
           val get_usage : 'tags this -> string
           val set_usage : 'tags this -> string -> unit
           val get_sensitivity : 'tags this -> string
           val set_sensitivity : 'tags this -> string -> unit
           val get_ignorePunctuation : 'tags this -> bool
           val set_ignorePunctuation : 'tags this -> bool -> unit
           val get_collation : 'tags this -> string
           val set_collation : 'tags this -> string -> unit
           val get_caseFirst : 'tags this -> string
           val set_caseFirst : 'tags this -> string -> unit
           val get_numeric : 'tags this -> bool
           val set_numeric : 'tags this -> bool -> unit
           val create :
             locale:string ->
               usage:string ->
                 sensitivity:string ->
                   ignorePunctuation:bool ->
                     collation:string ->
                       caseFirst:string -> numeric:bool -> unit -> t
           val cast_from : 'tags this -> t
         end
         module CollatorOptions :
         sig
           type t = [ `Intl_CollatorOptions ] intf
           [@@@js.stop ]
           type tags = [ `Intl_CollatorOptions ]
           [@@@js.start ]
           [@@@js.implem type tags = [ `Intl_CollatorOptions ]]
           type 'tags this =
             'tags intf constraint 'tags = [> `Intl_CollatorOptions ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val get_usage :
             'tags this -> [ `L_s116_search  | `L_s125_sort ] option
           val set_usage :
             'tags this ->
               [ `Undefined of undefined  | `U1 of [ `L_s125_sort ] 
               | `U2 of [ `L_s116_search ] ] -> unit
           val get_localeMatcher :
             'tags this -> [ `L_s26_best_fit  | `L_s81_lookup ] option
           val set_localeMatcher :
             'tags this ->
               [ `Undefined of undefined  | `U1 of [ `L_s81_lookup ] 
               | `U2 of [ `L_s26_best_fit ] ] -> unit
           val get_numeric : 'tags this -> bool option
           val set_numeric :
             'tags this -> [ `Undefined of undefined  | `U1 of bool ] -> unit
           val get_caseFirst :
             'tags this ->
               [ `L_s139_upper  | `L_s58_false  | `L_s82_lower ] option
           val set_caseFirst :
             'tags this ->
               [ `Undefined of undefined  | `U1 of [ `L_s139_upper ] 
               | `U2 of [ `L_s82_lower ]  | `U3 of [ `L_s58_false ] ] -> 
                 unit
           val get_sensitivity :
             'tags this ->
               [ `L_s140_variant  | `L_s21_accent  | `L_s24_base 
               | `L_s30_case ] option
           val set_sensitivity :
             'tags this ->
               [ `Undefined of undefined  | `U1 of [ `L_s24_base ] 
               | `U2 of [ `L_s21_accent ]  | `U3 of [ `L_s30_case ] 
               | `U4 of [ `L_s140_variant ] ] -> unit
           val get_collation :
             'tags this ->
               [ `L_s105_phonebk  | `L_s106_phonetic  | `L_s107_pinyin 
               | `L_s111_reformed  | `L_s117_searchjl  | `L_s129_stroke 
               | `L_s134_trad  | `L_s136_unihan  | `L_s148_zhuyin 
               | `L_s27_big5han  | `L_s34_compat  | `L_s44_dict 
               | `L_s45_direct  | `L_s47_ducet  | `L_s49_emoji  | `L_s52_eor 
               | `L_s64_gb2312 ] option
           val set_collation :
             'tags this ->
               [ `Undefined of undefined  | `U1 of [ `L_s27_big5han ] 
               | `U2 of [ `L_s34_compat ]  | `U3 of [ `L_s44_dict ] 
               | `U4 of [ `L_s45_direct ]  | `U5 of [ `L_s47_ducet ] 
               | `U6 of [ `L_s49_emoji ]  | `U7 of [ `L_s52_eor ] 
               | `U8 of [ `L_s64_gb2312 ]  | `U9 of [ `L_s105_phonebk ] 
               | `U10 of [ `L_s106_phonetic ]  | `U11 of [ `L_s107_pinyin ] 
               | `U12 of [ `L_s111_reformed ] 
               | `U13 of [ `L_s117_searchjl ]  | `U14 of [ `L_s129_stroke ] 
               | `U15 of [ `L_s134_trad ]  | `U16 of [ `L_s136_unihan ] 
               | `U17 of [ `L_s148_zhuyin ] ] -> unit
           val get_ignorePunctuation : 'tags this -> bool option
           val set_ignorePunctuation :
             'tags this -> [ `Undefined of undefined  | `U1 of bool ] -> unit
           val create :
             ?usage:[ `L_s116_search  | `L_s125_sort ] ->
               ?localeMatcher:[ `L_s26_best_fit  | `L_s81_lookup ] ->
                 ?numeric:bool ->
                   ?caseFirst:[ `L_s139_upper  | `L_s58_false 
                              | `L_s82_lower ]
                     ->
                     ?sensitivity:[ `L_s140_variant  | `L_s21_accent 
                                  | `L_s24_base  | `L_s30_case ]
                       ->
                       ?collation:[ `L_s105_phonebk  | `L_s106_phonetic 
                                  | `L_s107_pinyin  | `L_s111_reformed 
                                  | `L_s117_searchjl  | `L_s129_stroke 
                                  | `L_s134_trad  | `L_s136_unihan 
                                  | `L_s148_zhuyin  | `L_s27_big5han 
                                  | `L_s34_compat  | `L_s44_dict 
                                  | `L_s45_direct  | `L_s47_ducet 
                                  | `L_s49_emoji  | `L_s52_eor 
                                  | `L_s64_gb2312 ]
                         -> ?ignorePunctuation:bool -> unit -> t
           val cast_from : 'tags this -> t
         end
         module Collator :
         sig
           type t = [ `Intl_Collator ] intf
           [@@@js.stop ]
           type tags = [ `Intl_Collator ]
           [@@@js.start ]
           [@@@js.implem type tags = [ `Intl_Collator ]]
           type 'tags this =
             'tags intf constraint 'tags = [> `Intl_Collator ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val compare : 'tags this -> x:string -> y:string -> float
           val resolvedOptions : 'tags this -> ResolvedCollatorOptions.t
           val create :
             ?locales:LocalesArgument.t ->
               ?options:CollatorOptions.t -> unit -> t
           val invoke :
             ?locales:LocalesArgument.t ->
               ?options:CollatorOptions.t -> unit -> t
           val supportedLocalesOf :
             locales:LocalesArgument.t ->
               ?options:CollatorOptions.t -> unit -> string list
           val create' :
             ?locales:[ `U1 of string  | `U2 of string list ] ->
               ?options:CollatorOptions.t -> unit -> t
           val invoke' :
             ?locales:[ `U1 of string  | `U2 of string list ] ->
               ?options:CollatorOptions.t -> unit -> t
           val supportedLocalesOf' :
             locales:[ `U1 of string  | `U2 of string list ] ->
               ?options:CollatorOptions.t -> unit -> string list
           val cast_from : 'tags this -> t
         end
         val getCanonicalLocales :
           ?locale:[ `String of string  | `Other of string list ] Primitive.t
             -> unit -> string list
         val supportedValuesOf :
           [ `L_s131_timeZone  | `L_s137_unit  | `L_s28_calendar 
           | `L_s32_collation  | `L_s36_currency  | `L_s97_numberingSystem ]
             -> string list
       end =
  struct
    module SegmentData =
      struct
        type t = [ `Intl_SegmentData ] intf
        let rec t_of_js : Ojs.t -> t = Obj.magic
        and t_to_js : t -> Ojs.t = Obj.magic
        type tags = [ `Intl_SegmentData ]
        type 'tags this =
          'tags intf constraint 'tags = [> `Intl_SegmentData ]
        let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
          =
          fun (type __tags) ->
            fun (__tags_of_js : Ojs.t -> __tags) ->
              fun (x2219 : Ojs.t) -> intf_of_js __tags_of_js x2219
        and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
          fun (type __tags) ->
            fun (__tags_to_js : __tags -> Ojs.t) ->
              fun (x2217 : __tags intf) -> intf_to_js __tags_to_js x2217
        let (get_segment : 'tags this -> string) =
          fun (x2221 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2221) "segment")
        let (set_segment : 'tags this -> string -> unit) =
          fun (x2223 : 'tags this) ->
            fun (x2224 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2223) "segment"
                (Ojs.string_to_js x2224)
        let (get_index : 'tags this -> float) =
          fun (x2226 : 'tags this) ->
            Ojs.float_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2226) "index")
        let (set_index : 'tags this -> float -> unit) =
          fun (x2228 : 'tags this) ->
            fun (x2229 : float) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2228) "index"
                (Ojs.float_to_js x2229)
        let (get_input : 'tags this -> string) =
          fun (x2231 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2231) "input")
        let (set_input : 'tags this -> string -> unit) =
          fun (x2233 : 'tags this) ->
            fun (x2234 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2233) "input"
                (Ojs.string_to_js x2234)
        let (get_isWordLike : 'tags this -> bool option) =
          fun (x2236 : 'tags this) ->
            Ojs.option_of_js Ojs.bool_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2236) "isWordLike")
        let (set_isWordLike : 'tags this -> bool -> unit) =
          fun (x2239 : 'tags this) ->
            fun (x2240 : bool) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2239) "isWordLike"
                (Ojs.bool_to_js x2240)
        let (create :
          segment:string ->
            index:float -> input:string -> ?isWordLike:bool -> unit -> t)
          =
          fun ~segment:(x2242 : string) ->
            fun ~index:(x2243 : float) ->
              fun ~input:(x2244 : string) ->
                fun ?isWordLike:(x2245 : bool option) ->
                  fun () ->
                    let x2246 = Ojs.empty_obj () in
                    Ojs.set_prop_ascii x2246 "segment"
                      (Ojs.string_to_js x2242);
                    Ojs.set_prop_ascii x2246 "index" (Ojs.float_to_js x2243);
                    Ojs.set_prop_ascii x2246 "input" (Ojs.string_to_js x2244);
                    (match x2245 with
                     | Some x2247 ->
                         Ojs.set_prop_ascii x2246 "isWordLike"
                           (Ojs.bool_to_js x2247)
                     | None -> ());
                    t_of_js x2246
        let cast_from = Obj.magic
      end
    module Segments =
      struct
        type t = [ `Intl_Segments ] intf
        let rec t_of_js : Ojs.t -> t = Obj.magic
        and t_to_js : t -> Ojs.t = Obj.magic
        type tags = [ `Intl_Segments ]
        type 'tags this = 'tags intf constraint 'tags = [> `Intl_Segments ]
        let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
          =
          fun (type __tags) ->
            fun (__tags_of_js : Ojs.t -> __tags) ->
              fun (x2250 : Ojs.t) -> intf_of_js __tags_of_js x2250
        and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
          fun (type __tags) ->
            fun (__tags_to_js : __tags -> Ojs.t) ->
              fun (x2248 : __tags intf) -> intf_to_js __tags_to_js x2248
        let (containing :
          'tags this -> ?codeUnitIndex:float -> unit -> SegmentData.t) =
          fun (x2255 : 'tags this) ->
            fun ?codeUnitIndex:(x2252 : float option) ->
              fun () ->
                SegmentData.t_of_js
                  (let x2257 = this_to_js Obj.magic x2255 in
                   Ojs.call (Ojs.get_prop_ascii x2257 "containing") "apply"
                     [|x2257;((let x2253 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               (match x2252 with
                                | Some x2254 ->
                                    ignore
                                      (Ojs.call x2253 "push"
                                         [|(Ojs.float_to_js x2254)|])
                                | None -> ());
                               x2253))|])
        let cast_from = Obj.magic
      end
    module SegmenterOptions =
      struct
        type t = [ `Intl_SegmenterOptions ] intf
        let rec t_of_js : Ojs.t -> t = Obj.magic
        and t_to_js : t -> Ojs.t = Obj.magic
        type tags = [ `Intl_SegmenterOptions ]
        type 'tags this =
          'tags intf constraint 'tags = [> `Intl_SegmenterOptions ]
        let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
          =
          fun (type __tags) ->
            fun (__tags_of_js : Ojs.t -> __tags) ->
              fun (x2260 : Ojs.t) -> intf_of_js __tags_of_js x2260
        and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
          fun (type __tags) ->
            fun (__tags_to_js : __tags -> Ojs.t) ->
              fun (x2258 : __tags intf) -> intf_to_js __tags_to_js x2258
        let (get_localeMatcher :
          'tags this -> [ `L_s26_best_fit  | `L_s81_lookup ] option) =
          fun (x2262 : 'tags this) ->
            Ojs.option_of_js
              (fun (x2264 : Ojs.t) ->
                 let x2265 = x2264 in
                 match Ojs.string_of_js x2265 with
                 | "best fit" -> `L_s26_best_fit
                 | "lookup" -> `L_s81_lookup
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2262)
                 "localeMatcher")
        let (set_localeMatcher :
          'tags this ->
            [ `Undefined of undefined  | `U1 of [ `L_s26_best_fit ] 
            | `U2 of [ `L_s81_lookup ] ] -> unit)
          =
          fun (x2266 : 'tags this) ->
            fun
              (x2267 :
                [ `Undefined of undefined  | `U1 of [ `L_s26_best_fit ] 
                | `U2 of [ `L_s81_lookup ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2266) "localeMatcher"
                (match x2267 with
                 | `Undefined x2268 -> undefined_to_js x2268
                 | `U1 x2269 ->
                     (match x2269 with
                      | `L_s26_best_fit -> Ojs.string_to_js "best fit")
                 | `U2 x2270 ->
                     (match x2270 with
                      | `L_s81_lookup -> Ojs.string_to_js "lookup"))
        let (get_granularity :
          'tags this ->
            [ `L_s120_sentence  | `L_s144_word  | `L_s65_grapheme ] option)
          =
          fun (x2272 : 'tags this) ->
            Ojs.option_of_js
              (fun (x2274 : Ojs.t) ->
                 let x2275 = x2274 in
                 match Ojs.string_of_js x2275 with
                 | "sentence" -> `L_s120_sentence
                 | "word" -> `L_s144_word
                 | "grapheme" -> `L_s65_grapheme
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2272) "granularity")
        let (set_granularity :
          'tags this ->
            [ `Undefined of undefined  | `U1 of [ `L_s65_grapheme ] 
            | `U2 of [ `L_s144_word ]  | `U3 of [ `L_s120_sentence ] ] ->
              unit)
          =
          fun (x2276 : 'tags this) ->
            fun
              (x2277 :
                [ `Undefined of undefined  | `U1 of [ `L_s65_grapheme ] 
                | `U2 of [ `L_s144_word ]  | `U3 of [ `L_s120_sentence ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2276) "granularity"
                (match x2277 with
                 | `Undefined x2278 -> undefined_to_js x2278
                 | `U1 x2279 ->
                     (match x2279 with
                      | `L_s65_grapheme -> Ojs.string_to_js "grapheme")
                 | `U2 x2280 ->
                     (match x2280 with
                      | `L_s144_word -> Ojs.string_to_js "word")
                 | `U3 x2281 ->
                     (match x2281 with
                      | `L_s120_sentence -> Ojs.string_to_js "sentence"))
        let (create :
          ?localeMatcher:[ `L_s26_best_fit  | `L_s81_lookup ] ->
            ?granularity:[ `L_s120_sentence  | `L_s144_word 
                         | `L_s65_grapheme ]
              -> unit -> t)
          =
          fun
            ?localeMatcher:(x2283 :
                             [ `L_s26_best_fit  | `L_s81_lookup ] option)
            ->
            fun
              ?granularity:(x2284 :
                             [ `L_s120_sentence  | `L_s144_word 
                             | `L_s65_grapheme ] option)
              ->
              fun () ->
                let x2285 = Ojs.empty_obj () in
                (match x2283 with
                 | Some x2287 ->
                     Ojs.set_prop_ascii x2285 "localeMatcher"
                       (match x2287 with
                        | `L_s26_best_fit -> Ojs.string_to_js "best fit"
                        | `L_s81_lookup -> Ojs.string_to_js "lookup")
                 | None -> ());
                (match x2284 with
                 | Some x2286 ->
                     Ojs.set_prop_ascii x2285 "granularity"
                       (match x2286 with
                        | `L_s120_sentence -> Ojs.string_to_js "sentence"
                        | `L_s144_word -> Ojs.string_to_js "word"
                        | `L_s65_grapheme -> Ojs.string_to_js "grapheme")
                 | None -> ());
                t_of_js x2285
        let cast_from = Obj.magic
      end
    module ResolvedSegmenterOptions =
      struct
        type t = [ `Intl_ResolvedSegmenterOptions ] intf
        let rec t_of_js : Ojs.t -> t = Obj.magic
        and t_to_js : t -> Ojs.t = Obj.magic
        type tags = [ `Intl_ResolvedSegmenterOptions ]
        type 'tags this =
          'tags intf constraint 'tags = [> `Intl_ResolvedSegmenterOptions ]
        let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
          =
          fun (type __tags) ->
            fun (__tags_of_js : Ojs.t -> __tags) ->
              fun (x2290 : Ojs.t) -> intf_of_js __tags_of_js x2290
        and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
          fun (type __tags) ->
            fun (__tags_to_js : __tags -> Ojs.t) ->
              fun (x2288 : __tags intf) -> intf_to_js __tags_to_js x2288
        let (get_locale : 'tags this -> string) =
          fun (x2292 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2292) "locale")
        let (set_locale : 'tags this -> string -> unit) =
          fun (x2294 : 'tags this) ->
            fun (x2295 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2294) "locale"
                (Ojs.string_to_js x2295)
        let (get_granularity :
          'tags this ->
            [ `L_s120_sentence  | `L_s144_word  | `L_s65_grapheme ])
          =
          fun (x2297 : 'tags this) ->
            let x2299 =
              Ojs.get_prop_ascii (this_to_js Obj.magic x2297) "granularity" in
            match Ojs.string_of_js x2299 with
            | "sentence" -> `L_s120_sentence
            | "word" -> `L_s144_word
            | "grapheme" -> `L_s65_grapheme
            | _ -> assert false
        let (set_granularity :
          'tags this ->
            [ `U1 of [ `L_s65_grapheme ]  | `U2 of [ `L_s144_word ] 
            | `U3 of [ `L_s120_sentence ] ] -> unit)
          =
          fun (x2300 : 'tags this) ->
            fun
              (x2301 :
                [ `U1 of [ `L_s65_grapheme ]  | `U2 of [ `L_s144_word ] 
                | `U3 of [ `L_s120_sentence ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2300) "granularity"
                (match x2301 with
                 | `U1 x2302 ->
                     (match x2302 with
                      | `L_s65_grapheme -> Ojs.string_to_js "grapheme")
                 | `U2 x2303 ->
                     (match x2303 with
                      | `L_s144_word -> Ojs.string_to_js "word")
                 | `U3 x2304 ->
                     (match x2304 with
                      | `L_s120_sentence -> Ojs.string_to_js "sentence"))
        let (create :
          locale:string ->
            granularity:[ `L_s120_sentence  | `L_s144_word 
                        | `L_s65_grapheme ]
              -> unit -> t)
          =
          fun ~locale:(x2306 : string) ->
            fun
              ~granularity:(x2307 :
                             [ `L_s120_sentence  | `L_s144_word 
                             | `L_s65_grapheme ])
              ->
              fun () ->
                let x2308 = Ojs.empty_obj () in
                Ojs.set_prop_ascii x2308 "locale" (Ojs.string_to_js x2306);
                Ojs.set_prop_ascii x2308 "granularity"
                  (match x2307 with
                   | `L_s120_sentence -> Ojs.string_to_js "sentence"
                   | `L_s144_word -> Ojs.string_to_js "word"
                   | `L_s65_grapheme -> Ojs.string_to_js "grapheme");
                t_of_js x2308
        let cast_from = Obj.magic
      end
    module UnicodeBCP47LocaleIdentifier =
      struct
        type t = string
        let rec t_of_js : Ojs.t -> t =
          fun (x2310 : Ojs.t) -> Ojs.string_of_js x2310
        and t_to_js : t -> Ojs.t =
          fun (x2309 : string) -> Ojs.string_to_js x2309
      end
    module LocaleHourCycleKey =
      struct
        type t = [ `L_s67_h11  | `L_s68_h12  | `L_s69_h23  | `L_s70_h24 ]
        let rec t_of_js : Ojs.t -> t =
          fun (x2312 : Ojs.t) ->
            let x2313 = x2312 in
            match Ojs.string_of_js x2313 with
            | "h11" -> `L_s67_h11
            | "h12" -> `L_s68_h12
            | "h23" -> `L_s69_h23
            | "h24" -> `L_s70_h24
            | _ -> assert false
        and t_to_js : t -> Ojs.t =
          fun
            (x2311 :
              [ `L_s67_h11  | `L_s68_h12  | `L_s69_h23  | `L_s70_h24 ])
            ->
            match x2311 with
            | `L_s67_h11 -> Ojs.string_to_js "h11"
            | `L_s68_h12 -> Ojs.string_to_js "h12"
            | `L_s69_h23 -> Ojs.string_to_js "h23"
            | `L_s70_h24 -> Ojs.string_to_js "h24"
      end
    module LocaleCollationCaseFirst =
      struct
        type t = [ `L_s139_upper  | `L_s58_false  | `L_s82_lower ]
        let rec t_of_js : Ojs.t -> t =
          fun (x2315 : Ojs.t) ->
            let x2316 = x2315 in
            match Ojs.string_of_js x2316 with
            | "upper" -> `L_s139_upper
            | "false" -> `L_s58_false
            | "lower" -> `L_s82_lower
            | _ -> assert false
        and t_to_js : t -> Ojs.t =
          fun (x2314 : [ `L_s139_upper  | `L_s58_false  | `L_s82_lower ]) ->
            match x2314 with
            | `L_s139_upper -> Ojs.string_to_js "upper"
            | `L_s58_false -> Ojs.string_to_js "false"
            | `L_s82_lower -> Ojs.string_to_js "lower"
      end
    module LocaleOptions =
      struct
        type t = [ `Intl_LocaleOptions ] intf
        let rec t_of_js : Ojs.t -> t = Obj.magic
        and t_to_js : t -> Ojs.t = Obj.magic
        type tags = [ `Intl_LocaleOptions ]
        type 'tags this =
          'tags intf constraint 'tags = [> `Intl_LocaleOptions ]
        let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
          =
          fun (type __tags) ->
            fun (__tags_of_js : Ojs.t -> __tags) ->
              fun (x2319 : Ojs.t) -> intf_of_js __tags_of_js x2319
        and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
          fun (type __tags) ->
            fun (__tags_to_js : __tags -> Ojs.t) ->
              fun (x2317 : __tags intf) -> intf_to_js __tags_to_js x2317
        let (get_baseName : 'tags this -> string option) =
          fun (x2321 : 'tags this) ->
            Ojs.option_of_js Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2321) "baseName")
        let (set_baseName : 'tags this -> string -> unit) =
          fun (x2324 : 'tags this) ->
            fun (x2325 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2324) "baseName"
                (Ojs.string_to_js x2325)
        let (get_calendar : 'tags this -> string option) =
          fun (x2327 : 'tags this) ->
            Ojs.option_of_js Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2327) "calendar")
        let (set_calendar : 'tags this -> string -> unit) =
          fun (x2330 : 'tags this) ->
            fun (x2331 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2330) "calendar"
                (Ojs.string_to_js x2331)
        let (get_caseFirst : 'tags this -> LocaleCollationCaseFirst.t option)
          =
          fun (x2333 : 'tags this) ->
            Ojs.option_of_js LocaleCollationCaseFirst.t_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2333) "caseFirst")
        let (set_caseFirst :
          'tags this -> LocaleCollationCaseFirst.t -> unit) =
          fun (x2336 : 'tags this) ->
            fun (x2337 : LocaleCollationCaseFirst.t) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2336) "caseFirst"
                (LocaleCollationCaseFirst.t_to_js x2337)
        let (get_collation : 'tags this -> string option) =
          fun (x2339 : 'tags this) ->
            Ojs.option_of_js Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2339) "collation")
        let (set_collation : 'tags this -> string -> unit) =
          fun (x2342 : 'tags this) ->
            fun (x2343 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2342) "collation"
                (Ojs.string_to_js x2343)
        let (get_hourCycle : 'tags this -> LocaleHourCycleKey.t option) =
          fun (x2345 : 'tags this) ->
            Ojs.option_of_js LocaleHourCycleKey.t_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2345) "hourCycle")
        let (set_hourCycle : 'tags this -> LocaleHourCycleKey.t -> unit) =
          fun (x2348 : 'tags this) ->
            fun (x2349 : LocaleHourCycleKey.t) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2348) "hourCycle"
                (LocaleHourCycleKey.t_to_js x2349)
        let (get_language : 'tags this -> string option) =
          fun (x2351 : 'tags this) ->
            Ojs.option_of_js Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2351) "language")
        let (set_language : 'tags this -> string -> unit) =
          fun (x2354 : 'tags this) ->
            fun (x2355 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2354) "language"
                (Ojs.string_to_js x2355)
        let (get_numberingSystem : 'tags this -> string option) =
          fun (x2357 : 'tags this) ->
            Ojs.option_of_js Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2357)
                 "numberingSystem")
        let (set_numberingSystem : 'tags this -> string -> unit) =
          fun (x2360 : 'tags this) ->
            fun (x2361 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2360)
                "numberingSystem" (Ojs.string_to_js x2361)
        let (get_numeric : 'tags this -> bool option) =
          fun (x2363 : 'tags this) ->
            Ojs.option_of_js Ojs.bool_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2363) "numeric")
        let (set_numeric : 'tags this -> bool -> unit) =
          fun (x2366 : 'tags this) ->
            fun (x2367 : bool) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2366) "numeric"
                (Ojs.bool_to_js x2367)
        let (get_region : 'tags this -> string option) =
          fun (x2369 : 'tags this) ->
            Ojs.option_of_js Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2369) "region")
        let (set_region : 'tags this -> string -> unit) =
          fun (x2372 : 'tags this) ->
            fun (x2373 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2372) "region"
                (Ojs.string_to_js x2373)
        let (get_script : 'tags this -> string option) =
          fun (x2375 : 'tags this) ->
            Ojs.option_of_js Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2375) "script")
        let (set_script : 'tags this -> string -> unit) =
          fun (x2378 : 'tags this) ->
            fun (x2379 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2378) "script"
                (Ojs.string_to_js x2379)
        let (create :
          ?baseName:string ->
            ?calendar:string ->
              ?caseFirst:LocaleCollationCaseFirst.t ->
                ?collation:string ->
                  ?hourCycle:LocaleHourCycleKey.t ->
                    ?language:string ->
                      ?numberingSystem:string ->
                        ?numeric:bool ->
                          ?region:string -> ?script:string -> unit -> t)
          =
          fun ?baseName:(x2381 : string option) ->
            fun ?calendar:(x2382 : string option) ->
              fun ?caseFirst:(x2383 : LocaleCollationCaseFirst.t option) ->
                fun ?collation:(x2384 : string option) ->
                  fun ?hourCycle:(x2385 : LocaleHourCycleKey.t option) ->
                    fun ?language:(x2386 : string option) ->
                      fun ?numberingSystem:(x2387 : string option) ->
                        fun ?numeric:(x2388 : bool option) ->
                          fun ?region:(x2389 : string option) ->
                            fun ?script:(x2390 : string option) ->
                              fun () ->
                                let x2391 = Ojs.empty_obj () in
                                (match x2381 with
                                 | Some x2401 ->
                                     Ojs.set_prop_ascii x2391 "baseName"
                                       (Ojs.string_to_js x2401)
                                 | None -> ());
                                (match x2382 with
                                 | Some x2400 ->
                                     Ojs.set_prop_ascii x2391 "calendar"
                                       (Ojs.string_to_js x2400)
                                 | None -> ());
                                (match x2383 with
                                 | Some x2399 ->
                                     Ojs.set_prop_ascii x2391 "caseFirst"
                                       (LocaleCollationCaseFirst.t_to_js
                                          x2399)
                                 | None -> ());
                                (match x2384 with
                                 | Some x2398 ->
                                     Ojs.set_prop_ascii x2391 "collation"
                                       (Ojs.string_to_js x2398)
                                 | None -> ());
                                (match x2385 with
                                 | Some x2397 ->
                                     Ojs.set_prop_ascii x2391 "hourCycle"
                                       (LocaleHourCycleKey.t_to_js x2397)
                                 | None -> ());
                                (match x2386 with
                                 | Some x2396 ->
                                     Ojs.set_prop_ascii x2391 "language"
                                       (Ojs.string_to_js x2396)
                                 | None -> ());
                                (match x2387 with
                                 | Some x2395 ->
                                     Ojs.set_prop_ascii x2391
                                       "numberingSystem"
                                       (Ojs.string_to_js x2395)
                                 | None -> ());
                                (match x2388 with
                                 | Some x2394 ->
                                     Ojs.set_prop_ascii x2391 "numeric"
                                       (Ojs.bool_to_js x2394)
                                 | None -> ());
                                (match x2389 with
                                 | Some x2393 ->
                                     Ojs.set_prop_ascii x2391 "region"
                                       (Ojs.string_to_js x2393)
                                 | None -> ());
                                (match x2390 with
                                 | Some x2392 ->
                                     Ojs.set_prop_ascii x2391 "script"
                                       (Ojs.string_to_js x2392)
                                 | None -> ());
                                t_of_js x2391
        let cast_from = Obj.magic
      end
    module Locale =
      struct
        type t = [ `Intl_Locale  | `Intl_LocaleOptions ] intf
        let rec t_of_js : Ojs.t -> t = Obj.magic
        and t_to_js : t -> Ojs.t = Obj.magic
        type tags = [ `Intl_Locale  | `Intl_LocaleOptions ]
        type 'tags this = 'tags intf constraint 'tags = [> `Intl_Locale ]
        let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
          =
          fun (type __tags) ->
            fun (__tags_of_js : Ojs.t -> __tags) ->
              fun (x2404 : Ojs.t) -> intf_of_js __tags_of_js x2404
        and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
          fun (type __tags) ->
            fun (__tags_to_js : __tags -> Ojs.t) ->
              fun (x2402 : __tags intf) -> intf_to_js __tags_to_js x2402
        let (get_baseName : 'tags this -> string) =
          fun (x2406 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2406) "baseName")
        let (set_baseName : 'tags this -> string -> unit) =
          fun (x2408 : 'tags this) ->
            fun (x2409 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2408) "baseName"
                (Ojs.string_to_js x2409)
        let (get_language : 'tags this -> string) =
          fun (x2411 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2411) "language")
        let (set_language : 'tags this -> string -> unit) =
          fun (x2413 : 'tags this) ->
            fun (x2414 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2413) "language"
                (Ojs.string_to_js x2414)
        let (maximize : 'tags this -> t) =
          fun (x2416 : 'tags this) ->
            t_of_js (Ojs.call (this_to_js Obj.magic x2416) "maximize" [||])
        let (minimize : 'tags this -> t) =
          fun (x2418 : 'tags this) ->
            t_of_js (Ojs.call (this_to_js Obj.magic x2418) "minimize" [||])
        let (toString : 'tags this -> UnicodeBCP47LocaleIdentifier.t) =
          fun (x2420 : 'tags this) ->
            UnicodeBCP47LocaleIdentifier.t_of_js
              (Ojs.call (this_to_js Obj.magic x2420) "toString" [||])
        let cast_from = Obj.magic
        let (create :
          tag:[ `U1 of UnicodeBCP47LocaleIdentifier.t  | `U2 of t ] ->
            ?options:LocaleOptions.t -> unit -> t)
          =
          fun
            ~tag:(x2422 :
                   [ `U1 of UnicodeBCP47LocaleIdentifier.t  | `U2 of t ])
            ->
            fun ?options:(x2423 : LocaleOptions.t option) ->
              fun () ->
                t_of_js
                  (Ojs.new_obj_arr
                     (Ojs.get_prop_ascii
                        (Ojs.get_prop_ascii Ojs.global "Intl") "Locale")
                     (let x2424 =
                        Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                          [||] in
                      ignore
                        (Ojs.call x2424 "push"
                           [|((match x2422 with
                               | `U1 x2426 ->
                                   UnicodeBCP47LocaleIdentifier.t_to_js x2426
                               | `U2 x2427 -> t_to_js x2427))|]);
                      (match x2423 with
                       | Some x2425 ->
                           ignore
                             (Ojs.call x2424 "push"
                                [|(LocaleOptions.t_to_js x2425)|])
                       | None -> ());
                      x2424))
      end
    module LocalesArgument =
      struct
        type t =
          (Locale.t, UnicodeBCP47LocaleIdentifier.t,
            (Locale.t, UnicodeBCP47LocaleIdentifier.t) union2 list) union3
            option
        let rec t_of_js : Ojs.t -> t =
          fun (x2436 : Ojs.t) ->
            Ojs.option_of_js
              (fun (x2437 : Ojs.t) ->
                 union3_of_js Locale.t_of_js
                   UnicodeBCP47LocaleIdentifier.t_of_js
                   (fun (x2440 : Ojs.t) ->
                      Ojs.list_of_js
                        (fun (x2441 : Ojs.t) ->
                           union2_of_js Locale.t_of_js
                             UnicodeBCP47LocaleIdentifier.t_of_js x2441)
                        x2440) x2437) x2436
        and t_to_js : t -> Ojs.t =
          fun
            (x2428 :
              (Locale.t, UnicodeBCP47LocaleIdentifier.t,
                (Locale.t, UnicodeBCP47LocaleIdentifier.t) union2 list)
                union3 option)
            ->
            Ojs.option_to_js
              (fun
                 (x2429 :
                   (Locale.t, UnicodeBCP47LocaleIdentifier.t,
                     (Locale.t, UnicodeBCP47LocaleIdentifier.t) union2 list)
                     union3)
                 ->
                 union3_to_js Locale.t_to_js
                   UnicodeBCP47LocaleIdentifier.t_to_js
                   (fun
                      (x2432 :
                        (Locale.t, UnicodeBCP47LocaleIdentifier.t) union2
                          list)
                      ->
                      Ojs.list_to_js
                        (fun
                           (x2433 :
                             (Locale.t, UnicodeBCP47LocaleIdentifier.t)
                               union2)
                           ->
                           union2_to_js Locale.t_to_js
                             UnicodeBCP47LocaleIdentifier.t_to_js x2433)
                        x2432) x2429) x2428
      end
    module Segmenter =
      struct
        type t = [ `Intl_Segmenter ] intf
        let rec t_of_js : Ojs.t -> t = Obj.magic
        and t_to_js : t -> Ojs.t = Obj.magic
        type tags = [ `Intl_Segmenter ]
        type 'tags this = 'tags intf constraint 'tags = [> `Intl_Segmenter ]
        let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
          =
          fun (type __tags) ->
            fun (__tags_of_js : Ojs.t -> __tags) ->
              fun (x2446 : Ojs.t) -> intf_of_js __tags_of_js x2446
        and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
          fun (type __tags) ->
            fun (__tags_to_js : __tags -> Ojs.t) ->
              fun (x2444 : __tags intf) -> intf_to_js __tags_to_js x2444
        let (segment : 'tags this -> input:string -> Segments.t) =
          fun (x2449 : 'tags this) ->
            fun ~input:(x2448 : string) ->
              Segments.t_of_js
                (Ojs.call (this_to_js Obj.magic x2449) "segment"
                   [|(Ojs.string_to_js x2448)|])
        let (resolvedOptions : 'tags this -> ResolvedSegmenterOptions.t) =
          fun (x2451 : 'tags this) ->
            ResolvedSegmenterOptions.t_of_js
              (Ojs.call (this_to_js Obj.magic x2451) "resolvedOptions" [||])
        let cast_from = Obj.magic
        let (prototype : unit -> t) =
          fun () ->
            t_of_js
              (Ojs.get_prop_ascii
                 (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Intl")
                    "Segmenter") "prototype")
        let (create :
          ?locales:LocalesArgument.t ->
            ?options:SegmenterOptions.t -> unit -> t)
          =
          fun ?locales:(x2453 : LocalesArgument.t option) ->
            fun ?options:(x2454 : SegmenterOptions.t option) ->
              fun () ->
                t_of_js
                  (Ojs.new_obj_arr
                     (Ojs.get_prop_ascii
                        (Ojs.get_prop_ascii Ojs.global "Intl") "Segmenter")
                     (let x2455 =
                        Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                          [||] in
                      (match x2453 with
                       | Some x2457 ->
                           ignore
                             (Ojs.call x2455 "push"
                                [|(LocalesArgument.t_to_js x2457)|])
                       | None -> ());
                      (match x2454 with
                       | Some x2456 ->
                           ignore
                             (Ojs.call x2455 "push"
                                [|(SegmenterOptions.t_to_js x2456)|])
                       | None -> ());
                      x2455))
        let (supportedLocalesOf :
          locales:LocalesArgument.t ->
            ?options:(SegmenterOptions.t, [ `L_s77_localeMatcher ]) Pick.t ->
              unit -> UnicodeBCP47LocaleIdentifier.t list)
          =
          fun ~locales:(x2458 : LocalesArgument.t) ->
            fun
              ?options:(x2459 :
                         (SegmenterOptions.t, [ `L_s77_localeMatcher ])
                           Pick.t option)
              ->
              fun () ->
                Ojs.list_of_js UnicodeBCP47LocaleIdentifier.t_of_js
                  (let x2464 =
                     Ojs.get_prop_ascii
                       (Ojs.get_prop_ascii Ojs.global "Intl") "Segmenter" in
                   Ojs.call (Ojs.get_prop_ascii x2464 "supportedLocalesOf")
                     "apply"
                     [|x2464;((let x2460 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x2460 "push"
                                    [|(LocalesArgument.t_to_js x2458)|]);
                               (match x2459 with
                                | Some x2461 ->
                                    ignore
                                      (Ojs.call x2460 "push"
                                         [|(Pick.t_to_js
                                              SegmenterOptions.t_to_js
                                              (fun
                                                 (x2463 :
                                                   [ `L_s77_localeMatcher ])
                                                 ->
                                                 match x2463 with
                                                 | `L_s77_localeMatcher ->
                                                     Ojs.string_to_js
                                                       "localeMatcher") x2461)|])
                                | None -> ());
                               x2460))|])
      end
    module RelativeTimeFormatNumeric =
      struct
        type t = [ `L_s22_always  | `L_s23_auto ]
        let rec t_of_js : Ojs.t -> t =
          fun (x2467 : Ojs.t) ->
            let x2468 = x2467 in
            match Ojs.string_of_js x2468 with
            | "always" -> `L_s22_always
            | "auto" -> `L_s23_auto
            | _ -> assert false
        and t_to_js : t -> Ojs.t =
          fun (x2466 : [ `L_s22_always  | `L_s23_auto ]) ->
            match x2466 with
            | `L_s22_always -> Ojs.string_to_js "always"
            | `L_s23_auto -> Ojs.string_to_js "auto"
      end
    module RelativeTimeFormatStyle =
      struct
        type t = [ `L_s122_short  | `L_s78_long  | `L_s92_narrow ]
        let rec t_of_js : Ojs.t -> t =
          fun (x2470 : Ojs.t) ->
            let x2471 = x2470 in
            match Ojs.string_of_js x2471 with
            | "short" -> `L_s122_short
            | "long" -> `L_s78_long
            | "narrow" -> `L_s92_narrow
            | _ -> assert false
        and t_to_js : t -> Ojs.t =
          fun (x2469 : [ `L_s122_short  | `L_s78_long  | `L_s92_narrow ]) ->
            match x2469 with
            | `L_s122_short -> Ojs.string_to_js "short"
            | `L_s78_long -> Ojs.string_to_js "long"
            | `L_s92_narrow -> Ojs.string_to_js "narrow"
      end
    module ResolvedRelativeTimeFormatOptions =
      struct
        type t = [ `Intl_ResolvedRelativeTimeFormatOptions ] intf
        let rec t_of_js : Ojs.t -> t = Obj.magic
        and t_to_js : t -> Ojs.t = Obj.magic
        type tags = [ `Intl_ResolvedRelativeTimeFormatOptions ]
        type 'tags this =
          'tags intf constraint 'tags =
                      [> `Intl_ResolvedRelativeTimeFormatOptions ]
        let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
          =
          fun (type __tags) ->
            fun (__tags_of_js : Ojs.t -> __tags) ->
              fun (x2474 : Ojs.t) -> intf_of_js __tags_of_js x2474
        and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
          fun (type __tags) ->
            fun (__tags_to_js : __tags -> Ojs.t) ->
              fun (x2472 : __tags intf) -> intf_to_js __tags_to_js x2472
        let (get_locale : 'tags this -> UnicodeBCP47LocaleIdentifier.t) =
          fun (x2476 : 'tags this) ->
            UnicodeBCP47LocaleIdentifier.t_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2476) "locale")
        let (set_locale :
          'tags this -> UnicodeBCP47LocaleIdentifier.t -> unit) =
          fun (x2478 : 'tags this) ->
            fun (x2479 : UnicodeBCP47LocaleIdentifier.t) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2478) "locale"
                (UnicodeBCP47LocaleIdentifier.t_to_js x2479)
        let (get_style : 'tags this -> RelativeTimeFormatStyle.t) =
          fun (x2481 : 'tags this) ->
            RelativeTimeFormatStyle.t_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2481) "style")
        let (set_style : 'tags this -> RelativeTimeFormatStyle.t -> unit) =
          fun (x2483 : 'tags this) ->
            fun (x2484 : RelativeTimeFormatStyle.t) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2483) "style"
                (RelativeTimeFormatStyle.t_to_js x2484)
        let (get_numeric : 'tags this -> RelativeTimeFormatNumeric.t) =
          fun (x2486 : 'tags this) ->
            RelativeTimeFormatNumeric.t_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2486) "numeric")
        let (set_numeric : 'tags this -> RelativeTimeFormatNumeric.t -> unit)
          =
          fun (x2488 : 'tags this) ->
            fun (x2489 : RelativeTimeFormatNumeric.t) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2488) "numeric"
                (RelativeTimeFormatNumeric.t_to_js x2489)
        let (get_numberingSystem : 'tags this -> string) =
          fun (x2491 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2491)
                 "numberingSystem")
        let (set_numberingSystem : 'tags this -> string -> unit) =
          fun (x2493 : 'tags this) ->
            fun (x2494 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2493)
                "numberingSystem" (Ojs.string_to_js x2494)
        let (create :
          locale:UnicodeBCP47LocaleIdentifier.t ->
            style:RelativeTimeFormatStyle.t ->
              numeric:RelativeTimeFormatNumeric.t ->
                numberingSystem:string -> unit -> t)
          =
          fun ~locale:(x2496 : UnicodeBCP47LocaleIdentifier.t) ->
            fun ~style:(x2497 : RelativeTimeFormatStyle.t) ->
              fun ~numeric:(x2498 : RelativeTimeFormatNumeric.t) ->
                fun ~numberingSystem:(x2499 : string) ->
                  fun () ->
                    let x2500 = Ojs.empty_obj () in
                    Ojs.set_prop_ascii x2500 "locale"
                      (UnicodeBCP47LocaleIdentifier.t_to_js x2496);
                    Ojs.set_prop_ascii x2500 "style"
                      (RelativeTimeFormatStyle.t_to_js x2497);
                    Ojs.set_prop_ascii x2500 "numeric"
                      (RelativeTimeFormatNumeric.t_to_js x2498);
                    Ojs.set_prop_ascii x2500 "numberingSystem"
                      (Ojs.string_to_js x2499);
                    t_of_js x2500
        let cast_from = Obj.magic
      end
    module RelativeTimeFormatUnit =
      struct
        type t =
          [ `L_s109_quarter  | `L_s110_quarters  | `L_s118_second 
          | `L_s119_seconds  | `L_s141_week  | `L_s143_weeks  | `L_s145_year 
          | `L_s146_years  | `L_s38_day  | `L_s40_days  | `L_s71_hour 
          | `L_s72_hours  | `L_s86_minute  | `L_s87_minutes  | `L_s88_month 
          | `L_s89_months ]
        let rec t_of_js : Ojs.t -> t =
          fun (x2502 : Ojs.t) ->
            let x2503 = x2502 in
            match Ojs.string_of_js x2503 with
            | "quarter" -> `L_s109_quarter
            | "quarters" -> `L_s110_quarters
            | "second" -> `L_s118_second
            | "seconds" -> `L_s119_seconds
            | "week" -> `L_s141_week
            | "weeks" -> `L_s143_weeks
            | "year" -> `L_s145_year
            | "years" -> `L_s146_years
            | "day" -> `L_s38_day
            | "days" -> `L_s40_days
            | "hour" -> `L_s71_hour
            | "hours" -> `L_s72_hours
            | "minute" -> `L_s86_minute
            | "minutes" -> `L_s87_minutes
            | "month" -> `L_s88_month
            | "months" -> `L_s89_months
            | _ -> assert false
        and t_to_js : t -> Ojs.t =
          fun
            (x2501 :
              [ `L_s109_quarter  | `L_s110_quarters  | `L_s118_second 
              | `L_s119_seconds  | `L_s141_week  | `L_s143_weeks 
              | `L_s145_year  | `L_s146_years  | `L_s38_day  | `L_s40_days 
              | `L_s71_hour  | `L_s72_hours  | `L_s86_minute 
              | `L_s87_minutes  | `L_s88_month  | `L_s89_months ])
            ->
            match x2501 with
            | `L_s109_quarter -> Ojs.string_to_js "quarter"
            | `L_s110_quarters -> Ojs.string_to_js "quarters"
            | `L_s118_second -> Ojs.string_to_js "second"
            | `L_s119_seconds -> Ojs.string_to_js "seconds"
            | `L_s141_week -> Ojs.string_to_js "week"
            | `L_s143_weeks -> Ojs.string_to_js "weeks"
            | `L_s145_year -> Ojs.string_to_js "year"
            | `L_s146_years -> Ojs.string_to_js "years"
            | `L_s38_day -> Ojs.string_to_js "day"
            | `L_s40_days -> Ojs.string_to_js "days"
            | `L_s71_hour -> Ojs.string_to_js "hour"
            | `L_s72_hours -> Ojs.string_to_js "hours"
            | `L_s86_minute -> Ojs.string_to_js "minute"
            | `L_s87_minutes -> Ojs.string_to_js "minutes"
            | `L_s88_month -> Ojs.string_to_js "month"
            | `L_s89_months -> Ojs.string_to_js "months"
      end
    module RelativeTimeFormatUnitSingular =
      struct
        type t =
          [ `L_s109_quarter  | `L_s118_second  | `L_s141_week 
          | `L_s145_year  | `L_s38_day  | `L_s71_hour  | `L_s86_minute 
          | `L_s88_month ]
        let rec t_of_js : Ojs.t -> t =
          fun (x2505 : Ojs.t) ->
            let x2506 = x2505 in
            match Ojs.string_of_js x2506 with
            | "quarter" -> `L_s109_quarter
            | "second" -> `L_s118_second
            | "week" -> `L_s141_week
            | "year" -> `L_s145_year
            | "day" -> `L_s38_day
            | "hour" -> `L_s71_hour
            | "minute" -> `L_s86_minute
            | "month" -> `L_s88_month
            | _ -> assert false
        and t_to_js : t -> Ojs.t =
          fun
            (x2504 :
              [ `L_s109_quarter  | `L_s118_second  | `L_s141_week 
              | `L_s145_year  | `L_s38_day  | `L_s71_hour  | `L_s86_minute 
              | `L_s88_month ])
            ->
            match x2504 with
            | `L_s109_quarter -> Ojs.string_to_js "quarter"
            | `L_s118_second -> Ojs.string_to_js "second"
            | `L_s141_week -> Ojs.string_to_js "week"
            | `L_s145_year -> Ojs.string_to_js "year"
            | `L_s38_day -> Ojs.string_to_js "day"
            | `L_s71_hour -> Ojs.string_to_js "hour"
            | `L_s86_minute -> Ojs.string_to_js "minute"
            | `L_s88_month -> Ojs.string_to_js "month"
      end
    module ES2020NumberFormatPartType =
      struct
        type t =
          [ `L_s137_unit  | `L_s138_unknown  | `L_s33_compact 
          | `L_s55_exponentInteger  | `L_s56_exponentMinusSign 
          | `L_s57_exponentSeparator ]
        let rec t_of_js : Ojs.t -> t =
          fun (x2508 : Ojs.t) ->
            let x2509 = x2508 in
            match Ojs.string_of_js x2509 with
            | "unit" -> `L_s137_unit
            | "unknown" -> `L_s138_unknown
            | "compact" -> `L_s33_compact
            | "exponentInteger" -> `L_s55_exponentInteger
            | "exponentMinusSign" -> `L_s56_exponentMinusSign
            | "exponentSeparator" -> `L_s57_exponentSeparator
            | _ -> assert false
        and t_to_js : t -> Ojs.t =
          fun
            (x2507 :
              [ `L_s137_unit  | `L_s138_unknown  | `L_s33_compact 
              | `L_s55_exponentInteger  | `L_s56_exponentMinusSign 
              | `L_s57_exponentSeparator ])
            ->
            match x2507 with
            | `L_s137_unit -> Ojs.string_to_js "unit"
            | `L_s138_unknown -> Ojs.string_to_js "unknown"
            | `L_s33_compact -> Ojs.string_to_js "compact"
            | `L_s55_exponentInteger -> Ojs.string_to_js "exponentInteger"
            | `L_s56_exponentMinusSign ->
                Ojs.string_to_js "exponentMinusSign"
            | `L_s57_exponentSeparator ->
                Ojs.string_to_js "exponentSeparator"
      end
    module ES2018NumberFormatPartType =
      struct
        type t =
          [ `L_s103_percent  | `L_s104_percentSign  | `L_s108_plusSign 
          | `L_s130_symbol  | `L_s31_code  | `L_s36_currency 
          | `L_s41_decimal  | `L_s60_fraction  | `L_s66_group 
          | `L_s73_infinity  | `L_s74_integer  | `L_s76_literal 
          | `L_s85_minusSign  | `L_s90_name  | `L_s91_nan ]
        let rec t_of_js : Ojs.t -> t =
          fun (x2511 : Ojs.t) ->
            let x2512 = x2511 in
            match Ojs.string_of_js x2512 with
            | "percent" -> `L_s103_percent
            | "percentSign" -> `L_s104_percentSign
            | "plusSign" -> `L_s108_plusSign
            | "symbol" -> `L_s130_symbol
            | "code" -> `L_s31_code
            | "currency" -> `L_s36_currency
            | "decimal" -> `L_s41_decimal
            | "fraction" -> `L_s60_fraction
            | "group" -> `L_s66_group
            | "infinity" -> `L_s73_infinity
            | "integer" -> `L_s74_integer
            | "literal" -> `L_s76_literal
            | "minusSign" -> `L_s85_minusSign
            | "name" -> `L_s90_name
            | "nan" -> `L_s91_nan
            | _ -> assert false
        and t_to_js : t -> Ojs.t =
          fun
            (x2510 :
              [ `L_s103_percent  | `L_s104_percentSign  | `L_s108_plusSign 
              | `L_s130_symbol  | `L_s31_code  | `L_s36_currency 
              | `L_s41_decimal  | `L_s60_fraction  | `L_s66_group 
              | `L_s73_infinity  | `L_s74_integer  | `L_s76_literal 
              | `L_s85_minusSign  | `L_s90_name  | `L_s91_nan ])
            ->
            match x2510 with
            | `L_s103_percent -> Ojs.string_to_js "percent"
            | `L_s104_percentSign -> Ojs.string_to_js "percentSign"
            | `L_s108_plusSign -> Ojs.string_to_js "plusSign"
            | `L_s130_symbol -> Ojs.string_to_js "symbol"
            | `L_s31_code -> Ojs.string_to_js "code"
            | `L_s36_currency -> Ojs.string_to_js "currency"
            | `L_s41_decimal -> Ojs.string_to_js "decimal"
            | `L_s60_fraction -> Ojs.string_to_js "fraction"
            | `L_s66_group -> Ojs.string_to_js "group"
            | `L_s73_infinity -> Ojs.string_to_js "infinity"
            | `L_s74_integer -> Ojs.string_to_js "integer"
            | `L_s76_literal -> Ojs.string_to_js "literal"
            | `L_s85_minusSign -> Ojs.string_to_js "minusSign"
            | `L_s90_name -> Ojs.string_to_js "name"
            | `L_s91_nan -> Ojs.string_to_js "nan"
      end
    module NumberFormatPartTypes =
      struct
        type t =
          [ `L_s103_percent  | `L_s104_percentSign  | `L_s108_plusSign 
          | `L_s130_symbol  | `L_s137_unit  | `L_s138_unknown  | `L_s31_code 
          | `L_s33_compact  | `L_s36_currency  | `L_s41_decimal 
          | `L_s55_exponentInteger  | `L_s56_exponentMinusSign 
          | `L_s57_exponentSeparator  | `L_s60_fraction  | `L_s66_group 
          | `L_s73_infinity  | `L_s74_integer  | `L_s76_literal 
          | `L_s85_minusSign  | `L_s90_name  | `L_s91_nan ]
        let rec t_of_js : Ojs.t -> t =
          fun (x2514 : Ojs.t) ->
            let x2515 = x2514 in
            match Ojs.string_of_js x2515 with
            | "percent" -> `L_s103_percent
            | "percentSign" -> `L_s104_percentSign
            | "plusSign" -> `L_s108_plusSign
            | "symbol" -> `L_s130_symbol
            | "unit" -> `L_s137_unit
            | "unknown" -> `L_s138_unknown
            | "code" -> `L_s31_code
            | "compact" -> `L_s33_compact
            | "currency" -> `L_s36_currency
            | "decimal" -> `L_s41_decimal
            | "exponentInteger" -> `L_s55_exponentInteger
            | "exponentMinusSign" -> `L_s56_exponentMinusSign
            | "exponentSeparator" -> `L_s57_exponentSeparator
            | "fraction" -> `L_s60_fraction
            | "group" -> `L_s66_group
            | "infinity" -> `L_s73_infinity
            | "integer" -> `L_s74_integer
            | "literal" -> `L_s76_literal
            | "minusSign" -> `L_s85_minusSign
            | "name" -> `L_s90_name
            | "nan" -> `L_s91_nan
            | _ -> assert false
        and t_to_js : t -> Ojs.t =
          fun
            (x2513 :
              [ `L_s103_percent  | `L_s104_percentSign  | `L_s108_plusSign 
              | `L_s130_symbol  | `L_s137_unit  | `L_s138_unknown 
              | `L_s31_code  | `L_s33_compact  | `L_s36_currency 
              | `L_s41_decimal  | `L_s55_exponentInteger 
              | `L_s56_exponentMinusSign  | `L_s57_exponentSeparator 
              | `L_s60_fraction  | `L_s66_group  | `L_s73_infinity 
              | `L_s74_integer  | `L_s76_literal  | `L_s85_minusSign 
              | `L_s90_name  | `L_s91_nan ])
            ->
            match x2513 with
            | `L_s103_percent -> Ojs.string_to_js "percent"
            | `L_s104_percentSign -> Ojs.string_to_js "percentSign"
            | `L_s108_plusSign -> Ojs.string_to_js "plusSign"
            | `L_s130_symbol -> Ojs.string_to_js "symbol"
            | `L_s137_unit -> Ojs.string_to_js "unit"
            | `L_s138_unknown -> Ojs.string_to_js "unknown"
            | `L_s31_code -> Ojs.string_to_js "code"
            | `L_s33_compact -> Ojs.string_to_js "compact"
            | `L_s36_currency -> Ojs.string_to_js "currency"
            | `L_s41_decimal -> Ojs.string_to_js "decimal"
            | `L_s55_exponentInteger -> Ojs.string_to_js "exponentInteger"
            | `L_s56_exponentMinusSign ->
                Ojs.string_to_js "exponentMinusSign"
            | `L_s57_exponentSeparator ->
                Ojs.string_to_js "exponentSeparator"
            | `L_s60_fraction -> Ojs.string_to_js "fraction"
            | `L_s66_group -> Ojs.string_to_js "group"
            | `L_s73_infinity -> Ojs.string_to_js "infinity"
            | `L_s74_integer -> Ojs.string_to_js "integer"
            | `L_s76_literal -> Ojs.string_to_js "literal"
            | `L_s85_minusSign -> Ojs.string_to_js "minusSign"
            | `L_s90_name -> Ojs.string_to_js "name"
            | `L_s91_nan -> Ojs.string_to_js "nan"
      end
    module RelativeTimeFormatPart =
      struct
        module AnonymousInterface12 =
          struct
            type t = Ojs.t
            let rec t_of_js : Ojs.t -> t = fun (x2517 : Ojs.t) -> x2517
            and t_to_js : t -> Ojs.t = fun (x2516 : Ojs.t) -> x2516
            let (get_type :
              t -> (NumberFormatPartTypes.t, [ `L_s76_literal ]) Exclude.t) =
              fun (x2518 : t) ->
                Exclude.t_of_js NumberFormatPartTypes.t_of_js
                  (fun (x2520 : Ojs.t) ->
                     let x2521 = x2520 in
                     match Ojs.string_of_js x2521 with
                     | "literal" -> `L_s76_literal
                     | _ -> assert false)
                  (Ojs.get_prop_ascii (t_to_js x2518) "type")
            let (set_type :
              t ->
                (NumberFormatPartTypes.t, [ `L_s76_literal ]) Exclude.t ->
                  unit)
              =
              fun (x2522 : t) ->
                fun
                  (x2523 :
                    (NumberFormatPartTypes.t, [ `L_s76_literal ]) Exclude.t)
                  ->
                  Ojs.set_prop_ascii (t_to_js x2522) "type"
                    (Exclude.t_to_js NumberFormatPartTypes.t_to_js
                       (fun (x2525 : [ `L_s76_literal ]) ->
                          match x2525 with
                          | `L_s76_literal -> Ojs.string_to_js "literal")
                       x2523)
            let (get_value : t -> string) =
              fun (x2526 : t) ->
                Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x2526) "value")
            let (set_value : t -> string -> unit) =
              fun (x2527 : t) ->
                fun (x2528 : string) ->
                  Ojs.set_prop_ascii (t_to_js x2527) "value"
                    (Ojs.string_to_js x2528)
            let (get_unit : t -> RelativeTimeFormatUnitSingular.t) =
              fun (x2529 : t) ->
                RelativeTimeFormatUnitSingular.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x2529) "unit")
            let (set_unit : t -> RelativeTimeFormatUnitSingular.t -> unit) =
              fun (x2530 : t) ->
                fun (x2531 : RelativeTimeFormatUnitSingular.t) ->
                  Ojs.set_prop_ascii (t_to_js x2530) "unit"
                    (RelativeTimeFormatUnitSingular.t_to_js x2531)
            let (create :
              type_:(NumberFormatPartTypes.t, [ `L_s76_literal ]) Exclude.t
                ->
                value:string ->
                  unit:RelativeTimeFormatUnitSingular.t -> unit -> t)
              =
              fun
                ~type_:(x2532 :
                         (NumberFormatPartTypes.t, [ `L_s76_literal ])
                           Exclude.t)
                ->
                fun ~value:(x2533 : string) ->
                  fun ~unit:(x2534 : RelativeTimeFormatUnitSingular.t) ->
                    fun () ->
                      let x2535 = Ojs.empty_obj () in
                      Ojs.set_prop_ascii x2535 "type"
                        (Exclude.t_to_js NumberFormatPartTypes.t_to_js
                           (fun (x2537 : [ `L_s76_literal ]) ->
                              match x2537 with
                              | `L_s76_literal -> Ojs.string_to_js "literal")
                           x2532);
                      Ojs.set_prop_ascii x2535 "value"
                        (Ojs.string_to_js x2533);
                      Ojs.set_prop_ascii x2535 "unit"
                        (RelativeTimeFormatUnitSingular.t_to_js x2534);
                      t_of_js x2535
          end
        module AnonymousInterface10 =
          struct
            type t = Ojs.t
            let rec t_of_js : Ojs.t -> t = fun (x2539 : Ojs.t) -> x2539
            and t_to_js : t -> Ojs.t = fun (x2538 : Ojs.t) -> x2538
            let (get_type : t -> [ `L_s76_literal ]) =
              fun (x2540 : t) ->
                let x2541 = Ojs.get_prop_ascii (t_to_js x2540) "type" in
                match Ojs.string_of_js x2541 with
                | "literal" -> `L_s76_literal
                | _ -> assert false
            let (set_type : t -> [ `L_s76_literal ] -> unit) =
              fun (x2542 : t) ->
                fun (x2543 : [ `L_s76_literal ]) ->
                  Ojs.set_prop_ascii (t_to_js x2542) "type"
                    (match x2543 with
                     | `L_s76_literal -> Ojs.string_to_js "literal")
            let (get_value : t -> string) =
              fun (x2544 : t) ->
                Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x2544) "value")
            let (set_value : t -> string -> unit) =
              fun (x2545 : t) ->
                fun (x2546 : string) ->
                  Ojs.set_prop_ascii (t_to_js x2545) "value"
                    (Ojs.string_to_js x2546)
            let (create :
              type_:[ `L_s76_literal ] -> value:string -> unit -> t) =
              fun ~type_:(x2547 : [ `L_s76_literal ]) ->
                fun ~value:(x2548 : string) ->
                  fun () ->
                    let x2549 = Ojs.empty_obj () in
                    Ojs.set_prop_ascii x2549 "type"
                      (match x2547 with
                       | `L_s76_literal -> Ojs.string_to_js "literal");
                    Ojs.set_prop_ascii x2549 "value" (Ojs.string_to_js x2548);
                    t_of_js x2549
          end
        type t = (AnonymousInterface10.t, AnonymousInterface12.t) union2
        let rec t_of_js : Ojs.t -> t =
          fun (x2553 : Ojs.t) ->
            union2_of_js AnonymousInterface10.t_of_js
              AnonymousInterface12.t_of_js x2553
        and t_to_js : t -> Ojs.t =
          fun
            (x2550 : (AnonymousInterface10.t, AnonymousInterface12.t) union2)
            ->
            union2_to_js AnonymousInterface10.t_to_js
              AnonymousInterface12.t_to_js x2550
      end
    module RelativeTimeFormatLocaleMatcher =
      struct
        type t = [ `L_s26_best_fit  | `L_s81_lookup ]
        let rec t_of_js : Ojs.t -> t =
          fun (x2557 : Ojs.t) ->
            let x2558 = x2557 in
            match Ojs.string_of_js x2558 with
            | "best fit" -> `L_s26_best_fit
            | "lookup" -> `L_s81_lookup
            | _ -> assert false
        and t_to_js : t -> Ojs.t =
          fun (x2556 : [ `L_s26_best_fit  | `L_s81_lookup ]) ->
            match x2556 with
            | `L_s26_best_fit -> Ojs.string_to_js "best fit"
            | `L_s81_lookup -> Ojs.string_to_js "lookup"
      end
    module RelativeTimeFormatOptions =
      struct
        type t = [ `Intl_RelativeTimeFormatOptions ] intf
        let rec t_of_js : Ojs.t -> t = Obj.magic
        and t_to_js : t -> Ojs.t = Obj.magic
        type tags = [ `Intl_RelativeTimeFormatOptions ]
        type 'tags this =
          'tags intf constraint 'tags = [> `Intl_RelativeTimeFormatOptions ]
        let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
          =
          fun (type __tags) ->
            fun (__tags_of_js : Ojs.t -> __tags) ->
              fun (x2561 : Ojs.t) -> intf_of_js __tags_of_js x2561
        and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
          fun (type __tags) ->
            fun (__tags_to_js : __tags -> Ojs.t) ->
              fun (x2559 : __tags intf) -> intf_to_js __tags_to_js x2559
        let (get_localeMatcher :
          'tags this -> RelativeTimeFormatLocaleMatcher.t option) =
          fun (x2563 : 'tags this) ->
            Ojs.option_of_js RelativeTimeFormatLocaleMatcher.t_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2563)
                 "localeMatcher")
        let (set_localeMatcher :
          'tags this -> RelativeTimeFormatLocaleMatcher.t -> unit) =
          fun (x2566 : 'tags this) ->
            fun (x2567 : RelativeTimeFormatLocaleMatcher.t) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2566) "localeMatcher"
                (RelativeTimeFormatLocaleMatcher.t_to_js x2567)
        let (get_numeric : 'tags this -> RelativeTimeFormatNumeric.t option)
          =
          fun (x2569 : 'tags this) ->
            Ojs.option_of_js RelativeTimeFormatNumeric.t_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2569) "numeric")
        let (set_numeric : 'tags this -> RelativeTimeFormatNumeric.t -> unit)
          =
          fun (x2572 : 'tags this) ->
            fun (x2573 : RelativeTimeFormatNumeric.t) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2572) "numeric"
                (RelativeTimeFormatNumeric.t_to_js x2573)
        let (get_style : 'tags this -> RelativeTimeFormatStyle.t option) =
          fun (x2575 : 'tags this) ->
            Ojs.option_of_js RelativeTimeFormatStyle.t_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2575) "style")
        let (set_style : 'tags this -> RelativeTimeFormatStyle.t -> unit) =
          fun (x2578 : 'tags this) ->
            fun (x2579 : RelativeTimeFormatStyle.t) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2578) "style"
                (RelativeTimeFormatStyle.t_to_js x2579)
        let (create :
          ?localeMatcher:RelativeTimeFormatLocaleMatcher.t ->
            ?numeric:RelativeTimeFormatNumeric.t ->
              ?style:RelativeTimeFormatStyle.t -> unit -> t)
          =
          fun
            ?localeMatcher:(x2581 : RelativeTimeFormatLocaleMatcher.t option)
            ->
            fun ?numeric:(x2582 : RelativeTimeFormatNumeric.t option) ->
              fun ?style:(x2583 : RelativeTimeFormatStyle.t option) ->
                fun () ->
                  let x2584 = Ojs.empty_obj () in
                  (match x2581 with
                   | Some x2587 ->
                       Ojs.set_prop_ascii x2584 "localeMatcher"
                         (RelativeTimeFormatLocaleMatcher.t_to_js x2587)
                   | None -> ());
                  (match x2582 with
                   | Some x2586 ->
                       Ojs.set_prop_ascii x2584 "numeric"
                         (RelativeTimeFormatNumeric.t_to_js x2586)
                   | None -> ());
                  (match x2583 with
                   | Some x2585 ->
                       Ojs.set_prop_ascii x2584 "style"
                         (RelativeTimeFormatStyle.t_to_js x2585)
                   | None -> ());
                  t_of_js x2584
        let cast_from = Obj.magic
      end
    module RelativeTimeFormat =
      struct
        type t = [ `Intl_RelativeTimeFormat ] intf
        let rec t_of_js : Ojs.t -> t = Obj.magic
        and t_to_js : t -> Ojs.t = Obj.magic
        type tags = [ `Intl_RelativeTimeFormat ]
        type 'tags this =
          'tags intf constraint 'tags = [> `Intl_RelativeTimeFormat ]
        let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
          =
          fun (type __tags) ->
            fun (__tags_of_js : Ojs.t -> __tags) ->
              fun (x2590 : Ojs.t) -> intf_of_js __tags_of_js x2590
        and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
          fun (type __tags) ->
            fun (__tags_to_js : __tags -> Ojs.t) ->
              fun (x2588 : __tags intf) -> intf_to_js __tags_to_js x2588
        let (format :
          'tags this ->
            value:float -> unit:RelativeTimeFormatUnit.t -> string)
          =
          fun (x2594 : 'tags this) ->
            fun ~value:(x2592 : float) ->
              fun ~unit:(x2593 : RelativeTimeFormatUnit.t) ->
                Ojs.string_of_js
                  (Ojs.call (this_to_js Obj.magic x2594) "format"
                     [|(Ojs.float_to_js x2592);(RelativeTimeFormatUnit.t_to_js
                                                  x2593)|])
        let (formatToParts :
          'tags this ->
            value:float ->
              unit:RelativeTimeFormatUnit.t -> RelativeTimeFormatPart.t list)
          =
          fun (x2598 : 'tags this) ->
            fun ~value:(x2596 : float) ->
              fun ~unit:(x2597 : RelativeTimeFormatUnit.t) ->
                Ojs.list_of_js RelativeTimeFormatPart.t_of_js
                  (Ojs.call (this_to_js Obj.magic x2598) "formatToParts"
                     [|(Ojs.float_to_js x2596);(RelativeTimeFormatUnit.t_to_js
                                                  x2597)|])
        let (resolvedOptions :
          'tags this -> ResolvedRelativeTimeFormatOptions.t) =
          fun (x2601 : 'tags this) ->
            ResolvedRelativeTimeFormatOptions.t_of_js
              (Ojs.call (this_to_js Obj.magic x2601) "resolvedOptions" [||])
        let cast_from = Obj.magic
        let (create :
          ?locales:LocalesArgument.t ->
            ?options:RelativeTimeFormatOptions.t -> unit -> t)
          =
          fun ?locales:(x2603 : LocalesArgument.t option) ->
            fun ?options:(x2604 : RelativeTimeFormatOptions.t option) ->
              fun () ->
                t_of_js
                  (Ojs.new_obj_arr
                     (Ojs.get_prop_ascii
                        (Ojs.get_prop_ascii Ojs.global "Intl")
                        "RelativeTimeFormat")
                     (let x2605 =
                        Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                          [||] in
                      (match x2603 with
                       | Some x2607 ->
                           ignore
                             (Ojs.call x2605 "push"
                                [|(LocalesArgument.t_to_js x2607)|])
                       | None -> ());
                      (match x2604 with
                       | Some x2606 ->
                           ignore
                             (Ojs.call x2605 "push"
                                [|(RelativeTimeFormatOptions.t_to_js x2606)|])
                       | None -> ());
                      x2605))
        let (supportedLocalesOf :
          ?locales:LocalesArgument.t ->
            ?options:RelativeTimeFormatOptions.t ->
              unit -> UnicodeBCP47LocaleIdentifier.t list)
          =
          fun ?locales:(x2608 : LocalesArgument.t option) ->
            fun ?options:(x2609 : RelativeTimeFormatOptions.t option) ->
              fun () ->
                Ojs.list_of_js UnicodeBCP47LocaleIdentifier.t_of_js
                  (let x2613 =
                     Ojs.get_prop_ascii
                       (Ojs.get_prop_ascii Ojs.global "Intl")
                       "RelativeTimeFormat" in
                   Ojs.call (Ojs.get_prop_ascii x2613 "supportedLocalesOf")
                     "apply"
                     [|x2613;((let x2610 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               (match x2608 with
                                | Some x2612 ->
                                    ignore
                                      (Ojs.call x2610 "push"
                                         [|(LocalesArgument.t_to_js x2612)|])
                                | None -> ());
                               (match x2609 with
                                | Some x2611 ->
                                    ignore
                                      (Ojs.call x2610 "push"
                                         [|(RelativeTimeFormatOptions.t_to_js
                                              x2611)|])
                                | None -> ());
                               x2610))|])
      end
    module PluralRuleType =
      struct
        type t = [ `L_s101_ordinal  | `L_s29_cardinal ]
        let rec t_of_js : Ojs.t -> t =
          fun (x2616 : Ojs.t) ->
            let x2617 = x2616 in
            match Ojs.string_of_js x2617 with
            | "ordinal" -> `L_s101_ordinal
            | "cardinal" -> `L_s29_cardinal
            | _ -> assert false
        and t_to_js : t -> Ojs.t =
          fun (x2615 : [ `L_s101_ordinal  | `L_s29_cardinal ]) ->
            match x2615 with
            | `L_s101_ordinal -> Ojs.string_to_js "ordinal"
            | `L_s29_cardinal -> Ojs.string_to_js "cardinal"
      end
    module LDMLPluralRule =
      struct
        type t =
          [ `L_s100_one  | `L_s102_other  | `L_s135_two  | `L_s147_zero 
          | `L_s59_few  | `L_s83_many ]
        let rec t_of_js : Ojs.t -> t =
          fun (x2619 : Ojs.t) ->
            let x2620 = x2619 in
            match Ojs.string_of_js x2620 with
            | "one" -> `L_s100_one
            | "other" -> `L_s102_other
            | "two" -> `L_s135_two
            | "zero" -> `L_s147_zero
            | "few" -> `L_s59_few
            | "many" -> `L_s83_many
            | _ -> assert false
        and t_to_js : t -> Ojs.t =
          fun
            (x2618 :
              [ `L_s100_one  | `L_s102_other  | `L_s135_two  | `L_s147_zero 
              | `L_s59_few  | `L_s83_many ])
            ->
            match x2618 with
            | `L_s100_one -> Ojs.string_to_js "one"
            | `L_s102_other -> Ojs.string_to_js "other"
            | `L_s135_two -> Ojs.string_to_js "two"
            | `L_s147_zero -> Ojs.string_to_js "zero"
            | `L_s59_few -> Ojs.string_to_js "few"
            | `L_s83_many -> Ojs.string_to_js "many"
      end
    module ResolvedPluralRulesOptions =
      struct
        type t = [ `Intl_ResolvedPluralRulesOptions ] intf
        let rec t_of_js : Ojs.t -> t = Obj.magic
        and t_to_js : t -> Ojs.t = Obj.magic
        type tags = [ `Intl_ResolvedPluralRulesOptions ]
        type 'tags this =
          'tags intf constraint 'tags = [> `Intl_ResolvedPluralRulesOptions ]
        let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
          =
          fun (type __tags) ->
            fun (__tags_of_js : Ojs.t -> __tags) ->
              fun (x2623 : Ojs.t) -> intf_of_js __tags_of_js x2623
        and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
          fun (type __tags) ->
            fun (__tags_to_js : __tags -> Ojs.t) ->
              fun (x2621 : __tags intf) -> intf_to_js __tags_to_js x2621
        let (get_locale : 'tags this -> string) =
          fun (x2625 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2625) "locale")
        let (set_locale : 'tags this -> string -> unit) =
          fun (x2627 : 'tags this) ->
            fun (x2628 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2627) "locale"
                (Ojs.string_to_js x2628)
        let (get_pluralCategories : 'tags this -> LDMLPluralRule.t list) =
          fun (x2630 : 'tags this) ->
            Ojs.list_of_js LDMLPluralRule.t_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2630)
                 "pluralCategories")
        let (set_pluralCategories :
          'tags this -> LDMLPluralRule.t list -> unit) =
          fun (x2633 : 'tags this) ->
            fun (x2634 : LDMLPluralRule.t list) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2633)
                "pluralCategories"
                (Ojs.list_to_js LDMLPluralRule.t_to_js x2634)
        let (get_type : 'tags this -> PluralRuleType.t) =
          fun (x2637 : 'tags this) ->
            PluralRuleType.t_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2637) "type")
        let (set_type : 'tags this -> PluralRuleType.t -> unit) =
          fun (x2639 : 'tags this) ->
            fun (x2640 : PluralRuleType.t) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2639) "type"
                (PluralRuleType.t_to_js x2640)
        let (get_minimumIntegerDigits : 'tags this -> float) =
          fun (x2642 : 'tags this) ->
            Ojs.float_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2642)
                 "minimumIntegerDigits")
        let (set_minimumIntegerDigits : 'tags this -> float -> unit) =
          fun (x2644 : 'tags this) ->
            fun (x2645 : float) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2644)
                "minimumIntegerDigits" (Ojs.float_to_js x2645)
        let (get_minimumFractionDigits : 'tags this -> float) =
          fun (x2647 : 'tags this) ->
            Ojs.float_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2647)
                 "minimumFractionDigits")
        let (set_minimumFractionDigits : 'tags this -> float -> unit) =
          fun (x2649 : 'tags this) ->
            fun (x2650 : float) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2649)
                "minimumFractionDigits" (Ojs.float_to_js x2650)
        let (get_maximumFractionDigits : 'tags this -> float) =
          fun (x2652 : 'tags this) ->
            Ojs.float_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2652)
                 "maximumFractionDigits")
        let (set_maximumFractionDigits : 'tags this -> float -> unit) =
          fun (x2654 : 'tags this) ->
            fun (x2655 : float) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2654)
                "maximumFractionDigits" (Ojs.float_to_js x2655)
        let (get_minimumSignificantDigits : 'tags this -> float option) =
          fun (x2657 : 'tags this) ->
            Ojs.option_of_js Ojs.float_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2657)
                 "minimumSignificantDigits")
        let (set_minimumSignificantDigits : 'tags this -> float -> unit) =
          fun (x2660 : 'tags this) ->
            fun (x2661 : float) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2660)
                "minimumSignificantDigits" (Ojs.float_to_js x2661)
        let (get_maximumSignificantDigits : 'tags this -> float option) =
          fun (x2663 : 'tags this) ->
            Ojs.option_of_js Ojs.float_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2663)
                 "maximumSignificantDigits")
        let (set_maximumSignificantDigits : 'tags this -> float -> unit) =
          fun (x2666 : 'tags this) ->
            fun (x2667 : float) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2666)
                "maximumSignificantDigits" (Ojs.float_to_js x2667)
        let (create :
          locale:string ->
            pluralCategories:LDMLPluralRule.t list ->
              type_:PluralRuleType.t ->
                minimumIntegerDigits:float ->
                  minimumFractionDigits:float ->
                    maximumFractionDigits:float ->
                      ?minimumSignificantDigits:float ->
                        ?maximumSignificantDigits:float -> unit -> t)
          =
          fun ~locale:(x2669 : string) ->
            fun ~pluralCategories:(x2670 : LDMLPluralRule.t list) ->
              fun ~type_:(x2671 : PluralRuleType.t) ->
                fun ~minimumIntegerDigits:(x2672 : float) ->
                  fun ~minimumFractionDigits:(x2673 : float) ->
                    fun ~maximumFractionDigits:(x2674 : float) ->
                      fun ?minimumSignificantDigits:(x2675 : float option) ->
                        fun ?maximumSignificantDigits:(x2676 : float option)
                          ->
                          fun () ->
                            let x2677 = Ojs.empty_obj () in
                            Ojs.set_prop_ascii x2677 "locale"
                              (Ojs.string_to_js x2669);
                            Ojs.set_prop_ascii x2677 "pluralCategories"
                              (Ojs.list_to_js LDMLPluralRule.t_to_js x2670);
                            Ojs.set_prop_ascii x2677 "type"
                              (PluralRuleType.t_to_js x2671);
                            Ojs.set_prop_ascii x2677 "minimumIntegerDigits"
                              (Ojs.float_to_js x2672);
                            Ojs.set_prop_ascii x2677 "minimumFractionDigits"
                              (Ojs.float_to_js x2673);
                            Ojs.set_prop_ascii x2677 "maximumFractionDigits"
                              (Ojs.float_to_js x2674);
                            (match x2675 with
                             | Some x2679 ->
                                 Ojs.set_prop_ascii x2677
                                   "minimumSignificantDigits"
                                   (Ojs.float_to_js x2679)
                             | None -> ());
                            (match x2676 with
                             | Some x2678 ->
                                 Ojs.set_prop_ascii x2677
                                   "maximumSignificantDigits"
                                   (Ojs.float_to_js x2678)
                             | None -> ());
                            t_of_js x2677
        let cast_from = Obj.magic
      end
    module PluralRulesOptions =
      struct
        type t = [ `Intl_PluralRulesOptions ] intf
        let rec t_of_js : Ojs.t -> t = Obj.magic
        and t_to_js : t -> Ojs.t = Obj.magic
        type tags = [ `Intl_PluralRulesOptions ]
        type 'tags this =
          'tags intf constraint 'tags = [> `Intl_PluralRulesOptions ]
        let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
          =
          fun (type __tags) ->
            fun (__tags_of_js : Ojs.t -> __tags) ->
              fun (x2683 : Ojs.t) -> intf_of_js __tags_of_js x2683
        and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
          fun (type __tags) ->
            fun (__tags_to_js : __tags -> Ojs.t) ->
              fun (x2681 : __tags intf) -> intf_to_js __tags_to_js x2681
        let (get_localeMatcher :
          'tags this -> [ `L_s26_best_fit  | `L_s81_lookup ] option) =
          fun (x2685 : 'tags this) ->
            Ojs.option_of_js
              (fun (x2687 : Ojs.t) ->
                 let x2688 = x2687 in
                 match Ojs.string_of_js x2688 with
                 | "best fit" -> `L_s26_best_fit
                 | "lookup" -> `L_s81_lookup
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2685)
                 "localeMatcher")
        let (set_localeMatcher :
          'tags this ->
            [ `Undefined of undefined  | `U1 of [ `L_s81_lookup ] 
            | `U2 of [ `L_s26_best_fit ] ] -> unit)
          =
          fun (x2689 : 'tags this) ->
            fun
              (x2690 :
                [ `Undefined of undefined  | `U1 of [ `L_s81_lookup ] 
                | `U2 of [ `L_s26_best_fit ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2689) "localeMatcher"
                (match x2690 with
                 | `Undefined x2691 -> undefined_to_js x2691
                 | `U1 x2692 ->
                     (match x2692 with
                      | `L_s81_lookup -> Ojs.string_to_js "lookup")
                 | `U2 x2693 ->
                     (match x2693 with
                      | `L_s26_best_fit -> Ojs.string_to_js "best fit"))
        let (get_type : 'tags this -> PluralRuleType.t option) =
          fun (x2695 : 'tags this) ->
            Ojs.option_of_js PluralRuleType.t_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2695) "type")
        let (set_type :
          'tags this ->
            [ `Undefined of undefined  | `U1 of PluralRuleType.t ] -> unit)
          =
          fun (x2698 : 'tags this) ->
            fun
              (x2699 :
                [ `Undefined of undefined  | `U1 of PluralRuleType.t ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2698) "type"
                (match x2699 with
                 | `Undefined x2700 -> undefined_to_js x2700
                 | `U1 x2701 -> PluralRuleType.t_to_js x2701)
        let (get_minimumIntegerDigits : 'tags this -> float option) =
          fun (x2703 : 'tags this) ->
            Ojs.option_of_js Ojs.float_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2703)
                 "minimumIntegerDigits")
        let (set_minimumIntegerDigits :
          'tags this -> [ `Undefined of undefined  | `U1 of float ] -> unit)
          =
          fun (x2706 : 'tags this) ->
            fun (x2707 : [ `Undefined of undefined  | `U1 of float ]) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2706)
                "minimumIntegerDigits"
                (match x2707 with
                 | `Undefined x2708 -> undefined_to_js x2708
                 | `U1 x2709 -> Ojs.float_to_js x2709)
        let (get_minimumFractionDigits : 'tags this -> float option) =
          fun (x2711 : 'tags this) ->
            Ojs.option_of_js Ojs.float_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2711)
                 "minimumFractionDigits")
        let (set_minimumFractionDigits :
          'tags this -> [ `Undefined of undefined  | `U1 of float ] -> unit)
          =
          fun (x2714 : 'tags this) ->
            fun (x2715 : [ `Undefined of undefined  | `U1 of float ]) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2714)
                "minimumFractionDigits"
                (match x2715 with
                 | `Undefined x2716 -> undefined_to_js x2716
                 | `U1 x2717 -> Ojs.float_to_js x2717)
        let (get_maximumFractionDigits : 'tags this -> float option) =
          fun (x2719 : 'tags this) ->
            Ojs.option_of_js Ojs.float_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2719)
                 "maximumFractionDigits")
        let (set_maximumFractionDigits :
          'tags this -> [ `Undefined of undefined  | `U1 of float ] -> unit)
          =
          fun (x2722 : 'tags this) ->
            fun (x2723 : [ `Undefined of undefined  | `U1 of float ]) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2722)
                "maximumFractionDigits"
                (match x2723 with
                 | `Undefined x2724 -> undefined_to_js x2724
                 | `U1 x2725 -> Ojs.float_to_js x2725)
        let (get_minimumSignificantDigits : 'tags this -> float option) =
          fun (x2727 : 'tags this) ->
            Ojs.option_of_js Ojs.float_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2727)
                 "minimumSignificantDigits")
        let (set_minimumSignificantDigits :
          'tags this -> [ `Undefined of undefined  | `U1 of float ] -> unit)
          =
          fun (x2730 : 'tags this) ->
            fun (x2731 : [ `Undefined of undefined  | `U1 of float ]) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2730)
                "minimumSignificantDigits"
                (match x2731 with
                 | `Undefined x2732 -> undefined_to_js x2732
                 | `U1 x2733 -> Ojs.float_to_js x2733)
        let (get_maximumSignificantDigits : 'tags this -> float option) =
          fun (x2735 : 'tags this) ->
            Ojs.option_of_js Ojs.float_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2735)
                 "maximumSignificantDigits")
        let (set_maximumSignificantDigits :
          'tags this -> [ `Undefined of undefined  | `U1 of float ] -> unit)
          =
          fun (x2738 : 'tags this) ->
            fun (x2739 : [ `Undefined of undefined  | `U1 of float ]) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2738)
                "maximumSignificantDigits"
                (match x2739 with
                 | `Undefined x2740 -> undefined_to_js x2740
                 | `U1 x2741 -> Ojs.float_to_js x2741)
        let (create :
          ?localeMatcher:[ `L_s26_best_fit  | `L_s81_lookup ] ->
            ?type_:PluralRuleType.t ->
              ?minimumIntegerDigits:float ->
                ?minimumFractionDigits:float ->
                  ?maximumFractionDigits:float ->
                    ?minimumSignificantDigits:float ->
                      ?maximumSignificantDigits:float -> unit -> t)
          =
          fun
            ?localeMatcher:(x2743 :
                             [ `L_s26_best_fit  | `L_s81_lookup ] option)
            ->
            fun ?type_:(x2744 : PluralRuleType.t option) ->
              fun ?minimumIntegerDigits:(x2745 : float option) ->
                fun ?minimumFractionDigits:(x2746 : float option) ->
                  fun ?maximumFractionDigits:(x2747 : float option) ->
                    fun ?minimumSignificantDigits:(x2748 : float option) ->
                      fun ?maximumSignificantDigits:(x2749 : float option) ->
                        fun () ->
                          let x2750 = Ojs.empty_obj () in
                          (match x2743 with
                           | Some x2757 ->
                               Ojs.set_prop_ascii x2750 "localeMatcher"
                                 (match x2757 with
                                  | `L_s26_best_fit ->
                                      Ojs.string_to_js "best fit"
                                  | `L_s81_lookup ->
                                      Ojs.string_to_js "lookup")
                           | None -> ());
                          (match x2744 with
                           | Some x2756 ->
                               Ojs.set_prop_ascii x2750 "type"
                                 (PluralRuleType.t_to_js x2756)
                           | None -> ());
                          (match x2745 with
                           | Some x2755 ->
                               Ojs.set_prop_ascii x2750
                                 "minimumIntegerDigits"
                                 (Ojs.float_to_js x2755)
                           | None -> ());
                          (match x2746 with
                           | Some x2754 ->
                               Ojs.set_prop_ascii x2750
                                 "minimumFractionDigits"
                                 (Ojs.float_to_js x2754)
                           | None -> ());
                          (match x2747 with
                           | Some x2753 ->
                               Ojs.set_prop_ascii x2750
                                 "maximumFractionDigits"
                                 (Ojs.float_to_js x2753)
                           | None -> ());
                          (match x2748 with
                           | Some x2752 ->
                               Ojs.set_prop_ascii x2750
                                 "minimumSignificantDigits"
                                 (Ojs.float_to_js x2752)
                           | None -> ());
                          (match x2749 with
                           | Some x2751 ->
                               Ojs.set_prop_ascii x2750
                                 "maximumSignificantDigits"
                                 (Ojs.float_to_js x2751)
                           | None -> ());
                          t_of_js x2750
        let cast_from = Obj.magic
      end
    module PluralRules =
      struct
        module AnonymousInterface5 =
          struct
            type t = Ojs.t
            let rec t_of_js : Ojs.t -> t = fun (x2759 : Ojs.t) -> x2759
            and t_to_js : t -> Ojs.t = fun (x2758 : Ojs.t) -> x2758
            let (get_localeMatcher :
              t -> [ `L_s26_best_fit  | `L_s81_lookup ] option) =
              fun (x2760 : t) ->
                Ojs.option_of_js
                  (fun (x2761 : Ojs.t) ->
                     let x2762 = x2761 in
                     match Ojs.string_of_js x2762 with
                     | "best fit" -> `L_s26_best_fit
                     | "lookup" -> `L_s81_lookup
                     | _ -> assert false)
                  (Ojs.get_prop_ascii (t_to_js x2760) "localeMatcher")
            let (set_localeMatcher :
              t ->
                [ `U1 of [ `L_s81_lookup ]  | `U2 of [ `L_s26_best_fit ] ] ->
                  unit)
              =
              fun (x2763 : t) ->
                fun
                  (x2764 :
                    [ `U1 of [ `L_s81_lookup ] 
                    | `U2 of [ `L_s26_best_fit ] ])
                  ->
                  Ojs.set_prop_ascii (t_to_js x2763) "localeMatcher"
                    (match x2764 with
                     | `U1 x2765 ->
                         (match x2765 with
                          | `L_s81_lookup -> Ojs.string_to_js "lookup")
                     | `U2 x2766 ->
                         (match x2766 with
                          | `L_s26_best_fit -> Ojs.string_to_js "best fit"))
            let (create :
              ?localeMatcher:[ `L_s26_best_fit  | `L_s81_lookup ] ->
                unit -> t)
              =
              fun
                ?localeMatcher:(x2767 :
                                 [ `L_s26_best_fit  | `L_s81_lookup ] option)
                ->
                fun () ->
                  let x2768 = Ojs.empty_obj () in
                  (match x2767 with
                   | Some x2769 ->
                       Ojs.set_prop_ascii x2768 "localeMatcher"
                         (match x2769 with
                          | `L_s26_best_fit -> Ojs.string_to_js "best fit"
                          | `L_s81_lookup -> Ojs.string_to_js "lookup")
                   | None -> ());
                  t_of_js x2768
          end
        type t = [ `Intl_PluralRules ] intf
        let rec t_of_js : Ojs.t -> t = Obj.magic
        and t_to_js : t -> Ojs.t = Obj.magic
        type tags = [ `Intl_PluralRules ]
        type 'tags this =
          'tags intf constraint 'tags = [> `Intl_PluralRules ]
        let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
          =
          fun (type __tags) ->
            fun (__tags_of_js : Ojs.t -> __tags) ->
              fun (x2772 : Ojs.t) -> intf_of_js __tags_of_js x2772
        and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
          fun (type __tags) ->
            fun (__tags_to_js : __tags -> Ojs.t) ->
              fun (x2770 : __tags intf) -> intf_to_js __tags_to_js x2770
        let (resolvedOptions : 'tags this -> ResolvedPluralRulesOptions.t) =
          fun (x2774 : 'tags this) ->
            ResolvedPluralRulesOptions.t_of_js
              (Ojs.call (this_to_js Obj.magic x2774) "resolvedOptions" [||])
        let (select : 'tags this -> n:float -> LDMLPluralRule.t) =
          fun (x2777 : 'tags this) ->
            fun ~n:(x2776 : float) ->
              LDMLPluralRule.t_of_js
                (Ojs.call (this_to_js Obj.magic x2777) "select"
                   [|(Ojs.float_to_js x2776)|])
        let (create :
          ?locales:LocalesArgument.t ->
            ?options:PluralRulesOptions.t -> unit -> t)
          =
          fun ?locales:(x2779 : LocalesArgument.t option) ->
            fun ?options:(x2780 : PluralRulesOptions.t option) ->
              fun () ->
                t_of_js
                  (Ojs.new_obj_arr
                     (Ojs.get_prop_ascii
                        (Ojs.get_prop_ascii Ojs.global "Intl") "PluralRules")
                     (let x2781 =
                        Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                          [||] in
                      (match x2779 with
                       | Some x2783 ->
                           ignore
                             (Ojs.call x2781 "push"
                                [|(LocalesArgument.t_to_js x2783)|])
                       | None -> ());
                      (match x2780 with
                       | Some x2782 ->
                           ignore
                             (Ojs.call x2781 "push"
                                [|(PluralRulesOptions.t_to_js x2782)|])
                       | None -> ());
                      x2781))
        let (invoke :
          ?locales:LocalesArgument.t ->
            ?options:PluralRulesOptions.t -> unit -> t)
          =
          fun ?locales:(x2784 : LocalesArgument.t option) ->
            fun ?options:(x2785 : PluralRulesOptions.t option) ->
              fun () ->
                t_of_js
                  (Ojs.call
                     (Ojs.get_prop_ascii
                        (Ojs.get_prop_ascii Ojs.global "Intl") "PluralRules")
                     "apply"
                     [|Ojs.null;((let x2786 =
                                    Ojs.new_obj
                                      (Ojs.get_prop_ascii Ojs.global "Array")
                                      [||] in
                                  (match x2784 with
                                   | Some x2788 ->
                                       ignore
                                         (Ojs.call x2786 "push"
                                            [|(LocalesArgument.t_to_js x2788)|])
                                   | None -> ());
                                  (match x2785 with
                                   | Some x2787 ->
                                       ignore
                                         (Ojs.call x2786 "push"
                                            [|(PluralRulesOptions.t_to_js
                                                 x2787)|])
                                   | None -> ());
                                  x2786))|])
        let (supportedLocalesOf :
          locales:LocalesArgument.t ->
            ?options:AnonymousInterface5.t -> unit -> string list)
          =
          fun ~locales:(x2789 : LocalesArgument.t) ->
            fun ?options:(x2790 : AnonymousInterface5.t option) ->
              fun () ->
                Ojs.list_of_js Ojs.string_of_js
                  (let x2793 =
                     Ojs.get_prop_ascii
                       (Ojs.get_prop_ascii Ojs.global "Intl") "PluralRules" in
                   Ojs.call (Ojs.get_prop_ascii x2793 "supportedLocalesOf")
                     "apply"
                     [|x2793;((let x2791 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x2791 "push"
                                    [|(LocalesArgument.t_to_js x2789)|]);
                               (match x2790 with
                                | Some x2792 ->
                                    ignore
                                      (Ojs.call x2791 "push"
                                         [|(AnonymousInterface5.t_to_js x2792)|])
                                | None -> ());
                               x2791))|])
        let (create' :
          ?locales:[ `U1 of string  | `U2 of string list ] ->
            ?options:PluralRulesOptions.t -> unit -> t)
          =
          fun
            ?locales:(x2795 : [ `U1 of string  | `U2 of string list ] option)
            ->
            fun ?options:(x2796 : PluralRulesOptions.t option) ->
              fun () ->
                t_of_js
                  (Ojs.new_obj_arr
                     (Ojs.get_prop_ascii
                        (Ojs.get_prop_ascii Ojs.global "Intl") "PluralRules")
                     (let x2797 =
                        Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                          [||] in
                      (match x2795 with
                       | Some x2799 ->
                           ignore
                             (Ojs.call x2797 "push"
                                [|((match x2799 with
                                    | `U1 x2800 -> Ojs.string_to_js x2800
                                    | `U2 x2801 ->
                                        Ojs.list_to_js Ojs.string_to_js x2801))|])
                       | None -> ());
                      (match x2796 with
                       | Some x2798 ->
                           ignore
                             (Ojs.call x2797 "push"
                                [|(PluralRulesOptions.t_to_js x2798)|])
                       | None -> ());
                      x2797))
        let (invoke' :
          ?locales:[ `U1 of string  | `U2 of string list ] ->
            ?options:PluralRulesOptions.t -> unit -> t)
          =
          fun
            ?locales:(x2803 : [ `U1 of string  | `U2 of string list ] option)
            ->
            fun ?options:(x2804 : PluralRulesOptions.t option) ->
              fun () ->
                t_of_js
                  (Ojs.call
                     (Ojs.get_prop_ascii
                        (Ojs.get_prop_ascii Ojs.global "Intl") "PluralRules")
                     "apply"
                     [|Ojs.null;((let x2805 =
                                    Ojs.new_obj
                                      (Ojs.get_prop_ascii Ojs.global "Array")
                                      [||] in
                                  (match x2803 with
                                   | Some x2807 ->
                                       ignore
                                         (Ojs.call x2805 "push"
                                            [|((match x2807 with
                                                | `U1 x2808 ->
                                                    Ojs.string_to_js x2808
                                                | `U2 x2809 ->
                                                    Ojs.list_to_js
                                                      Ojs.string_to_js x2809))|])
                                   | None -> ());
                                  (match x2804 with
                                   | Some x2806 ->
                                       ignore
                                         (Ojs.call x2805 "push"
                                            [|(PluralRulesOptions.t_to_js
                                                 x2806)|])
                                   | None -> ());
                                  x2805))|])
        let (supportedLocalesOf' :
          locales:[ `U1 of string  | `U2 of string list ] ->
            ?options:AnonymousInterface5.t -> unit -> string list)
          =
          fun ~locales:(x2811 : [ `U1 of string  | `U2 of string list ]) ->
            fun ?options:(x2812 : AnonymousInterface5.t option) ->
              fun () ->
                Ojs.list_of_js Ojs.string_of_js
                  (let x2818 =
                     Ojs.get_prop_ascii
                       (Ojs.get_prop_ascii Ojs.global "Intl") "PluralRules" in
                   Ojs.call (Ojs.get_prop_ascii x2818 "supportedLocalesOf")
                     "apply"
                     [|x2818;((let x2813 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x2813 "push"
                                    [|((match x2811 with
                                        | `U1 x2815 -> Ojs.string_to_js x2815
                                        | `U2 x2816 ->
                                            Ojs.list_to_js Ojs.string_to_js
                                              x2816))|]);
                               (match x2812 with
                                | Some x2814 ->
                                    ignore
                                      (Ojs.call x2813 "push"
                                         [|(AnonymousInterface5.t_to_js x2814)|])
                                | None -> ());
                               x2813))|])
        let cast_from = Obj.magic
      end
    module ResolvedNumberFormatOptions =
      struct
        type t = [ `Intl_ResolvedNumberFormatOptions ] intf
        let rec t_of_js : Ojs.t -> t = Obj.magic
        and t_to_js : t -> Ojs.t = Obj.magic
        type tags = [ `Intl_ResolvedNumberFormatOptions ]
        type 'tags this =
          'tags intf constraint 'tags =
                      [> `Intl_ResolvedNumberFormatOptions ]
        let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
          =
          fun (type __tags) ->
            fun (__tags_of_js : Ojs.t -> __tags) ->
              fun (x2822 : Ojs.t) -> intf_of_js __tags_of_js x2822
        and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
          fun (type __tags) ->
            fun (__tags_to_js : __tags -> Ojs.t) ->
              fun (x2820 : __tags intf) -> intf_to_js __tags_to_js x2820
        let (get_compactDisplay :
          'tags this -> [ `L_s122_short  | `L_s78_long ] option) =
          fun (x2824 : 'tags this) ->
            Ojs.option_of_js
              (fun (x2826 : Ojs.t) ->
                 let x2827 = x2826 in
                 match Ojs.string_of_js x2827 with
                 | "short" -> `L_s122_short
                 | "long" -> `L_s78_long
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2824)
                 "compactDisplay")
        let (set_compactDisplay :
          'tags this ->
            [ `U1 of [ `L_s122_short ]  | `U2 of [ `L_s78_long ] ] -> unit)
          =
          fun (x2828 : 'tags this) ->
            fun
              (x2829 :
                [ `U1 of [ `L_s122_short ]  | `U2 of [ `L_s78_long ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2828)
                "compactDisplay"
                (match x2829 with
                 | `U1 x2830 ->
                     (match x2830 with
                      | `L_s122_short -> Ojs.string_to_js "short")
                 | `U2 x2831 ->
                     (match x2831 with
                      | `L_s78_long -> Ojs.string_to_js "long"))
        let (get_notation :
          'tags this ->
            [ `L_s114_scientific  | `L_s126_standard  | `L_s33_compact 
            | `L_s51_engineering ] option)
          =
          fun (x2833 : 'tags this) ->
            Ojs.option_of_js
              (fun (x2835 : Ojs.t) ->
                 let x2836 = x2835 in
                 match Ojs.string_of_js x2836 with
                 | "scientific" -> `L_s114_scientific
                 | "standard" -> `L_s126_standard
                 | "compact" -> `L_s33_compact
                 | "engineering" -> `L_s51_engineering
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2833) "notation")
        let (set_notation :
          'tags this ->
            [ `U1 of [ `L_s126_standard ]  | `U2 of [ `L_s114_scientific ] 
            | `U3 of [ `L_s51_engineering ]  | `U4 of [ `L_s33_compact ] ] ->
              unit)
          =
          fun (x2837 : 'tags this) ->
            fun
              (x2838 :
                [ `U1 of [ `L_s126_standard ] 
                | `U2 of [ `L_s114_scientific ] 
                | `U3 of [ `L_s51_engineering ] 
                | `U4 of [ `L_s33_compact ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2837) "notation"
                (match x2838 with
                 | `U1 x2839 ->
                     (match x2839 with
                      | `L_s126_standard -> Ojs.string_to_js "standard")
                 | `U2 x2840 ->
                     (match x2840 with
                      | `L_s114_scientific -> Ojs.string_to_js "scientific")
                 | `U3 x2841 ->
                     (match x2841 with
                      | `L_s51_engineering -> Ojs.string_to_js "engineering")
                 | `U4 x2842 ->
                     (match x2842 with
                      | `L_s33_compact -> Ojs.string_to_js "compact"))
        let (get_signDisplay :
          'tags this ->
            [ `L_s22_always  | `L_s23_auto  | `L_s54_exceptZero 
            | `L_s93_never ] option)
          =
          fun (x2844 : 'tags this) ->
            Ojs.option_of_js
              (fun (x2846 : Ojs.t) ->
                 let x2847 = x2846 in
                 match Ojs.string_of_js x2847 with
                 | "always" -> `L_s22_always
                 | "auto" -> `L_s23_auto
                 | "exceptZero" -> `L_s54_exceptZero
                 | "never" -> `L_s93_never
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2844) "signDisplay")
        let (set_signDisplay :
          'tags this ->
            [ `U1 of [ `L_s23_auto ]  | `U2 of [ `L_s93_never ] 
            | `U3 of [ `L_s22_always ]  | `U4 of [ `L_s54_exceptZero ] ] ->
              unit)
          =
          fun (x2848 : 'tags this) ->
            fun
              (x2849 :
                [ `U1 of [ `L_s23_auto ]  | `U2 of [ `L_s93_never ] 
                | `U3 of [ `L_s22_always ]  | `U4 of [ `L_s54_exceptZero ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2848) "signDisplay"
                (match x2849 with
                 | `U1 x2850 ->
                     (match x2850 with
                      | `L_s23_auto -> Ojs.string_to_js "auto")
                 | `U2 x2851 ->
                     (match x2851 with
                      | `L_s93_never -> Ojs.string_to_js "never")
                 | `U3 x2852 ->
                     (match x2852 with
                      | `L_s22_always -> Ojs.string_to_js "always")
                 | `U4 x2853 ->
                     (match x2853 with
                      | `L_s54_exceptZero -> Ojs.string_to_js "exceptZero"))
        let (get_unit : 'tags this -> string option) =
          fun (x2855 : 'tags this) ->
            Ojs.option_of_js Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2855) "unit")
        let (set_unit : 'tags this -> string -> unit) =
          fun (x2858 : 'tags this) ->
            fun (x2859 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2858) "unit"
                (Ojs.string_to_js x2859)
        let (get_unitDisplay :
          'tags this ->
            [ `L_s122_short  | `L_s78_long  | `L_s92_narrow ] option)
          =
          fun (x2861 : 'tags this) ->
            Ojs.option_of_js
              (fun (x2863 : Ojs.t) ->
                 let x2864 = x2863 in
                 match Ojs.string_of_js x2864 with
                 | "short" -> `L_s122_short
                 | "long" -> `L_s78_long
                 | "narrow" -> `L_s92_narrow
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2861) "unitDisplay")
        let (set_unitDisplay :
          'tags this ->
            [ `U1 of [ `L_s122_short ]  | `U2 of [ `L_s78_long ] 
            | `U3 of [ `L_s92_narrow ] ] -> unit)
          =
          fun (x2865 : 'tags this) ->
            fun
              (x2866 :
                [ `U1 of [ `L_s122_short ]  | `U2 of [ `L_s78_long ] 
                | `U3 of [ `L_s92_narrow ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2865) "unitDisplay"
                (match x2866 with
                 | `U1 x2867 ->
                     (match x2867 with
                      | `L_s122_short -> Ojs.string_to_js "short")
                 | `U2 x2868 ->
                     (match x2868 with
                      | `L_s78_long -> Ojs.string_to_js "long")
                 | `U3 x2869 ->
                     (match x2869 with
                      | `L_s92_narrow -> Ojs.string_to_js "narrow"))
        let (get_currencyDisplay : 'tags this -> string option) =
          fun (x2871 : 'tags this) ->
            Ojs.option_of_js Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2871)
                 "currencyDisplay")
        let (set_currencyDisplay : 'tags this -> string -> unit) =
          fun (x2874 : 'tags this) ->
            fun (x2875 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2874)
                "currencyDisplay" (Ojs.string_to_js x2875)
        let (get_currencySign : 'tags this -> string option) =
          fun (x2877 : 'tags this) ->
            Ojs.option_of_js Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2877) "currencySign")
        let (set_currencySign : 'tags this -> string -> unit) =
          fun (x2880 : 'tags this) ->
            fun (x2881 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2880) "currencySign"
                (Ojs.string_to_js x2881)
        let (get_locale : 'tags this -> string) =
          fun (x2883 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2883) "locale")
        let (set_locale : 'tags this -> string -> unit) =
          fun (x2885 : 'tags this) ->
            fun (x2886 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2885) "locale"
                (Ojs.string_to_js x2886)
        let (get_numberingSystem : 'tags this -> string) =
          fun (x2888 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2888)
                 "numberingSystem")
        let (set_numberingSystem : 'tags this -> string -> unit) =
          fun (x2890 : 'tags this) ->
            fun (x2891 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2890)
                "numberingSystem" (Ojs.string_to_js x2891)
        let (get_style : 'tags this -> string) =
          fun (x2893 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2893) "style")
        let (set_style : 'tags this -> string -> unit) =
          fun (x2895 : 'tags this) ->
            fun (x2896 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2895) "style"
                (Ojs.string_to_js x2896)
        let (get_currency : 'tags this -> string option) =
          fun (x2898 : 'tags this) ->
            Ojs.option_of_js Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2898) "currency")
        let (set_currency : 'tags this -> string -> unit) =
          fun (x2901 : 'tags this) ->
            fun (x2902 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2901) "currency"
                (Ojs.string_to_js x2902)
        let (get_minimumIntegerDigits : 'tags this -> float) =
          fun (x2904 : 'tags this) ->
            Ojs.float_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2904)
                 "minimumIntegerDigits")
        let (set_minimumIntegerDigits : 'tags this -> float -> unit) =
          fun (x2906 : 'tags this) ->
            fun (x2907 : float) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2906)
                "minimumIntegerDigits" (Ojs.float_to_js x2907)
        let (get_minimumFractionDigits : 'tags this -> float) =
          fun (x2909 : 'tags this) ->
            Ojs.float_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2909)
                 "minimumFractionDigits")
        let (set_minimumFractionDigits : 'tags this -> float -> unit) =
          fun (x2911 : 'tags this) ->
            fun (x2912 : float) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2911)
                "minimumFractionDigits" (Ojs.float_to_js x2912)
        let (get_maximumFractionDigits : 'tags this -> float) =
          fun (x2914 : 'tags this) ->
            Ojs.float_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2914)
                 "maximumFractionDigits")
        let (set_maximumFractionDigits : 'tags this -> float -> unit) =
          fun (x2916 : 'tags this) ->
            fun (x2917 : float) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2916)
                "maximumFractionDigits" (Ojs.float_to_js x2917)
        let (get_minimumSignificantDigits : 'tags this -> float option) =
          fun (x2919 : 'tags this) ->
            Ojs.option_of_js Ojs.float_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2919)
                 "minimumSignificantDigits")
        let (set_minimumSignificantDigits : 'tags this -> float -> unit) =
          fun (x2922 : 'tags this) ->
            fun (x2923 : float) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2922)
                "minimumSignificantDigits" (Ojs.float_to_js x2923)
        let (get_maximumSignificantDigits : 'tags this -> float option) =
          fun (x2925 : 'tags this) ->
            Ojs.option_of_js Ojs.float_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2925)
                 "maximumSignificantDigits")
        let (set_maximumSignificantDigits : 'tags this -> float -> unit) =
          fun (x2928 : 'tags this) ->
            fun (x2929 : float) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2928)
                "maximumSignificantDigits" (Ojs.float_to_js x2929)
        let (get_useGrouping : 'tags this -> bool) =
          fun (x2931 : 'tags this) ->
            Ojs.bool_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2931) "useGrouping")
        let (set_useGrouping : 'tags this -> bool -> unit) =
          fun (x2933 : 'tags this) ->
            fun (x2934 : bool) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2933) "useGrouping"
                (Ojs.bool_to_js x2934)
        let (create :
          ?compactDisplay:[ `L_s122_short  | `L_s78_long ] ->
            ?notation:[ `L_s114_scientific  | `L_s126_standard 
                      | `L_s33_compact  | `L_s51_engineering ]
              ->
              ?signDisplay:[ `L_s22_always  | `L_s23_auto 
                           | `L_s54_exceptZero  | `L_s93_never ]
                ->
                ?unit:string ->
                  ?unitDisplay:[ `L_s122_short  | `L_s78_long 
                               | `L_s92_narrow ]
                    ->
                    ?currencyDisplay:string ->
                      ?currencySign:string ->
                        locale:string ->
                          numberingSystem:string ->
                            style:string ->
                              ?currency:string ->
                                minimumIntegerDigits:float ->
                                  minimumFractionDigits:float ->
                                    maximumFractionDigits:float ->
                                      ?minimumSignificantDigits:float ->
                                        ?maximumSignificantDigits:float ->
                                          useGrouping:bool -> unit -> t)
          =
          fun
            ?compactDisplay:(x2936 : [ `L_s122_short  | `L_s78_long ] option)
            ->
            fun
              ?notation:(x2937 :
                          [ `L_s114_scientific  | `L_s126_standard 
                          | `L_s33_compact  | `L_s51_engineering ] option)
              ->
              fun
                ?signDisplay:(x2938 :
                               [ `L_s22_always  | `L_s23_auto 
                               | `L_s54_exceptZero  | `L_s93_never ] option)
                ->
                fun ?unit:(x2939 : string option) ->
                  fun
                    ?unitDisplay:(x2940 :
                                   [ `L_s122_short  | `L_s78_long 
                                   | `L_s92_narrow ] option)
                    ->
                    fun ?currencyDisplay:(x2941 : string option) ->
                      fun ?currencySign:(x2942 : string option) ->
                        fun ~locale:(x2943 : string) ->
                          fun ~numberingSystem:(x2944 : string) ->
                            fun ~style:(x2945 : string) ->
                              fun ?currency:(x2946 : string option) ->
                                fun ~minimumIntegerDigits:(x2947 : float) ->
                                  fun ~minimumFractionDigits:(x2948 : float)
                                    ->
                                    fun
                                      ~maximumFractionDigits:(x2949 : float)
                                      ->
                                      fun
                                        ?minimumSignificantDigits:(x2950 :
                                                                    float
                                                                    option)
                                        ->
                                        fun
                                          ?maximumSignificantDigits:(x2951 :
                                                                    float
                                                                    option)
                                          ->
                                          fun ~useGrouping:(x2952 : bool) ->
                                            fun () ->
                                              let x2953 = Ojs.empty_obj () in
                                              (match x2936 with
                                               | Some x2963 ->
                                                   Ojs.set_prop_ascii x2953
                                                     "compactDisplay"
                                                     (match x2963 with
                                                      | `L_s122_short ->
                                                          Ojs.string_to_js
                                                            "short"
                                                      | `L_s78_long ->
                                                          Ojs.string_to_js
                                                            "long")
                                               | None -> ());
                                              (match x2937 with
                                               | Some x2962 ->
                                                   Ojs.set_prop_ascii x2953
                                                     "notation"
                                                     (match x2962 with
                                                      | `L_s114_scientific ->
                                                          Ojs.string_to_js
                                                            "scientific"
                                                      | `L_s126_standard ->
                                                          Ojs.string_to_js
                                                            "standard"
                                                      | `L_s33_compact ->
                                                          Ojs.string_to_js
                                                            "compact"
                                                      | `L_s51_engineering ->
                                                          Ojs.string_to_js
                                                            "engineering")
                                               | None -> ());
                                              (match x2938 with
                                               | Some x2961 ->
                                                   Ojs.set_prop_ascii x2953
                                                     "signDisplay"
                                                     (match x2961 with
                                                      | `L_s22_always ->
                                                          Ojs.string_to_js
                                                            "always"
                                                      | `L_s23_auto ->
                                                          Ojs.string_to_js
                                                            "auto"
                                                      | `L_s54_exceptZero ->
                                                          Ojs.string_to_js
                                                            "exceptZero"
                                                      | `L_s93_never ->
                                                          Ojs.string_to_js
                                                            "never")
                                               | None -> ());
                                              (match x2939 with
                                               | Some x2960 ->
                                                   Ojs.set_prop_ascii x2953
                                                     "unit"
                                                     (Ojs.string_to_js x2960)
                                               | None -> ());
                                              (match x2940 with
                                               | Some x2959 ->
                                                   Ojs.set_prop_ascii x2953
                                                     "unitDisplay"
                                                     (match x2959 with
                                                      | `L_s122_short ->
                                                          Ojs.string_to_js
                                                            "short"
                                                      | `L_s78_long ->
                                                          Ojs.string_to_js
                                                            "long"
                                                      | `L_s92_narrow ->
                                                          Ojs.string_to_js
                                                            "narrow")
                                               | None -> ());
                                              (match x2941 with
                                               | Some x2958 ->
                                                   Ojs.set_prop_ascii x2953
                                                     "currencyDisplay"
                                                     (Ojs.string_to_js x2958)
                                               | None -> ());
                                              (match x2942 with
                                               | Some x2957 ->
                                                   Ojs.set_prop_ascii x2953
                                                     "currencySign"
                                                     (Ojs.string_to_js x2957)
                                               | None -> ());
                                              Ojs.set_prop_ascii x2953
                                                "locale"
                                                (Ojs.string_to_js x2943);
                                              Ojs.set_prop_ascii x2953
                                                "numberingSystem"
                                                (Ojs.string_to_js x2944);
                                              Ojs.set_prop_ascii x2953
                                                "style"
                                                (Ojs.string_to_js x2945);
                                              (match x2946 with
                                               | Some x2956 ->
                                                   Ojs.set_prop_ascii x2953
                                                     "currency"
                                                     (Ojs.string_to_js x2956)
                                               | None -> ());
                                              Ojs.set_prop_ascii x2953
                                                "minimumIntegerDigits"
                                                (Ojs.float_to_js x2947);
                                              Ojs.set_prop_ascii x2953
                                                "minimumFractionDigits"
                                                (Ojs.float_to_js x2948);
                                              Ojs.set_prop_ascii x2953
                                                "maximumFractionDigits"
                                                (Ojs.float_to_js x2949);
                                              (match x2950 with
                                               | Some x2955 ->
                                                   Ojs.set_prop_ascii x2953
                                                     "minimumSignificantDigits"
                                                     (Ojs.float_to_js x2955)
                                               | None -> ());
                                              (match x2951 with
                                               | Some x2954 ->
                                                   Ojs.set_prop_ascii x2953
                                                     "maximumSignificantDigits"
                                                     (Ojs.float_to_js x2954)
                                               | None -> ());
                                              Ojs.set_prop_ascii x2953
                                                "useGrouping"
                                                (Ojs.bool_to_js x2952);
                                              t_of_js x2953
        let cast_from = Obj.magic
      end
    module NumberFormatPart =
      struct
        type t = [ `Intl_NumberFormatPart ] intf
        let rec t_of_js : Ojs.t -> t = Obj.magic
        and t_to_js : t -> Ojs.t = Obj.magic
        type tags = [ `Intl_NumberFormatPart ]
        type 'tags this =
          'tags intf constraint 'tags = [> `Intl_NumberFormatPart ]
        let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
          =
          fun (type __tags) ->
            fun (__tags_of_js : Ojs.t -> __tags) ->
              fun (x2966 : Ojs.t) -> intf_of_js __tags_of_js x2966
        and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
          fun (type __tags) ->
            fun (__tags_to_js : __tags -> Ojs.t) ->
              fun (x2964 : __tags intf) -> intf_to_js __tags_to_js x2964
        let (get_type : 'tags this -> NumberFormatPartTypes.t) =
          fun (x2968 : 'tags this) ->
            NumberFormatPartTypes.t_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2968) "type")
        let (set_type : 'tags this -> NumberFormatPartTypes.t -> unit) =
          fun (x2970 : 'tags this) ->
            fun (x2971 : NumberFormatPartTypes.t) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2970) "type"
                (NumberFormatPartTypes.t_to_js x2971)
        let (get_value : 'tags this -> string) =
          fun (x2973 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2973) "value")
        let (set_value : 'tags this -> string -> unit) =
          fun (x2975 : 'tags this) ->
            fun (x2976 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2975) "value"
                (Ojs.string_to_js x2976)
        let (create :
          type_:NumberFormatPartTypes.t -> value:string -> unit -> t) =
          fun ~type_:(x2978 : NumberFormatPartTypes.t) ->
            fun ~value:(x2979 : string) ->
              fun () ->
                let x2980 = Ojs.empty_obj () in
                Ojs.set_prop_ascii x2980 "type"
                  (NumberFormatPartTypes.t_to_js x2978);
                Ojs.set_prop_ascii x2980 "value" (Ojs.string_to_js x2979);
                t_of_js x2980
        let cast_from = Obj.magic
      end
    module NumberRangeFormatPart =
      struct
        type t =
          [ `Intl_NumberFormatPart  | `Intl_NumberRangeFormatPart ] intf
        let rec t_of_js : Ojs.t -> t = Obj.magic
        and t_to_js : t -> Ojs.t = Obj.magic
        type tags = [ `Intl_NumberFormatPart  | `Intl_NumberRangeFormatPart ]
        type 'tags this =
          'tags intf constraint 'tags = [> `Intl_NumberRangeFormatPart ]
        let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
          =
          fun (type __tags) ->
            fun (__tags_of_js : Ojs.t -> __tags) ->
              fun (x2983 : Ojs.t) -> intf_of_js __tags_of_js x2983
        and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
          fun (type __tags) ->
            fun (__tags_to_js : __tags -> Ojs.t) ->
              fun (x2981 : __tags intf) -> intf_to_js __tags_to_js x2981
        let (get_source :
          'tags this ->
            [ `L_s121_shared  | `L_s127_startRange  | `L_s50_endRange ])
          =
          fun (x2985 : 'tags this) ->
            let x2987 =
              Ojs.get_prop_ascii (this_to_js Obj.magic x2985) "source" in
            match Ojs.string_of_js x2987 with
            | "shared" -> `L_s121_shared
            | "startRange" -> `L_s127_startRange
            | "endRange" -> `L_s50_endRange
            | _ -> assert false
        let (set_source :
          'tags this ->
            [ `U1 of [ `L_s127_startRange ]  | `U2 of [ `L_s50_endRange ] 
            | `U3 of [ `L_s121_shared ] ] -> unit)
          =
          fun (x2988 : 'tags this) ->
            fun
              (x2989 :
                [ `U1 of [ `L_s127_startRange ] 
                | `U2 of [ `L_s50_endRange ]  | `U3 of [ `L_s121_shared ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2988) "source"
                (match x2989 with
                 | `U1 x2990 ->
                     (match x2990 with
                      | `L_s127_startRange -> Ojs.string_to_js "startRange")
                 | `U2 x2991 ->
                     (match x2991 with
                      | `L_s50_endRange -> Ojs.string_to_js "endRange")
                 | `U3 x2992 ->
                     (match x2992 with
                      | `L_s121_shared -> Ojs.string_to_js "shared"))
        let (create :
          source:[ `L_s121_shared  | `L_s127_startRange  | `L_s50_endRange ]
            -> unit -> t)
          =
          fun
            ~source:(x2994 :
                      [ `L_s121_shared  | `L_s127_startRange 
                      | `L_s50_endRange ])
            ->
            fun () ->
              let x2995 = Ojs.empty_obj () in
              Ojs.set_prop_ascii x2995 "source"
                (match x2994 with
                 | `L_s121_shared -> Ojs.string_to_js "shared"
                 | `L_s127_startRange -> Ojs.string_to_js "startRange"
                 | `L_s50_endRange -> Ojs.string_to_js "endRange");
              t_of_js x2995
        let cast_from = Obj.magic
      end
    module NumberFormatOptions =
      struct
        type t = [ `Intl_NumberFormatOptions ] intf
        let rec t_of_js : Ojs.t -> t = Obj.magic
        and t_to_js : t -> Ojs.t = Obj.magic
        type tags = [ `Intl_NumberFormatOptions ]
        type 'tags this =
          'tags intf constraint 'tags = [> `Intl_NumberFormatOptions ]
        let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
          =
          fun (type __tags) ->
            fun (__tags_of_js : Ojs.t -> __tags) ->
              fun (x2998 : Ojs.t) -> intf_of_js __tags_of_js x2998
        and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
          fun (type __tags) ->
            fun (__tags_to_js : __tags -> Ojs.t) ->
              fun (x2996 : __tags intf) -> intf_to_js __tags_to_js x2996
        let (get_compactDisplay :
          'tags this -> [ `L_s122_short  | `L_s78_long ] option) =
          fun (x3000 : 'tags this) ->
            Ojs.option_of_js
              (fun (x3002 : Ojs.t) ->
                 let x3003 = x3002 in
                 match Ojs.string_of_js x3003 with
                 | "short" -> `L_s122_short
                 | "long" -> `L_s78_long
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3000)
                 "compactDisplay")
        let (set_compactDisplay :
          'tags this ->
            [ `Undefined of undefined  | `U1 of [ `L_s122_short ] 
            | `U2 of [ `L_s78_long ] ] -> unit)
          =
          fun (x3004 : 'tags this) ->
            fun
              (x3005 :
                [ `Undefined of undefined  | `U1 of [ `L_s122_short ] 
                | `U2 of [ `L_s78_long ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3004)
                "compactDisplay"
                (match x3005 with
                 | `Undefined x3006 -> undefined_to_js x3006
                 | `U1 x3007 ->
                     (match x3007 with
                      | `L_s122_short -> Ojs.string_to_js "short")
                 | `U2 x3008 ->
                     (match x3008 with
                      | `L_s78_long -> Ojs.string_to_js "long"))
        let (get_notation :
          'tags this ->
            [ `L_s114_scientific  | `L_s126_standard  | `L_s33_compact 
            | `L_s51_engineering ] option)
          =
          fun (x3010 : 'tags this) ->
            Ojs.option_of_js
              (fun (x3012 : Ojs.t) ->
                 let x3013 = x3012 in
                 match Ojs.string_of_js x3013 with
                 | "scientific" -> `L_s114_scientific
                 | "standard" -> `L_s126_standard
                 | "compact" -> `L_s33_compact
                 | "engineering" -> `L_s51_engineering
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3010) "notation")
        let (set_notation :
          'tags this ->
            [ `Undefined of undefined  | `U1 of [ `L_s126_standard ] 
            | `U2 of [ `L_s114_scientific ]  | `U3 of [ `L_s51_engineering ] 
            | `U4 of [ `L_s33_compact ] ] -> unit)
          =
          fun (x3014 : 'tags this) ->
            fun
              (x3015 :
                [ `Undefined of undefined  | `U1 of [ `L_s126_standard ] 
                | `U2 of [ `L_s114_scientific ] 
                | `U3 of [ `L_s51_engineering ] 
                | `U4 of [ `L_s33_compact ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3014) "notation"
                (match x3015 with
                 | `Undefined x3016 -> undefined_to_js x3016
                 | `U1 x3017 ->
                     (match x3017 with
                      | `L_s126_standard -> Ojs.string_to_js "standard")
                 | `U2 x3018 ->
                     (match x3018 with
                      | `L_s114_scientific -> Ojs.string_to_js "scientific")
                 | `U3 x3019 ->
                     (match x3019 with
                      | `L_s51_engineering -> Ojs.string_to_js "engineering")
                 | `U4 x3020 ->
                     (match x3020 with
                      | `L_s33_compact -> Ojs.string_to_js "compact"))
        let (get_signDisplay :
          'tags this ->
            [ `L_s22_always  | `L_s23_auto  | `L_s54_exceptZero 
            | `L_s93_never ] option)
          =
          fun (x3022 : 'tags this) ->
            Ojs.option_of_js
              (fun (x3024 : Ojs.t) ->
                 let x3025 = x3024 in
                 match Ojs.string_of_js x3025 with
                 | "always" -> `L_s22_always
                 | "auto" -> `L_s23_auto
                 | "exceptZero" -> `L_s54_exceptZero
                 | "never" -> `L_s93_never
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3022) "signDisplay")
        let (set_signDisplay :
          'tags this ->
            [ `Undefined of undefined  | `U1 of [ `L_s23_auto ] 
            | `U2 of [ `L_s93_never ]  | `U3 of [ `L_s22_always ] 
            | `U4 of [ `L_s54_exceptZero ] ] -> unit)
          =
          fun (x3026 : 'tags this) ->
            fun
              (x3027 :
                [ `Undefined of undefined  | `U1 of [ `L_s23_auto ] 
                | `U2 of [ `L_s93_never ]  | `U3 of [ `L_s22_always ] 
                | `U4 of [ `L_s54_exceptZero ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3026) "signDisplay"
                (match x3027 with
                 | `Undefined x3028 -> undefined_to_js x3028
                 | `U1 x3029 ->
                     (match x3029 with
                      | `L_s23_auto -> Ojs.string_to_js "auto")
                 | `U2 x3030 ->
                     (match x3030 with
                      | `L_s93_never -> Ojs.string_to_js "never")
                 | `U3 x3031 ->
                     (match x3031 with
                      | `L_s22_always -> Ojs.string_to_js "always")
                 | `U4 x3032 ->
                     (match x3032 with
                      | `L_s54_exceptZero -> Ojs.string_to_js "exceptZero"))
        let (get_unit : 'tags this -> string option) =
          fun (x3034 : 'tags this) ->
            Ojs.option_of_js Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3034) "unit")
        let (set_unit :
          'tags this -> [ `Undefined of undefined  | `U1 of string ] -> unit)
          =
          fun (x3037 : 'tags this) ->
            fun (x3038 : [ `Undefined of undefined  | `U1 of string ]) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3037) "unit"
                (match x3038 with
                 | `Undefined x3039 -> undefined_to_js x3039
                 | `U1 x3040 -> Ojs.string_to_js x3040)
        let (get_unitDisplay :
          'tags this ->
            [ `L_s122_short  | `L_s78_long  | `L_s92_narrow ] option)
          =
          fun (x3042 : 'tags this) ->
            Ojs.option_of_js
              (fun (x3044 : Ojs.t) ->
                 let x3045 = x3044 in
                 match Ojs.string_of_js x3045 with
                 | "short" -> `L_s122_short
                 | "long" -> `L_s78_long
                 | "narrow" -> `L_s92_narrow
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3042) "unitDisplay")
        let (set_unitDisplay :
          'tags this ->
            [ `Undefined of undefined  | `U1 of [ `L_s122_short ] 
            | `U2 of [ `L_s78_long ]  | `U3 of [ `L_s92_narrow ] ] -> 
              unit)
          =
          fun (x3046 : 'tags this) ->
            fun
              (x3047 :
                [ `Undefined of undefined  | `U1 of [ `L_s122_short ] 
                | `U2 of [ `L_s78_long ]  | `U3 of [ `L_s92_narrow ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3046) "unitDisplay"
                (match x3047 with
                 | `Undefined x3048 -> undefined_to_js x3048
                 | `U1 x3049 ->
                     (match x3049 with
                      | `L_s122_short -> Ojs.string_to_js "short")
                 | `U2 x3050 ->
                     (match x3050 with
                      | `L_s78_long -> Ojs.string_to_js "long")
                 | `U3 x3051 ->
                     (match x3051 with
                      | `L_s92_narrow -> Ojs.string_to_js "narrow"))
        let (get_currencyDisplay : 'tags this -> string option) =
          fun (x3053 : 'tags this) ->
            Ojs.option_of_js Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3053)
                 "currencyDisplay")
        let (set_currencyDisplay :
          'tags this -> [ `Undefined of undefined  | `U1 of string ] -> unit)
          =
          fun (x3056 : 'tags this) ->
            fun (x3057 : [ `Undefined of undefined  | `U1 of string ]) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3056)
                "currencyDisplay"
                (match x3057 with
                 | `Undefined x3058 -> undefined_to_js x3058
                 | `U1 x3059 -> Ojs.string_to_js x3059)
        let (get_currencySign : 'tags this -> string option) =
          fun (x3061 : 'tags this) ->
            Ojs.option_of_js Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3061) "currencySign")
        let (set_currencySign :
          'tags this -> [ `Undefined of undefined  | `U1 of string ] -> unit)
          =
          fun (x3064 : 'tags this) ->
            fun (x3065 : [ `Undefined of undefined  | `U1 of string ]) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3064) "currencySign"
                (match x3065 with
                 | `Undefined x3066 -> undefined_to_js x3066
                 | `U1 x3067 -> Ojs.string_to_js x3067)
        let (get_localeMatcher : 'tags this -> string option) =
          fun (x3069 : 'tags this) ->
            Ojs.option_of_js Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3069)
                 "localeMatcher")
        let (set_localeMatcher :
          'tags this -> [ `Undefined of undefined  | `U1 of string ] -> unit)
          =
          fun (x3072 : 'tags this) ->
            fun (x3073 : [ `Undefined of undefined  | `U1 of string ]) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3072) "localeMatcher"
                (match x3073 with
                 | `Undefined x3074 -> undefined_to_js x3074
                 | `U1 x3075 -> Ojs.string_to_js x3075)
        let (get_style : 'tags this -> string option) =
          fun (x3077 : 'tags this) ->
            Ojs.option_of_js Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3077) "style")
        let (set_style :
          'tags this -> [ `Undefined of undefined  | `U1 of string ] -> unit)
          =
          fun (x3080 : 'tags this) ->
            fun (x3081 : [ `Undefined of undefined  | `U1 of string ]) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3080) "style"
                (match x3081 with
                 | `Undefined x3082 -> undefined_to_js x3082
                 | `U1 x3083 -> Ojs.string_to_js x3083)
        let (get_currency : 'tags this -> string option) =
          fun (x3085 : 'tags this) ->
            Ojs.option_of_js Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3085) "currency")
        let (set_currency :
          'tags this -> [ `Undefined of undefined  | `U1 of string ] -> unit)
          =
          fun (x3088 : 'tags this) ->
            fun (x3089 : [ `Undefined of undefined  | `U1 of string ]) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3088) "currency"
                (match x3089 with
                 | `Undefined x3090 -> undefined_to_js x3090
                 | `U1 x3091 -> Ojs.string_to_js x3091)
        let (get_currencySign' : 'tags this -> string option) =
          fun (x3093 : 'tags this) ->
            Ojs.option_of_js Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3093) "currencySign")
        let (set_currencySign' :
          'tags this -> [ `Undefined of undefined  | `U1 of string ] -> unit)
          =
          fun (x3096 : 'tags this) ->
            fun (x3097 : [ `Undefined of undefined  | `U1 of string ]) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3096) "currencySign"
                (match x3097 with
                 | `Undefined x3098 -> undefined_to_js x3098
                 | `U1 x3099 -> Ojs.string_to_js x3099)
        let (get_useGrouping : 'tags this -> bool option) =
          fun (x3101 : 'tags this) ->
            Ojs.option_of_js Ojs.bool_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3101) "useGrouping")
        let (set_useGrouping :
          'tags this -> [ `Undefined of undefined  | `U1 of bool ] -> unit) =
          fun (x3104 : 'tags this) ->
            fun (x3105 : [ `Undefined of undefined  | `U1 of bool ]) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3104) "useGrouping"
                (match x3105 with
                 | `Undefined x3106 -> undefined_to_js x3106
                 | `U1 x3107 -> Ojs.bool_to_js x3107)
        let (get_minimumIntegerDigits : 'tags this -> float option) =
          fun (x3109 : 'tags this) ->
            Ojs.option_of_js Ojs.float_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3109)
                 "minimumIntegerDigits")
        let (set_minimumIntegerDigits :
          'tags this -> [ `Undefined of undefined  | `U1 of float ] -> unit)
          =
          fun (x3112 : 'tags this) ->
            fun (x3113 : [ `Undefined of undefined  | `U1 of float ]) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3112)
                "minimumIntegerDigits"
                (match x3113 with
                 | `Undefined x3114 -> undefined_to_js x3114
                 | `U1 x3115 -> Ojs.float_to_js x3115)
        let (get_minimumFractionDigits : 'tags this -> float option) =
          fun (x3117 : 'tags this) ->
            Ojs.option_of_js Ojs.float_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3117)
                 "minimumFractionDigits")
        let (set_minimumFractionDigits :
          'tags this -> [ `Undefined of undefined  | `U1 of float ] -> unit)
          =
          fun (x3120 : 'tags this) ->
            fun (x3121 : [ `Undefined of undefined  | `U1 of float ]) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3120)
                "minimumFractionDigits"
                (match x3121 with
                 | `Undefined x3122 -> undefined_to_js x3122
                 | `U1 x3123 -> Ojs.float_to_js x3123)
        let (get_maximumFractionDigits : 'tags this -> float option) =
          fun (x3125 : 'tags this) ->
            Ojs.option_of_js Ojs.float_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3125)
                 "maximumFractionDigits")
        let (set_maximumFractionDigits :
          'tags this -> [ `Undefined of undefined  | `U1 of float ] -> unit)
          =
          fun (x3128 : 'tags this) ->
            fun (x3129 : [ `Undefined of undefined  | `U1 of float ]) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3128)
                "maximumFractionDigits"
                (match x3129 with
                 | `Undefined x3130 -> undefined_to_js x3130
                 | `U1 x3131 -> Ojs.float_to_js x3131)
        let (get_minimumSignificantDigits : 'tags this -> float option) =
          fun (x3133 : 'tags this) ->
            Ojs.option_of_js Ojs.float_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3133)
                 "minimumSignificantDigits")
        let (set_minimumSignificantDigits :
          'tags this -> [ `Undefined of undefined  | `U1 of float ] -> unit)
          =
          fun (x3136 : 'tags this) ->
            fun (x3137 : [ `Undefined of undefined  | `U1 of float ]) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3136)
                "minimumSignificantDigits"
                (match x3137 with
                 | `Undefined x3138 -> undefined_to_js x3138
                 | `U1 x3139 -> Ojs.float_to_js x3139)
        let (get_maximumSignificantDigits : 'tags this -> float option) =
          fun (x3141 : 'tags this) ->
            Ojs.option_of_js Ojs.float_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3141)
                 "maximumSignificantDigits")
        let (set_maximumSignificantDigits :
          'tags this -> [ `Undefined of undefined  | `U1 of float ] -> unit)
          =
          fun (x3144 : 'tags this) ->
            fun (x3145 : [ `Undefined of undefined  | `U1 of float ]) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3144)
                "maximumSignificantDigits"
                (match x3145 with
                 | `Undefined x3146 -> undefined_to_js x3146
                 | `U1 x3147 -> Ojs.float_to_js x3147)
        let (create :
          ?compactDisplay:[ `L_s122_short  | `L_s78_long ] ->
            ?notation:[ `L_s114_scientific  | `L_s126_standard 
                      | `L_s33_compact  | `L_s51_engineering ]
              ->
              ?signDisplay:[ `L_s22_always  | `L_s23_auto 
                           | `L_s54_exceptZero  | `L_s93_never ]
                ->
                ?unit:string ->
                  ?unitDisplay:[ `L_s122_short  | `L_s78_long 
                               | `L_s92_narrow ]
                    ->
                    ?currencyDisplay:string ->
                      ?currencySign:string ->
                        ?localeMatcher:string ->
                          ?style:string ->
                            ?currency:string ->
                              ?useGrouping:bool ->
                                ?minimumIntegerDigits:float ->
                                  ?minimumFractionDigits:float ->
                                    ?maximumFractionDigits:float ->
                                      ?minimumSignificantDigits:float ->
                                        ?maximumSignificantDigits:float ->
                                          unit -> t)
          =
          fun
            ?compactDisplay:(x3149 : [ `L_s122_short  | `L_s78_long ] option)
            ->
            fun
              ?notation:(x3150 :
                          [ `L_s114_scientific  | `L_s126_standard 
                          | `L_s33_compact  | `L_s51_engineering ] option)
              ->
              fun
                ?signDisplay:(x3151 :
                               [ `L_s22_always  | `L_s23_auto 
                               | `L_s54_exceptZero  | `L_s93_never ] option)
                ->
                fun ?unit:(x3152 : string option) ->
                  fun
                    ?unitDisplay:(x3153 :
                                   [ `L_s122_short  | `L_s78_long 
                                   | `L_s92_narrow ] option)
                    ->
                    fun ?currencyDisplay:(x3154 : string option) ->
                      fun ?currencySign:(x3155 : string option) ->
                        fun ?localeMatcher:(x3156 : string option) ->
                          fun ?style:(x3157 : string option) ->
                            fun ?currency:(x3158 : string option) ->
                              fun ?useGrouping:(x3159 : bool option) ->
                                fun
                                  ?minimumIntegerDigits:(x3160 :
                                                          float option)
                                  ->
                                  fun
                                    ?minimumFractionDigits:(x3161 :
                                                             float option)
                                    ->
                                    fun
                                      ?maximumFractionDigits:(x3162 :
                                                               float option)
                                      ->
                                      fun
                                        ?minimumSignificantDigits:(x3163 :
                                                                    float
                                                                    option)
                                        ->
                                        fun
                                          ?maximumSignificantDigits:(x3164 :
                                                                    float
                                                                    option)
                                          ->
                                          fun () ->
                                            let x3165 = Ojs.empty_obj () in
                                            (match x3149 with
                                             | Some x3181 ->
                                                 Ojs.set_prop_ascii x3165
                                                   "compactDisplay"
                                                   (match x3181 with
                                                    | `L_s122_short ->
                                                        Ojs.string_to_js
                                                          "short"
                                                    | `L_s78_long ->
                                                        Ojs.string_to_js
                                                          "long")
                                             | None -> ());
                                            (match x3150 with
                                             | Some x3180 ->
                                                 Ojs.set_prop_ascii x3165
                                                   "notation"
                                                   (match x3180 with
                                                    | `L_s114_scientific ->
                                                        Ojs.string_to_js
                                                          "scientific"
                                                    | `L_s126_standard ->
                                                        Ojs.string_to_js
                                                          "standard"
                                                    | `L_s33_compact ->
                                                        Ojs.string_to_js
                                                          "compact"
                                                    | `L_s51_engineering ->
                                                        Ojs.string_to_js
                                                          "engineering")
                                             | None -> ());
                                            (match x3151 with
                                             | Some x3179 ->
                                                 Ojs.set_prop_ascii x3165
                                                   "signDisplay"
                                                   (match x3179 with
                                                    | `L_s22_always ->
                                                        Ojs.string_to_js
                                                          "always"
                                                    | `L_s23_auto ->
                                                        Ojs.string_to_js
                                                          "auto"
                                                    | `L_s54_exceptZero ->
                                                        Ojs.string_to_js
                                                          "exceptZero"
                                                    | `L_s93_never ->
                                                        Ojs.string_to_js
                                                          "never")
                                             | None -> ());
                                            (match x3152 with
                                             | Some x3178 ->
                                                 Ojs.set_prop_ascii x3165
                                                   "unit"
                                                   (Ojs.string_to_js x3178)
                                             | None -> ());
                                            (match x3153 with
                                             | Some x3177 ->
                                                 Ojs.set_prop_ascii x3165
                                                   "unitDisplay"
                                                   (match x3177 with
                                                    | `L_s122_short ->
                                                        Ojs.string_to_js
                                                          "short"
                                                    | `L_s78_long ->
                                                        Ojs.string_to_js
                                                          "long"
                                                    | `L_s92_narrow ->
                                                        Ojs.string_to_js
                                                          "narrow")
                                             | None -> ());
                                            (match x3154 with
                                             | Some x3176 ->
                                                 Ojs.set_prop_ascii x3165
                                                   "currencyDisplay"
                                                   (Ojs.string_to_js x3176)
                                             | None -> ());
                                            (match x3155 with
                                             | Some x3175 ->
                                                 Ojs.set_prop_ascii x3165
                                                   "currencySign"
                                                   (Ojs.string_to_js x3175)
                                             | None -> ());
                                            (match x3156 with
                                             | Some x3174 ->
                                                 Ojs.set_prop_ascii x3165
                                                   "localeMatcher"
                                                   (Ojs.string_to_js x3174)
                                             | None -> ());
                                            (match x3157 with
                                             | Some x3173 ->
                                                 Ojs.set_prop_ascii x3165
                                                   "style"
                                                   (Ojs.string_to_js x3173)
                                             | None -> ());
                                            (match x3158 with
                                             | Some x3172 ->
                                                 Ojs.set_prop_ascii x3165
                                                   "currency"
                                                   (Ojs.string_to_js x3172)
                                             | None -> ());
                                            (match x3159 with
                                             | Some x3171 ->
                                                 Ojs.set_prop_ascii x3165
                                                   "useGrouping"
                                                   (Ojs.bool_to_js x3171)
                                             | None -> ());
                                            (match x3160 with
                                             | Some x3170 ->
                                                 Ojs.set_prop_ascii x3165
                                                   "minimumIntegerDigits"
                                                   (Ojs.float_to_js x3170)
                                             | None -> ());
                                            (match x3161 with
                                             | Some x3169 ->
                                                 Ojs.set_prop_ascii x3165
                                                   "minimumFractionDigits"
                                                   (Ojs.float_to_js x3169)
                                             | None -> ());
                                            (match x3162 with
                                             | Some x3168 ->
                                                 Ojs.set_prop_ascii x3165
                                                   "maximumFractionDigits"
                                                   (Ojs.float_to_js x3168)
                                             | None -> ());
                                            (match x3163 with
                                             | Some x3167 ->
                                                 Ojs.set_prop_ascii x3165
                                                   "minimumSignificantDigits"
                                                   (Ojs.float_to_js x3167)
                                             | None -> ());
                                            (match x3164 with
                                             | Some x3166 ->
                                                 Ojs.set_prop_ascii x3165
                                                   "maximumSignificantDigits"
                                                   (Ojs.float_to_js x3166)
                                             | None -> ());
                                            t_of_js x3165
        let cast_from = Obj.magic
      end
    module NumberFormat =
      struct
        type t = [ `Intl_NumberFormat ] intf
        let rec t_of_js : Ojs.t -> t = Obj.magic
        and t_to_js : t -> Ojs.t = Obj.magic
        type tags = [ `Intl_NumberFormat ]
        type 'tags this =
          'tags intf constraint 'tags = [> `Intl_NumberFormat ]
        let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
          =
          fun (type __tags) ->
            fun (__tags_of_js : Ojs.t -> __tags) ->
              fun (x3184 : Ojs.t) -> intf_of_js __tags_of_js x3184
        and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
          fun (type __tags) ->
            fun (__tags_to_js : __tags -> Ojs.t) ->
              fun (x3182 : __tags intf) -> intf_to_js __tags_to_js x3182
        let (formatRange :
          'tags this ->
            start:[ `U1 of float  | `U2 of bigint ] ->
              end_:[ `U1 of float  | `U2 of bigint ] -> string)
          =
          fun (x3192 : 'tags this) ->
            fun ~start:(x3186 : [ `U1 of float  | `U2 of bigint ]) ->
              fun ~end_:(x3189 : [ `U1 of float  | `U2 of bigint ]) ->
                Ojs.string_of_js
                  (Ojs.call (this_to_js Obj.magic x3192) "formatRange"
                     [|((match x3186 with
                         | `U1 x3187 -> Ojs.float_to_js x3187
                         | `U2 x3188 -> bigint_to_js x3188));((match x3189
                                                               with
                                                               | `U1 x3190 ->
                                                                   Ojs.float_to_js
                                                                    x3190
                                                               | `U2 x3191 ->
                                                                   bigint_to_js
                                                                    x3191))|])
        let (formatRangeToParts :
          'tags this ->
            start:[ `U1 of float  | `U2 of bigint ] ->
              end_:[ `U1 of float  | `U2 of bigint ] ->
                NumberRangeFormatPart.t list)
          =
          fun (x3200 : 'tags this) ->
            fun ~start:(x3194 : [ `U1 of float  | `U2 of bigint ]) ->
              fun ~end_:(x3197 : [ `U1 of float  | `U2 of bigint ]) ->
                Ojs.list_of_js NumberRangeFormatPart.t_of_js
                  (Ojs.call (this_to_js Obj.magic x3200) "formatRangeToParts"
                     [|((match x3194 with
                         | `U1 x3195 -> Ojs.float_to_js x3195
                         | `U2 x3196 -> bigint_to_js x3196));((match x3197
                                                               with
                                                               | `U1 x3198 ->
                                                                   Ojs.float_to_js
                                                                    x3198
                                                               | `U2 x3199 ->
                                                                   bigint_to_js
                                                                    x3199))|])
        let (format :
          'tags this -> value:[ `U1 of float  | `U2 of bigint ] -> string) =
          fun (x3206 : 'tags this) ->
            fun ~value:(x3203 : [ `U1 of float  | `U2 of bigint ]) ->
              Ojs.string_of_js
                (Ojs.call (this_to_js Obj.magic x3206) "format"
                   [|((match x3203 with
                       | `U1 x3204 -> Ojs.float_to_js x3204
                       | `U2 x3205 -> bigint_to_js x3205))|])
        let (resolvedOptions : 'tags this -> ResolvedNumberFormatOptions.t) =
          fun (x3208 : 'tags this) ->
            ResolvedNumberFormatOptions.t_of_js
              (Ojs.call (this_to_js Obj.magic x3208) "resolvedOptions" [||])
        let (formatToParts :
          'tags this ->
            ?number:[ `U1 of float  | `U2 of bigint ] ->
              unit -> NumberFormatPart.t list)
          =
          fun (x3215 : 'tags this) ->
            fun ?number:(x3210 : [ `U1 of float  | `U2 of bigint ] option) ->
              fun () ->
                Ojs.list_of_js NumberFormatPart.t_of_js
                  (let x3217 = this_to_js Obj.magic x3215 in
                   Ojs.call (Ojs.get_prop_ascii x3217 "formatToParts")
                     "apply"
                     [|x3217;((let x3211 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               (match x3210 with
                                | Some x3212 ->
                                    ignore
                                      (Ojs.call x3211 "push"
                                         [|((match x3212 with
                                             | `U1 x3213 ->
                                                 Ojs.float_to_js x3213
                                             | `U2 x3214 ->
                                                 bigint_to_js x3214))|])
                                | None -> ());
                               x3211))|])
        let (format' : 'tags this -> value:float -> string) =
          fun (x3220 : 'tags this) ->
            fun ~value:(x3219 : float) ->
              Ojs.string_of_js
                (Ojs.call (this_to_js Obj.magic x3220) "format"
                   [|(Ojs.float_to_js x3219)|])
        let (resolvedOptions' : 'tags this -> ResolvedNumberFormatOptions.t)
          =
          fun (x3222 : 'tags this) ->
            ResolvedNumberFormatOptions.t_of_js
              (Ojs.call (this_to_js Obj.magic x3222) "resolvedOptions" [||])
        let (create :
          ?locales:LocalesArgument.t ->
            ?options:NumberFormatOptions.t -> unit -> t)
          =
          fun ?locales:(x3224 : LocalesArgument.t option) ->
            fun ?options:(x3225 : NumberFormatOptions.t option) ->
              fun () ->
                t_of_js
                  (Ojs.new_obj_arr
                     (Ojs.get_prop_ascii
                        (Ojs.get_prop_ascii Ojs.global "Intl") "NumberFormat")
                     (let x3226 =
                        Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                          [||] in
                      (match x3224 with
                       | Some x3228 ->
                           ignore
                             (Ojs.call x3226 "push"
                                [|(LocalesArgument.t_to_js x3228)|])
                       | None -> ());
                      (match x3225 with
                       | Some x3227 ->
                           ignore
                             (Ojs.call x3226 "push"
                                [|(NumberFormatOptions.t_to_js x3227)|])
                       | None -> ());
                      x3226))
        let (invoke :
          ?locales:LocalesArgument.t ->
            ?options:NumberFormatOptions.t -> unit -> t)
          =
          fun ?locales:(x3229 : LocalesArgument.t option) ->
            fun ?options:(x3230 : NumberFormatOptions.t option) ->
              fun () ->
                t_of_js
                  (Ojs.call
                     (Ojs.get_prop_ascii
                        (Ojs.get_prop_ascii Ojs.global "Intl") "NumberFormat")
                     "apply"
                     [|Ojs.null;((let x3231 =
                                    Ojs.new_obj
                                      (Ojs.get_prop_ascii Ojs.global "Array")
                                      [||] in
                                  (match x3229 with
                                   | Some x3233 ->
                                       ignore
                                         (Ojs.call x3231 "push"
                                            [|(LocalesArgument.t_to_js x3233)|])
                                   | None -> ());
                                  (match x3230 with
                                   | Some x3232 ->
                                       ignore
                                         (Ojs.call x3231 "push"
                                            [|(NumberFormatOptions.t_to_js
                                                 x3232)|])
                                   | None -> ());
                                  x3231))|])
        let (supportedLocalesOf :
          locales:LocalesArgument.t ->
            ?options:NumberFormatOptions.t -> unit -> string list)
          =
          fun ~locales:(x3234 : LocalesArgument.t) ->
            fun ?options:(x3235 : NumberFormatOptions.t option) ->
              fun () ->
                Ojs.list_of_js Ojs.string_of_js
                  (let x3238 =
                     Ojs.get_prop_ascii
                       (Ojs.get_prop_ascii Ojs.global "Intl") "NumberFormat" in
                   Ojs.call (Ojs.get_prop_ascii x3238 "supportedLocalesOf")
                     "apply"
                     [|x3238;((let x3236 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x3236 "push"
                                    [|(LocalesArgument.t_to_js x3234)|]);
                               (match x3235 with
                                | Some x3237 ->
                                    ignore
                                      (Ojs.call x3236 "push"
                                         [|(NumberFormatOptions.t_to_js x3237)|])
                                | None -> ());
                               x3236))|])
        let (create' :
          ?locales:[ `U1 of string  | `U2 of string list ] ->
            ?options:NumberFormatOptions.t -> unit -> t)
          =
          fun
            ?locales:(x3240 : [ `U1 of string  | `U2 of string list ] option)
            ->
            fun ?options:(x3241 : NumberFormatOptions.t option) ->
              fun () ->
                t_of_js
                  (Ojs.new_obj_arr
                     (Ojs.get_prop_ascii
                        (Ojs.get_prop_ascii Ojs.global "Intl") "NumberFormat")
                     (let x3242 =
                        Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                          [||] in
                      (match x3240 with
                       | Some x3244 ->
                           ignore
                             (Ojs.call x3242 "push"
                                [|((match x3244 with
                                    | `U1 x3245 -> Ojs.string_to_js x3245
                                    | `U2 x3246 ->
                                        Ojs.list_to_js Ojs.string_to_js x3246))|])
                       | None -> ());
                      (match x3241 with
                       | Some x3243 ->
                           ignore
                             (Ojs.call x3242 "push"
                                [|(NumberFormatOptions.t_to_js x3243)|])
                       | None -> ());
                      x3242))
        let (invoke' :
          ?locales:[ `U1 of string  | `U2 of string list ] ->
            ?options:NumberFormatOptions.t -> unit -> t)
          =
          fun
            ?locales:(x3248 : [ `U1 of string  | `U2 of string list ] option)
            ->
            fun ?options:(x3249 : NumberFormatOptions.t option) ->
              fun () ->
                t_of_js
                  (Ojs.call
                     (Ojs.get_prop_ascii
                        (Ojs.get_prop_ascii Ojs.global "Intl") "NumberFormat")
                     "apply"
                     [|Ojs.null;((let x3250 =
                                    Ojs.new_obj
                                      (Ojs.get_prop_ascii Ojs.global "Array")
                                      [||] in
                                  (match x3248 with
                                   | Some x3252 ->
                                       ignore
                                         (Ojs.call x3250 "push"
                                            [|((match x3252 with
                                                | `U1 x3253 ->
                                                    Ojs.string_to_js x3253
                                                | `U2 x3254 ->
                                                    Ojs.list_to_js
                                                      Ojs.string_to_js x3254))|])
                                   | None -> ());
                                  (match x3249 with
                                   | Some x3251 ->
                                       ignore
                                         (Ojs.call x3250 "push"
                                            [|(NumberFormatOptions.t_to_js
                                                 x3251)|])
                                   | None -> ());
                                  x3250))|])
        let (supportedLocalesOf' :
          locales:[ `U1 of string  | `U2 of string list ] ->
            ?options:NumberFormatOptions.t -> unit -> string list)
          =
          fun ~locales:(x3256 : [ `U1 of string  | `U2 of string list ]) ->
            fun ?options:(x3257 : NumberFormatOptions.t option) ->
              fun () ->
                Ojs.list_of_js Ojs.string_of_js
                  (let x3263 =
                     Ojs.get_prop_ascii
                       (Ojs.get_prop_ascii Ojs.global "Intl") "NumberFormat" in
                   Ojs.call (Ojs.get_prop_ascii x3263 "supportedLocalesOf")
                     "apply"
                     [|x3263;((let x3258 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x3258 "push"
                                    [|((match x3256 with
                                        | `U1 x3260 -> Ojs.string_to_js x3260
                                        | `U2 x3261 ->
                                            Ojs.list_to_js Ojs.string_to_js
                                              x3261))|]);
                               (match x3257 with
                                | Some x3259 ->
                                    ignore
                                      (Ojs.call x3258 "push"
                                         [|(NumberFormatOptions.t_to_js x3259)|])
                                | None -> ());
                               x3258))|])
        let (prototype : unit -> t) =
          fun () ->
            t_of_js
              (Ojs.get_prop_ascii
                 (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Intl")
                    "NumberFormat") "prototype")
        let cast_from = Obj.magic
      end
    module ListFormatType =
      struct
        type t = [ `L_s137_unit  | `L_s35_conjunction  | `L_s46_disjunction ]
        let rec t_of_js : Ojs.t -> t =
          fun (x3266 : Ojs.t) ->
            let x3267 = x3266 in
            match Ojs.string_of_js x3267 with
            | "unit" -> `L_s137_unit
            | "conjunction" -> `L_s35_conjunction
            | "disjunction" -> `L_s46_disjunction
            | _ -> assert false
        and t_to_js : t -> Ojs.t =
          fun
            (x3265 :
              [ `L_s137_unit  | `L_s35_conjunction  | `L_s46_disjunction ])
            ->
            match x3265 with
            | `L_s137_unit -> Ojs.string_to_js "unit"
            | `L_s35_conjunction -> Ojs.string_to_js "conjunction"
            | `L_s46_disjunction -> Ojs.string_to_js "disjunction"
      end
    module ListFormatStyle =
      struct
        type t = [ `L_s122_short  | `L_s78_long  | `L_s92_narrow ]
        let rec t_of_js : Ojs.t -> t =
          fun (x3269 : Ojs.t) ->
            let x3270 = x3269 in
            match Ojs.string_of_js x3270 with
            | "short" -> `L_s122_short
            | "long" -> `L_s78_long
            | "narrow" -> `L_s92_narrow
            | _ -> assert false
        and t_to_js : t -> Ojs.t =
          fun (x3268 : [ `L_s122_short  | `L_s78_long  | `L_s92_narrow ]) ->
            match x3268 with
            | `L_s122_short -> Ojs.string_to_js "short"
            | `L_s78_long -> Ojs.string_to_js "long"
            | `L_s92_narrow -> Ojs.string_to_js "narrow"
      end
    module ResolvedListFormatOptions =
      struct
        type t = [ `Intl_ResolvedListFormatOptions ] intf
        let rec t_of_js : Ojs.t -> t = Obj.magic
        and t_to_js : t -> Ojs.t = Obj.magic
        type tags = [ `Intl_ResolvedListFormatOptions ]
        type 'tags this =
          'tags intf constraint 'tags = [> `Intl_ResolvedListFormatOptions ]
        let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
          =
          fun (type __tags) ->
            fun (__tags_of_js : Ojs.t -> __tags) ->
              fun (x3273 : Ojs.t) -> intf_of_js __tags_of_js x3273
        and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
          fun (type __tags) ->
            fun (__tags_to_js : __tags -> Ojs.t) ->
              fun (x3271 : __tags intf) -> intf_to_js __tags_to_js x3271
        let (get_locale : 'tags this -> string) =
          fun (x3275 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3275) "locale")
        let (set_locale : 'tags this -> string -> unit) =
          fun (x3277 : 'tags this) ->
            fun (x3278 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3277) "locale"
                (Ojs.string_to_js x3278)
        let (get_style : 'tags this -> ListFormatStyle.t) =
          fun (x3280 : 'tags this) ->
            ListFormatStyle.t_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3280) "style")
        let (set_style : 'tags this -> ListFormatStyle.t -> unit) =
          fun (x3282 : 'tags this) ->
            fun (x3283 : ListFormatStyle.t) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3282) "style"
                (ListFormatStyle.t_to_js x3283)
        let (get_type : 'tags this -> ListFormatType.t) =
          fun (x3285 : 'tags this) ->
            ListFormatType.t_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3285) "type")
        let (set_type : 'tags this -> ListFormatType.t -> unit) =
          fun (x3287 : 'tags this) ->
            fun (x3288 : ListFormatType.t) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3287) "type"
                (ListFormatType.t_to_js x3288)
        let (create :
          locale:string ->
            style:ListFormatStyle.t -> type_:ListFormatType.t -> unit -> t)
          =
          fun ~locale:(x3290 : string) ->
            fun ~style:(x3291 : ListFormatStyle.t) ->
              fun ~type_:(x3292 : ListFormatType.t) ->
                fun () ->
                  let x3293 = Ojs.empty_obj () in
                  Ojs.set_prop_ascii x3293 "locale" (Ojs.string_to_js x3290);
                  Ojs.set_prop_ascii x3293 "style"
                    (ListFormatStyle.t_to_js x3291);
                  Ojs.set_prop_ascii x3293 "type"
                    (ListFormatType.t_to_js x3292);
                  t_of_js x3293
        let cast_from = Obj.magic
      end
    module ListFormatLocaleMatcher =
      struct
        type t = [ `L_s26_best_fit  | `L_s81_lookup ]
        let rec t_of_js : Ojs.t -> t =
          fun (x3295 : Ojs.t) ->
            let x3296 = x3295 in
            match Ojs.string_of_js x3296 with
            | "best fit" -> `L_s26_best_fit
            | "lookup" -> `L_s81_lookup
            | _ -> assert false
        and t_to_js : t -> Ojs.t =
          fun (x3294 : [ `L_s26_best_fit  | `L_s81_lookup ]) ->
            match x3294 with
            | `L_s26_best_fit -> Ojs.string_to_js "best fit"
            | `L_s81_lookup -> Ojs.string_to_js "lookup"
      end
    module ListFormatOptions =
      struct
        type t = [ `Intl_ListFormatOptions ] intf
        let rec t_of_js : Ojs.t -> t = Obj.magic
        and t_to_js : t -> Ojs.t = Obj.magic
        type tags = [ `Intl_ListFormatOptions ]
        type 'tags this =
          'tags intf constraint 'tags = [> `Intl_ListFormatOptions ]
        let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
          =
          fun (type __tags) ->
            fun (__tags_of_js : Ojs.t -> __tags) ->
              fun (x3299 : Ojs.t) -> intf_of_js __tags_of_js x3299
        and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
          fun (type __tags) ->
            fun (__tags_to_js : __tags -> Ojs.t) ->
              fun (x3297 : __tags intf) -> intf_to_js __tags_to_js x3297
        let (get_localeMatcher :
          'tags this -> ListFormatLocaleMatcher.t option) =
          fun (x3301 : 'tags this) ->
            Ojs.option_of_js ListFormatLocaleMatcher.t_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3301)
                 "localeMatcher")
        let (set_localeMatcher :
          'tags this ->
            [ `Undefined of undefined  | `U1 of ListFormatLocaleMatcher.t ]
              -> unit)
          =
          fun (x3304 : 'tags this) ->
            fun
              (x3305 :
                [ `Undefined of undefined 
                | `U1 of ListFormatLocaleMatcher.t ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3304) "localeMatcher"
                (match x3305 with
                 | `Undefined x3306 -> undefined_to_js x3306
                 | `U1 x3307 -> ListFormatLocaleMatcher.t_to_js x3307)
        let (get_type : 'tags this -> ListFormatType.t option) =
          fun (x3309 : 'tags this) ->
            Ojs.option_of_js ListFormatType.t_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3309) "type")
        let (set_type :
          'tags this ->
            [ `Undefined of undefined  | `U1 of ListFormatType.t ] -> unit)
          =
          fun (x3312 : 'tags this) ->
            fun
              (x3313 :
                [ `Undefined of undefined  | `U1 of ListFormatType.t ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3312) "type"
                (match x3313 with
                 | `Undefined x3314 -> undefined_to_js x3314
                 | `U1 x3315 -> ListFormatType.t_to_js x3315)
        let (get_style : 'tags this -> ListFormatStyle.t option) =
          fun (x3317 : 'tags this) ->
            Ojs.option_of_js ListFormatStyle.t_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3317) "style")
        let (set_style :
          'tags this ->
            [ `Undefined of undefined  | `U1 of ListFormatStyle.t ] -> unit)
          =
          fun (x3320 : 'tags this) ->
            fun
              (x3321 :
                [ `Undefined of undefined  | `U1 of ListFormatStyle.t ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3320) "style"
                (match x3321 with
                 | `Undefined x3322 -> undefined_to_js x3322
                 | `U1 x3323 -> ListFormatStyle.t_to_js x3323)
        let (create :
          ?localeMatcher:ListFormatLocaleMatcher.t ->
            ?type_:ListFormatType.t -> ?style:ListFormatStyle.t -> unit -> t)
          =
          fun ?localeMatcher:(x3325 : ListFormatLocaleMatcher.t option) ->
            fun ?type_:(x3326 : ListFormatType.t option) ->
              fun ?style:(x3327 : ListFormatStyle.t option) ->
                fun () ->
                  let x3328 = Ojs.empty_obj () in
                  (match x3325 with
                   | Some x3331 ->
                       Ojs.set_prop_ascii x3328 "localeMatcher"
                         (ListFormatLocaleMatcher.t_to_js x3331)
                   | None -> ());
                  (match x3326 with
                   | Some x3330 ->
                       Ojs.set_prop_ascii x3328 "type"
                         (ListFormatType.t_to_js x3330)
                   | None -> ());
                  (match x3327 with
                   | Some x3329 ->
                       Ojs.set_prop_ascii x3328 "style"
                         (ListFormatStyle.t_to_js x3329)
                   | None -> ());
                  t_of_js x3328
        let cast_from = Obj.magic
      end
    module ListFormat =
      struct
        module AnonymousInterface11 =
          struct
            type t = Ojs.t
            let rec t_of_js : Ojs.t -> t = fun (x3333 : Ojs.t) -> x3333
            and t_to_js : t -> Ojs.t = fun (x3332 : Ojs.t) -> x3332
            let (get_type : t -> [ `L_s48_element  | `L_s76_literal ]) =
              fun (x3334 : t) ->
                let x3335 = Ojs.get_prop_ascii (t_to_js x3334) "type" in
                match Ojs.string_of_js x3335 with
                | "element" -> `L_s48_element
                | "literal" -> `L_s76_literal
                | _ -> assert false
            let (set_type :
              t ->
                [ `U1 of [ `L_s48_element ]  | `U2 of [ `L_s76_literal ] ] ->
                  unit)
              =
              fun (x3336 : t) ->
                fun
                  (x3337 :
                    [ `U1 of [ `L_s48_element ] 
                    | `U2 of [ `L_s76_literal ] ])
                  ->
                  Ojs.set_prop_ascii (t_to_js x3336) "type"
                    (match x3337 with
                     | `U1 x3338 ->
                         (match x3338 with
                          | `L_s48_element -> Ojs.string_to_js "element")
                     | `U2 x3339 ->
                         (match x3339 with
                          | `L_s76_literal -> Ojs.string_to_js "literal"))
            let (get_value : t -> string) =
              fun (x3340 : t) ->
                Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x3340) "value")
            let (set_value : t -> string -> unit) =
              fun (x3341 : t) ->
                fun (x3342 : string) ->
                  Ojs.set_prop_ascii (t_to_js x3341) "value"
                    (Ojs.string_to_js x3342)
            let (create :
              type_:[ `L_s48_element  | `L_s76_literal ] ->
                value:string -> unit -> t)
              =
              fun ~type_:(x3343 : [ `L_s48_element  | `L_s76_literal ]) ->
                fun ~value:(x3344 : string) ->
                  fun () ->
                    let x3345 = Ojs.empty_obj () in
                    Ojs.set_prop_ascii x3345 "type"
                      (match x3343 with
                       | `L_s48_element -> Ojs.string_to_js "element"
                       | `L_s76_literal -> Ojs.string_to_js "literal");
                    Ojs.set_prop_ascii x3345 "value" (Ojs.string_to_js x3344);
                    t_of_js x3345
          end
        type t = [ `Intl_ListFormat ] intf
        let rec t_of_js : Ojs.t -> t = Obj.magic
        and t_to_js : t -> Ojs.t = Obj.magic
        type tags = [ `Intl_ListFormat ]
        type 'tags this = 'tags intf constraint 'tags = [> `Intl_ListFormat ]
        let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
          =
          fun (type __tags) ->
            fun (__tags_of_js : Ojs.t -> __tags) ->
              fun (x3348 : Ojs.t) -> intf_of_js __tags_of_js x3348
        and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
          fun (type __tags) ->
            fun (__tags_to_js : __tags -> Ojs.t) ->
              fun (x3346 : __tags intf) -> intf_to_js __tags_to_js x3346
        let (format : 'tags this -> list:string Iterable.t -> string) =
          fun (x3352 : 'tags this) ->
            fun ~list:(x3350 : string Iterable.t) ->
              Ojs.string_of_js
                (Ojs.call (this_to_js Obj.magic x3352) "format"
                   [|(Iterable.t_to_js Ojs.string_to_js x3350)|])
        let (formatToParts :
          'tags this -> list:string Iterable.t -> AnonymousInterface11.t list)
          =
          fun (x3356 : 'tags this) ->
            fun ~list:(x3354 : string Iterable.t) ->
              Ojs.list_of_js AnonymousInterface11.t_of_js
                (Ojs.call (this_to_js Obj.magic x3356) "formatToParts"
                   [|(Iterable.t_to_js Ojs.string_to_js x3354)|])
        let (resolvedOptions : 'tags this -> ResolvedListFormatOptions.t) =
          fun (x3359 : 'tags this) ->
            ResolvedListFormatOptions.t_of_js
              (Ojs.call (this_to_js Obj.magic x3359) "resolvedOptions" [||])
        let cast_from = Obj.magic
        let (prototype : unit -> t) =
          fun () ->
            t_of_js
              (Ojs.get_prop_ascii
                 (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Intl")
                    "ListFormat") "prototype")
        let (create :
          ?locales:LocalesArgument.t ->
            ?options:ListFormatOptions.t -> unit -> t)
          =
          fun ?locales:(x3361 : LocalesArgument.t option) ->
            fun ?options:(x3362 : ListFormatOptions.t option) ->
              fun () ->
                t_of_js
                  (Ojs.new_obj_arr
                     (Ojs.get_prop_ascii
                        (Ojs.get_prop_ascii Ojs.global "Intl") "ListFormat")
                     (let x3363 =
                        Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                          [||] in
                      (match x3361 with
                       | Some x3365 ->
                           ignore
                             (Ojs.call x3363 "push"
                                [|(LocalesArgument.t_to_js x3365)|])
                       | None -> ());
                      (match x3362 with
                       | Some x3364 ->
                           ignore
                             (Ojs.call x3363 "push"
                                [|(ListFormatOptions.t_to_js x3364)|])
                       | None -> ());
                      x3363))
        let (supportedLocalesOf :
          locales:LocalesArgument.t ->
            ?options:(ListFormatOptions.t, [ `L_s77_localeMatcher ]) Pick.t
              -> unit -> UnicodeBCP47LocaleIdentifier.t list)
          =
          fun ~locales:(x3366 : LocalesArgument.t) ->
            fun
              ?options:(x3367 :
                         (ListFormatOptions.t, [ `L_s77_localeMatcher ])
                           Pick.t option)
              ->
              fun () ->
                Ojs.list_of_js UnicodeBCP47LocaleIdentifier.t_of_js
                  (let x3372 =
                     Ojs.get_prop_ascii
                       (Ojs.get_prop_ascii Ojs.global "Intl") "ListFormat" in
                   Ojs.call (Ojs.get_prop_ascii x3372 "supportedLocalesOf")
                     "apply"
                     [|x3372;((let x3368 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x3368 "push"
                                    [|(LocalesArgument.t_to_js x3366)|]);
                               (match x3367 with
                                | Some x3369 ->
                                    ignore
                                      (Ojs.call x3368 "push"
                                         [|(Pick.t_to_js
                                              ListFormatOptions.t_to_js
                                              (fun
                                                 (x3371 :
                                                   [ `L_s77_localeMatcher ])
                                                 ->
                                                 match x3371 with
                                                 | `L_s77_localeMatcher ->
                                                     Ojs.string_to_js
                                                       "localeMatcher") x3369)|])
                                | None -> ());
                               x3368))|])
      end
    module DisplayNamesType =
      struct
        type t =
          [ `L_s112_region  | `L_s115_script  | `L_s28_calendar 
          | `L_s36_currency  | `L_s37_dateTimeField  | `L_s75_language ]
        let rec t_of_js : Ojs.t -> t =
          fun (x3375 : Ojs.t) ->
            let x3376 = x3375 in
            match Ojs.string_of_js x3376 with
            | "region" -> `L_s112_region
            | "script" -> `L_s115_script
            | "calendar" -> `L_s28_calendar
            | "currency" -> `L_s36_currency
            | "dateTimeField" -> `L_s37_dateTimeField
            | "language" -> `L_s75_language
            | _ -> assert false
        and t_to_js : t -> Ojs.t =
          fun
            (x3374 :
              [ `L_s112_region  | `L_s115_script  | `L_s28_calendar 
              | `L_s36_currency  | `L_s37_dateTimeField  | `L_s75_language ])
            ->
            match x3374 with
            | `L_s112_region -> Ojs.string_to_js "region"
            | `L_s115_script -> Ojs.string_to_js "script"
            | `L_s28_calendar -> Ojs.string_to_js "calendar"
            | `L_s36_currency -> Ojs.string_to_js "currency"
            | `L_s37_dateTimeField -> Ojs.string_to_js "dateTimeField"
            | `L_s75_language -> Ojs.string_to_js "language"
      end
    module DisplayNamesLanguageDisplay =
      struct
        type t = [ `L_s126_standard  | `L_s43_dialect ]
        let rec t_of_js : Ojs.t -> t =
          fun (x3378 : Ojs.t) ->
            let x3379 = x3378 in
            match Ojs.string_of_js x3379 with
            | "standard" -> `L_s126_standard
            | "dialect" -> `L_s43_dialect
            | _ -> assert false
        and t_to_js : t -> Ojs.t =
          fun (x3377 : [ `L_s126_standard  | `L_s43_dialect ]) ->
            match x3377 with
            | `L_s126_standard -> Ojs.string_to_js "standard"
            | `L_s43_dialect -> Ojs.string_to_js "dialect"
      end
    module DisplayNamesFallback =
      struct
        type t = [ `L_s31_code  | `L_s94_none ]
        let rec t_of_js : Ojs.t -> t =
          fun (x3381 : Ojs.t) ->
            let x3382 = x3381 in
            match Ojs.string_of_js x3382 with
            | "code" -> `L_s31_code
            | "none" -> `L_s94_none
            | _ -> assert false
        and t_to_js : t -> Ojs.t =
          fun (x3380 : [ `L_s31_code  | `L_s94_none ]) ->
            match x3380 with
            | `L_s31_code -> Ojs.string_to_js "code"
            | `L_s94_none -> Ojs.string_to_js "none"
      end
    module ResolvedDisplayNamesOptions =
      struct
        type t = [ `Intl_ResolvedDisplayNamesOptions ] intf
        let rec t_of_js : Ojs.t -> t = Obj.magic
        and t_to_js : t -> Ojs.t = Obj.magic
        type tags = [ `Intl_ResolvedDisplayNamesOptions ]
        type 'tags this =
          'tags intf constraint 'tags =
                      [> `Intl_ResolvedDisplayNamesOptions ]
        let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
          =
          fun (type __tags) ->
            fun (__tags_of_js : Ojs.t -> __tags) ->
              fun (x3385 : Ojs.t) -> intf_of_js __tags_of_js x3385
        and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
          fun (type __tags) ->
            fun (__tags_to_js : __tags -> Ojs.t) ->
              fun (x3383 : __tags intf) -> intf_to_js __tags_to_js x3383
        let (get_locale : 'tags this -> UnicodeBCP47LocaleIdentifier.t) =
          fun (x3387 : 'tags this) ->
            UnicodeBCP47LocaleIdentifier.t_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3387) "locale")
        let (set_locale :
          'tags this -> UnicodeBCP47LocaleIdentifier.t -> unit) =
          fun (x3389 : 'tags this) ->
            fun (x3390 : UnicodeBCP47LocaleIdentifier.t) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3389) "locale"
                (UnicodeBCP47LocaleIdentifier.t_to_js x3390)
        let (get_style : 'tags this -> RelativeTimeFormatStyle.t) =
          fun (x3392 : 'tags this) ->
            RelativeTimeFormatStyle.t_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3392) "style")
        let (set_style : 'tags this -> RelativeTimeFormatStyle.t -> unit) =
          fun (x3394 : 'tags this) ->
            fun (x3395 : RelativeTimeFormatStyle.t) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3394) "style"
                (RelativeTimeFormatStyle.t_to_js x3395)
        let (get_type : 'tags this -> DisplayNamesType.t) =
          fun (x3397 : 'tags this) ->
            DisplayNamesType.t_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3397) "type")
        let (set_type : 'tags this -> DisplayNamesType.t -> unit) =
          fun (x3399 : 'tags this) ->
            fun (x3400 : DisplayNamesType.t) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3399) "type"
                (DisplayNamesType.t_to_js x3400)
        let (get_fallback : 'tags this -> DisplayNamesFallback.t) =
          fun (x3402 : 'tags this) ->
            DisplayNamesFallback.t_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3402) "fallback")
        let (set_fallback : 'tags this -> DisplayNamesFallback.t -> unit) =
          fun (x3404 : 'tags this) ->
            fun (x3405 : DisplayNamesFallback.t) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3404) "fallback"
                (DisplayNamesFallback.t_to_js x3405)
        let (get_languageDisplay :
          'tags this -> DisplayNamesLanguageDisplay.t option) =
          fun (x3407 : 'tags this) ->
            Ojs.option_of_js DisplayNamesLanguageDisplay.t_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3407)
                 "languageDisplay")
        let (set_languageDisplay :
          'tags this -> DisplayNamesLanguageDisplay.t -> unit) =
          fun (x3410 : 'tags this) ->
            fun (x3411 : DisplayNamesLanguageDisplay.t) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3410)
                "languageDisplay" (DisplayNamesLanguageDisplay.t_to_js x3411)
        let (create :
          locale:UnicodeBCP47LocaleIdentifier.t ->
            style:RelativeTimeFormatStyle.t ->
              type_:DisplayNamesType.t ->
                fallback:DisplayNamesFallback.t ->
                  ?languageDisplay:DisplayNamesLanguageDisplay.t -> unit -> t)
          =
          fun ~locale:(x3413 : UnicodeBCP47LocaleIdentifier.t) ->
            fun ~style:(x3414 : RelativeTimeFormatStyle.t) ->
              fun ~type_:(x3415 : DisplayNamesType.t) ->
                fun ~fallback:(x3416 : DisplayNamesFallback.t) ->
                  fun
                    ?languageDisplay:(x3417 :
                                       DisplayNamesLanguageDisplay.t option)
                    ->
                    fun () ->
                      let x3418 = Ojs.empty_obj () in
                      Ojs.set_prop_ascii x3418 "locale"
                        (UnicodeBCP47LocaleIdentifier.t_to_js x3413);
                      Ojs.set_prop_ascii x3418 "style"
                        (RelativeTimeFormatStyle.t_to_js x3414);
                      Ojs.set_prop_ascii x3418 "type"
                        (DisplayNamesType.t_to_js x3415);
                      Ojs.set_prop_ascii x3418 "fallback"
                        (DisplayNamesFallback.t_to_js x3416);
                      (match x3417 with
                       | Some x3419 ->
                           Ojs.set_prop_ascii x3418 "languageDisplay"
                             (DisplayNamesLanguageDisplay.t_to_js x3419)
                       | None -> ());
                      t_of_js x3418
        let cast_from = Obj.magic
      end
    module DisplayNamesOptions =
      struct
        type t = [ `Intl_DisplayNamesOptions ] intf
        let rec t_of_js : Ojs.t -> t = Obj.magic
        and t_to_js : t -> Ojs.t = Obj.magic
        type tags = [ `Intl_DisplayNamesOptions ]
        type 'tags this =
          'tags intf constraint 'tags = [> `Intl_DisplayNamesOptions ]
        let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
          =
          fun (type __tags) ->
            fun (__tags_of_js : Ojs.t -> __tags) ->
              fun (x3422 : Ojs.t) -> intf_of_js __tags_of_js x3422
        and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
          fun (type __tags) ->
            fun (__tags_to_js : __tags -> Ojs.t) ->
              fun (x3420 : __tags intf) -> intf_to_js __tags_to_js x3420
        let (get_localeMatcher :
          'tags this -> RelativeTimeFormatLocaleMatcher.t option) =
          fun (x3424 : 'tags this) ->
            Ojs.option_of_js RelativeTimeFormatLocaleMatcher.t_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3424)
                 "localeMatcher")
        let (set_localeMatcher :
          'tags this -> RelativeTimeFormatLocaleMatcher.t -> unit) =
          fun (x3427 : 'tags this) ->
            fun (x3428 : RelativeTimeFormatLocaleMatcher.t) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3427) "localeMatcher"
                (RelativeTimeFormatLocaleMatcher.t_to_js x3428)
        let (get_style : 'tags this -> RelativeTimeFormatStyle.t option) =
          fun (x3430 : 'tags this) ->
            Ojs.option_of_js RelativeTimeFormatStyle.t_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3430) "style")
        let (set_style : 'tags this -> RelativeTimeFormatStyle.t -> unit) =
          fun (x3433 : 'tags this) ->
            fun (x3434 : RelativeTimeFormatStyle.t) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3433) "style"
                (RelativeTimeFormatStyle.t_to_js x3434)
        let (get_type : 'tags this -> DisplayNamesType.t) =
          fun (x3436 : 'tags this) ->
            DisplayNamesType.t_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3436) "type")
        let (set_type : 'tags this -> DisplayNamesType.t -> unit) =
          fun (x3438 : 'tags this) ->
            fun (x3439 : DisplayNamesType.t) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3438) "type"
                (DisplayNamesType.t_to_js x3439)
        let (get_languageDisplay :
          'tags this -> DisplayNamesLanguageDisplay.t option) =
          fun (x3441 : 'tags this) ->
            Ojs.option_of_js DisplayNamesLanguageDisplay.t_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3441)
                 "languageDisplay")
        let (set_languageDisplay :
          'tags this -> DisplayNamesLanguageDisplay.t -> unit) =
          fun (x3444 : 'tags this) ->
            fun (x3445 : DisplayNamesLanguageDisplay.t) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3444)
                "languageDisplay" (DisplayNamesLanguageDisplay.t_to_js x3445)
        let (get_fallback : 'tags this -> DisplayNamesFallback.t option) =
          fun (x3447 : 'tags this) ->
            Ojs.option_of_js DisplayNamesFallback.t_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3447) "fallback")
        let (set_fallback : 'tags this -> DisplayNamesFallback.t -> unit) =
          fun (x3450 : 'tags this) ->
            fun (x3451 : DisplayNamesFallback.t) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3450) "fallback"
                (DisplayNamesFallback.t_to_js x3451)
        let (create :
          ?localeMatcher:RelativeTimeFormatLocaleMatcher.t ->
            ?style:RelativeTimeFormatStyle.t ->
              type_:DisplayNamesType.t ->
                ?languageDisplay:DisplayNamesLanguageDisplay.t ->
                  ?fallback:DisplayNamesFallback.t -> unit -> t)
          =
          fun
            ?localeMatcher:(x3453 : RelativeTimeFormatLocaleMatcher.t option)
            ->
            fun ?style:(x3454 : RelativeTimeFormatStyle.t option) ->
              fun ~type_:(x3455 : DisplayNamesType.t) ->
                fun
                  ?languageDisplay:(x3456 :
                                     DisplayNamesLanguageDisplay.t option)
                  ->
                  fun ?fallback:(x3457 : DisplayNamesFallback.t option) ->
                    fun () ->
                      let x3458 = Ojs.empty_obj () in
                      (match x3453 with
                       | Some x3462 ->
                           Ojs.set_prop_ascii x3458 "localeMatcher"
                             (RelativeTimeFormatLocaleMatcher.t_to_js x3462)
                       | None -> ());
                      (match x3454 with
                       | Some x3461 ->
                           Ojs.set_prop_ascii x3458 "style"
                             (RelativeTimeFormatStyle.t_to_js x3461)
                       | None -> ());
                      Ojs.set_prop_ascii x3458 "type"
                        (DisplayNamesType.t_to_js x3455);
                      (match x3456 with
                       | Some x3460 ->
                           Ojs.set_prop_ascii x3458 "languageDisplay"
                             (DisplayNamesLanguageDisplay.t_to_js x3460)
                       | None -> ());
                      (match x3457 with
                       | Some x3459 ->
                           Ojs.set_prop_ascii x3458 "fallback"
                             (DisplayNamesFallback.t_to_js x3459)
                       | None -> ());
                      t_of_js x3458
        let cast_from = Obj.magic
      end
    module DisplayNames =
      struct
        module AnonymousInterface4 =
          struct
            type t = Ojs.t
            let rec t_of_js : Ojs.t -> t = fun (x3464 : Ojs.t) -> x3464
            and t_to_js : t -> Ojs.t = fun (x3463 : Ojs.t) -> x3463
            let (get_localeMatcher :
              t -> RelativeTimeFormatLocaleMatcher.t option) =
              fun (x3465 : t) ->
                Ojs.option_of_js RelativeTimeFormatLocaleMatcher.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x3465) "localeMatcher")
            let (set_localeMatcher :
              t -> RelativeTimeFormatLocaleMatcher.t -> unit) =
              fun (x3467 : t) ->
                fun (x3468 : RelativeTimeFormatLocaleMatcher.t) ->
                  Ojs.set_prop_ascii (t_to_js x3467) "localeMatcher"
                    (RelativeTimeFormatLocaleMatcher.t_to_js x3468)
            let (create :
              ?localeMatcher:RelativeTimeFormatLocaleMatcher.t -> unit -> t)
              =
              fun
                ?localeMatcher:(x3469 :
                                 RelativeTimeFormatLocaleMatcher.t option)
                ->
                fun () ->
                  let x3470 = Ojs.empty_obj () in
                  (match x3469 with
                   | Some x3471 ->
                       Ojs.set_prop_ascii x3470 "localeMatcher"
                         (RelativeTimeFormatLocaleMatcher.t_to_js x3471)
                   | None -> ());
                  t_of_js x3470
          end
        type t = [ `Intl_DisplayNames ] intf
        let rec t_of_js : Ojs.t -> t = Obj.magic
        and t_to_js : t -> Ojs.t = Obj.magic
        type tags = [ `Intl_DisplayNames ]
        type 'tags this =
          'tags intf constraint 'tags = [> `Intl_DisplayNames ]
        let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
          =
          fun (type __tags) ->
            fun (__tags_of_js : Ojs.t -> __tags) ->
              fun (x3474 : Ojs.t) -> intf_of_js __tags_of_js x3474
        and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
          fun (type __tags) ->
            fun (__tags_to_js : __tags -> Ojs.t) ->
              fun (x3472 : __tags intf) -> intf_to_js __tags_to_js x3472
        let (of_ : 'tags this -> code:string -> string option) =
          fun (x3477 : 'tags this) ->
            fun ~code:(x3476 : string) ->
              Ojs.option_of_js Ojs.string_of_js
                (Ojs.call (this_to_js Obj.magic x3477) "of"
                   [|(Ojs.string_to_js x3476)|])
        let (resolvedOptions : 'tags this -> ResolvedDisplayNamesOptions.t) =
          fun (x3480 : 'tags this) ->
            ResolvedDisplayNamesOptions.t_of_js
              (Ojs.call (this_to_js Obj.magic x3480) "resolvedOptions" [||])
        let cast_from = Obj.magic
        let (prototype : unit -> t) =
          fun () ->
            t_of_js
              (Ojs.get_prop_ascii
                 (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Intl")
                    "DisplayNames") "prototype")
        let (create :
          locales:LocalesArgument.t -> options:DisplayNamesOptions.t -> t) =
          fun ~locales:(x3482 : LocalesArgument.t) ->
            fun ~options:(x3483 : DisplayNamesOptions.t) ->
              t_of_js
                (Ojs.new_obj
                   (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Intl")
                      "DisplayNames")
                   [|(LocalesArgument.t_to_js x3482);(DisplayNamesOptions.t_to_js
                                                        x3483)|])
        let (supportedLocalesOf :
          ?locales:LocalesArgument.t ->
            ?options:AnonymousInterface4.t ->
              unit -> UnicodeBCP47LocaleIdentifier.t list)
          =
          fun ?locales:(x3484 : LocalesArgument.t option) ->
            fun ?options:(x3485 : AnonymousInterface4.t option) ->
              fun () ->
                Ojs.list_of_js UnicodeBCP47LocaleIdentifier.t_of_js
                  (let x3489 =
                     Ojs.get_prop_ascii
                       (Ojs.get_prop_ascii Ojs.global "Intl") "DisplayNames" in
                   Ojs.call (Ojs.get_prop_ascii x3489 "supportedLocalesOf")
                     "apply"
                     [|x3489;((let x3486 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               (match x3484 with
                                | Some x3488 ->
                                    ignore
                                      (Ojs.call x3486 "push"
                                         [|(LocalesArgument.t_to_js x3488)|])
                                | None -> ());
                               (match x3485 with
                                | Some x3487 ->
                                    ignore
                                      (Ojs.call x3486 "push"
                                         [|(AnonymousInterface4.t_to_js x3487)|])
                                | None -> ());
                               x3486))|])
      end
    module DateTimeFormatPartTypesRegistry =
      struct
        type t = [ `Intl_DateTimeFormatPartTypesRegistry ] intf
        let rec t_of_js : Ojs.t -> t = Obj.magic
        and t_to_js : t -> Ojs.t = Obj.magic
        type tags = [ `Intl_DateTimeFormatPartTypesRegistry ]
        type 'tags this =
          'tags intf constraint 'tags =
                      [> `Intl_DateTimeFormatPartTypesRegistry ]
        let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
          =
          fun (type __tags) ->
            fun (__tags_of_js : Ojs.t -> __tags) ->
              fun (x3493 : Ojs.t) -> intf_of_js __tags_of_js x3493
        and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
          fun (type __tags) ->
            fun (__tags_to_js : __tags -> Ojs.t) ->
              fun (x3491 : __tags intf) -> intf_to_js __tags_to_js x3491
        let (get_fractionalSecond : 'tags this -> any) =
          fun (x3495 : 'tags this) ->
            any_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3495)
                 "fractionalSecond")
        let (set_fractionalSecond : 'tags this -> any -> unit) =
          fun (x3497 : 'tags this) ->
            fun (x3498 : any) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3497)
                "fractionalSecond" (any_to_js x3498)
        let (get_unknown : 'tags this -> any) =
          fun (x3500 : 'tags this) ->
            any_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3500) "unknown")
        let (set_unknown : 'tags this -> any -> unit) =
          fun (x3502 : 'tags this) ->
            fun (x3503 : any) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3502) "unknown"
                (any_to_js x3503)
        let (get_day : 'tags this -> any) =
          fun (x3505 : 'tags this) ->
            any_of_js (Ojs.get_prop_ascii (this_to_js Obj.magic x3505) "day")
        let (set_day : 'tags this -> any -> unit) =
          fun (x3507 : 'tags this) ->
            fun (x3508 : any) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3507) "day"
                (any_to_js x3508)
        let (get_dayPeriod : 'tags this -> any) =
          fun (x3510 : 'tags this) ->
            any_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3510) "dayPeriod")
        let (set_dayPeriod : 'tags this -> any -> unit) =
          fun (x3512 : 'tags this) ->
            fun (x3513 : any) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3512) "dayPeriod"
                (any_to_js x3513)
        let (get_era : 'tags this -> any) =
          fun (x3515 : 'tags this) ->
            any_of_js (Ojs.get_prop_ascii (this_to_js Obj.magic x3515) "era")
        let (set_era : 'tags this -> any -> unit) =
          fun (x3517 : 'tags this) ->
            fun (x3518 : any) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3517) "era"
                (any_to_js x3518)
        let (get_hour : 'tags this -> any) =
          fun (x3520 : 'tags this) ->
            any_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3520) "hour")
        let (set_hour : 'tags this -> any -> unit) =
          fun (x3522 : 'tags this) ->
            fun (x3523 : any) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3522) "hour"
                (any_to_js x3523)
        let (get_literal : 'tags this -> any) =
          fun (x3525 : 'tags this) ->
            any_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3525) "literal")
        let (set_literal : 'tags this -> any -> unit) =
          fun (x3527 : 'tags this) ->
            fun (x3528 : any) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3527) "literal"
                (any_to_js x3528)
        let (get_minute : 'tags this -> any) =
          fun (x3530 : 'tags this) ->
            any_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3530) "minute")
        let (set_minute : 'tags this -> any -> unit) =
          fun (x3532 : 'tags this) ->
            fun (x3533 : any) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3532) "minute"
                (any_to_js x3533)
        let (get_month : 'tags this -> any) =
          fun (x3535 : 'tags this) ->
            any_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3535) "month")
        let (set_month : 'tags this -> any -> unit) =
          fun (x3537 : 'tags this) ->
            fun (x3538 : any) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3537) "month"
                (any_to_js x3538)
        let (get_second : 'tags this -> any) =
          fun (x3540 : 'tags this) ->
            any_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3540) "second")
        let (set_second : 'tags this -> any -> unit) =
          fun (x3542 : 'tags this) ->
            fun (x3543 : any) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3542) "second"
                (any_to_js x3543)
        let (get_timeZoneName : 'tags this -> any) =
          fun (x3545 : 'tags this) ->
            any_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3545) "timeZoneName")
        let (set_timeZoneName : 'tags this -> any -> unit) =
          fun (x3547 : 'tags this) ->
            fun (x3548 : any) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3547) "timeZoneName"
                (any_to_js x3548)
        let (get_weekday : 'tags this -> any) =
          fun (x3550 : 'tags this) ->
            any_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3550) "weekday")
        let (set_weekday : 'tags this -> any -> unit) =
          fun (x3552 : 'tags this) ->
            fun (x3553 : any) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3552) "weekday"
                (any_to_js x3553)
        let (get_year : 'tags this -> any) =
          fun (x3555 : 'tags this) ->
            any_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3555) "year")
        let (set_year : 'tags this -> any -> unit) =
          fun (x3557 : 'tags this) ->
            fun (x3558 : any) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3557) "year"
                (any_to_js x3558)
        let (create :
          fractionalSecond:any ->
            unknown:any ->
              day:any ->
                dayPeriod:any ->
                  era:any ->
                    hour:any ->
                      literal:any ->
                        minute:any ->
                          month:any ->
                            second:any ->
                              timeZoneName:any ->
                                weekday:any -> year:any -> unit -> t)
          =
          fun ~fractionalSecond:(x3560 : any) ->
            fun ~unknown:(x3561 : any) ->
              fun ~day:(x3562 : any) ->
                fun ~dayPeriod:(x3563 : any) ->
                  fun ~era:(x3564 : any) ->
                    fun ~hour:(x3565 : any) ->
                      fun ~literal:(x3566 : any) ->
                        fun ~minute:(x3567 : any) ->
                          fun ~month:(x3568 : any) ->
                            fun ~second:(x3569 : any) ->
                              fun ~timeZoneName:(x3570 : any) ->
                                fun ~weekday:(x3571 : any) ->
                                  fun ~year:(x3572 : any) ->
                                    fun () ->
                                      let x3573 = Ojs.empty_obj () in
                                      Ojs.set_prop_ascii x3573
                                        "fractionalSecond" (any_to_js x3560);
                                      Ojs.set_prop_ascii x3573 "unknown"
                                        (any_to_js x3561);
                                      Ojs.set_prop_ascii x3573 "day"
                                        (any_to_js x3562);
                                      Ojs.set_prop_ascii x3573 "dayPeriod"
                                        (any_to_js x3563);
                                      Ojs.set_prop_ascii x3573 "era"
                                        (any_to_js x3564);
                                      Ojs.set_prop_ascii x3573 "hour"
                                        (any_to_js x3565);
                                      Ojs.set_prop_ascii x3573 "literal"
                                        (any_to_js x3566);
                                      Ojs.set_prop_ascii x3573 "minute"
                                        (any_to_js x3567);
                                      Ojs.set_prop_ascii x3573 "month"
                                        (any_to_js x3568);
                                      Ojs.set_prop_ascii x3573 "second"
                                        (any_to_js x3569);
                                      Ojs.set_prop_ascii x3573 "timeZoneName"
                                        (any_to_js x3570);
                                      Ojs.set_prop_ascii x3573 "weekday"
                                        (any_to_js x3571);
                                      Ojs.set_prop_ascii x3573 "year"
                                        (any_to_js x3572);
                                      t_of_js x3573
        let cast_from = Obj.magic
      end
    module ResolvedDateTimeFormatOptions =
      struct
        type t = [ `Intl_ResolvedDateTimeFormatOptions ] intf
        let rec t_of_js : Ojs.t -> t = Obj.magic
        and t_to_js : t -> Ojs.t = Obj.magic
        type tags = [ `Intl_ResolvedDateTimeFormatOptions ]
        type 'tags this =
          'tags intf constraint 'tags =
                      [> `Intl_ResolvedDateTimeFormatOptions ]
        let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
          =
          fun (type __tags) ->
            fun (__tags_of_js : Ojs.t -> __tags) ->
              fun (x3576 : Ojs.t) -> intf_of_js __tags_of_js x3576
        and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
          fun (type __tags) ->
            fun (__tags_to_js : __tags -> Ojs.t) ->
              fun (x3574 : __tags intf) -> intf_to_js __tags_to_js x3574
        let (get_formatMatcher :
          'tags this -> [ `L_s25_basic  | `L_s26_best_fit ] option) =
          fun (x3578 : 'tags this) ->
            Ojs.option_of_js
              (fun (x3580 : Ojs.t) ->
                 let x3581 = x3580 in
                 match Ojs.string_of_js x3581 with
                 | "basic" -> `L_s25_basic
                 | "best fit" -> `L_s26_best_fit
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3578)
                 "formatMatcher")
        let (set_formatMatcher :
          'tags this ->
            [ `U1 of [ `L_s25_basic ]  | `U2 of [ `L_s26_best_fit ] ] -> unit)
          =
          fun (x3582 : 'tags this) ->
            fun
              (x3583 :
                [ `U1 of [ `L_s25_basic ]  | `U2 of [ `L_s26_best_fit ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3582) "formatMatcher"
                (match x3583 with
                 | `U1 x3584 ->
                     (match x3584 with
                      | `L_s25_basic -> Ojs.string_to_js "basic")
                 | `U2 x3585 ->
                     (match x3585 with
                      | `L_s26_best_fit -> Ojs.string_to_js "best fit"))
        let (get_dateStyle :
          'tags this ->
            [ `L_s122_short  | `L_s63_full  | `L_s78_long  | `L_s84_medium ]
              option)
          =
          fun (x3587 : 'tags this) ->
            Ojs.option_of_js
              (fun (x3589 : Ojs.t) ->
                 let x3590 = x3589 in
                 match Ojs.string_of_js x3590 with
                 | "short" -> `L_s122_short
                 | "full" -> `L_s63_full
                 | "long" -> `L_s78_long
                 | "medium" -> `L_s84_medium
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3587) "dateStyle")
        let (set_dateStyle :
          'tags this ->
            [ `U1 of [ `L_s63_full ]  | `U2 of [ `L_s78_long ] 
            | `U3 of [ `L_s84_medium ]  | `U4 of [ `L_s122_short ] ] -> 
              unit)
          =
          fun (x3591 : 'tags this) ->
            fun
              (x3592 :
                [ `U1 of [ `L_s63_full ]  | `U2 of [ `L_s78_long ] 
                | `U3 of [ `L_s84_medium ]  | `U4 of [ `L_s122_short ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3591) "dateStyle"
                (match x3592 with
                 | `U1 x3593 ->
                     (match x3593 with
                      | `L_s63_full -> Ojs.string_to_js "full")
                 | `U2 x3594 ->
                     (match x3594 with
                      | `L_s78_long -> Ojs.string_to_js "long")
                 | `U3 x3595 ->
                     (match x3595 with
                      | `L_s84_medium -> Ojs.string_to_js "medium")
                 | `U4 x3596 ->
                     (match x3596 with
                      | `L_s122_short -> Ojs.string_to_js "short"))
        let (get_timeStyle :
          'tags this ->
            [ `L_s122_short  | `L_s63_full  | `L_s78_long  | `L_s84_medium ]
              option)
          =
          fun (x3598 : 'tags this) ->
            Ojs.option_of_js
              (fun (x3600 : Ojs.t) ->
                 let x3601 = x3600 in
                 match Ojs.string_of_js x3601 with
                 | "short" -> `L_s122_short
                 | "full" -> `L_s63_full
                 | "long" -> `L_s78_long
                 | "medium" -> `L_s84_medium
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3598) "timeStyle")
        let (set_timeStyle :
          'tags this ->
            [ `U1 of [ `L_s63_full ]  | `U2 of [ `L_s78_long ] 
            | `U3 of [ `L_s84_medium ]  | `U4 of [ `L_s122_short ] ] -> 
              unit)
          =
          fun (x3602 : 'tags this) ->
            fun
              (x3603 :
                [ `U1 of [ `L_s63_full ]  | `U2 of [ `L_s78_long ] 
                | `U3 of [ `L_s84_medium ]  | `U4 of [ `L_s122_short ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3602) "timeStyle"
                (match x3603 with
                 | `U1 x3604 ->
                     (match x3604 with
                      | `L_s63_full -> Ojs.string_to_js "full")
                 | `U2 x3605 ->
                     (match x3605 with
                      | `L_s78_long -> Ojs.string_to_js "long")
                 | `U3 x3606 ->
                     (match x3606 with
                      | `L_s84_medium -> Ojs.string_to_js "medium")
                 | `U4 x3607 ->
                     (match x3607 with
                      | `L_s122_short -> Ojs.string_to_js "short"))
        let (get_hourCycle :
          'tags this ->
            [ `L_s67_h11  | `L_s68_h12  | `L_s69_h23  | `L_s70_h24 ] option)
          =
          fun (x3609 : 'tags this) ->
            Ojs.option_of_js
              (fun (x3611 : Ojs.t) ->
                 let x3612 = x3611 in
                 match Ojs.string_of_js x3612 with
                 | "h11" -> `L_s67_h11
                 | "h12" -> `L_s68_h12
                 | "h23" -> `L_s69_h23
                 | "h24" -> `L_s70_h24
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3609) "hourCycle")
        let (set_hourCycle :
          'tags this ->
            [ `U1 of [ `L_s67_h11 ]  | `U2 of [ `L_s68_h12 ] 
            | `U3 of [ `L_s69_h23 ]  | `U4 of [ `L_s70_h24 ] ] -> unit)
          =
          fun (x3613 : 'tags this) ->
            fun
              (x3614 :
                [ `U1 of [ `L_s67_h11 ]  | `U2 of [ `L_s68_h12 ] 
                | `U3 of [ `L_s69_h23 ]  | `U4 of [ `L_s70_h24 ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3613) "hourCycle"
                (match x3614 with
                 | `U1 x3615 ->
                     (match x3615 with | `L_s67_h11 -> Ojs.string_to_js "h11")
                 | `U2 x3616 ->
                     (match x3616 with | `L_s68_h12 -> Ojs.string_to_js "h12")
                 | `U3 x3617 ->
                     (match x3617 with | `L_s69_h23 -> Ojs.string_to_js "h23")
                 | `U4 x3618 ->
                     (match x3618 with | `L_s70_h24 -> Ojs.string_to_js "h24"))
        let (get_dayPeriod :
          'tags this ->
            [ `L_s122_short  | `L_s78_long  | `L_s92_narrow ] option)
          =
          fun (x3620 : 'tags this) ->
            Ojs.option_of_js
              (fun (x3622 : Ojs.t) ->
                 let x3623 = x3622 in
                 match Ojs.string_of_js x3623 with
                 | "short" -> `L_s122_short
                 | "long" -> `L_s78_long
                 | "narrow" -> `L_s92_narrow
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3620) "dayPeriod")
        let (set_dayPeriod :
          'tags this ->
            [ `U1 of [ `L_s92_narrow ]  | `U2 of [ `L_s122_short ] 
            | `U3 of [ `L_s78_long ] ] -> unit)
          =
          fun (x3624 : 'tags this) ->
            fun
              (x3625 :
                [ `U1 of [ `L_s92_narrow ]  | `U2 of [ `L_s122_short ] 
                | `U3 of [ `L_s78_long ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3624) "dayPeriod"
                (match x3625 with
                 | `U1 x3626 ->
                     (match x3626 with
                      | `L_s92_narrow -> Ojs.string_to_js "narrow")
                 | `U2 x3627 ->
                     (match x3627 with
                      | `L_s122_short -> Ojs.string_to_js "short")
                 | `U3 x3628 ->
                     (match x3628 with
                      | `L_s78_long -> Ojs.string_to_js "long"))
        let (get_fractionalSecondDigits :
          'tags this -> [ `L_n_1  | `L_n_2  | `L_n_3 ] option) =
          fun (x3630 : 'tags this) ->
            Ojs.option_of_js
              (fun (x3632 : Ojs.t) ->
                 let x3633 = x3632 in
                 match Ojs.int_of_js x3633 with
                 | 1 -> `L_n_1
                 | 2 -> `L_n_2
                 | 3 -> `L_n_3
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3630)
                 "fractionalSecondDigits")
        let (set_fractionalSecondDigits :
          'tags this ->
            [ `U1 of [ `L_n_1 ]  | `U2 of [ `L_n_2 ]  | `U3 of [ `L_n_3 ] ]
              -> unit)
          =
          fun (x3634 : 'tags this) ->
            fun
              (x3635 :
                [ `U1 of [ `L_n_1 ]  | `U2 of [ `L_n_2 ] 
                | `U3 of [ `L_n_3 ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3634)
                "fractionalSecondDigits"
                (match x3635 with
                 | `U1 x3636 ->
                     (match x3636 with | `L_n_1 -> Ojs.int_to_js 1)
                 | `U2 x3637 ->
                     (match x3637 with | `L_n_2 -> Ojs.int_to_js 2)
                 | `U3 x3638 ->
                     (match x3638 with | `L_n_3 -> Ojs.int_to_js 3))
        let (get_locale : 'tags this -> string) =
          fun (x3640 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3640) "locale")
        let (set_locale : 'tags this -> string -> unit) =
          fun (x3642 : 'tags this) ->
            fun (x3643 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3642) "locale"
                (Ojs.string_to_js x3643)
        let (get_calendar : 'tags this -> string) =
          fun (x3645 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3645) "calendar")
        let (set_calendar : 'tags this -> string -> unit) =
          fun (x3647 : 'tags this) ->
            fun (x3648 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3647) "calendar"
                (Ojs.string_to_js x3648)
        let (get_numberingSystem : 'tags this -> string) =
          fun (x3650 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3650)
                 "numberingSystem")
        let (set_numberingSystem : 'tags this -> string -> unit) =
          fun (x3652 : 'tags this) ->
            fun (x3653 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3652)
                "numberingSystem" (Ojs.string_to_js x3653)
        let (get_timeZone : 'tags this -> string) =
          fun (x3655 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3655) "timeZone")
        let (set_timeZone : 'tags this -> string -> unit) =
          fun (x3657 : 'tags this) ->
            fun (x3658 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3657) "timeZone"
                (Ojs.string_to_js x3658)
        let (get_hour12 : 'tags this -> bool option) =
          fun (x3660 : 'tags this) ->
            Ojs.option_of_js Ojs.bool_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3660) "hour12")
        let (set_hour12 : 'tags this -> bool -> unit) =
          fun (x3663 : 'tags this) ->
            fun (x3664 : bool) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3663) "hour12"
                (Ojs.bool_to_js x3664)
        let (get_weekday : 'tags this -> string option) =
          fun (x3666 : 'tags this) ->
            Ojs.option_of_js Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3666) "weekday")
        let (set_weekday : 'tags this -> string -> unit) =
          fun (x3669 : 'tags this) ->
            fun (x3670 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3669) "weekday"
                (Ojs.string_to_js x3670)
        let (get_era : 'tags this -> string option) =
          fun (x3672 : 'tags this) ->
            Ojs.option_of_js Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3672) "era")
        let (set_era : 'tags this -> string -> unit) =
          fun (x3675 : 'tags this) ->
            fun (x3676 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3675) "era"
                (Ojs.string_to_js x3676)
        let (get_year : 'tags this -> string option) =
          fun (x3678 : 'tags this) ->
            Ojs.option_of_js Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3678) "year")
        let (set_year : 'tags this -> string -> unit) =
          fun (x3681 : 'tags this) ->
            fun (x3682 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3681) "year"
                (Ojs.string_to_js x3682)
        let (get_month : 'tags this -> string option) =
          fun (x3684 : 'tags this) ->
            Ojs.option_of_js Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3684) "month")
        let (set_month : 'tags this -> string -> unit) =
          fun (x3687 : 'tags this) ->
            fun (x3688 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3687) "month"
                (Ojs.string_to_js x3688)
        let (get_day : 'tags this -> string option) =
          fun (x3690 : 'tags this) ->
            Ojs.option_of_js Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3690) "day")
        let (set_day : 'tags this -> string -> unit) =
          fun (x3693 : 'tags this) ->
            fun (x3694 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3693) "day"
                (Ojs.string_to_js x3694)
        let (get_hour : 'tags this -> string option) =
          fun (x3696 : 'tags this) ->
            Ojs.option_of_js Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3696) "hour")
        let (set_hour : 'tags this -> string -> unit) =
          fun (x3699 : 'tags this) ->
            fun (x3700 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3699) "hour"
                (Ojs.string_to_js x3700)
        let (get_minute : 'tags this -> string option) =
          fun (x3702 : 'tags this) ->
            Ojs.option_of_js Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3702) "minute")
        let (set_minute : 'tags this -> string -> unit) =
          fun (x3705 : 'tags this) ->
            fun (x3706 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3705) "minute"
                (Ojs.string_to_js x3706)
        let (get_second : 'tags this -> string option) =
          fun (x3708 : 'tags this) ->
            Ojs.option_of_js Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3708) "second")
        let (set_second : 'tags this -> string -> unit) =
          fun (x3711 : 'tags this) ->
            fun (x3712 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3711) "second"
                (Ojs.string_to_js x3712)
        let (get_timeZoneName : 'tags this -> string option) =
          fun (x3714 : 'tags this) ->
            Ojs.option_of_js Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3714) "timeZoneName")
        let (set_timeZoneName : 'tags this -> string -> unit) =
          fun (x3717 : 'tags this) ->
            fun (x3718 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3717) "timeZoneName"
                (Ojs.string_to_js x3718)
        let (create :
          ?formatMatcher:[ `L_s25_basic  | `L_s26_best_fit ] ->
            ?dateStyle:[ `L_s122_short  | `L_s63_full  | `L_s78_long 
                       | `L_s84_medium ]
              ->
              ?timeStyle:[ `L_s122_short  | `L_s63_full  | `L_s78_long 
                         | `L_s84_medium ]
                ->
                ?hourCycle:[ `L_s67_h11  | `L_s68_h12  | `L_s69_h23 
                           | `L_s70_h24 ]
                  ->
                  ?dayPeriod:[ `L_s122_short  | `L_s78_long 
                             | `L_s92_narrow ]
                    ->
                    ?fractionalSecondDigits:[ `L_n_1  | `L_n_2  | `L_n_3 ] ->
                      locale:string ->
                        calendar:string ->
                          numberingSystem:string ->
                            timeZone:string ->
                              ?hour12:bool ->
                                ?weekday:string ->
                                  ?era:string ->
                                    ?year:string ->
                                      ?month:string ->
                                        ?day:string ->
                                          ?hour:string ->
                                            ?minute:string ->
                                              ?second:string ->
                                                ?timeZoneName:string ->
                                                  unit -> t)
          =
          fun
            ?formatMatcher:(x3720 :
                             [ `L_s25_basic  | `L_s26_best_fit ] option)
            ->
            fun
              ?dateStyle:(x3721 :
                           [ `L_s122_short  | `L_s63_full  | `L_s78_long 
                           | `L_s84_medium ] option)
              ->
              fun
                ?timeStyle:(x3722 :
                             [ `L_s122_short  | `L_s63_full  | `L_s78_long 
                             | `L_s84_medium ] option)
                ->
                fun
                  ?hourCycle:(x3723 :
                               [ `L_s67_h11  | `L_s68_h12  | `L_s69_h23 
                               | `L_s70_h24 ] option)
                  ->
                  fun
                    ?dayPeriod:(x3724 :
                                 [ `L_s122_short  | `L_s78_long 
                                 | `L_s92_narrow ] option)
                    ->
                    fun
                      ?fractionalSecondDigits:(x3725 :
                                                [ `L_n_1  | `L_n_2 
                                                | `L_n_3 ] option)
                      ->
                      fun ~locale:(x3726 : string) ->
                        fun ~calendar:(x3727 : string) ->
                          fun ~numberingSystem:(x3728 : string) ->
                            fun ~timeZone:(x3729 : string) ->
                              fun ?hour12:(x3730 : bool option) ->
                                fun ?weekday:(x3731 : string option) ->
                                  fun ?era:(x3732 : string option) ->
                                    fun ?year:(x3733 : string option) ->
                                      fun ?month:(x3734 : string option) ->
                                        fun ?day:(x3735 : string option) ->
                                          fun ?hour:(x3736 : string option)
                                            ->
                                            fun
                                              ?minute:(x3737 : string option)
                                              ->
                                              fun
                                                ?second:(x3738 :
                                                          string option)
                                                ->
                                                fun
                                                  ?timeZoneName:(x3739 :
                                                                  string
                                                                    option)
                                                  ->
                                                  fun () ->
                                                    let x3740 =
                                                      Ojs.empty_obj () in
                                                    (match x3720 with
                                                     | Some x3756 ->
                                                         Ojs.set_prop_ascii
                                                           x3740
                                                           "formatMatcher"
                                                           (match x3756 with
                                                            | `L_s25_basic ->
                                                                Ojs.string_to_js
                                                                  "basic"
                                                            | `L_s26_best_fit
                                                                ->
                                                                Ojs.string_to_js
                                                                  "best fit")
                                                     | None -> ());
                                                    (match x3721 with
                                                     | Some x3755 ->
                                                         Ojs.set_prop_ascii
                                                           x3740 "dateStyle"
                                                           (match x3755 with
                                                            | `L_s122_short
                                                                ->
                                                                Ojs.string_to_js
                                                                  "short"
                                                            | `L_s63_full ->
                                                                Ojs.string_to_js
                                                                  "full"
                                                            | `L_s78_long ->
                                                                Ojs.string_to_js
                                                                  "long"
                                                            | `L_s84_medium
                                                                ->
                                                                Ojs.string_to_js
                                                                  "medium")
                                                     | None -> ());
                                                    (match x3722 with
                                                     | Some x3754 ->
                                                         Ojs.set_prop_ascii
                                                           x3740 "timeStyle"
                                                           (match x3754 with
                                                            | `L_s122_short
                                                                ->
                                                                Ojs.string_to_js
                                                                  "short"
                                                            | `L_s63_full ->
                                                                Ojs.string_to_js
                                                                  "full"
                                                            | `L_s78_long ->
                                                                Ojs.string_to_js
                                                                  "long"
                                                            | `L_s84_medium
                                                                ->
                                                                Ojs.string_to_js
                                                                  "medium")
                                                     | None -> ());
                                                    (match x3723 with
                                                     | Some x3753 ->
                                                         Ojs.set_prop_ascii
                                                           x3740 "hourCycle"
                                                           (match x3753 with
                                                            | `L_s67_h11 ->
                                                                Ojs.string_to_js
                                                                  "h11"
                                                            | `L_s68_h12 ->
                                                                Ojs.string_to_js
                                                                  "h12"
                                                            | `L_s69_h23 ->
                                                                Ojs.string_to_js
                                                                  "h23"
                                                            | `L_s70_h24 ->
                                                                Ojs.string_to_js
                                                                  "h24")
                                                     | None -> ());
                                                    (match x3724 with
                                                     | Some x3752 ->
                                                         Ojs.set_prop_ascii
                                                           x3740 "dayPeriod"
                                                           (match x3752 with
                                                            | `L_s122_short
                                                                ->
                                                                Ojs.string_to_js
                                                                  "short"
                                                            | `L_s78_long ->
                                                                Ojs.string_to_js
                                                                  "long"
                                                            | `L_s92_narrow
                                                                ->
                                                                Ojs.string_to_js
                                                                  "narrow")
                                                     | None -> ());
                                                    (match x3725 with
                                                     | Some x3751 ->
                                                         Ojs.set_prop_ascii
                                                           x3740
                                                           "fractionalSecondDigits"
                                                           (match x3751 with
                                                            | `L_n_1 ->
                                                                Ojs.int_to_js
                                                                  1
                                                            | `L_n_2 ->
                                                                Ojs.int_to_js
                                                                  2
                                                            | `L_n_3 ->
                                                                Ojs.int_to_js
                                                                  3)
                                                     | None -> ());
                                                    Ojs.set_prop_ascii x3740
                                                      "locale"
                                                      (Ojs.string_to_js x3726);
                                                    Ojs.set_prop_ascii x3740
                                                      "calendar"
                                                      (Ojs.string_to_js x3727);
                                                    Ojs.set_prop_ascii x3740
                                                      "numberingSystem"
                                                      (Ojs.string_to_js x3728);
                                                    Ojs.set_prop_ascii x3740
                                                      "timeZone"
                                                      (Ojs.string_to_js x3729);
                                                    (match x3730 with
                                                     | Some x3750 ->
                                                         Ojs.set_prop_ascii
                                                           x3740 "hour12"
                                                           (Ojs.bool_to_js
                                                              x3750)
                                                     | None -> ());
                                                    (match x3731 with
                                                     | Some x3749 ->
                                                         Ojs.set_prop_ascii
                                                           x3740 "weekday"
                                                           (Ojs.string_to_js
                                                              x3749)
                                                     | None -> ());
                                                    (match x3732 with
                                                     | Some x3748 ->
                                                         Ojs.set_prop_ascii
                                                           x3740 "era"
                                                           (Ojs.string_to_js
                                                              x3748)
                                                     | None -> ());
                                                    (match x3733 with
                                                     | Some x3747 ->
                                                         Ojs.set_prop_ascii
                                                           x3740 "year"
                                                           (Ojs.string_to_js
                                                              x3747)
                                                     | None -> ());
                                                    (match x3734 with
                                                     | Some x3746 ->
                                                         Ojs.set_prop_ascii
                                                           x3740 "month"
                                                           (Ojs.string_to_js
                                                              x3746)
                                                     | None -> ());
                                                    (match x3735 with
                                                     | Some x3745 ->
                                                         Ojs.set_prop_ascii
                                                           x3740 "day"
                                                           (Ojs.string_to_js
                                                              x3745)
                                                     | None -> ());
                                                    (match x3736 with
                                                     | Some x3744 ->
                                                         Ojs.set_prop_ascii
                                                           x3740 "hour"
                                                           (Ojs.string_to_js
                                                              x3744)
                                                     | None -> ());
                                                    (match x3737 with
                                                     | Some x3743 ->
                                                         Ojs.set_prop_ascii
                                                           x3740 "minute"
                                                           (Ojs.string_to_js
                                                              x3743)
                                                     | None -> ());
                                                    (match x3738 with
                                                     | Some x3742 ->
                                                         Ojs.set_prop_ascii
                                                           x3740 "second"
                                                           (Ojs.string_to_js
                                                              x3742)
                                                     | None -> ());
                                                    (match x3739 with
                                                     | Some x3741 ->
                                                         Ojs.set_prop_ascii
                                                           x3740
                                                           "timeZoneName"
                                                           (Ojs.string_to_js
                                                              x3741)
                                                     | None -> ());
                                                    t_of_js x3740
        let cast_from = Obj.magic
      end
    module DateTimeFormatPartTypes =
      struct
        type t =
          [ `L_s118_second  | `L_s132_timeZoneName  | `L_s138_unknown 
          | `L_s142_weekday  | `L_s145_year  | `L_s38_day 
          | `L_s39_dayPeriod  | `L_s53_era  | `L_s61_fractionalSecond 
          | `L_s71_hour  | `L_s76_literal  | `L_s86_minute  | `L_s88_month ]
        let rec t_of_js : Ojs.t -> t =
          fun (x3758 : Ojs.t) ->
            let x3759 = x3758 in
            match Ojs.string_of_js x3759 with
            | "second" -> `L_s118_second
            | "timeZoneName" -> `L_s132_timeZoneName
            | "unknown" -> `L_s138_unknown
            | "weekday" -> `L_s142_weekday
            | "year" -> `L_s145_year
            | "day" -> `L_s38_day
            | "dayPeriod" -> `L_s39_dayPeriod
            | "era" -> `L_s53_era
            | "fractionalSecond" -> `L_s61_fractionalSecond
            | "hour" -> `L_s71_hour
            | "literal" -> `L_s76_literal
            | "minute" -> `L_s86_minute
            | "month" -> `L_s88_month
            | _ -> assert false
        and t_to_js : t -> Ojs.t =
          fun
            (x3757 :
              [ `L_s118_second  | `L_s132_timeZoneName  | `L_s138_unknown 
              | `L_s142_weekday  | `L_s145_year  | `L_s38_day 
              | `L_s39_dayPeriod  | `L_s53_era  | `L_s61_fractionalSecond 
              | `L_s71_hour  | `L_s76_literal  | `L_s86_minute 
              | `L_s88_month ])
            ->
            match x3757 with
            | `L_s118_second -> Ojs.string_to_js "second"
            | `L_s132_timeZoneName -> Ojs.string_to_js "timeZoneName"
            | `L_s138_unknown -> Ojs.string_to_js "unknown"
            | `L_s142_weekday -> Ojs.string_to_js "weekday"
            | `L_s145_year -> Ojs.string_to_js "year"
            | `L_s38_day -> Ojs.string_to_js "day"
            | `L_s39_dayPeriod -> Ojs.string_to_js "dayPeriod"
            | `L_s53_era -> Ojs.string_to_js "era"
            | `L_s61_fractionalSecond -> Ojs.string_to_js "fractionalSecond"
            | `L_s71_hour -> Ojs.string_to_js "hour"
            | `L_s76_literal -> Ojs.string_to_js "literal"
            | `L_s86_minute -> Ojs.string_to_js "minute"
            | `L_s88_month -> Ojs.string_to_js "month"
      end
    module DateTimeFormatPart =
      struct
        type t = [ `Intl_DateTimeFormatPart ] intf
        let rec t_of_js : Ojs.t -> t = Obj.magic
        and t_to_js : t -> Ojs.t = Obj.magic
        type tags = [ `Intl_DateTimeFormatPart ]
        type 'tags this =
          'tags intf constraint 'tags = [> `Intl_DateTimeFormatPart ]
        let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
          =
          fun (type __tags) ->
            fun (__tags_of_js : Ojs.t -> __tags) ->
              fun (x3762 : Ojs.t) -> intf_of_js __tags_of_js x3762
        and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
          fun (type __tags) ->
            fun (__tags_to_js : __tags -> Ojs.t) ->
              fun (x3760 : __tags intf) -> intf_to_js __tags_to_js x3760
        let (get_type : 'tags this -> DateTimeFormatPartTypes.t) =
          fun (x3764 : 'tags this) ->
            DateTimeFormatPartTypes.t_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3764) "type")
        let (set_type : 'tags this -> DateTimeFormatPartTypes.t -> unit) =
          fun (x3766 : 'tags this) ->
            fun (x3767 : DateTimeFormatPartTypes.t) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3766) "type"
                (DateTimeFormatPartTypes.t_to_js x3767)
        let (get_value : 'tags this -> string) =
          fun (x3769 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3769) "value")
        let (set_value : 'tags this -> string -> unit) =
          fun (x3771 : 'tags this) ->
            fun (x3772 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3771) "value"
                (Ojs.string_to_js x3772)
        let (create :
          type_:DateTimeFormatPartTypes.t -> value:string -> unit -> t) =
          fun ~type_:(x3774 : DateTimeFormatPartTypes.t) ->
            fun ~value:(x3775 : string) ->
              fun () ->
                let x3776 = Ojs.empty_obj () in
                Ojs.set_prop_ascii x3776 "type"
                  (DateTimeFormatPartTypes.t_to_js x3774);
                Ojs.set_prop_ascii x3776 "value" (Ojs.string_to_js x3775);
                t_of_js x3776
        let cast_from = Obj.magic
      end
    module DateTimeRangeFormatPart =
      struct
        type t =
          [ `Intl_DateTimeFormatPart  | `Intl_DateTimeRangeFormatPart ] intf
        let rec t_of_js : Ojs.t -> t = Obj.magic
        and t_to_js : t -> Ojs.t = Obj.magic
        type tags =
          [ `Intl_DateTimeFormatPart  | `Intl_DateTimeRangeFormatPart ]
        type 'tags this =
          'tags intf constraint 'tags = [> `Intl_DateTimeRangeFormatPart ]
        let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
          =
          fun (type __tags) ->
            fun (__tags_of_js : Ojs.t -> __tags) ->
              fun (x3779 : Ojs.t) -> intf_of_js __tags_of_js x3779
        and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
          fun (type __tags) ->
            fun (__tags_to_js : __tags -> Ojs.t) ->
              fun (x3777 : __tags intf) -> intf_to_js __tags_to_js x3777
        let (get_source :
          'tags this ->
            [ `L_s121_shared  | `L_s127_startRange  | `L_s50_endRange ])
          =
          fun (x3781 : 'tags this) ->
            let x3783 =
              Ojs.get_prop_ascii (this_to_js Obj.magic x3781) "source" in
            match Ojs.string_of_js x3783 with
            | "shared" -> `L_s121_shared
            | "startRange" -> `L_s127_startRange
            | "endRange" -> `L_s50_endRange
            | _ -> assert false
        let (set_source :
          'tags this ->
            [ `U1 of [ `L_s127_startRange ]  | `U2 of [ `L_s50_endRange ] 
            | `U3 of [ `L_s121_shared ] ] -> unit)
          =
          fun (x3784 : 'tags this) ->
            fun
              (x3785 :
                [ `U1 of [ `L_s127_startRange ] 
                | `U2 of [ `L_s50_endRange ]  | `U3 of [ `L_s121_shared ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3784) "source"
                (match x3785 with
                 | `U1 x3786 ->
                     (match x3786 with
                      | `L_s127_startRange -> Ojs.string_to_js "startRange")
                 | `U2 x3787 ->
                     (match x3787 with
                      | `L_s50_endRange -> Ojs.string_to_js "endRange")
                 | `U3 x3788 ->
                     (match x3788 with
                      | `L_s121_shared -> Ojs.string_to_js "shared"))
        let (create :
          source:[ `L_s121_shared  | `L_s127_startRange  | `L_s50_endRange ]
            -> unit -> t)
          =
          fun
            ~source:(x3790 :
                      [ `L_s121_shared  | `L_s127_startRange 
                      | `L_s50_endRange ])
            ->
            fun () ->
              let x3791 = Ojs.empty_obj () in
              Ojs.set_prop_ascii x3791 "source"
                (match x3790 with
                 | `L_s121_shared -> Ojs.string_to_js "shared"
                 | `L_s127_startRange -> Ojs.string_to_js "startRange"
                 | `L_s50_endRange -> Ojs.string_to_js "endRange");
              t_of_js x3791
        let cast_from = Obj.magic
      end
    module DateTimeFormatOptions =
      struct
        type t = [ `Intl_DateTimeFormatOptions ] intf
        let rec t_of_js : Ojs.t -> t = Obj.magic
        and t_to_js : t -> Ojs.t = Obj.magic
        type tags = [ `Intl_DateTimeFormatOptions ]
        type 'tags this =
          'tags intf constraint 'tags = [> `Intl_DateTimeFormatOptions ]
        let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
          =
          fun (type __tags) ->
            fun (__tags_of_js : Ojs.t -> __tags) ->
              fun (x3794 : Ojs.t) -> intf_of_js __tags_of_js x3794
        and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
          fun (type __tags) ->
            fun (__tags_to_js : __tags -> Ojs.t) ->
              fun (x3792 : __tags intf) -> intf_to_js __tags_to_js x3792
        let (get_formatMatcher :
          'tags this -> [ `L_s25_basic  | `L_s26_best_fit ] option) =
          fun (x3796 : 'tags this) ->
            Ojs.option_of_js
              (fun (x3798 : Ojs.t) ->
                 let x3799 = x3798 in
                 match Ojs.string_of_js x3799 with
                 | "basic" -> `L_s25_basic
                 | "best fit" -> `L_s26_best_fit
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3796)
                 "formatMatcher")
        let (set_formatMatcher :
          'tags this ->
            [ `Undefined of undefined  | `U1 of [ `L_s25_basic ] 
            | `U2 of [ `L_s26_best_fit ] ] -> unit)
          =
          fun (x3800 : 'tags this) ->
            fun
              (x3801 :
                [ `Undefined of undefined  | `U1 of [ `L_s25_basic ] 
                | `U2 of [ `L_s26_best_fit ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3800) "formatMatcher"
                (match x3801 with
                 | `Undefined x3802 -> undefined_to_js x3802
                 | `U1 x3803 ->
                     (match x3803 with
                      | `L_s25_basic -> Ojs.string_to_js "basic")
                 | `U2 x3804 ->
                     (match x3804 with
                      | `L_s26_best_fit -> Ojs.string_to_js "best fit"))
        let (get_dateStyle :
          'tags this ->
            [ `L_s122_short  | `L_s63_full  | `L_s78_long  | `L_s84_medium ]
              option)
          =
          fun (x3806 : 'tags this) ->
            Ojs.option_of_js
              (fun (x3808 : Ojs.t) ->
                 let x3809 = x3808 in
                 match Ojs.string_of_js x3809 with
                 | "short" -> `L_s122_short
                 | "full" -> `L_s63_full
                 | "long" -> `L_s78_long
                 | "medium" -> `L_s84_medium
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3806) "dateStyle")
        let (set_dateStyle :
          'tags this ->
            [ `Undefined of undefined  | `U1 of [ `L_s63_full ] 
            | `U2 of [ `L_s78_long ]  | `U3 of [ `L_s84_medium ] 
            | `U4 of [ `L_s122_short ] ] -> unit)
          =
          fun (x3810 : 'tags this) ->
            fun
              (x3811 :
                [ `Undefined of undefined  | `U1 of [ `L_s63_full ] 
                | `U2 of [ `L_s78_long ]  | `U3 of [ `L_s84_medium ] 
                | `U4 of [ `L_s122_short ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3810) "dateStyle"
                (match x3811 with
                 | `Undefined x3812 -> undefined_to_js x3812
                 | `U1 x3813 ->
                     (match x3813 with
                      | `L_s63_full -> Ojs.string_to_js "full")
                 | `U2 x3814 ->
                     (match x3814 with
                      | `L_s78_long -> Ojs.string_to_js "long")
                 | `U3 x3815 ->
                     (match x3815 with
                      | `L_s84_medium -> Ojs.string_to_js "medium")
                 | `U4 x3816 ->
                     (match x3816 with
                      | `L_s122_short -> Ojs.string_to_js "short"))
        let (get_timeStyle :
          'tags this ->
            [ `L_s122_short  | `L_s63_full  | `L_s78_long  | `L_s84_medium ]
              option)
          =
          fun (x3818 : 'tags this) ->
            Ojs.option_of_js
              (fun (x3820 : Ojs.t) ->
                 let x3821 = x3820 in
                 match Ojs.string_of_js x3821 with
                 | "short" -> `L_s122_short
                 | "full" -> `L_s63_full
                 | "long" -> `L_s78_long
                 | "medium" -> `L_s84_medium
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3818) "timeStyle")
        let (set_timeStyle :
          'tags this ->
            [ `Undefined of undefined  | `U1 of [ `L_s63_full ] 
            | `U2 of [ `L_s78_long ]  | `U3 of [ `L_s84_medium ] 
            | `U4 of [ `L_s122_short ] ] -> unit)
          =
          fun (x3822 : 'tags this) ->
            fun
              (x3823 :
                [ `Undefined of undefined  | `U1 of [ `L_s63_full ] 
                | `U2 of [ `L_s78_long ]  | `U3 of [ `L_s84_medium ] 
                | `U4 of [ `L_s122_short ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3822) "timeStyle"
                (match x3823 with
                 | `Undefined x3824 -> undefined_to_js x3824
                 | `U1 x3825 ->
                     (match x3825 with
                      | `L_s63_full -> Ojs.string_to_js "full")
                 | `U2 x3826 ->
                     (match x3826 with
                      | `L_s78_long -> Ojs.string_to_js "long")
                 | `U3 x3827 ->
                     (match x3827 with
                      | `L_s84_medium -> Ojs.string_to_js "medium")
                 | `U4 x3828 ->
                     (match x3828 with
                      | `L_s122_short -> Ojs.string_to_js "short"))
        let (get_dayPeriod :
          'tags this ->
            [ `L_s122_short  | `L_s78_long  | `L_s92_narrow ] option)
          =
          fun (x3830 : 'tags this) ->
            Ojs.option_of_js
              (fun (x3832 : Ojs.t) ->
                 let x3833 = x3832 in
                 match Ojs.string_of_js x3833 with
                 | "short" -> `L_s122_short
                 | "long" -> `L_s78_long
                 | "narrow" -> `L_s92_narrow
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3830) "dayPeriod")
        let (set_dayPeriod :
          'tags this ->
            [ `Undefined of undefined  | `U1 of [ `L_s92_narrow ] 
            | `U2 of [ `L_s122_short ]  | `U3 of [ `L_s78_long ] ] -> 
              unit)
          =
          fun (x3834 : 'tags this) ->
            fun
              (x3835 :
                [ `Undefined of undefined  | `U1 of [ `L_s92_narrow ] 
                | `U2 of [ `L_s122_short ]  | `U3 of [ `L_s78_long ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3834) "dayPeriod"
                (match x3835 with
                 | `Undefined x3836 -> undefined_to_js x3836
                 | `U1 x3837 ->
                     (match x3837 with
                      | `L_s92_narrow -> Ojs.string_to_js "narrow")
                 | `U2 x3838 ->
                     (match x3838 with
                      | `L_s122_short -> Ojs.string_to_js "short")
                 | `U3 x3839 ->
                     (match x3839 with
                      | `L_s78_long -> Ojs.string_to_js "long"))
        let (get_fractionalSecondDigits :
          'tags this -> [ `L_n_1  | `L_n_2  | `L_n_3 ] option) =
          fun (x3841 : 'tags this) ->
            Ojs.option_of_js
              (fun (x3843 : Ojs.t) ->
                 let x3844 = x3843 in
                 match Ojs.int_of_js x3844 with
                 | 1 -> `L_n_1
                 | 2 -> `L_n_2
                 | 3 -> `L_n_3
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3841)
                 "fractionalSecondDigits")
        let (set_fractionalSecondDigits :
          'tags this ->
            [ `Undefined of undefined  | `U1 of [ `L_n_1 ] 
            | `U2 of [ `L_n_2 ]  | `U3 of [ `L_n_3 ] ] -> unit)
          =
          fun (x3845 : 'tags this) ->
            fun
              (x3846 :
                [ `Undefined of undefined  | `U1 of [ `L_n_1 ] 
                | `U2 of [ `L_n_2 ]  | `U3 of [ `L_n_3 ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3845)
                "fractionalSecondDigits"
                (match x3846 with
                 | `Undefined x3847 -> undefined_to_js x3847
                 | `U1 x3848 ->
                     (match x3848 with | `L_n_1 -> Ojs.int_to_js 1)
                 | `U2 x3849 ->
                     (match x3849 with | `L_n_2 -> Ojs.int_to_js 2)
                 | `U3 x3850 ->
                     (match x3850 with | `L_n_3 -> Ojs.int_to_js 3))
        let (get_calendar : 'tags this -> string option) =
          fun (x3852 : 'tags this) ->
            Ojs.option_of_js Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3852) "calendar")
        let (set_calendar :
          'tags this -> [ `Undefined of undefined  | `U1 of string ] -> unit)
          =
          fun (x3855 : 'tags this) ->
            fun (x3856 : [ `Undefined of undefined  | `U1 of string ]) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3855) "calendar"
                (match x3856 with
                 | `Undefined x3857 -> undefined_to_js x3857
                 | `U1 x3858 -> Ojs.string_to_js x3858)
        let (get_dayPeriod' :
          'tags this ->
            [ `L_s122_short  | `L_s78_long  | `L_s92_narrow ] option)
          =
          fun (x3860 : 'tags this) ->
            Ojs.option_of_js
              (fun (x3862 : Ojs.t) ->
                 let x3863 = x3862 in
                 match Ojs.string_of_js x3863 with
                 | "short" -> `L_s122_short
                 | "long" -> `L_s78_long
                 | "narrow" -> `L_s92_narrow
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3860) "dayPeriod")
        let (set_dayPeriod' :
          'tags this ->
            [ `Undefined of undefined  | `U1 of [ `L_s92_narrow ] 
            | `U2 of [ `L_s122_short ]  | `U3 of [ `L_s78_long ] ] -> 
              unit)
          =
          fun (x3864 : 'tags this) ->
            fun
              (x3865 :
                [ `Undefined of undefined  | `U1 of [ `L_s92_narrow ] 
                | `U2 of [ `L_s122_short ]  | `U3 of [ `L_s78_long ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3864) "dayPeriod"
                (match x3865 with
                 | `Undefined x3866 -> undefined_to_js x3866
                 | `U1 x3867 ->
                     (match x3867 with
                      | `L_s92_narrow -> Ojs.string_to_js "narrow")
                 | `U2 x3868 ->
                     (match x3868 with
                      | `L_s122_short -> Ojs.string_to_js "short")
                 | `U3 x3869 ->
                     (match x3869 with
                      | `L_s78_long -> Ojs.string_to_js "long"))
        let (get_numberingSystem : 'tags this -> string option) =
          fun (x3871 : 'tags this) ->
            Ojs.option_of_js Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3871)
                 "numberingSystem")
        let (set_numberingSystem :
          'tags this -> [ `Undefined of undefined  | `U1 of string ] -> unit)
          =
          fun (x3874 : 'tags this) ->
            fun (x3875 : [ `Undefined of undefined  | `U1 of string ]) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3874)
                "numberingSystem"
                (match x3875 with
                 | `Undefined x3876 -> undefined_to_js x3876
                 | `U1 x3877 -> Ojs.string_to_js x3877)
        let (get_dateStyle' :
          'tags this ->
            [ `L_s122_short  | `L_s63_full  | `L_s78_long  | `L_s84_medium ]
              option)
          =
          fun (x3879 : 'tags this) ->
            Ojs.option_of_js
              (fun (x3881 : Ojs.t) ->
                 let x3882 = x3881 in
                 match Ojs.string_of_js x3882 with
                 | "short" -> `L_s122_short
                 | "full" -> `L_s63_full
                 | "long" -> `L_s78_long
                 | "medium" -> `L_s84_medium
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3879) "dateStyle")
        let (set_dateStyle' :
          'tags this ->
            [ `Undefined of undefined  | `U1 of [ `L_s63_full ] 
            | `U2 of [ `L_s78_long ]  | `U3 of [ `L_s84_medium ] 
            | `U4 of [ `L_s122_short ] ] -> unit)
          =
          fun (x3883 : 'tags this) ->
            fun
              (x3884 :
                [ `Undefined of undefined  | `U1 of [ `L_s63_full ] 
                | `U2 of [ `L_s78_long ]  | `U3 of [ `L_s84_medium ] 
                | `U4 of [ `L_s122_short ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3883) "dateStyle"
                (match x3884 with
                 | `Undefined x3885 -> undefined_to_js x3885
                 | `U1 x3886 ->
                     (match x3886 with
                      | `L_s63_full -> Ojs.string_to_js "full")
                 | `U2 x3887 ->
                     (match x3887 with
                      | `L_s78_long -> Ojs.string_to_js "long")
                 | `U3 x3888 ->
                     (match x3888 with
                      | `L_s84_medium -> Ojs.string_to_js "medium")
                 | `U4 x3889 ->
                     (match x3889 with
                      | `L_s122_short -> Ojs.string_to_js "short"))
        let (get_timeStyle' :
          'tags this ->
            [ `L_s122_short  | `L_s63_full  | `L_s78_long  | `L_s84_medium ]
              option)
          =
          fun (x3891 : 'tags this) ->
            Ojs.option_of_js
              (fun (x3893 : Ojs.t) ->
                 let x3894 = x3893 in
                 match Ojs.string_of_js x3894 with
                 | "short" -> `L_s122_short
                 | "full" -> `L_s63_full
                 | "long" -> `L_s78_long
                 | "medium" -> `L_s84_medium
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3891) "timeStyle")
        let (set_timeStyle' :
          'tags this ->
            [ `Undefined of undefined  | `U1 of [ `L_s63_full ] 
            | `U2 of [ `L_s78_long ]  | `U3 of [ `L_s84_medium ] 
            | `U4 of [ `L_s122_short ] ] -> unit)
          =
          fun (x3895 : 'tags this) ->
            fun
              (x3896 :
                [ `Undefined of undefined  | `U1 of [ `L_s63_full ] 
                | `U2 of [ `L_s78_long ]  | `U3 of [ `L_s84_medium ] 
                | `U4 of [ `L_s122_short ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3895) "timeStyle"
                (match x3896 with
                 | `Undefined x3897 -> undefined_to_js x3897
                 | `U1 x3898 ->
                     (match x3898 with
                      | `L_s63_full -> Ojs.string_to_js "full")
                 | `U2 x3899 ->
                     (match x3899 with
                      | `L_s78_long -> Ojs.string_to_js "long")
                 | `U3 x3900 ->
                     (match x3900 with
                      | `L_s84_medium -> Ojs.string_to_js "medium")
                 | `U4 x3901 ->
                     (match x3901 with
                      | `L_s122_short -> Ojs.string_to_js "short"))
        let (get_hourCycle :
          'tags this ->
            [ `L_s67_h11  | `L_s68_h12  | `L_s69_h23  | `L_s70_h24 ] option)
          =
          fun (x3903 : 'tags this) ->
            Ojs.option_of_js
              (fun (x3905 : Ojs.t) ->
                 let x3906 = x3905 in
                 match Ojs.string_of_js x3906 with
                 | "h11" -> `L_s67_h11
                 | "h12" -> `L_s68_h12
                 | "h23" -> `L_s69_h23
                 | "h24" -> `L_s70_h24
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3903) "hourCycle")
        let (set_hourCycle :
          'tags this ->
            [ `Undefined of undefined  | `U1 of [ `L_s67_h11 ] 
            | `U2 of [ `L_s68_h12 ]  | `U3 of [ `L_s69_h23 ] 
            | `U4 of [ `L_s70_h24 ] ] -> unit)
          =
          fun (x3907 : 'tags this) ->
            fun
              (x3908 :
                [ `Undefined of undefined  | `U1 of [ `L_s67_h11 ] 
                | `U2 of [ `L_s68_h12 ]  | `U3 of [ `L_s69_h23 ] 
                | `U4 of [ `L_s70_h24 ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3907) "hourCycle"
                (match x3908 with
                 | `Undefined x3909 -> undefined_to_js x3909
                 | `U1 x3910 ->
                     (match x3910 with | `L_s67_h11 -> Ojs.string_to_js "h11")
                 | `U2 x3911 ->
                     (match x3911 with | `L_s68_h12 -> Ojs.string_to_js "h12")
                 | `U3 x3912 ->
                     (match x3912 with | `L_s69_h23 -> Ojs.string_to_js "h23")
                 | `U4 x3913 ->
                     (match x3913 with | `L_s70_h24 -> Ojs.string_to_js "h24"))
        let (get_localeMatcher :
          'tags this -> [ `L_s26_best_fit  | `L_s81_lookup ] option) =
          fun (x3915 : 'tags this) ->
            Ojs.option_of_js
              (fun (x3917 : Ojs.t) ->
                 let x3918 = x3917 in
                 match Ojs.string_of_js x3918 with
                 | "best fit" -> `L_s26_best_fit
                 | "lookup" -> `L_s81_lookup
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3915)
                 "localeMatcher")
        let (set_localeMatcher :
          'tags this ->
            [ `Undefined of undefined  | `U1 of [ `L_s26_best_fit ] 
            | `U2 of [ `L_s81_lookup ] ] -> unit)
          =
          fun (x3919 : 'tags this) ->
            fun
              (x3920 :
                [ `Undefined of undefined  | `U1 of [ `L_s26_best_fit ] 
                | `U2 of [ `L_s81_lookup ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3919) "localeMatcher"
                (match x3920 with
                 | `Undefined x3921 -> undefined_to_js x3921
                 | `U1 x3922 ->
                     (match x3922 with
                      | `L_s26_best_fit -> Ojs.string_to_js "best fit")
                 | `U2 x3923 ->
                     (match x3923 with
                      | `L_s81_lookup -> Ojs.string_to_js "lookup"))
        let (get_weekday :
          'tags this ->
            [ `L_s122_short  | `L_s78_long  | `L_s92_narrow ] option)
          =
          fun (x3925 : 'tags this) ->
            Ojs.option_of_js
              (fun (x3927 : Ojs.t) ->
                 let x3928 = x3927 in
                 match Ojs.string_of_js x3928 with
                 | "short" -> `L_s122_short
                 | "long" -> `L_s78_long
                 | "narrow" -> `L_s92_narrow
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3925) "weekday")
        let (set_weekday :
          'tags this ->
            [ `Undefined of undefined  | `U1 of [ `L_s78_long ] 
            | `U2 of [ `L_s122_short ]  | `U3 of [ `L_s92_narrow ] ] -> 
              unit)
          =
          fun (x3929 : 'tags this) ->
            fun
              (x3930 :
                [ `Undefined of undefined  | `U1 of [ `L_s78_long ] 
                | `U2 of [ `L_s122_short ]  | `U3 of [ `L_s92_narrow ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3929) "weekday"
                (match x3930 with
                 | `Undefined x3931 -> undefined_to_js x3931
                 | `U1 x3932 ->
                     (match x3932 with
                      | `L_s78_long -> Ojs.string_to_js "long")
                 | `U2 x3933 ->
                     (match x3933 with
                      | `L_s122_short -> Ojs.string_to_js "short")
                 | `U3 x3934 ->
                     (match x3934 with
                      | `L_s92_narrow -> Ojs.string_to_js "narrow"))
        let (get_era :
          'tags this ->
            [ `L_s122_short  | `L_s78_long  | `L_s92_narrow ] option)
          =
          fun (x3936 : 'tags this) ->
            Ojs.option_of_js
              (fun (x3938 : Ojs.t) ->
                 let x3939 = x3938 in
                 match Ojs.string_of_js x3939 with
                 | "short" -> `L_s122_short
                 | "long" -> `L_s78_long
                 | "narrow" -> `L_s92_narrow
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3936) "era")
        let (set_era :
          'tags this ->
            [ `Undefined of undefined  | `U1 of [ `L_s78_long ] 
            | `U2 of [ `L_s122_short ]  | `U3 of [ `L_s92_narrow ] ] -> 
              unit)
          =
          fun (x3940 : 'tags this) ->
            fun
              (x3941 :
                [ `Undefined of undefined  | `U1 of [ `L_s78_long ] 
                | `U2 of [ `L_s122_short ]  | `U3 of [ `L_s92_narrow ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3940) "era"
                (match x3941 with
                 | `Undefined x3942 -> undefined_to_js x3942
                 | `U1 x3943 ->
                     (match x3943 with
                      | `L_s78_long -> Ojs.string_to_js "long")
                 | `U2 x3944 ->
                     (match x3944 with
                      | `L_s122_short -> Ojs.string_to_js "short")
                 | `U3 x3945 ->
                     (match x3945 with
                      | `L_s92_narrow -> Ojs.string_to_js "narrow"))
        let (get_year :
          'tags this -> [ `L_s0_2_digit  | `L_s98_numeric ] option) =
          fun (x3947 : 'tags this) ->
            Ojs.option_of_js
              (fun (x3949 : Ojs.t) ->
                 let x3950 = x3949 in
                 match Ojs.string_of_js x3950 with
                 | "2-digit" -> `L_s0_2_digit
                 | "numeric" -> `L_s98_numeric
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3947) "year")
        let (set_year :
          'tags this ->
            [ `Undefined of undefined  | `U1 of [ `L_s98_numeric ] 
            | `U2 of [ `L_s0_2_digit ] ] -> unit)
          =
          fun (x3951 : 'tags this) ->
            fun
              (x3952 :
                [ `Undefined of undefined  | `U1 of [ `L_s98_numeric ] 
                | `U2 of [ `L_s0_2_digit ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3951) "year"
                (match x3952 with
                 | `Undefined x3953 -> undefined_to_js x3953
                 | `U1 x3954 ->
                     (match x3954 with
                      | `L_s98_numeric -> Ojs.string_to_js "numeric")
                 | `U2 x3955 ->
                     (match x3955 with
                      | `L_s0_2_digit -> Ojs.string_to_js "2-digit"))
        let (get_month :
          'tags this ->
            [ `L_s0_2_digit  | `L_s122_short  | `L_s78_long  | `L_s92_narrow 
            | `L_s98_numeric ] option)
          =
          fun (x3957 : 'tags this) ->
            Ojs.option_of_js
              (fun (x3959 : Ojs.t) ->
                 let x3960 = x3959 in
                 match Ojs.string_of_js x3960 with
                 | "2-digit" -> `L_s0_2_digit
                 | "short" -> `L_s122_short
                 | "long" -> `L_s78_long
                 | "narrow" -> `L_s92_narrow
                 | "numeric" -> `L_s98_numeric
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3957) "month")
        let (set_month :
          'tags this ->
            [ `Undefined of undefined  | `U1 of [ `L_s98_numeric ] 
            | `U2 of [ `L_s0_2_digit ]  | `U3 of [ `L_s78_long ] 
            | `U4 of [ `L_s122_short ]  | `U5 of [ `L_s92_narrow ] ] -> 
              unit)
          =
          fun (x3961 : 'tags this) ->
            fun
              (x3962 :
                [ `Undefined of undefined  | `U1 of [ `L_s98_numeric ] 
                | `U2 of [ `L_s0_2_digit ]  | `U3 of [ `L_s78_long ] 
                | `U4 of [ `L_s122_short ]  | `U5 of [ `L_s92_narrow ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3961) "month"
                (match x3962 with
                 | `Undefined x3963 -> undefined_to_js x3963
                 | `U1 x3964 ->
                     (match x3964 with
                      | `L_s98_numeric -> Ojs.string_to_js "numeric")
                 | `U2 x3965 ->
                     (match x3965 with
                      | `L_s0_2_digit -> Ojs.string_to_js "2-digit")
                 | `U3 x3966 ->
                     (match x3966 with
                      | `L_s78_long -> Ojs.string_to_js "long")
                 | `U4 x3967 ->
                     (match x3967 with
                      | `L_s122_short -> Ojs.string_to_js "short")
                 | `U5 x3968 ->
                     (match x3968 with
                      | `L_s92_narrow -> Ojs.string_to_js "narrow"))
        let (get_day :
          'tags this -> [ `L_s0_2_digit  | `L_s98_numeric ] option) =
          fun (x3970 : 'tags this) ->
            Ojs.option_of_js
              (fun (x3972 : Ojs.t) ->
                 let x3973 = x3972 in
                 match Ojs.string_of_js x3973 with
                 | "2-digit" -> `L_s0_2_digit
                 | "numeric" -> `L_s98_numeric
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3970) "day")
        let (set_day :
          'tags this ->
            [ `Undefined of undefined  | `U1 of [ `L_s98_numeric ] 
            | `U2 of [ `L_s0_2_digit ] ] -> unit)
          =
          fun (x3974 : 'tags this) ->
            fun
              (x3975 :
                [ `Undefined of undefined  | `U1 of [ `L_s98_numeric ] 
                | `U2 of [ `L_s0_2_digit ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3974) "day"
                (match x3975 with
                 | `Undefined x3976 -> undefined_to_js x3976
                 | `U1 x3977 ->
                     (match x3977 with
                      | `L_s98_numeric -> Ojs.string_to_js "numeric")
                 | `U2 x3978 ->
                     (match x3978 with
                      | `L_s0_2_digit -> Ojs.string_to_js "2-digit"))
        let (get_hour :
          'tags this -> [ `L_s0_2_digit  | `L_s98_numeric ] option) =
          fun (x3980 : 'tags this) ->
            Ojs.option_of_js
              (fun (x3982 : Ojs.t) ->
                 let x3983 = x3982 in
                 match Ojs.string_of_js x3983 with
                 | "2-digit" -> `L_s0_2_digit
                 | "numeric" -> `L_s98_numeric
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3980) "hour")
        let (set_hour :
          'tags this ->
            [ `Undefined of undefined  | `U1 of [ `L_s98_numeric ] 
            | `U2 of [ `L_s0_2_digit ] ] -> unit)
          =
          fun (x3984 : 'tags this) ->
            fun
              (x3985 :
                [ `Undefined of undefined  | `U1 of [ `L_s98_numeric ] 
                | `U2 of [ `L_s0_2_digit ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3984) "hour"
                (match x3985 with
                 | `Undefined x3986 -> undefined_to_js x3986
                 | `U1 x3987 ->
                     (match x3987 with
                      | `L_s98_numeric -> Ojs.string_to_js "numeric")
                 | `U2 x3988 ->
                     (match x3988 with
                      | `L_s0_2_digit -> Ojs.string_to_js "2-digit"))
        let (get_minute :
          'tags this -> [ `L_s0_2_digit  | `L_s98_numeric ] option) =
          fun (x3990 : 'tags this) ->
            Ojs.option_of_js
              (fun (x3992 : Ojs.t) ->
                 let x3993 = x3992 in
                 match Ojs.string_of_js x3993 with
                 | "2-digit" -> `L_s0_2_digit
                 | "numeric" -> `L_s98_numeric
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3990) "minute")
        let (set_minute :
          'tags this ->
            [ `Undefined of undefined  | `U1 of [ `L_s98_numeric ] 
            | `U2 of [ `L_s0_2_digit ] ] -> unit)
          =
          fun (x3994 : 'tags this) ->
            fun
              (x3995 :
                [ `Undefined of undefined  | `U1 of [ `L_s98_numeric ] 
                | `U2 of [ `L_s0_2_digit ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3994) "minute"
                (match x3995 with
                 | `Undefined x3996 -> undefined_to_js x3996
                 | `U1 x3997 ->
                     (match x3997 with
                      | `L_s98_numeric -> Ojs.string_to_js "numeric")
                 | `U2 x3998 ->
                     (match x3998 with
                      | `L_s0_2_digit -> Ojs.string_to_js "2-digit"))
        let (get_second :
          'tags this -> [ `L_s0_2_digit  | `L_s98_numeric ] option) =
          fun (x4000 : 'tags this) ->
            Ojs.option_of_js
              (fun (x4002 : Ojs.t) ->
                 let x4003 = x4002 in
                 match Ojs.string_of_js x4003 with
                 | "2-digit" -> `L_s0_2_digit
                 | "numeric" -> `L_s98_numeric
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x4000) "second")
        let (set_second :
          'tags this ->
            [ `Undefined of undefined  | `U1 of [ `L_s98_numeric ] 
            | `U2 of [ `L_s0_2_digit ] ] -> unit)
          =
          fun (x4004 : 'tags this) ->
            fun
              (x4005 :
                [ `Undefined of undefined  | `U1 of [ `L_s98_numeric ] 
                | `U2 of [ `L_s0_2_digit ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x4004) "second"
                (match x4005 with
                 | `Undefined x4006 -> undefined_to_js x4006
                 | `U1 x4007 ->
                     (match x4007 with
                      | `L_s98_numeric -> Ojs.string_to_js "numeric")
                 | `U2 x4008 ->
                     (match x4008 with
                      | `L_s0_2_digit -> Ojs.string_to_js "2-digit"))
        let (get_timeZoneName :
          'tags this ->
            [ `L_s122_short  | `L_s123_shortGeneric  | `L_s124_shortOffset 
            | `L_s78_long  | `L_s79_longGeneric  | `L_s80_longOffset ] option)
          =
          fun (x4010 : 'tags this) ->
            Ojs.option_of_js
              (fun (x4012 : Ojs.t) ->
                 let x4013 = x4012 in
                 match Ojs.string_of_js x4013 with
                 | "short" -> `L_s122_short
                 | "shortGeneric" -> `L_s123_shortGeneric
                 | "shortOffset" -> `L_s124_shortOffset
                 | "long" -> `L_s78_long
                 | "longGeneric" -> `L_s79_longGeneric
                 | "longOffset" -> `L_s80_longOffset
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x4010) "timeZoneName")
        let (set_timeZoneName :
          'tags this ->
            [ `Undefined of undefined  | `U1 of [ `L_s122_short ] 
            | `U2 of [ `L_s78_long ]  | `U3 of [ `L_s124_shortOffset ] 
            | `U4 of [ `L_s80_longOffset ] 
            | `U5 of [ `L_s123_shortGeneric ] 
            | `U6 of [ `L_s79_longGeneric ] ] -> unit)
          =
          fun (x4014 : 'tags this) ->
            fun
              (x4015 :
                [ `Undefined of undefined  | `U1 of [ `L_s122_short ] 
                | `U2 of [ `L_s78_long ]  | `U3 of [ `L_s124_shortOffset ] 
                | `U4 of [ `L_s80_longOffset ] 
                | `U5 of [ `L_s123_shortGeneric ] 
                | `U6 of [ `L_s79_longGeneric ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x4014) "timeZoneName"
                (match x4015 with
                 | `Undefined x4016 -> undefined_to_js x4016
                 | `U1 x4017 ->
                     (match x4017 with
                      | `L_s122_short -> Ojs.string_to_js "short")
                 | `U2 x4018 ->
                     (match x4018 with
                      | `L_s78_long -> Ojs.string_to_js "long")
                 | `U3 x4019 ->
                     (match x4019 with
                      | `L_s124_shortOffset -> Ojs.string_to_js "shortOffset")
                 | `U4 x4020 ->
                     (match x4020 with
                      | `L_s80_longOffset -> Ojs.string_to_js "longOffset")
                 | `U5 x4021 ->
                     (match x4021 with
                      | `L_s123_shortGeneric ->
                          Ojs.string_to_js "shortGeneric")
                 | `U6 x4022 ->
                     (match x4022 with
                      | `L_s79_longGeneric -> Ojs.string_to_js "longGeneric"))
        let (get_formatMatcher' :
          'tags this -> [ `L_s25_basic  | `L_s26_best_fit ] option) =
          fun (x4024 : 'tags this) ->
            Ojs.option_of_js
              (fun (x4026 : Ojs.t) ->
                 let x4027 = x4026 in
                 match Ojs.string_of_js x4027 with
                 | "basic" -> `L_s25_basic
                 | "best fit" -> `L_s26_best_fit
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x4024)
                 "formatMatcher")
        let (set_formatMatcher' :
          'tags this ->
            [ `Undefined of undefined  | `U1 of [ `L_s26_best_fit ] 
            | `U2 of [ `L_s25_basic ] ] -> unit)
          =
          fun (x4028 : 'tags this) ->
            fun
              (x4029 :
                [ `Undefined of undefined  | `U1 of [ `L_s26_best_fit ] 
                | `U2 of [ `L_s25_basic ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x4028) "formatMatcher"
                (match x4029 with
                 | `Undefined x4030 -> undefined_to_js x4030
                 | `U1 x4031 ->
                     (match x4031 with
                      | `L_s26_best_fit -> Ojs.string_to_js "best fit")
                 | `U2 x4032 ->
                     (match x4032 with
                      | `L_s25_basic -> Ojs.string_to_js "basic"))
        let (get_hour12 : 'tags this -> bool option) =
          fun (x4034 : 'tags this) ->
            Ojs.option_of_js Ojs.bool_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x4034) "hour12")
        let (set_hour12 :
          'tags this -> [ `Undefined of undefined  | `U1 of bool ] -> unit) =
          fun (x4037 : 'tags this) ->
            fun (x4038 : [ `Undefined of undefined  | `U1 of bool ]) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x4037) "hour12"
                (match x4038 with
                 | `Undefined x4039 -> undefined_to_js x4039
                 | `U1 x4040 -> Ojs.bool_to_js x4040)
        let (get_timeZone : 'tags this -> string option) =
          fun (x4042 : 'tags this) ->
            Ojs.option_of_js Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x4042) "timeZone")
        let (set_timeZone :
          'tags this -> [ `Undefined of undefined  | `U1 of string ] -> unit)
          =
          fun (x4045 : 'tags this) ->
            fun (x4046 : [ `Undefined of undefined  | `U1 of string ]) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x4045) "timeZone"
                (match x4046 with
                 | `Undefined x4047 -> undefined_to_js x4047
                 | `U1 x4048 -> Ojs.string_to_js x4048)
        let (create :
          ?formatMatcher:[ `L_s25_basic  | `L_s26_best_fit ] ->
            ?dateStyle:[ `L_s122_short  | `L_s63_full  | `L_s78_long 
                       | `L_s84_medium ]
              ->
              ?timeStyle:[ `L_s122_short  | `L_s63_full  | `L_s78_long 
                         | `L_s84_medium ]
                ->
                ?dayPeriod:[ `L_s122_short  | `L_s78_long  | `L_s92_narrow ]
                  ->
                  ?fractionalSecondDigits:[ `L_n_1  | `L_n_2  | `L_n_3 ] ->
                    ?calendar:string ->
                      ?numberingSystem:string ->
                        ?hourCycle:[ `L_s67_h11  | `L_s68_h12  | `L_s69_h23 
                                   | `L_s70_h24 ]
                          ->
                          ?localeMatcher:[ `L_s26_best_fit  | `L_s81_lookup ]
                            ->
                            ?weekday:[ `L_s122_short  | `L_s78_long 
                                     | `L_s92_narrow ]
                              ->
                              ?era:[ `L_s122_short  | `L_s78_long 
                                   | `L_s92_narrow ]
                                ->
                                ?year:[ `L_s0_2_digit  | `L_s98_numeric ] ->
                                  ?month:[ `L_s0_2_digit  | `L_s122_short 
                                         | `L_s78_long  | `L_s92_narrow 
                                         | `L_s98_numeric ]
                                    ->
                                    ?day:[ `L_s0_2_digit  | `L_s98_numeric ]
                                      ->
                                      ?hour:[ `L_s0_2_digit 
                                            | `L_s98_numeric ]
                                        ->
                                        ?minute:[ `L_s0_2_digit 
                                                | `L_s98_numeric ]
                                          ->
                                          ?second:[ `L_s0_2_digit 
                                                  | `L_s98_numeric ]
                                            ->
                                            ?timeZoneName:[ `L_s122_short 
                                                          | `L_s123_shortGeneric
                                                               | `L_s124_shortOffset
                                                                    | 
                                                            `L_s78_long 
                                                          | `L_s79_longGeneric
                                                               | `L_s80_longOffset
                                                                   ]
                                              ->
                                              ?hour12:bool ->
                                                ?timeZone:string -> unit -> t)
          =
          fun
            ?formatMatcher:(x4050 :
                             [ `L_s25_basic  | `L_s26_best_fit ] option)
            ->
            fun
              ?dateStyle:(x4051 :
                           [ `L_s122_short  | `L_s63_full  | `L_s78_long 
                           | `L_s84_medium ] option)
              ->
              fun
                ?timeStyle:(x4052 :
                             [ `L_s122_short  | `L_s63_full  | `L_s78_long 
                             | `L_s84_medium ] option)
                ->
                fun
                  ?dayPeriod:(x4053 :
                               [ `L_s122_short  | `L_s78_long 
                               | `L_s92_narrow ] option)
                  ->
                  fun
                    ?fractionalSecondDigits:(x4054 :
                                              [ `L_n_1  | `L_n_2  | `L_n_3 ]
                                                option)
                    ->
                    fun ?calendar:(x4055 : string option) ->
                      fun ?numberingSystem:(x4056 : string option) ->
                        fun
                          ?hourCycle:(x4057 :
                                       [ `L_s67_h11  | `L_s68_h12 
                                       | `L_s69_h23  | `L_s70_h24 ] option)
                          ->
                          fun
                            ?localeMatcher:(x4058 :
                                             [ `L_s26_best_fit 
                                             | `L_s81_lookup ] option)
                            ->
                            fun
                              ?weekday:(x4059 :
                                         [ `L_s122_short  | `L_s78_long 
                                         | `L_s92_narrow ] option)
                              ->
                              fun
                                ?era:(x4060 :
                                       [ `L_s122_short  | `L_s78_long 
                                       | `L_s92_narrow ] option)
                                ->
                                fun
                                  ?year:(x4061 :
                                          [ `L_s0_2_digit  | `L_s98_numeric ]
                                            option)
                                  ->
                                  fun
                                    ?month:(x4062 :
                                             [ `L_s0_2_digit 
                                             | `L_s122_short  | `L_s78_long 
                                             | `L_s92_narrow 
                                             | `L_s98_numeric ] option)
                                    ->
                                    fun
                                      ?day:(x4063 :
                                             [ `L_s0_2_digit 
                                             | `L_s98_numeric ] option)
                                      ->
                                      fun
                                        ?hour:(x4064 :
                                                [ `L_s0_2_digit 
                                                | `L_s98_numeric ] option)
                                        ->
                                        fun
                                          ?minute:(x4065 :
                                                    [ `L_s0_2_digit 
                                                    | `L_s98_numeric ] option)
                                          ->
                                          fun
                                            ?second:(x4066 :
                                                      [ `L_s0_2_digit 
                                                      | `L_s98_numeric ]
                                                        option)
                                            ->
                                            fun
                                              ?timeZoneName:(x4067 :
                                                              [
                                                                `L_s122_short 
                                                              | `L_s123_shortGeneric
                                                                   | 
                                                                `L_s124_shortOffset
                                                                   | 
                                                                `L_s78_long 
                                                              | `L_s79_longGeneric
                                                                   | 
                                                                `L_s80_longOffset
                                                                  ]
                                                                option)
                                              ->
                                              fun
                                                ?hour12:(x4068 : bool option)
                                                ->
                                                fun
                                                  ?timeZone:(x4069 :
                                                              string option)
                                                  ->
                                                  fun () ->
                                                    let x4070 =
                                                      Ojs.empty_obj () in
                                                    (match x4050 with
                                                     | Some x4090 ->
                                                         Ojs.set_prop_ascii
                                                           x4070
                                                           "formatMatcher"
                                                           (match x4090 with
                                                            | `L_s25_basic ->
                                                                Ojs.string_to_js
                                                                  "basic"
                                                            | `L_s26_best_fit
                                                                ->
                                                                Ojs.string_to_js
                                                                  "best fit")
                                                     | None -> ());
                                                    (match x4051 with
                                                     | Some x4089 ->
                                                         Ojs.set_prop_ascii
                                                           x4070 "dateStyle"
                                                           (match x4089 with
                                                            | `L_s122_short
                                                                ->
                                                                Ojs.string_to_js
                                                                  "short"
                                                            | `L_s63_full ->
                                                                Ojs.string_to_js
                                                                  "full"
                                                            | `L_s78_long ->
                                                                Ojs.string_to_js
                                                                  "long"
                                                            | `L_s84_medium
                                                                ->
                                                                Ojs.string_to_js
                                                                  "medium")
                                                     | None -> ());
                                                    (match x4052 with
                                                     | Some x4088 ->
                                                         Ojs.set_prop_ascii
                                                           x4070 "timeStyle"
                                                           (match x4088 with
                                                            | `L_s122_short
                                                                ->
                                                                Ojs.string_to_js
                                                                  "short"
                                                            | `L_s63_full ->
                                                                Ojs.string_to_js
                                                                  "full"
                                                            | `L_s78_long ->
                                                                Ojs.string_to_js
                                                                  "long"
                                                            | `L_s84_medium
                                                                ->
                                                                Ojs.string_to_js
                                                                  "medium")
                                                     | None -> ());
                                                    (match x4053 with
                                                     | Some x4087 ->
                                                         Ojs.set_prop_ascii
                                                           x4070 "dayPeriod"
                                                           (match x4087 with
                                                            | `L_s122_short
                                                                ->
                                                                Ojs.string_to_js
                                                                  "short"
                                                            | `L_s78_long ->
                                                                Ojs.string_to_js
                                                                  "long"
                                                            | `L_s92_narrow
                                                                ->
                                                                Ojs.string_to_js
                                                                  "narrow")
                                                     | None -> ());
                                                    (match x4054 with
                                                     | Some x4086 ->
                                                         Ojs.set_prop_ascii
                                                           x4070
                                                           "fractionalSecondDigits"
                                                           (match x4086 with
                                                            | `L_n_1 ->
                                                                Ojs.int_to_js
                                                                  1
                                                            | `L_n_2 ->
                                                                Ojs.int_to_js
                                                                  2
                                                            | `L_n_3 ->
                                                                Ojs.int_to_js
                                                                  3)
                                                     | None -> ());
                                                    (match x4055 with
                                                     | Some x4085 ->
                                                         Ojs.set_prop_ascii
                                                           x4070 "calendar"
                                                           (Ojs.string_to_js
                                                              x4085)
                                                     | None -> ());
                                                    (match x4056 with
                                                     | Some x4084 ->
                                                         Ojs.set_prop_ascii
                                                           x4070
                                                           "numberingSystem"
                                                           (Ojs.string_to_js
                                                              x4084)
                                                     | None -> ());
                                                    (match x4057 with
                                                     | Some x4083 ->
                                                         Ojs.set_prop_ascii
                                                           x4070 "hourCycle"
                                                           (match x4083 with
                                                            | `L_s67_h11 ->
                                                                Ojs.string_to_js
                                                                  "h11"
                                                            | `L_s68_h12 ->
                                                                Ojs.string_to_js
                                                                  "h12"
                                                            | `L_s69_h23 ->
                                                                Ojs.string_to_js
                                                                  "h23"
                                                            | `L_s70_h24 ->
                                                                Ojs.string_to_js
                                                                  "h24")
                                                     | None -> ());
                                                    (match x4058 with
                                                     | Some x4082 ->
                                                         Ojs.set_prop_ascii
                                                           x4070
                                                           "localeMatcher"
                                                           (match x4082 with
                                                            | `L_s26_best_fit
                                                                ->
                                                                Ojs.string_to_js
                                                                  "best fit"
                                                            | `L_s81_lookup
                                                                ->
                                                                Ojs.string_to_js
                                                                  "lookup")
                                                     | None -> ());
                                                    (match x4059 with
                                                     | Some x4081 ->
                                                         Ojs.set_prop_ascii
                                                           x4070 "weekday"
                                                           (match x4081 with
                                                            | `L_s122_short
                                                                ->
                                                                Ojs.string_to_js
                                                                  "short"
                                                            | `L_s78_long ->
                                                                Ojs.string_to_js
                                                                  "long"
                                                            | `L_s92_narrow
                                                                ->
                                                                Ojs.string_to_js
                                                                  "narrow")
                                                     | None -> ());
                                                    (match x4060 with
                                                     | Some x4080 ->
                                                         Ojs.set_prop_ascii
                                                           x4070 "era"
                                                           (match x4080 with
                                                            | `L_s122_short
                                                                ->
                                                                Ojs.string_to_js
                                                                  "short"
                                                            | `L_s78_long ->
                                                                Ojs.string_to_js
                                                                  "long"
                                                            | `L_s92_narrow
                                                                ->
                                                                Ojs.string_to_js
                                                                  "narrow")
                                                     | None -> ());
                                                    (match x4061 with
                                                     | Some x4079 ->
                                                         Ojs.set_prop_ascii
                                                           x4070 "year"
                                                           (match x4079 with
                                                            | `L_s0_2_digit
                                                                ->
                                                                Ojs.string_to_js
                                                                  "2-digit"
                                                            | `L_s98_numeric
                                                                ->
                                                                Ojs.string_to_js
                                                                  "numeric")
                                                     | None -> ());
                                                    (match x4062 with
                                                     | Some x4078 ->
                                                         Ojs.set_prop_ascii
                                                           x4070 "month"
                                                           (match x4078 with
                                                            | `L_s0_2_digit
                                                                ->
                                                                Ojs.string_to_js
                                                                  "2-digit"
                                                            | `L_s122_short
                                                                ->
                                                                Ojs.string_to_js
                                                                  "short"
                                                            | `L_s78_long ->
                                                                Ojs.string_to_js
                                                                  "long"
                                                            | `L_s92_narrow
                                                                ->
                                                                Ojs.string_to_js
                                                                  "narrow"
                                                            | `L_s98_numeric
                                                                ->
                                                                Ojs.string_to_js
                                                                  "numeric")
                                                     | None -> ());
                                                    (match x4063 with
                                                     | Some x4077 ->
                                                         Ojs.set_prop_ascii
                                                           x4070 "day"
                                                           (match x4077 with
                                                            | `L_s0_2_digit
                                                                ->
                                                                Ojs.string_to_js
                                                                  "2-digit"
                                                            | `L_s98_numeric
                                                                ->
                                                                Ojs.string_to_js
                                                                  "numeric")
                                                     | None -> ());
                                                    (match x4064 with
                                                     | Some x4076 ->
                                                         Ojs.set_prop_ascii
                                                           x4070 "hour"
                                                           (match x4076 with
                                                            | `L_s0_2_digit
                                                                ->
                                                                Ojs.string_to_js
                                                                  "2-digit"
                                                            | `L_s98_numeric
                                                                ->
                                                                Ojs.string_to_js
                                                                  "numeric")
                                                     | None -> ());
                                                    (match x4065 with
                                                     | Some x4075 ->
                                                         Ojs.set_prop_ascii
                                                           x4070 "minute"
                                                           (match x4075 with
                                                            | `L_s0_2_digit
                                                                ->
                                                                Ojs.string_to_js
                                                                  "2-digit"
                                                            | `L_s98_numeric
                                                                ->
                                                                Ojs.string_to_js
                                                                  "numeric")
                                                     | None -> ());
                                                    (match x4066 with
                                                     | Some x4074 ->
                                                         Ojs.set_prop_ascii
                                                           x4070 "second"
                                                           (match x4074 with
                                                            | `L_s0_2_digit
                                                                ->
                                                                Ojs.string_to_js
                                                                  "2-digit"
                                                            | `L_s98_numeric
                                                                ->
                                                                Ojs.string_to_js
                                                                  "numeric")
                                                     | None -> ());
                                                    (match x4067 with
                                                     | Some x4073 ->
                                                         Ojs.set_prop_ascii
                                                           x4070
                                                           "timeZoneName"
                                                           (match x4073 with
                                                            | `L_s122_short
                                                                ->
                                                                Ojs.string_to_js
                                                                  "short"
                                                            | `L_s123_shortGeneric
                                                                ->
                                                                Ojs.string_to_js
                                                                  "shortGeneric"
                                                            | `L_s124_shortOffset
                                                                ->
                                                                Ojs.string_to_js
                                                                  "shortOffset"
                                                            | `L_s78_long ->
                                                                Ojs.string_to_js
                                                                  "long"
                                                            | `L_s79_longGeneric
                                                                ->
                                                                Ojs.string_to_js
                                                                  "longGeneric"
                                                            | `L_s80_longOffset
                                                                ->
                                                                Ojs.string_to_js
                                                                  "longOffset")
                                                     | None -> ());
                                                    (match x4068 with
                                                     | Some x4072 ->
                                                         Ojs.set_prop_ascii
                                                           x4070 "hour12"
                                                           (Ojs.bool_to_js
                                                              x4072)
                                                     | None -> ());
                                                    (match x4069 with
                                                     | Some x4071 ->
                                                         Ojs.set_prop_ascii
                                                           x4070 "timeZone"
                                                           (Ojs.string_to_js
                                                              x4071)
                                                     | None -> ());
                                                    t_of_js x4070
        let cast_from = Obj.magic
      end
    module DateTimeFormat =
      struct
        type t = [ `Intl_DateTimeFormat ] intf
        let rec t_of_js : Ojs.t -> t = Obj.magic
        and t_to_js : t -> Ojs.t = Obj.magic
        type tags = [ `Intl_DateTimeFormat ]
        type 'tags this =
          'tags intf constraint 'tags = [> `Intl_DateTimeFormat ]
        let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
          =
          fun (type __tags) ->
            fun (__tags_of_js : Ojs.t -> __tags) ->
              fun (x4093 : Ojs.t) -> intf_of_js __tags_of_js x4093
        and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
          fun (type __tags) ->
            fun (__tags_to_js : __tags -> Ojs.t) ->
              fun (x4091 : __tags intf) -> intf_to_js __tags_to_js x4091
        let (formatRange :
          'tags this ->
            startDate:[ `U1 of Date.t  | `U2 of float  | `U3 of bigint ] ->
              endDate:[ `U1 of Date.t  | `U2 of float  | `U3 of bigint ] ->
                string)
          =
          fun (x4103 : 'tags this) ->
            fun
              ~startDate:(x4095 :
                           [ `U1 of Date.t  | `U2 of float  | `U3 of bigint ])
              ->
              fun
                ~endDate:(x4099 :
                           [ `U1 of Date.t  | `U2 of float  | `U3 of bigint ])
                ->
                Ojs.string_of_js
                  (Ojs.call (this_to_js Obj.magic x4103) "formatRange"
                     [|((match x4095 with
                         | `U1 x4096 -> Date.t_to_js x4096
                         | `U2 x4097 -> Ojs.float_to_js x4097
                         | `U3 x4098 -> bigint_to_js x4098));((match x4099
                                                               with
                                                               | `U1 x4100 ->
                                                                   Date.t_to_js
                                                                    x4100
                                                               | `U2 x4101 ->
                                                                   Ojs.float_to_js
                                                                    x4101
                                                               | `U3 x4102 ->
                                                                   bigint_to_js
                                                                    x4102))|])
        let (formatRangeToParts :
          'tags this ->
            startDate:[ `U1 of Date.t  | `U2 of float  | `U3 of bigint ] ->
              endDate:[ `U1 of Date.t  | `U2 of float  | `U3 of bigint ] ->
                DateTimeRangeFormatPart.t list)
          =
          fun (x4113 : 'tags this) ->
            fun
              ~startDate:(x4105 :
                           [ `U1 of Date.t  | `U2 of float  | `U3 of bigint ])
              ->
              fun
                ~endDate:(x4109 :
                           [ `U1 of Date.t  | `U2 of float  | `U3 of bigint ])
                ->
                Ojs.list_of_js DateTimeRangeFormatPart.t_of_js
                  (Ojs.call (this_to_js Obj.magic x4113) "formatRangeToParts"
                     [|((match x4105 with
                         | `U1 x4106 -> Date.t_to_js x4106
                         | `U2 x4107 -> Ojs.float_to_js x4107
                         | `U3 x4108 -> bigint_to_js x4108));((match x4109
                                                               with
                                                               | `U1 x4110 ->
                                                                   Date.t_to_js
                                                                    x4110
                                                               | `U2 x4111 ->
                                                                   Ojs.float_to_js
                                                                    x4111
                                                               | `U3 x4112 ->
                                                                   bigint_to_js
                                                                    x4112))|])
        let (formatToParts :
          'tags this ->
            ?date:[ `U1 of Date.t  | `U2 of float ] ->
              unit -> DateTimeFormatPart.t list)
          =
          fun (x4121 : 'tags this) ->
            fun ?date:(x4116 : [ `U1 of Date.t  | `U2 of float ] option) ->
              fun () ->
                Ojs.list_of_js DateTimeFormatPart.t_of_js
                  (let x4123 = this_to_js Obj.magic x4121 in
                   Ojs.call (Ojs.get_prop_ascii x4123 "formatToParts")
                     "apply"
                     [|x4123;((let x4117 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               (match x4116 with
                                | Some x4118 ->
                                    ignore
                                      (Ojs.call x4117 "push"
                                         [|((match x4118 with
                                             | `U1 x4119 ->
                                                 Date.t_to_js x4119
                                             | `U2 x4120 ->
                                                 Ojs.float_to_js x4120))|])
                                | None -> ());
                               x4117))|])
        let (format :
          'tags this ->
            ?date:[ `U1 of Date.t  | `U2 of float ] -> unit -> string)
          =
          fun (x4130 : 'tags this) ->
            fun ?date:(x4125 : [ `U1 of Date.t  | `U2 of float ] option) ->
              fun () ->
                Ojs.string_of_js
                  (let x4132 = this_to_js Obj.magic x4130 in
                   Ojs.call (Ojs.get_prop_ascii x4132 "format") "apply"
                     [|x4132;((let x4126 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               (match x4125 with
                                | Some x4127 ->
                                    ignore
                                      (Ojs.call x4126 "push"
                                         [|((match x4127 with
                                             | `U1 x4128 ->
                                                 Date.t_to_js x4128
                                             | `U2 x4129 ->
                                                 Ojs.float_to_js x4129))|])
                                | None -> ());
                               x4126))|])
        let (resolvedOptions : 'tags this -> ResolvedDateTimeFormatOptions.t)
          =
          fun (x4133 : 'tags this) ->
            ResolvedDateTimeFormatOptions.t_of_js
              (Ojs.call (this_to_js Obj.magic x4133) "resolvedOptions" [||])
        let (create :
          ?locales:LocalesArgument.t ->
            ?options:DateTimeFormatOptions.t -> unit -> t)
          =
          fun ?locales:(x4135 : LocalesArgument.t option) ->
            fun ?options:(x4136 : DateTimeFormatOptions.t option) ->
              fun () ->
                t_of_js
                  (Ojs.new_obj_arr
                     (Ojs.get_prop_ascii
                        (Ojs.get_prop_ascii Ojs.global "Intl")
                        "DateTimeFormat")
                     (let x4137 =
                        Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                          [||] in
                      (match x4135 with
                       | Some x4139 ->
                           ignore
                             (Ojs.call x4137 "push"
                                [|(LocalesArgument.t_to_js x4139)|])
                       | None -> ());
                      (match x4136 with
                       | Some x4138 ->
                           ignore
                             (Ojs.call x4137 "push"
                                [|(DateTimeFormatOptions.t_to_js x4138)|])
                       | None -> ());
                      x4137))
        let (invoke :
          ?locales:LocalesArgument.t ->
            ?options:DateTimeFormatOptions.t -> unit -> t)
          =
          fun ?locales:(x4140 : LocalesArgument.t option) ->
            fun ?options:(x4141 : DateTimeFormatOptions.t option) ->
              fun () ->
                t_of_js
                  (Ojs.call
                     (Ojs.get_prop_ascii
                        (Ojs.get_prop_ascii Ojs.global "Intl")
                        "DateTimeFormat") "apply"
                     [|Ojs.null;((let x4142 =
                                    Ojs.new_obj
                                      (Ojs.get_prop_ascii Ojs.global "Array")
                                      [||] in
                                  (match x4140 with
                                   | Some x4144 ->
                                       ignore
                                         (Ojs.call x4142 "push"
                                            [|(LocalesArgument.t_to_js x4144)|])
                                   | None -> ());
                                  (match x4141 with
                                   | Some x4143 ->
                                       ignore
                                         (Ojs.call x4142 "push"
                                            [|(DateTimeFormatOptions.t_to_js
                                                 x4143)|])
                                   | None -> ());
                                  x4142))|])
        let (supportedLocalesOf :
          locales:LocalesArgument.t ->
            ?options:DateTimeFormatOptions.t -> unit -> string list)
          =
          fun ~locales:(x4145 : LocalesArgument.t) ->
            fun ?options:(x4146 : DateTimeFormatOptions.t option) ->
              fun () ->
                Ojs.list_of_js Ojs.string_of_js
                  (let x4149 =
                     Ojs.get_prop_ascii
                       (Ojs.get_prop_ascii Ojs.global "Intl")
                       "DateTimeFormat" in
                   Ojs.call (Ojs.get_prop_ascii x4149 "supportedLocalesOf")
                     "apply"
                     [|x4149;((let x4147 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x4147 "push"
                                    [|(LocalesArgument.t_to_js x4145)|]);
                               (match x4146 with
                                | Some x4148 ->
                                    ignore
                                      (Ojs.call x4147 "push"
                                         [|(DateTimeFormatOptions.t_to_js
                                              x4148)|])
                                | None -> ());
                               x4147))|])
        let (create' :
          ?locales:[ `U1 of string  | `U2 of string list ] ->
            ?options:DateTimeFormatOptions.t -> unit -> t)
          =
          fun
            ?locales:(x4151 : [ `U1 of string  | `U2 of string list ] option)
            ->
            fun ?options:(x4152 : DateTimeFormatOptions.t option) ->
              fun () ->
                t_of_js
                  (Ojs.new_obj_arr
                     (Ojs.get_prop_ascii
                        (Ojs.get_prop_ascii Ojs.global "Intl")
                        "DateTimeFormat")
                     (let x4153 =
                        Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                          [||] in
                      (match x4151 with
                       | Some x4155 ->
                           ignore
                             (Ojs.call x4153 "push"
                                [|((match x4155 with
                                    | `U1 x4156 -> Ojs.string_to_js x4156
                                    | `U2 x4157 ->
                                        Ojs.list_to_js Ojs.string_to_js x4157))|])
                       | None -> ());
                      (match x4152 with
                       | Some x4154 ->
                           ignore
                             (Ojs.call x4153 "push"
                                [|(DateTimeFormatOptions.t_to_js x4154)|])
                       | None -> ());
                      x4153))
        let (invoke' :
          ?locales:[ `U1 of string  | `U2 of string list ] ->
            ?options:DateTimeFormatOptions.t -> unit -> t)
          =
          fun
            ?locales:(x4159 : [ `U1 of string  | `U2 of string list ] option)
            ->
            fun ?options:(x4160 : DateTimeFormatOptions.t option) ->
              fun () ->
                t_of_js
                  (Ojs.call
                     (Ojs.get_prop_ascii
                        (Ojs.get_prop_ascii Ojs.global "Intl")
                        "DateTimeFormat") "apply"
                     [|Ojs.null;((let x4161 =
                                    Ojs.new_obj
                                      (Ojs.get_prop_ascii Ojs.global "Array")
                                      [||] in
                                  (match x4159 with
                                   | Some x4163 ->
                                       ignore
                                         (Ojs.call x4161 "push"
                                            [|((match x4163 with
                                                | `U1 x4164 ->
                                                    Ojs.string_to_js x4164
                                                | `U2 x4165 ->
                                                    Ojs.list_to_js
                                                      Ojs.string_to_js x4165))|])
                                   | None -> ());
                                  (match x4160 with
                                   | Some x4162 ->
                                       ignore
                                         (Ojs.call x4161 "push"
                                            [|(DateTimeFormatOptions.t_to_js
                                                 x4162)|])
                                   | None -> ());
                                  x4161))|])
        let (supportedLocalesOf' :
          locales:[ `U1 of string  | `U2 of string list ] ->
            ?options:DateTimeFormatOptions.t -> unit -> string list)
          =
          fun ~locales:(x4167 : [ `U1 of string  | `U2 of string list ]) ->
            fun ?options:(x4168 : DateTimeFormatOptions.t option) ->
              fun () ->
                Ojs.list_of_js Ojs.string_of_js
                  (let x4174 =
                     Ojs.get_prop_ascii
                       (Ojs.get_prop_ascii Ojs.global "Intl")
                       "DateTimeFormat" in
                   Ojs.call (Ojs.get_prop_ascii x4174 "supportedLocalesOf")
                     "apply"
                     [|x4174;((let x4169 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x4169 "push"
                                    [|((match x4167 with
                                        | `U1 x4171 -> Ojs.string_to_js x4171
                                        | `U2 x4172 ->
                                            Ojs.list_to_js Ojs.string_to_js
                                              x4172))|]);
                               (match x4168 with
                                | Some x4170 ->
                                    ignore
                                      (Ojs.call x4169 "push"
                                         [|(DateTimeFormatOptions.t_to_js
                                              x4170)|])
                                | None -> ());
                               x4169))|])
        let (prototype : unit -> t) =
          fun () ->
            t_of_js
              (Ojs.get_prop_ascii
                 (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Intl")
                    "DateTimeFormat") "prototype")
        let cast_from = Obj.magic
      end
    module ResolvedCollatorOptions =
      struct
        type t = [ `Intl_ResolvedCollatorOptions ] intf
        let rec t_of_js : Ojs.t -> t = Obj.magic
        and t_to_js : t -> Ojs.t = Obj.magic
        type tags = [ `Intl_ResolvedCollatorOptions ]
        type 'tags this =
          'tags intf constraint 'tags = [> `Intl_ResolvedCollatorOptions ]
        let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
          =
          fun (type __tags) ->
            fun (__tags_of_js : Ojs.t -> __tags) ->
              fun (x4178 : Ojs.t) -> intf_of_js __tags_of_js x4178
        and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
          fun (type __tags) ->
            fun (__tags_to_js : __tags -> Ojs.t) ->
              fun (x4176 : __tags intf) -> intf_to_js __tags_to_js x4176
        let (get_locale : 'tags this -> string) =
          fun (x4180 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x4180) "locale")
        let (set_locale : 'tags this -> string -> unit) =
          fun (x4182 : 'tags this) ->
            fun (x4183 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x4182) "locale"
                (Ojs.string_to_js x4183)
        let (get_usage : 'tags this -> string) =
          fun (x4185 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x4185) "usage")
        let (set_usage : 'tags this -> string -> unit) =
          fun (x4187 : 'tags this) ->
            fun (x4188 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x4187) "usage"
                (Ojs.string_to_js x4188)
        let (get_sensitivity : 'tags this -> string) =
          fun (x4190 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x4190) "sensitivity")
        let (set_sensitivity : 'tags this -> string -> unit) =
          fun (x4192 : 'tags this) ->
            fun (x4193 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x4192) "sensitivity"
                (Ojs.string_to_js x4193)
        let (get_ignorePunctuation : 'tags this -> bool) =
          fun (x4195 : 'tags this) ->
            Ojs.bool_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x4195)
                 "ignorePunctuation")
        let (set_ignorePunctuation : 'tags this -> bool -> unit) =
          fun (x4197 : 'tags this) ->
            fun (x4198 : bool) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x4197)
                "ignorePunctuation" (Ojs.bool_to_js x4198)
        let (get_collation : 'tags this -> string) =
          fun (x4200 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x4200) "collation")
        let (set_collation : 'tags this -> string -> unit) =
          fun (x4202 : 'tags this) ->
            fun (x4203 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x4202) "collation"
                (Ojs.string_to_js x4203)
        let (get_caseFirst : 'tags this -> string) =
          fun (x4205 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x4205) "caseFirst")
        let (set_caseFirst : 'tags this -> string -> unit) =
          fun (x4207 : 'tags this) ->
            fun (x4208 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x4207) "caseFirst"
                (Ojs.string_to_js x4208)
        let (get_numeric : 'tags this -> bool) =
          fun (x4210 : 'tags this) ->
            Ojs.bool_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x4210) "numeric")
        let (set_numeric : 'tags this -> bool -> unit) =
          fun (x4212 : 'tags this) ->
            fun (x4213 : bool) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x4212) "numeric"
                (Ojs.bool_to_js x4213)
        let (create :
          locale:string ->
            usage:string ->
              sensitivity:string ->
                ignorePunctuation:bool ->
                  collation:string ->
                    caseFirst:string -> numeric:bool -> unit -> t)
          =
          fun ~locale:(x4215 : string) ->
            fun ~usage:(x4216 : string) ->
              fun ~sensitivity:(x4217 : string) ->
                fun ~ignorePunctuation:(x4218 : bool) ->
                  fun ~collation:(x4219 : string) ->
                    fun ~caseFirst:(x4220 : string) ->
                      fun ~numeric:(x4221 : bool) ->
                        fun () ->
                          let x4222 = Ojs.empty_obj () in
                          Ojs.set_prop_ascii x4222 "locale"
                            (Ojs.string_to_js x4215);
                          Ojs.set_prop_ascii x4222 "usage"
                            (Ojs.string_to_js x4216);
                          Ojs.set_prop_ascii x4222 "sensitivity"
                            (Ojs.string_to_js x4217);
                          Ojs.set_prop_ascii x4222 "ignorePunctuation"
                            (Ojs.bool_to_js x4218);
                          Ojs.set_prop_ascii x4222 "collation"
                            (Ojs.string_to_js x4219);
                          Ojs.set_prop_ascii x4222 "caseFirst"
                            (Ojs.string_to_js x4220);
                          Ojs.set_prop_ascii x4222 "numeric"
                            (Ojs.bool_to_js x4221);
                          t_of_js x4222
        let cast_from = Obj.magic
      end
    module CollatorOptions =
      struct
        type t = [ `Intl_CollatorOptions ] intf
        let rec t_of_js : Ojs.t -> t = Obj.magic
        and t_to_js : t -> Ojs.t = Obj.magic
        type tags = [ `Intl_CollatorOptions ]
        type 'tags this =
          'tags intf constraint 'tags = [> `Intl_CollatorOptions ]
        let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
          =
          fun (type __tags) ->
            fun (__tags_of_js : Ojs.t -> __tags) ->
              fun (x4225 : Ojs.t) -> intf_of_js __tags_of_js x4225
        and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
          fun (type __tags) ->
            fun (__tags_to_js : __tags -> Ojs.t) ->
              fun (x4223 : __tags intf) -> intf_to_js __tags_to_js x4223
        let (get_usage :
          'tags this -> [ `L_s116_search  | `L_s125_sort ] option) =
          fun (x4227 : 'tags this) ->
            Ojs.option_of_js
              (fun (x4229 : Ojs.t) ->
                 let x4230 = x4229 in
                 match Ojs.string_of_js x4230 with
                 | "search" -> `L_s116_search
                 | "sort" -> `L_s125_sort
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x4227) "usage")
        let (set_usage :
          'tags this ->
            [ `Undefined of undefined  | `U1 of [ `L_s125_sort ] 
            | `U2 of [ `L_s116_search ] ] -> unit)
          =
          fun (x4231 : 'tags this) ->
            fun
              (x4232 :
                [ `Undefined of undefined  | `U1 of [ `L_s125_sort ] 
                | `U2 of [ `L_s116_search ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x4231) "usage"
                (match x4232 with
                 | `Undefined x4233 -> undefined_to_js x4233
                 | `U1 x4234 ->
                     (match x4234 with
                      | `L_s125_sort -> Ojs.string_to_js "sort")
                 | `U2 x4235 ->
                     (match x4235 with
                      | `L_s116_search -> Ojs.string_to_js "search"))
        let (get_localeMatcher :
          'tags this -> [ `L_s26_best_fit  | `L_s81_lookup ] option) =
          fun (x4237 : 'tags this) ->
            Ojs.option_of_js
              (fun (x4239 : Ojs.t) ->
                 let x4240 = x4239 in
                 match Ojs.string_of_js x4240 with
                 | "best fit" -> `L_s26_best_fit
                 | "lookup" -> `L_s81_lookup
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x4237)
                 "localeMatcher")
        let (set_localeMatcher :
          'tags this ->
            [ `Undefined of undefined  | `U1 of [ `L_s81_lookup ] 
            | `U2 of [ `L_s26_best_fit ] ] -> unit)
          =
          fun (x4241 : 'tags this) ->
            fun
              (x4242 :
                [ `Undefined of undefined  | `U1 of [ `L_s81_lookup ] 
                | `U2 of [ `L_s26_best_fit ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x4241) "localeMatcher"
                (match x4242 with
                 | `Undefined x4243 -> undefined_to_js x4243
                 | `U1 x4244 ->
                     (match x4244 with
                      | `L_s81_lookup -> Ojs.string_to_js "lookup")
                 | `U2 x4245 ->
                     (match x4245 with
                      | `L_s26_best_fit -> Ojs.string_to_js "best fit"))
        let (get_numeric : 'tags this -> bool option) =
          fun (x4247 : 'tags this) ->
            Ojs.option_of_js Ojs.bool_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x4247) "numeric")
        let (set_numeric :
          'tags this -> [ `Undefined of undefined  | `U1 of bool ] -> unit) =
          fun (x4250 : 'tags this) ->
            fun (x4251 : [ `Undefined of undefined  | `U1 of bool ]) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x4250) "numeric"
                (match x4251 with
                 | `Undefined x4252 -> undefined_to_js x4252
                 | `U1 x4253 -> Ojs.bool_to_js x4253)
        let (get_caseFirst :
          'tags this ->
            [ `L_s139_upper  | `L_s58_false  | `L_s82_lower ] option)
          =
          fun (x4255 : 'tags this) ->
            Ojs.option_of_js
              (fun (x4257 : Ojs.t) ->
                 let x4258 = x4257 in
                 match Ojs.string_of_js x4258 with
                 | "upper" -> `L_s139_upper
                 | "false" -> `L_s58_false
                 | "lower" -> `L_s82_lower
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x4255) "caseFirst")
        let (set_caseFirst :
          'tags this ->
            [ `Undefined of undefined  | `U1 of [ `L_s139_upper ] 
            | `U2 of [ `L_s82_lower ]  | `U3 of [ `L_s58_false ] ] -> 
              unit)
          =
          fun (x4259 : 'tags this) ->
            fun
              (x4260 :
                [ `Undefined of undefined  | `U1 of [ `L_s139_upper ] 
                | `U2 of [ `L_s82_lower ]  | `U3 of [ `L_s58_false ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x4259) "caseFirst"
                (match x4260 with
                 | `Undefined x4261 -> undefined_to_js x4261
                 | `U1 x4262 ->
                     (match x4262 with
                      | `L_s139_upper -> Ojs.string_to_js "upper")
                 | `U2 x4263 ->
                     (match x4263 with
                      | `L_s82_lower -> Ojs.string_to_js "lower")
                 | `U3 x4264 ->
                     (match x4264 with
                      | `L_s58_false -> Ojs.string_to_js "false"))
        let (get_sensitivity :
          'tags this ->
            [ `L_s140_variant  | `L_s21_accent  | `L_s24_base 
            | `L_s30_case ] option)
          =
          fun (x4266 : 'tags this) ->
            Ojs.option_of_js
              (fun (x4268 : Ojs.t) ->
                 let x4269 = x4268 in
                 match Ojs.string_of_js x4269 with
                 | "variant" -> `L_s140_variant
                 | "accent" -> `L_s21_accent
                 | "base" -> `L_s24_base
                 | "case" -> `L_s30_case
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x4266) "sensitivity")
        let (set_sensitivity :
          'tags this ->
            [ `Undefined of undefined  | `U1 of [ `L_s24_base ] 
            | `U2 of [ `L_s21_accent ]  | `U3 of [ `L_s30_case ] 
            | `U4 of [ `L_s140_variant ] ] -> unit)
          =
          fun (x4270 : 'tags this) ->
            fun
              (x4271 :
                [ `Undefined of undefined  | `U1 of [ `L_s24_base ] 
                | `U2 of [ `L_s21_accent ]  | `U3 of [ `L_s30_case ] 
                | `U4 of [ `L_s140_variant ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x4270) "sensitivity"
                (match x4271 with
                 | `Undefined x4272 -> undefined_to_js x4272
                 | `U1 x4273 ->
                     (match x4273 with
                      | `L_s24_base -> Ojs.string_to_js "base")
                 | `U2 x4274 ->
                     (match x4274 with
                      | `L_s21_accent -> Ojs.string_to_js "accent")
                 | `U3 x4275 ->
                     (match x4275 with
                      | `L_s30_case -> Ojs.string_to_js "case")
                 | `U4 x4276 ->
                     (match x4276 with
                      | `L_s140_variant -> Ojs.string_to_js "variant"))
        let (get_collation :
          'tags this ->
            [ `L_s105_phonebk  | `L_s106_phonetic  | `L_s107_pinyin 
            | `L_s111_reformed  | `L_s117_searchjl  | `L_s129_stroke 
            | `L_s134_trad  | `L_s136_unihan  | `L_s148_zhuyin 
            | `L_s27_big5han  | `L_s34_compat  | `L_s44_dict 
            | `L_s45_direct  | `L_s47_ducet  | `L_s49_emoji  | `L_s52_eor 
            | `L_s64_gb2312 ] option)
          =
          fun (x4278 : 'tags this) ->
            Ojs.option_of_js
              (fun (x4280 : Ojs.t) ->
                 let x4281 = x4280 in
                 match Ojs.string_of_js x4281 with
                 | "phonebk" -> `L_s105_phonebk
                 | "phonetic" -> `L_s106_phonetic
                 | "pinyin" -> `L_s107_pinyin
                 | "reformed" -> `L_s111_reformed
                 | "searchjl" -> `L_s117_searchjl
                 | "stroke" -> `L_s129_stroke
                 | "trad" -> `L_s134_trad
                 | "unihan" -> `L_s136_unihan
                 | "zhuyin" -> `L_s148_zhuyin
                 | "big5han" -> `L_s27_big5han
                 | "compat" -> `L_s34_compat
                 | "dict" -> `L_s44_dict
                 | "direct" -> `L_s45_direct
                 | "ducet" -> `L_s47_ducet
                 | "emoji" -> `L_s49_emoji
                 | "eor" -> `L_s52_eor
                 | "gb2312" -> `L_s64_gb2312
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x4278) "collation")
        let (set_collation :
          'tags this ->
            [ `Undefined of undefined  | `U1 of [ `L_s27_big5han ] 
            | `U2 of [ `L_s34_compat ]  | `U3 of [ `L_s44_dict ] 
            | `U4 of [ `L_s45_direct ]  | `U5 of [ `L_s47_ducet ] 
            | `U6 of [ `L_s49_emoji ]  | `U7 of [ `L_s52_eor ] 
            | `U8 of [ `L_s64_gb2312 ]  | `U9 of [ `L_s105_phonebk ] 
            | `U10 of [ `L_s106_phonetic ]  | `U11 of [ `L_s107_pinyin ] 
            | `U12 of [ `L_s111_reformed ]  | `U13 of [ `L_s117_searchjl ] 
            | `U14 of [ `L_s129_stroke ]  | `U15 of [ `L_s134_trad ] 
            | `U16 of [ `L_s136_unihan ]  | `U17 of [ `L_s148_zhuyin ] ] ->
              unit)
          =
          fun (x4282 : 'tags this) ->
            fun
              (x4283 :
                [ `Undefined of undefined  | `U1 of [ `L_s27_big5han ] 
                | `U2 of [ `L_s34_compat ]  | `U3 of [ `L_s44_dict ] 
                | `U4 of [ `L_s45_direct ]  | `U5 of [ `L_s47_ducet ] 
                | `U6 of [ `L_s49_emoji ]  | `U7 of [ `L_s52_eor ] 
                | `U8 of [ `L_s64_gb2312 ]  | `U9 of [ `L_s105_phonebk ] 
                | `U10 of [ `L_s106_phonetic ]  | `U11 of [ `L_s107_pinyin ] 
                | `U12 of [ `L_s111_reformed ] 
                | `U13 of [ `L_s117_searchjl ]  | `U14 of [ `L_s129_stroke ] 
                | `U15 of [ `L_s134_trad ]  | `U16 of [ `L_s136_unihan ] 
                | `U17 of [ `L_s148_zhuyin ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x4282) "collation"
                (match x4283 with
                 | `Undefined x4284 -> undefined_to_js x4284
                 | `U1 x4285 ->
                     (match x4285 with
                      | `L_s27_big5han -> Ojs.string_to_js "big5han")
                 | `U2 x4286 ->
                     (match x4286 with
                      | `L_s34_compat -> Ojs.string_to_js "compat")
                 | `U3 x4287 ->
                     (match x4287 with
                      | `L_s44_dict -> Ojs.string_to_js "dict")
                 | `U4 x4288 ->
                     (match x4288 with
                      | `L_s45_direct -> Ojs.string_to_js "direct")
                 | `U5 x4289 ->
                     (match x4289 with
                      | `L_s47_ducet -> Ojs.string_to_js "ducet")
                 | `U6 x4290 ->
                     (match x4290 with
                      | `L_s49_emoji -> Ojs.string_to_js "emoji")
                 | `U7 x4291 ->
                     (match x4291 with | `L_s52_eor -> Ojs.string_to_js "eor")
                 | `U8 x4292 ->
                     (match x4292 with
                      | `L_s64_gb2312 -> Ojs.string_to_js "gb2312")
                 | `U9 x4293 ->
                     (match x4293 with
                      | `L_s105_phonebk -> Ojs.string_to_js "phonebk")
                 | `U10 x4294 ->
                     (match x4294 with
                      | `L_s106_phonetic -> Ojs.string_to_js "phonetic")
                 | `U11 x4295 ->
                     (match x4295 with
                      | `L_s107_pinyin -> Ojs.string_to_js "pinyin")
                 | `U12 x4296 ->
                     (match x4296 with
                      | `L_s111_reformed -> Ojs.string_to_js "reformed")
                 | `U13 x4297 ->
                     (match x4297 with
                      | `L_s117_searchjl -> Ojs.string_to_js "searchjl")
                 | `U14 x4298 ->
                     (match x4298 with
                      | `L_s129_stroke -> Ojs.string_to_js "stroke")
                 | `U15 x4299 ->
                     (match x4299 with
                      | `L_s134_trad -> Ojs.string_to_js "trad")
                 | `U16 x4300 ->
                     (match x4300 with
                      | `L_s136_unihan -> Ojs.string_to_js "unihan")
                 | `U17 x4301 ->
                     (match x4301 with
                      | `L_s148_zhuyin -> Ojs.string_to_js "zhuyin"))
        let (get_ignorePunctuation : 'tags this -> bool option) =
          fun (x4303 : 'tags this) ->
            Ojs.option_of_js Ojs.bool_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x4303)
                 "ignorePunctuation")
        let (set_ignorePunctuation :
          'tags this -> [ `Undefined of undefined  | `U1 of bool ] -> unit) =
          fun (x4306 : 'tags this) ->
            fun (x4307 : [ `Undefined of undefined  | `U1 of bool ]) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x4306)
                "ignorePunctuation"
                (match x4307 with
                 | `Undefined x4308 -> undefined_to_js x4308
                 | `U1 x4309 -> Ojs.bool_to_js x4309)
        let (create :
          ?usage:[ `L_s116_search  | `L_s125_sort ] ->
            ?localeMatcher:[ `L_s26_best_fit  | `L_s81_lookup ] ->
              ?numeric:bool ->
                ?caseFirst:[ `L_s139_upper  | `L_s58_false  | `L_s82_lower ]
                  ->
                  ?sensitivity:[ `L_s140_variant  | `L_s21_accent 
                               | `L_s24_base  | `L_s30_case ]
                    ->
                    ?collation:[ `L_s105_phonebk  | `L_s106_phonetic 
                               | `L_s107_pinyin  | `L_s111_reformed 
                               | `L_s117_searchjl  | `L_s129_stroke 
                               | `L_s134_trad  | `L_s136_unihan 
                               | `L_s148_zhuyin  | `L_s27_big5han 
                               | `L_s34_compat  | `L_s44_dict 
                               | `L_s45_direct  | `L_s47_ducet 
                               | `L_s49_emoji  | `L_s52_eor 
                               | `L_s64_gb2312 ]
                      -> ?ignorePunctuation:bool -> unit -> t)
          =
          fun ?usage:(x4311 : [ `L_s116_search  | `L_s125_sort ] option) ->
            fun
              ?localeMatcher:(x4312 :
                               [ `L_s26_best_fit  | `L_s81_lookup ] option)
              ->
              fun ?numeric:(x4313 : bool option) ->
                fun
                  ?caseFirst:(x4314 :
                               [ `L_s139_upper  | `L_s58_false 
                               | `L_s82_lower ] option)
                  ->
                  fun
                    ?sensitivity:(x4315 :
                                   [ `L_s140_variant  | `L_s21_accent 
                                   | `L_s24_base  | `L_s30_case ] option)
                    ->
                    fun
                      ?collation:(x4316 :
                                   [ `L_s105_phonebk  | `L_s106_phonetic 
                                   | `L_s107_pinyin  | `L_s111_reformed 
                                   | `L_s117_searchjl  | `L_s129_stroke 
                                   | `L_s134_trad  | `L_s136_unihan 
                                   | `L_s148_zhuyin  | `L_s27_big5han 
                                   | `L_s34_compat  | `L_s44_dict 
                                   | `L_s45_direct  | `L_s47_ducet 
                                   | `L_s49_emoji  | `L_s52_eor 
                                   | `L_s64_gb2312 ] option)
                      ->
                      fun ?ignorePunctuation:(x4317 : bool option) ->
                        fun () ->
                          let x4318 = Ojs.empty_obj () in
                          (match x4311 with
                           | Some x4325 ->
                               Ojs.set_prop_ascii x4318 "usage"
                                 (match x4325 with
                                  | `L_s116_search ->
                                      Ojs.string_to_js "search"
                                  | `L_s125_sort -> Ojs.string_to_js "sort")
                           | None -> ());
                          (match x4312 with
                           | Some x4324 ->
                               Ojs.set_prop_ascii x4318 "localeMatcher"
                                 (match x4324 with
                                  | `L_s26_best_fit ->
                                      Ojs.string_to_js "best fit"
                                  | `L_s81_lookup ->
                                      Ojs.string_to_js "lookup")
                           | None -> ());
                          (match x4313 with
                           | Some x4323 ->
                               Ojs.set_prop_ascii x4318 "numeric"
                                 (Ojs.bool_to_js x4323)
                           | None -> ());
                          (match x4314 with
                           | Some x4322 ->
                               Ojs.set_prop_ascii x4318 "caseFirst"
                                 (match x4322 with
                                  | `L_s139_upper -> Ojs.string_to_js "upper"
                                  | `L_s58_false -> Ojs.string_to_js "false"
                                  | `L_s82_lower -> Ojs.string_to_js "lower")
                           | None -> ());
                          (match x4315 with
                           | Some x4321 ->
                               Ojs.set_prop_ascii x4318 "sensitivity"
                                 (match x4321 with
                                  | `L_s140_variant ->
                                      Ojs.string_to_js "variant"
                                  | `L_s21_accent ->
                                      Ojs.string_to_js "accent"
                                  | `L_s24_base -> Ojs.string_to_js "base"
                                  | `L_s30_case -> Ojs.string_to_js "case")
                           | None -> ());
                          (match x4316 with
                           | Some x4320 ->
                               Ojs.set_prop_ascii x4318 "collation"
                                 (match x4320 with
                                  | `L_s105_phonebk ->
                                      Ojs.string_to_js "phonebk"
                                  | `L_s106_phonetic ->
                                      Ojs.string_to_js "phonetic"
                                  | `L_s107_pinyin ->
                                      Ojs.string_to_js "pinyin"
                                  | `L_s111_reformed ->
                                      Ojs.string_to_js "reformed"
                                  | `L_s117_searchjl ->
                                      Ojs.string_to_js "searchjl"
                                  | `L_s129_stroke ->
                                      Ojs.string_to_js "stroke"
                                  | `L_s134_trad -> Ojs.string_to_js "trad"
                                  | `L_s136_unihan ->
                                      Ojs.string_to_js "unihan"
                                  | `L_s148_zhuyin ->
                                      Ojs.string_to_js "zhuyin"
                                  | `L_s27_big5han ->
                                      Ojs.string_to_js "big5han"
                                  | `L_s34_compat ->
                                      Ojs.string_to_js "compat"
                                  | `L_s44_dict -> Ojs.string_to_js "dict"
                                  | `L_s45_direct ->
                                      Ojs.string_to_js "direct"
                                  | `L_s47_ducet -> Ojs.string_to_js "ducet"
                                  | `L_s49_emoji -> Ojs.string_to_js "emoji"
                                  | `L_s52_eor -> Ojs.string_to_js "eor"
                                  | `L_s64_gb2312 ->
                                      Ojs.string_to_js "gb2312")
                           | None -> ());
                          (match x4317 with
                           | Some x4319 ->
                               Ojs.set_prop_ascii x4318 "ignorePunctuation"
                                 (Ojs.bool_to_js x4319)
                           | None -> ());
                          t_of_js x4318
        let cast_from = Obj.magic
      end
    module Collator =
      struct
        type t = [ `Intl_Collator ] intf
        let rec t_of_js : Ojs.t -> t = Obj.magic
        and t_to_js : t -> Ojs.t = Obj.magic
        type tags = [ `Intl_Collator ]
        type 'tags this = 'tags intf constraint 'tags = [> `Intl_Collator ]
        let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
          =
          fun (type __tags) ->
            fun (__tags_of_js : Ojs.t -> __tags) ->
              fun (x4328 : Ojs.t) -> intf_of_js __tags_of_js x4328
        and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
          fun (type __tags) ->
            fun (__tags_to_js : __tags -> Ojs.t) ->
              fun (x4326 : __tags intf) -> intf_to_js __tags_to_js x4326
        let (compare : 'tags this -> x:string -> y:string -> float) =
          fun (x4332 : 'tags this) ->
            fun ~x:(x4330 : string) ->
              fun ~y:(x4331 : string) ->
                Ojs.float_of_js
                  (Ojs.call (this_to_js Obj.magic x4332) "compare"
                     [|(Ojs.string_to_js x4330);(Ojs.string_to_js x4331)|])
        let (resolvedOptions : 'tags this -> ResolvedCollatorOptions.t) =
          fun (x4334 : 'tags this) ->
            ResolvedCollatorOptions.t_of_js
              (Ojs.call (this_to_js Obj.magic x4334) "resolvedOptions" [||])
        let (create :
          ?locales:LocalesArgument.t ->
            ?options:CollatorOptions.t -> unit -> t)
          =
          fun ?locales:(x4336 : LocalesArgument.t option) ->
            fun ?options:(x4337 : CollatorOptions.t option) ->
              fun () ->
                t_of_js
                  (Ojs.new_obj_arr
                     (Ojs.get_prop_ascii
                        (Ojs.get_prop_ascii Ojs.global "Intl") "Collator")
                     (let x4338 =
                        Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                          [||] in
                      (match x4336 with
                       | Some x4340 ->
                           ignore
                             (Ojs.call x4338 "push"
                                [|(LocalesArgument.t_to_js x4340)|])
                       | None -> ());
                      (match x4337 with
                       | Some x4339 ->
                           ignore
                             (Ojs.call x4338 "push"
                                [|(CollatorOptions.t_to_js x4339)|])
                       | None -> ());
                      x4338))
        let (invoke :
          ?locales:LocalesArgument.t ->
            ?options:CollatorOptions.t -> unit -> t)
          =
          fun ?locales:(x4341 : LocalesArgument.t option) ->
            fun ?options:(x4342 : CollatorOptions.t option) ->
              fun () ->
                t_of_js
                  (Ojs.call
                     (Ojs.get_prop_ascii
                        (Ojs.get_prop_ascii Ojs.global "Intl") "Collator")
                     "apply"
                     [|Ojs.null;((let x4343 =
                                    Ojs.new_obj
                                      (Ojs.get_prop_ascii Ojs.global "Array")
                                      [||] in
                                  (match x4341 with
                                   | Some x4345 ->
                                       ignore
                                         (Ojs.call x4343 "push"
                                            [|(LocalesArgument.t_to_js x4345)|])
                                   | None -> ());
                                  (match x4342 with
                                   | Some x4344 ->
                                       ignore
                                         (Ojs.call x4343 "push"
                                            [|(CollatorOptions.t_to_js x4344)|])
                                   | None -> ());
                                  x4343))|])
        let (supportedLocalesOf :
          locales:LocalesArgument.t ->
            ?options:CollatorOptions.t -> unit -> string list)
          =
          fun ~locales:(x4346 : LocalesArgument.t) ->
            fun ?options:(x4347 : CollatorOptions.t option) ->
              fun () ->
                Ojs.list_of_js Ojs.string_of_js
                  (let x4350 =
                     Ojs.get_prop_ascii
                       (Ojs.get_prop_ascii Ojs.global "Intl") "Collator" in
                   Ojs.call (Ojs.get_prop_ascii x4350 "supportedLocalesOf")
                     "apply"
                     [|x4350;((let x4348 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x4348 "push"
                                    [|(LocalesArgument.t_to_js x4346)|]);
                               (match x4347 with
                                | Some x4349 ->
                                    ignore
                                      (Ojs.call x4348 "push"
                                         [|(CollatorOptions.t_to_js x4349)|])
                                | None -> ());
                               x4348))|])
        let (create' :
          ?locales:[ `U1 of string  | `U2 of string list ] ->
            ?options:CollatorOptions.t -> unit -> t)
          =
          fun
            ?locales:(x4352 : [ `U1 of string  | `U2 of string list ] option)
            ->
            fun ?options:(x4353 : CollatorOptions.t option) ->
              fun () ->
                t_of_js
                  (Ojs.new_obj_arr
                     (Ojs.get_prop_ascii
                        (Ojs.get_prop_ascii Ojs.global "Intl") "Collator")
                     (let x4354 =
                        Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                          [||] in
                      (match x4352 with
                       | Some x4356 ->
                           ignore
                             (Ojs.call x4354 "push"
                                [|((match x4356 with
                                    | `U1 x4357 -> Ojs.string_to_js x4357
                                    | `U2 x4358 ->
                                        Ojs.list_to_js Ojs.string_to_js x4358))|])
                       | None -> ());
                      (match x4353 with
                       | Some x4355 ->
                           ignore
                             (Ojs.call x4354 "push"
                                [|(CollatorOptions.t_to_js x4355)|])
                       | None -> ());
                      x4354))
        let (invoke' :
          ?locales:[ `U1 of string  | `U2 of string list ] ->
            ?options:CollatorOptions.t -> unit -> t)
          =
          fun
            ?locales:(x4360 : [ `U1 of string  | `U2 of string list ] option)
            ->
            fun ?options:(x4361 : CollatorOptions.t option) ->
              fun () ->
                t_of_js
                  (Ojs.call
                     (Ojs.get_prop_ascii
                        (Ojs.get_prop_ascii Ojs.global "Intl") "Collator")
                     "apply"
                     [|Ojs.null;((let x4362 =
                                    Ojs.new_obj
                                      (Ojs.get_prop_ascii Ojs.global "Array")
                                      [||] in
                                  (match x4360 with
                                   | Some x4364 ->
                                       ignore
                                         (Ojs.call x4362 "push"
                                            [|((match x4364 with
                                                | `U1 x4365 ->
                                                    Ojs.string_to_js x4365
                                                | `U2 x4366 ->
                                                    Ojs.list_to_js
                                                      Ojs.string_to_js x4366))|])
                                   | None -> ());
                                  (match x4361 with
                                   | Some x4363 ->
                                       ignore
                                         (Ojs.call x4362 "push"
                                            [|(CollatorOptions.t_to_js x4363)|])
                                   | None -> ());
                                  x4362))|])
        let (supportedLocalesOf' :
          locales:[ `U1 of string  | `U2 of string list ] ->
            ?options:CollatorOptions.t -> unit -> string list)
          =
          fun ~locales:(x4368 : [ `U1 of string  | `U2 of string list ]) ->
            fun ?options:(x4369 : CollatorOptions.t option) ->
              fun () ->
                Ojs.list_of_js Ojs.string_of_js
                  (let x4375 =
                     Ojs.get_prop_ascii
                       (Ojs.get_prop_ascii Ojs.global "Intl") "Collator" in
                   Ojs.call (Ojs.get_prop_ascii x4375 "supportedLocalesOf")
                     "apply"
                     [|x4375;((let x4370 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x4370 "push"
                                    [|((match x4368 with
                                        | `U1 x4372 -> Ojs.string_to_js x4372
                                        | `U2 x4373 ->
                                            Ojs.list_to_js Ojs.string_to_js
                                              x4373))|]);
                               (match x4369 with
                                | Some x4371 ->
                                    ignore
                                      (Ojs.call x4370 "push"
                                         [|(CollatorOptions.t_to_js x4371)|])
                                | None -> ());
                               x4370))|])
        let cast_from = Obj.magic
      end
    let (getCanonicalLocales :
      ?locale:[ `String of string  | `Other of string list ] Primitive.t ->
        unit -> string list)
      =
      fun
        ?locale:(x4377 :
                  [ `String of string  | `Other of string list ] Primitive.t
                    option)
        ->
        fun () ->
          Ojs.list_of_js Ojs.string_of_js
            (let x4384 = Ojs.get_prop_ascii Ojs.global "Intl" in
             Ojs.call (Ojs.get_prop_ascii x4384 "getCanonicalLocales")
               "apply"
               [|x4384;((let x4378 =
                           Ojs.new_obj
                             (Ojs.get_prop_ascii Ojs.global "Array") 
                             [||] in
                         (match x4377 with
                          | Some x4379 ->
                              ignore
                                (Ojs.call x4378 "push"
                                   [|(Primitive.t_to_js
                                        (fun
                                           (x4380 :
                                             [ `String of string 
                                             | `Other of string list ])
                                           ->
                                           match x4380 with
                                           | `String x4381 ->
                                               Ojs.string_to_js x4381
                                           | `Other x4382 ->
                                               Ojs.list_to_js
                                                 Ojs.string_to_js x4382)
                                        x4379)|])
                          | None -> ());
                         x4378))|])
    let (supportedValuesOf :
      [ `L_s131_timeZone  | `L_s137_unit  | `L_s28_calendar 
      | `L_s32_collation  | `L_s36_currency  | `L_s97_numberingSystem ] ->
        string list)
      =
      fun
        (x4386 :
          [ `L_s131_timeZone  | `L_s137_unit  | `L_s28_calendar 
          | `L_s32_collation  | `L_s36_currency  | `L_s97_numberingSystem ])
        ->
        Ojs.list_of_js Ojs.string_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Intl")
             "supportedValuesOf"
             [|((match x4386 with
                 | `L_s131_timeZone -> Ojs.string_to_js "timeZone"
                 | `L_s137_unit -> Ojs.string_to_js "unit"
                 | `L_s28_calendar -> Ojs.string_to_js "calendar"
                 | `L_s32_collation -> Ojs.string_to_js "collation"
                 | `L_s36_currency -> Ojs.string_to_js "currency"
                 | `L_s97_numberingSystem ->
                     Ojs.string_to_js "numberingSystem"))|])
  end
module String =
  struct
    module AnonymousInterface9 =
      struct
        type t = Ojs.t
        let rec t_of_js : Ojs.t -> t = fun (x4389 : Ojs.t) -> x4389
        and t_to_js : t -> Ojs.t = fun (x4388 : Ojs.t) -> x4388
        let (get_raw : t -> (string ArrayLike.t, string list) union2) =
          fun (x4390 : t) ->
            union2_of_js
              (fun (x4391 : Ojs.t) ->
                 ArrayLike.t_of_js Ojs.string_of_js x4391)
              (fun (x4393 : Ojs.t) -> Ojs.list_of_js Ojs.string_of_js x4393)
              (Ojs.get_prop_ascii (t_to_js x4390) "raw")
        let (set_raw :
          t -> [ `U1 of string list  | `U2 of string ArrayLike.t ] -> unit) =
          fun (x4395 : t) ->
            fun (x4396 : [ `U1 of string list  | `U2 of string ArrayLike.t ])
              ->
              Ojs.set_prop_ascii (t_to_js x4395) "raw"
                (match x4396 with
                 | `U1 x4397 -> Ojs.list_to_js Ojs.string_to_js x4397
                 | `U2 x4399 -> ArrayLike.t_to_js Ojs.string_to_js x4399)
        let (create :
          raw:(string ArrayLike.t, string list) union2 -> unit -> t) =
          fun ~raw:(x4401 : (string ArrayLike.t, string list) union2) ->
            fun () ->
              let x4402 = Ojs.empty_obj () in
              Ojs.set_prop_ascii x4402 "raw"
                (union2_to_js
                   (fun (x4403 : string ArrayLike.t) ->
                      ArrayLike.t_to_js Ojs.string_to_js x4403)
                   (fun (x4405 : string list) ->
                      Ojs.list_to_js Ojs.string_to_js x4405) x4401);
              t_of_js x4402
      end
    module AnonymousInterface26 =
      struct
        type t = Ojs.t
        let rec t_of_js : Ojs.t -> t = fun (x4408 : Ojs.t) -> x4408
        and t_to_js : t -> Ojs.t = fun (x4407 : Ojs.t) -> x4407
      end
    module AnonymousInterface25 =
      struct
        type t = Ojs.t
        let rec t_of_js : Ojs.t -> t = fun (x4410 : Ojs.t) -> x4410
        and t_to_js : t -> Ojs.t = fun (x4409 : Ojs.t) -> x4409
      end
    module AnonymousInterface24 =
      struct
        type t = Ojs.t
        let rec t_of_js : Ojs.t -> t = fun (x4412 : Ojs.t) -> x4412
        and t_to_js : t -> Ojs.t = fun (x4411 : Ojs.t) -> x4411
      end
    module AnonymousInterface23 =
      struct
        type t = Ojs.t
        let rec t_of_js : Ojs.t -> t = fun (x4414 : Ojs.t) -> x4414
        and t_to_js : t -> Ojs.t = fun (x4413 : Ojs.t) -> x4413
      end
    module AnonymousInterface22 =
      struct
        type t = Ojs.t
        let rec t_of_js : Ojs.t -> t = fun (x4416 : Ojs.t) -> x4416
        and t_to_js : t -> Ojs.t = fun (x4415 : Ojs.t) -> x4415
      end
    type t = [ `String ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type tags = [ `String ]
    type 'tags this = 'tags intf constraint 'tags = [> `String ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x4419 : Ojs.t) -> intf_of_js __tags_of_js x4419
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x4417 : __tags intf) -> intf_to_js __tags_to_js x4417
    let (trimEnd : 'tags this -> string) =
      fun (x4421 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x4421) "trimEnd" [||])
    let (trimStart : 'tags this -> string) =
      fun (x4423 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x4423) "trimStart" [||])
    let (trimLeft : 'tags this -> string) =
      fun (x4425 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x4425) "trimLeft" [||])
    let (trimRight : 'tags this -> string) =
      fun (x4427 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x4427) "trimRight" [||])
    let (at : 'tags this -> index:float -> string option) =
      fun (x4430 : 'tags this) ->
        fun ~index:(x4429 : float) ->
          Ojs.option_of_js Ojs.string_of_js
            (Ojs.call (this_to_js Obj.magic x4430) "at"
               [|(Ojs.float_to_js x4429)|])
    let (replaceAll :
      'tags this ->
        searchValue:[ `U1 of string  | `U2 of RegExp.t ] ->
          replaceValue:string -> string)
      =
      fun (x4437 : 'tags this) ->
        fun ~searchValue:(x4433 : [ `U1 of string  | `U2 of RegExp.t ]) ->
          fun ~replaceValue:(x4436 : string) ->
            Ojs.string_of_js
              (Ojs.call (this_to_js Obj.magic x4437) "replaceAll"
                 [|((match x4433 with
                     | `U1 x4434 -> Ojs.string_to_js x4434
                     | `U2 x4435 -> RegExp.t_to_js x4435));(Ojs.string_to_js
                                                              x4436)|])
    let (replaceAll' :
      'tags this ->
        searchValue:[ `U1 of string  | `U2 of RegExp.t ] ->
          replacer:(substring:string -> args:any list -> string) -> string)
      =
      fun (x4445 : 'tags this) ->
        fun ~searchValue:(x4439 : [ `U1 of string  | `U2 of RegExp.t ]) ->
          fun ~replacer:(x4442 : substring:string -> args:any list -> string)
            ->
            Ojs.string_of_js
              (Ojs.call (this_to_js Obj.magic x4445) "replaceAll"
                 [|((match x4439 with
                     | `U1 x4440 -> Ojs.string_to_js x4440
                     | `U2 x4441 -> RegExp.t_to_js x4441));(Ojs.fun_to_js_args
                                                              (fun
                                                                 (x4443 : _)
                                                                 ->
                                                                 Ojs.string_to_js
                                                                   (x4442
                                                                    ~substring:(
                                                                    Ojs.string_of_js
                                                                    (Ojs.array_get
                                                                    x4443 0))
                                                                    ~args:(
                                                                    Ojs.list_of_js_from
                                                                    any_of_js
                                                                    x4443 1))))|])
    let (matchAll :
      'tags this -> regexp:RegExp.t -> RegExpExecArray.t IterableIterator.t)
      =
      fun (x4448 : 'tags this) ->
        fun ~regexp:(x4447 : RegExp.t) ->
          IterableIterator.t_of_js RegExpExecArray.t_of_js
            (Ojs.call (this_to_js Obj.magic x4448) "matchAll"
               [|(RegExp.t_to_js x4447)|])
    let (toLocaleLowerCase :
      'tags this -> ?locales:Intl.LocalesArgument.t -> unit -> string) =
      fun (x4454 : 'tags this) ->
        fun ?locales:(x4451 : Intl.LocalesArgument.t option) ->
          fun () ->
            Ojs.string_of_js
              (let x4456 = this_to_js Obj.magic x4454 in
               Ojs.call (Ojs.get_prop_ascii x4456 "toLocaleLowerCase")
                 "apply"
                 [|x4456;((let x4452 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x4451 with
                            | Some x4453 ->
                                ignore
                                  (Ojs.call x4452 "push"
                                     [|(Intl.LocalesArgument.t_to_js x4453)|])
                            | None -> ());
                           x4452))|])
    let (toLocaleUpperCase :
      'tags this -> ?locales:Intl.LocalesArgument.t -> unit -> string) =
      fun (x4460 : 'tags this) ->
        fun ?locales:(x4457 : Intl.LocalesArgument.t option) ->
          fun () ->
            Ojs.string_of_js
              (let x4462 = this_to_js Obj.magic x4460 in
               Ojs.call (Ojs.get_prop_ascii x4462 "toLocaleUpperCase")
                 "apply"
                 [|x4462;((let x4458 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x4457 with
                            | Some x4459 ->
                                ignore
                                  (Ojs.call x4458 "push"
                                     [|(Intl.LocalesArgument.t_to_js x4459)|])
                            | None -> ());
                           x4458))|])
    let (localeCompare :
      'tags this ->
        that:string ->
          ?locales:Intl.LocalesArgument.t ->
            ?options:Intl.CollatorOptions.t -> unit -> float)
      =
      fun (x4469 : 'tags this) ->
        fun ~that:(x4463 : string) ->
          fun ?locales:(x4464 : Intl.LocalesArgument.t option) ->
            fun ?options:(x4465 : Intl.CollatorOptions.t option) ->
              fun () ->
                Ojs.float_of_js
                  (let x4471 = this_to_js Obj.magic x4469 in
                   Ojs.call (Ojs.get_prop_ascii x4471 "localeCompare")
                     "apply"
                     [|x4471;((let x4466 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x4466 "push"
                                    [|(Ojs.string_to_js x4463)|]);
                               (match x4464 with
                                | Some x4468 ->
                                    ignore
                                      (Ojs.call x4466 "push"
                                         [|(Intl.LocalesArgument.t_to_js
                                              x4468)|])
                                | None -> ());
                               (match x4465 with
                                | Some x4467 ->
                                    ignore
                                      (Ojs.call x4466 "push"
                                         [|(Intl.CollatorOptions.t_to_js
                                              x4467)|])
                                | None -> ());
                               x4466))|])
    let (padStart :
      'tags this -> maxLength:float -> ?fillString:string -> unit -> string)
      =
      fun (x4476 : 'tags this) ->
        fun ~maxLength:(x4472 : float) ->
          fun ?fillString:(x4473 : string option) ->
            fun () ->
              Ojs.string_of_js
                (let x4478 = this_to_js Obj.magic x4476 in
                 Ojs.call (Ojs.get_prop_ascii x4478 "padStart") "apply"
                   [|x4478;((let x4474 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x4474 "push"
                                  [|(Ojs.float_to_js x4472)|]);
                             (match x4473 with
                              | Some x4475 ->
                                  ignore
                                    (Ojs.call x4474 "push"
                                       [|(Ojs.string_to_js x4475)|])
                              | None -> ());
                             x4474))|])
    let (padEnd :
      'tags this -> maxLength:float -> ?fillString:string -> unit -> string)
      =
      fun (x4483 : 'tags this) ->
        fun ~maxLength:(x4479 : float) ->
          fun ?fillString:(x4480 : string option) ->
            fun () ->
              Ojs.string_of_js
                (let x4485 = this_to_js Obj.magic x4483 in
                 Ojs.call (Ojs.get_prop_ascii x4485 "padEnd") "apply"
                   [|x4485;((let x4481 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x4481 "push"
                                  [|(Ojs.float_to_js x4479)|]);
                             (match x4480 with
                              | Some x4482 ->
                                  ignore
                                    (Ojs.call x4481 "push"
                                       [|(Ojs.string_to_js x4482)|])
                              | None -> ());
                             x4481))|])
    let (match_ :
      'tags this ->
        matcher:AnonymousInterface22.t -> RegExpMatchArray.t option)
      =
      fun (x4487 : 'tags this) ->
        fun ~matcher:(x4486 : AnonymousInterface22.t) ->
          Ojs.option_of_js RegExpMatchArray.t_of_js
            (Ojs.call (this_to_js Obj.magic x4487) "match"
               [|(AnonymousInterface22.t_to_js x4486)|])
    let (replace :
      'tags this ->
        searchValue:AnonymousInterface23.t -> replaceValue:string -> string)
      =
      fun (x4492 : 'tags this) ->
        fun ~searchValue:(x4490 : AnonymousInterface23.t) ->
          fun ~replaceValue:(x4491 : string) ->
            Ojs.string_of_js
              (Ojs.call (this_to_js Obj.magic x4492) "replace"
                 [|(AnonymousInterface23.t_to_js x4490);(Ojs.string_to_js
                                                           x4491)|])
    let (replace' :
      'tags this ->
        searchValue:AnonymousInterface24.t ->
          replacer:(substring:string -> args:any list -> string) -> string)
      =
      fun (x4498 : 'tags this) ->
        fun ~searchValue:(x4494 : AnonymousInterface24.t) ->
          fun ~replacer:(x4495 : substring:string -> args:any list -> string)
            ->
            Ojs.string_of_js
              (Ojs.call (this_to_js Obj.magic x4498) "replace"
                 [|(AnonymousInterface24.t_to_js x4494);(Ojs.fun_to_js_args
                                                           (fun (x4496 : _)
                                                              ->
                                                              Ojs.string_to_js
                                                                (x4495
                                                                   ~substring:(
                                                                   Ojs.string_of_js
                                                                    (Ojs.array_get
                                                                    x4496 0))
                                                                   ~args:(
                                                                   Ojs.list_of_js_from
                                                                    any_of_js
                                                                    x4496 1))))|])
    let (search : 'tags this -> searcher:AnonymousInterface25.t -> float) =
      fun (x4501 : 'tags this) ->
        fun ~searcher:(x4500 : AnonymousInterface25.t) ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x4501) "search"
               [|(AnonymousInterface25.t_to_js x4500)|])
    let (split :
      'tags this ->
        splitter:AnonymousInterface26.t ->
          ?limit:float -> unit -> string list)
      =
      fun (x4507 : 'tags this) ->
        fun ~splitter:(x4503 : AnonymousInterface26.t) ->
          fun ?limit:(x4504 : float option) ->
            fun () ->
              Ojs.list_of_js Ojs.string_of_js
                (let x4509 = this_to_js Obj.magic x4507 in
                 Ojs.call (Ojs.get_prop_ascii x4509 "split") "apply"
                   [|x4509;((let x4505 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x4505 "push"
                                  [|(AnonymousInterface26.t_to_js x4503)|]);
                             (match x4504 with
                              | Some x4506 ->
                                  ignore
                                    (Ojs.call x4505 "push"
                                       [|(Ojs.float_to_js x4506)|])
                              | None -> ());
                             x4505))|])
    let (codePointAt : 'tags this -> pos:float -> float option) =
      fun (x4512 : 'tags this) ->
        fun ~pos:(x4511 : float) ->
          Ojs.option_of_js Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x4512) "codePointAt"
               [|(Ojs.float_to_js x4511)|])
    let (includes :
      'tags this -> searchString:string -> ?position:float -> unit -> bool) =
      fun (x4519 : 'tags this) ->
        fun ~searchString:(x4515 : string) ->
          fun ?position:(x4516 : float option) ->
            fun () ->
              Ojs.bool_of_js
                (let x4521 = this_to_js Obj.magic x4519 in
                 Ojs.call (Ojs.get_prop_ascii x4521 "includes") "apply"
                   [|x4521;((let x4517 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x4517 "push"
                                  [|(Ojs.string_to_js x4515)|]);
                             (match x4516 with
                              | Some x4518 ->
                                  ignore
                                    (Ojs.call x4517 "push"
                                       [|(Ojs.float_to_js x4518)|])
                              | None -> ());
                             x4517))|])
    let (endsWith :
      'tags this -> searchString:string -> ?endPosition:float -> unit -> bool)
      =
      fun (x4526 : 'tags this) ->
        fun ~searchString:(x4522 : string) ->
          fun ?endPosition:(x4523 : float option) ->
            fun () ->
              Ojs.bool_of_js
                (let x4528 = this_to_js Obj.magic x4526 in
                 Ojs.call (Ojs.get_prop_ascii x4528 "endsWith") "apply"
                   [|x4528;((let x4524 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x4524 "push"
                                  [|(Ojs.string_to_js x4522)|]);
                             (match x4523 with
                              | Some x4525 ->
                                  ignore
                                    (Ojs.call x4524 "push"
                                       [|(Ojs.float_to_js x4525)|])
                              | None -> ());
                             x4524))|])
    let (normalize :
      'tags this ->
        form:[ `U1 of [ `L_s11_NFC ]  | `U2 of [ `L_s12_NFD ] 
             | `U3 of [ `L_s13_NFKC ]  | `U4 of [ `L_s14_NFKD ] ]
          -> string)
      =
      fun (x4534 : 'tags this) ->
        fun
          ~form:(x4529 :
                  [ `U1 of [ `L_s11_NFC ]  | `U2 of [ `L_s12_NFD ] 
                  | `U3 of [ `L_s13_NFKC ]  | `U4 of [ `L_s14_NFKD ] ])
          ->
          Ojs.string_of_js
            (Ojs.call (this_to_js Obj.magic x4534) "normalize"
               [|((match x4529 with
                   | `U1 x4530 ->
                       (match x4530 with
                        | `L_s11_NFC -> Ojs.string_to_js "NFC")
                   | `U2 x4531 ->
                       (match x4531 with
                        | `L_s12_NFD -> Ojs.string_to_js "NFD")
                   | `U3 x4532 ->
                       (match x4532 with
                        | `L_s13_NFKC -> Ojs.string_to_js "NFKC")
                   | `U4 x4533 ->
                       (match x4533 with
                        | `L_s14_NFKD -> Ojs.string_to_js "NFKD")))|])
    let (normalize' : 'tags this -> ?form:string -> unit -> string) =
      fun (x4539 : 'tags this) ->
        fun ?form:(x4536 : string option) ->
          fun () ->
            Ojs.string_of_js
              (let x4541 = this_to_js Obj.magic x4539 in
               Ojs.call (Ojs.get_prop_ascii x4541 "normalize") "apply"
                 [|x4541;((let x4537 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x4536 with
                            | Some x4538 ->
                                ignore
                                  (Ojs.call x4537 "push"
                                     [|(Ojs.string_to_js x4538)|])
                            | None -> ());
                           x4537))|])
    let (repeat : 'tags this -> count:float -> string) =
      fun (x4543 : 'tags this) ->
        fun ~count:(x4542 : float) ->
          Ojs.string_of_js
            (Ojs.call (this_to_js Obj.magic x4543) "repeat"
               [|(Ojs.float_to_js x4542)|])
    let (startsWith :
      'tags this -> searchString:string -> ?position:float -> unit -> bool) =
      fun (x4549 : 'tags this) ->
        fun ~searchString:(x4545 : string) ->
          fun ?position:(x4546 : float option) ->
            fun () ->
              Ojs.bool_of_js
                (let x4551 = this_to_js Obj.magic x4549 in
                 Ojs.call (Ojs.get_prop_ascii x4551 "startsWith") "apply"
                   [|x4551;((let x4547 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x4547 "push"
                                  [|(Ojs.string_to_js x4545)|]);
                             (match x4546 with
                              | Some x4548 ->
                                  ignore
                                    (Ojs.call x4547 "push"
                                       [|(Ojs.float_to_js x4548)|])
                              | None -> ());
                             x4547))|])
    let (anchor : 'tags this -> name:string -> string) =
      fun (x4553 : 'tags this) ->
        fun ~name:(x4552 : string) ->
          Ojs.string_of_js
            (Ojs.call (this_to_js Obj.magic x4553) "anchor"
               [|(Ojs.string_to_js x4552)|])
    let (big : 'tags this -> string) =
      fun (x4555 : 'tags this) ->
        Ojs.string_of_js (Ojs.call (this_to_js Obj.magic x4555) "big" [||])
    let (blink : 'tags this -> string) =
      fun (x4557 : 'tags this) ->
        Ojs.string_of_js (Ojs.call (this_to_js Obj.magic x4557) "blink" [||])
    let (bold : 'tags this -> string) =
      fun (x4559 : 'tags this) ->
        Ojs.string_of_js (Ojs.call (this_to_js Obj.magic x4559) "bold" [||])
    let (fixed : 'tags this -> string) =
      fun (x4561 : 'tags this) ->
        Ojs.string_of_js (Ojs.call (this_to_js Obj.magic x4561) "fixed" [||])
    let (fontcolor : 'tags this -> color:string -> string) =
      fun (x4564 : 'tags this) ->
        fun ~color:(x4563 : string) ->
          Ojs.string_of_js
            (Ojs.call (this_to_js Obj.magic x4564) "fontcolor"
               [|(Ojs.string_to_js x4563)|])
    let (fontsize : 'tags this -> size:float -> string) =
      fun (x4567 : 'tags this) ->
        fun ~size:(x4566 : float) ->
          Ojs.string_of_js
            (Ojs.call (this_to_js Obj.magic x4567) "fontsize"
               [|(Ojs.float_to_js x4566)|])
    let (fontsize' : 'tags this -> size:string -> string) =
      fun (x4570 : 'tags this) ->
        fun ~size:(x4569 : string) ->
          Ojs.string_of_js
            (Ojs.call (this_to_js Obj.magic x4570) "fontsize"
               [|(Ojs.string_to_js x4569)|])
    let (italics : 'tags this -> string) =
      fun (x4572 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x4572) "italics" [||])
    let (link : 'tags this -> url:string -> string) =
      fun (x4575 : 'tags this) ->
        fun ~url:(x4574 : string) ->
          Ojs.string_of_js
            (Ojs.call (this_to_js Obj.magic x4575) "link"
               [|(Ojs.string_to_js x4574)|])
    let (small : 'tags this -> string) =
      fun (x4577 : 'tags this) ->
        Ojs.string_of_js (Ojs.call (this_to_js Obj.magic x4577) "small" [||])
    let (strike : 'tags this -> string) =
      fun (x4579 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x4579) "strike" [||])
    let (sub : 'tags this -> string) =
      fun (x4581 : 'tags this) ->
        Ojs.string_of_js (Ojs.call (this_to_js Obj.magic x4581) "sub" [||])
    let (sup : 'tags this -> string) =
      fun (x4583 : 'tags this) ->
        Ojs.string_of_js (Ojs.call (this_to_js Obj.magic x4583) "sup" [||])
    let (localeCompare' :
      'tags this ->
        that:string ->
          ?locales:[ `U1 of string  | `U2 of string list ] ->
            ?options:Intl.CollatorOptions.t -> unit -> float)
      =
      fun (x4594 : 'tags this) ->
        fun ~that:(x4585 : string) ->
          fun
            ?locales:(x4586 : [ `U1 of string  | `U2 of string list ] option)
            ->
            fun ?options:(x4587 : Intl.CollatorOptions.t option) ->
              fun () ->
                Ojs.float_of_js
                  (let x4596 = this_to_js Obj.magic x4594 in
                   Ojs.call (Ojs.get_prop_ascii x4596 "localeCompare")
                     "apply"
                     [|x4596;((let x4588 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x4588 "push"
                                    [|(Ojs.string_to_js x4585)|]);
                               (match x4586 with
                                | Some x4590 ->
                                    ignore
                                      (Ojs.call x4588 "push"
                                         [|((match x4590 with
                                             | `U1 x4591 ->
                                                 Ojs.string_to_js x4591
                                             | `U2 x4592 ->
                                                 Ojs.list_to_js
                                                   Ojs.string_to_js x4592))|])
                                | None -> ());
                               (match x4587 with
                                | Some x4589 ->
                                    ignore
                                      (Ojs.call x4588 "push"
                                         [|(Intl.CollatorOptions.t_to_js
                                              x4589)|])
                                | None -> ());
                               x4588))|])
    let (toString : 'tags this -> string) =
      fun (x4597 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x4597) "toString" [||])
    let (charAt : 'tags this -> pos:float -> string) =
      fun (x4600 : 'tags this) ->
        fun ~pos:(x4599 : float) ->
          Ojs.string_of_js
            (Ojs.call (this_to_js Obj.magic x4600) "charAt"
               [|(Ojs.float_to_js x4599)|])
    let (charCodeAt : 'tags this -> index:float -> float) =
      fun (x4603 : 'tags this) ->
        fun ~index:(x4602 : float) ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x4603) "charCodeAt"
               [|(Ojs.float_to_js x4602)|])
    let (concat : 'tags this -> strings:string list -> string) =
      fun (x4608 : 'tags this) ->
        fun ~strings:(x4605 : string list) ->
          Ojs.string_of_js
            (let x4610 = this_to_js Obj.magic x4608 in
             Ojs.call (Ojs.get_prop_ascii x4610 "concat") "apply"
               [|x4610;((let x4606 =
                           Ojs.new_obj
                             (Ojs.get_prop_ascii Ojs.global "Array") 
                             [||] in
                         List.iter
                           (fun (x4607 : string) ->
                              ignore
                                (Ojs.call x4606 "push"
                                   [|(Ojs.string_to_js x4607)|])) x4605;
                         x4606))|])
    let (indexOf :
      'tags this -> searchString:string -> ?position:float -> unit -> float)
      =
      fun (x4615 : 'tags this) ->
        fun ~searchString:(x4611 : string) ->
          fun ?position:(x4612 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x4617 = this_to_js Obj.magic x4615 in
                 Ojs.call (Ojs.get_prop_ascii x4617 "indexOf") "apply"
                   [|x4617;((let x4613 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x4613 "push"
                                  [|(Ojs.string_to_js x4611)|]);
                             (match x4612 with
                              | Some x4614 ->
                                  ignore
                                    (Ojs.call x4613 "push"
                                       [|(Ojs.float_to_js x4614)|])
                              | None -> ());
                             x4613))|])
    let (lastIndexOf :
      'tags this -> searchString:string -> ?position:float -> unit -> float)
      =
      fun (x4622 : 'tags this) ->
        fun ~searchString:(x4618 : string) ->
          fun ?position:(x4619 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x4624 = this_to_js Obj.magic x4622 in
                 Ojs.call (Ojs.get_prop_ascii x4624 "lastIndexOf") "apply"
                   [|x4624;((let x4620 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x4620 "push"
                                  [|(Ojs.string_to_js x4618)|]);
                             (match x4619 with
                              | Some x4621 ->
                                  ignore
                                    (Ojs.call x4620 "push"
                                       [|(Ojs.float_to_js x4621)|])
                              | None -> ());
                             x4620))|])
    let (localeCompare'' : 'tags this -> that:string -> float) =
      fun (x4626 : 'tags this) ->
        fun ~that:(x4625 : string) ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x4626) "localeCompare"
               [|(Ojs.string_to_js x4625)|])
    let (match_' :
      'tags this ->
        regexp:[ `U1 of string  | `U2 of RegExp.t ] ->
          RegExpMatchArray.t option)
      =
      fun (x4631 : 'tags this) ->
        fun ~regexp:(x4628 : [ `U1 of string  | `U2 of RegExp.t ]) ->
          Ojs.option_of_js RegExpMatchArray.t_of_js
            (Ojs.call (this_to_js Obj.magic x4631) "match"
               [|((match x4628 with
                   | `U1 x4629 -> Ojs.string_to_js x4629
                   | `U2 x4630 -> RegExp.t_to_js x4630))|])
    let (replace'' :
      'tags this ->
        searchValue:[ `U1 of string  | `U2 of RegExp.t ] ->
          replaceValue:string -> string)
      =
      fun (x4638 : 'tags this) ->
        fun ~searchValue:(x4634 : [ `U1 of string  | `U2 of RegExp.t ]) ->
          fun ~replaceValue:(x4637 : string) ->
            Ojs.string_of_js
              (Ojs.call (this_to_js Obj.magic x4638) "replace"
                 [|((match x4634 with
                     | `U1 x4635 -> Ojs.string_to_js x4635
                     | `U2 x4636 -> RegExp.t_to_js x4636));(Ojs.string_to_js
                                                              x4637)|])
    let (replace''' :
      'tags this ->
        searchValue:[ `U1 of string  | `U2 of RegExp.t ] ->
          replacer:(substring:string -> args:any list -> string) -> string)
      =
      fun (x4646 : 'tags this) ->
        fun ~searchValue:(x4640 : [ `U1 of string  | `U2 of RegExp.t ]) ->
          fun ~replacer:(x4643 : substring:string -> args:any list -> string)
            ->
            Ojs.string_of_js
              (Ojs.call (this_to_js Obj.magic x4646) "replace"
                 [|((match x4640 with
                     | `U1 x4641 -> Ojs.string_to_js x4641
                     | `U2 x4642 -> RegExp.t_to_js x4642));(Ojs.fun_to_js_args
                                                              (fun
                                                                 (x4644 : _)
                                                                 ->
                                                                 Ojs.string_to_js
                                                                   (x4643
                                                                    ~substring:(
                                                                    Ojs.string_of_js
                                                                    (Ojs.array_get
                                                                    x4644 0))
                                                                    ~args:(
                                                                    Ojs.list_of_js_from
                                                                    any_of_js
                                                                    x4644 1))))|])
    let (search' :
      'tags this -> regexp:[ `U1 of string  | `U2 of RegExp.t ] -> float) =
      fun (x4651 : 'tags this) ->
        fun ~regexp:(x4648 : [ `U1 of string  | `U2 of RegExp.t ]) ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x4651) "search"
               [|((match x4648 with
                   | `U1 x4649 -> Ojs.string_to_js x4649
                   | `U2 x4650 -> RegExp.t_to_js x4650))|])
    let (slice : 'tags this -> ?start:float -> ?end_:float -> unit -> string)
      =
      fun (x4658 : 'tags this) ->
        fun ?start:(x4653 : float option) ->
          fun ?end_:(x4654 : float option) ->
            fun () ->
              Ojs.string_of_js
                (let x4660 = this_to_js Obj.magic x4658 in
                 Ojs.call (Ojs.get_prop_ascii x4660 "slice") "apply"
                   [|x4660;((let x4655 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x4653 with
                              | Some x4657 ->
                                  ignore
                                    (Ojs.call x4655 "push"
                                       [|(Ojs.float_to_js x4657)|])
                              | None -> ());
                             (match x4654 with
                              | Some x4656 ->
                                  ignore
                                    (Ojs.call x4655 "push"
                                       [|(Ojs.float_to_js x4656)|])
                              | None -> ());
                             x4655))|])
    let (split' :
      'tags this ->
        separator:[ `U1 of string  | `U2 of RegExp.t ] ->
          ?limit:float -> unit -> string list)
      =
      fun (x4667 : 'tags this) ->
        fun ~separator:(x4661 : [ `U1 of string  | `U2 of RegExp.t ]) ->
          fun ?limit:(x4662 : float option) ->
            fun () ->
              Ojs.list_of_js Ojs.string_of_js
                (let x4669 = this_to_js Obj.magic x4667 in
                 Ojs.call (Ojs.get_prop_ascii x4669 "split") "apply"
                   [|x4669;((let x4663 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x4663 "push"
                                  [|((match x4661 with
                                      | `U1 x4665 -> Ojs.string_to_js x4665
                                      | `U2 x4666 -> RegExp.t_to_js x4666))|]);
                             (match x4662 with
                              | Some x4664 ->
                                  ignore
                                    (Ojs.call x4663 "push"
                                       [|(Ojs.float_to_js x4664)|])
                              | None -> ());
                             x4663))|])
    let (substring :
      'tags this -> start:float -> ?end_:float -> unit -> string) =
      fun (x4675 : 'tags this) ->
        fun ~start:(x4671 : float) ->
          fun ?end_:(x4672 : float option) ->
            fun () ->
              Ojs.string_of_js
                (let x4677 = this_to_js Obj.magic x4675 in
                 Ojs.call (Ojs.get_prop_ascii x4677 "substring") "apply"
                   [|x4677;((let x4673 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x4673 "push"
                                  [|(Ojs.float_to_js x4671)|]);
                             (match x4672 with
                              | Some x4674 ->
                                  ignore
                                    (Ojs.call x4673 "push"
                                       [|(Ojs.float_to_js x4674)|])
                              | None -> ());
                             x4673))|])
    let (toLowerCase : 'tags this -> string) =
      fun (x4678 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x4678) "toLowerCase" [||])
    let (toLocaleLowerCase' :
      'tags this ->
        ?locales:[ `U1 of string  | `U2 of string list ] -> unit -> string)
      =
      fun (x4686 : 'tags this) ->
        fun ?locales:(x4680 : [ `U1 of string  | `U2 of string list ] option)
          ->
          fun () ->
            Ojs.string_of_js
              (let x4688 = this_to_js Obj.magic x4686 in
               Ojs.call (Ojs.get_prop_ascii x4688 "toLocaleLowerCase")
                 "apply"
                 [|x4688;((let x4681 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x4680 with
                            | Some x4682 ->
                                ignore
                                  (Ojs.call x4681 "push"
                                     [|((match x4682 with
                                         | `U1 x4683 ->
                                             Ojs.string_to_js x4683
                                         | `U2 x4684 ->
                                             Ojs.list_to_js Ojs.string_to_js
                                               x4684))|])
                            | None -> ());
                           x4681))|])
    let (toUpperCase : 'tags this -> string) =
      fun (x4689 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x4689) "toUpperCase" [||])
    let (toLocaleUpperCase' :
      'tags this ->
        ?locales:[ `U1 of string  | `U2 of string list ] -> unit -> string)
      =
      fun (x4697 : 'tags this) ->
        fun ?locales:(x4691 : [ `U1 of string  | `U2 of string list ] option)
          ->
          fun () ->
            Ojs.string_of_js
              (let x4699 = this_to_js Obj.magic x4697 in
               Ojs.call (Ojs.get_prop_ascii x4699 "toLocaleUpperCase")
                 "apply"
                 [|x4699;((let x4692 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x4691 with
                            | Some x4693 ->
                                ignore
                                  (Ojs.call x4692 "push"
                                     [|((match x4693 with
                                         | `U1 x4694 ->
                                             Ojs.string_to_js x4694
                                         | `U2 x4695 ->
                                             Ojs.list_to_js Ojs.string_to_js
                                               x4695))|])
                            | None -> ());
                           x4692))|])
    let (trim : 'tags this -> string) =
      fun (x4700 : 'tags this) ->
        Ojs.string_of_js (Ojs.call (this_to_js Obj.magic x4700) "trim" [||])
    let (get_length : 'tags this -> float) =
      fun (x4702 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x4702) "length")
    let (substr :
      'tags this -> from:float -> ?length:float -> unit -> string) =
      fun (x4708 : 'tags this) ->
        fun ~from:(x4704 : float) ->
          fun ?length:(x4705 : float option) ->
            fun () ->
              Ojs.string_of_js
                (let x4710 = this_to_js Obj.magic x4708 in
                 Ojs.call (Ojs.get_prop_ascii x4710 "substr") "apply"
                   [|x4710;((let x4706 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x4706 "push"
                                  [|(Ojs.float_to_js x4704)|]);
                             (match x4705 with
                              | Some x4707 ->
                                  ignore
                                    (Ojs.call x4706 "push"
                                       [|(Ojs.float_to_js x4707)|])
                              | None -> ());
                             x4706))|])
    let (valueOf : 'tags this -> string) =
      fun (x4711 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x4711) "valueOf" [||])
    let (get : 'tags this -> float -> string) =
      fun (x4713 : 'tags this) ->
        fun (x4715 : float) ->
          Ojs.string_of_js
            (Ojs.get_prop (this_to_js Obj.magic x4713)
               (Ojs.float_to_js x4715))
    let (fromCodePoint : float list -> string) =
      fun (x4716 : float list) ->
        Ojs.string_of_js
          (let x4719 = Ojs.get_prop_ascii Ojs.global "String" in
           Ojs.call (Ojs.get_prop_ascii x4719 "fromCodePoint") "apply"
             [|x4719;((let x4717 =
                         Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                           [||] in
                       List.iter
                         (fun (x4718 : float) ->
                            ignore
                              (Ojs.call x4717 "push"
                                 [|(Ojs.float_to_js x4718)|])) x4716;
                       x4717))|])
    let (raw :
      template:AnonymousInterface9.t -> substitutions:any list -> string) =
      fun ~template:(x4720 : AnonymousInterface9.t) ->
        fun ~substitutions:(x4721 : any list) ->
          Ojs.string_of_js
            (let x4724 = Ojs.get_prop_ascii Ojs.global "String" in
             Ojs.call (Ojs.get_prop_ascii x4724 "raw") "apply"
               [|x4724;((let x4722 =
                           Ojs.new_obj
                             (Ojs.get_prop_ascii Ojs.global "Array") 
                             [||] in
                         ignore
                           (Ojs.call x4722 "push"
                              [|(AnonymousInterface9.t_to_js x4720)|]);
                         List.iter
                           (fun (x4723 : any) ->
                              ignore
                                (Ojs.call x4722 "push" [|(any_to_js x4723)|]))
                           x4721;
                         x4722))|])
    let (create : ?value:any -> unit -> t) =
      fun ?value:(x4725 : any option) ->
        fun () ->
          t_of_js
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "String")
               (let x4726 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x4725 with
                 | Some x4727 ->
                     ignore (Ojs.call x4726 "push" [|(any_to_js x4727)|])
                 | None -> ());
                x4726))
    let (invoke : ?value:any -> unit -> string) =
      fun ?value:(x4728 : any option) ->
        fun () ->
          Ojs.string_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "String") "apply"
               [|Ojs.null;((let x4729 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x4728 with
                             | Some x4730 ->
                                 ignore
                                   (Ojs.call x4729 "push"
                                      [|(any_to_js x4730)|])
                             | None -> ());
                            x4729))|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "String")
             "prototype")
    let (fromCharCode : float list -> string) =
      fun (x4731 : float list) ->
        Ojs.string_of_js
          (let x4734 = Ojs.get_prop_ascii Ojs.global "String" in
           Ojs.call (Ojs.get_prop_ascii x4734 "fromCharCode") "apply"
             [|x4734;((let x4732 =
                         Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                           [||] in
                       List.iter
                         (fun (x4733 : float) ->
                            ignore
                              (Ojs.call x4732 "push"
                                 [|(Ojs.float_to_js x4733)|])) x4731;
                       x4732))|])
    let cast_from = Obj.magic
    let (of_ml : string -> t) =
      fun (x4735 : string) -> t_of_js (Ojs.string_to_js x4735)
    let (to_ml : t -> string) =
      fun (x4736 : t) ->
        Ojs.string_of_js (Ojs.call (t_to_js x4736) "valueOf" [||])
  end
module Set =
  struct
    type 'T t = [ `Set of 'T ] intf
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun _T -> Obj.magic
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun _T -> Obj.magic
    type 'T tags = [ `Set of 'T ]
    type ('tags, 'T) this = 'tags intf constraint 'tags = [> `Set of 'T ]
    let rec this_of_js :
      'tags 'T .
        (Ojs.t -> 'tags) -> (Ojs.t -> 'T) -> Ojs.t -> ('tags, 'T) this
      =
      fun (type __tags) ->
        fun (type __T) ->
          fun (__tags_of_js : Ojs.t -> __tags) ->
            fun (__T_of_js : Ojs.t -> __T) ->
              fun (x4739 : Ojs.t) -> intf_of_js __tags_of_js x4739
    and this_to_js :
      'tags 'T .
        ('tags -> Ojs.t) -> ('T -> Ojs.t) -> ('tags, 'T) this -> Ojs.t
      =
      fun (type __tags) ->
        fun (type __T) ->
          fun (__tags_to_js : __tags -> Ojs.t) ->
            fun (__T_to_js : __T -> Ojs.t) ->
              fun (x4737 : __tags intf) -> intf_to_js __tags_to_js x4737
    let (entries : ('tags, 'T) this -> ('T * 'T) IterableIterator.t) =
      fun (x4741 : ('tags, 'T) this) ->
        IterableIterator.t_of_js
          (fun (x4744 : Ojs.t) ->
             let x4745 = x4744 in
             ((Obj.magic (Ojs.array_get x4745 0)),
               (Obj.magic (Ojs.array_get x4745 1))))
          (Ojs.call (this_to_js Obj.magic Obj.magic x4741) "entries" [||])
    let (keys : ('tags, 'T) this -> 'T IterableIterator.t) =
      fun (x4746 : ('tags, 'T) this) ->
        IterableIterator.t_of_js Obj.magic
          (Ojs.call (this_to_js Obj.magic Obj.magic x4746) "keys" [||])
    let (values : ('tags, 'T) this -> 'T IterableIterator.t) =
      fun (x4750 : ('tags, 'T) this) ->
        IterableIterator.t_of_js Obj.magic
          (Ojs.call (this_to_js Obj.magic Obj.magic x4750) "values" [||])
    let (add : ('tags, 'T) this -> value:'T -> ('tags, 'T) this) =
      fun (x4755 : ('tags, 'T) this) ->
        fun ~value:(x4754 : 'T) ->
          this_of_js Obj.magic Obj.magic
            (Ojs.call (this_to_js Obj.magic Obj.magic x4755) "add"
               [|(Obj.magic x4754)|])
    let (clear : ('tags, 'T) this -> unit) =
      fun (x4760 : ('tags, 'T) this) ->
        ignore (Ojs.call (this_to_js Obj.magic Obj.magic x4760) "clear" [||])
    let (delete : ('tags, 'T) this -> value:'T -> bool) =
      fun (x4764 : ('tags, 'T) this) ->
        fun ~value:(x4763 : 'T) ->
          Ojs.bool_of_js
            (Ojs.call (this_to_js Obj.magic Obj.magic x4764) "delete"
               [|(Obj.magic x4763)|])
    let (forEach :
      ('tags, 'T) this ->
        callbackfn:(value:'T -> value2:'T -> set_:'T t -> unit) ->
          ?thisArg:any -> unit -> unit)
      =
      fun (x4775 : ('tags, 'T) this) ->
        fun ~callbackfn:(x4767 : value:'T -> value2:'T -> set_:'T t -> unit)
          ->
          fun ?thisArg:(x4768 : any option) ->
            fun () ->
              ignore
                (let x4778 = this_to_js Obj.magic Obj.magic x4775 in
                 Ojs.call (Ojs.get_prop_ascii x4778 "forEach") "apply"
                   [|x4778;((let x4769 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x4769 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x4771 : Ojs.t) ->
                                          fun (x4772 : Ojs.t) ->
                                            fun (x4773 : Ojs.t) ->
                                              x4767 ~value:(Obj.magic x4771)
                                                ~value2:(Obj.magic x4772)
                                                ~set_:(t_of_js Obj.magic
                                                         x4773)))|]);
                             (match x4768 with
                              | Some x4770 ->
                                  ignore
                                    (Ojs.call x4769 "push"
                                       [|(any_to_js x4770)|])
                              | None -> ());
                             x4769))|])
    let (has : ('tags, 'T) this -> value:'T -> bool) =
      fun (x4780 : ('tags, 'T) this) ->
        fun ~value:(x4779 : 'T) ->
          Ojs.bool_of_js
            (Ojs.call (this_to_js Obj.magic Obj.magic x4780) "has"
               [|(Obj.magic x4779)|])
    let (get_size : ('tags, 'T) this -> float) =
      fun (x4783 : ('tags, 'T) this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic Obj.magic x4783) "size")
    let (create : ?iterable:'T Iterable.t option -> unit -> 'T t) =
      fun ?iterable:(x4786 : 'T Iterable.t option option) ->
        fun () ->
          t_of_js Obj.magic
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "Set")
               (let x4787 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x4786 with
                 | Some x4788 ->
                     ignore
                       (Ojs.call x4787 "push"
                          [|(Ojs.option_to_js
                               (fun (x4789 : 'T Iterable.t) ->
                                  Iterable.t_to_js Obj.magic x4789) x4788)|])
                 | None -> ());
                x4787))
    let (create' : ?values:'T list option -> unit -> 'T t) =
      fun ?values:(x4792 : 'T list option option) ->
        fun () ->
          t_of_js Obj.magic
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "Set")
               (let x4793 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x4792 with
                 | Some x4794 ->
                     ignore
                       (Ojs.call x4793 "push"
                          [|(Ojs.option_to_js
                               (fun (x4795 : 'T list) ->
                                  Ojs.list_to_js Obj.magic x4795) x4794)|])
                 | None -> ());
                x4793))
    let (prototype : unit -> any t) =
      fun () ->
        t_of_js any_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Set")
             "prototype")
    let cast_from = Obj.magic
  end
module ReturnType =
  struct
    type 'T t = any
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun (type __T) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x4800 : Ojs.t) -> any_of_js x4800
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t =
      fun (type __T) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x4799 : any) -> any_to_js x4799
  end
module Required =
  struct
    type 'T t = any
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun (type __T) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x4802 : Ojs.t) -> any_of_js x4802
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t =
      fun (type __T) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x4801 : any) -> any_to_js x4801
  end
module ReferenceError =
  struct
    type t = [ `Error  | `ReferenceError ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type tags = [ `Error  | `ReferenceError ]
    type 'tags this = 'tags intf constraint 'tags = [> `ReferenceError ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x4805 : Ojs.t) -> intf_of_js __tags_of_js x4805
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x4803 : __tags intf) -> intf_to_js __tags_to_js x4803
    let (create : ?message:string -> ?options:ErrorOptions.t -> unit -> t) =
      fun ?message:(x4807 : string option) ->
        fun ?options:(x4808 : ErrorOptions.t option) ->
          fun () ->
            t_of_js
              (Ojs.new_obj_arr
                 (Ojs.get_prop_ascii Ojs.global "ReferenceError")
                 (let x4809 =
                    Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                  (match x4807 with
                   | Some x4811 ->
                       ignore
                         (Ojs.call x4809 "push" [|(Ojs.string_to_js x4811)|])
                   | None -> ());
                  (match x4808 with
                   | Some x4810 ->
                       ignore
                         (Ojs.call x4809 "push"
                            [|(ErrorOptions.t_to_js x4810)|])
                   | None -> ());
                  x4809))
    let (invoke : ?message:string -> ?options:ErrorOptions.t -> unit -> t) =
      fun ?message:(x4812 : string option) ->
        fun ?options:(x4813 : ErrorOptions.t option) ->
          fun () ->
            t_of_js
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "ReferenceError")
                 "apply"
                 [|Ojs.null;((let x4814 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              (match x4812 with
                               | Some x4816 ->
                                   ignore
                                     (Ojs.call x4814 "push"
                                        [|(Ojs.string_to_js x4816)|])
                               | None -> ());
                              (match x4813 with
                               | Some x4815 ->
                                   ignore
                                     (Ojs.call x4814 "push"
                                        [|(ErrorOptions.t_to_js x4815)|])
                               | None -> ());
                              x4814))|])
    let (create' : ?message:string -> unit -> t) =
      fun ?message:(x4817 : string option) ->
        fun () ->
          t_of_js
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "ReferenceError")
               (let x4818 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x4817 with
                 | Some x4819 ->
                     ignore
                       (Ojs.call x4818 "push" [|(Ojs.string_to_js x4819)|])
                 | None -> ());
                x4818))
    let (invoke' : ?message:string -> unit -> t) =
      fun ?message:(x4820 : string option) ->
        fun () ->
          t_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "ReferenceError")
               "apply"
               [|Ojs.null;((let x4821 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x4820 with
                             | Some x4822 ->
                                 ignore
                                   (Ojs.call x4821 "push"
                                      [|(Ojs.string_to_js x4822)|])
                             | None -> ());
                            x4821))|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "ReferenceError") "prototype")
    let cast_from = Obj.magic
  end
module ReadonlySet =
  struct
    type 'T t = [ `ReadonlySet of 'T ] intf
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun _T -> Obj.magic
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun _T -> Obj.magic
    type 'T tags = [ `ReadonlySet of 'T ]
    type ('tags, 'T) this =
      'tags intf constraint 'tags = [> `ReadonlySet of 'T ]
    let rec this_of_js :
      'tags 'T .
        (Ojs.t -> 'tags) -> (Ojs.t -> 'T) -> Ojs.t -> ('tags, 'T) this
      =
      fun (type __tags) ->
        fun (type __T) ->
          fun (__tags_of_js : Ojs.t -> __tags) ->
            fun (__T_of_js : Ojs.t -> __T) ->
              fun (x4825 : Ojs.t) -> intf_of_js __tags_of_js x4825
    and this_to_js :
      'tags 'T .
        ('tags -> Ojs.t) -> ('T -> Ojs.t) -> ('tags, 'T) this -> Ojs.t
      =
      fun (type __tags) ->
        fun (type __T) ->
          fun (__tags_to_js : __tags -> Ojs.t) ->
            fun (__T_to_js : __T -> Ojs.t) ->
              fun (x4823 : __tags intf) -> intf_to_js __tags_to_js x4823
    let (entries : ('tags, 'T) this -> ('T * 'T) IterableIterator.t) =
      fun (x4827 : ('tags, 'T) this) ->
        IterableIterator.t_of_js
          (fun (x4830 : Ojs.t) ->
             let x4831 = x4830 in
             ((Obj.magic (Ojs.array_get x4831 0)),
               (Obj.magic (Ojs.array_get x4831 1))))
          (Ojs.call (this_to_js Obj.magic Obj.magic x4827) "entries" [||])
    let (keys : ('tags, 'T) this -> 'T IterableIterator.t) =
      fun (x4832 : ('tags, 'T) this) ->
        IterableIterator.t_of_js Obj.magic
          (Ojs.call (this_to_js Obj.magic Obj.magic x4832) "keys" [||])
    let (values : ('tags, 'T) this -> 'T IterableIterator.t) =
      fun (x4836 : ('tags, 'T) this) ->
        IterableIterator.t_of_js Obj.magic
          (Ojs.call (this_to_js Obj.magic Obj.magic x4836) "values" [||])
    let (forEach :
      ('tags, 'T) this ->
        callbackfn:(value:'T -> value2:'T -> set_:'T t -> unit) ->
          ?thisArg:any -> unit -> unit)
      =
      fun (x4848 : ('tags, 'T) this) ->
        fun ~callbackfn:(x4840 : value:'T -> value2:'T -> set_:'T t -> unit)
          ->
          fun ?thisArg:(x4841 : any option) ->
            fun () ->
              ignore
                (let x4851 = this_to_js Obj.magic Obj.magic x4848 in
                 Ojs.call (Ojs.get_prop_ascii x4851 "forEach") "apply"
                   [|x4851;((let x4842 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x4842 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x4844 : Ojs.t) ->
                                          fun (x4845 : Ojs.t) ->
                                            fun (x4846 : Ojs.t) ->
                                              x4840 ~value:(Obj.magic x4844)
                                                ~value2:(Obj.magic x4845)
                                                ~set_:(t_of_js Obj.magic
                                                         x4846)))|]);
                             (match x4841 with
                              | Some x4843 ->
                                  ignore
                                    (Ojs.call x4842 "push"
                                       [|(any_to_js x4843)|])
                              | None -> ());
                             x4842))|])
    let (has : ('tags, 'T) this -> value:'T -> bool) =
      fun (x4853 : ('tags, 'T) this) ->
        fun ~value:(x4852 : 'T) ->
          Ojs.bool_of_js
            (Ojs.call (this_to_js Obj.magic Obj.magic x4853) "has"
               [|(Obj.magic x4852)|])
    let (get_size : ('tags, 'T) this -> float) =
      fun (x4856 : ('tags, 'T) this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic Obj.magic x4856) "size")
    let cast_from = Obj.magic
  end
module ReadonlyMap =
  struct
    type ('K, 'V) t = [ `ReadonlyMap of ('K * 'V) ] intf
    let rec t_of_js :
      'K 'V . (Ojs.t -> 'K) -> (Ojs.t -> 'V) -> Ojs.t -> ('K, 'V) t =
      fun _K -> fun _V -> Obj.magic
    and t_to_js :
      'K 'V . ('K -> Ojs.t) -> ('V -> Ojs.t) -> ('K, 'V) t -> Ojs.t =
      fun _K -> fun _V -> Obj.magic
    type ('K, 'V) tags = [ `ReadonlyMap of ('K * 'V) ]
    type ('tags, 'K, 'V) this =
      'tags intf constraint 'tags = [> `ReadonlyMap of ('K * 'V) ]
    let rec this_of_js :
      'tags 'K 'V .
        (Ojs.t -> 'tags) ->
          (Ojs.t -> 'K) -> (Ojs.t -> 'V) -> Ojs.t -> ('tags, 'K, 'V) this
      =
      fun (type __tags) ->
        fun (type __K) ->
          fun (type __V) ->
            fun (__tags_of_js : Ojs.t -> __tags) ->
              fun (__K_of_js : Ojs.t -> __K) ->
                fun (__V_of_js : Ojs.t -> __V) ->
                  fun (x4861 : Ojs.t) -> intf_of_js __tags_of_js x4861
    and this_to_js :
      'tags 'K 'V .
        ('tags -> Ojs.t) ->
          ('K -> Ojs.t) -> ('V -> Ojs.t) -> ('tags, 'K, 'V) this -> Ojs.t
      =
      fun (type __tags) ->
        fun (type __K) ->
          fun (type __V) ->
            fun (__tags_to_js : __tags -> Ojs.t) ->
              fun (__K_to_js : __K -> Ojs.t) ->
                fun (__V_to_js : __V -> Ojs.t) ->
                  fun (x4859 : __tags intf) -> intf_to_js __tags_to_js x4859
    let (entries : ('tags, 'K, 'V) this -> ('K * 'V) IterableIterator.t) =
      fun (x4863 : ('tags, 'K, 'V) this) ->
        IterableIterator.t_of_js
          (fun (x4867 : Ojs.t) ->
             let x4868 = x4867 in
             ((Obj.magic (Ojs.array_get x4868 0)),
               (Obj.magic (Ojs.array_get x4868 1))))
          (Ojs.call (this_to_js Obj.magic Obj.magic Obj.magic x4863)
             "entries" [||])
    let (keys : ('tags, 'K, 'V) this -> 'K IterableIterator.t) =
      fun (x4869 : ('tags, 'K, 'V) this) ->
        IterableIterator.t_of_js Obj.magic
          (Ojs.call (this_to_js Obj.magic Obj.magic Obj.magic x4869) "keys"
             [||])
    let (values : ('tags, 'K, 'V) this -> 'V IterableIterator.t) =
      fun (x4874 : ('tags, 'K, 'V) this) ->
        IterableIterator.t_of_js Obj.magic
          (Ojs.call (this_to_js Obj.magic Obj.magic Obj.magic x4874) "values"
             [||])
    let (forEach :
      ('tags, 'K, 'V) this ->
        callbackfn:(value:'V -> key:'K -> map:('K, 'V) t -> unit) ->
          ?thisArg:any -> unit -> unit)
      =
      fun (x4888 : ('tags, 'K, 'V) this) ->
        fun
          ~callbackfn:(x4879 : value:'V -> key:'K -> map:('K, 'V) t -> unit)
          ->
          fun ?thisArg:(x4880 : any option) ->
            fun () ->
              ignore
                (let x4892 = this_to_js Obj.magic Obj.magic Obj.magic x4888 in
                 Ojs.call (Ojs.get_prop_ascii x4892 "forEach") "apply"
                   [|x4892;((let x4881 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x4881 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x4883 : Ojs.t) ->
                                          fun (x4884 : Ojs.t) ->
                                            fun (x4885 : Ojs.t) ->
                                              x4879 ~value:(Obj.magic x4883)
                                                ~key:(Obj.magic x4884)
                                                ~map:(t_of_js Obj.magic
                                                        Obj.magic x4885)))|]);
                             (match x4880 with
                              | Some x4882 ->
                                  ignore
                                    (Ojs.call x4881 "push"
                                       [|(any_to_js x4882)|])
                              | None -> ());
                             x4881))|])
    let (get_ : ('tags, 'K, 'V) this -> key:'K -> 'V option) =
      fun (x4894 : ('tags, 'K, 'V) this) ->
        fun ~key:(x4893 : 'K) ->
          Ojs.option_of_js Obj.magic
            (Ojs.call (this_to_js Obj.magic Obj.magic Obj.magic x4894) "get"
               [|(Obj.magic x4893)|])
    let (has : ('tags, 'K, 'V) this -> key:'K -> bool) =
      fun (x4900 : ('tags, 'K, 'V) this) ->
        fun ~key:(x4899 : 'K) ->
          Ojs.bool_of_js
            (Ojs.call (this_to_js Obj.magic Obj.magic Obj.magic x4900) "has"
               [|(Obj.magic x4899)|])
    let (get_size : ('tags, 'K, 'V) this -> float) =
      fun (x4904 : ('tags, 'K, 'V) this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii
             (this_to_js Obj.magic Obj.magic Obj.magic x4904) "size")
    let cast_from = Obj.magic
  end
module RangeError =
  struct
    type t = [ `Error  | `RangeError ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type tags = [ `Error  | `RangeError ]
    type 'tags this = 'tags intf constraint 'tags = [> `RangeError ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x4910 : Ojs.t) -> intf_of_js __tags_of_js x4910
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x4908 : __tags intf) -> intf_to_js __tags_to_js x4908
    let (create : ?message:string -> ?options:ErrorOptions.t -> unit -> t) =
      fun ?message:(x4912 : string option) ->
        fun ?options:(x4913 : ErrorOptions.t option) ->
          fun () ->
            t_of_js
              (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "RangeError")
                 (let x4914 =
                    Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                  (match x4912 with
                   | Some x4916 ->
                       ignore
                         (Ojs.call x4914 "push" [|(Ojs.string_to_js x4916)|])
                   | None -> ());
                  (match x4913 with
                   | Some x4915 ->
                       ignore
                         (Ojs.call x4914 "push"
                            [|(ErrorOptions.t_to_js x4915)|])
                   | None -> ());
                  x4914))
    let (invoke : ?message:string -> ?options:ErrorOptions.t -> unit -> t) =
      fun ?message:(x4917 : string option) ->
        fun ?options:(x4918 : ErrorOptions.t option) ->
          fun () ->
            t_of_js
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "RangeError") "apply"
                 [|Ojs.null;((let x4919 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              (match x4917 with
                               | Some x4921 ->
                                   ignore
                                     (Ojs.call x4919 "push"
                                        [|(Ojs.string_to_js x4921)|])
                               | None -> ());
                              (match x4918 with
                               | Some x4920 ->
                                   ignore
                                     (Ojs.call x4919 "push"
                                        [|(ErrorOptions.t_to_js x4920)|])
                               | None -> ());
                              x4919))|])
    let (create' : ?message:string -> unit -> t) =
      fun ?message:(x4922 : string option) ->
        fun () ->
          t_of_js
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "RangeError")
               (let x4923 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x4922 with
                 | Some x4924 ->
                     ignore
                       (Ojs.call x4923 "push" [|(Ojs.string_to_js x4924)|])
                 | None -> ());
                x4923))
    let (invoke' : ?message:string -> unit -> t) =
      fun ?message:(x4925 : string option) ->
        fun () ->
          t_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "RangeError") "apply"
               [|Ojs.null;((let x4926 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x4925 with
                             | Some x4927 ->
                                 ignore
                                   (Ojs.call x4926 "push"
                                      [|(Ojs.string_to_js x4927)|])
                             | None -> ());
                            x4926))|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "RangeError")
             "prototype")
    let cast_from = Obj.magic
  end
module PropertyDescriptor =
  struct
    type t = [ `PropertyDescriptor ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type tags = [ `PropertyDescriptor ]
    type 'tags this = 'tags intf constraint 'tags = [> `PropertyDescriptor ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x4930 : Ojs.t) -> intf_of_js __tags_of_js x4930
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x4928 : __tags intf) -> intf_to_js __tags_to_js x4928
    let (get_configurable : 'tags this -> bool option) =
      fun (x4932 : 'tags this) ->
        Ojs.option_of_js Ojs.bool_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x4932) "configurable")
    let (set_configurable : 'tags this -> bool -> unit) =
      fun (x4935 : 'tags this) ->
        fun (x4936 : bool) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x4935) "configurable"
            (Ojs.bool_to_js x4936)
    let (get_enumerable : 'tags this -> bool option) =
      fun (x4938 : 'tags this) ->
        Ojs.option_of_js Ojs.bool_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x4938) "enumerable")
    let (set_enumerable : 'tags this -> bool -> unit) =
      fun (x4941 : 'tags this) ->
        fun (x4942 : bool) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x4941) "enumerable"
            (Ojs.bool_to_js x4942)
    let (get_value : 'tags this -> any option) =
      fun (x4944 : 'tags this) ->
        Ojs.option_of_js any_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x4944) "value")
    let (set_value : 'tags this -> any -> unit) =
      fun (x4947 : 'tags this) ->
        fun (x4948 : any) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x4947) "value"
            (any_to_js x4948)
    let (get_writable : 'tags this -> bool option) =
      fun (x4950 : 'tags this) ->
        Ojs.option_of_js Ojs.bool_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x4950) "writable")
    let (set_writable : 'tags this -> bool -> unit) =
      fun (x4953 : 'tags this) ->
        fun (x4954 : bool) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x4953) "writable"
            (Ojs.bool_to_js x4954)
    let (get_ : 'tags this -> any) =
      fun (x4956 : 'tags this) ->
        any_of_js (Ojs.call (this_to_js Obj.magic x4956) "get" [||])
    let (set_ : 'tags this -> v:any -> unit) =
      fun (x4959 : 'tags this) ->
        fun ~v:(x4958 : any) ->
          ignore
            (Ojs.call (this_to_js Obj.magic x4959) "set"
               [|(any_to_js x4958)|])
    let cast_from = Obj.magic
  end
module Function =
  struct
    type t = [ `Function ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type tags = [ `Function ]
    type 'tags this = 'tags intf constraint 'tags = [> `Function ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x4963 : Ojs.t) -> intf_of_js __tags_of_js x4963
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x4961 : __tags intf) -> intf_to_js __tags_to_js x4961
    let (get_name : 'tags this -> string) =
      fun (x4965 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x4965) "name")
    let (apply_ :
      'tags this -> this:t -> thisArg:any -> ?argArray:any -> unit -> any) =
      fun (x4972 : 'tags this) ->
        fun ~this:(x4967 : t) ->
          fun ~thisArg:(x4968 : any) ->
            fun ?argArray:(x4969 : any option) ->
              fun () ->
                any_of_js
                  (let x4974 = this_to_js Obj.magic x4972 in
                   Ojs.call (Ojs.get_prop_ascii x4974 "apply") "apply"
                     [|x4974;((let x4970 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x4970 "push" [|(t_to_js x4967)|]);
                               ignore
                                 (Ojs.call x4970 "push" [|(any_to_js x4968)|]);
                               (match x4969 with
                                | Some x4971 ->
                                    ignore
                                      (Ojs.call x4970 "push"
                                         [|(any_to_js x4971)|])
                                | None -> ());
                               x4970))|])
    let (call :
      'tags this -> this:t -> thisArg:any -> argArray:any list -> any) =
      fun (x4980 : 'tags this) ->
        fun ~this:(x4975 : t) ->
          fun ~thisArg:(x4976 : any) ->
            fun ~argArray:(x4977 : any list) ->
              any_of_js
                (let x4982 = this_to_js Obj.magic x4980 in
                 Ojs.call (Ojs.get_prop_ascii x4982 "call") "apply"
                   [|x4982;((let x4978 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x4978 "push" [|(t_to_js x4975)|]);
                             ignore
                               (Ojs.call x4978 "push" [|(any_to_js x4976)|]);
                             List.iter
                               (fun (x4979 : any) ->
                                  ignore
                                    (Ojs.call x4978 "push"
                                       [|(any_to_js x4979)|])) x4977;
                             x4978))|])
    let (bind :
      'tags this -> this:t -> thisArg:any -> argArray:any list -> any) =
      fun (x4988 : 'tags this) ->
        fun ~this:(x4983 : t) ->
          fun ~thisArg:(x4984 : any) ->
            fun ~argArray:(x4985 : any list) ->
              any_of_js
                (let x4990 = this_to_js Obj.magic x4988 in
                 Ojs.call (Ojs.get_prop_ascii x4990 "bind") "apply"
                   [|x4990;((let x4986 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x4986 "push" [|(t_to_js x4983)|]);
                             ignore
                               (Ojs.call x4986 "push" [|(any_to_js x4984)|]);
                             List.iter
                               (fun (x4987 : any) ->
                                  ignore
                                    (Ojs.call x4986 "push"
                                       [|(any_to_js x4987)|])) x4985;
                             x4986))|])
    let (toString : 'tags this -> string) =
      fun (x4991 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x4991) "toString" [||])
    let (get_prototype : 'tags this -> any) =
      fun (x4993 : 'tags this) ->
        any_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x4993) "prototype")
    let (set_prototype : 'tags this -> any -> unit) =
      fun (x4995 : 'tags this) ->
        fun (x4996 : any) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x4995) "prototype"
            (any_to_js x4996)
    let (get_length : 'tags this -> float) =
      fun (x4998 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x4998) "length")
    let (get_arguments : 'tags this -> any) =
      fun (x5000 : 'tags this) ->
        any_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x5000) "arguments")
    let (set_arguments : 'tags this -> any -> unit) =
      fun (x5002 : 'tags this) ->
        fun (x5003 : any) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x5002) "arguments"
            (any_to_js x5003)
    let (get_caller : 'tags this -> t) =
      fun (x5005 : 'tags this) ->
        t_of_js (Ojs.get_prop_ascii (this_to_js Obj.magic x5005) "caller")
    let (set_caller : 'tags this -> t -> unit) =
      fun (x5007 : 'tags this) ->
        fun (x5008 : t) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x5007) "caller"
            (t_to_js x5008)
    let (create : string list -> t) =
      fun (x5010 : string list) ->
        t_of_js
          (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "Function")
             (let x5011 =
                Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
              List.iter
                (fun (x5012 : string) ->
                   ignore
                     (Ojs.call x5011 "push" [|(Ojs.string_to_js x5012)|]))
                x5010;
              x5011))
    let (invoke : string list -> t) =
      fun (x5013 : string list) ->
        t_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Function") "apply"
             [|Ojs.null;((let x5014 =
                            Ojs.new_obj
                              (Ojs.get_prop_ascii Ojs.global "Array") 
                              [||] in
                          List.iter
                            (fun (x5015 : string) ->
                               ignore
                                 (Ojs.call x5014 "push"
                                    [|(Ojs.string_to_js x5015)|])) x5013;
                          x5014))|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Function")
             "prototype")
    let cast_from = Obj.magic
  end
module ProxyHandler =
  struct
    type 'T t = [ `ProxyHandler of 'T ] intf
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun _T -> Obj.magic
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun _T -> Obj.magic
    type 'T tags = [ `ProxyHandler of 'T ]
    type ('tags, 'T) this =
      'tags intf constraint 'tags = [> `ProxyHandler of 'T ]
    let rec this_of_js :
      'tags 'T .
        (Ojs.t -> 'tags) -> (Ojs.t -> 'T) -> Ojs.t -> ('tags, 'T) this
      =
      fun (type __tags) ->
        fun (type __T) ->
          fun (__tags_of_js : Ojs.t -> __tags) ->
            fun (__T_of_js : Ojs.t -> __T) ->
              fun (x5018 : Ojs.t) -> intf_of_js __tags_of_js x5018
    and this_to_js :
      'tags 'T .
        ('tags -> Ojs.t) -> ('T -> Ojs.t) -> ('tags, 'T) this -> Ojs.t
      =
      fun (type __tags) ->
        fun (type __T) ->
          fun (__tags_to_js : __tags -> Ojs.t) ->
            fun (__T_to_js : __T -> Ojs.t) ->
              fun (x5016 : __tags intf) -> intf_to_js __tags_to_js x5016
    let (apply_ :
      ('tags, 'T) this ->
        target:'T -> thisArg:any -> argArray:any list -> any)
      =
      fun (x5024 : ('tags, 'T) this) ->
        fun ~target:(x5020 : 'T) ->
          fun ~thisArg:(x5021 : any) ->
            fun ~argArray:(x5022 : any list) ->
              any_of_js
                (Ojs.call (this_to_js Obj.magic Obj.magic x5024) "apply"
                   [|(Obj.magic x5020);(any_to_js x5021);(Ojs.list_to_js
                                                            any_to_js x5022)|])
    let (construct :
      ('tags, 'T) this ->
        target:'T ->
          argArray:any list -> newTarget:Function.t -> untyped_object)
      =
      fun (x5031 : ('tags, 'T) this) ->
        fun ~target:(x5027 : 'T) ->
          fun ~argArray:(x5028 : any list) ->
            fun ~newTarget:(x5030 : Function.t) ->
              untyped_object_of_js
                (Ojs.call (this_to_js Obj.magic Obj.magic x5031) "construct"
                   [|(Obj.magic x5027);(Ojs.list_to_js any_to_js x5028);(
                     Function.t_to_js x5030)|])
    let (defineProperty :
      ('tags, 'T) this ->
        target:'T ->
          property:[ `U1 of string  | `U2 of symbol ] ->
            attributes:PropertyDescriptor.t -> bool)
      =
      fun (x5039 : ('tags, 'T) this) ->
        fun ~target:(x5034 : 'T) ->
          fun ~property:(x5035 : [ `U1 of string  | `U2 of symbol ]) ->
            fun ~attributes:(x5038 : PropertyDescriptor.t) ->
              Ojs.bool_of_js
                (Ojs.call (this_to_js Obj.magic Obj.magic x5039)
                   "defineProperty"
                   [|(Obj.magic x5034);((match x5035 with
                                         | `U1 x5036 ->
                                             Ojs.string_to_js x5036
                                         | `U2 x5037 -> symbol_to_js x5037));(
                     PropertyDescriptor.t_to_js x5038)|])
    let (deleteProperty :
      ('tags, 'T) this ->
        target:'T -> p:[ `U1 of string  | `U2 of symbol ] -> bool)
      =
      fun (x5046 : ('tags, 'T) this) ->
        fun ~target:(x5042 : 'T) ->
          fun ~p:(x5043 : [ `U1 of string  | `U2 of symbol ]) ->
            Ojs.bool_of_js
              (Ojs.call (this_to_js Obj.magic Obj.magic x5046)
                 "deleteProperty"
                 [|(Obj.magic x5042);((match x5043 with
                                       | `U1 x5044 -> Ojs.string_to_js x5044
                                       | `U2 x5045 -> symbol_to_js x5045))|])
    let (get_ :
      ('tags, 'T) this ->
        target:'T ->
          p:[ `U1 of string  | `U2 of symbol ] -> receiver:any -> any)
      =
      fun (x5054 : ('tags, 'T) this) ->
        fun ~target:(x5049 : 'T) ->
          fun ~p:(x5050 : [ `U1 of string  | `U2 of symbol ]) ->
            fun ~receiver:(x5053 : any) ->
              any_of_js
                (Ojs.call (this_to_js Obj.magic Obj.magic x5054) "get"
                   [|(Obj.magic x5049);((match x5050 with
                                         | `U1 x5051 ->
                                             Ojs.string_to_js x5051
                                         | `U2 x5052 -> symbol_to_js x5052));(
                     any_to_js x5053)|])
    let (getOwnPropertyDescriptor :
      ('tags, 'T) this ->
        target:'T ->
          p:[ `U1 of string  | `U2 of symbol ] -> PropertyDescriptor.t option)
      =
      fun (x5061 : ('tags, 'T) this) ->
        fun ~target:(x5057 : 'T) ->
          fun ~p:(x5058 : [ `U1 of string  | `U2 of symbol ]) ->
            Ojs.option_of_js PropertyDescriptor.t_of_js
              (Ojs.call (this_to_js Obj.magic Obj.magic x5061)
                 "getOwnPropertyDescriptor"
                 [|(Obj.magic x5057);((match x5058 with
                                       | `U1 x5059 -> Ojs.string_to_js x5059
                                       | `U2 x5060 -> symbol_to_js x5060))|])
    let (getPrototypeOf :
      ('tags, 'T) this -> target:'T -> untyped_object option) =
      fun (x5066 : ('tags, 'T) this) ->
        fun ~target:(x5065 : 'T) ->
          Ojs.option_of_js untyped_object_of_js
            (Ojs.call (this_to_js Obj.magic Obj.magic x5066) "getPrototypeOf"
               [|(Obj.magic x5065)|])
    let (has :
      ('tags, 'T) this ->
        target:'T -> p:[ `U1 of string  | `U2 of symbol ] -> bool)
      =
      fun (x5074 : ('tags, 'T) this) ->
        fun ~target:(x5070 : 'T) ->
          fun ~p:(x5071 : [ `U1 of string  | `U2 of symbol ]) ->
            Ojs.bool_of_js
              (Ojs.call (this_to_js Obj.magic Obj.magic x5074) "has"
                 [|(Obj.magic x5070);((match x5071 with
                                       | `U1 x5072 -> Ojs.string_to_js x5072
                                       | `U2 x5073 -> symbol_to_js x5073))|])
    let (isExtensible : ('tags, 'T) this -> target:'T -> bool) =
      fun (x5078 : ('tags, 'T) this) ->
        fun ~target:(x5077 : 'T) ->
          Ojs.bool_of_js
            (Ojs.call (this_to_js Obj.magic Obj.magic x5078) "isExtensible"
               [|(Obj.magic x5077)|])
    let (ownKeys :
      ('tags, 'T) this ->
        target:'T ->
          [ `String of string  | `Symbol of symbol ] Primitive.t ArrayLike.t)
      =
      fun (x5082 : ('tags, 'T) this) ->
        fun ~target:(x5081 : 'T) ->
          ArrayLike.t_of_js
            (fun (x5085 : Ojs.t) ->
               Primitive.t_of_js
                 (fun (x5086 : Ojs.t) ->
                    let x5087 = x5086 in
                    match Ojs.string_of_js (Ojs.get_prop_ascii x5087 "dummy")
                    with
                    | "String" -> `String (Ojs.string_of_js x5087)
                    | "Symbol" -> `Symbol (symbol_of_js x5087)
                    | _ -> assert false) x5085)
            (Ojs.call (this_to_js Obj.magic Obj.magic x5082) "ownKeys"
               [|(Obj.magic x5081)|])
    let (preventExtensions : ('tags, 'T) this -> target:'T -> bool) =
      fun (x5089 : ('tags, 'T) this) ->
        fun ~target:(x5088 : 'T) ->
          Ojs.bool_of_js
            (Ojs.call (this_to_js Obj.magic Obj.magic x5089)
               "preventExtensions" [|(Obj.magic x5088)|])
    let (set_ :
      ('tags, 'T) this ->
        target:'T ->
          p:[ `U1 of string  | `U2 of symbol ] ->
            newValue:any -> receiver:any -> bool)
      =
      fun (x5098 : ('tags, 'T) this) ->
        fun ~target:(x5092 : 'T) ->
          fun ~p:(x5093 : [ `U1 of string  | `U2 of symbol ]) ->
            fun ~newValue:(x5096 : any) ->
              fun ~receiver:(x5097 : any) ->
                Ojs.bool_of_js
                  (Ojs.call (this_to_js Obj.magic Obj.magic x5098) "set"
                     [|(Obj.magic x5092);((match x5093 with
                                           | `U1 x5094 ->
                                               Ojs.string_to_js x5094
                                           | `U2 x5095 -> symbol_to_js x5095));(
                       any_to_js x5096);(any_to_js x5097)|])
    let (setPrototypeOf :
      ('tags, 'T) this -> target:'T -> v:untyped_object option -> bool) =
      fun (x5104 : ('tags, 'T) this) ->
        fun ~target:(x5101 : 'T) ->
          fun ~v:(x5102 : untyped_object option) ->
            Ojs.bool_of_js
              (Ojs.call (this_to_js Obj.magic Obj.magic x5104)
                 "setPrototypeOf"
                 [|(Obj.magic x5101);(Ojs.option_to_js untyped_object_to_js
                                        x5102)|])
    let cast_from = Obj.magic
  end
module ProxyStatic =
  struct
    module AnonymousInterface38 =
      struct
        type 'T t = Ojs.t
        let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
          fun (type __T) ->
            fun (__T_of_js : Ojs.t -> __T) -> fun (x5108 : Ojs.t) -> x5108
        and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t =
          fun (type __T) ->
            fun (__T_to_js : __T -> Ojs.t) -> fun (x5107 : Ojs.t) -> x5107
        let (get_proxy : 'T t -> 'T) =
          fun (x5109 : 'T t) ->
            Obj.magic (Ojs.get_prop_ascii (t_to_js Obj.magic x5109) "proxy")
        let (set_proxy : 'T t -> 'T -> unit) =
          fun (x5111 : 'T t) ->
            fun (x5112 : 'T) ->
              Ojs.set_prop_ascii (t_to_js Obj.magic x5111) "proxy"
                (Obj.magic x5112)
        let (revoke : 'T t -> unit) =
          fun (x5114 : 'T t) ->
            ignore (Ojs.call (t_to_js Obj.magic x5114) "revoke" [||])
        let (create : proxy:'T -> revoke:(unit -> unit) -> unit -> 'T t) =
          fun ~proxy:(x5116 : 'T) ->
            fun ~revoke:(x5117 : unit -> unit) ->
              fun () ->
                let x5118 = Ojs.empty_obj () in
                Ojs.set_prop_ascii x5118 "proxy" (Obj.magic x5116);
                Ojs.set_prop_ascii x5118 "revoke"
                  (Ojs.fun_to_js 1 (fun _ -> x5117 ()));
                t_of_js Obj.magic x5118
        module Make(T:Ojs.T) =
          struct
            type 'T parent = 'T t
            let rec parent_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T parent =
              fun (type __T) ->
                fun (__T_of_js : Ojs.t -> __T) ->
                  fun (x5122 : Ojs.t) -> t_of_js __T_of_js x5122
            and parent_to_js : 'T . ('T -> Ojs.t) -> 'T parent -> Ojs.t =
              fun (type __T) ->
                fun (__T_to_js : __T -> Ojs.t) ->
                  fun (x5120 : __T t) -> t_to_js __T_to_js x5120
            type t = T.t parent
            let rec t_of_js : Ojs.t -> t =
              fun (x5126 : Ojs.t) -> parent_of_js T.t_of_js x5126
            and t_to_js : t -> Ojs.t =
              fun (x5124 : T.t parent) -> parent_to_js T.t_to_js x5124
            let (get_proxy : t -> T.t) =
              fun (x5128 : t) ->
                T.t_of_js (Ojs.get_prop_ascii (t_to_js x5128) "proxy")
            let (set_proxy : t -> T.t -> unit) =
              fun (x5129 : t) ->
                fun (x5130 : T.t) ->
                  Ojs.set_prop_ascii (t_to_js x5129) "proxy"
                    (T.t_to_js x5130)
            let (revoke : t -> unit) =
              fun (x5131 : t) ->
                ignore (Ojs.call (t_to_js x5131) "revoke" [||])
          end
      end
    let (revocable :
      target:'T -> handler:'T ProxyHandler.t -> 'T AnonymousInterface38.t) =
      fun ~target:(x5132 : 'T) ->
        fun ~handler:(x5133 : 'T ProxyHandler.t) ->
          AnonymousInterface38.t_of_js Obj.magic
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "Proxy") "revocable"
               [|(Obj.magic x5132);(ProxyHandler.t_to_js Obj.magic x5133)|])
    let (create : target:'T -> handler:'T ProxyHandler.t -> 'T) =
      fun ~target:(x5136 : 'T) ->
        fun ~handler:(x5137 : 'T ProxyHandler.t) ->
          Obj.magic
            (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Proxy")
               [|(Obj.magic x5136);(ProxyHandler.t_to_js Obj.magic x5137)|])
  end
module ProxyConstructor =
  struct
    module AnonymousInterface38 =
      struct
        type 'T t = Ojs.t
        let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
          fun (type __T) ->
            fun (__T_of_js : Ojs.t -> __T) -> fun (x5140 : Ojs.t) -> x5140
        and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t =
          fun (type __T) ->
            fun (__T_to_js : __T -> Ojs.t) -> fun (x5139 : Ojs.t) -> x5139
        let (get_proxy : 'T t -> 'T) =
          fun (x5141 : 'T t) ->
            Obj.magic (Ojs.get_prop_ascii (t_to_js Obj.magic x5141) "proxy")
        let (set_proxy : 'T t -> 'T -> unit) =
          fun (x5143 : 'T t) ->
            fun (x5144 : 'T) ->
              Ojs.set_prop_ascii (t_to_js Obj.magic x5143) "proxy"
                (Obj.magic x5144)
        let (revoke : 'T t -> unit) =
          fun (x5146 : 'T t) ->
            ignore (Ojs.call (t_to_js Obj.magic x5146) "revoke" [||])
        let (create : proxy:'T -> revoke:(unit -> unit) -> unit -> 'T t) =
          fun ~proxy:(x5148 : 'T) ->
            fun ~revoke:(x5149 : unit -> unit) ->
              fun () ->
                let x5150 = Ojs.empty_obj () in
                Ojs.set_prop_ascii x5150 "proxy" (Obj.magic x5148);
                Ojs.set_prop_ascii x5150 "revoke"
                  (Ojs.fun_to_js 1 (fun _ -> x5149 ()));
                t_of_js Obj.magic x5150
        module Make(T:Ojs.T) =
          struct
            type 'T parent = 'T t
            let rec parent_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T parent =
              fun (type __T) ->
                fun (__T_of_js : Ojs.t -> __T) ->
                  fun (x5154 : Ojs.t) -> t_of_js __T_of_js x5154
            and parent_to_js : 'T . ('T -> Ojs.t) -> 'T parent -> Ojs.t =
              fun (type __T) ->
                fun (__T_to_js : __T -> Ojs.t) ->
                  fun (x5152 : __T t) -> t_to_js __T_to_js x5152
            type t = T.t parent
            let rec t_of_js : Ojs.t -> t =
              fun (x5158 : Ojs.t) -> parent_of_js T.t_of_js x5158
            and t_to_js : t -> Ojs.t =
              fun (x5156 : T.t parent) -> parent_to_js T.t_to_js x5156
            let (get_proxy : t -> T.t) =
              fun (x5160 : t) ->
                T.t_of_js (Ojs.get_prop_ascii (t_to_js x5160) "proxy")
            let (set_proxy : t -> T.t -> unit) =
              fun (x5161 : t) ->
                fun (x5162 : T.t) ->
                  Ojs.set_prop_ascii (t_to_js x5161) "proxy"
                    (T.t_to_js x5162)
            let (revoke : t -> unit) =
              fun (x5163 : t) ->
                ignore (Ojs.call (t_to_js x5163) "revoke" [||])
          end
      end
    type t = [ `ProxyConstructor ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type tags = [ `ProxyConstructor ]
    type 'tags this = 'tags intf constraint 'tags = [> `ProxyConstructor ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x5166 : Ojs.t) -> intf_of_js __tags_of_js x5166
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x5164 : __tags intf) -> intf_to_js __tags_to_js x5164
    let (revocable :
      'tags this ->
        target:'T -> handler:'T ProxyHandler.t -> 'T AnonymousInterface38.t)
      =
      fun (x5171 : 'tags this) ->
        fun ~target:(x5168 : 'T) ->
          fun ~handler:(x5169 : 'T ProxyHandler.t) ->
            AnonymousInterface38.t_of_js Obj.magic
              (Ojs.call (this_to_js Obj.magic x5171) "revocable"
                 [|(Obj.magic x5168);(ProxyHandler.t_to_js Obj.magic x5169)|])
    let (create : 'tags this -> target:'T -> handler:'T ProxyHandler.t -> 'T)
      =
      fun (x5177 : 'tags this) ->
        fun ~target:(x5174 : 'T) ->
          fun ~handler:(x5175 : 'T ProxyHandler.t) ->
            Obj.magic
              (Ojs.new_obj (this_to_js Obj.magic x5177)
                 [|(Obj.magic x5174);(ProxyHandler.t_to_js Obj.magic x5175)|])
    let cast_from = Obj.magic
  end
module PromiseLike =
  struct
    type 'T t = [ `PromiseLike of 'T ] intf
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun _T -> Obj.magic
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun _T -> Obj.magic
    type 'T tags = [ `PromiseLike of 'T ]
    type ('tags, 'T) this =
      'tags intf constraint 'tags = [> `PromiseLike of 'T ]
    let rec this_of_js :
      'tags 'T .
        (Ojs.t -> 'tags) -> (Ojs.t -> 'T) -> Ojs.t -> ('tags, 'T) this
      =
      fun (type __tags) ->
        fun (type __T) ->
          fun (__tags_of_js : Ojs.t -> __tags) ->
            fun (__T_of_js : Ojs.t -> __T) ->
              fun (x5181 : Ojs.t) -> intf_of_js __tags_of_js x5181
    and this_to_js :
      'tags 'T .
        ('tags -> Ojs.t) -> ('T -> Ojs.t) -> ('tags, 'T) this -> Ojs.t
      =
      fun (type __tags) ->
        fun (type __T) ->
          fun (__tags_to_js : __tags -> Ojs.t) ->
            fun (__T_to_js : __T -> Ojs.t) ->
              fun (x5179 : __tags intf) -> intf_to_js __tags_to_js x5179
    let (then_ :
      ('tags, 'T) this ->
        ?onfulfilled:[ `Null  | `Undefined of undefined 
                     | `U1 of
                         'T -> [ `U1 of 'TResult1  | `U2 of 'TResult1 t ] ]
          ->
          ?onrejected:[ `Null  | `Undefined of undefined 
                      | `U1 of
                          any -> [ `U1 of 'TResult2  | `U2 of 'TResult2 t ] ]
            -> unit -> ('TResult1, 'TResult2) union2 t)
      =
      fun (x5200 : ('tags, 'T) this) ->
        fun
          ?onfulfilled:(x5183 :
                         [ `Null  | `Undefined of undefined 
                         | `U1 of
                             'T -> [ `U1 of 'TResult1  | `U2 of 'TResult1 t ] ]
                           option)
          ->
          fun
            ?onrejected:(x5184 :
                          [ `Null  | `Undefined of undefined 
                          | `U1 of
                              any ->
                                [ `U1 of 'TResult2  | `U2 of 'TResult2 t ]
                              ]
                            option)
            ->
            fun () ->
              t_of_js
                (fun (x5204 : Ojs.t) ->
                   union2_of_js Obj.magic Obj.magic x5204)
                (let x5203 = this_to_js Obj.magic Obj.magic x5200 in
                 Ojs.call (Ojs.get_prop_ascii x5203 "then") "apply"
                   [|x5203;((let x5185 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x5183 with
                              | Some x5193 ->
                                  ignore
                                    (Ojs.call x5185 "push"
                                       [|((match x5193 with
                                           | `Null -> Ojs.null
                                           | `Undefined x5194 ->
                                               undefined_to_js x5194
                                           | `U1 x5195 ->
                                               Ojs.fun_to_js 1
                                                 (fun (x5196 : Ojs.t) ->
                                                    match x5195
                                                            (Obj.magic x5196)
                                                    with
                                                    | `U1 x5197 ->
                                                        Obj.magic x5197
                                                    | `U2 x5198 ->
                                                        t_to_js Obj.magic
                                                          x5198)))|])
                              | None -> ());
                             (match x5184 with
                              | Some x5186 ->
                                  ignore
                                    (Ojs.call x5185 "push"
                                       [|((match x5186 with
                                           | `Null -> Ojs.null
                                           | `Undefined x5187 ->
                                               undefined_to_js x5187
                                           | `U1 x5188 ->
                                               Ojs.fun_to_js 1
                                                 (fun (x5189 : Ojs.t) ->
                                                    match x5188
                                                            (any_of_js x5189)
                                                    with
                                                    | `U1 x5190 ->
                                                        Obj.magic x5190
                                                    | `U2 x5191 ->
                                                        t_to_js Obj.magic
                                                          x5191)))|])
                              | None -> ());
                             x5185))|])
    let cast_from = Obj.magic
  end
module PromiseConstructorLike =
  struct
    module AnonymousInterface16 =
      struct
        type t = Ojs.t
        let rec t_of_js : Ojs.t -> t = fun (x5208 : Ojs.t) -> x5208
        and t_to_js : t -> Ojs.t = fun (x5207 : Ojs.t) -> x5207
        let (create :
          t ->
            executor:(resolve:([ `U1 of 'T  | `U2 of 'T PromiseLike.t ] ->
                                 unit)
                        -> reject:(?reason:any -> unit -> unit) -> unit)
              -> 'T PromiseLike.t)
          =
          fun (x5219 : t) ->
            fun
              ~executor:(x5209 :
                          resolve:([ `U1 of 'T  | `U2 of 'T PromiseLike.t ]
                                     -> unit)
                            -> reject:(?reason:any -> unit -> unit) -> unit)
              ->
              PromiseLike.t_of_js Obj.magic
                (Ojs.new_obj (t_to_js x5219)
                   [|(Ojs.fun_to_js 2
                        (fun (x5210 : Ojs.t) ->
                           fun (x5215 : Ojs.t) ->
                             x5209
                               ~resolve:(fun
                                           (x5211 :
                                             [ `U1 of 'T 
                                             | `U2 of 'T PromiseLike.t ])
                                           ->
                                           ignore
                                             (Ojs.apply x5210
                                                [|((match x5211 with
                                                    | `U1 x5212 ->
                                                        Obj.magic x5212
                                                    | `U2 x5213 ->
                                                        PromiseLike.t_to_js
                                                          Obj.magic x5213))|]))
                               ~reject:(fun ?reason:(x5216 : any option) ->
                                          fun () ->
                                            ignore
                                              (Ojs.call x5215 "apply"
                                                 [|Ojs.null;((let x5217 =
                                                                Ojs.new_obj
                                                                  (Ojs.get_prop_ascii
                                                                    Ojs.global
                                                                    "Array")
                                                                  [||] in
                                                              (match x5216
                                                               with
                                                               | Some x5218
                                                                   ->
                                                                   ignore
                                                                    (Ojs.call
                                                                    x5217
                                                                    "push"
                                                                    [|(
                                                                    any_to_js
                                                                    x5218)|])
                                                               | None -> ());
                                                              x5217))|]))))|])
      end
    type t = AnonymousInterface16.t
    let rec t_of_js : Ojs.t -> t =
      fun (x5222 : Ojs.t) -> AnonymousInterface16.t_of_js x5222
    and t_to_js : t -> Ojs.t =
      fun (x5221 : AnonymousInterface16.t) ->
        AnonymousInterface16.t_to_js x5221
  end
module Parameters =
  struct
    type 'T t = any
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun (type __T) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x5224 : Ojs.t) -> any_of_js x5224
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t =
      fun (type __T) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x5223 : any) -> any_to_js x5223
  end
module Omit =
  struct
    type ('T, 'K) t = ('T, (any, 'K) Exclude.t) Pick.t
    let rec t_of_js :
      'T 'K . (Ojs.t -> 'T) -> (Ojs.t -> 'K) -> Ojs.t -> ('T, 'K) t =
      fun (type __T) ->
        fun (type __K) ->
          fun (__T_of_js : Ojs.t -> __T) ->
            fun (__K_of_js : Ojs.t -> __K) ->
              fun (x5230 : Ojs.t) ->
                Pick.t_of_js __T_of_js
                  (fun (x5232 : Ojs.t) ->
                     Exclude.t_of_js any_of_js __K_of_js x5232) x5230
    and t_to_js :
      'T 'K . ('T -> Ojs.t) -> ('K -> Ojs.t) -> ('T, 'K) t -> Ojs.t =
      fun (type __T) ->
        fun (type __K) ->
          fun (__T_to_js : __T -> Ojs.t) ->
            fun (__K_to_js : __K -> Ojs.t) ->
              fun (x5225 : (__T, (any, __K) Exclude.t) Pick.t) ->
                Pick.t_to_js __T_to_js
                  (fun (x5227 : (any, __K) Exclude.t) ->
                     Exclude.t_to_js any_to_js __K_to_js x5227) x5225
  end
module Record =
  struct
    type ('K, 'T) t = any
    let rec t_of_js :
      'K 'T . (Ojs.t -> 'K) -> (Ojs.t -> 'T) -> Ojs.t -> ('K, 'T) t =
      fun (type __K) ->
        fun (type __T) ->
          fun (__K_of_js : Ojs.t -> __K) ->
            fun (__T_of_js : Ojs.t -> __T) ->
              fun (x5236 : Ojs.t) -> any_of_js x5236
    and t_to_js :
      'K 'T . ('K -> Ojs.t) -> ('T -> Ojs.t) -> ('K, 'T) t -> Ojs.t =
      fun (type __K) ->
        fun (type __T) ->
          fun (__K_to_js : __K -> Ojs.t) ->
            fun (__T_to_js : __T -> Ojs.t) ->
              fun (x5235 : any) -> any_to_js x5235
  end
module PropertyKey =
  struct
    type t =
      [ `Number of float  | `String of string  | `Symbol of symbol ]
        Primitive.t
    let rec t_of_js : Ojs.t -> t =
      fun (x5242 : Ojs.t) ->
        Primitive.t_of_js
          (fun (x5243 : Ojs.t) ->
             let x5244 = x5243 in
             match Ojs.string_of_js (Ojs.get_prop_ascii x5244 "dummy") with
             | "Number" -> `Number (Ojs.float_of_js x5244)
             | "String" -> `String (Ojs.string_of_js x5244)
             | "Symbol" -> `Symbol (symbol_of_js x5244)
             | _ -> assert false) x5242
    and t_to_js : t -> Ojs.t =
      fun
        (x5237 :
          [ `Number of float  | `String of string  | `Symbol of symbol ]
            Primitive.t)
        ->
        Primitive.t_to_js
          (fun
             (x5238 :
               [ `Number of float  | `String of string  | `Symbol of symbol ])
             ->
             match x5238 with
             | `Number x5239 -> Ojs.float_to_js x5239
             | `String x5240 -> Ojs.string_to_js x5240
             | `Symbol x5241 -> symbol_to_js x5241) x5237
  end
module PropertyDescriptorMap =
  struct
    type t = [ `PropertyDescriptorMap ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type tags = [ `PropertyDescriptorMap ]
    type 'tags this =
      'tags intf constraint 'tags = [> `PropertyDescriptorMap ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x5247 : Ojs.t) -> intf_of_js __tags_of_js x5247
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x5245 : __tags intf) -> intf_to_js __tags_to_js x5245
    let (get : 'tags this -> PropertyKey.t -> PropertyDescriptor.t) =
      fun (x5249 : 'tags this) ->
        fun (x5251 : PropertyKey.t) ->
          PropertyDescriptor.t_of_js
            (Ojs.get_prop (this_to_js Obj.magic x5249)
               (PropertyKey.t_to_js x5251))
    let (set : 'tags this -> PropertyKey.t -> PropertyDescriptor.t -> unit) =
      fun (x5252 : 'tags this) ->
        fun (x5254 : PropertyKey.t) ->
          fun (x5255 : PropertyDescriptor.t) ->
            Ojs.set_prop (this_to_js Obj.magic x5252)
              (PropertyKey.t_to_js x5254) (PropertyDescriptor.t_to_js x5255)
    let cast_from = Obj.magic
  end
module Partial =
  struct
    type 'T t = any
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun (type __T) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x5257 : Ojs.t) -> any_of_js x5257
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t =
      fun (type __T) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x5256 : any) -> any_to_js x5256
  end
module ThisType =
  struct
    type 'T t = [ `ThisType of 'T ] intf
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun _T -> Obj.magic
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun _T -> Obj.magic
    type 'T tags = [ `ThisType of 'T ]
    type ('tags, 'T) this =
      'tags intf constraint 'tags = [> `ThisType of 'T ]
    let rec this_of_js :
      'tags 'T .
        (Ojs.t -> 'tags) -> (Ojs.t -> 'T) -> Ojs.t -> ('tags, 'T) this
      =
      fun (type __tags) ->
        fun (type __T) ->
          fun (__tags_of_js : Ojs.t -> __tags) ->
            fun (__T_of_js : Ojs.t -> __T) ->
              fun (x5260 : Ojs.t) -> intf_of_js __tags_of_js x5260
    and this_to_js :
      'tags 'T .
        ('tags -> Ojs.t) -> ('T -> Ojs.t) -> ('tags, 'T) this -> Ojs.t
      =
      fun (type __tags) ->
        fun (type __T) ->
          fun (__tags_to_js : __tags -> Ojs.t) ->
            fun (__T_to_js : __T -> Ojs.t) ->
              fun (x5258 : __tags intf) -> intf_to_js __tags_to_js x5258
    let cast_from = Obj.magic
  end
module Readonly =
  struct
    type 'T t = any
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun (type __T) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x5263 : Ojs.t) -> any_of_js x5263
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t =
      fun (type __T) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x5262 : any) -> any_to_js x5262
  end
module Object =
  struct
    module AnonymousInterface47 =
      struct
        type 'U t = Ojs.t
        let rec t_of_js : 'U . (Ojs.t -> 'U) -> Ojs.t -> 'U t =
          fun (type __U) ->
            fun (__U_of_js : Ojs.t -> __U) -> fun (x5265 : Ojs.t) -> x5265
        and t_to_js : 'U . ('U -> Ojs.t) -> 'U t -> Ojs.t =
          fun (type __U) ->
            fun (__U_to_js : __U -> Ojs.t) -> fun (x5264 : Ojs.t) -> x5264
        let (get : 'U t -> string -> ('U, untyped_object) union2 option) =
          fun (x5266 : 'U t) ->
            fun (x5268 : string) ->
              Ojs.option_of_js
                (fun (x5269 : Ojs.t) ->
                   union2_of_js Obj.magic untyped_object_of_js x5269)
                (Ojs.get_prop (t_to_js Obj.magic x5266)
                   (Ojs.string_to_js x5268))
        let (set :
          'U t ->
            string ->
              [ `Null  | `Undefined of undefined  | `U1 of 'U 
              | `U2 of untyped_object ] -> unit)
          =
          fun (x5272 : 'U t) ->
            fun (x5274 : string) ->
              fun
                (x5275 :
                  [ `Null  | `Undefined of undefined  | `U1 of 'U 
                  | `U2 of untyped_object ])
                ->
                Ojs.set_prop (t_to_js Obj.magic x5272)
                  (Ojs.string_to_js x5274)
                  (match x5275 with
                   | `Null -> Ojs.null
                   | `Undefined x5276 -> undefined_to_js x5276
                   | `U1 x5277 -> Obj.magic x5277
                   | `U2 x5278 -> untyped_object_to_js x5278)
        module Make(U:Ojs.T) =
          struct
            type 'U parent = 'U t
            let rec parent_of_js : 'U . (Ojs.t -> 'U) -> Ojs.t -> 'U parent =
              fun (type __U) ->
                fun (__U_of_js : Ojs.t -> __U) ->
                  fun (x5281 : Ojs.t) -> t_of_js __U_of_js x5281
            and parent_to_js : 'U . ('U -> Ojs.t) -> 'U parent -> Ojs.t =
              fun (type __U) ->
                fun (__U_to_js : __U -> Ojs.t) ->
                  fun (x5279 : __U t) -> t_to_js __U_to_js x5279
            type t = U.t parent
            let rec t_of_js : Ojs.t -> t =
              fun (x5285 : Ojs.t) -> parent_of_js U.t_of_js x5285
            and t_to_js : t -> Ojs.t =
              fun (x5283 : U.t parent) -> parent_to_js U.t_to_js x5283
            let (get : t -> string -> (U.t, untyped_object) union2 option) =
              fun (x5287 : t) ->
                fun (x5288 : string) ->
                  Ojs.option_of_js
                    (fun (x5289 : Ojs.t) ->
                       union2_of_js U.t_of_js untyped_object_of_js x5289)
                    (Ojs.get_prop (t_to_js x5287) (Ojs.string_to_js x5288))
            let (set :
              t ->
                string ->
                  [ `Null  | `Undefined of undefined  | `U1 of U.t 
                  | `U2 of untyped_object ] -> unit)
              =
              fun (x5292 : t) ->
                fun (x5293 : string) ->
                  fun
                    (x5294 :
                      [ `Null  | `Undefined of undefined  | `U1 of U.t 
                      | `U2 of untyped_object ])
                    ->
                    Ojs.set_prop (t_to_js x5292) (Ojs.string_to_js x5293)
                      (match x5294 with
                       | `Null -> Ojs.null
                       | `Undefined x5295 -> undefined_to_js x5295
                       | `U1 x5296 -> U.t_to_js x5296
                       | `U2 x5297 -> untyped_object_to_js x5297)
          end
      end
    module AnonymousInterface45 =
      struct
        type 'T t = Ojs.t
        let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
          fun (type __T) ->
            fun (__T_of_js : Ojs.t -> __T) -> fun (x5299 : Ojs.t) -> x5299
        and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t =
          fun (type __T) ->
            fun (__T_to_js : __T -> Ojs.t) -> fun (x5298 : Ojs.t) -> x5298
        let (get : 'T t -> string -> 'T) =
          fun (x5300 : 'T t) ->
            fun (x5302 : string) ->
              Obj.magic
                (Ojs.get_prop (t_to_js Obj.magic x5300)
                   (Ojs.string_to_js x5302))
        let (set : 'T t -> string -> 'T -> unit) =
          fun (x5303 : 'T t) ->
            fun (x5305 : string) ->
              fun (x5306 : 'T) ->
                Ojs.set_prop (t_to_js Obj.magic x5303)
                  (Ojs.string_to_js x5305) (Obj.magic x5306)
        module Make(T:Ojs.T) =
          struct
            type 'T parent = 'T t
            let rec parent_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T parent =
              fun (type __T) ->
                fun (__T_of_js : Ojs.t -> __T) ->
                  fun (x5309 : Ojs.t) -> t_of_js __T_of_js x5309
            and parent_to_js : 'T . ('T -> Ojs.t) -> 'T parent -> Ojs.t =
              fun (type __T) ->
                fun (__T_to_js : __T -> Ojs.t) ->
                  fun (x5307 : __T t) -> t_to_js __T_to_js x5307
            type t = T.t parent
            let rec t_of_js : Ojs.t -> t =
              fun (x5313 : Ojs.t) -> parent_of_js T.t_of_js x5313
            and t_to_js : t -> Ojs.t =
              fun (x5311 : T.t parent) -> parent_to_js T.t_to_js x5311
            let (get : t -> string -> T.t) =
              fun (x5315 : t) ->
                fun (x5316 : string) ->
                  T.t_of_js
                    (Ojs.get_prop (t_to_js x5315) (Ojs.string_to_js x5316))
            let (set : t -> string -> T.t -> unit) =
              fun (x5317 : t) ->
                fun (x5318 : string) ->
                  fun (x5319 : T.t) ->
                    Ojs.set_prop (t_to_js x5317) (Ojs.string_to_js x5318)
                      (T.t_to_js x5319)
          end
      end
    module AnonymousInterface42 =
      struct
        type 'T t = Ojs.t
        let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
          fun (type __T) ->
            fun (__T_of_js : Ojs.t -> __T) -> fun (x5321 : Ojs.t) -> x5321
        and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t =
          fun (type __T) ->
            fun (__T_to_js : __T -> Ojs.t) -> fun (x5320 : Ojs.t) -> x5320
        let (get : 'T t -> string -> 'T) =
          fun (x5322 : 'T t) ->
            fun (x5324 : string) ->
              Obj.magic
                (Ojs.get_prop (t_to_js Obj.magic x5322)
                   (Ojs.string_to_js x5324))
        let (set : 'T t -> string -> 'T -> unit) =
          fun (x5325 : 'T t) ->
            fun (x5327 : string) ->
              fun (x5328 : 'T) ->
                Ojs.set_prop (t_to_js Obj.magic x5325)
                  (Ojs.string_to_js x5327) (Obj.magic x5328)
        module Make(T:Ojs.T) =
          struct
            type 'T parent = 'T t
            let rec parent_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T parent =
              fun (type __T) ->
                fun (__T_of_js : Ojs.t -> __T) ->
                  fun (x5331 : Ojs.t) -> t_of_js __T_of_js x5331
            and parent_to_js : 'T . ('T -> Ojs.t) -> 'T parent -> Ojs.t =
              fun (type __T) ->
                fun (__T_to_js : __T -> Ojs.t) ->
                  fun (x5329 : __T t) -> t_to_js __T_to_js x5329
            type t = T.t parent
            let rec t_of_js : Ojs.t -> t =
              fun (x5335 : Ojs.t) -> parent_of_js T.t_of_js x5335
            and t_to_js : t -> Ojs.t =
              fun (x5333 : T.t parent) -> parent_to_js T.t_to_js x5333
            let (get : t -> string -> T.t) =
              fun (x5337 : t) ->
                fun (x5338 : string) ->
                  T.t_of_js
                    (Ojs.get_prop (t_to_js x5337) (Ojs.string_to_js x5338))
            let (set : t -> string -> T.t -> unit) =
              fun (x5339 : t) ->
                fun (x5340 : string) ->
                  fun (x5341 : T.t) ->
                    Ojs.set_prop (t_to_js x5339) (Ojs.string_to_js x5340)
                      (T.t_to_js x5341)
          end
      end
    module AnonymousInterface21 =
      struct
        type t = Ojs.t
        let rec t_of_js : Ojs.t -> t = fun (x5343 : Ojs.t) -> x5343
        and t_to_js : t -> Ojs.t = fun (x5342 : Ojs.t) -> x5342
        let (get : t -> string -> PropertyDescriptor.t) =
          fun (x5344 : t) ->
            fun (x5345 : string) ->
              PropertyDescriptor.t_of_js
                (Ojs.get_prop (t_to_js x5344) (Ojs.string_to_js x5345))
        let (set : t -> string -> PropertyDescriptor.t -> unit) =
          fun (x5346 : t) ->
            fun (x5347 : string) ->
              fun (x5348 : PropertyDescriptor.t) ->
                Ojs.set_prop (t_to_js x5346) (Ojs.string_to_js x5347)
                  (PropertyDescriptor.t_to_js x5348)
      end
    type t = [ `Object ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type tags = [ `Object ]
    type 'tags this = 'tags intf constraint 'tags = [> `Object ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x5351 : Ojs.t) -> intf_of_js __tags_of_js x5351
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x5349 : __tags intf) -> intf_to_js __tags_to_js x5349
    let (get_constructor : 'tags this -> Function.t) =
      fun (x5353 : 'tags this) ->
        Function.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x5353) "constructor")
    let (set_constructor : 'tags this -> Function.t -> unit) =
      fun (x5355 : 'tags this) ->
        fun (x5356 : Function.t) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x5355) "constructor"
            (Function.t_to_js x5356)
    let (toString : 'tags this -> string) =
      fun (x5358 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x5358) "toString" [||])
    let (toLocaleString : 'tags this -> string) =
      fun (x5360 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x5360) "toLocaleString" [||])
    let (valueOf : 'tags this -> t) =
      fun (x5362 : 'tags this) ->
        t_of_js (Ojs.call (this_to_js Obj.magic x5362) "valueOf" [||])
    let (hasOwnProperty : 'tags this -> v:PropertyKey.t -> bool) =
      fun (x5365 : 'tags this) ->
        fun ~v:(x5364 : PropertyKey.t) ->
          Ojs.bool_of_js
            (Ojs.call (this_to_js Obj.magic x5365) "hasOwnProperty"
               [|(PropertyKey.t_to_js x5364)|])
    let (isPrototypeOf : 'tags this -> v:t -> bool) =
      fun (x5368 : 'tags this) ->
        fun ~v:(x5367 : t) ->
          Ojs.bool_of_js
            (Ojs.call (this_to_js Obj.magic x5368) "isPrototypeOf"
               [|(t_to_js x5367)|])
    let (propertyIsEnumerable : 'tags this -> v:PropertyKey.t -> bool) =
      fun (x5371 : 'tags this) ->
        fun ~v:(x5370 : PropertyKey.t) ->
          Ojs.bool_of_js
            (Ojs.call (this_to_js Obj.magic x5371) "propertyIsEnumerable"
               [|(PropertyKey.t_to_js x5370)|])
    let (groupBy :
      items:'T Iterable.t ->
        keySelector:(item:'T -> index:float -> 'K) ->
          ('K, 'T list) Record.t Partial.t)
      =
      fun ~items:(x5373 : 'T Iterable.t) ->
        fun ~keySelector:(x5375 : item:'T -> index:float -> 'K) ->
          Partial.t_of_js
            (fun (x5378 : Ojs.t) ->
               Record.t_of_js Obj.magic
                 (fun (x5380 : Ojs.t) -> Ojs.list_of_js Obj.magic x5380)
                 x5378)
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "groupBy"
               [|(Iterable.t_to_js Obj.magic x5373);(Ojs.fun_to_js 2
                                                       (fun (x5376 : Ojs.t)
                                                          ->
                                                          fun (x5377 : Ojs.t)
                                                            ->
                                                            Obj.magic
                                                              (x5375
                                                                 ~item:(
                                                                 Obj.magic
                                                                   x5376)
                                                                 ~index:(
                                                                 Ojs.float_of_js
                                                                   x5377))))|])
    let (hasOwn : o:untyped_object -> v:PropertyKey.t -> bool) =
      fun ~o:(x5382 : untyped_object) ->
        fun ~v:(x5383 : PropertyKey.t) ->
          Ojs.bool_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "hasOwn"
               [|(untyped_object_to_js x5382);(PropertyKey.t_to_js x5383)|])
    let (fromEntries :
      (PropertyKey.t * 'T) Iterable.t -> 'T AnonymousInterface42.t) =
      fun (x5384 : (PropertyKey.t * 'T) Iterable.t) ->
        AnonymousInterface42.t_of_js Obj.magic
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "fromEntries"
             [|(Iterable.t_to_js
                  (fun (x5385 : (PropertyKey.t * 'T)) ->
                     let (x5386, x5387) = x5385 in
                     let x5388 = Ojs.array_make 2 in
                     Ojs.array_set x5388 0 (PropertyKey.t_to_js x5386);
                     Ojs.array_set x5388 1 (Obj.magic x5387);
                     x5388) x5384)|])
    let (fromEntries' : any list Iterable.t -> any) =
      fun (x5390 : any list Iterable.t) ->
        any_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "fromEntries"
             [|(Iterable.t_to_js
                  (fun (x5391 : any list) -> Ojs.list_to_js any_to_js x5391)
                  x5390)|])
    let (values :
      [ `U1 of 'T AnonymousInterface45.t  | `U2 of 'T ArrayLike.t ] ->
        'T list)
      =
      fun
        (x5393 :
          [ `U1 of 'T AnonymousInterface45.t  | `U2 of 'T ArrayLike.t ])
        ->
        Ojs.list_of_js Obj.magic
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "values"
             [|((match x5393 with
                 | `U1 x5394 -> AnonymousInterface45.t_to_js Obj.magic x5394
                 | `U2 x5396 -> ArrayLike.t_to_js Obj.magic x5396))|])
    let (values' : untyped_object -> any list) =
      fun (x5399 : untyped_object) ->
        Ojs.list_of_js any_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "values"
             [|(untyped_object_to_js x5399)|])
    let (entries :
      [ `U1 of 'T AnonymousInterface45.t  | `U2 of 'T ArrayLike.t ] ->
        (string * 'T) list)
      =
      fun
        (x5401 :
          [ `U1 of 'T AnonymousInterface45.t  | `U2 of 'T ArrayLike.t ])
        ->
        Ojs.list_of_js
          (fun (x5406 : Ojs.t) ->
             let x5407 = x5406 in
             ((Ojs.string_of_js (Ojs.array_get x5407 0)),
               (Obj.magic (Ojs.array_get x5407 1))))
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "entries"
             [|((match x5401 with
                 | `U1 x5402 -> AnonymousInterface45.t_to_js Obj.magic x5402
                 | `U2 x5404 -> ArrayLike.t_to_js Obj.magic x5404))|])
    let (entries' : untyped_object -> (string * any) list) =
      fun (x5408 : untyped_object) ->
        Ojs.list_of_js
          (fun (x5409 : Ojs.t) ->
             let x5410 = x5409 in
             ((Ojs.string_of_js (Ojs.array_get x5410 0)),
               (any_of_js (Ojs.array_get x5410 1))))
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "entries"
             [|(untyped_object_to_js x5408)|])
    let (getOwnPropertyDescriptors :
      'T -> (any, AnonymousInterface21.t) intersection2) =
      fun (x5411 : 'T) ->
        intersection2_of_js any_of_js AnonymousInterface21.t_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object")
             "getOwnPropertyDescriptors" [|(Obj.magic x5411)|])
    let (assign : target:'T -> source:'U -> ('T, 'U) intersection2) =
      fun ~target:(x5414 : 'T) ->
        fun ~source:(x5415 : 'U) ->
          intersection2_of_js Obj.magic Obj.magic
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "assign"
               [|(Obj.magic x5414);(Obj.magic x5415)|])
    let (assign' :
      target:'T -> source1:'U -> source2:'V -> ('T, 'U, 'V) intersection3) =
      fun ~target:(x5418 : 'T) ->
        fun ~source1:(x5419 : 'U) ->
          fun ~source2:(x5420 : 'V) ->
            intersection3_of_js Obj.magic Obj.magic Obj.magic
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "assign"
                 [|(Obj.magic x5418);(Obj.magic x5419);(Obj.magic x5420)|])
    let (assign'' :
      target:'T ->
        source1:'U ->
          source2:'V -> source3:'W -> ('T, 'U, 'V, 'W) intersection4)
      =
      fun ~target:(x5424 : 'T) ->
        fun ~source1:(x5425 : 'U) ->
          fun ~source2:(x5426 : 'V) ->
            fun ~source3:(x5427 : 'W) ->
              intersection4_of_js Obj.magic Obj.magic Obj.magic Obj.magic
                (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "assign"
                   [|(Obj.magic x5424);(Obj.magic x5425);(Obj.magic x5426);(
                     Obj.magic x5427)|])
    let (assign''' : target:untyped_object -> sources:any list -> any) =
      fun ~target:(x5432 : untyped_object) ->
        fun ~sources:(x5433 : any list) ->
          any_of_js
            (let x5436 = Ojs.get_prop_ascii Ojs.global "Object" in
             Ojs.call (Ojs.get_prop_ascii x5436 "assign") "apply"
               [|x5436;((let x5434 =
                           Ojs.new_obj
                             (Ojs.get_prop_ascii Ojs.global "Array") 
                             [||] in
                         ignore
                           (Ojs.call x5434 "push"
                              [|(untyped_object_to_js x5432)|]);
                         List.iter
                           (fun (x5435 : any) ->
                              ignore
                                (Ojs.call x5434 "push" [|(any_to_js x5435)|]))
                           x5433;
                         x5434))|])
    let (getOwnPropertySymbols : any -> symbol list) =
      fun (x5437 : any) ->
        Ojs.list_of_js symbol_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object")
             "getOwnPropertySymbols" [|(any_to_js x5437)|])
    let (keys : untyped_object -> string list) =
      fun (x5439 : untyped_object) ->
        Ojs.list_of_js Ojs.string_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "keys"
             [|(untyped_object_to_js x5439)|])
    let (is : value1:any -> value2:any -> bool) =
      fun ~value1:(x5441 : any) ->
        fun ~value2:(x5442 : any) ->
          Ojs.bool_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "is"
               [|(any_to_js x5441);(any_to_js x5442)|])
    let (setPrototypeOf : o:any -> proto:untyped_object option -> any) =
      fun ~o:(x5443 : any) ->
        fun ~proto:(x5444 : untyped_object option) ->
          any_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object")
               "setPrototypeOf"
               [|(any_to_js x5443);(Ojs.option_to_js untyped_object_to_js
                                      x5444)|])
    let (create : ?value:any -> unit -> t) =
      fun ?value:(x5446 : any option) ->
        fun () ->
          t_of_js
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "Object")
               (let x5447 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x5446 with
                 | Some x5448 ->
                     ignore (Ojs.call x5447 "push" [|(any_to_js x5448)|])
                 | None -> ());
                x5447))
    let (invoke : unit -> any) =
      fun () ->
        any_of_js (Ojs.apply (Ojs.get_prop_ascii Ojs.global "Object") [||])
    let (invoke' : any -> any) =
      fun (x5449 : any) ->
        any_of_js
          (Ojs.apply (Ojs.get_prop_ascii Ojs.global "Object")
             [|(any_to_js x5449)|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Object")
             "prototype")
    let (getPrototypeOf : any -> any) =
      fun (x5450 : any) ->
        any_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "getPrototypeOf"
             [|(any_to_js x5450)|])
    let (getOwnPropertyDescriptor :
      o:any -> p:PropertyKey.t -> PropertyDescriptor.t option) =
      fun ~o:(x5451 : any) ->
        fun ~p:(x5452 : PropertyKey.t) ->
          Ojs.option_of_js PropertyDescriptor.t_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object")
               "getOwnPropertyDescriptor"
               [|(any_to_js x5451);(PropertyKey.t_to_js x5452)|])
    let (getOwnPropertyNames : any -> string list) =
      fun (x5454 : any) ->
        Ojs.list_of_js Ojs.string_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object")
             "getOwnPropertyNames" [|(any_to_js x5454)|])
    let (create_ : untyped_object option -> any) =
      fun (x5456 : untyped_object option) ->
        any_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "create"
             [|(Ojs.option_to_js untyped_object_to_js x5456)|])
    let (create_' :
      o:untyped_object option ->
        properties:(PropertyDescriptorMap.t, any ThisType.t) intersection2 ->
          any)
      =
      fun ~o:(x5458 : untyped_object option) ->
        fun
          ~properties:(x5460 :
                        (PropertyDescriptorMap.t, any ThisType.t)
                          intersection2)
          ->
          any_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "create"
               [|(Ojs.option_to_js untyped_object_to_js x5458);(intersection2_to_js
                                                                  PropertyDescriptorMap.t_to_js
                                                                  (fun
                                                                    (x5462 :
                                                                    any
                                                                    ThisType.t)
                                                                    ->
                                                                    ThisType.t_to_js
                                                                    any_to_js
                                                                    x5462)
                                                                  x5460)|])
    let (defineProperty :
      o:'T ->
        p:PropertyKey.t ->
          attributes:(PropertyDescriptor.t, any ThisType.t) intersection2 ->
            'T)
      =
      fun ~o:(x5464 : 'T) ->
        fun ~p:(x5465 : PropertyKey.t) ->
          fun
            ~attributes:(x5466 :
                          (PropertyDescriptor.t, any ThisType.t)
                            intersection2)
            ->
            Obj.magic
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object")
                 "defineProperty"
                 [|(Obj.magic x5464);(PropertyKey.t_to_js x5465);(intersection2_to_js
                                                                    PropertyDescriptor.t_to_js
                                                                    (
                                                                    fun
                                                                    (x5468 :
                                                                    any
                                                                    ThisType.t)
                                                                    ->
                                                                    ThisType.t_to_js
                                                                    any_to_js
                                                                    x5468)
                                                                    x5466)|])
    let (defineProperties :
      o:'T ->
        properties:(PropertyDescriptorMap.t, any ThisType.t) intersection2 ->
          'T)
      =
      fun ~o:(x5470 : 'T) ->
        fun
          ~properties:(x5471 :
                        (PropertyDescriptorMap.t, any ThisType.t)
                          intersection2)
          ->
          Obj.magic
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object")
               "defineProperties"
               [|(Obj.magic x5470);(intersection2_to_js
                                      PropertyDescriptorMap.t_to_js
                                      (fun (x5473 : any ThisType.t) ->
                                         ThisType.t_to_js any_to_js x5473)
                                      x5471)|])
    let (seal : 'T -> 'T) =
      fun (x5475 : 'T) ->
        Obj.magic
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "seal"
             [|(Obj.magic x5475)|])
    let (freeze : 'T -> 'T) =
      fun (x5476 : 'T) ->
        Obj.magic
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "freeze"
             [|(Obj.magic x5476)|])
    let (freeze' : 'T -> 'T Readonly.t) =
      fun (x5477 : 'T) ->
        Readonly.t_of_js Obj.magic
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "freeze"
             [|(Obj.magic x5477)|])
    let (freeze'' : 'T -> 'T Readonly.t) =
      fun (x5479 : 'T) ->
        Readonly.t_of_js Obj.magic
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "freeze"
             [|(Obj.magic x5479)|])
    let (preventExtensions : 'T -> 'T) =
      fun (x5481 : 'T) ->
        Obj.magic
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object")
             "preventExtensions" [|(Obj.magic x5481)|])
    let (isSealed : any -> bool) =
      fun (x5482 : any) ->
        Ojs.bool_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "isSealed"
             [|(any_to_js x5482)|])
    let (isFrozen : any -> bool) =
      fun (x5483 : any) ->
        Ojs.bool_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "isFrozen"
             [|(any_to_js x5483)|])
    let (isExtensible : any -> bool) =
      fun (x5484 : any) ->
        Ojs.bool_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "isExtensible"
             [|(any_to_js x5484)|])
    let (keys' : untyped_object -> string list) =
      fun (x5485 : untyped_object) ->
        Ojs.list_of_js Ojs.string_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "keys"
             [|(untyped_object_to_js x5485)|])
    let cast_from = Obj.magic
  end
module Number =
  struct
    type t = [ `Number ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type tags = [ `Number ]
    type 'tags this = 'tags intf constraint 'tags = [> `Number ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x5489 : Ojs.t) -> intf_of_js __tags_of_js x5489
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x5487 : __tags intf) -> intf_to_js __tags_to_js x5487
    let (toLocaleString :
      'tags this ->
        ?locales:Intl.LocalesArgument.t ->
          ?options:Intl.NumberFormatOptions.t -> unit -> string)
      =
      fun (x5496 : 'tags this) ->
        fun ?locales:(x5491 : Intl.LocalesArgument.t option) ->
          fun ?options:(x5492 : Intl.NumberFormatOptions.t option) ->
            fun () ->
              Ojs.string_of_js
                (let x5498 = this_to_js Obj.magic x5496 in
                 Ojs.call (Ojs.get_prop_ascii x5498 "toLocaleString") "apply"
                   [|x5498;((let x5493 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x5491 with
                              | Some x5495 ->
                                  ignore
                                    (Ojs.call x5493 "push"
                                       [|(Intl.LocalesArgument.t_to_js x5495)|])
                              | None -> ());
                             (match x5492 with
                              | Some x5494 ->
                                  ignore
                                    (Ojs.call x5493 "push"
                                       [|(Intl.NumberFormatOptions.t_to_js
                                            x5494)|])
                              | None -> ());
                             x5493))|])
    let (toLocaleString' :
      'tags this ->
        ?locales:[ `U1 of string  | `U2 of string list ] ->
          ?options:Intl.NumberFormatOptions.t -> unit -> string)
      =
      fun (x5507 : 'tags this) ->
        fun ?locales:(x5499 : [ `U1 of string  | `U2 of string list ] option)
          ->
          fun ?options:(x5500 : Intl.NumberFormatOptions.t option) ->
            fun () ->
              Ojs.string_of_js
                (let x5509 = this_to_js Obj.magic x5507 in
                 Ojs.call (Ojs.get_prop_ascii x5509 "toLocaleString") "apply"
                   [|x5509;((let x5501 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x5499 with
                              | Some x5503 ->
                                  ignore
                                    (Ojs.call x5501 "push"
                                       [|((match x5503 with
                                           | `U1 x5504 ->
                                               Ojs.string_to_js x5504
                                           | `U2 x5505 ->
                                               Ojs.list_to_js
                                                 Ojs.string_to_js x5505))|])
                              | None -> ());
                             (match x5500 with
                              | Some x5502 ->
                                  ignore
                                    (Ojs.call x5501 "push"
                                       [|(Intl.NumberFormatOptions.t_to_js
                                            x5502)|])
                              | None -> ());
                             x5501))|])
    let (toString : 'tags this -> ?radix:float -> unit -> string) =
      fun (x5513 : 'tags this) ->
        fun ?radix:(x5510 : float option) ->
          fun () ->
            Ojs.string_of_js
              (let x5515 = this_to_js Obj.magic x5513 in
               Ojs.call (Ojs.get_prop_ascii x5515 "toString") "apply"
                 [|x5515;((let x5511 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x5510 with
                            | Some x5512 ->
                                ignore
                                  (Ojs.call x5511 "push"
                                     [|(Ojs.float_to_js x5512)|])
                            | None -> ());
                           x5511))|])
    let (toFixed : 'tags this -> ?fractionDigits:float -> unit -> string) =
      fun (x5519 : 'tags this) ->
        fun ?fractionDigits:(x5516 : float option) ->
          fun () ->
            Ojs.string_of_js
              (let x5521 = this_to_js Obj.magic x5519 in
               Ojs.call (Ojs.get_prop_ascii x5521 "toFixed") "apply"
                 [|x5521;((let x5517 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x5516 with
                            | Some x5518 ->
                                ignore
                                  (Ojs.call x5517 "push"
                                     [|(Ojs.float_to_js x5518)|])
                            | None -> ());
                           x5517))|])
    let (toExponential :
      'tags this -> ?fractionDigits:float -> unit -> string) =
      fun (x5525 : 'tags this) ->
        fun ?fractionDigits:(x5522 : float option) ->
          fun () ->
            Ojs.string_of_js
              (let x5527 = this_to_js Obj.magic x5525 in
               Ojs.call (Ojs.get_prop_ascii x5527 "toExponential") "apply"
                 [|x5527;((let x5523 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x5522 with
                            | Some x5524 ->
                                ignore
                                  (Ojs.call x5523 "push"
                                     [|(Ojs.float_to_js x5524)|])
                            | None -> ());
                           x5523))|])
    let (toPrecision : 'tags this -> ?precision:float -> unit -> string) =
      fun (x5531 : 'tags this) ->
        fun ?precision:(x5528 : float option) ->
          fun () ->
            Ojs.string_of_js
              (let x5533 = this_to_js Obj.magic x5531 in
               Ojs.call (Ojs.get_prop_ascii x5533 "toPrecision") "apply"
                 [|x5533;((let x5529 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x5528 with
                            | Some x5530 ->
                                ignore
                                  (Ojs.call x5529 "push"
                                     [|(Ojs.float_to_js x5530)|])
                            | None -> ());
                           x5529))|])
    let (valueOf : 'tags this -> float) =
      fun (x5534 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x5534) "valueOf" [||])
    let (epsilon : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Number")
             "EPSILON")
    let (isFinite : unknown -> bool) =
      fun (x5536 : unknown) ->
        Ojs.bool_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Number") "isFinite"
             [|(unknown_to_js x5536)|])
    let (isInteger : unknown -> bool) =
      fun (x5537 : unknown) ->
        Ojs.bool_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Number") "isInteger"
             [|(unknown_to_js x5537)|])
    let (isNaN : unknown -> bool) =
      fun (x5538 : unknown) ->
        Ojs.bool_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Number") "isNaN"
             [|(unknown_to_js x5538)|])
    let (isSafeInteger : unknown -> bool) =
      fun (x5539 : unknown) ->
        Ojs.bool_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Number") "isSafeInteger"
             [|(unknown_to_js x5539)|])
    let (max_safe_integer : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Number")
             "MAX_SAFE_INTEGER")
    let (min_safe_integer : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Number")
             "MIN_SAFE_INTEGER")
    let (parseFloat : string -> float) =
      fun (x5540 : string) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Number") "parseFloat"
             [|(Ojs.string_to_js x5540)|])
    let (parseInt : string:string -> ?radix:float -> unit -> float) =
      fun ~string:(x5541 : string) ->
        fun ?radix:(x5542 : float option) ->
          fun () ->
            Ojs.float_of_js
              (let x5545 = Ojs.get_prop_ascii Ojs.global "Number" in
               Ojs.call (Ojs.get_prop_ascii x5545 "parseInt") "apply"
                 [|x5545;((let x5543 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           ignore
                             (Ojs.call x5543 "push"
                                [|(Ojs.string_to_js x5541)|]);
                           (match x5542 with
                            | Some x5544 ->
                                ignore
                                  (Ojs.call x5543 "push"
                                     [|(Ojs.float_to_js x5544)|])
                            | None -> ());
                           x5543))|])
    let (create : ?value:any -> unit -> t) =
      fun ?value:(x5546 : any option) ->
        fun () ->
          t_of_js
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "Number")
               (let x5547 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x5546 with
                 | Some x5548 ->
                     ignore (Ojs.call x5547 "push" [|(any_to_js x5548)|])
                 | None -> ());
                x5547))
    let (invoke : ?value:any -> unit -> float) =
      fun ?value:(x5549 : any option) ->
        fun () ->
          Ojs.float_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "Number") "apply"
               [|Ojs.null;((let x5550 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x5549 with
                             | Some x5551 ->
                                 ignore
                                   (Ojs.call x5550 "push"
                                      [|(any_to_js x5551)|])
                             | None -> ());
                            x5550))|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Number")
             "prototype")
    let (max_value : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Number")
             "MAX_VALUE")
    let (min_value : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Number")
             "MIN_VALUE")
    let (nan : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Number") "NaN")
    let (negative_infinity : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Number")
             "NEGATIVE_INFINITY")
    let (positive_infinity : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Number")
             "POSITIVE_INFINITY")
    let cast_from = Obj.magic
    let (of_ml : float -> t) =
      fun (x5552 : float) -> t_of_js (Ojs.float_to_js x5552)
    let (to_ml : t -> float) =
      fun (x5553 : t) ->
        Ojs.float_of_js (Ojs.call (t_to_js x5553) "valueOf" [||])
  end
module NonNullable =
  struct
    type 'T t = ('T, untyped_object) intersection2
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun (type __T) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x5557 : Ojs.t) ->
            intersection2_of_js __T_of_js untyped_object_of_js x5557
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t =
      fun (type __T) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x5554 : (__T, untyped_object) intersection2) ->
            intersection2_to_js __T_to_js untyped_object_to_js x5554
  end
module NoInfer =
  struct
    type 'T t = Ojs.t
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun (type __T) ->
        fun (__T_of_js : Ojs.t -> __T) -> fun (x5561 : Ojs.t) -> x5561
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t =
      fun (type __T) ->
        fun (__T_to_js : __T -> Ojs.t) -> fun (x5560 : Ojs.t) -> x5560
  end
module NewableFunction =
  struct
    module AnonymousInterface40 =
      struct
        type 'T t = Ojs.t
        let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
          fun (type __T) ->
            fun (__T_of_js : Ojs.t -> __T) -> fun (x5563 : Ojs.t) -> x5563
        and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t =
          fun (type __T) ->
            fun (__T_to_js : __T -> Ojs.t) -> fun (x5562 : Ojs.t) -> x5562
        let (create : 'T t -> 'T) =
          fun (x5564 : 'T t) ->
            Obj.magic (Ojs.new_obj (t_to_js Obj.magic x5564) [||])
        module Make(T:Ojs.T) =
          struct
            type 'T parent = 'T t
            let rec parent_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T parent =
              fun (type __T) ->
                fun (__T_of_js : Ojs.t -> __T) ->
                  fun (x5568 : Ojs.t) -> t_of_js __T_of_js x5568
            and parent_to_js : 'T . ('T -> Ojs.t) -> 'T parent -> Ojs.t =
              fun (type __T) ->
                fun (__T_to_js : __T -> Ojs.t) ->
                  fun (x5566 : __T t) -> t_to_js __T_to_js x5566
            type t = T.t parent
            let rec t_of_js : Ojs.t -> t =
              fun (x5572 : Ojs.t) -> parent_of_js T.t_of_js x5572
            and t_to_js : t -> Ojs.t =
              fun (x5570 : T.t parent) -> parent_to_js T.t_to_js x5570
            let (create : t -> T.t) =
              fun (x5574 : t) -> T.t_of_js (Ojs.new_obj (t_to_js x5574) [||])
          end
      end
    module AnonymousInterface36 =
      struct
        type 'R t = Ojs.t
        let rec t_of_js : 'R . (Ojs.t -> 'R) -> Ojs.t -> 'R t =
          fun (type __R) ->
            fun (__R_of_js : Ojs.t -> __R) -> fun (x5576 : Ojs.t) -> x5576
        and t_to_js : 'R . ('R -> Ojs.t) -> 'R t -> Ojs.t =
          fun (type __R) ->
            fun (__R_to_js : __R -> Ojs.t) -> fun (x5575 : Ojs.t) -> x5575
        let (create : 'R t -> args:any list -> 'R) =
          fun (x5580 : 'R t) ->
            fun ~args:(x5577 : any list) ->
              Obj.magic
                (Ojs.new_obj_arr (t_to_js Obj.magic x5580)
                   (let x5578 =
                      Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                        [||] in
                    List.iter
                      (fun (x5579 : any) ->
                         ignore (Ojs.call x5578 "push" [|(any_to_js x5579)|]))
                      x5577;
                    x5578))
        module Make(R:Ojs.T) =
          struct
            type 'R parent = 'R t
            let rec parent_of_js : 'R . (Ojs.t -> 'R) -> Ojs.t -> 'R parent =
              fun (type __R) ->
                fun (__R_of_js : Ojs.t -> __R) ->
                  fun (x5584 : Ojs.t) -> t_of_js __R_of_js x5584
            and parent_to_js : 'R . ('R -> Ojs.t) -> 'R parent -> Ojs.t =
              fun (type __R) ->
                fun (__R_to_js : __R -> Ojs.t) ->
                  fun (x5582 : __R t) -> t_to_js __R_to_js x5582
            type t = R.t parent
            let rec t_of_js : Ojs.t -> t =
              fun (x5588 : Ojs.t) -> parent_of_js R.t_of_js x5588
            and t_to_js : t -> Ojs.t =
              fun (x5586 : R.t parent) -> parent_to_js R.t_to_js x5586
            let (create : t -> args:any list -> R.t) =
              fun (x5593 : t) ->
                fun ~args:(x5590 : any list) ->
                  R.t_of_js
                    (Ojs.new_obj_arr (t_to_js x5593)
                       (let x5591 =
                          Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                            [||] in
                        List.iter
                          (fun (x5592 : any) ->
                             ignore
                               (Ojs.call x5591 "push" [|(any_to_js x5592)|]))
                          x5590;
                        x5591))
          end
      end
    module AnonymousInterface34 =
      struct
        type ('B, 'R) t = Ojs.t
        let rec t_of_js :
          'B 'R . (Ojs.t -> 'B) -> (Ojs.t -> 'R) -> Ojs.t -> ('B, 'R) t =
          fun (type __B) ->
            fun (type __R) ->
              fun (__B_of_js : Ojs.t -> __B) ->
                fun (__R_of_js : Ojs.t -> __R) ->
                  fun (x5595 : Ojs.t) -> x5595
        and t_to_js :
          'B 'R . ('B -> Ojs.t) -> ('R -> Ojs.t) -> ('B, 'R) t -> Ojs.t =
          fun (type __B) ->
            fun (type __R) ->
              fun (__B_to_js : __B -> Ojs.t) ->
                fun (__R_to_js : __R -> Ojs.t) ->
                  fun (x5594 : Ojs.t) -> x5594
        let (create : ('B, 'R) t -> args:any list -> 'R) =
          fun (x5599 : ('B, 'R) t) ->
            fun ~args:(x5596 : any list) ->
              Obj.magic
                (Ojs.new_obj_arr (t_to_js Obj.magic Obj.magic x5599)
                   (let x5597 =
                      Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                        [||] in
                    List.iter
                      (fun (x5598 : any) ->
                         ignore (Ojs.call x5597 "push" [|(any_to_js x5598)|]))
                      x5596;
                    x5597))
        module Make(B:Ojs.T)(R:Ojs.T) =
          struct
            type ('B, 'R) parent = ('B, 'R) t
            let rec parent_of_js :
              'B 'R .
                (Ojs.t -> 'B) -> (Ojs.t -> 'R) -> Ojs.t -> ('B, 'R) parent
              =
              fun (type __B) ->
                fun (type __R) ->
                  fun (__B_of_js : Ojs.t -> __B) ->
                    fun (__R_of_js : Ojs.t -> __R) ->
                      fun (x5605 : Ojs.t) ->
                        t_of_js __B_of_js __R_of_js x5605
            and parent_to_js :
              'B 'R .
                ('B -> Ojs.t) -> ('R -> Ojs.t) -> ('B, 'R) parent -> Ojs.t
              =
              fun (type __B) ->
                fun (type __R) ->
                  fun (__B_to_js : __B -> Ojs.t) ->
                    fun (__R_to_js : __R -> Ojs.t) ->
                      fun (x5602 : (__B, __R) t) ->
                        t_to_js __B_to_js __R_to_js x5602
            type t = (B.t, R.t) parent
            let rec t_of_js : Ojs.t -> t =
              fun (x5611 : Ojs.t) -> parent_of_js B.t_of_js R.t_of_js x5611
            and t_to_js : t -> Ojs.t =
              fun (x5608 : (B.t, R.t) parent) ->
                parent_to_js B.t_to_js R.t_to_js x5608
            let (create : t -> args:any list -> R.t) =
              fun (x5617 : t) ->
                fun ~args:(x5614 : any list) ->
                  R.t_of_js
                    (Ojs.new_obj_arr (t_to_js x5617)
                       (let x5615 =
                          Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                            [||] in
                        List.iter
                          (fun (x5616 : any) ->
                             ignore
                               (Ojs.call x5615 "push" [|(any_to_js x5616)|]))
                          x5614;
                        x5615))
          end
      end
    module AnonymousInterface32 =
      struct
        type ('A, 'T) t = Ojs.t
        let rec t_of_js :
          'A 'T . (Ojs.t -> 'A) -> (Ojs.t -> 'T) -> Ojs.t -> ('A, 'T) t =
          fun (type __A) ->
            fun (type __T) ->
              fun (__A_of_js : Ojs.t -> __A) ->
                fun (__T_of_js : Ojs.t -> __T) ->
                  fun (x5619 : Ojs.t) -> x5619
        and t_to_js :
          'A 'T . ('A -> Ojs.t) -> ('T -> Ojs.t) -> ('A, 'T) t -> Ojs.t =
          fun (type __A) ->
            fun (type __T) ->
              fun (__A_to_js : __A -> Ojs.t) ->
                fun (__T_to_js : __T -> Ojs.t) ->
                  fun (x5618 : Ojs.t) -> x5618
        let (create : ('A, 'T) t -> args:any list -> 'T) =
          fun (x5623 : ('A, 'T) t) ->
            fun ~args:(x5620 : any list) ->
              Obj.magic
                (Ojs.new_obj_arr (t_to_js Obj.magic Obj.magic x5623)
                   (let x5621 =
                      Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                        [||] in
                    List.iter
                      (fun (x5622 : any) ->
                         ignore (Ojs.call x5621 "push" [|(any_to_js x5622)|]))
                      x5620;
                    x5621))
        module Make(A:Ojs.T)(T:Ojs.T) =
          struct
            type ('A, 'T) parent = ('A, 'T) t
            let rec parent_of_js :
              'A 'T .
                (Ojs.t -> 'A) -> (Ojs.t -> 'T) -> Ojs.t -> ('A, 'T) parent
              =
              fun (type __A) ->
                fun (type __T) ->
                  fun (__A_of_js : Ojs.t -> __A) ->
                    fun (__T_of_js : Ojs.t -> __T) ->
                      fun (x5629 : Ojs.t) ->
                        t_of_js __A_of_js __T_of_js x5629
            and parent_to_js :
              'A 'T .
                ('A -> Ojs.t) -> ('T -> Ojs.t) -> ('A, 'T) parent -> Ojs.t
              =
              fun (type __A) ->
                fun (type __T) ->
                  fun (__A_to_js : __A -> Ojs.t) ->
                    fun (__T_to_js : __T -> Ojs.t) ->
                      fun (x5626 : (__A, __T) t) ->
                        t_to_js __A_to_js __T_to_js x5626
            type t = (A.t, T.t) parent
            let rec t_of_js : Ojs.t -> t =
              fun (x5635 : Ojs.t) -> parent_of_js A.t_of_js T.t_of_js x5635
            and t_to_js : t -> Ojs.t =
              fun (x5632 : (A.t, T.t) parent) ->
                parent_to_js A.t_to_js T.t_to_js x5632
            let (create : t -> args:any list -> T.t) =
              fun (x5641 : t) ->
                fun ~args:(x5638 : any list) ->
                  T.t_of_js
                    (Ojs.new_obj_arr (t_to_js x5641)
                       (let x5639 =
                          Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                            [||] in
                        List.iter
                          (fun (x5640 : any) ->
                             ignore
                               (Ojs.call x5639 "push" [|(any_to_js x5640)|]))
                          x5638;
                        x5639))
          end
      end
    type t = [ `Function  | `Function  | `NewableFunction ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type tags = [ `Function  | `Function  | `NewableFunction ]
    type 'tags this = 'tags intf constraint 'tags = [> `NewableFunction ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x5644 : Ojs.t) -> intf_of_js __tags_of_js x5644
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x5642 : __tags intf) -> intf_to_js __tags_to_js x5642
    let (apply_ :
      'tags this -> this:'T AnonymousInterface40.t -> thisArg:'T -> unit) =
      fun (x5649 : 'tags this) ->
        fun ~this:(x5646 : 'T AnonymousInterface40.t) ->
          fun ~thisArg:(x5648 : 'T) ->
            ignore
              (Ojs.call (this_to_js Obj.magic x5649) "apply"
                 [|(AnonymousInterface40.t_to_js Obj.magic x5646);(Obj.magic
                                                                    x5648)|])
    let (apply_' :
      'tags this ->
        this:('A, 'T) AnonymousInterface32.t -> thisArg:'T -> args:'A -> unit)
      =
      fun (x5656 : 'tags this) ->
        fun ~this:(x5651 : ('A, 'T) AnonymousInterface32.t) ->
          fun ~thisArg:(x5654 : 'T) ->
            fun ~args:(x5655 : 'A) ->
              ignore
                (Ojs.call (this_to_js Obj.magic x5656) "apply"
                   [|(AnonymousInterface32.t_to_js Obj.magic Obj.magic x5651);(
                     Obj.magic x5654);(Obj.magic x5655)|])
    let (call :
      'tags this ->
        this:('A, 'T) AnonymousInterface32.t ->
          thisArg:'T -> args:any list -> unit)
      =
      fun (x5665 : 'tags this) ->
        fun ~this:(x5658 : ('A, 'T) AnonymousInterface32.t) ->
          fun ~thisArg:(x5659 : 'T) ->
            fun ~args:(x5660 : any list) ->
              ignore
                (let x5667 = this_to_js Obj.magic x5665 in
                 Ojs.call (Ojs.get_prop_ascii x5667 "call") "apply"
                   [|x5667;((let x5661 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x5661 "push"
                                  [|(AnonymousInterface32.t_to_js Obj.magic
                                       Obj.magic x5658)|]);
                             ignore
                               (Ojs.call x5661 "push" [|(Obj.magic x5659)|]);
                             List.iter
                               (fun (x5662 : any) ->
                                  ignore
                                    (Ojs.call x5661 "push"
                                       [|(any_to_js x5662)|])) x5660;
                             x5661))|])
    let (bind : 'tags this -> this:'T -> thisArg:any -> 'T) =
      fun (x5670 : 'tags this) ->
        fun ~this:(x5668 : 'T) ->
          fun ~thisArg:(x5669 : any) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic x5670) "bind"
                 [|(Obj.magic x5668);(any_to_js x5669)|])
    let (bind' :
      'tags this ->
        this:'R AnonymousInterface36.t ->
          thisArg:any -> args:any list -> ('B, 'R) AnonymousInterface34.t)
      =
      fun (x5678 : 'tags this) ->
        fun ~this:(x5672 : 'R AnonymousInterface36.t) ->
          fun ~thisArg:(x5673 : any) ->
            fun ~args:(x5674 : any list) ->
              AnonymousInterface34.t_of_js Obj.magic Obj.magic
                (let x5680 = this_to_js Obj.magic x5678 in
                 Ojs.call (Ojs.get_prop_ascii x5680 "bind") "apply"
                   [|x5680;((let x5675 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x5675 "push"
                                  [|(AnonymousInterface36.t_to_js Obj.magic
                                       x5672)|]);
                             ignore
                               (Ojs.call x5675 "push" [|(any_to_js x5673)|]);
                             List.iter
                               (fun (x5676 : any) ->
                                  ignore
                                    (Ojs.call x5675 "push"
                                       [|(any_to_js x5676)|])) x5674;
                             x5675))|])
    let cast_from = Obj.magic
  end
module Math =
  struct
    let (clz32 : float -> float) =
      fun (x5683 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "clz32"
             [|(Ojs.float_to_js x5683)|])
    let (imul : x:float -> y:float -> float) =
      fun ~x:(x5684 : float) ->
        fun ~y:(x5685 : float) ->
          Ojs.float_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "imul"
               [|(Ojs.float_to_js x5684);(Ojs.float_to_js x5685)|])
    let (sign : float -> float) =
      fun (x5686 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "sign"
             [|(Ojs.float_to_js x5686)|])
    let (log10 : float -> float) =
      fun (x5687 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "log10"
             [|(Ojs.float_to_js x5687)|])
    let (log2 : float -> float) =
      fun (x5688 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "log2"
             [|(Ojs.float_to_js x5688)|])
    let (log1p : float -> float) =
      fun (x5689 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "log1p"
             [|(Ojs.float_to_js x5689)|])
    let (expm1 : float -> float) =
      fun (x5690 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "expm1"
             [|(Ojs.float_to_js x5690)|])
    let (cosh : float -> float) =
      fun (x5691 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "cosh"
             [|(Ojs.float_to_js x5691)|])
    let (sinh : float -> float) =
      fun (x5692 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "sinh"
             [|(Ojs.float_to_js x5692)|])
    let (tanh : float -> float) =
      fun (x5693 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "tanh"
             [|(Ojs.float_to_js x5693)|])
    let (acosh : float -> float) =
      fun (x5694 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "acosh"
             [|(Ojs.float_to_js x5694)|])
    let (asinh : float -> float) =
      fun (x5695 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "asinh"
             [|(Ojs.float_to_js x5695)|])
    let (atanh : float -> float) =
      fun (x5696 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "atanh"
             [|(Ojs.float_to_js x5696)|])
    let (hypot : float list -> float) =
      fun (x5697 : float list) ->
        Ojs.float_of_js
          (let x5700 = Ojs.get_prop_ascii Ojs.global "Math" in
           Ojs.call (Ojs.get_prop_ascii x5700 "hypot") "apply"
             [|x5700;((let x5698 =
                         Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                           [||] in
                       List.iter
                         (fun (x5699 : float) ->
                            ignore
                              (Ojs.call x5698 "push"
                                 [|(Ojs.float_to_js x5699)|])) x5697;
                       x5698))|])
    let (trunc : float -> float) =
      fun (x5701 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "trunc"
             [|(Ojs.float_to_js x5701)|])
    let (fround : float -> float) =
      fun (x5702 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "fround"
             [|(Ojs.float_to_js x5702)|])
    let (cbrt : float -> float) =
      fun (x5703 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "cbrt"
             [|(Ojs.float_to_js x5703)|])
    let (e : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Math") "E")
    let (ln10 : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Math") "LN10")
    let (ln2 : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Math") "LN2")
    let (log2e : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Math") "LOG2E")
    let (log10e : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Math") "LOG10E")
    let (pi : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Math") "PI")
    let (sqrt1_2 : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Math")
             "SQRT1_2")
    let (sqrt2 : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Math") "SQRT2")
    let (abs : float -> float) =
      fun (x5704 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "abs"
             [|(Ojs.float_to_js x5704)|])
    let (acos : float -> float) =
      fun (x5705 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "acos"
             [|(Ojs.float_to_js x5705)|])
    let (asin : float -> float) =
      fun (x5706 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "asin"
             [|(Ojs.float_to_js x5706)|])
    let (atan : float -> float) =
      fun (x5707 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "atan"
             [|(Ojs.float_to_js x5707)|])
    let (atan2 : y:float -> x:float -> float) =
      fun ~y:(x5708 : float) ->
        fun ~x:(x5709 : float) ->
          Ojs.float_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "atan2"
               [|(Ojs.float_to_js x5708);(Ojs.float_to_js x5709)|])
    let (ceil : float -> float) =
      fun (x5710 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "ceil"
             [|(Ojs.float_to_js x5710)|])
    let (cos : float -> float) =
      fun (x5711 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "cos"
             [|(Ojs.float_to_js x5711)|])
    let (exp : float -> float) =
      fun (x5712 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "exp"
             [|(Ojs.float_to_js x5712)|])
    let (floor : float -> float) =
      fun (x5713 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "floor"
             [|(Ojs.float_to_js x5713)|])
    let (log : float -> float) =
      fun (x5714 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "log"
             [|(Ojs.float_to_js x5714)|])
    let (max : float list -> float) =
      fun (x5715 : float list) ->
        Ojs.float_of_js
          (let x5718 = Ojs.get_prop_ascii Ojs.global "Math" in
           Ojs.call (Ojs.get_prop_ascii x5718 "max") "apply"
             [|x5718;((let x5716 =
                         Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                           [||] in
                       List.iter
                         (fun (x5717 : float) ->
                            ignore
                              (Ojs.call x5716 "push"
                                 [|(Ojs.float_to_js x5717)|])) x5715;
                       x5716))|])
    let (min : float list -> float) =
      fun (x5719 : float list) ->
        Ojs.float_of_js
          (let x5722 = Ojs.get_prop_ascii Ojs.global "Math" in
           Ojs.call (Ojs.get_prop_ascii x5722 "min") "apply"
             [|x5722;((let x5720 =
                         Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                           [||] in
                       List.iter
                         (fun (x5721 : float) ->
                            ignore
                              (Ojs.call x5720 "push"
                                 [|(Ojs.float_to_js x5721)|])) x5719;
                       x5720))|])
    let (pow : x:float -> y:float -> float) =
      fun ~x:(x5723 : float) ->
        fun ~y:(x5724 : float) ->
          Ojs.float_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "pow"
               [|(Ojs.float_to_js x5723);(Ojs.float_to_js x5724)|])
    let (random : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "random" [||])
    let (round : float -> float) =
      fun (x5725 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "round"
             [|(Ojs.float_to_js x5725)|])
    let (sin : float -> float) =
      fun (x5726 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "sin"
             [|(Ojs.float_to_js x5726)|])
    let (sqrt : float -> float) =
      fun (x5727 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "sqrt"
             [|(Ojs.float_to_js x5727)|])
    let (tan : float -> float) =
      fun (x5728 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "tan"
             [|(Ojs.float_to_js x5728)|])
  end
module Map =
  struct
    type ('K, 'V) t = [ `Map of ('K * 'V) ] intf
    let rec t_of_js :
      'K 'V . (Ojs.t -> 'K) -> (Ojs.t -> 'V) -> Ojs.t -> ('K, 'V) t =
      fun _K -> fun _V -> Obj.magic
    and t_to_js :
      'K 'V . ('K -> Ojs.t) -> ('V -> Ojs.t) -> ('K, 'V) t -> Ojs.t =
      fun _K -> fun _V -> Obj.magic
    type ('K, 'V) tags = [ `Map of ('K * 'V) ]
    type ('tags, 'K, 'V) this =
      'tags intf constraint 'tags = [> `Map of ('K * 'V) ]
    let rec this_of_js :
      'tags 'K 'V .
        (Ojs.t -> 'tags) ->
          (Ojs.t -> 'K) -> (Ojs.t -> 'V) -> Ojs.t -> ('tags, 'K, 'V) this
      =
      fun (type __tags) ->
        fun (type __K) ->
          fun (type __V) ->
            fun (__tags_of_js : Ojs.t -> __tags) ->
              fun (__K_of_js : Ojs.t -> __K) ->
                fun (__V_of_js : Ojs.t -> __V) ->
                  fun (x5731 : Ojs.t) -> intf_of_js __tags_of_js x5731
    and this_to_js :
      'tags 'K 'V .
        ('tags -> Ojs.t) ->
          ('K -> Ojs.t) -> ('V -> Ojs.t) -> ('tags, 'K, 'V) this -> Ojs.t
      =
      fun (type __tags) ->
        fun (type __K) ->
          fun (type __V) ->
            fun (__tags_to_js : __tags -> Ojs.t) ->
              fun (__K_to_js : __K -> Ojs.t) ->
                fun (__V_to_js : __V -> Ojs.t) ->
                  fun (x5729 : __tags intf) -> intf_to_js __tags_to_js x5729
    let (entries : ('tags, 'K, 'V) this -> ('K * 'V) IterableIterator.t) =
      fun (x5733 : ('tags, 'K, 'V) this) ->
        IterableIterator.t_of_js
          (fun (x5737 : Ojs.t) ->
             let x5738 = x5737 in
             ((Obj.magic (Ojs.array_get x5738 0)),
               (Obj.magic (Ojs.array_get x5738 1))))
          (Ojs.call (this_to_js Obj.magic Obj.magic Obj.magic x5733)
             "entries" [||])
    let (keys : ('tags, 'K, 'V) this -> 'K IterableIterator.t) =
      fun (x5739 : ('tags, 'K, 'V) this) ->
        IterableIterator.t_of_js Obj.magic
          (Ojs.call (this_to_js Obj.magic Obj.magic Obj.magic x5739) "keys"
             [||])
    let (values : ('tags, 'K, 'V) this -> 'V IterableIterator.t) =
      fun (x5744 : ('tags, 'K, 'V) this) ->
        IterableIterator.t_of_js Obj.magic
          (Ojs.call (this_to_js Obj.magic Obj.magic Obj.magic x5744) "values"
             [||])
    let (clear : ('tags, 'K, 'V) this -> unit) =
      fun (x5749 : ('tags, 'K, 'V) this) ->
        ignore
          (Ojs.call (this_to_js Obj.magic Obj.magic Obj.magic x5749) "clear"
             [||])
    let (delete : ('tags, 'K, 'V) this -> key:'K -> bool) =
      fun (x5754 : ('tags, 'K, 'V) this) ->
        fun ~key:(x5753 : 'K) ->
          Ojs.bool_of_js
            (Ojs.call (this_to_js Obj.magic Obj.magic Obj.magic x5754)
               "delete" [|(Obj.magic x5753)|])
    let (forEach :
      ('tags, 'K, 'V) this ->
        callbackfn:(value:'V -> key:'K -> map:('K, 'V) t -> unit) ->
          ?thisArg:any -> unit -> unit)
      =
      fun (x5767 : ('tags, 'K, 'V) this) ->
        fun
          ~callbackfn:(x5758 : value:'V -> key:'K -> map:('K, 'V) t -> unit)
          ->
          fun ?thisArg:(x5759 : any option) ->
            fun () ->
              ignore
                (let x5771 = this_to_js Obj.magic Obj.magic Obj.magic x5767 in
                 Ojs.call (Ojs.get_prop_ascii x5771 "forEach") "apply"
                   [|x5771;((let x5760 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x5760 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x5762 : Ojs.t) ->
                                          fun (x5763 : Ojs.t) ->
                                            fun (x5764 : Ojs.t) ->
                                              x5758 ~value:(Obj.magic x5762)
                                                ~key:(Obj.magic x5763)
                                                ~map:(t_of_js Obj.magic
                                                        Obj.magic x5764)))|]);
                             (match x5759 with
                              | Some x5761 ->
                                  ignore
                                    (Ojs.call x5760 "push"
                                       [|(any_to_js x5761)|])
                              | None -> ());
                             x5760))|])
    let (get_ : ('tags, 'K, 'V) this -> key:'K -> 'V option) =
      fun (x5773 : ('tags, 'K, 'V) this) ->
        fun ~key:(x5772 : 'K) ->
          Ojs.option_of_js Obj.magic
            (Ojs.call (this_to_js Obj.magic Obj.magic Obj.magic x5773) "get"
               [|(Obj.magic x5772)|])
    let (has : ('tags, 'K, 'V) this -> key:'K -> bool) =
      fun (x5779 : ('tags, 'K, 'V) this) ->
        fun ~key:(x5778 : 'K) ->
          Ojs.bool_of_js
            (Ojs.call (this_to_js Obj.magic Obj.magic Obj.magic x5779) "has"
               [|(Obj.magic x5778)|])
    let (set_ :
      ('tags, 'K, 'V) this -> key:'K -> value:'V -> ('tags, 'K, 'V) this) =
      fun (x5785 : ('tags, 'K, 'V) this) ->
        fun ~key:(x5783 : 'K) ->
          fun ~value:(x5784 : 'V) ->
            this_of_js Obj.magic Obj.magic Obj.magic
              (Ojs.call (this_to_js Obj.magic Obj.magic Obj.magic x5785)
                 "set" [|(Obj.magic x5783);(Obj.magic x5784)|])
    let (get_size : ('tags, 'K, 'V) this -> float) =
      fun (x5792 : ('tags, 'K, 'V) this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii
             (this_to_js Obj.magic Obj.magic Obj.magic x5792) "size")
    let (groupBy :
      items:'T Iterable.t ->
        keySelector:(item:'T -> index:float -> 'K) -> ('K, 'T list) t)
      =
      fun ~items:(x5796 : 'T Iterable.t) ->
        fun ~keySelector:(x5798 : item:'T -> index:float -> 'K) ->
          t_of_js Obj.magic
            (fun (x5802 : Ojs.t) -> Ojs.list_of_js Obj.magic x5802)
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "Map") "groupBy"
               [|(Iterable.t_to_js Obj.magic x5796);(Ojs.fun_to_js 2
                                                       (fun (x5799 : Ojs.t)
                                                          ->
                                                          fun (x5800 : Ojs.t)
                                                            ->
                                                            Obj.magic
                                                              (x5798
                                                                 ~item:(
                                                                 Obj.magic
                                                                   x5799)
                                                                 ~index:(
                                                                 Ojs.float_of_js
                                                                   x5800))))|])
    let (create : unit -> (any, any) t) =
      fun () ->
        t_of_js any_of_js any_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Map") [||])
    let (create' :
      ?iterable:('K * 'V) Iterable.t option -> unit -> ('K, 'V) t) =
      fun ?iterable:(x5806 : ('K * 'V) Iterable.t option option) ->
        fun () ->
          t_of_js Obj.magic Obj.magic
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "Map")
               (let x5807 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x5806 with
                 | Some x5808 ->
                     ignore
                       (Ojs.call x5807 "push"
                          [|(Ojs.option_to_js
                               (fun (x5809 : ('K * 'V) Iterable.t) ->
                                  Iterable.t_to_js
                                    (fun (x5810 : ('K * 'V)) ->
                                       let (x5811, x5812) = x5810 in
                                       let x5813 = Ojs.array_make 2 in
                                       Ojs.array_set x5813 0
                                         (Obj.magic x5811);
                                       Ojs.array_set x5813 1
                                         (Obj.magic x5812);
                                       x5813) x5809) x5808)|])
                 | None -> ());
                x5807))
    let (create'' : unit -> (any, any) t) =
      fun () ->
        t_of_js any_of_js any_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Map") [||])
    let (create''' : ?entries:('K * 'V) list option -> unit -> ('K, 'V) t) =
      fun ?entries:(x5818 : ('K * 'V) list option option) ->
        fun () ->
          t_of_js Obj.magic Obj.magic
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "Map")
               (let x5819 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x5818 with
                 | Some x5820 ->
                     ignore
                       (Ojs.call x5819 "push"
                          [|(Ojs.option_to_js
                               (fun (x5821 : ('K * 'V) list) ->
                                  Ojs.list_to_js
                                    (fun (x5822 : ('K * 'V)) ->
                                       let (x5823, x5824) = x5822 in
                                       let x5825 = Ojs.array_make 2 in
                                       Ojs.array_set x5825 0
                                         (Obj.magic x5823);
                                       Ojs.array_set x5825 1
                                         (Obj.magic x5824);
                                       x5825) x5821) x5820)|])
                 | None -> ());
                x5819))
    let (prototype : unit -> (any, any) t) =
      fun () ->
        t_of_js any_of_js any_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Map")
             "prototype")
    let cast_from = Obj.magic
  end
module Lowercase =
  struct
    type 'S t = Ojs.t
    let rec t_of_js : 'S . (Ojs.t -> 'S) -> Ojs.t -> 'S t =
      fun (type __S) ->
        fun (__S_of_js : Ojs.t -> __S) -> fun (x5831 : Ojs.t) -> x5831
    and t_to_js : 'S . ('S -> Ojs.t) -> 'S t -> Ojs.t =
      fun (type __S) ->
        fun (__S_to_js : __S -> Ojs.t) -> fun (x5830 : Ojs.t) -> x5830
  end
module JSON =
  struct
    let (parse :
      text:string ->
        ?reviver:(this:any -> key:string -> value:any -> any) -> unit -> any)
      =
      fun ~text:(x5832 : string) ->
        fun
          ?reviver:(x5833 :
                     (this:any -> key:string -> value:any -> any) option)
          ->
          fun () ->
            any_of_js
              (let x5839 = Ojs.get_prop_ascii Ojs.global "JSON" in
               Ojs.call (Ojs.get_prop_ascii x5839 "parse") "apply"
                 [|x5839;((let x5834 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           ignore
                             (Ojs.call x5834 "push"
                                [|(Ojs.string_to_js x5832)|]);
                           (match x5833 with
                            | Some x5835 ->
                                ignore
                                  (Ojs.call x5834 "push"
                                     [|(Ojs.fun_to_js 3
                                          (fun (x5836 : Ojs.t) ->
                                             fun (x5837 : Ojs.t) ->
                                               fun (x5838 : Ojs.t) ->
                                                 any_to_js
                                                   (x5835
                                                      ~this:(any_of_js x5836)
                                                      ~key:(Ojs.string_of_js
                                                              x5837)
                                                      ~value:(any_of_js x5838))))|])
                            | None -> ());
                           x5834))|])
    let (stringify :
      value:any ->
        ?replacer:(this:any -> key:string -> value:any -> any) ->
          ?space:[ `U1 of string  | `U2 of float ] -> unit -> string)
      =
      fun ~value:(x5840 : any) ->
        fun
          ?replacer:(x5841 :
                      (this:any -> key:string -> value:any -> any) option)
          ->
          fun ?space:(x5842 : [ `U1 of string  | `U2 of float ] option) ->
            fun () ->
              Ojs.string_of_js
                (let x5851 = Ojs.get_prop_ascii Ojs.global "JSON" in
                 Ojs.call (Ojs.get_prop_ascii x5851 "stringify") "apply"
                   [|x5851;((let x5843 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x5843 "push" [|(any_to_js x5840)|]);
                             (match x5841 with
                              | Some x5847 ->
                                  ignore
                                    (Ojs.call x5843 "push"
                                       [|(Ojs.fun_to_js 3
                                            (fun (x5848 : Ojs.t) ->
                                               fun (x5849 : Ojs.t) ->
                                                 fun (x5850 : Ojs.t) ->
                                                   any_to_js
                                                     (x5847
                                                        ~this:(any_of_js
                                                                 x5848)
                                                        ~key:(Ojs.string_of_js
                                                                x5849)
                                                        ~value:(any_of_js
                                                                  x5850))))|])
                              | None -> ());
                             (match x5842 with
                              | Some x5844 ->
                                  ignore
                                    (Ojs.call x5843 "push"
                                       [|((match x5844 with
                                           | `U1 x5845 ->
                                               Ojs.string_to_js x5845
                                           | `U2 x5846 ->
                                               Ojs.float_to_js x5846))|])
                              | None -> ());
                             x5843))|])
    let (stringify' :
      value:any ->
        ?replacer:[ `U1 of float  | `U2 of string ] list option ->
          ?space:[ `U1 of string  | `U2 of float ] -> unit -> string)
      =
      fun ~value:(x5852 : any) ->
        fun
          ?replacer:(x5853 :
                      [ `U1 of float  | `U2 of string ] list option option)
          ->
          fun ?space:(x5854 : [ `U1 of string  | `U2 of float ] option) ->
            fun () ->
              Ojs.string_of_js
                (let x5864 = Ojs.get_prop_ascii Ojs.global "JSON" in
                 Ojs.call (Ojs.get_prop_ascii x5864 "stringify") "apply"
                   [|x5864;((let x5855 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x5855 "push" [|(any_to_js x5852)|]);
                             (match x5853 with
                              | Some x5859 ->
                                  ignore
                                    (Ojs.call x5855 "push"
                                       [|(Ojs.option_to_js
                                            (fun
                                               (x5860 :
                                                 [ `U1 of float 
                                                 | `U2 of string ] list)
                                               ->
                                               Ojs.list_to_js
                                                 (fun
                                                    (x5861 :
                                                      [ `U1 of float 
                                                      | `U2 of string ])
                                                    ->
                                                    match x5861 with
                                                    | `U1 x5862 ->
                                                        Ojs.float_to_js x5862
                                                    | `U2 x5863 ->
                                                        Ojs.string_to_js
                                                          x5863) x5860) x5859)|])
                              | None -> ());
                             (match x5854 with
                              | Some x5856 ->
                                  ignore
                                    (Ojs.call x5855 "push"
                                       [|((match x5856 with
                                           | `U1 x5857 ->
                                               Ojs.string_to_js x5857
                                           | `U2 x5858 ->
                                               Ojs.float_to_js x5858))|])
                              | None -> ());
                             x5855))|])
  end
module TypedPropertyDescriptor =
  struct
    type 'T t = [ `TypedPropertyDescriptor of 'T ] intf
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun _T -> Obj.magic
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun _T -> Obj.magic
    type 'T tags = [ `TypedPropertyDescriptor of 'T ]
    type ('tags, 'T) this =
      'tags intf constraint 'tags = [> `TypedPropertyDescriptor of 'T ]
    let rec this_of_js :
      'tags 'T .
        (Ojs.t -> 'tags) -> (Ojs.t -> 'T) -> Ojs.t -> ('tags, 'T) this
      =
      fun (type __tags) ->
        fun (type __T) ->
          fun (__tags_of_js : Ojs.t -> __tags) ->
            fun (__T_of_js : Ojs.t -> __T) ->
              fun (x5867 : Ojs.t) -> intf_of_js __tags_of_js x5867
    and this_to_js :
      'tags 'T .
        ('tags -> Ojs.t) -> ('T -> Ojs.t) -> ('tags, 'T) this -> Ojs.t
      =
      fun (type __tags) ->
        fun (type __T) ->
          fun (__tags_to_js : __tags -> Ojs.t) ->
            fun (__T_to_js : __T -> Ojs.t) ->
              fun (x5865 : __tags intf) -> intf_to_js __tags_to_js x5865
    let (get_enumerable : ('tags, 'T) this -> bool option) =
      fun (x5869 : ('tags, 'T) this) ->
        Ojs.option_of_js Ojs.bool_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic Obj.magic x5869)
             "enumerable")
    let (set_enumerable : ('tags, 'T) this -> bool -> unit) =
      fun (x5873 : ('tags, 'T) this) ->
        fun (x5874 : bool) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic Obj.magic x5873)
            "enumerable" (Ojs.bool_to_js x5874)
    let (get_configurable : ('tags, 'T) this -> bool option) =
      fun (x5877 : ('tags, 'T) this) ->
        Ojs.option_of_js Ojs.bool_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic Obj.magic x5877)
             "configurable")
    let (set_configurable : ('tags, 'T) this -> bool -> unit) =
      fun (x5881 : ('tags, 'T) this) ->
        fun (x5882 : bool) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic Obj.magic x5881)
            "configurable" (Ojs.bool_to_js x5882)
    let (get_writable : ('tags, 'T) this -> bool option) =
      fun (x5885 : ('tags, 'T) this) ->
        Ojs.option_of_js Ojs.bool_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic Obj.magic x5885)
             "writable")
    let (set_writable : ('tags, 'T) this -> bool -> unit) =
      fun (x5889 : ('tags, 'T) this) ->
        fun (x5890 : bool) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic Obj.magic x5889)
            "writable" (Ojs.bool_to_js x5890)
    let (get_value : ('tags, 'T) this -> 'T option) =
      fun (x5893 : ('tags, 'T) this) ->
        Ojs.option_of_js Obj.magic
          (Ojs.get_prop_ascii (this_to_js Obj.magic Obj.magic x5893) "value")
    let (set_value : ('tags, 'T) this -> 'T -> unit) =
      fun (x5897 : ('tags, 'T) this) ->
        fun (x5898 : 'T) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic Obj.magic x5897) "value"
            (Obj.magic x5898)
    let (get_get : ('tags, 'T) this -> (unit -> 'T) option) =
      fun (x5901 : ('tags, 'T) this) ->
        Ojs.option_of_js
          (fun (x5904 : Ojs.t) -> fun () -> Obj.magic (Ojs.apply x5904 [||]))
          (Ojs.get_prop_ascii (this_to_js Obj.magic Obj.magic x5901) "get")
    let (set_get : ('tags, 'T) this -> (unit -> 'T) -> unit) =
      fun (x5905 : ('tags, 'T) this) ->
        fun (x5906 : unit -> 'T) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic Obj.magic x5905) "get"
            (Ojs.fun_to_js 1 (fun _ -> Obj.magic (x5906 ())))
    let (get_set : ('tags, 'T) this -> ('T -> unit) option) =
      fun (x5909 : ('tags, 'T) this) ->
        Ojs.option_of_js
          (fun (x5912 : Ojs.t) ->
             fun (x5913 : 'T) ->
               ignore (Ojs.apply x5912 [|(Obj.magic x5913)|]))
          (Ojs.get_prop_ascii (this_to_js Obj.magic Obj.magic x5909) "set")
    let (set_set : ('tags, 'T) this -> ('T -> unit) -> unit) =
      fun (x5914 : ('tags, 'T) this) ->
        fun (x5915 : 'T -> unit) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic Obj.magic x5914) "set"
            (Ojs.fun_to_js 1 (fun (x5916 : Ojs.t) -> x5915 (Obj.magic x5916)))
    let (create :
      ?enumerable:bool ->
        ?configurable:bool ->
          ?writable:bool ->
            ?value:'T ->
              ?get_:(unit -> 'T) -> ?set_:('T -> unit) -> unit -> 'T t)
      =
      fun ?enumerable:(x5919 : bool option) ->
        fun ?configurable:(x5920 : bool option) ->
          fun ?writable:(x5921 : bool option) ->
            fun ?value:(x5922 : 'T option) ->
              fun ?get_:(x5923 : (unit -> 'T) option) ->
                fun ?set_:(x5924 : ('T -> unit) option) ->
                  fun () ->
                    let x5925 = Ojs.empty_obj () in
                    (match x5919 with
                     | Some x5933 ->
                         Ojs.set_prop_ascii x5925 "enumerable"
                           (Ojs.bool_to_js x5933)
                     | None -> ());
                    (match x5920 with
                     | Some x5932 ->
                         Ojs.set_prop_ascii x5925 "configurable"
                           (Ojs.bool_to_js x5932)
                     | None -> ());
                    (match x5921 with
                     | Some x5931 ->
                         Ojs.set_prop_ascii x5925 "writable"
                           (Ojs.bool_to_js x5931)
                     | None -> ());
                    (match x5922 with
                     | Some x5930 ->
                         Ojs.set_prop_ascii x5925 "value" (Obj.magic x5930)
                     | None -> ());
                    (match x5923 with
                     | Some x5929 ->
                         Ojs.set_prop_ascii x5925 "get"
                           (Ojs.fun_to_js 1 (fun _ -> Obj.magic (x5929 ())))
                     | None -> ());
                    (match x5924 with
                     | Some x5927 ->
                         Ojs.set_prop_ascii x5925 "set"
                           (Ojs.fun_to_js 1
                              (fun (x5928 : Ojs.t) -> x5927 (Obj.magic x5928)))
                     | None -> ());
                    t_of_js Obj.magic x5925
    let cast_from = Obj.magic
  end
module Reflect =
  struct
    module AnonymousInterface29 =
      struct
        type ('A, 'R) t = Ojs.t
        let rec t_of_js :
          'A 'R . (Ojs.t -> 'A) -> (Ojs.t -> 'R) -> Ojs.t -> ('A, 'R) t =
          fun (type __A) ->
            fun (type __R) ->
              fun (__A_of_js : Ojs.t -> __A) ->
                fun (__R_of_js : Ojs.t -> __R) ->
                  fun (x5935 : Ojs.t) -> x5935
        and t_to_js :
          'A 'R . ('A -> Ojs.t) -> ('R -> Ojs.t) -> ('A, 'R) t -> Ojs.t =
          fun (type __A) ->
            fun (type __R) ->
              fun (__A_to_js : __A -> Ojs.t) ->
                fun (__R_to_js : __R -> Ojs.t) ->
                  fun (x5934 : Ojs.t) -> x5934
        let (create : ('A, 'R) t -> args:any list -> 'R) =
          fun (x5939 : ('A, 'R) t) ->
            fun ~args:(x5936 : any list) ->
              Obj.magic
                (Ojs.new_obj_arr (t_to_js Obj.magic Obj.magic x5939)
                   (let x5937 =
                      Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                        [||] in
                    List.iter
                      (fun (x5938 : any) ->
                         ignore (Ojs.call x5937 "push" [|(any_to_js x5938)|]))
                      x5936;
                    x5937))
        module Make(A:Ojs.T)(R:Ojs.T) =
          struct
            type ('A, 'R) parent = ('A, 'R) t
            let rec parent_of_js :
              'A 'R .
                (Ojs.t -> 'A) -> (Ojs.t -> 'R) -> Ojs.t -> ('A, 'R) parent
              =
              fun (type __A) ->
                fun (type __R) ->
                  fun (__A_of_js : Ojs.t -> __A) ->
                    fun (__R_of_js : Ojs.t -> __R) ->
                      fun (x5945 : Ojs.t) ->
                        t_of_js __A_of_js __R_of_js x5945
            and parent_to_js :
              'A 'R .
                ('A -> Ojs.t) -> ('R -> Ojs.t) -> ('A, 'R) parent -> Ojs.t
              =
              fun (type __A) ->
                fun (type __R) ->
                  fun (__A_to_js : __A -> Ojs.t) ->
                    fun (__R_to_js : __R -> Ojs.t) ->
                      fun (x5942 : (__A, __R) t) ->
                        t_to_js __A_to_js __R_to_js x5942
            type t = (A.t, R.t) parent
            let rec t_of_js : Ojs.t -> t =
              fun (x5951 : Ojs.t) -> parent_of_js A.t_of_js R.t_of_js x5951
            and t_to_js : t -> Ojs.t =
              fun (x5948 : (A.t, R.t) parent) ->
                parent_to_js A.t_to_js R.t_to_js x5948
            let (create : t -> args:any list -> R.t) =
              fun (x5957 : t) ->
                fun ~args:(x5954 : any list) ->
                  R.t_of_js
                    (Ojs.new_obj_arr (t_to_js x5957)
                       (let x5955 =
                          Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                            [||] in
                        List.iter
                          (fun (x5956 : any) ->
                             ignore
                               (Ojs.call x5955 "push" [|(any_to_js x5956)|]))
                          x5954;
                        x5955))
          end
      end
    module AnonymousInterface15 =
      struct
        type t = Ojs.t
        let rec t_of_js : Ojs.t -> t = fun (x5959 : Ojs.t) -> x5959
        and t_to_js : t -> Ojs.t = fun (x5958 : Ojs.t) -> x5958
        let (create : t -> args:any list -> any) =
          fun (x5963 : t) ->
            fun ~args:(x5960 : any list) ->
              any_of_js
                (Ojs.new_obj_arr (t_to_js x5963)
                   (let x5961 =
                      Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                        [||] in
                    List.iter
                      (fun (x5962 : any) ->
                         ignore (Ojs.call x5961 "push" [|(any_to_js x5962)|]))
                      x5960;
                    x5961))
      end
    let (apply_ :
      target:(this:'T -> args:any list -> 'R) ->
        thisArgument:'T -> argumentsList:'A Readonly.t -> 'R)
      =
      fun ~target:(x5964 : this:'T -> args:any list -> 'R) ->
        fun ~thisArgument:(x5967 : 'T) ->
          fun ~argumentsList:(x5968 : 'A Readonly.t) ->
            Obj.magic
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "Reflect") "apply"
                 [|(Ojs.fun_to_js_args
                      (fun (x5965 : _) ->
                         Obj.magic
                           (x5964 ~this:(Obj.magic (Ojs.array_get x5965 0))
                              ~args:(Ojs.list_of_js_from any_of_js x5965 1))));(
                   Obj.magic x5967);(Readonly.t_to_js Obj.magic x5968)|])
    let (apply_' :
      target:Function.t ->
        thisArgument:any -> argumentsList:any ArrayLike.t -> any)
      =
      fun ~target:(x5970 : Function.t) ->
        fun ~thisArgument:(x5971 : any) ->
          fun ~argumentsList:(x5972 : any ArrayLike.t) ->
            any_of_js
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "Reflect") "apply"
                 [|(Function.t_to_js x5970);(any_to_js x5971);(ArrayLike.t_to_js
                                                                 any_to_js
                                                                 x5972)|])
    let (construct :
      target:('A, 'R) AnonymousInterface29.t ->
        argumentsList:'A Readonly.t ->
          ?newTarget:AnonymousInterface15.t -> unit -> 'R)
      =
      fun ~target:(x5974 : ('A, 'R) AnonymousInterface29.t) ->
        fun ~argumentsList:(x5975 : 'A Readonly.t) ->
          fun ?newTarget:(x5976 : AnonymousInterface15.t option) ->
            fun () ->
              Obj.magic
                (let x5982 = Ojs.get_prop_ascii Ojs.global "Reflect" in
                 Ojs.call (Ojs.get_prop_ascii x5982 "construct") "apply"
                   [|x5982;((let x5977 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x5977 "push"
                                  [|(AnonymousInterface29.t_to_js Obj.magic
                                       Obj.magic x5974)|]);
                             ignore
                               (Ojs.call x5977 "push"
                                  [|(Readonly.t_to_js Obj.magic x5975)|]);
                             (match x5976 with
                              | Some x5978 ->
                                  ignore
                                    (Ojs.call x5977 "push"
                                       [|(AnonymousInterface15.t_to_js x5978)|])
                              | None -> ());
                             x5977))|])
    let (construct' :
      target:Function.t ->
        argumentsList:any ArrayLike.t -> ?newTarget:Function.t -> unit -> any)
      =
      fun ~target:(x5983 : Function.t) ->
        fun ~argumentsList:(x5984 : any ArrayLike.t) ->
          fun ?newTarget:(x5985 : Function.t option) ->
            fun () ->
              any_of_js
                (let x5989 = Ojs.get_prop_ascii Ojs.global "Reflect" in
                 Ojs.call (Ojs.get_prop_ascii x5989 "construct") "apply"
                   [|x5989;((let x5986 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x5986 "push"
                                  [|(Function.t_to_js x5983)|]);
                             ignore
                               (Ojs.call x5986 "push"
                                  [|(ArrayLike.t_to_js any_to_js x5984)|]);
                             (match x5985 with
                              | Some x5987 ->
                                  ignore
                                    (Ojs.call x5986 "push"
                                       [|(Function.t_to_js x5987)|])
                              | None -> ());
                             x5986))|])
    let (defineProperty :
      target:untyped_object ->
        propertyKey:PropertyKey.t ->
          attributes:(PropertyDescriptor.t, any ThisType.t) intersection2 ->
            bool)
      =
      fun ~target:(x5990 : untyped_object) ->
        fun ~propertyKey:(x5991 : PropertyKey.t) ->
          fun
            ~attributes:(x5992 :
                          (PropertyDescriptor.t, any ThisType.t)
                            intersection2)
            ->
            Ojs.bool_of_js
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "Reflect")
                 "defineProperty"
                 [|(untyped_object_to_js x5990);(PropertyKey.t_to_js x5991);(
                   intersection2_to_js PropertyDescriptor.t_to_js
                     (fun (x5994 : any ThisType.t) ->
                        ThisType.t_to_js any_to_js x5994) x5992)|])
    let (deleteProperty :
      target:untyped_object -> propertyKey:PropertyKey.t -> bool) =
      fun ~target:(x5996 : untyped_object) ->
        fun ~propertyKey:(x5997 : PropertyKey.t) ->
          Ojs.bool_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "Reflect")
               "deleteProperty"
               [|(untyped_object_to_js x5996);(PropertyKey.t_to_js x5997)|])
    let (get_ :
      target:'T -> propertyKey:'P -> ?receiver:unknown -> unit -> any) =
      fun ~target:(x5998 : 'T) ->
        fun ~propertyKey:(x5999 : 'P) ->
          fun ?receiver:(x6000 : unknown option) ->
            fun () ->
              any_of_js
                (let x6003 = Ojs.get_prop_ascii Ojs.global "Reflect" in
                 Ojs.call (Ojs.get_prop_ascii x6003 "get") "apply"
                   [|x6003;((let x6001 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6001 "push" [|(Obj.magic x5998)|]);
                             ignore
                               (Ojs.call x6001 "push" [|(Obj.magic x5999)|]);
                             (match x6000 with
                              | Some x6002 ->
                                  ignore
                                    (Ojs.call x6001 "push"
                                       [|(unknown_to_js x6002)|])
                              | None -> ());
                             x6001))|])
    let (getOwnPropertyDescriptor :
      target:'T -> propertyKey:'P -> any TypedPropertyDescriptor.t option) =
      fun ~target:(x6004 : 'T) ->
        fun ~propertyKey:(x6005 : 'P) ->
          Ojs.option_of_js
            (fun (x6006 : Ojs.t) ->
               TypedPropertyDescriptor.t_of_js any_of_js x6006)
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "Reflect")
               "getOwnPropertyDescriptor"
               [|(Obj.magic x6004);(Obj.magic x6005)|])
    let (getPrototypeOf : untyped_object -> untyped_object option) =
      fun (x6008 : untyped_object) ->
        Ojs.option_of_js untyped_object_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Reflect")
             "getPrototypeOf" [|(untyped_object_to_js x6008)|])
    let (has : target:untyped_object -> propertyKey:PropertyKey.t -> bool) =
      fun ~target:(x6010 : untyped_object) ->
        fun ~propertyKey:(x6011 : PropertyKey.t) ->
          Ojs.bool_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "Reflect") "has"
               [|(untyped_object_to_js x6010);(PropertyKey.t_to_js x6011)|])
    let (isExtensible : untyped_object -> bool) =
      fun (x6012 : untyped_object) ->
        Ojs.bool_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Reflect") "isExtensible"
             [|(untyped_object_to_js x6012)|])
    let (ownKeys :
      untyped_object ->
        [ `String of string  | `Symbol of symbol ] Primitive.t list)
      =
      fun (x6013 : untyped_object) ->
        Ojs.list_of_js
          (fun (x6014 : Ojs.t) ->
             Primitive.t_of_js
               (fun (x6015 : Ojs.t) ->
                  let x6016 = x6015 in
                  match Ojs.string_of_js (Ojs.get_prop_ascii x6016 "dummy")
                  with
                  | "String" -> `String (Ojs.string_of_js x6016)
                  | "Symbol" -> `Symbol (symbol_of_js x6016)
                  | _ -> assert false) x6014)
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Reflect") "ownKeys"
             [|(untyped_object_to_js x6013)|])
    let (preventExtensions : untyped_object -> bool) =
      fun (x6017 : untyped_object) ->
        Ojs.bool_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Reflect")
             "preventExtensions" [|(untyped_object_to_js x6017)|])
    let (set_ :
      target:'T ->
        propertyKey:'P -> value:any -> ?receiver:any -> unit -> bool)
      =
      fun ~target:(x6018 : 'T) ->
        fun ~propertyKey:(x6019 : 'P) ->
          fun ~value:(x6020 : any) ->
            fun ?receiver:(x6021 : any option) ->
              fun () ->
                Ojs.bool_of_js
                  (let x6024 = Ojs.get_prop_ascii Ojs.global "Reflect" in
                   Ojs.call (Ojs.get_prop_ascii x6024 "set") "apply"
                     [|x6024;((let x6022 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x6022 "push" [|(Obj.magic x6018)|]);
                               ignore
                                 (Ojs.call x6022 "push" [|(Obj.magic x6019)|]);
                               ignore
                                 (Ojs.call x6022 "push" [|(any_to_js x6020)|]);
                               (match x6021 with
                                | Some x6023 ->
                                    ignore
                                      (Ojs.call x6022 "push"
                                         [|(any_to_js x6023)|])
                                | None -> ());
                               x6022))|])
    let (set_' :
      target:untyped_object ->
        propertyKey:PropertyKey.t ->
          value:any -> ?receiver:any -> unit -> bool)
      =
      fun ~target:(x6025 : untyped_object) ->
        fun ~propertyKey:(x6026 : PropertyKey.t) ->
          fun ~value:(x6027 : any) ->
            fun ?receiver:(x6028 : any option) ->
              fun () ->
                Ojs.bool_of_js
                  (let x6031 = Ojs.get_prop_ascii Ojs.global "Reflect" in
                   Ojs.call (Ojs.get_prop_ascii x6031 "set") "apply"
                     [|x6031;((let x6029 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x6029 "push"
                                    [|(untyped_object_to_js x6025)|]);
                               ignore
                                 (Ojs.call x6029 "push"
                                    [|(PropertyKey.t_to_js x6026)|]);
                               ignore
                                 (Ojs.call x6029 "push" [|(any_to_js x6027)|]);
                               (match x6028 with
                                | Some x6030 ->
                                    ignore
                                      (Ojs.call x6029 "push"
                                         [|(any_to_js x6030)|])
                                | None -> ());
                               x6029))|])
    let (setPrototypeOf :
      target:untyped_object -> proto:untyped_object option -> bool) =
      fun ~target:(x6032 : untyped_object) ->
        fun ~proto:(x6033 : untyped_object option) ->
          Ojs.bool_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "Reflect")
               "setPrototypeOf"
               [|(untyped_object_to_js x6032);(Ojs.option_to_js
                                                 untyped_object_to_js x6033)|])
  end
module InstanceType =
  struct
    module AnonymousInterface15 =
      struct
        type t = Ojs.t
        let rec t_of_js : Ojs.t -> t = fun (x6036 : Ojs.t) -> x6036
        and t_to_js : t -> Ojs.t = fun (x6035 : Ojs.t) -> x6035
        let (create : t -> args:any list -> any) =
          fun (x6040 : t) ->
            fun ~args:(x6037 : any list) ->
              any_of_js
                (Ojs.new_obj_arr (t_to_js x6040)
                   (let x6038 =
                      Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                        [||] in
                    List.iter
                      (fun (x6039 : any) ->
                         ignore (Ojs.call x6038 "push" [|(any_to_js x6039)|]))
                      x6037;
                    x6038))
      end
    type 'T t = any
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun (type __T) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x6042 : Ojs.t) -> any_of_js x6042
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t =
      fun (type __T) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x6041 : any) -> any_to_js x6041
  end
module ImportMeta =
  struct
    type t = [ `ImportMeta ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type tags = [ `ImportMeta ]
    type 'tags this = 'tags intf constraint 'tags = [> `ImportMeta ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x6045 : Ojs.t) -> intf_of_js __tags_of_js x6045
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x6043 : __tags intf) -> intf_to_js __tags_to_js x6043
    let cast_from = Obj.magic
  end
module ImportAttributes =
  struct
    type t = [ `ImportAttributes ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type tags = [ `ImportAttributes ]
    type 'tags this = 'tags intf constraint 'tags = [> `ImportAttributes ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x6049 : Ojs.t) -> intf_of_js __tags_of_js x6049
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x6047 : __tags intf) -> intf_to_js __tags_to_js x6047
    let (get : 'tags this -> string -> string) =
      fun (x6051 : 'tags this) ->
        fun (x6053 : string) ->
          Ojs.string_of_js
            (Ojs.get_prop (this_to_js Obj.magic x6051)
               (Ojs.string_to_js x6053))
    let (set : 'tags this -> string -> string -> unit) =
      fun (x6054 : 'tags this) ->
        fun (x6056 : string) ->
          fun (x6057 : string) ->
            Ojs.set_prop (this_to_js Obj.magic x6054)
              (Ojs.string_to_js x6056) (Ojs.string_to_js x6057)
    let cast_from = Obj.magic
  end
module ImportAssertions =
  struct
    type t = [ `ImportAssertions ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type tags = [ `ImportAssertions ]
    type 'tags this = 'tags intf constraint 'tags = [> `ImportAssertions ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x6060 : Ojs.t) -> intf_of_js __tags_of_js x6060
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x6058 : __tags intf) -> intf_to_js __tags_to_js x6058
    let (get : 'tags this -> string -> string) =
      fun (x6062 : 'tags this) ->
        fun (x6064 : string) ->
          Ojs.string_of_js
            (Ojs.get_prop (this_to_js Obj.magic x6062)
               (Ojs.string_to_js x6064))
    let (set : 'tags this -> string -> string -> unit) =
      fun (x6065 : 'tags this) ->
        fun (x6067 : string) ->
          fun (x6068 : string) ->
            Ojs.set_prop (this_to_js Obj.magic x6065)
              (Ojs.string_to_js x6067) (Ojs.string_to_js x6068)
    let cast_from = Obj.magic
  end
module ImportCallOptions =
  struct
    type t = [ `ImportCallOptions ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type tags = [ `ImportCallOptions ]
    type 'tags this = 'tags intf constraint 'tags = [> `ImportCallOptions ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x6071 : Ojs.t) -> intf_of_js __tags_of_js x6071
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x6069 : __tags intf) -> intf_to_js __tags_to_js x6069
    let (get_assert : 'tags this -> ImportAssertions.t option) =
      fun (x6073 : 'tags this) ->
        Ojs.option_of_js ImportAssertions.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6073) "assert")
    let (set_assert : 'tags this -> ImportAssertions.t -> unit) =
      fun (x6076 : 'tags this) ->
        fun (x6077 : ImportAssertions.t) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x6076) "assert"
            (ImportAssertions.t_to_js x6077)
    let (get_with : 'tags this -> ImportAttributes.t option) =
      fun (x6079 : 'tags this) ->
        Ojs.option_of_js ImportAttributes.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6079) "with")
    let (set_with : 'tags this -> ImportAttributes.t -> unit) =
      fun (x6082 : 'tags this) ->
        fun (x6083 : ImportAttributes.t) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x6082) "with"
            (ImportAttributes.t_to_js x6083)
    let (create :
      ?assert_:ImportAssertions.t -> ?with_:ImportAttributes.t -> unit -> t)
      =
      fun ?assert_:(x6085 : ImportAssertions.t option) ->
        fun ?with_:(x6086 : ImportAttributes.t option) ->
          fun () ->
            let x6087 = Ojs.empty_obj () in
            (match x6085 with
             | Some x6089 ->
                 Ojs.set_prop_ascii x6087 "assert"
                   (ImportAssertions.t_to_js x6089)
             | None -> ());
            (match x6086 with
             | Some x6088 ->
                 Ojs.set_prop_ascii x6087 "with"
                   (ImportAttributes.t_to_js x6088)
             | None -> ());
            t_of_js x6087
    let cast_from = Obj.magic
  end
module IArguments =
  struct
    type t = [ `IArguments ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type tags = [ `IArguments ]
    type 'tags this = 'tags intf constraint 'tags = [> `IArguments ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x6092 : Ojs.t) -> intf_of_js __tags_of_js x6092
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x6090 : __tags intf) -> intf_to_js __tags_to_js x6090
    let (get : 'tags this -> float -> any) =
      fun (x6094 : 'tags this) ->
        fun (x6096 : float) ->
          any_of_js
            (Ojs.get_prop (this_to_js Obj.magic x6094)
               (Ojs.float_to_js x6096))
    let (set : 'tags this -> float -> any -> unit) =
      fun (x6097 : 'tags this) ->
        fun (x6099 : float) ->
          fun (x6100 : any) ->
            Ojs.set_prop (this_to_js Obj.magic x6097) (Ojs.float_to_js x6099)
              (any_to_js x6100)
    let (get_length : 'tags this -> float) =
      fun (x6101 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6101) "length")
    let (set_length : 'tags this -> float -> unit) =
      fun (x6103 : 'tags this) ->
        fun (x6104 : float) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x6103) "length"
            (Ojs.float_to_js x6104)
    let (get_callee : 'tags this -> Function.t) =
      fun (x6106 : 'tags this) ->
        Function.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6106) "callee")
    let (set_callee : 'tags this -> Function.t -> unit) =
      fun (x6108 : 'tags this) ->
        fun (x6109 : Function.t) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x6108) "callee"
            (Function.t_to_js x6109)
    let cast_from = Obj.magic
  end
module Generator =
  struct
    type ('T, 'TReturn, 'TNext) t =
      [ `Generator of ('T * 'TReturn * 'TNext) 
      | `Iterator of ('T * 'TReturn * 'TNext) ] intf
    let rec t_of_js :
      'T 'TReturn 'TNext .
        (Ojs.t -> 'T) ->
          (Ojs.t -> 'TReturn) ->
            (Ojs.t -> 'TNext) -> Ojs.t -> ('T, 'TReturn, 'TNext) t
      = fun _T -> fun _TReturn -> fun _TNext -> Obj.magic
    and t_to_js :
      'T 'TReturn 'TNext .
        ('T -> Ojs.t) ->
          ('TReturn -> Ojs.t) ->
            ('TNext -> Ojs.t) -> ('T, 'TReturn, 'TNext) t -> Ojs.t
      = fun _T -> fun _TReturn -> fun _TNext -> Obj.magic
    type ('T, 'TReturn) t_2 = ('T, 'TReturn, unknown) t
    let rec t_2_of_js :
      'T 'TReturn .
        (Ojs.t -> 'T) -> (Ojs.t -> 'TReturn) -> Ojs.t -> ('T, 'TReturn) t_2
      =
      fun (type __T) ->
        fun (type __TReturn) ->
          fun (__T_of_js : Ojs.t -> __T) ->
            fun (__TReturn_of_js : Ojs.t -> __TReturn) ->
              fun (x6115 : Ojs.t) ->
                t_of_js __T_of_js __TReturn_of_js unknown_of_js x6115
    and t_2_to_js :
      'T 'TReturn .
        ('T -> Ojs.t) -> ('TReturn -> Ojs.t) -> ('T, 'TReturn) t_2 -> Ojs.t
      =
      fun (type __T) ->
        fun (type __TReturn) ->
          fun (__T_to_js : __T -> Ojs.t) ->
            fun (__TReturn_to_js : __TReturn -> Ojs.t) ->
              fun (x6111 : (__T, __TReturn, unknown) t) ->
                t_to_js __T_to_js __TReturn_to_js unknown_to_js x6111
    type 'T t_1 = ('T, any, unknown) t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 =
      fun (type __T) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x6123 : Ojs.t) ->
            t_of_js __T_of_js any_of_js unknown_of_js x6123
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t =
      fun (type __T) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x6119 : (__T, any, unknown) t) ->
            t_to_js __T_to_js any_to_js unknown_to_js x6119
    type t_0 = (unknown, any, unknown) t
    let rec t_0_of_js : Ojs.t -> t_0 =
      fun (x6131 : Ojs.t) ->
        t_of_js unknown_of_js any_of_js unknown_of_js x6131
    and t_0_to_js : t_0 -> Ojs.t =
      fun (x6127 : (unknown, any, unknown) t) ->
        t_to_js unknown_to_js any_to_js unknown_to_js x6127
    type ('T, 'TReturn, 'TNext) tags =
      [ `Generator of ('T * 'TReturn * 'TNext) 
      | `Iterator of ('T * 'TReturn * 'TNext) ]
    type ('T, 'TReturn) tags_2 = ('T, 'TReturn, unknown) tags
    type 'T tags_1 = ('T, any, unknown) tags
    type tags_0 = (unknown, any, unknown) tags
    type ('tags, 'T, 'TReturn, 'TNext) this =
      'tags intf constraint 'tags =
                  [> `Generator of ('T * 'TReturn * 'TNext) ]
    let rec this_of_js :
      'tags 'T 'TReturn 'TNext .
        (Ojs.t -> 'tags) ->
          (Ojs.t -> 'T) ->
            (Ojs.t -> 'TReturn) ->
              (Ojs.t -> 'TNext) ->
                Ojs.t -> ('tags, 'T, 'TReturn, 'TNext) this
      =
      fun (type __tags) ->
        fun (type __T) ->
          fun (type __TReturn) ->
            fun (type __TNext) ->
              fun (__tags_of_js : Ojs.t -> __tags) ->
                fun (__T_of_js : Ojs.t -> __T) ->
                  fun (__TReturn_of_js : Ojs.t -> __TReturn) ->
                    fun (__TNext_of_js : Ojs.t -> __TNext) ->
                      fun (x6137 : Ojs.t) -> intf_of_js __tags_of_js x6137
    and this_to_js :
      'tags 'T 'TReturn 'TNext .
        ('tags -> Ojs.t) ->
          ('T -> Ojs.t) ->
            ('TReturn -> Ojs.t) ->
              ('TNext -> Ojs.t) ->
                ('tags, 'T, 'TReturn, 'TNext) this -> Ojs.t
      =
      fun (type __tags) ->
        fun (type __T) ->
          fun (type __TReturn) ->
            fun (type __TNext) ->
              fun (__tags_to_js : __tags -> Ojs.t) ->
                fun (__T_to_js : __T -> Ojs.t) ->
                  fun (__TReturn_to_js : __TReturn -> Ojs.t) ->
                    fun (__TNext_to_js : __TNext -> Ojs.t) ->
                      fun (x6135 : __tags intf) ->
                        intf_to_js __tags_to_js x6135
    let (next :
      ('tags, 'T, 'TReturn, 'TNext) this ->
        args:any list -> ('T, 'TReturn) IteratorResult.t)
      =
      fun (x6142 : ('tags, 'T, 'TReturn, 'TNext) this) ->
        fun ~args:(x6139 : any list) ->
          IteratorResult.t_of_js Obj.magic Obj.magic
            (let x6147 =
               this_to_js Obj.magic Obj.magic Obj.magic Obj.magic x6142 in
             Ojs.call (Ojs.get_prop_ascii x6147 "next") "apply"
               [|x6147;((let x6140 =
                           Ojs.new_obj
                             (Ojs.get_prop_ascii Ojs.global "Array") 
                             [||] in
                         List.iter
                           (fun (x6141 : any) ->
                              ignore
                                (Ojs.call x6140 "push" [|(any_to_js x6141)|]))
                           x6139;
                         x6140))|])
    let (return :
      ('tags, 'T, 'TReturn, 'TNext) this ->
        value:'TReturn -> ('T, 'TReturn) IteratorResult.t)
      =
      fun (x6151 : ('tags, 'T, 'TReturn, 'TNext) this) ->
        fun ~value:(x6150 : 'TReturn) ->
          IteratorResult.t_of_js Obj.magic Obj.magic
            (Ojs.call
               (this_to_js Obj.magic Obj.magic Obj.magic Obj.magic x6151)
               "return" [|(Obj.magic x6150)|])
    let (throw :
      ('tags, 'T, 'TReturn, 'TNext) this ->
        e:any -> ('T, 'TReturn) IteratorResult.t)
      =
      fun (x6159 : ('tags, 'T, 'TReturn, 'TNext) this) ->
        fun ~e:(x6158 : any) ->
          IteratorResult.t_of_js Obj.magic Obj.magic
            (Ojs.call
               (this_to_js Obj.magic Obj.magic Obj.magic Obj.magic x6159)
               "throw" [|(any_to_js x6158)|])
    let cast_from = Obj.magic
  end
module GeneratorFunction =
  struct
    type t = [ `GeneratorFunction ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type tags = [ `GeneratorFunction ]
    type 'tags this = 'tags intf constraint 'tags = [> `GeneratorFunction ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x6168 : Ojs.t) -> intf_of_js __tags_of_js x6168
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x6166 : __tags intf) -> intf_to_js __tags_to_js x6166
    let (create : 'tags this -> args:any list -> Generator.t_0) =
      fun (x6173 : 'tags this) ->
        fun ~args:(x6170 : any list) ->
          Generator.t_0_of_js
            (Ojs.new_obj_arr (this_to_js Obj.magic x6173)
               (let x6171 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                List.iter
                  (fun (x6172 : any) ->
                     ignore (Ojs.call x6171 "push" [|(any_to_js x6172)|]))
                  x6170;
                x6171))
    let (apply : 'tags this -> args:any list -> Generator.t_0) =
      fun (x6178 : 'tags this) ->
        fun ~args:(x6175 : any list) ->
          Generator.t_0_of_js
            (Ojs.call (this_to_js Obj.magic x6178) "apply"
               [|Ojs.null;((let x6176 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            List.iter
                              (fun (x6177 : any) ->
                                 ignore
                                   (Ojs.call x6176 "push"
                                      [|(any_to_js x6177)|])) x6175;
                            x6176))|])
    let (get_length : 'tags this -> float) =
      fun (x6180 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6180) "length")
    let (get_name : 'tags this -> string) =
      fun (x6182 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6182) "name")
    let (get_prototype : 'tags this -> Generator.t_0) =
      fun (x6184 : 'tags this) ->
        Generator.t_0_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6184) "prototype")
    let cast_from = Obj.magic
  end
module GeneratorFunctionConstructor =
  struct
    type t = [ `GeneratorFunctionConstructor ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type tags = [ `GeneratorFunctionConstructor ]
    type 'tags this =
      'tags intf constraint 'tags = [> `GeneratorFunctionConstructor ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x6188 : Ojs.t) -> intf_of_js __tags_of_js x6188
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x6186 : __tags intf) -> intf_to_js __tags_to_js x6186
    let (create : 'tags this -> args:string list -> GeneratorFunction.t) =
      fun (x6193 : 'tags this) ->
        fun ~args:(x6190 : string list) ->
          GeneratorFunction.t_of_js
            (Ojs.new_obj_arr (this_to_js Obj.magic x6193)
               (let x6191 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                List.iter
                  (fun (x6192 : string) ->
                     ignore
                       (Ojs.call x6191 "push" [|(Ojs.string_to_js x6192)|]))
                  x6190;
                x6191))
    let (apply : 'tags this -> args:string list -> GeneratorFunction.t) =
      fun (x6198 : 'tags this) ->
        fun ~args:(x6195 : string list) ->
          GeneratorFunction.t_of_js
            (Ojs.call (this_to_js Obj.magic x6198) "apply"
               [|Ojs.null;((let x6196 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            List.iter
                              (fun (x6197 : string) ->
                                 ignore
                                   (Ojs.call x6196 "push"
                                      [|(Ojs.string_to_js x6197)|])) x6195;
                            x6196))|])
    let (get_length : 'tags this -> float) =
      fun (x6200 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6200) "length")
    let (get_name : 'tags this -> string) =
      fun (x6202 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6202) "name")
    let (get_prototype : 'tags this -> GeneratorFunction.t) =
      fun (x6204 : 'tags this) ->
        GeneratorFunction.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6204) "prototype")
    let cast_from = Obj.magic
  end
module Float64Array =
  struct
    type t = [ `Float64Array ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type tags = [ `Float64Array ]
    type 'tags this = 'tags intf constraint 'tags = [> `Float64Array ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x6208 : Ojs.t) -> intf_of_js __tags_of_js x6208
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x6206 : __tags intf) -> intf_to_js __tags_to_js x6206
    let (at : 'tags this -> index:float -> float option) =
      fun (x6211 : 'tags this) ->
        fun ~index:(x6210 : float) ->
          Ojs.option_of_js Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x6211) "at"
               [|(Ojs.float_to_js x6210)|])
    let (findLast :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> bool) ->
          ?thisArg:any -> unit -> 'S option)
      =
      fun (x6221 : 'tags this) ->
        fun
          ~predicate:(x6214 : value:float -> index:float -> array:t -> bool)
          ->
          fun ?thisArg:(x6215 : any option) ->
            fun () ->
              Ojs.option_of_js Obj.magic
                (let x6223 = this_to_js Obj.magic x6221 in
                 Ojs.call (Ojs.get_prop_ascii x6223 "findLast") "apply"
                   [|x6223;((let x6216 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6216 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x6218 : Ojs.t) ->
                                          fun (x6219 : Ojs.t) ->
                                            fun (x6220 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x6214
                                                   ~value:(Ojs.float_of_js
                                                             x6218)
                                                   ~index:(Ojs.float_of_js
                                                             x6219)
                                                   ~array:(t_of_js x6220))))|]);
                             (match x6215 with
                              | Some x6217 ->
                                  ignore
                                    (Ojs.call x6216 "push"
                                       [|(any_to_js x6217)|])
                              | None -> ());
                             x6216))|])
    let (findLast' :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> float option)
      =
      fun (x6232 : 'tags this) ->
        fun
          ~predicate:(x6225 :
                       value:float -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x6226 : any option) ->
            fun () ->
              Ojs.option_of_js Ojs.float_of_js
                (let x6234 = this_to_js Obj.magic x6232 in
                 Ojs.call (Ojs.get_prop_ascii x6234 "findLast") "apply"
                   [|x6234;((let x6227 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6227 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x6229 : Ojs.t) ->
                                          fun (x6230 : Ojs.t) ->
                                            fun (x6231 : Ojs.t) ->
                                              unknown_to_js
                                                (x6225
                                                   ~value:(Ojs.float_of_js
                                                             x6229)
                                                   ~index:(Ojs.float_of_js
                                                             x6230)
                                                   ~array:(t_of_js x6231))))|]);
                             (match x6226 with
                              | Some x6228 ->
                                  ignore
                                    (Ojs.call x6227 "push"
                                       [|(any_to_js x6228)|])
                              | None -> ());
                             x6227))|])
    let (findLastIndex :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> float)
      =
      fun (x6243 : 'tags this) ->
        fun
          ~predicate:(x6236 :
                       value:float -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x6237 : any option) ->
            fun () ->
              Ojs.float_of_js
                (let x6245 = this_to_js Obj.magic x6243 in
                 Ojs.call (Ojs.get_prop_ascii x6245 "findLastIndex") "apply"
                   [|x6245;((let x6238 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6238 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x6240 : Ojs.t) ->
                                          fun (x6241 : Ojs.t) ->
                                            fun (x6242 : Ojs.t) ->
                                              unknown_to_js
                                                (x6236
                                                   ~value:(Ojs.float_of_js
                                                             x6240)
                                                   ~index:(Ojs.float_of_js
                                                             x6241)
                                                   ~array:(t_of_js x6242))))|]);
                             (match x6237 with
                              | Some x6239 ->
                                  ignore
                                    (Ojs.call x6238 "push"
                                       [|(any_to_js x6239)|])
                              | None -> ());
                             x6238))|])
    let (toReversed : 'tags this -> t) =
      fun (x6246 : 'tags this) ->
        t_of_js (Ojs.call (this_to_js Obj.magic x6246) "toReversed" [||])
    let (toSorted :
      'tags this -> ?compareFn:(a:float -> b:float -> float) -> unit -> t) =
      fun (x6253 : 'tags this) ->
        fun ?compareFn:(x6248 : (a:float -> b:float -> float) option) ->
          fun () ->
            t_of_js
              (let x6255 = this_to_js Obj.magic x6253 in
               Ojs.call (Ojs.get_prop_ascii x6255 "toSorted") "apply"
                 [|x6255;((let x6249 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x6248 with
                            | Some x6250 ->
                                ignore
                                  (Ojs.call x6249 "push"
                                     [|(Ojs.fun_to_js 2
                                          (fun (x6251 : Ojs.t) ->
                                             fun (x6252 : Ojs.t) ->
                                               Ojs.float_to_js
                                                 (x6250
                                                    ~a:(Ojs.float_of_js x6251)
                                                    ~b:(Ojs.float_of_js x6252))))|])
                            | None -> ());
                           x6249))|])
    let (with_ : 'tags this -> index:float -> value:float -> t) =
      fun (x6258 : 'tags this) ->
        fun ~index:(x6256 : float) ->
          fun ~value:(x6257 : float) ->
            t_of_js
              (Ojs.call (this_to_js Obj.magic x6258) "with"
                 [|(Ojs.float_to_js x6256);(Ojs.float_to_js x6257)|])
    let (includes :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> bool)
      =
      fun (x6264 : 'tags this) ->
        fun ~searchElement:(x6260 : float) ->
          fun ?fromIndex:(x6261 : float option) ->
            fun () ->
              Ojs.bool_of_js
                (let x6266 = this_to_js Obj.magic x6264 in
                 Ojs.call (Ojs.get_prop_ascii x6266 "includes") "apply"
                   [|x6266;((let x6262 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6262 "push"
                                  [|(Ojs.float_to_js x6260)|]);
                             (match x6261 with
                              | Some x6263 ->
                                  ignore
                                    (Ojs.call x6262 "push"
                                       [|(Ojs.float_to_js x6263)|])
                              | None -> ());
                             x6262))|])
    let (entries : 'tags this -> (float * float) IterableIterator.t) =
      fun (x6267 : 'tags this) ->
        IterableIterator.t_of_js
          (fun (x6269 : Ojs.t) ->
             let x6270 = x6269 in
             ((Ojs.float_of_js (Ojs.array_get x6270 0)),
               (Ojs.float_of_js (Ojs.array_get x6270 1))))
          (Ojs.call (this_to_js Obj.magic x6267) "entries" [||])
    let (keys : 'tags this -> float IterableIterator.t) =
      fun (x6271 : 'tags this) ->
        IterableIterator.t_of_js Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x6271) "keys" [||])
    let (values : 'tags this -> float IterableIterator.t) =
      fun (x6274 : 'tags this) ->
        IterableIterator.t_of_js Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x6274) "values" [||])
    let (get_BYTES_PER_ELEMENT : 'tags this -> float) =
      fun (x6277 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6277)
             "BYTES_PER_ELEMENT")
    let (get_buffer : 'tags this -> ArrayBufferLike.t) =
      fun (x6279 : 'tags this) ->
        ArrayBufferLike.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6279) "buffer")
    let (get_byteLength : 'tags this -> float) =
      fun (x6281 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6281) "byteLength")
    let (get_byteOffset : 'tags this -> float) =
      fun (x6283 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6283) "byteOffset")
    let (copyWithin :
      'tags this ->
        target:float -> start:float -> ?end_:float -> unit -> 'tags this)
      =
      fun (x6290 : 'tags this) ->
        fun ~target:(x6285 : float) ->
          fun ~start:(x6286 : float) ->
            fun ?end_:(x6287 : float option) ->
              fun () ->
                this_of_js Obj.magic
                  (let x6292 = this_to_js Obj.magic x6290 in
                   Ojs.call (Ojs.get_prop_ascii x6292 "copyWithin") "apply"
                     [|x6292;((let x6288 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x6288 "push"
                                    [|(Ojs.float_to_js x6285)|]);
                               ignore
                                 (Ojs.call x6288 "push"
                                    [|(Ojs.float_to_js x6286)|]);
                               (match x6287 with
                                | Some x6289 ->
                                    ignore
                                      (Ojs.call x6288 "push"
                                         [|(Ojs.float_to_js x6289)|])
                                | None -> ());
                               x6288))|])
    let (every :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x6301 : 'tags this) ->
        fun
          ~predicate:(x6294 :
                       value:float -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x6295 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x6303 = this_to_js Obj.magic x6301 in
                 Ojs.call (Ojs.get_prop_ascii x6303 "every") "apply"
                   [|x6303;((let x6296 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6296 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x6298 : Ojs.t) ->
                                          fun (x6299 : Ojs.t) ->
                                            fun (x6300 : Ojs.t) ->
                                              unknown_to_js
                                                (x6294
                                                   ~value:(Ojs.float_of_js
                                                             x6298)
                                                   ~index:(Ojs.float_of_js
                                                             x6299)
                                                   ~array:(t_of_js x6300))))|]);
                             (match x6295 with
                              | Some x6297 ->
                                  ignore
                                    (Ojs.call x6296 "push"
                                       [|(any_to_js x6297)|])
                              | None -> ());
                             x6296))|])
    let (fill :
      'tags this ->
        value:float -> ?start:float -> ?end_:float -> unit -> 'tags this)
      =
      fun (x6310 : 'tags this) ->
        fun ~value:(x6304 : float) ->
          fun ?start:(x6305 : float option) ->
            fun ?end_:(x6306 : float option) ->
              fun () ->
                this_of_js Obj.magic
                  (let x6312 = this_to_js Obj.magic x6310 in
                   Ojs.call (Ojs.get_prop_ascii x6312 "fill") "apply"
                     [|x6312;((let x6307 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x6307 "push"
                                    [|(Ojs.float_to_js x6304)|]);
                               (match x6305 with
                                | Some x6309 ->
                                    ignore
                                      (Ojs.call x6307 "push"
                                         [|(Ojs.float_to_js x6309)|])
                                | None -> ());
                               (match x6306 with
                                | Some x6308 ->
                                    ignore
                                      (Ojs.call x6307 "push"
                                         [|(Ojs.float_to_js x6308)|])
                                | None -> ());
                               x6307))|])
    let (filter :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> any) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x6321 : 'tags this) ->
        fun ~predicate:(x6314 : value:float -> index:float -> array:t -> any)
          ->
          fun ?thisArg:(x6315 : any option) ->
            fun () ->
              t_of_js
                (let x6323 = this_to_js Obj.magic x6321 in
                 Ojs.call (Ojs.get_prop_ascii x6323 "filter") "apply"
                   [|x6323;((let x6316 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6316 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x6318 : Ojs.t) ->
                                          fun (x6319 : Ojs.t) ->
                                            fun (x6320 : Ojs.t) ->
                                              any_to_js
                                                (x6314
                                                   ~value:(Ojs.float_of_js
                                                             x6318)
                                                   ~index:(Ojs.float_of_js
                                                             x6319)
                                                   ~array:(t_of_js x6320))))|]);
                             (match x6315 with
                              | Some x6317 ->
                                  ignore
                                    (Ojs.call x6316 "push"
                                       [|(any_to_js x6317)|])
                              | None -> ());
                             x6316))|])
    let (find :
      'tags this ->
        predicate:(value:float -> index:float -> obj:t -> bool) ->
          ?thisArg:any -> unit -> float option)
      =
      fun (x6331 : 'tags this) ->
        fun ~predicate:(x6324 : value:float -> index:float -> obj:t -> bool)
          ->
          fun ?thisArg:(x6325 : any option) ->
            fun () ->
              Ojs.option_of_js Ojs.float_of_js
                (let x6333 = this_to_js Obj.magic x6331 in
                 Ojs.call (Ojs.get_prop_ascii x6333 "find") "apply"
                   [|x6333;((let x6326 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6326 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x6328 : Ojs.t) ->
                                          fun (x6329 : Ojs.t) ->
                                            fun (x6330 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x6324
                                                   ~value:(Ojs.float_of_js
                                                             x6328)
                                                   ~index:(Ojs.float_of_js
                                                             x6329)
                                                   ~obj:(t_of_js x6330))))|]);
                             (match x6325 with
                              | Some x6327 ->
                                  ignore
                                    (Ojs.call x6326 "push"
                                       [|(any_to_js x6327)|])
                              | None -> ());
                             x6326))|])
    let (findIndex :
      'tags this ->
        predicate:(value:float -> index:float -> obj:t -> bool) ->
          ?thisArg:any -> unit -> float)
      =
      fun (x6342 : 'tags this) ->
        fun ~predicate:(x6335 : value:float -> index:float -> obj:t -> bool)
          ->
          fun ?thisArg:(x6336 : any option) ->
            fun () ->
              Ojs.float_of_js
                (let x6344 = this_to_js Obj.magic x6342 in
                 Ojs.call (Ojs.get_prop_ascii x6344 "findIndex") "apply"
                   [|x6344;((let x6337 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6337 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x6339 : Ojs.t) ->
                                          fun (x6340 : Ojs.t) ->
                                            fun (x6341 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x6335
                                                   ~value:(Ojs.float_of_js
                                                             x6339)
                                                   ~index:(Ojs.float_of_js
                                                             x6340)
                                                   ~obj:(t_of_js x6341))))|]);
                             (match x6336 with
                              | Some x6338 ->
                                  ignore
                                    (Ojs.call x6337 "push"
                                       [|(any_to_js x6338)|])
                              | None -> ());
                             x6337))|])
    let (forEach :
      'tags this ->
        callbackfn:(value:float -> index:float -> array:t -> unit) ->
          ?thisArg:any -> unit -> unit)
      =
      fun (x6352 : 'tags this) ->
        fun
          ~callbackfn:(x6345 : value:float -> index:float -> array:t -> unit)
          ->
          fun ?thisArg:(x6346 : any option) ->
            fun () ->
              ignore
                (let x6354 = this_to_js Obj.magic x6352 in
                 Ojs.call (Ojs.get_prop_ascii x6354 "forEach") "apply"
                   [|x6354;((let x6347 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6347 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x6349 : Ojs.t) ->
                                          fun (x6350 : Ojs.t) ->
                                            fun (x6351 : Ojs.t) ->
                                              x6345
                                                ~value:(Ojs.float_of_js x6349)
                                                ~index:(Ojs.float_of_js x6350)
                                                ~array:(t_of_js x6351)))|]);
                             (match x6346 with
                              | Some x6348 ->
                                  ignore
                                    (Ojs.call x6347 "push"
                                       [|(any_to_js x6348)|])
                              | None -> ());
                             x6347))|])
    let (indexOf :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> float)
      =
      fun (x6359 : 'tags this) ->
        fun ~searchElement:(x6355 : float) ->
          fun ?fromIndex:(x6356 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x6361 = this_to_js Obj.magic x6359 in
                 Ojs.call (Ojs.get_prop_ascii x6361 "indexOf") "apply"
                   [|x6361;((let x6357 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6357 "push"
                                  [|(Ojs.float_to_js x6355)|]);
                             (match x6356 with
                              | Some x6358 ->
                                  ignore
                                    (Ojs.call x6357 "push"
                                       [|(Ojs.float_to_js x6358)|])
                              | None -> ());
                             x6357))|])
    let (join : 'tags this -> ?separator:string -> unit -> string) =
      fun (x6365 : 'tags this) ->
        fun ?separator:(x6362 : string option) ->
          fun () ->
            Ojs.string_of_js
              (let x6367 = this_to_js Obj.magic x6365 in
               Ojs.call (Ojs.get_prop_ascii x6367 "join") "apply"
                 [|x6367;((let x6363 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x6362 with
                            | Some x6364 ->
                                ignore
                                  (Ojs.call x6363 "push"
                                     [|(Ojs.string_to_js x6364)|])
                            | None -> ());
                           x6363))|])
    let (lastIndexOf :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> float)
      =
      fun (x6372 : 'tags this) ->
        fun ~searchElement:(x6368 : float) ->
          fun ?fromIndex:(x6369 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x6374 = this_to_js Obj.magic x6372 in
                 Ojs.call (Ojs.get_prop_ascii x6374 "lastIndexOf") "apply"
                   [|x6374;((let x6370 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6370 "push"
                                  [|(Ojs.float_to_js x6368)|]);
                             (match x6369 with
                              | Some x6371 ->
                                  ignore
                                    (Ojs.call x6370 "push"
                                       [|(Ojs.float_to_js x6371)|])
                              | None -> ());
                             x6370))|])
    let (get_length : 'tags this -> float) =
      fun (x6375 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6375) "length")
    let (map :
      'tags this ->
        callbackfn:(value:float -> index:float -> array:t -> float) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x6384 : 'tags this) ->
        fun
          ~callbackfn:(x6377 :
                        value:float -> index:float -> array:t -> float)
          ->
          fun ?thisArg:(x6378 : any option) ->
            fun () ->
              t_of_js
                (let x6386 = this_to_js Obj.magic x6384 in
                 Ojs.call (Ojs.get_prop_ascii x6386 "map") "apply"
                   [|x6386;((let x6379 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6379 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x6381 : Ojs.t) ->
                                          fun (x6382 : Ojs.t) ->
                                            fun (x6383 : Ojs.t) ->
                                              Ojs.float_to_js
                                                (x6377
                                                   ~value:(Ojs.float_of_js
                                                             x6381)
                                                   ~index:(Ojs.float_of_js
                                                             x6382)
                                                   ~array:(t_of_js x6383))))|]);
                             (match x6378 with
                              | Some x6380 ->
                                  ignore
                                    (Ojs.call x6379 "push"
                                       [|(any_to_js x6380)|])
                              | None -> ());
                             x6379))|])
    let (reduce :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> float)
      =
      fun (x6392 : 'tags this) ->
        fun
          ~callbackfn:(x6387 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x6392) "reduce"
               [|(Ojs.fun_to_js 4
                    (fun (x6388 : Ojs.t) ->
                       fun (x6389 : Ojs.t) ->
                         fun (x6390 : Ojs.t) ->
                           fun (x6391 : Ojs.t) ->
                             Ojs.float_to_js
                               (x6387 ~previousValue:(Ojs.float_of_js x6388)
                                  ~currentValue:(Ojs.float_of_js x6389)
                                  ~currentIndex:(Ojs.float_of_js x6390)
                                  ~array:(t_of_js x6391))))|])
    let (reduce' :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> initialValue:float -> float)
      =
      fun (x6400 : 'tags this) ->
        fun
          ~callbackfn:(x6394 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          fun ~initialValue:(x6399 : float) ->
            Ojs.float_of_js
              (Ojs.call (this_to_js Obj.magic x6400) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x6395 : Ojs.t) ->
                         fun (x6396 : Ojs.t) ->
                           fun (x6397 : Ojs.t) ->
                             fun (x6398 : Ojs.t) ->
                               Ojs.float_to_js
                                 (x6394
                                    ~previousValue:(Ojs.float_of_js x6395)
                                    ~currentValue:(Ojs.float_of_js x6396)
                                    ~currentIndex:(Ojs.float_of_js x6397)
                                    ~array:(t_of_js x6398))));(Ojs.float_to_js
                                                                 x6399)|])
    let (reduce'' :
      'tags this ->
        callbackfn:(previousValue:'U ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x6408 : 'tags this) ->
        fun
          ~callbackfn:(x6402 :
                        previousValue:'U ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x6407 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic x6408) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x6403 : Ojs.t) ->
                         fun (x6404 : Ojs.t) ->
                           fun (x6405 : Ojs.t) ->
                             fun (x6406 : Ojs.t) ->
                               Obj.magic
                                 (x6402 ~previousValue:(Obj.magic x6403)
                                    ~currentValue:(Ojs.float_of_js x6404)
                                    ~currentIndex:(Ojs.float_of_js x6405)
                                    ~array:(t_of_js x6406))));(Obj.magic
                                                                 x6407)|])
    let (reduceRight :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> float)
      =
      fun (x6415 : 'tags this) ->
        fun
          ~callbackfn:(x6410 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x6415) "reduceRight"
               [|(Ojs.fun_to_js 4
                    (fun (x6411 : Ojs.t) ->
                       fun (x6412 : Ojs.t) ->
                         fun (x6413 : Ojs.t) ->
                           fun (x6414 : Ojs.t) ->
                             Ojs.float_to_js
                               (x6410 ~previousValue:(Ojs.float_of_js x6411)
                                  ~currentValue:(Ojs.float_of_js x6412)
                                  ~currentIndex:(Ojs.float_of_js x6413)
                                  ~array:(t_of_js x6414))))|])
    let (reduceRight' :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> initialValue:float -> float)
      =
      fun (x6423 : 'tags this) ->
        fun
          ~callbackfn:(x6417 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          fun ~initialValue:(x6422 : float) ->
            Ojs.float_of_js
              (Ojs.call (this_to_js Obj.magic x6423) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x6418 : Ojs.t) ->
                         fun (x6419 : Ojs.t) ->
                           fun (x6420 : Ojs.t) ->
                             fun (x6421 : Ojs.t) ->
                               Ojs.float_to_js
                                 (x6417
                                    ~previousValue:(Ojs.float_of_js x6418)
                                    ~currentValue:(Ojs.float_of_js x6419)
                                    ~currentIndex:(Ojs.float_of_js x6420)
                                    ~array:(t_of_js x6421))));(Ojs.float_to_js
                                                                 x6422)|])
    let (reduceRight'' :
      'tags this ->
        callbackfn:(previousValue:'U ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x6431 : 'tags this) ->
        fun
          ~callbackfn:(x6425 :
                        previousValue:'U ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x6430 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic x6431) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x6426 : Ojs.t) ->
                         fun (x6427 : Ojs.t) ->
                           fun (x6428 : Ojs.t) ->
                             fun (x6429 : Ojs.t) ->
                               Obj.magic
                                 (x6425 ~previousValue:(Obj.magic x6426)
                                    ~currentValue:(Ojs.float_of_js x6427)
                                    ~currentIndex:(Ojs.float_of_js x6428)
                                    ~array:(t_of_js x6429))));(Obj.magic
                                                                 x6430)|])
    let (reverse : 'tags this -> t) =
      fun (x6433 : 'tags this) ->
        t_of_js (Ojs.call (this_to_js Obj.magic x6433) "reverse" [||])
    let (set_ :
      'tags this -> array:float ArrayLike.t -> ?offset:float -> unit -> unit)
      =
      fun (x6440 : 'tags this) ->
        fun ~array:(x6435 : float ArrayLike.t) ->
          fun ?offset:(x6436 : float option) ->
            fun () ->
              ignore
                (let x6442 = this_to_js Obj.magic x6440 in
                 Ojs.call (Ojs.get_prop_ascii x6442 "set") "apply"
                   [|x6442;((let x6437 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6437 "push"
                                  [|(ArrayLike.t_to_js Ojs.float_to_js x6435)|]);
                             (match x6436 with
                              | Some x6438 ->
                                  ignore
                                    (Ojs.call x6437 "push"
                                       [|(Ojs.float_to_js x6438)|])
                              | None -> ());
                             x6437))|])
    let (slice : 'tags this -> ?start:float -> ?end_:float -> unit -> t) =
      fun (x6448 : 'tags this) ->
        fun ?start:(x6443 : float option) ->
          fun ?end_:(x6444 : float option) ->
            fun () ->
              t_of_js
                (let x6450 = this_to_js Obj.magic x6448 in
                 Ojs.call (Ojs.get_prop_ascii x6450 "slice") "apply"
                   [|x6450;((let x6445 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x6443 with
                              | Some x6447 ->
                                  ignore
                                    (Ojs.call x6445 "push"
                                       [|(Ojs.float_to_js x6447)|])
                              | None -> ());
                             (match x6444 with
                              | Some x6446 ->
                                  ignore
                                    (Ojs.call x6445 "push"
                                       [|(Ojs.float_to_js x6446)|])
                              | None -> ());
                             x6445))|])
    let (some :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x6458 : 'tags this) ->
        fun
          ~predicate:(x6451 :
                       value:float -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x6452 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x6460 = this_to_js Obj.magic x6458 in
                 Ojs.call (Ojs.get_prop_ascii x6460 "some") "apply"
                   [|x6460;((let x6453 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6453 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x6455 : Ojs.t) ->
                                          fun (x6456 : Ojs.t) ->
                                            fun (x6457 : Ojs.t) ->
                                              unknown_to_js
                                                (x6451
                                                   ~value:(Ojs.float_of_js
                                                             x6455)
                                                   ~index:(Ojs.float_of_js
                                                             x6456)
                                                   ~array:(t_of_js x6457))))|]);
                             (match x6452 with
                              | Some x6454 ->
                                  ignore
                                    (Ojs.call x6453 "push"
                                       [|(any_to_js x6454)|])
                              | None -> ());
                             x6453))|])
    let (sort :
      'tags this ->
        ?compareFn:(a:float -> b:float -> float) -> unit -> 'tags this)
      =
      fun (x6466 : 'tags this) ->
        fun ?compareFn:(x6461 : (a:float -> b:float -> float) option) ->
          fun () ->
            this_of_js Obj.magic
              (let x6468 = this_to_js Obj.magic x6466 in
               Ojs.call (Ojs.get_prop_ascii x6468 "sort") "apply"
                 [|x6468;((let x6462 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x6461 with
                            | Some x6463 ->
                                ignore
                                  (Ojs.call x6462 "push"
                                     [|(Ojs.fun_to_js 2
                                          (fun (x6464 : Ojs.t) ->
                                             fun (x6465 : Ojs.t) ->
                                               Ojs.float_to_js
                                                 (x6463
                                                    ~a:(Ojs.float_of_js x6464)
                                                    ~b:(Ojs.float_of_js x6465))))|])
                            | None -> ());
                           x6462))|])
    let (subarray : 'tags this -> ?begin_:float -> ?end_:float -> unit -> t)
      =
      fun (x6475 : 'tags this) ->
        fun ?begin_:(x6470 : float option) ->
          fun ?end_:(x6471 : float option) ->
            fun () ->
              t_of_js
                (let x6477 = this_to_js Obj.magic x6475 in
                 Ojs.call (Ojs.get_prop_ascii x6477 "subarray") "apply"
                   [|x6477;((let x6472 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x6470 with
                              | Some x6474 ->
                                  ignore
                                    (Ojs.call x6472 "push"
                                       [|(Ojs.float_to_js x6474)|])
                              | None -> ());
                             (match x6471 with
                              | Some x6473 ->
                                  ignore
                                    (Ojs.call x6472 "push"
                                       [|(Ojs.float_to_js x6473)|])
                              | None -> ());
                             x6472))|])
    let (toLocaleString : 'tags this -> string) =
      fun (x6478 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x6478) "toLocaleString" [||])
    let (toString : 'tags this -> string) =
      fun (x6480 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x6480) "toString" [||])
    let (valueOf : 'tags this -> t) =
      fun (x6482 : 'tags this) ->
        t_of_js (Ojs.call (this_to_js Obj.magic x6482) "valueOf" [||])
    let (get : 'tags this -> float -> float) =
      fun (x6484 : 'tags this) ->
        fun (x6486 : float) ->
          Ojs.float_of_js
            (Ojs.get_prop (this_to_js Obj.magic x6484)
               (Ojs.float_to_js x6486))
    let (set : 'tags this -> float -> float -> unit) =
      fun (x6487 : 'tags this) ->
        fun (x6489 : float) ->
          fun (x6490 : float) ->
            Ojs.set_prop (this_to_js Obj.magic x6487) (Ojs.float_to_js x6489)
              (Ojs.float_to_js x6490)
    let (create : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Float64Array") [||])
    let (create' : float Iterable.t -> t) =
      fun (x6491 : float Iterable.t) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Float64Array")
             [|(Iterable.t_to_js Ojs.float_to_js x6491)|])
    let (from :
      arrayLike:float Iterable.t ->
        ?mapfn:(v:float -> k:float -> float) -> ?thisArg:any -> unit -> t)
      =
      fun ~arrayLike:(x6493 : float Iterable.t) ->
        fun ?mapfn:(x6494 : (v:float -> k:float -> float) option) ->
          fun ?thisArg:(x6495 : any option) ->
            fun () ->
              t_of_js
                (let x6502 = Ojs.get_prop_ascii Ojs.global "Float64Array" in
                 Ojs.call (Ojs.get_prop_ascii x6502 "from") "apply"
                   [|x6502;((let x6496 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6496 "push"
                                  [|(Iterable.t_to_js Ojs.float_to_js x6493)|]);
                             (match x6494 with
                              | Some x6498 ->
                                  ignore
                                    (Ojs.call x6496 "push"
                                       [|(Ojs.fun_to_js 2
                                            (fun (x6499 : Ojs.t) ->
                                               fun (x6500 : Ojs.t) ->
                                                 Ojs.float_to_js
                                                   (x6498
                                                      ~v:(Ojs.float_of_js
                                                            x6499)
                                                      ~k:(Ojs.float_of_js
                                                            x6500))))|])
                              | None -> ());
                             (match x6495 with
                              | Some x6497 ->
                                  ignore
                                    (Ojs.call x6496 "push"
                                       [|(any_to_js x6497)|])
                              | None -> ());
                             x6496))|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Float64Array")
             "prototype")
    let (create'' : float -> t) =
      fun (x6503 : float) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Float64Array")
             [|(Ojs.float_to_js x6503)|])
    let (create''' :
      [ `U1 of float ArrayLike.t  | `U2 of ArrayBufferLike.t ] -> t) =
      fun (x6504 : [ `U1 of float ArrayLike.t  | `U2 of ArrayBufferLike.t ])
        ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Float64Array")
             [|((match x6504 with
                 | `U1 x6505 -> ArrayLike.t_to_js Ojs.float_to_js x6505
                 | `U2 x6507 -> ArrayBufferLike.t_to_js x6507))|])
    let (create'''' :
      buffer:ArrayBufferLike.t ->
        ?byteOffset:float -> ?length:float -> unit -> t)
      =
      fun ~buffer:(x6508 : ArrayBufferLike.t) ->
        fun ?byteOffset:(x6509 : float option) ->
          fun ?length:(x6510 : float option) ->
            fun () ->
              t_of_js
                (Ojs.new_obj_arr
                   (Ojs.get_prop_ascii Ojs.global "Float64Array")
                   (let x6511 =
                      Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                        [||] in
                    ignore
                      (Ojs.call x6511 "push"
                         [|(ArrayBufferLike.t_to_js x6508)|]);
                    (match x6509 with
                     | Some x6513 ->
                         ignore
                           (Ojs.call x6511 "push" [|(Ojs.float_to_js x6513)|])
                     | None -> ());
                    (match x6510 with
                     | Some x6512 ->
                         ignore
                           (Ojs.call x6511 "push" [|(Ojs.float_to_js x6512)|])
                     | None -> ());
                    x6511))
    let (bytes_per_element : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Float64Array")
             "BYTES_PER_ELEMENT")
    let (of_ : float list -> t) =
      fun (x6514 : float list) ->
        t_of_js
          (let x6517 = Ojs.get_prop_ascii Ojs.global "Float64Array" in
           Ojs.call (Ojs.get_prop_ascii x6517 "of") "apply"
             [|x6517;((let x6515 =
                         Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                           [||] in
                       List.iter
                         (fun (x6516 : float) ->
                            ignore
                              (Ojs.call x6515 "push"
                                 [|(Ojs.float_to_js x6516)|])) x6514;
                       x6515))|])
    let (from' : float ArrayLike.t -> t) =
      fun (x6518 : float ArrayLike.t) ->
        t_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Float64Array") "from"
             [|(ArrayLike.t_to_js Ojs.float_to_js x6518)|])
    let (from'' :
      arrayLike:'T ArrayLike.t ->
        mapfn:(v:'T -> k:float -> float) -> ?thisArg:any -> unit -> t)
      =
      fun ~arrayLike:(x6520 : 'T ArrayLike.t) ->
        fun ~mapfn:(x6521 : v:'T -> k:float -> float) ->
          fun ?thisArg:(x6522 : any option) ->
            fun () ->
              t_of_js
                (let x6528 = Ojs.get_prop_ascii Ojs.global "Float64Array" in
                 Ojs.call (Ojs.get_prop_ascii x6528 "from") "apply"
                   [|x6528;((let x6523 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6523 "push"
                                  [|(ArrayLike.t_to_js Obj.magic x6520)|]);
                             ignore
                               (Ojs.call x6523 "push"
                                  [|(Ojs.fun_to_js 2
                                       (fun (x6525 : Ojs.t) ->
                                          fun (x6526 : Ojs.t) ->
                                            Ojs.float_to_js
                                              (x6521 ~v:(Obj.magic x6525)
                                                 ~k:(Ojs.float_of_js x6526))))|]);
                             (match x6522 with
                              | Some x6524 ->
                                  ignore
                                    (Ojs.call x6523 "push"
                                       [|(any_to_js x6524)|])
                              | None -> ());
                             x6523))|])
    let cast_from = Obj.magic
  end
module Float32Array =
  struct
    type t = [ `Float32Array ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type tags = [ `Float32Array ]
    type 'tags this = 'tags intf constraint 'tags = [> `Float32Array ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x6531 : Ojs.t) -> intf_of_js __tags_of_js x6531
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x6529 : __tags intf) -> intf_to_js __tags_to_js x6529
    let (at : 'tags this -> index:float -> float option) =
      fun (x6534 : 'tags this) ->
        fun ~index:(x6533 : float) ->
          Ojs.option_of_js Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x6534) "at"
               [|(Ojs.float_to_js x6533)|])
    let (findLast :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> bool) ->
          ?thisArg:any -> unit -> 'S option)
      =
      fun (x6544 : 'tags this) ->
        fun
          ~predicate:(x6537 : value:float -> index:float -> array:t -> bool)
          ->
          fun ?thisArg:(x6538 : any option) ->
            fun () ->
              Ojs.option_of_js Obj.magic
                (let x6546 = this_to_js Obj.magic x6544 in
                 Ojs.call (Ojs.get_prop_ascii x6546 "findLast") "apply"
                   [|x6546;((let x6539 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6539 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x6541 : Ojs.t) ->
                                          fun (x6542 : Ojs.t) ->
                                            fun (x6543 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x6537
                                                   ~value:(Ojs.float_of_js
                                                             x6541)
                                                   ~index:(Ojs.float_of_js
                                                             x6542)
                                                   ~array:(t_of_js x6543))))|]);
                             (match x6538 with
                              | Some x6540 ->
                                  ignore
                                    (Ojs.call x6539 "push"
                                       [|(any_to_js x6540)|])
                              | None -> ());
                             x6539))|])
    let (findLast' :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> float option)
      =
      fun (x6555 : 'tags this) ->
        fun
          ~predicate:(x6548 :
                       value:float -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x6549 : any option) ->
            fun () ->
              Ojs.option_of_js Ojs.float_of_js
                (let x6557 = this_to_js Obj.magic x6555 in
                 Ojs.call (Ojs.get_prop_ascii x6557 "findLast") "apply"
                   [|x6557;((let x6550 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6550 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x6552 : Ojs.t) ->
                                          fun (x6553 : Ojs.t) ->
                                            fun (x6554 : Ojs.t) ->
                                              unknown_to_js
                                                (x6548
                                                   ~value:(Ojs.float_of_js
                                                             x6552)
                                                   ~index:(Ojs.float_of_js
                                                             x6553)
                                                   ~array:(t_of_js x6554))))|]);
                             (match x6549 with
                              | Some x6551 ->
                                  ignore
                                    (Ojs.call x6550 "push"
                                       [|(any_to_js x6551)|])
                              | None -> ());
                             x6550))|])
    let (findLastIndex :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> float)
      =
      fun (x6566 : 'tags this) ->
        fun
          ~predicate:(x6559 :
                       value:float -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x6560 : any option) ->
            fun () ->
              Ojs.float_of_js
                (let x6568 = this_to_js Obj.magic x6566 in
                 Ojs.call (Ojs.get_prop_ascii x6568 "findLastIndex") "apply"
                   [|x6568;((let x6561 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6561 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x6563 : Ojs.t) ->
                                          fun (x6564 : Ojs.t) ->
                                            fun (x6565 : Ojs.t) ->
                                              unknown_to_js
                                                (x6559
                                                   ~value:(Ojs.float_of_js
                                                             x6563)
                                                   ~index:(Ojs.float_of_js
                                                             x6564)
                                                   ~array:(t_of_js x6565))))|]);
                             (match x6560 with
                              | Some x6562 ->
                                  ignore
                                    (Ojs.call x6561 "push"
                                       [|(any_to_js x6562)|])
                              | None -> ());
                             x6561))|])
    let (toReversed : 'tags this -> t) =
      fun (x6569 : 'tags this) ->
        t_of_js (Ojs.call (this_to_js Obj.magic x6569) "toReversed" [||])
    let (toSorted :
      'tags this -> ?compareFn:(a:float -> b:float -> float) -> unit -> t) =
      fun (x6576 : 'tags this) ->
        fun ?compareFn:(x6571 : (a:float -> b:float -> float) option) ->
          fun () ->
            t_of_js
              (let x6578 = this_to_js Obj.magic x6576 in
               Ojs.call (Ojs.get_prop_ascii x6578 "toSorted") "apply"
                 [|x6578;((let x6572 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x6571 with
                            | Some x6573 ->
                                ignore
                                  (Ojs.call x6572 "push"
                                     [|(Ojs.fun_to_js 2
                                          (fun (x6574 : Ojs.t) ->
                                             fun (x6575 : Ojs.t) ->
                                               Ojs.float_to_js
                                                 (x6573
                                                    ~a:(Ojs.float_of_js x6574)
                                                    ~b:(Ojs.float_of_js x6575))))|])
                            | None -> ());
                           x6572))|])
    let (with_ : 'tags this -> index:float -> value:float -> t) =
      fun (x6581 : 'tags this) ->
        fun ~index:(x6579 : float) ->
          fun ~value:(x6580 : float) ->
            t_of_js
              (Ojs.call (this_to_js Obj.magic x6581) "with"
                 [|(Ojs.float_to_js x6579);(Ojs.float_to_js x6580)|])
    let (includes :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> bool)
      =
      fun (x6587 : 'tags this) ->
        fun ~searchElement:(x6583 : float) ->
          fun ?fromIndex:(x6584 : float option) ->
            fun () ->
              Ojs.bool_of_js
                (let x6589 = this_to_js Obj.magic x6587 in
                 Ojs.call (Ojs.get_prop_ascii x6589 "includes") "apply"
                   [|x6589;((let x6585 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6585 "push"
                                  [|(Ojs.float_to_js x6583)|]);
                             (match x6584 with
                              | Some x6586 ->
                                  ignore
                                    (Ojs.call x6585 "push"
                                       [|(Ojs.float_to_js x6586)|])
                              | None -> ());
                             x6585))|])
    let (entries : 'tags this -> (float * float) IterableIterator.t) =
      fun (x6590 : 'tags this) ->
        IterableIterator.t_of_js
          (fun (x6592 : Ojs.t) ->
             let x6593 = x6592 in
             ((Ojs.float_of_js (Ojs.array_get x6593 0)),
               (Ojs.float_of_js (Ojs.array_get x6593 1))))
          (Ojs.call (this_to_js Obj.magic x6590) "entries" [||])
    let (keys : 'tags this -> float IterableIterator.t) =
      fun (x6594 : 'tags this) ->
        IterableIterator.t_of_js Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x6594) "keys" [||])
    let (values : 'tags this -> float IterableIterator.t) =
      fun (x6597 : 'tags this) ->
        IterableIterator.t_of_js Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x6597) "values" [||])
    let (get_BYTES_PER_ELEMENT : 'tags this -> float) =
      fun (x6600 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6600)
             "BYTES_PER_ELEMENT")
    let (get_buffer : 'tags this -> ArrayBufferLike.t) =
      fun (x6602 : 'tags this) ->
        ArrayBufferLike.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6602) "buffer")
    let (get_byteLength : 'tags this -> float) =
      fun (x6604 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6604) "byteLength")
    let (get_byteOffset : 'tags this -> float) =
      fun (x6606 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6606) "byteOffset")
    let (copyWithin :
      'tags this ->
        target:float -> start:float -> ?end_:float -> unit -> 'tags this)
      =
      fun (x6613 : 'tags this) ->
        fun ~target:(x6608 : float) ->
          fun ~start:(x6609 : float) ->
            fun ?end_:(x6610 : float option) ->
              fun () ->
                this_of_js Obj.magic
                  (let x6615 = this_to_js Obj.magic x6613 in
                   Ojs.call (Ojs.get_prop_ascii x6615 "copyWithin") "apply"
                     [|x6615;((let x6611 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x6611 "push"
                                    [|(Ojs.float_to_js x6608)|]);
                               ignore
                                 (Ojs.call x6611 "push"
                                    [|(Ojs.float_to_js x6609)|]);
                               (match x6610 with
                                | Some x6612 ->
                                    ignore
                                      (Ojs.call x6611 "push"
                                         [|(Ojs.float_to_js x6612)|])
                                | None -> ());
                               x6611))|])
    let (every :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x6624 : 'tags this) ->
        fun
          ~predicate:(x6617 :
                       value:float -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x6618 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x6626 = this_to_js Obj.magic x6624 in
                 Ojs.call (Ojs.get_prop_ascii x6626 "every") "apply"
                   [|x6626;((let x6619 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6619 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x6621 : Ojs.t) ->
                                          fun (x6622 : Ojs.t) ->
                                            fun (x6623 : Ojs.t) ->
                                              unknown_to_js
                                                (x6617
                                                   ~value:(Ojs.float_of_js
                                                             x6621)
                                                   ~index:(Ojs.float_of_js
                                                             x6622)
                                                   ~array:(t_of_js x6623))))|]);
                             (match x6618 with
                              | Some x6620 ->
                                  ignore
                                    (Ojs.call x6619 "push"
                                       [|(any_to_js x6620)|])
                              | None -> ());
                             x6619))|])
    let (fill :
      'tags this ->
        value:float -> ?start:float -> ?end_:float -> unit -> 'tags this)
      =
      fun (x6633 : 'tags this) ->
        fun ~value:(x6627 : float) ->
          fun ?start:(x6628 : float option) ->
            fun ?end_:(x6629 : float option) ->
              fun () ->
                this_of_js Obj.magic
                  (let x6635 = this_to_js Obj.magic x6633 in
                   Ojs.call (Ojs.get_prop_ascii x6635 "fill") "apply"
                     [|x6635;((let x6630 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x6630 "push"
                                    [|(Ojs.float_to_js x6627)|]);
                               (match x6628 with
                                | Some x6632 ->
                                    ignore
                                      (Ojs.call x6630 "push"
                                         [|(Ojs.float_to_js x6632)|])
                                | None -> ());
                               (match x6629 with
                                | Some x6631 ->
                                    ignore
                                      (Ojs.call x6630 "push"
                                         [|(Ojs.float_to_js x6631)|])
                                | None -> ());
                               x6630))|])
    let (filter :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> any) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x6644 : 'tags this) ->
        fun ~predicate:(x6637 : value:float -> index:float -> array:t -> any)
          ->
          fun ?thisArg:(x6638 : any option) ->
            fun () ->
              t_of_js
                (let x6646 = this_to_js Obj.magic x6644 in
                 Ojs.call (Ojs.get_prop_ascii x6646 "filter") "apply"
                   [|x6646;((let x6639 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6639 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x6641 : Ojs.t) ->
                                          fun (x6642 : Ojs.t) ->
                                            fun (x6643 : Ojs.t) ->
                                              any_to_js
                                                (x6637
                                                   ~value:(Ojs.float_of_js
                                                             x6641)
                                                   ~index:(Ojs.float_of_js
                                                             x6642)
                                                   ~array:(t_of_js x6643))))|]);
                             (match x6638 with
                              | Some x6640 ->
                                  ignore
                                    (Ojs.call x6639 "push"
                                       [|(any_to_js x6640)|])
                              | None -> ());
                             x6639))|])
    let (find :
      'tags this ->
        predicate:(value:float -> index:float -> obj:t -> bool) ->
          ?thisArg:any -> unit -> float option)
      =
      fun (x6654 : 'tags this) ->
        fun ~predicate:(x6647 : value:float -> index:float -> obj:t -> bool)
          ->
          fun ?thisArg:(x6648 : any option) ->
            fun () ->
              Ojs.option_of_js Ojs.float_of_js
                (let x6656 = this_to_js Obj.magic x6654 in
                 Ojs.call (Ojs.get_prop_ascii x6656 "find") "apply"
                   [|x6656;((let x6649 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6649 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x6651 : Ojs.t) ->
                                          fun (x6652 : Ojs.t) ->
                                            fun (x6653 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x6647
                                                   ~value:(Ojs.float_of_js
                                                             x6651)
                                                   ~index:(Ojs.float_of_js
                                                             x6652)
                                                   ~obj:(t_of_js x6653))))|]);
                             (match x6648 with
                              | Some x6650 ->
                                  ignore
                                    (Ojs.call x6649 "push"
                                       [|(any_to_js x6650)|])
                              | None -> ());
                             x6649))|])
    let (findIndex :
      'tags this ->
        predicate:(value:float -> index:float -> obj:t -> bool) ->
          ?thisArg:any -> unit -> float)
      =
      fun (x6665 : 'tags this) ->
        fun ~predicate:(x6658 : value:float -> index:float -> obj:t -> bool)
          ->
          fun ?thisArg:(x6659 : any option) ->
            fun () ->
              Ojs.float_of_js
                (let x6667 = this_to_js Obj.magic x6665 in
                 Ojs.call (Ojs.get_prop_ascii x6667 "findIndex") "apply"
                   [|x6667;((let x6660 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6660 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x6662 : Ojs.t) ->
                                          fun (x6663 : Ojs.t) ->
                                            fun (x6664 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x6658
                                                   ~value:(Ojs.float_of_js
                                                             x6662)
                                                   ~index:(Ojs.float_of_js
                                                             x6663)
                                                   ~obj:(t_of_js x6664))))|]);
                             (match x6659 with
                              | Some x6661 ->
                                  ignore
                                    (Ojs.call x6660 "push"
                                       [|(any_to_js x6661)|])
                              | None -> ());
                             x6660))|])
    let (forEach :
      'tags this ->
        callbackfn:(value:float -> index:float -> array:t -> unit) ->
          ?thisArg:any -> unit -> unit)
      =
      fun (x6675 : 'tags this) ->
        fun
          ~callbackfn:(x6668 : value:float -> index:float -> array:t -> unit)
          ->
          fun ?thisArg:(x6669 : any option) ->
            fun () ->
              ignore
                (let x6677 = this_to_js Obj.magic x6675 in
                 Ojs.call (Ojs.get_prop_ascii x6677 "forEach") "apply"
                   [|x6677;((let x6670 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6670 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x6672 : Ojs.t) ->
                                          fun (x6673 : Ojs.t) ->
                                            fun (x6674 : Ojs.t) ->
                                              x6668
                                                ~value:(Ojs.float_of_js x6672)
                                                ~index:(Ojs.float_of_js x6673)
                                                ~array:(t_of_js x6674)))|]);
                             (match x6669 with
                              | Some x6671 ->
                                  ignore
                                    (Ojs.call x6670 "push"
                                       [|(any_to_js x6671)|])
                              | None -> ());
                             x6670))|])
    let (indexOf :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> float)
      =
      fun (x6682 : 'tags this) ->
        fun ~searchElement:(x6678 : float) ->
          fun ?fromIndex:(x6679 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x6684 = this_to_js Obj.magic x6682 in
                 Ojs.call (Ojs.get_prop_ascii x6684 "indexOf") "apply"
                   [|x6684;((let x6680 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6680 "push"
                                  [|(Ojs.float_to_js x6678)|]);
                             (match x6679 with
                              | Some x6681 ->
                                  ignore
                                    (Ojs.call x6680 "push"
                                       [|(Ojs.float_to_js x6681)|])
                              | None -> ());
                             x6680))|])
    let (join : 'tags this -> ?separator:string -> unit -> string) =
      fun (x6688 : 'tags this) ->
        fun ?separator:(x6685 : string option) ->
          fun () ->
            Ojs.string_of_js
              (let x6690 = this_to_js Obj.magic x6688 in
               Ojs.call (Ojs.get_prop_ascii x6690 "join") "apply"
                 [|x6690;((let x6686 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x6685 with
                            | Some x6687 ->
                                ignore
                                  (Ojs.call x6686 "push"
                                     [|(Ojs.string_to_js x6687)|])
                            | None -> ());
                           x6686))|])
    let (lastIndexOf :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> float)
      =
      fun (x6695 : 'tags this) ->
        fun ~searchElement:(x6691 : float) ->
          fun ?fromIndex:(x6692 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x6697 = this_to_js Obj.magic x6695 in
                 Ojs.call (Ojs.get_prop_ascii x6697 "lastIndexOf") "apply"
                   [|x6697;((let x6693 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6693 "push"
                                  [|(Ojs.float_to_js x6691)|]);
                             (match x6692 with
                              | Some x6694 ->
                                  ignore
                                    (Ojs.call x6693 "push"
                                       [|(Ojs.float_to_js x6694)|])
                              | None -> ());
                             x6693))|])
    let (get_length : 'tags this -> float) =
      fun (x6698 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6698) "length")
    let (map :
      'tags this ->
        callbackfn:(value:float -> index:float -> array:t -> float) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x6707 : 'tags this) ->
        fun
          ~callbackfn:(x6700 :
                        value:float -> index:float -> array:t -> float)
          ->
          fun ?thisArg:(x6701 : any option) ->
            fun () ->
              t_of_js
                (let x6709 = this_to_js Obj.magic x6707 in
                 Ojs.call (Ojs.get_prop_ascii x6709 "map") "apply"
                   [|x6709;((let x6702 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6702 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x6704 : Ojs.t) ->
                                          fun (x6705 : Ojs.t) ->
                                            fun (x6706 : Ojs.t) ->
                                              Ojs.float_to_js
                                                (x6700
                                                   ~value:(Ojs.float_of_js
                                                             x6704)
                                                   ~index:(Ojs.float_of_js
                                                             x6705)
                                                   ~array:(t_of_js x6706))))|]);
                             (match x6701 with
                              | Some x6703 ->
                                  ignore
                                    (Ojs.call x6702 "push"
                                       [|(any_to_js x6703)|])
                              | None -> ());
                             x6702))|])
    let (reduce :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> float)
      =
      fun (x6715 : 'tags this) ->
        fun
          ~callbackfn:(x6710 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x6715) "reduce"
               [|(Ojs.fun_to_js 4
                    (fun (x6711 : Ojs.t) ->
                       fun (x6712 : Ojs.t) ->
                         fun (x6713 : Ojs.t) ->
                           fun (x6714 : Ojs.t) ->
                             Ojs.float_to_js
                               (x6710 ~previousValue:(Ojs.float_of_js x6711)
                                  ~currentValue:(Ojs.float_of_js x6712)
                                  ~currentIndex:(Ojs.float_of_js x6713)
                                  ~array:(t_of_js x6714))))|])
    let (reduce' :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> initialValue:float -> float)
      =
      fun (x6723 : 'tags this) ->
        fun
          ~callbackfn:(x6717 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          fun ~initialValue:(x6722 : float) ->
            Ojs.float_of_js
              (Ojs.call (this_to_js Obj.magic x6723) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x6718 : Ojs.t) ->
                         fun (x6719 : Ojs.t) ->
                           fun (x6720 : Ojs.t) ->
                             fun (x6721 : Ojs.t) ->
                               Ojs.float_to_js
                                 (x6717
                                    ~previousValue:(Ojs.float_of_js x6718)
                                    ~currentValue:(Ojs.float_of_js x6719)
                                    ~currentIndex:(Ojs.float_of_js x6720)
                                    ~array:(t_of_js x6721))));(Ojs.float_to_js
                                                                 x6722)|])
    let (reduce'' :
      'tags this ->
        callbackfn:(previousValue:'U ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x6731 : 'tags this) ->
        fun
          ~callbackfn:(x6725 :
                        previousValue:'U ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x6730 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic x6731) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x6726 : Ojs.t) ->
                         fun (x6727 : Ojs.t) ->
                           fun (x6728 : Ojs.t) ->
                             fun (x6729 : Ojs.t) ->
                               Obj.magic
                                 (x6725 ~previousValue:(Obj.magic x6726)
                                    ~currentValue:(Ojs.float_of_js x6727)
                                    ~currentIndex:(Ojs.float_of_js x6728)
                                    ~array:(t_of_js x6729))));(Obj.magic
                                                                 x6730)|])
    let (reduceRight :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> float)
      =
      fun (x6738 : 'tags this) ->
        fun
          ~callbackfn:(x6733 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x6738) "reduceRight"
               [|(Ojs.fun_to_js 4
                    (fun (x6734 : Ojs.t) ->
                       fun (x6735 : Ojs.t) ->
                         fun (x6736 : Ojs.t) ->
                           fun (x6737 : Ojs.t) ->
                             Ojs.float_to_js
                               (x6733 ~previousValue:(Ojs.float_of_js x6734)
                                  ~currentValue:(Ojs.float_of_js x6735)
                                  ~currentIndex:(Ojs.float_of_js x6736)
                                  ~array:(t_of_js x6737))))|])
    let (reduceRight' :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> initialValue:float -> float)
      =
      fun (x6746 : 'tags this) ->
        fun
          ~callbackfn:(x6740 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          fun ~initialValue:(x6745 : float) ->
            Ojs.float_of_js
              (Ojs.call (this_to_js Obj.magic x6746) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x6741 : Ojs.t) ->
                         fun (x6742 : Ojs.t) ->
                           fun (x6743 : Ojs.t) ->
                             fun (x6744 : Ojs.t) ->
                               Ojs.float_to_js
                                 (x6740
                                    ~previousValue:(Ojs.float_of_js x6741)
                                    ~currentValue:(Ojs.float_of_js x6742)
                                    ~currentIndex:(Ojs.float_of_js x6743)
                                    ~array:(t_of_js x6744))));(Ojs.float_to_js
                                                                 x6745)|])
    let (reduceRight'' :
      'tags this ->
        callbackfn:(previousValue:'U ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x6754 : 'tags this) ->
        fun
          ~callbackfn:(x6748 :
                        previousValue:'U ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x6753 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic x6754) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x6749 : Ojs.t) ->
                         fun (x6750 : Ojs.t) ->
                           fun (x6751 : Ojs.t) ->
                             fun (x6752 : Ojs.t) ->
                               Obj.magic
                                 (x6748 ~previousValue:(Obj.magic x6749)
                                    ~currentValue:(Ojs.float_of_js x6750)
                                    ~currentIndex:(Ojs.float_of_js x6751)
                                    ~array:(t_of_js x6752))));(Obj.magic
                                                                 x6753)|])
    let (reverse : 'tags this -> t) =
      fun (x6756 : 'tags this) ->
        t_of_js (Ojs.call (this_to_js Obj.magic x6756) "reverse" [||])
    let (set_ :
      'tags this -> array:float ArrayLike.t -> ?offset:float -> unit -> unit)
      =
      fun (x6763 : 'tags this) ->
        fun ~array:(x6758 : float ArrayLike.t) ->
          fun ?offset:(x6759 : float option) ->
            fun () ->
              ignore
                (let x6765 = this_to_js Obj.magic x6763 in
                 Ojs.call (Ojs.get_prop_ascii x6765 "set") "apply"
                   [|x6765;((let x6760 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6760 "push"
                                  [|(ArrayLike.t_to_js Ojs.float_to_js x6758)|]);
                             (match x6759 with
                              | Some x6761 ->
                                  ignore
                                    (Ojs.call x6760 "push"
                                       [|(Ojs.float_to_js x6761)|])
                              | None -> ());
                             x6760))|])
    let (slice : 'tags this -> ?start:float -> ?end_:float -> unit -> t) =
      fun (x6771 : 'tags this) ->
        fun ?start:(x6766 : float option) ->
          fun ?end_:(x6767 : float option) ->
            fun () ->
              t_of_js
                (let x6773 = this_to_js Obj.magic x6771 in
                 Ojs.call (Ojs.get_prop_ascii x6773 "slice") "apply"
                   [|x6773;((let x6768 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x6766 with
                              | Some x6770 ->
                                  ignore
                                    (Ojs.call x6768 "push"
                                       [|(Ojs.float_to_js x6770)|])
                              | None -> ());
                             (match x6767 with
                              | Some x6769 ->
                                  ignore
                                    (Ojs.call x6768 "push"
                                       [|(Ojs.float_to_js x6769)|])
                              | None -> ());
                             x6768))|])
    let (some :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x6781 : 'tags this) ->
        fun
          ~predicate:(x6774 :
                       value:float -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x6775 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x6783 = this_to_js Obj.magic x6781 in
                 Ojs.call (Ojs.get_prop_ascii x6783 "some") "apply"
                   [|x6783;((let x6776 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6776 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x6778 : Ojs.t) ->
                                          fun (x6779 : Ojs.t) ->
                                            fun (x6780 : Ojs.t) ->
                                              unknown_to_js
                                                (x6774
                                                   ~value:(Ojs.float_of_js
                                                             x6778)
                                                   ~index:(Ojs.float_of_js
                                                             x6779)
                                                   ~array:(t_of_js x6780))))|]);
                             (match x6775 with
                              | Some x6777 ->
                                  ignore
                                    (Ojs.call x6776 "push"
                                       [|(any_to_js x6777)|])
                              | None -> ());
                             x6776))|])
    let (sort :
      'tags this ->
        ?compareFn:(a:float -> b:float -> float) -> unit -> 'tags this)
      =
      fun (x6789 : 'tags this) ->
        fun ?compareFn:(x6784 : (a:float -> b:float -> float) option) ->
          fun () ->
            this_of_js Obj.magic
              (let x6791 = this_to_js Obj.magic x6789 in
               Ojs.call (Ojs.get_prop_ascii x6791 "sort") "apply"
                 [|x6791;((let x6785 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x6784 with
                            | Some x6786 ->
                                ignore
                                  (Ojs.call x6785 "push"
                                     [|(Ojs.fun_to_js 2
                                          (fun (x6787 : Ojs.t) ->
                                             fun (x6788 : Ojs.t) ->
                                               Ojs.float_to_js
                                                 (x6786
                                                    ~a:(Ojs.float_of_js x6787)
                                                    ~b:(Ojs.float_of_js x6788))))|])
                            | None -> ());
                           x6785))|])
    let (subarray : 'tags this -> ?begin_:float -> ?end_:float -> unit -> t)
      =
      fun (x6798 : 'tags this) ->
        fun ?begin_:(x6793 : float option) ->
          fun ?end_:(x6794 : float option) ->
            fun () ->
              t_of_js
                (let x6800 = this_to_js Obj.magic x6798 in
                 Ojs.call (Ojs.get_prop_ascii x6800 "subarray") "apply"
                   [|x6800;((let x6795 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x6793 with
                              | Some x6797 ->
                                  ignore
                                    (Ojs.call x6795 "push"
                                       [|(Ojs.float_to_js x6797)|])
                              | None -> ());
                             (match x6794 with
                              | Some x6796 ->
                                  ignore
                                    (Ojs.call x6795 "push"
                                       [|(Ojs.float_to_js x6796)|])
                              | None -> ());
                             x6795))|])
    let (toLocaleString : 'tags this -> string) =
      fun (x6801 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x6801) "toLocaleString" [||])
    let (toString : 'tags this -> string) =
      fun (x6803 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x6803) "toString" [||])
    let (valueOf : 'tags this -> t) =
      fun (x6805 : 'tags this) ->
        t_of_js (Ojs.call (this_to_js Obj.magic x6805) "valueOf" [||])
    let (get : 'tags this -> float -> float) =
      fun (x6807 : 'tags this) ->
        fun (x6809 : float) ->
          Ojs.float_of_js
            (Ojs.get_prop (this_to_js Obj.magic x6807)
               (Ojs.float_to_js x6809))
    let (set : 'tags this -> float -> float -> unit) =
      fun (x6810 : 'tags this) ->
        fun (x6812 : float) ->
          fun (x6813 : float) ->
            Ojs.set_prop (this_to_js Obj.magic x6810) (Ojs.float_to_js x6812)
              (Ojs.float_to_js x6813)
    let (create : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Float32Array") [||])
    let (create' : float Iterable.t -> t) =
      fun (x6814 : float Iterable.t) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Float32Array")
             [|(Iterable.t_to_js Ojs.float_to_js x6814)|])
    let (from :
      arrayLike:float Iterable.t ->
        ?mapfn:(v:float -> k:float -> float) -> ?thisArg:any -> unit -> t)
      =
      fun ~arrayLike:(x6816 : float Iterable.t) ->
        fun ?mapfn:(x6817 : (v:float -> k:float -> float) option) ->
          fun ?thisArg:(x6818 : any option) ->
            fun () ->
              t_of_js
                (let x6825 = Ojs.get_prop_ascii Ojs.global "Float32Array" in
                 Ojs.call (Ojs.get_prop_ascii x6825 "from") "apply"
                   [|x6825;((let x6819 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6819 "push"
                                  [|(Iterable.t_to_js Ojs.float_to_js x6816)|]);
                             (match x6817 with
                              | Some x6821 ->
                                  ignore
                                    (Ojs.call x6819 "push"
                                       [|(Ojs.fun_to_js 2
                                            (fun (x6822 : Ojs.t) ->
                                               fun (x6823 : Ojs.t) ->
                                                 Ojs.float_to_js
                                                   (x6821
                                                      ~v:(Ojs.float_of_js
                                                            x6822)
                                                      ~k:(Ojs.float_of_js
                                                            x6823))))|])
                              | None -> ());
                             (match x6818 with
                              | Some x6820 ->
                                  ignore
                                    (Ojs.call x6819 "push"
                                       [|(any_to_js x6820)|])
                              | None -> ());
                             x6819))|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Float32Array")
             "prototype")
    let (create'' : float -> t) =
      fun (x6826 : float) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Float32Array")
             [|(Ojs.float_to_js x6826)|])
    let (create''' :
      [ `U1 of float ArrayLike.t  | `U2 of ArrayBufferLike.t ] -> t) =
      fun (x6827 : [ `U1 of float ArrayLike.t  | `U2 of ArrayBufferLike.t ])
        ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Float32Array")
             [|((match x6827 with
                 | `U1 x6828 -> ArrayLike.t_to_js Ojs.float_to_js x6828
                 | `U2 x6830 -> ArrayBufferLike.t_to_js x6830))|])
    let (create'''' :
      buffer:ArrayBufferLike.t ->
        ?byteOffset:float -> ?length:float -> unit -> t)
      =
      fun ~buffer:(x6831 : ArrayBufferLike.t) ->
        fun ?byteOffset:(x6832 : float option) ->
          fun ?length:(x6833 : float option) ->
            fun () ->
              t_of_js
                (Ojs.new_obj_arr
                   (Ojs.get_prop_ascii Ojs.global "Float32Array")
                   (let x6834 =
                      Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                        [||] in
                    ignore
                      (Ojs.call x6834 "push"
                         [|(ArrayBufferLike.t_to_js x6831)|]);
                    (match x6832 with
                     | Some x6836 ->
                         ignore
                           (Ojs.call x6834 "push" [|(Ojs.float_to_js x6836)|])
                     | None -> ());
                    (match x6833 with
                     | Some x6835 ->
                         ignore
                           (Ojs.call x6834 "push" [|(Ojs.float_to_js x6835)|])
                     | None -> ());
                    x6834))
    let (bytes_per_element : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Float32Array")
             "BYTES_PER_ELEMENT")
    let (of_ : float list -> t) =
      fun (x6837 : float list) ->
        t_of_js
          (let x6840 = Ojs.get_prop_ascii Ojs.global "Float32Array" in
           Ojs.call (Ojs.get_prop_ascii x6840 "of") "apply"
             [|x6840;((let x6838 =
                         Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                           [||] in
                       List.iter
                         (fun (x6839 : float) ->
                            ignore
                              (Ojs.call x6838 "push"
                                 [|(Ojs.float_to_js x6839)|])) x6837;
                       x6838))|])
    let (from' : float ArrayLike.t -> t) =
      fun (x6841 : float ArrayLike.t) ->
        t_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Float32Array") "from"
             [|(ArrayLike.t_to_js Ojs.float_to_js x6841)|])
    let (from'' :
      arrayLike:'T ArrayLike.t ->
        mapfn:(v:'T -> k:float -> float) -> ?thisArg:any -> unit -> t)
      =
      fun ~arrayLike:(x6843 : 'T ArrayLike.t) ->
        fun ~mapfn:(x6844 : v:'T -> k:float -> float) ->
          fun ?thisArg:(x6845 : any option) ->
            fun () ->
              t_of_js
                (let x6851 = Ojs.get_prop_ascii Ojs.global "Float32Array" in
                 Ojs.call (Ojs.get_prop_ascii x6851 "from") "apply"
                   [|x6851;((let x6846 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6846 "push"
                                  [|(ArrayLike.t_to_js Obj.magic x6843)|]);
                             ignore
                               (Ojs.call x6846 "push"
                                  [|(Ojs.fun_to_js 2
                                       (fun (x6848 : Ojs.t) ->
                                          fun (x6849 : Ojs.t) ->
                                            Ojs.float_to_js
                                              (x6844 ~v:(Obj.magic x6848)
                                                 ~k:(Ojs.float_of_js x6849))))|]);
                             (match x6845 with
                              | Some x6847 ->
                                  ignore
                                    (Ojs.call x6846 "push"
                                       [|(any_to_js x6847)|])
                              | None -> ());
                             x6846))|])
    let cast_from = Obj.magic
  end
module FinalizationRegistry =
  struct
    type 'T t = [ `FinalizationRegistry of 'T ] intf
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun _T -> Obj.magic
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun _T -> Obj.magic
    type 'T tags = [ `FinalizationRegistry of 'T ]
    type ('tags, 'T) this =
      'tags intf constraint 'tags = [> `FinalizationRegistry of 'T ]
    let rec this_of_js :
      'tags 'T .
        (Ojs.t -> 'tags) -> (Ojs.t -> 'T) -> Ojs.t -> ('tags, 'T) this
      =
      fun (type __tags) ->
        fun (type __T) ->
          fun (__tags_of_js : Ojs.t -> __tags) ->
            fun (__T_of_js : Ojs.t -> __T) ->
              fun (x6854 : Ojs.t) -> intf_of_js __tags_of_js x6854
    and this_to_js :
      'tags 'T .
        ('tags -> Ojs.t) -> ('T -> Ojs.t) -> ('tags, 'T) this -> Ojs.t
      =
      fun (type __tags) ->
        fun (type __T) ->
          fun (__tags_to_js : __tags -> Ojs.t) ->
            fun (__T_to_js : __T -> Ojs.t) ->
              fun (x6852 : __tags intf) -> intf_to_js __tags_to_js x6852
    let (register :
      ('tags, 'T) this ->
        target:WeakKey.t ->
          heldValue:'T -> ?unregisterToken:WeakKey.t -> unit -> unit)
      =
      fun (x6861 : ('tags, 'T) this) ->
        fun ~target:(x6856 : WeakKey.t) ->
          fun ~heldValue:(x6857 : 'T) ->
            fun ?unregisterToken:(x6858 : WeakKey.t option) ->
              fun () ->
                ignore
                  (let x6864 = this_to_js Obj.magic Obj.magic x6861 in
                   Ojs.call (Ojs.get_prop_ascii x6864 "register") "apply"
                     [|x6864;((let x6859 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x6859 "push"
                                    [|(WeakKey.t_to_js x6856)|]);
                               ignore
                                 (Ojs.call x6859 "push" [|(Obj.magic x6857)|]);
                               (match x6858 with
                                | Some x6860 ->
                                    ignore
                                      (Ojs.call x6859 "push"
                                         [|(WeakKey.t_to_js x6860)|])
                                | None -> ());
                               x6859))|])
    let (unregister : ('tags, 'T) this -> unregisterToken:WeakKey.t -> unit)
      =
      fun (x6866 : ('tags, 'T) this) ->
        fun ~unregisterToken:(x6865 : WeakKey.t) ->
          ignore
            (Ojs.call (this_to_js Obj.magic Obj.magic x6866) "unregister"
               [|(WeakKey.t_to_js x6865)|])
    let (prototype : unit -> any t) =
      fun () ->
        t_of_js any_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "FinalizationRegistry")
             "prototype")
    let (create : ('T -> unit) -> 'T t) =
      fun (x6870 : 'T -> unit) ->
        t_of_js Obj.magic
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "FinalizationRegistry")
             [|(Ojs.fun_to_js 1
                  (fun (x6871 : Ojs.t) -> x6870 (Obj.magic x6871)))|])
    let cast_from = Obj.magic
  end
module Extract =
  struct
    type ('T, 'U) t = any
    let rec t_of_js :
      'T 'U . (Ojs.t -> 'T) -> (Ojs.t -> 'U) -> Ojs.t -> ('T, 'U) t =
      fun (type __T) ->
        fun (type __U) ->
          fun (__T_of_js : Ojs.t -> __T) ->
            fun (__U_of_js : Ojs.t -> __U) ->
              fun (x6874 : Ojs.t) -> any_of_js x6874
    and t_to_js :
      'T 'U . ('T -> Ojs.t) -> ('U -> Ojs.t) -> ('T, 'U) t -> Ojs.t =
      fun (type __T) ->
        fun (type __U) ->
          fun (__T_to_js : __T -> Ojs.t) ->
            fun (__U_to_js : __U -> Ojs.t) ->
              fun (x6873 : any) -> any_to_js x6873
  end
module EvalError =
  struct
    type t = [ `Error  | `EvalError ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type tags = [ `Error  | `EvalError ]
    type 'tags this = 'tags intf constraint 'tags = [> `EvalError ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x6877 : Ojs.t) -> intf_of_js __tags_of_js x6877
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x6875 : __tags intf) -> intf_to_js __tags_to_js x6875
    let (create : ?message:string -> ?options:ErrorOptions.t -> unit -> t) =
      fun ?message:(x6879 : string option) ->
        fun ?options:(x6880 : ErrorOptions.t option) ->
          fun () ->
            t_of_js
              (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "EvalError")
                 (let x6881 =
                    Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                  (match x6879 with
                   | Some x6883 ->
                       ignore
                         (Ojs.call x6881 "push" [|(Ojs.string_to_js x6883)|])
                   | None -> ());
                  (match x6880 with
                   | Some x6882 ->
                       ignore
                         (Ojs.call x6881 "push"
                            [|(ErrorOptions.t_to_js x6882)|])
                   | None -> ());
                  x6881))
    let (invoke : ?message:string -> ?options:ErrorOptions.t -> unit -> t) =
      fun ?message:(x6884 : string option) ->
        fun ?options:(x6885 : ErrorOptions.t option) ->
          fun () ->
            t_of_js
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "EvalError") "apply"
                 [|Ojs.null;((let x6886 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              (match x6884 with
                               | Some x6888 ->
                                   ignore
                                     (Ojs.call x6886 "push"
                                        [|(Ojs.string_to_js x6888)|])
                               | None -> ());
                              (match x6885 with
                               | Some x6887 ->
                                   ignore
                                     (Ojs.call x6886 "push"
                                        [|(ErrorOptions.t_to_js x6887)|])
                               | None -> ());
                              x6886))|])
    let (create' : ?message:string -> unit -> t) =
      fun ?message:(x6889 : string option) ->
        fun () ->
          t_of_js
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "EvalError")
               (let x6890 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x6889 with
                 | Some x6891 ->
                     ignore
                       (Ojs.call x6890 "push" [|(Ojs.string_to_js x6891)|])
                 | None -> ());
                x6890))
    let (invoke' : ?message:string -> unit -> t) =
      fun ?message:(x6892 : string option) ->
        fun () ->
          t_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "EvalError") "apply"
               [|Ojs.null;((let x6893 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x6892 with
                             | Some x6894 ->
                                 ignore
                                   (Ojs.call x6893 "push"
                                      [|(Ojs.string_to_js x6894)|])
                             | None -> ());
                            x6893))|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "EvalError")
             "prototype")
    let cast_from = Obj.magic
  end
module Disposable =
  struct
    type t = [ `Disposable ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type tags = [ `Disposable ]
    type 'tags this = 'tags intf constraint 'tags = [> `Disposable ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x6897 : Ojs.t) -> intf_of_js __tags_of_js x6897
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x6895 : __tags intf) -> intf_to_js __tags_to_js x6895
    let cast_from = Obj.magic
  end
module DisposableStack =
  struct
    type t = [ `DisposableStack ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type tags = [ `DisposableStack ]
    type 'tags this = 'tags intf constraint 'tags = [> `DisposableStack ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x6901 : Ojs.t) -> intf_of_js __tags_of_js x6901
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x6899 : __tags intf) -> intf_to_js __tags_to_js x6899
    let (get_disposed : 'tags this -> bool) =
      fun (x6903 : 'tags this) ->
        Ojs.bool_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6903) "disposed")
    let (dispose : 'tags this -> unit) =
      fun (x6905 : 'tags this) ->
        ignore (Ojs.call (this_to_js Obj.magic x6905) "dispose" [||])
    let (use : 'tags this -> value:'T -> 'T) =
      fun (x6908 : 'tags this) ->
        fun ~value:(x6907 : 'T) ->
          Obj.magic
            (Ojs.call (this_to_js Obj.magic x6908) "use"
               [|(Obj.magic x6907)|])
    let (adopt : 'tags this -> value:'T -> onDispose:('T -> unit) -> 'T) =
      fun (x6913 : 'tags this) ->
        fun ~value:(x6910 : 'T) ->
          fun ~onDispose:(x6911 : 'T -> unit) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic x6913) "adopt"
                 [|(Obj.magic x6910);(Ojs.fun_to_js 1
                                        (fun (x6912 : Ojs.t) ->
                                           x6911 (Obj.magic x6912)))|])
    let (defer : 'tags this -> onDispose:(unit -> unit) -> unit) =
      fun (x6916 : 'tags this) ->
        fun ~onDispose:(x6915 : unit -> unit) ->
          ignore
            (Ojs.call (this_to_js Obj.magic x6916) "defer"
               [|(Ojs.fun_to_js 1 (fun _ -> x6915 ()))|])
    let (move : 'tags this -> t) =
      fun (x6918 : 'tags this) ->
        t_of_js (Ojs.call (this_to_js Obj.magic x6918) "move" [||])
    let (create : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "DisposableStack") [||])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "DisposableStack") "prototype")
    let cast_from = Obj.magic
  end
module DataView =
  struct
    module AnonymousInterface0 =
      struct
        type t = Ojs.t
        let rec t_of_js : Ojs.t -> t = fun (x6921 : Ojs.t) -> x6921
        and t_to_js : t -> Ojs.t = fun (x6920 : Ojs.t) -> x6920
        let (get_BYTES_PER_ELEMENT : t -> never option) =
          fun (x6922 : t) ->
            Ojs.option_of_js never_of_js
              (Ojs.get_prop_ascii (t_to_js x6922) "BYTES_PER_ELEMENT")
        let (set_BYTES_PER_ELEMENT : t -> never -> unit) =
          fun (x6924 : t) ->
            fun (x6925 : never) ->
              Ojs.set_prop_ascii (t_to_js x6924) "BYTES_PER_ELEMENT"
                (never_to_js x6925)
        let (create : ?bytes_per_element:never -> unit -> t) =
          fun ?bytes_per_element:(x6926 : never option) ->
            fun () ->
              let x6927 = Ojs.empty_obj () in
              (match x6926 with
               | Some x6928 ->
                   Ojs.set_prop_ascii x6927 "BYTES_PER_ELEMENT"
                     (never_to_js x6928)
               | None -> ());
              t_of_js x6927
      end
    type t = [ `DataView ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type tags = [ `DataView ]
    type 'tags this = 'tags intf constraint 'tags = [> `DataView ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x6931 : Ojs.t) -> intf_of_js __tags_of_js x6931
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x6929 : __tags intf) -> intf_to_js __tags_to_js x6929
    let (getBigInt64 :
      'tags this -> byteOffset:float -> ?littleEndian:bool -> unit -> bigint)
      =
      fun (x6937 : 'tags this) ->
        fun ~byteOffset:(x6933 : float) ->
          fun ?littleEndian:(x6934 : bool option) ->
            fun () ->
              bigint_of_js
                (let x6939 = this_to_js Obj.magic x6937 in
                 Ojs.call (Ojs.get_prop_ascii x6939 "getBigInt64") "apply"
                   [|x6939;((let x6935 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6935 "push"
                                  [|(Ojs.float_to_js x6933)|]);
                             (match x6934 with
                              | Some x6936 ->
                                  ignore
                                    (Ojs.call x6935 "push"
                                       [|(Ojs.bool_to_js x6936)|])
                              | None -> ());
                             x6935))|])
    let (getBigUint64 :
      'tags this -> byteOffset:float -> ?littleEndian:bool -> unit -> bigint)
      =
      fun (x6944 : 'tags this) ->
        fun ~byteOffset:(x6940 : float) ->
          fun ?littleEndian:(x6941 : bool option) ->
            fun () ->
              bigint_of_js
                (let x6946 = this_to_js Obj.magic x6944 in
                 Ojs.call (Ojs.get_prop_ascii x6946 "getBigUint64") "apply"
                   [|x6946;((let x6942 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6942 "push"
                                  [|(Ojs.float_to_js x6940)|]);
                             (match x6941 with
                              | Some x6943 ->
                                  ignore
                                    (Ojs.call x6942 "push"
                                       [|(Ojs.bool_to_js x6943)|])
                              | None -> ());
                             x6942))|])
    let (setBigInt64 :
      'tags this ->
        byteOffset:float ->
          value:bigint -> ?littleEndian:bool -> unit -> unit)
      =
      fun (x6952 : 'tags this) ->
        fun ~byteOffset:(x6947 : float) ->
          fun ~value:(x6948 : bigint) ->
            fun ?littleEndian:(x6949 : bool option) ->
              fun () ->
                ignore
                  (let x6954 = this_to_js Obj.magic x6952 in
                   Ojs.call (Ojs.get_prop_ascii x6954 "setBigInt64") "apply"
                     [|x6954;((let x6950 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x6950 "push"
                                    [|(Ojs.float_to_js x6947)|]);
                               ignore
                                 (Ojs.call x6950 "push"
                                    [|(bigint_to_js x6948)|]);
                               (match x6949 with
                                | Some x6951 ->
                                    ignore
                                      (Ojs.call x6950 "push"
                                         [|(Ojs.bool_to_js x6951)|])
                                | None -> ());
                               x6950))|])
    let (setBigUint64 :
      'tags this ->
        byteOffset:float ->
          value:bigint -> ?littleEndian:bool -> unit -> unit)
      =
      fun (x6960 : 'tags this) ->
        fun ~byteOffset:(x6955 : float) ->
          fun ~value:(x6956 : bigint) ->
            fun ?littleEndian:(x6957 : bool option) ->
              fun () ->
                ignore
                  (let x6962 = this_to_js Obj.magic x6960 in
                   Ojs.call (Ojs.get_prop_ascii x6962 "setBigUint64") "apply"
                     [|x6962;((let x6958 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x6958 "push"
                                    [|(Ojs.float_to_js x6955)|]);
                               ignore
                                 (Ojs.call x6958 "push"
                                    [|(bigint_to_js x6956)|]);
                               (match x6957 with
                                | Some x6959 ->
                                    ignore
                                      (Ojs.call x6958 "push"
                                         [|(Ojs.bool_to_js x6959)|])
                                | None -> ());
                               x6958))|])
    let (get_buffer : 'tags this -> ArrayBuffer.t) =
      fun (x6963 : 'tags this) ->
        ArrayBuffer.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6963) "buffer")
    let (get_byteLength : 'tags this -> float) =
      fun (x6965 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6965) "byteLength")
    let (get_byteOffset : 'tags this -> float) =
      fun (x6967 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6967) "byteOffset")
    let (getFloat32 :
      'tags this -> byteOffset:float -> ?littleEndian:bool -> unit -> float)
      =
      fun (x6973 : 'tags this) ->
        fun ~byteOffset:(x6969 : float) ->
          fun ?littleEndian:(x6970 : bool option) ->
            fun () ->
              Ojs.float_of_js
                (let x6975 = this_to_js Obj.magic x6973 in
                 Ojs.call (Ojs.get_prop_ascii x6975 "getFloat32") "apply"
                   [|x6975;((let x6971 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6971 "push"
                                  [|(Ojs.float_to_js x6969)|]);
                             (match x6970 with
                              | Some x6972 ->
                                  ignore
                                    (Ojs.call x6971 "push"
                                       [|(Ojs.bool_to_js x6972)|])
                              | None -> ());
                             x6971))|])
    let (getFloat64 :
      'tags this -> byteOffset:float -> ?littleEndian:bool -> unit -> float)
      =
      fun (x6980 : 'tags this) ->
        fun ~byteOffset:(x6976 : float) ->
          fun ?littleEndian:(x6977 : bool option) ->
            fun () ->
              Ojs.float_of_js
                (let x6982 = this_to_js Obj.magic x6980 in
                 Ojs.call (Ojs.get_prop_ascii x6982 "getFloat64") "apply"
                   [|x6982;((let x6978 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6978 "push"
                                  [|(Ojs.float_to_js x6976)|]);
                             (match x6977 with
                              | Some x6979 ->
                                  ignore
                                    (Ojs.call x6978 "push"
                                       [|(Ojs.bool_to_js x6979)|])
                              | None -> ());
                             x6978))|])
    let (getInt8 : 'tags this -> byteOffset:float -> float) =
      fun (x6984 : 'tags this) ->
        fun ~byteOffset:(x6983 : float) ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x6984) "getInt8"
               [|(Ojs.float_to_js x6983)|])
    let (getInt16 :
      'tags this -> byteOffset:float -> ?littleEndian:bool -> unit -> float)
      =
      fun (x6990 : 'tags this) ->
        fun ~byteOffset:(x6986 : float) ->
          fun ?littleEndian:(x6987 : bool option) ->
            fun () ->
              Ojs.float_of_js
                (let x6992 = this_to_js Obj.magic x6990 in
                 Ojs.call (Ojs.get_prop_ascii x6992 "getInt16") "apply"
                   [|x6992;((let x6988 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6988 "push"
                                  [|(Ojs.float_to_js x6986)|]);
                             (match x6987 with
                              | Some x6989 ->
                                  ignore
                                    (Ojs.call x6988 "push"
                                       [|(Ojs.bool_to_js x6989)|])
                              | None -> ());
                             x6988))|])
    let (getInt32 :
      'tags this -> byteOffset:float -> ?littleEndian:bool -> unit -> float)
      =
      fun (x6997 : 'tags this) ->
        fun ~byteOffset:(x6993 : float) ->
          fun ?littleEndian:(x6994 : bool option) ->
            fun () ->
              Ojs.float_of_js
                (let x6999 = this_to_js Obj.magic x6997 in
                 Ojs.call (Ojs.get_prop_ascii x6999 "getInt32") "apply"
                   [|x6999;((let x6995 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6995 "push"
                                  [|(Ojs.float_to_js x6993)|]);
                             (match x6994 with
                              | Some x6996 ->
                                  ignore
                                    (Ojs.call x6995 "push"
                                       [|(Ojs.bool_to_js x6996)|])
                              | None -> ());
                             x6995))|])
    let (getUint8 : 'tags this -> byteOffset:float -> float) =
      fun (x7001 : 'tags this) ->
        fun ~byteOffset:(x7000 : float) ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x7001) "getUint8"
               [|(Ojs.float_to_js x7000)|])
    let (getUint16 :
      'tags this -> byteOffset:float -> ?littleEndian:bool -> unit -> float)
      =
      fun (x7007 : 'tags this) ->
        fun ~byteOffset:(x7003 : float) ->
          fun ?littleEndian:(x7004 : bool option) ->
            fun () ->
              Ojs.float_of_js
                (let x7009 = this_to_js Obj.magic x7007 in
                 Ojs.call (Ojs.get_prop_ascii x7009 "getUint16") "apply"
                   [|x7009;((let x7005 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7005 "push"
                                  [|(Ojs.float_to_js x7003)|]);
                             (match x7004 with
                              | Some x7006 ->
                                  ignore
                                    (Ojs.call x7005 "push"
                                       [|(Ojs.bool_to_js x7006)|])
                              | None -> ());
                             x7005))|])
    let (getUint32 :
      'tags this -> byteOffset:float -> ?littleEndian:bool -> unit -> float)
      =
      fun (x7014 : 'tags this) ->
        fun ~byteOffset:(x7010 : float) ->
          fun ?littleEndian:(x7011 : bool option) ->
            fun () ->
              Ojs.float_of_js
                (let x7016 = this_to_js Obj.magic x7014 in
                 Ojs.call (Ojs.get_prop_ascii x7016 "getUint32") "apply"
                   [|x7016;((let x7012 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7012 "push"
                                  [|(Ojs.float_to_js x7010)|]);
                             (match x7011 with
                              | Some x7013 ->
                                  ignore
                                    (Ojs.call x7012 "push"
                                       [|(Ojs.bool_to_js x7013)|])
                              | None -> ());
                             x7012))|])
    let (setFloat32 :
      'tags this ->
        byteOffset:float -> value:float -> ?littleEndian:bool -> unit -> unit)
      =
      fun (x7022 : 'tags this) ->
        fun ~byteOffset:(x7017 : float) ->
          fun ~value:(x7018 : float) ->
            fun ?littleEndian:(x7019 : bool option) ->
              fun () ->
                ignore
                  (let x7024 = this_to_js Obj.magic x7022 in
                   Ojs.call (Ojs.get_prop_ascii x7024 "setFloat32") "apply"
                     [|x7024;((let x7020 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x7020 "push"
                                    [|(Ojs.float_to_js x7017)|]);
                               ignore
                                 (Ojs.call x7020 "push"
                                    [|(Ojs.float_to_js x7018)|]);
                               (match x7019 with
                                | Some x7021 ->
                                    ignore
                                      (Ojs.call x7020 "push"
                                         [|(Ojs.bool_to_js x7021)|])
                                | None -> ());
                               x7020))|])
    let (setFloat64 :
      'tags this ->
        byteOffset:float -> value:float -> ?littleEndian:bool -> unit -> unit)
      =
      fun (x7030 : 'tags this) ->
        fun ~byteOffset:(x7025 : float) ->
          fun ~value:(x7026 : float) ->
            fun ?littleEndian:(x7027 : bool option) ->
              fun () ->
                ignore
                  (let x7032 = this_to_js Obj.magic x7030 in
                   Ojs.call (Ojs.get_prop_ascii x7032 "setFloat64") "apply"
                     [|x7032;((let x7028 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x7028 "push"
                                    [|(Ojs.float_to_js x7025)|]);
                               ignore
                                 (Ojs.call x7028 "push"
                                    [|(Ojs.float_to_js x7026)|]);
                               (match x7027 with
                                | Some x7029 ->
                                    ignore
                                      (Ojs.call x7028 "push"
                                         [|(Ojs.bool_to_js x7029)|])
                                | None -> ());
                               x7028))|])
    let (setInt8 : 'tags this -> byteOffset:float -> value:float -> unit) =
      fun (x7035 : 'tags this) ->
        fun ~byteOffset:(x7033 : float) ->
          fun ~value:(x7034 : float) ->
            ignore
              (Ojs.call (this_to_js Obj.magic x7035) "setInt8"
                 [|(Ojs.float_to_js x7033);(Ojs.float_to_js x7034)|])
    let (setInt16 :
      'tags this ->
        byteOffset:float -> value:float -> ?littleEndian:bool -> unit -> unit)
      =
      fun (x7042 : 'tags this) ->
        fun ~byteOffset:(x7037 : float) ->
          fun ~value:(x7038 : float) ->
            fun ?littleEndian:(x7039 : bool option) ->
              fun () ->
                ignore
                  (let x7044 = this_to_js Obj.magic x7042 in
                   Ojs.call (Ojs.get_prop_ascii x7044 "setInt16") "apply"
                     [|x7044;((let x7040 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x7040 "push"
                                    [|(Ojs.float_to_js x7037)|]);
                               ignore
                                 (Ojs.call x7040 "push"
                                    [|(Ojs.float_to_js x7038)|]);
                               (match x7039 with
                                | Some x7041 ->
                                    ignore
                                      (Ojs.call x7040 "push"
                                         [|(Ojs.bool_to_js x7041)|])
                                | None -> ());
                               x7040))|])
    let (setInt32 :
      'tags this ->
        byteOffset:float -> value:float -> ?littleEndian:bool -> unit -> unit)
      =
      fun (x7050 : 'tags this) ->
        fun ~byteOffset:(x7045 : float) ->
          fun ~value:(x7046 : float) ->
            fun ?littleEndian:(x7047 : bool option) ->
              fun () ->
                ignore
                  (let x7052 = this_to_js Obj.magic x7050 in
                   Ojs.call (Ojs.get_prop_ascii x7052 "setInt32") "apply"
                     [|x7052;((let x7048 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x7048 "push"
                                    [|(Ojs.float_to_js x7045)|]);
                               ignore
                                 (Ojs.call x7048 "push"
                                    [|(Ojs.float_to_js x7046)|]);
                               (match x7047 with
                                | Some x7049 ->
                                    ignore
                                      (Ojs.call x7048 "push"
                                         [|(Ojs.bool_to_js x7049)|])
                                | None -> ());
                               x7048))|])
    let (setUint8 : 'tags this -> byteOffset:float -> value:float -> unit) =
      fun (x7055 : 'tags this) ->
        fun ~byteOffset:(x7053 : float) ->
          fun ~value:(x7054 : float) ->
            ignore
              (Ojs.call (this_to_js Obj.magic x7055) "setUint8"
                 [|(Ojs.float_to_js x7053);(Ojs.float_to_js x7054)|])
    let (setUint16 :
      'tags this ->
        byteOffset:float -> value:float -> ?littleEndian:bool -> unit -> unit)
      =
      fun (x7062 : 'tags this) ->
        fun ~byteOffset:(x7057 : float) ->
          fun ~value:(x7058 : float) ->
            fun ?littleEndian:(x7059 : bool option) ->
              fun () ->
                ignore
                  (let x7064 = this_to_js Obj.magic x7062 in
                   Ojs.call (Ojs.get_prop_ascii x7064 "setUint16") "apply"
                     [|x7064;((let x7060 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x7060 "push"
                                    [|(Ojs.float_to_js x7057)|]);
                               ignore
                                 (Ojs.call x7060 "push"
                                    [|(Ojs.float_to_js x7058)|]);
                               (match x7059 with
                                | Some x7061 ->
                                    ignore
                                      (Ojs.call x7060 "push"
                                         [|(Ojs.bool_to_js x7061)|])
                                | None -> ());
                               x7060))|])
    let (setUint32 :
      'tags this ->
        byteOffset:float -> value:float -> ?littleEndian:bool -> unit -> unit)
      =
      fun (x7070 : 'tags this) ->
        fun ~byteOffset:(x7065 : float) ->
          fun ~value:(x7066 : float) ->
            fun ?littleEndian:(x7067 : bool option) ->
              fun () ->
                ignore
                  (let x7072 = this_to_js Obj.magic x7070 in
                   Ojs.call (Ojs.get_prop_ascii x7072 "setUint32") "apply"
                     [|x7072;((let x7068 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x7068 "push"
                                    [|(Ojs.float_to_js x7065)|]);
                               ignore
                                 (Ojs.call x7068 "push"
                                    [|(Ojs.float_to_js x7066)|]);
                               (match x7067 with
                                | Some x7069 ->
                                    ignore
                                      (Ojs.call x7068 "push"
                                         [|(Ojs.bool_to_js x7069)|])
                                | None -> ());
                               x7068))|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "DataView")
             "prototype")
    let (create :
      buffer:(ArrayBufferLike.t, AnonymousInterface0.t) intersection2 ->
        ?byteOffset:float -> ?byteLength:float -> unit -> t)
      =
      fun
        ~buffer:(x7073 :
                  (ArrayBufferLike.t, AnonymousInterface0.t) intersection2)
        ->
        fun ?byteOffset:(x7074 : float option) ->
          fun ?byteLength:(x7075 : float option) ->
            fun () ->
              t_of_js
                (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "DataView")
                   (let x7076 =
                      Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                        [||] in
                    ignore
                      (Ojs.call x7076 "push"
                         [|(intersection2_to_js ArrayBufferLike.t_to_js
                              AnonymousInterface0.t_to_js x7073)|]);
                    (match x7074 with
                     | Some x7078 ->
                         ignore
                           (Ojs.call x7076 "push" [|(Ojs.float_to_js x7078)|])
                     | None -> ());
                    (match x7075 with
                     | Some x7077 ->
                         ignore
                           (Ojs.call x7076 "push" [|(Ojs.float_to_js x7077)|])
                     | None -> ());
                    x7076))
    let cast_from = Obj.magic
  end
module ConstructorParameters =
  struct
    module AnonymousInterface15 =
      struct
        type t = Ojs.t
        let rec t_of_js : Ojs.t -> t = fun (x7082 : Ojs.t) -> x7082
        and t_to_js : t -> Ojs.t = fun (x7081 : Ojs.t) -> x7081
        let (create : t -> args:any list -> any) =
          fun (x7086 : t) ->
            fun ~args:(x7083 : any list) ->
              any_of_js
                (Ojs.new_obj_arr (t_to_js x7086)
                   (let x7084 =
                      Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                        [||] in
                    List.iter
                      (fun (x7085 : any) ->
                         ignore (Ojs.call x7084 "push" [|(any_to_js x7085)|]))
                      x7083;
                    x7084))
      end
    type 'T t = any
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun (type __T) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x7088 : Ojs.t) -> any_of_js x7088
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t =
      fun (type __T) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x7087 : any) -> any_to_js x7087
  end
module Capitalize =
  struct
    type 'S t = Ojs.t
    let rec t_of_js : 'S . (Ojs.t -> 'S) -> Ojs.t -> 'S t =
      fun (type __S) ->
        fun (__S_of_js : Ojs.t -> __S) -> fun (x7090 : Ojs.t) -> x7090
    and t_to_js : 'S . ('S -> Ojs.t) -> 'S t -> Ojs.t =
      fun (type __S) ->
        fun (__S_to_js : __S -> Ojs.t) -> fun (x7089 : Ojs.t) -> x7089
  end
module ThisParameterType =
  struct
    type 'T t = any
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun (type __T) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x7092 : Ojs.t) -> any_of_js x7092
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t =
      fun (type __T) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x7091 : any) -> any_to_js x7091
  end
module OmitThisParameter =
  struct
    type 'T t = any
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun (type __T) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x7094 : Ojs.t) -> any_of_js x7094
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t =
      fun (type __T) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x7093 : any) -> any_to_js x7093
  end
module CallableFunction =
  struct
    type t = [ `CallableFunction  | `Function  | `Function ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type tags = [ `CallableFunction  | `Function  | `Function ]
    type 'tags this = 'tags intf constraint 'tags = [> `CallableFunction ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x7097 : Ojs.t) -> intf_of_js __tags_of_js x7097
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x7095 : __tags intf) -> intf_to_js __tags_to_js x7095
    let (apply_ : 'tags this -> this:('T -> 'R) -> thisArg:'T -> 'R) =
      fun (x7102 : 'tags this) ->
        fun ~this:(x7099 : 'T -> 'R) ->
          fun ~thisArg:(x7101 : 'T) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic x7102) "apply"
                 [|(Ojs.fun_to_js 1
                      (fun (x7100 : Ojs.t) ->
                         Obj.magic (x7099 (Obj.magic x7100))));(Obj.magic
                                                                  x7101)|])
    let (apply_' :
      'tags this ->
        this:(this:'T -> args:any list -> 'R) -> thisArg:'T -> args:'A -> 'R)
      =
      fun (x7109 : 'tags this) ->
        fun ~this:(x7104 : this:'T -> args:any list -> 'R) ->
          fun ~thisArg:(x7107 : 'T) ->
            fun ~args:(x7108 : 'A) ->
              Obj.magic
                (Ojs.call (this_to_js Obj.magic x7109) "apply"
                   [|(Ojs.fun_to_js_args
                        (fun (x7105 : _) ->
                           Obj.magic
                             (x7104 ~this:(Obj.magic (Ojs.array_get x7105 0))
                                ~args:(Ojs.list_of_js_from any_of_js x7105 1))));(
                     Obj.magic x7107);(Obj.magic x7108)|])
    let (call :
      'tags this ->
        this:(this:'T -> args:any list -> 'R) ->
          thisArg:'T -> args:any list -> 'R)
      =
      fun (x7118 : 'tags this) ->
        fun ~this:(x7111 : this:'T -> args:any list -> 'R) ->
          fun ~thisArg:(x7112 : 'T) ->
            fun ~args:(x7113 : any list) ->
              Obj.magic
                (let x7120 = this_to_js Obj.magic x7118 in
                 Ojs.call (Ojs.get_prop_ascii x7120 "call") "apply"
                   [|x7120;((let x7114 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7114 "push"
                                  [|(Ojs.fun_to_js_args
                                       (fun (x7116 : _) ->
                                          Obj.magic
                                            (x7111
                                               ~this:(Obj.magic
                                                        (Ojs.array_get x7116
                                                           0))
                                               ~args:(Ojs.list_of_js_from
                                                        any_of_js x7116 1))))|]);
                             ignore
                               (Ojs.call x7114 "push" [|(Obj.magic x7112)|]);
                             List.iter
                               (fun (x7115 : any) ->
                                  ignore
                                    (Ojs.call x7114 "push"
                                       [|(any_to_js x7115)|])) x7113;
                             x7114))|])
    let (bind :
      'tags this ->
        this:'T -> thisArg:'T ThisParameterType.t -> 'T OmitThisParameter.t)
      =
      fun (x7124 : 'tags this) ->
        fun ~this:(x7121 : 'T) ->
          fun ~thisArg:(x7122 : 'T ThisParameterType.t) ->
            OmitThisParameter.t_of_js Obj.magic
              (Ojs.call (this_to_js Obj.magic x7124) "bind"
                 [|(Obj.magic x7121);(ThisParameterType.t_to_js Obj.magic
                                        x7122)|])
    let (bind' :
      'tags this ->
        this:(this:'T -> args:any list -> 'R) ->
          thisArg:'T -> args:any list -> any list -> 'R)
      =
      fun (x7134 : 'tags this) ->
        fun ~this:(x7127 : this:'T -> args:any list -> 'R) ->
          fun ~thisArg:(x7128 : 'T) ->
            fun ~args:(x7129 : any list) ->
              fun (x7137 : any list) ->
                Obj.magic
                  (Ojs.call
                     (let x7136 = this_to_js Obj.magic x7134 in
                      Ojs.call (Ojs.get_prop_ascii x7136 "bind") "apply"
                        [|x7136;((let x7130 =
                                    Ojs.new_obj
                                      (Ojs.get_prop_ascii Ojs.global "Array")
                                      [||] in
                                  ignore
                                    (Ojs.call x7130 "push"
                                       [|(Ojs.fun_to_js_args
                                            (fun (x7132 : _) ->
                                               Obj.magic
                                                 (x7127
                                                    ~this:(Obj.magic
                                                             (Ojs.array_get
                                                                x7132 0))
                                                    ~args:(Ojs.list_of_js_from
                                                             any_of_js x7132
                                                             1))))|]);
                                  ignore
                                    (Ojs.call x7130 "push"
                                       [|(Obj.magic x7128)|]);
                                  List.iter
                                    (fun (x7131 : any) ->
                                       ignore
                                         (Ojs.call x7130 "push"
                                            [|(any_to_js x7131)|])) x7129;
                                  x7130))|]) "apply"
                     [|Ojs.null;((let x7138 =
                                    Ojs.new_obj
                                      (Ojs.get_prop_ascii Ojs.global "Array")
                                      [||] in
                                  List.iter
                                    (fun (x7139 : any) ->
                                       ignore
                                         (Ojs.call x7138 "push"
                                            [|(any_to_js x7139)|])) x7137;
                                  x7138))|])
    let cast_from = Obj.magic
  end
module Boolean =
  struct
    type t = [ `Boolean ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type tags = [ `Boolean ]
    type 'tags this = 'tags intf constraint 'tags = [> `Boolean ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x7142 : Ojs.t) -> intf_of_js __tags_of_js x7142
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x7140 : __tags intf) -> intf_to_js __tags_to_js x7140
    let (valueOf : 'tags this -> bool) =
      fun (x7144 : 'tags this) ->
        Ojs.bool_of_js (Ojs.call (this_to_js Obj.magic x7144) "valueOf" [||])
    let (create : ?value:any -> unit -> t) =
      fun ?value:(x7146 : any option) ->
        fun () ->
          t_of_js
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "Boolean")
               (let x7147 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x7146 with
                 | Some x7148 ->
                     ignore (Ojs.call x7147 "push" [|(any_to_js x7148)|])
                 | None -> ());
                x7147))
    let (invoke : ?value:'T -> unit -> bool) =
      fun ?value:(x7149 : 'T option) ->
        fun () ->
          Ojs.bool_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "Boolean") "apply"
               [|Ojs.null;((let x7150 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x7149 with
                             | Some x7151 ->
                                 ignore
                                   (Ojs.call x7150 "push"
                                      [|(Obj.magic x7151)|])
                             | None -> ());
                            x7150))|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Boolean")
             "prototype")
    let cast_from = Obj.magic
    let (of_ml : bool -> t) =
      fun (x7152 : bool) -> t_of_js (Ojs.bool_to_js x7152)
    let (to_ml : t -> bool) =
      fun (x7153 : t) ->
        Ojs.bool_of_js (Ojs.call (t_to_js x7153) "valueOf" [||])
  end
module BigIntToLocaleStringOptions =
  struct
    type t = [ `BigIntToLocaleStringOptions ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type tags = [ `BigIntToLocaleStringOptions ]
    type 'tags this =
      'tags intf constraint 'tags = [> `BigIntToLocaleStringOptions ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x7156 : Ojs.t) -> intf_of_js __tags_of_js x7156
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x7154 : __tags intf) -> intf_to_js __tags_to_js x7154
    let (get_localeMatcher : 'tags this -> string option) =
      fun (x7158 : 'tags this) ->
        Ojs.option_of_js Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x7158) "localeMatcher")
    let (set_localeMatcher : 'tags this -> string -> unit) =
      fun (x7161 : 'tags this) ->
        fun (x7162 : string) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x7161) "localeMatcher"
            (Ojs.string_to_js x7162)
    let (get_style : 'tags this -> string option) =
      fun (x7164 : 'tags this) ->
        Ojs.option_of_js Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x7164) "style")
    let (set_style : 'tags this -> string -> unit) =
      fun (x7167 : 'tags this) ->
        fun (x7168 : string) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x7167) "style"
            (Ojs.string_to_js x7168)
    let (get_numberingSystem : 'tags this -> string option) =
      fun (x7170 : 'tags this) ->
        Ojs.option_of_js Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x7170) "numberingSystem")
    let (set_numberingSystem : 'tags this -> string -> unit) =
      fun (x7173 : 'tags this) ->
        fun (x7174 : string) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x7173) "numberingSystem"
            (Ojs.string_to_js x7174)
    let (get_unit : 'tags this -> string option) =
      fun (x7176 : 'tags this) ->
        Ojs.option_of_js Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x7176) "unit")
    let (set_unit : 'tags this -> string -> unit) =
      fun (x7179 : 'tags this) ->
        fun (x7180 : string) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x7179) "unit"
            (Ojs.string_to_js x7180)
    let (get_unitDisplay : 'tags this -> string option) =
      fun (x7182 : 'tags this) ->
        Ojs.option_of_js Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x7182) "unitDisplay")
    let (set_unitDisplay : 'tags this -> string -> unit) =
      fun (x7185 : 'tags this) ->
        fun (x7186 : string) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x7185) "unitDisplay"
            (Ojs.string_to_js x7186)
    let (get_currency : 'tags this -> string option) =
      fun (x7188 : 'tags this) ->
        Ojs.option_of_js Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x7188) "currency")
    let (set_currency : 'tags this -> string -> unit) =
      fun (x7191 : 'tags this) ->
        fun (x7192 : string) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x7191) "currency"
            (Ojs.string_to_js x7192)
    let (get_currencyDisplay : 'tags this -> string option) =
      fun (x7194 : 'tags this) ->
        Ojs.option_of_js Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x7194) "currencyDisplay")
    let (set_currencyDisplay : 'tags this -> string -> unit) =
      fun (x7197 : 'tags this) ->
        fun (x7198 : string) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x7197) "currencyDisplay"
            (Ojs.string_to_js x7198)
    let (get_useGrouping : 'tags this -> bool option) =
      fun (x7200 : 'tags this) ->
        Ojs.option_of_js Ojs.bool_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x7200) "useGrouping")
    let (set_useGrouping : 'tags this -> bool -> unit) =
      fun (x7203 : 'tags this) ->
        fun (x7204 : bool) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x7203) "useGrouping"
            (Ojs.bool_to_js x7204)
    let (get_minimumIntegerDigits :
      'tags this ->
        [ `L_n_1  | `L_n_10  | `L_n_11  | `L_n_12  | `L_n_13  | `L_n_14 
        | `L_n_15  | `L_n_16  | `L_n_17  | `L_n_18  | `L_n_19  | `L_n_2 
        | `L_n_20  | `L_n_21  | `L_n_3  | `L_n_4  | `L_n_5  | `L_n_6 
        | `L_n_7  | `L_n_8  | `L_n_9 ] option)
      =
      fun (x7206 : 'tags this) ->
        Ojs.option_of_js
          (fun (x7208 : Ojs.t) ->
             let x7209 = x7208 in
             match Ojs.int_of_js x7209 with
             | 1 -> `L_n_1
             | 10 -> `L_n_10
             | 11 -> `L_n_11
             | 12 -> `L_n_12
             | 13 -> `L_n_13
             | 14 -> `L_n_14
             | 15 -> `L_n_15
             | 16 -> `L_n_16
             | 17 -> `L_n_17
             | 18 -> `L_n_18
             | 19 -> `L_n_19
             | 2 -> `L_n_2
             | 20 -> `L_n_20
             | 21 -> `L_n_21
             | 3 -> `L_n_3
             | 4 -> `L_n_4
             | 5 -> `L_n_5
             | 6 -> `L_n_6
             | 7 -> `L_n_7
             | 8 -> `L_n_8
             | 9 -> `L_n_9
             | _ -> assert false)
          (Ojs.get_prop_ascii (this_to_js Obj.magic x7206)
             "minimumIntegerDigits")
    let (set_minimumIntegerDigits :
      'tags this ->
        [ `U1 of [ `L_n_1 ]  | `U2 of [ `L_n_2 ]  | `U3 of [ `L_n_3 ] 
        | `U4 of [ `L_n_4 ]  | `U5 of [ `L_n_5 ]  | `U6 of [ `L_n_6 ] 
        | `U7 of [ `L_n_7 ]  | `U8 of [ `L_n_8 ]  | `U9 of [ `L_n_9 ] 
        | `U10 of [ `L_n_10 ]  | `U11 of [ `L_n_11 ]  | `U12 of [ `L_n_12 ] 
        | `U13 of [ `L_n_13 ]  | `U14 of [ `L_n_14 ]  | `U15 of [ `L_n_15 ] 
        | `U16 of [ `L_n_16 ]  | `U17 of [ `L_n_17 ]  | `U18 of [ `L_n_18 ] 
        | `U19 of [ `L_n_19 ]  | `U20 of [ `L_n_20 ]  | `U21 of [ `L_n_21 ] ]
          -> unit)
      =
      fun (x7210 : 'tags this) ->
        fun
          (x7211 :
            [ `U1 of [ `L_n_1 ]  | `U2 of [ `L_n_2 ]  | `U3 of [ `L_n_3 ] 
            | `U4 of [ `L_n_4 ]  | `U5 of [ `L_n_5 ]  | `U6 of [ `L_n_6 ] 
            | `U7 of [ `L_n_7 ]  | `U8 of [ `L_n_8 ]  | `U9 of [ `L_n_9 ] 
            | `U10 of [ `L_n_10 ]  | `U11 of [ `L_n_11 ] 
            | `U12 of [ `L_n_12 ]  | `U13 of [ `L_n_13 ] 
            | `U14 of [ `L_n_14 ]  | `U15 of [ `L_n_15 ] 
            | `U16 of [ `L_n_16 ]  | `U17 of [ `L_n_17 ] 
            | `U18 of [ `L_n_18 ]  | `U19 of [ `L_n_19 ] 
            | `U20 of [ `L_n_20 ]  | `U21 of [ `L_n_21 ] ])
          ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x7210)
            "minimumIntegerDigits"
            (match x7211 with
             | `U1 x7212 -> (match x7212 with | `L_n_1 -> Ojs.int_to_js 1)
             | `U2 x7213 -> (match x7213 with | `L_n_2 -> Ojs.int_to_js 2)
             | `U3 x7214 -> (match x7214 with | `L_n_3 -> Ojs.int_to_js 3)
             | `U4 x7215 -> (match x7215 with | `L_n_4 -> Ojs.int_to_js 4)
             | `U5 x7216 -> (match x7216 with | `L_n_5 -> Ojs.int_to_js 5)
             | `U6 x7217 -> (match x7217 with | `L_n_6 -> Ojs.int_to_js 6)
             | `U7 x7218 -> (match x7218 with | `L_n_7 -> Ojs.int_to_js 7)
             | `U8 x7219 -> (match x7219 with | `L_n_8 -> Ojs.int_to_js 8)
             | `U9 x7220 -> (match x7220 with | `L_n_9 -> Ojs.int_to_js 9)
             | `U10 x7221 -> (match x7221 with | `L_n_10 -> Ojs.int_to_js 10)
             | `U11 x7222 -> (match x7222 with | `L_n_11 -> Ojs.int_to_js 11)
             | `U12 x7223 -> (match x7223 with | `L_n_12 -> Ojs.int_to_js 12)
             | `U13 x7224 -> (match x7224 with | `L_n_13 -> Ojs.int_to_js 13)
             | `U14 x7225 -> (match x7225 with | `L_n_14 -> Ojs.int_to_js 14)
             | `U15 x7226 -> (match x7226 with | `L_n_15 -> Ojs.int_to_js 15)
             | `U16 x7227 -> (match x7227 with | `L_n_16 -> Ojs.int_to_js 16)
             | `U17 x7228 -> (match x7228 with | `L_n_17 -> Ojs.int_to_js 17)
             | `U18 x7229 -> (match x7229 with | `L_n_18 -> Ojs.int_to_js 18)
             | `U19 x7230 -> (match x7230 with | `L_n_19 -> Ojs.int_to_js 19)
             | `U20 x7231 -> (match x7231 with | `L_n_20 -> Ojs.int_to_js 20)
             | `U21 x7232 -> (match x7232 with | `L_n_21 -> Ojs.int_to_js 21))
    let (get_minimumFractionDigits :
      'tags this ->
        [ `L_n_0  | `L_n_1  | `L_n_10  | `L_n_11  | `L_n_12  | `L_n_13 
        | `L_n_14  | `L_n_15  | `L_n_16  | `L_n_17  | `L_n_18  | `L_n_19 
        | `L_n_2  | `L_n_20  | `L_n_3  | `L_n_4  | `L_n_5  | `L_n_6 
        | `L_n_7  | `L_n_8  | `L_n_9 ] option)
      =
      fun (x7234 : 'tags this) ->
        Ojs.option_of_js
          (fun (x7236 : Ojs.t) ->
             let x7237 = x7236 in
             match Ojs.int_of_js x7237 with
             | 0 -> `L_n_0
             | 1 -> `L_n_1
             | 10 -> `L_n_10
             | 11 -> `L_n_11
             | 12 -> `L_n_12
             | 13 -> `L_n_13
             | 14 -> `L_n_14
             | 15 -> `L_n_15
             | 16 -> `L_n_16
             | 17 -> `L_n_17
             | 18 -> `L_n_18
             | 19 -> `L_n_19
             | 2 -> `L_n_2
             | 20 -> `L_n_20
             | 3 -> `L_n_3
             | 4 -> `L_n_4
             | 5 -> `L_n_5
             | 6 -> `L_n_6
             | 7 -> `L_n_7
             | 8 -> `L_n_8
             | 9 -> `L_n_9
             | _ -> assert false)
          (Ojs.get_prop_ascii (this_to_js Obj.magic x7234)
             "minimumFractionDigits")
    let (set_minimumFractionDigits :
      'tags this ->
        [ `U1 of [ `L_n_0 ]  | `U2 of [ `L_n_1 ]  | `U3 of [ `L_n_2 ] 
        | `U4 of [ `L_n_3 ]  | `U5 of [ `L_n_4 ]  | `U6 of [ `L_n_5 ] 
        | `U7 of [ `L_n_6 ]  | `U8 of [ `L_n_7 ]  | `U9 of [ `L_n_8 ] 
        | `U10 of [ `L_n_9 ]  | `U11 of [ `L_n_10 ]  | `U12 of [ `L_n_11 ] 
        | `U13 of [ `L_n_12 ]  | `U14 of [ `L_n_13 ]  | `U15 of [ `L_n_14 ] 
        | `U16 of [ `L_n_15 ]  | `U17 of [ `L_n_16 ]  | `U18 of [ `L_n_17 ] 
        | `U19 of [ `L_n_18 ]  | `U20 of [ `L_n_19 ]  | `U21 of [ `L_n_20 ] ]
          -> unit)
      =
      fun (x7238 : 'tags this) ->
        fun
          (x7239 :
            [ `U1 of [ `L_n_0 ]  | `U2 of [ `L_n_1 ]  | `U3 of [ `L_n_2 ] 
            | `U4 of [ `L_n_3 ]  | `U5 of [ `L_n_4 ]  | `U6 of [ `L_n_5 ] 
            | `U7 of [ `L_n_6 ]  | `U8 of [ `L_n_7 ]  | `U9 of [ `L_n_8 ] 
            | `U10 of [ `L_n_9 ]  | `U11 of [ `L_n_10 ] 
            | `U12 of [ `L_n_11 ]  | `U13 of [ `L_n_12 ] 
            | `U14 of [ `L_n_13 ]  | `U15 of [ `L_n_14 ] 
            | `U16 of [ `L_n_15 ]  | `U17 of [ `L_n_16 ] 
            | `U18 of [ `L_n_17 ]  | `U19 of [ `L_n_18 ] 
            | `U20 of [ `L_n_19 ]  | `U21 of [ `L_n_20 ] ])
          ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x7238)
            "minimumFractionDigits"
            (match x7239 with
             | `U1 x7240 -> (match x7240 with | `L_n_0 -> Ojs.int_to_js 0)
             | `U2 x7241 -> (match x7241 with | `L_n_1 -> Ojs.int_to_js 1)
             | `U3 x7242 -> (match x7242 with | `L_n_2 -> Ojs.int_to_js 2)
             | `U4 x7243 -> (match x7243 with | `L_n_3 -> Ojs.int_to_js 3)
             | `U5 x7244 -> (match x7244 with | `L_n_4 -> Ojs.int_to_js 4)
             | `U6 x7245 -> (match x7245 with | `L_n_5 -> Ojs.int_to_js 5)
             | `U7 x7246 -> (match x7246 with | `L_n_6 -> Ojs.int_to_js 6)
             | `U8 x7247 -> (match x7247 with | `L_n_7 -> Ojs.int_to_js 7)
             | `U9 x7248 -> (match x7248 with | `L_n_8 -> Ojs.int_to_js 8)
             | `U10 x7249 -> (match x7249 with | `L_n_9 -> Ojs.int_to_js 9)
             | `U11 x7250 -> (match x7250 with | `L_n_10 -> Ojs.int_to_js 10)
             | `U12 x7251 -> (match x7251 with | `L_n_11 -> Ojs.int_to_js 11)
             | `U13 x7252 -> (match x7252 with | `L_n_12 -> Ojs.int_to_js 12)
             | `U14 x7253 -> (match x7253 with | `L_n_13 -> Ojs.int_to_js 13)
             | `U15 x7254 -> (match x7254 with | `L_n_14 -> Ojs.int_to_js 14)
             | `U16 x7255 -> (match x7255 with | `L_n_15 -> Ojs.int_to_js 15)
             | `U17 x7256 -> (match x7256 with | `L_n_16 -> Ojs.int_to_js 16)
             | `U18 x7257 -> (match x7257 with | `L_n_17 -> Ojs.int_to_js 17)
             | `U19 x7258 -> (match x7258 with | `L_n_18 -> Ojs.int_to_js 18)
             | `U20 x7259 -> (match x7259 with | `L_n_19 -> Ojs.int_to_js 19)
             | `U21 x7260 -> (match x7260 with | `L_n_20 -> Ojs.int_to_js 20))
    let (get_maximumFractionDigits :
      'tags this ->
        [ `L_n_0  | `L_n_1  | `L_n_10  | `L_n_11  | `L_n_12  | `L_n_13 
        | `L_n_14  | `L_n_15  | `L_n_16  | `L_n_17  | `L_n_18  | `L_n_19 
        | `L_n_2  | `L_n_20  | `L_n_3  | `L_n_4  | `L_n_5  | `L_n_6 
        | `L_n_7  | `L_n_8  | `L_n_9 ] option)
      =
      fun (x7262 : 'tags this) ->
        Ojs.option_of_js
          (fun (x7264 : Ojs.t) ->
             let x7265 = x7264 in
             match Ojs.int_of_js x7265 with
             | 0 -> `L_n_0
             | 1 -> `L_n_1
             | 10 -> `L_n_10
             | 11 -> `L_n_11
             | 12 -> `L_n_12
             | 13 -> `L_n_13
             | 14 -> `L_n_14
             | 15 -> `L_n_15
             | 16 -> `L_n_16
             | 17 -> `L_n_17
             | 18 -> `L_n_18
             | 19 -> `L_n_19
             | 2 -> `L_n_2
             | 20 -> `L_n_20
             | 3 -> `L_n_3
             | 4 -> `L_n_4
             | 5 -> `L_n_5
             | 6 -> `L_n_6
             | 7 -> `L_n_7
             | 8 -> `L_n_8
             | 9 -> `L_n_9
             | _ -> assert false)
          (Ojs.get_prop_ascii (this_to_js Obj.magic x7262)
             "maximumFractionDigits")
    let (set_maximumFractionDigits :
      'tags this ->
        [ `U1 of [ `L_n_0 ]  | `U2 of [ `L_n_1 ]  | `U3 of [ `L_n_2 ] 
        | `U4 of [ `L_n_3 ]  | `U5 of [ `L_n_4 ]  | `U6 of [ `L_n_5 ] 
        | `U7 of [ `L_n_6 ]  | `U8 of [ `L_n_7 ]  | `U9 of [ `L_n_8 ] 
        | `U10 of [ `L_n_9 ]  | `U11 of [ `L_n_10 ]  | `U12 of [ `L_n_11 ] 
        | `U13 of [ `L_n_12 ]  | `U14 of [ `L_n_13 ]  | `U15 of [ `L_n_14 ] 
        | `U16 of [ `L_n_15 ]  | `U17 of [ `L_n_16 ]  | `U18 of [ `L_n_17 ] 
        | `U19 of [ `L_n_18 ]  | `U20 of [ `L_n_19 ]  | `U21 of [ `L_n_20 ] ]
          -> unit)
      =
      fun (x7266 : 'tags this) ->
        fun
          (x7267 :
            [ `U1 of [ `L_n_0 ]  | `U2 of [ `L_n_1 ]  | `U3 of [ `L_n_2 ] 
            | `U4 of [ `L_n_3 ]  | `U5 of [ `L_n_4 ]  | `U6 of [ `L_n_5 ] 
            | `U7 of [ `L_n_6 ]  | `U8 of [ `L_n_7 ]  | `U9 of [ `L_n_8 ] 
            | `U10 of [ `L_n_9 ]  | `U11 of [ `L_n_10 ] 
            | `U12 of [ `L_n_11 ]  | `U13 of [ `L_n_12 ] 
            | `U14 of [ `L_n_13 ]  | `U15 of [ `L_n_14 ] 
            | `U16 of [ `L_n_15 ]  | `U17 of [ `L_n_16 ] 
            | `U18 of [ `L_n_17 ]  | `U19 of [ `L_n_18 ] 
            | `U20 of [ `L_n_19 ]  | `U21 of [ `L_n_20 ] ])
          ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x7266)
            "maximumFractionDigits"
            (match x7267 with
             | `U1 x7268 -> (match x7268 with | `L_n_0 -> Ojs.int_to_js 0)
             | `U2 x7269 -> (match x7269 with | `L_n_1 -> Ojs.int_to_js 1)
             | `U3 x7270 -> (match x7270 with | `L_n_2 -> Ojs.int_to_js 2)
             | `U4 x7271 -> (match x7271 with | `L_n_3 -> Ojs.int_to_js 3)
             | `U5 x7272 -> (match x7272 with | `L_n_4 -> Ojs.int_to_js 4)
             | `U6 x7273 -> (match x7273 with | `L_n_5 -> Ojs.int_to_js 5)
             | `U7 x7274 -> (match x7274 with | `L_n_6 -> Ojs.int_to_js 6)
             | `U8 x7275 -> (match x7275 with | `L_n_7 -> Ojs.int_to_js 7)
             | `U9 x7276 -> (match x7276 with | `L_n_8 -> Ojs.int_to_js 8)
             | `U10 x7277 -> (match x7277 with | `L_n_9 -> Ojs.int_to_js 9)
             | `U11 x7278 -> (match x7278 with | `L_n_10 -> Ojs.int_to_js 10)
             | `U12 x7279 -> (match x7279 with | `L_n_11 -> Ojs.int_to_js 11)
             | `U13 x7280 -> (match x7280 with | `L_n_12 -> Ojs.int_to_js 12)
             | `U14 x7281 -> (match x7281 with | `L_n_13 -> Ojs.int_to_js 13)
             | `U15 x7282 -> (match x7282 with | `L_n_14 -> Ojs.int_to_js 14)
             | `U16 x7283 -> (match x7283 with | `L_n_15 -> Ojs.int_to_js 15)
             | `U17 x7284 -> (match x7284 with | `L_n_16 -> Ojs.int_to_js 16)
             | `U18 x7285 -> (match x7285 with | `L_n_17 -> Ojs.int_to_js 17)
             | `U19 x7286 -> (match x7286 with | `L_n_18 -> Ojs.int_to_js 18)
             | `U20 x7287 -> (match x7287 with | `L_n_19 -> Ojs.int_to_js 19)
             | `U21 x7288 -> (match x7288 with | `L_n_20 -> Ojs.int_to_js 20))
    let (get_minimumSignificantDigits :
      'tags this ->
        [ `L_n_1  | `L_n_10  | `L_n_11  | `L_n_12  | `L_n_13  | `L_n_14 
        | `L_n_15  | `L_n_16  | `L_n_17  | `L_n_18  | `L_n_19  | `L_n_2 
        | `L_n_20  | `L_n_21  | `L_n_3  | `L_n_4  | `L_n_5  | `L_n_6 
        | `L_n_7  | `L_n_8  | `L_n_9 ] option)
      =
      fun (x7290 : 'tags this) ->
        Ojs.option_of_js
          (fun (x7292 : Ojs.t) ->
             let x7293 = x7292 in
             match Ojs.int_of_js x7293 with
             | 1 -> `L_n_1
             | 10 -> `L_n_10
             | 11 -> `L_n_11
             | 12 -> `L_n_12
             | 13 -> `L_n_13
             | 14 -> `L_n_14
             | 15 -> `L_n_15
             | 16 -> `L_n_16
             | 17 -> `L_n_17
             | 18 -> `L_n_18
             | 19 -> `L_n_19
             | 2 -> `L_n_2
             | 20 -> `L_n_20
             | 21 -> `L_n_21
             | 3 -> `L_n_3
             | 4 -> `L_n_4
             | 5 -> `L_n_5
             | 6 -> `L_n_6
             | 7 -> `L_n_7
             | 8 -> `L_n_8
             | 9 -> `L_n_9
             | _ -> assert false)
          (Ojs.get_prop_ascii (this_to_js Obj.magic x7290)
             "minimumSignificantDigits")
    let (set_minimumSignificantDigits :
      'tags this ->
        [ `U1 of [ `L_n_1 ]  | `U2 of [ `L_n_2 ]  | `U3 of [ `L_n_3 ] 
        | `U4 of [ `L_n_4 ]  | `U5 of [ `L_n_5 ]  | `U6 of [ `L_n_6 ] 
        | `U7 of [ `L_n_7 ]  | `U8 of [ `L_n_8 ]  | `U9 of [ `L_n_9 ] 
        | `U10 of [ `L_n_10 ]  | `U11 of [ `L_n_11 ]  | `U12 of [ `L_n_12 ] 
        | `U13 of [ `L_n_13 ]  | `U14 of [ `L_n_14 ]  | `U15 of [ `L_n_15 ] 
        | `U16 of [ `L_n_16 ]  | `U17 of [ `L_n_17 ]  | `U18 of [ `L_n_18 ] 
        | `U19 of [ `L_n_19 ]  | `U20 of [ `L_n_20 ]  | `U21 of [ `L_n_21 ] ]
          -> unit)
      =
      fun (x7294 : 'tags this) ->
        fun
          (x7295 :
            [ `U1 of [ `L_n_1 ]  | `U2 of [ `L_n_2 ]  | `U3 of [ `L_n_3 ] 
            | `U4 of [ `L_n_4 ]  | `U5 of [ `L_n_5 ]  | `U6 of [ `L_n_6 ] 
            | `U7 of [ `L_n_7 ]  | `U8 of [ `L_n_8 ]  | `U9 of [ `L_n_9 ] 
            | `U10 of [ `L_n_10 ]  | `U11 of [ `L_n_11 ] 
            | `U12 of [ `L_n_12 ]  | `U13 of [ `L_n_13 ] 
            | `U14 of [ `L_n_14 ]  | `U15 of [ `L_n_15 ] 
            | `U16 of [ `L_n_16 ]  | `U17 of [ `L_n_17 ] 
            | `U18 of [ `L_n_18 ]  | `U19 of [ `L_n_19 ] 
            | `U20 of [ `L_n_20 ]  | `U21 of [ `L_n_21 ] ])
          ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x7294)
            "minimumSignificantDigits"
            (match x7295 with
             | `U1 x7296 -> (match x7296 with | `L_n_1 -> Ojs.int_to_js 1)
             | `U2 x7297 -> (match x7297 with | `L_n_2 -> Ojs.int_to_js 2)
             | `U3 x7298 -> (match x7298 with | `L_n_3 -> Ojs.int_to_js 3)
             | `U4 x7299 -> (match x7299 with | `L_n_4 -> Ojs.int_to_js 4)
             | `U5 x7300 -> (match x7300 with | `L_n_5 -> Ojs.int_to_js 5)
             | `U6 x7301 -> (match x7301 with | `L_n_6 -> Ojs.int_to_js 6)
             | `U7 x7302 -> (match x7302 with | `L_n_7 -> Ojs.int_to_js 7)
             | `U8 x7303 -> (match x7303 with | `L_n_8 -> Ojs.int_to_js 8)
             | `U9 x7304 -> (match x7304 with | `L_n_9 -> Ojs.int_to_js 9)
             | `U10 x7305 -> (match x7305 with | `L_n_10 -> Ojs.int_to_js 10)
             | `U11 x7306 -> (match x7306 with | `L_n_11 -> Ojs.int_to_js 11)
             | `U12 x7307 -> (match x7307 with | `L_n_12 -> Ojs.int_to_js 12)
             | `U13 x7308 -> (match x7308 with | `L_n_13 -> Ojs.int_to_js 13)
             | `U14 x7309 -> (match x7309 with | `L_n_14 -> Ojs.int_to_js 14)
             | `U15 x7310 -> (match x7310 with | `L_n_15 -> Ojs.int_to_js 15)
             | `U16 x7311 -> (match x7311 with | `L_n_16 -> Ojs.int_to_js 16)
             | `U17 x7312 -> (match x7312 with | `L_n_17 -> Ojs.int_to_js 17)
             | `U18 x7313 -> (match x7313 with | `L_n_18 -> Ojs.int_to_js 18)
             | `U19 x7314 -> (match x7314 with | `L_n_19 -> Ojs.int_to_js 19)
             | `U20 x7315 -> (match x7315 with | `L_n_20 -> Ojs.int_to_js 20)
             | `U21 x7316 -> (match x7316 with | `L_n_21 -> Ojs.int_to_js 21))
    let (get_maximumSignificantDigits :
      'tags this ->
        [ `L_n_1  | `L_n_10  | `L_n_11  | `L_n_12  | `L_n_13  | `L_n_14 
        | `L_n_15  | `L_n_16  | `L_n_17  | `L_n_18  | `L_n_19  | `L_n_2 
        | `L_n_20  | `L_n_21  | `L_n_3  | `L_n_4  | `L_n_5  | `L_n_6 
        | `L_n_7  | `L_n_8  | `L_n_9 ] option)
      =
      fun (x7318 : 'tags this) ->
        Ojs.option_of_js
          (fun (x7320 : Ojs.t) ->
             let x7321 = x7320 in
             match Ojs.int_of_js x7321 with
             | 1 -> `L_n_1
             | 10 -> `L_n_10
             | 11 -> `L_n_11
             | 12 -> `L_n_12
             | 13 -> `L_n_13
             | 14 -> `L_n_14
             | 15 -> `L_n_15
             | 16 -> `L_n_16
             | 17 -> `L_n_17
             | 18 -> `L_n_18
             | 19 -> `L_n_19
             | 2 -> `L_n_2
             | 20 -> `L_n_20
             | 21 -> `L_n_21
             | 3 -> `L_n_3
             | 4 -> `L_n_4
             | 5 -> `L_n_5
             | 6 -> `L_n_6
             | 7 -> `L_n_7
             | 8 -> `L_n_8
             | 9 -> `L_n_9
             | _ -> assert false)
          (Ojs.get_prop_ascii (this_to_js Obj.magic x7318)
             "maximumSignificantDigits")
    let (set_maximumSignificantDigits :
      'tags this ->
        [ `U1 of [ `L_n_1 ]  | `U2 of [ `L_n_2 ]  | `U3 of [ `L_n_3 ] 
        | `U4 of [ `L_n_4 ]  | `U5 of [ `L_n_5 ]  | `U6 of [ `L_n_6 ] 
        | `U7 of [ `L_n_7 ]  | `U8 of [ `L_n_8 ]  | `U9 of [ `L_n_9 ] 
        | `U10 of [ `L_n_10 ]  | `U11 of [ `L_n_11 ]  | `U12 of [ `L_n_12 ] 
        | `U13 of [ `L_n_13 ]  | `U14 of [ `L_n_14 ]  | `U15 of [ `L_n_15 ] 
        | `U16 of [ `L_n_16 ]  | `U17 of [ `L_n_17 ]  | `U18 of [ `L_n_18 ] 
        | `U19 of [ `L_n_19 ]  | `U20 of [ `L_n_20 ]  | `U21 of [ `L_n_21 ] ]
          -> unit)
      =
      fun (x7322 : 'tags this) ->
        fun
          (x7323 :
            [ `U1 of [ `L_n_1 ]  | `U2 of [ `L_n_2 ]  | `U3 of [ `L_n_3 ] 
            | `U4 of [ `L_n_4 ]  | `U5 of [ `L_n_5 ]  | `U6 of [ `L_n_6 ] 
            | `U7 of [ `L_n_7 ]  | `U8 of [ `L_n_8 ]  | `U9 of [ `L_n_9 ] 
            | `U10 of [ `L_n_10 ]  | `U11 of [ `L_n_11 ] 
            | `U12 of [ `L_n_12 ]  | `U13 of [ `L_n_13 ] 
            | `U14 of [ `L_n_14 ]  | `U15 of [ `L_n_15 ] 
            | `U16 of [ `L_n_16 ]  | `U17 of [ `L_n_17 ] 
            | `U18 of [ `L_n_18 ]  | `U19 of [ `L_n_19 ] 
            | `U20 of [ `L_n_20 ]  | `U21 of [ `L_n_21 ] ])
          ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x7322)
            "maximumSignificantDigits"
            (match x7323 with
             | `U1 x7324 -> (match x7324 with | `L_n_1 -> Ojs.int_to_js 1)
             | `U2 x7325 -> (match x7325 with | `L_n_2 -> Ojs.int_to_js 2)
             | `U3 x7326 -> (match x7326 with | `L_n_3 -> Ojs.int_to_js 3)
             | `U4 x7327 -> (match x7327 with | `L_n_4 -> Ojs.int_to_js 4)
             | `U5 x7328 -> (match x7328 with | `L_n_5 -> Ojs.int_to_js 5)
             | `U6 x7329 -> (match x7329 with | `L_n_6 -> Ojs.int_to_js 6)
             | `U7 x7330 -> (match x7330 with | `L_n_7 -> Ojs.int_to_js 7)
             | `U8 x7331 -> (match x7331 with | `L_n_8 -> Ojs.int_to_js 8)
             | `U9 x7332 -> (match x7332 with | `L_n_9 -> Ojs.int_to_js 9)
             | `U10 x7333 -> (match x7333 with | `L_n_10 -> Ojs.int_to_js 10)
             | `U11 x7334 -> (match x7334 with | `L_n_11 -> Ojs.int_to_js 11)
             | `U12 x7335 -> (match x7335 with | `L_n_12 -> Ojs.int_to_js 12)
             | `U13 x7336 -> (match x7336 with | `L_n_13 -> Ojs.int_to_js 13)
             | `U14 x7337 -> (match x7337 with | `L_n_14 -> Ojs.int_to_js 14)
             | `U15 x7338 -> (match x7338 with | `L_n_15 -> Ojs.int_to_js 15)
             | `U16 x7339 -> (match x7339 with | `L_n_16 -> Ojs.int_to_js 16)
             | `U17 x7340 -> (match x7340 with | `L_n_17 -> Ojs.int_to_js 17)
             | `U18 x7341 -> (match x7341 with | `L_n_18 -> Ojs.int_to_js 18)
             | `U19 x7342 -> (match x7342 with | `L_n_19 -> Ojs.int_to_js 19)
             | `U20 x7343 -> (match x7343 with | `L_n_20 -> Ojs.int_to_js 20)
             | `U21 x7344 -> (match x7344 with | `L_n_21 -> Ojs.int_to_js 21))
    let (get_notation : 'tags this -> string option) =
      fun (x7346 : 'tags this) ->
        Ojs.option_of_js Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x7346) "notation")
    let (set_notation : 'tags this -> string -> unit) =
      fun (x7349 : 'tags this) ->
        fun (x7350 : string) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x7349) "notation"
            (Ojs.string_to_js x7350)
    let (get_compactDisplay : 'tags this -> string option) =
      fun (x7352 : 'tags this) ->
        Ojs.option_of_js Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x7352) "compactDisplay")
    let (set_compactDisplay : 'tags this -> string -> unit) =
      fun (x7355 : 'tags this) ->
        fun (x7356 : string) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x7355) "compactDisplay"
            (Ojs.string_to_js x7356)
    let (create :
      ?localeMatcher:string ->
        ?style:string ->
          ?numberingSystem:string ->
            ?unit:string ->
              ?unitDisplay:string ->
                ?currency:string ->
                  ?currencyDisplay:string ->
                    ?useGrouping:bool ->
                      ?minimumIntegerDigits:[ `L_n_1  | `L_n_10  | `L_n_11 
                                            | `L_n_12  | `L_n_13  | `L_n_14 
                                            | `L_n_15  | `L_n_16  | `L_n_17 
                                            | `L_n_18  | `L_n_19  | `L_n_2 
                                            | `L_n_20  | `L_n_21  | `L_n_3 
                                            | `L_n_4  | `L_n_5  | `L_n_6 
                                            | `L_n_7  | `L_n_8  | `L_n_9 ]
                        ->
                        ?minimumFractionDigits:[ `L_n_0  | `L_n_1  | 
                                                 `L_n_10 
                                               | `L_n_11  | `L_n_12 
                                               | `L_n_13  | `L_n_14 
                                               | `L_n_15  | `L_n_16 
                                               | `L_n_17  | `L_n_18 
                                               | `L_n_19  | `L_n_2 
                                               | `L_n_20  | `L_n_3  | 
                                                 `L_n_4 
                                               | `L_n_5  | `L_n_6  | 
                                                 `L_n_7 
                                               | `L_n_8  | `L_n_9 ]
                          ->
                          ?maximumFractionDigits:[ `L_n_0  | `L_n_1 
                                                 | `L_n_10  | `L_n_11 
                                                 | `L_n_12  | `L_n_13 
                                                 | `L_n_14  | `L_n_15 
                                                 | `L_n_16  | `L_n_17 
                                                 | `L_n_18  | `L_n_19 
                                                 | `L_n_2  | `L_n_20 
                                                 | `L_n_3  | `L_n_4 
                                                 | `L_n_5  | `L_n_6 
                                                 | `L_n_7  | `L_n_8 
                                                 | `L_n_9 ]
                            ->
                            ?minimumSignificantDigits:[ `L_n_1  | `L_n_10 
                                                      | `L_n_11  | `L_n_12 
                                                      | `L_n_13  | `L_n_14 
                                                      | `L_n_15  | `L_n_16 
                                                      | `L_n_17  | `L_n_18 
                                                      | `L_n_19  | `L_n_2 
                                                      | `L_n_20  | `L_n_21 
                                                      | `L_n_3  | `L_n_4 
                                                      | `L_n_5  | `L_n_6 
                                                      | `L_n_7  | `L_n_8 
                                                      | `L_n_9 ]
                              ->
                              ?maximumSignificantDigits:[ `L_n_1  | `L_n_10 
                                                        | `L_n_11  | 
                                                          `L_n_12 
                                                        | `L_n_13  | 
                                                          `L_n_14 
                                                        | `L_n_15  | 
                                                          `L_n_16 
                                                        | `L_n_17  | 
                                                          `L_n_18 
                                                        | `L_n_19  | 
                                                          `L_n_2 
                                                        | `L_n_20  | 
                                                          `L_n_21 
                                                        | `L_n_3  | `L_n_4 
                                                        | `L_n_5  | `L_n_6 
                                                        | `L_n_7  | `L_n_8 
                                                        | `L_n_9 ]
                                ->
                                ?notation:string ->
                                  ?compactDisplay:string -> unit -> t)
      =
      fun ?localeMatcher:(x7358 : string option) ->
        fun ?style:(x7359 : string option) ->
          fun ?numberingSystem:(x7360 : string option) ->
            fun ?unit:(x7361 : string option) ->
              fun ?unitDisplay:(x7362 : string option) ->
                fun ?currency:(x7363 : string option) ->
                  fun ?currencyDisplay:(x7364 : string option) ->
                    fun ?useGrouping:(x7365 : bool option) ->
                      fun
                        ?minimumIntegerDigits:(x7366 :
                                                [ `L_n_1  | `L_n_10 
                                                | `L_n_11  | `L_n_12 
                                                | `L_n_13  | `L_n_14 
                                                | `L_n_15  | `L_n_16 
                                                | `L_n_17  | `L_n_18 
                                                | `L_n_19  | `L_n_2 
                                                | `L_n_20  | `L_n_21 
                                                | `L_n_3  | `L_n_4  | 
                                                  `L_n_5 
                                                | `L_n_6  | `L_n_7  | 
                                                  `L_n_8 
                                                | `L_n_9 ] option)
                        ->
                        fun
                          ?minimumFractionDigits:(x7367 :
                                                   [ `L_n_0  | `L_n_1 
                                                   | `L_n_10  | `L_n_11 
                                                   | `L_n_12  | `L_n_13 
                                                   | `L_n_14  | `L_n_15 
                                                   | `L_n_16  | `L_n_17 
                                                   | `L_n_18  | `L_n_19 
                                                   | `L_n_2  | `L_n_20 
                                                   | `L_n_3  | `L_n_4 
                                                   | `L_n_5  | `L_n_6 
                                                   | `L_n_7  | `L_n_8 
                                                   | `L_n_9 ] option)
                          ->
                          fun
                            ?maximumFractionDigits:(x7368 :
                                                     [ `L_n_0  | `L_n_1 
                                                     | `L_n_10  | `L_n_11 
                                                     | `L_n_12  | `L_n_13 
                                                     | `L_n_14  | `L_n_15 
                                                     | `L_n_16  | `L_n_17 
                                                     | `L_n_18  | `L_n_19 
                                                     | `L_n_2  | `L_n_20 
                                                     | `L_n_3  | `L_n_4 
                                                     | `L_n_5  | `L_n_6 
                                                     | `L_n_7  | `L_n_8 
                                                     | `L_n_9 ] option)
                            ->
                            fun
                              ?minimumSignificantDigits:(x7369 :
                                                          [ `L_n_1 
                                                          | `L_n_10 
                                                          | `L_n_11 
                                                          | `L_n_12 
                                                          | `L_n_13 
                                                          | `L_n_14 
                                                          | `L_n_15 
                                                          | `L_n_16 
                                                          | `L_n_17 
                                                          | `L_n_18 
                                                          | `L_n_19 
                                                          | `L_n_2 
                                                          | `L_n_20 
                                                          | `L_n_21 
                                                          | `L_n_3  | 
                                                            `L_n_4 
                                                          | `L_n_5  | 
                                                            `L_n_6 
                                                          | `L_n_7  | 
                                                            `L_n_8 
                                                          | `L_n_9 ] option)
                              ->
                              fun
                                ?maximumSignificantDigits:(x7370 :
                                                            [ `L_n_1 
                                                            | `L_n_10 
                                                            | `L_n_11 
                                                            | `L_n_12 
                                                            | `L_n_13 
                                                            | `L_n_14 
                                                            | `L_n_15 
                                                            | `L_n_16 
                                                            | `L_n_17 
                                                            | `L_n_18 
                                                            | `L_n_19 
                                                            | `L_n_2 
                                                            | `L_n_20 
                                                            | `L_n_21 
                                                            | `L_n_3 
                                                            | `L_n_4 
                                                            | `L_n_5 
                                                            | `L_n_6 
                                                            | `L_n_7 
                                                            | `L_n_8 
                                                            | `L_n_9 ] option)
                                ->
                                fun ?notation:(x7371 : string option) ->
                                  fun ?compactDisplay:(x7372 : string option)
                                    ->
                                    fun () ->
                                      let x7373 = Ojs.empty_obj () in
                                      (match x7358 with
                                       | Some x7388 ->
                                           Ojs.set_prop_ascii x7373
                                             "localeMatcher"
                                             (Ojs.string_to_js x7388)
                                       | None -> ());
                                      (match x7359 with
                                       | Some x7387 ->
                                           Ojs.set_prop_ascii x7373 "style"
                                             (Ojs.string_to_js x7387)
                                       | None -> ());
                                      (match x7360 with
                                       | Some x7386 ->
                                           Ojs.set_prop_ascii x7373
                                             "numberingSystem"
                                             (Ojs.string_to_js x7386)
                                       | None -> ());
                                      (match x7361 with
                                       | Some x7385 ->
                                           Ojs.set_prop_ascii x7373 "unit"
                                             (Ojs.string_to_js x7385)
                                       | None -> ());
                                      (match x7362 with
                                       | Some x7384 ->
                                           Ojs.set_prop_ascii x7373
                                             "unitDisplay"
                                             (Ojs.string_to_js x7384)
                                       | None -> ());
                                      (match x7363 with
                                       | Some x7383 ->
                                           Ojs.set_prop_ascii x7373
                                             "currency"
                                             (Ojs.string_to_js x7383)
                                       | None -> ());
                                      (match x7364 with
                                       | Some x7382 ->
                                           Ojs.set_prop_ascii x7373
                                             "currencyDisplay"
                                             (Ojs.string_to_js x7382)
                                       | None -> ());
                                      (match x7365 with
                                       | Some x7381 ->
                                           Ojs.set_prop_ascii x7373
                                             "useGrouping"
                                             (Ojs.bool_to_js x7381)
                                       | None -> ());
                                      (match x7366 with
                                       | Some x7380 ->
                                           Ojs.set_prop_ascii x7373
                                             "minimumIntegerDigits"
                                             (match x7380 with
                                              | `L_n_1 -> Ojs.int_to_js 1
                                              | `L_n_10 -> Ojs.int_to_js 10
                                              | `L_n_11 -> Ojs.int_to_js 11
                                              | `L_n_12 -> Ojs.int_to_js 12
                                              | `L_n_13 -> Ojs.int_to_js 13
                                              | `L_n_14 -> Ojs.int_to_js 14
                                              | `L_n_15 -> Ojs.int_to_js 15
                                              | `L_n_16 -> Ojs.int_to_js 16
                                              | `L_n_17 -> Ojs.int_to_js 17
                                              | `L_n_18 -> Ojs.int_to_js 18
                                              | `L_n_19 -> Ojs.int_to_js 19
                                              | `L_n_2 -> Ojs.int_to_js 2
                                              | `L_n_20 -> Ojs.int_to_js 20
                                              | `L_n_21 -> Ojs.int_to_js 21
                                              | `L_n_3 -> Ojs.int_to_js 3
                                              | `L_n_4 -> Ojs.int_to_js 4
                                              | `L_n_5 -> Ojs.int_to_js 5
                                              | `L_n_6 -> Ojs.int_to_js 6
                                              | `L_n_7 -> Ojs.int_to_js 7
                                              | `L_n_8 -> Ojs.int_to_js 8
                                              | `L_n_9 -> Ojs.int_to_js 9)
                                       | None -> ());
                                      (match x7367 with
                                       | Some x7379 ->
                                           Ojs.set_prop_ascii x7373
                                             "minimumFractionDigits"
                                             (match x7379 with
                                              | `L_n_0 -> Ojs.int_to_js 0
                                              | `L_n_1 -> Ojs.int_to_js 1
                                              | `L_n_10 -> Ojs.int_to_js 10
                                              | `L_n_11 -> Ojs.int_to_js 11
                                              | `L_n_12 -> Ojs.int_to_js 12
                                              | `L_n_13 -> Ojs.int_to_js 13
                                              | `L_n_14 -> Ojs.int_to_js 14
                                              | `L_n_15 -> Ojs.int_to_js 15
                                              | `L_n_16 -> Ojs.int_to_js 16
                                              | `L_n_17 -> Ojs.int_to_js 17
                                              | `L_n_18 -> Ojs.int_to_js 18
                                              | `L_n_19 -> Ojs.int_to_js 19
                                              | `L_n_2 -> Ojs.int_to_js 2
                                              | `L_n_20 -> Ojs.int_to_js 20
                                              | `L_n_3 -> Ojs.int_to_js 3
                                              | `L_n_4 -> Ojs.int_to_js 4
                                              | `L_n_5 -> Ojs.int_to_js 5
                                              | `L_n_6 -> Ojs.int_to_js 6
                                              | `L_n_7 -> Ojs.int_to_js 7
                                              | `L_n_8 -> Ojs.int_to_js 8
                                              | `L_n_9 -> Ojs.int_to_js 9)
                                       | None -> ());
                                      (match x7368 with
                                       | Some x7378 ->
                                           Ojs.set_prop_ascii x7373
                                             "maximumFractionDigits"
                                             (match x7378 with
                                              | `L_n_0 -> Ojs.int_to_js 0
                                              | `L_n_1 -> Ojs.int_to_js 1
                                              | `L_n_10 -> Ojs.int_to_js 10
                                              | `L_n_11 -> Ojs.int_to_js 11
                                              | `L_n_12 -> Ojs.int_to_js 12
                                              | `L_n_13 -> Ojs.int_to_js 13
                                              | `L_n_14 -> Ojs.int_to_js 14
                                              | `L_n_15 -> Ojs.int_to_js 15
                                              | `L_n_16 -> Ojs.int_to_js 16
                                              | `L_n_17 -> Ojs.int_to_js 17
                                              | `L_n_18 -> Ojs.int_to_js 18
                                              | `L_n_19 -> Ojs.int_to_js 19
                                              | `L_n_2 -> Ojs.int_to_js 2
                                              | `L_n_20 -> Ojs.int_to_js 20
                                              | `L_n_3 -> Ojs.int_to_js 3
                                              | `L_n_4 -> Ojs.int_to_js 4
                                              | `L_n_5 -> Ojs.int_to_js 5
                                              | `L_n_6 -> Ojs.int_to_js 6
                                              | `L_n_7 -> Ojs.int_to_js 7
                                              | `L_n_8 -> Ojs.int_to_js 8
                                              | `L_n_9 -> Ojs.int_to_js 9)
                                       | None -> ());
                                      (match x7369 with
                                       | Some x7377 ->
                                           Ojs.set_prop_ascii x7373
                                             "minimumSignificantDigits"
                                             (match x7377 with
                                              | `L_n_1 -> Ojs.int_to_js 1
                                              | `L_n_10 -> Ojs.int_to_js 10
                                              | `L_n_11 -> Ojs.int_to_js 11
                                              | `L_n_12 -> Ojs.int_to_js 12
                                              | `L_n_13 -> Ojs.int_to_js 13
                                              | `L_n_14 -> Ojs.int_to_js 14
                                              | `L_n_15 -> Ojs.int_to_js 15
                                              | `L_n_16 -> Ojs.int_to_js 16
                                              | `L_n_17 -> Ojs.int_to_js 17
                                              | `L_n_18 -> Ojs.int_to_js 18
                                              | `L_n_19 -> Ojs.int_to_js 19
                                              | `L_n_2 -> Ojs.int_to_js 2
                                              | `L_n_20 -> Ojs.int_to_js 20
                                              | `L_n_21 -> Ojs.int_to_js 21
                                              | `L_n_3 -> Ojs.int_to_js 3
                                              | `L_n_4 -> Ojs.int_to_js 4
                                              | `L_n_5 -> Ojs.int_to_js 5
                                              | `L_n_6 -> Ojs.int_to_js 6
                                              | `L_n_7 -> Ojs.int_to_js 7
                                              | `L_n_8 -> Ojs.int_to_js 8
                                              | `L_n_9 -> Ojs.int_to_js 9)
                                       | None -> ());
                                      (match x7370 with
                                       | Some x7376 ->
                                           Ojs.set_prop_ascii x7373
                                             "maximumSignificantDigits"
                                             (match x7376 with
                                              | `L_n_1 -> Ojs.int_to_js 1
                                              | `L_n_10 -> Ojs.int_to_js 10
                                              | `L_n_11 -> Ojs.int_to_js 11
                                              | `L_n_12 -> Ojs.int_to_js 12
                                              | `L_n_13 -> Ojs.int_to_js 13
                                              | `L_n_14 -> Ojs.int_to_js 14
                                              | `L_n_15 -> Ojs.int_to_js 15
                                              | `L_n_16 -> Ojs.int_to_js 16
                                              | `L_n_17 -> Ojs.int_to_js 17
                                              | `L_n_18 -> Ojs.int_to_js 18
                                              | `L_n_19 -> Ojs.int_to_js 19
                                              | `L_n_2 -> Ojs.int_to_js 2
                                              | `L_n_20 -> Ojs.int_to_js 20
                                              | `L_n_21 -> Ojs.int_to_js 21
                                              | `L_n_3 -> Ojs.int_to_js 3
                                              | `L_n_4 -> Ojs.int_to_js 4
                                              | `L_n_5 -> Ojs.int_to_js 5
                                              | `L_n_6 -> Ojs.int_to_js 6
                                              | `L_n_7 -> Ojs.int_to_js 7
                                              | `L_n_8 -> Ojs.int_to_js 8
                                              | `L_n_9 -> Ojs.int_to_js 9)
                                       | None -> ());
                                      (match x7371 with
                                       | Some x7375 ->
                                           Ojs.set_prop_ascii x7373
                                             "notation"
                                             (Ojs.string_to_js x7375)
                                       | None -> ());
                                      (match x7372 with
                                       | Some x7374 ->
                                           Ojs.set_prop_ascii x7373
                                             "compactDisplay"
                                             (Ojs.string_to_js x7374)
                                       | None -> ());
                                      t_of_js x7373
    let cast_from = Obj.magic
  end
module BigInt =
  struct
    type t = [ `BigInt ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type tags = [ `BigInt ]
    type 'tags this = 'tags intf constraint 'tags = [> `BigInt ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x7391 : Ojs.t) -> intf_of_js __tags_of_js x7391
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x7389 : __tags intf) -> intf_to_js __tags_to_js x7389
    let (toString : 'tags this -> ?radix:float -> unit -> string) =
      fun (x7396 : 'tags this) ->
        fun ?radix:(x7393 : float option) ->
          fun () ->
            Ojs.string_of_js
              (let x7398 = this_to_js Obj.magic x7396 in
               Ojs.call (Ojs.get_prop_ascii x7398 "toString") "apply"
                 [|x7398;((let x7394 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x7393 with
                            | Some x7395 ->
                                ignore
                                  (Ojs.call x7394 "push"
                                     [|(Ojs.float_to_js x7395)|])
                            | None -> ());
                           x7394))|])
    let (toLocaleString :
      'tags this ->
        ?locales:Intl.LocalesArgument.t ->
          ?options:BigIntToLocaleStringOptions.t -> unit -> string)
      =
      fun (x7404 : 'tags this) ->
        fun ?locales:(x7399 : Intl.LocalesArgument.t option) ->
          fun ?options:(x7400 : BigIntToLocaleStringOptions.t option) ->
            fun () ->
              Ojs.string_of_js
                (let x7406 = this_to_js Obj.magic x7404 in
                 Ojs.call (Ojs.get_prop_ascii x7406 "toLocaleString") "apply"
                   [|x7406;((let x7401 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x7399 with
                              | Some x7403 ->
                                  ignore
                                    (Ojs.call x7401 "push"
                                       [|(Intl.LocalesArgument.t_to_js x7403)|])
                              | None -> ());
                             (match x7400 with
                              | Some x7402 ->
                                  ignore
                                    (Ojs.call x7401 "push"
                                       [|(BigIntToLocaleStringOptions.t_to_js
                                            x7402)|])
                              | None -> ());
                             x7401))|])
    let (valueOf : 'tags this -> bigint) =
      fun (x7407 : 'tags this) ->
        bigint_of_js (Ojs.call (this_to_js Obj.magic x7407) "valueOf" [||])
    let (invoke :
      [ `U1 of bigint  | `U2 of bool  | `U3 of float  | `U4 of string ] ->
        bigint)
      =
      fun
        (x7409 :
          [ `U1 of bigint  | `U2 of bool  | `U3 of float  | `U4 of string ])
        ->
        bigint_of_js
          (Ojs.apply (Ojs.get_prop_ascii Ojs.global "BigInt")
             [|((match x7409 with
                 | `U1 x7410 -> bigint_to_js x7410
                 | `U2 x7411 -> Ojs.bool_to_js x7411
                 | `U3 x7412 -> Ojs.float_to_js x7412
                 | `U4 x7413 -> Ojs.string_to_js x7413))|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "BigInt")
             "prototype")
    let (asIntN : bits:float -> int:bigint -> bigint) =
      fun ~bits:(x7414 : float) ->
        fun ~int:(x7415 : bigint) ->
          bigint_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "BigInt") "asIntN"
               [|(Ojs.float_to_js x7414);(bigint_to_js x7415)|])
    let (asUintN : bits:float -> int:bigint -> bigint) =
      fun ~bits:(x7416 : float) ->
        fun ~int:(x7417 : bigint) ->
          bigint_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "BigInt") "asUintN"
               [|(Ojs.float_to_js x7416);(bigint_to_js x7417)|])
    let cast_from = Obj.magic
  end
module Uint32Array =
  struct
    type t = [ `Uint32Array ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type tags = [ `Uint32Array ]
    type 'tags this = 'tags intf constraint 'tags = [> `Uint32Array ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x7420 : Ojs.t) -> intf_of_js __tags_of_js x7420
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x7418 : __tags intf) -> intf_to_js __tags_to_js x7418
    let (at : 'tags this -> index:float -> float option) =
      fun (x7423 : 'tags this) ->
        fun ~index:(x7422 : float) ->
          Ojs.option_of_js Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x7423) "at"
               [|(Ojs.float_to_js x7422)|])
    let (findLast :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> bool) ->
          ?thisArg:any -> unit -> 'S option)
      =
      fun (x7433 : 'tags this) ->
        fun
          ~predicate:(x7426 : value:float -> index:float -> array:t -> bool)
          ->
          fun ?thisArg:(x7427 : any option) ->
            fun () ->
              Ojs.option_of_js Obj.magic
                (let x7435 = this_to_js Obj.magic x7433 in
                 Ojs.call (Ojs.get_prop_ascii x7435 "findLast") "apply"
                   [|x7435;((let x7428 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7428 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x7430 : Ojs.t) ->
                                          fun (x7431 : Ojs.t) ->
                                            fun (x7432 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x7426
                                                   ~value:(Ojs.float_of_js
                                                             x7430)
                                                   ~index:(Ojs.float_of_js
                                                             x7431)
                                                   ~array:(t_of_js x7432))))|]);
                             (match x7427 with
                              | Some x7429 ->
                                  ignore
                                    (Ojs.call x7428 "push"
                                       [|(any_to_js x7429)|])
                              | None -> ());
                             x7428))|])
    let (findLast' :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> float option)
      =
      fun (x7444 : 'tags this) ->
        fun
          ~predicate:(x7437 :
                       value:float -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x7438 : any option) ->
            fun () ->
              Ojs.option_of_js Ojs.float_of_js
                (let x7446 = this_to_js Obj.magic x7444 in
                 Ojs.call (Ojs.get_prop_ascii x7446 "findLast") "apply"
                   [|x7446;((let x7439 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7439 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x7441 : Ojs.t) ->
                                          fun (x7442 : Ojs.t) ->
                                            fun (x7443 : Ojs.t) ->
                                              unknown_to_js
                                                (x7437
                                                   ~value:(Ojs.float_of_js
                                                             x7441)
                                                   ~index:(Ojs.float_of_js
                                                             x7442)
                                                   ~array:(t_of_js x7443))))|]);
                             (match x7438 with
                              | Some x7440 ->
                                  ignore
                                    (Ojs.call x7439 "push"
                                       [|(any_to_js x7440)|])
                              | None -> ());
                             x7439))|])
    let (findLastIndex :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> float)
      =
      fun (x7455 : 'tags this) ->
        fun
          ~predicate:(x7448 :
                       value:float -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x7449 : any option) ->
            fun () ->
              Ojs.float_of_js
                (let x7457 = this_to_js Obj.magic x7455 in
                 Ojs.call (Ojs.get_prop_ascii x7457 "findLastIndex") "apply"
                   [|x7457;((let x7450 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7450 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x7452 : Ojs.t) ->
                                          fun (x7453 : Ojs.t) ->
                                            fun (x7454 : Ojs.t) ->
                                              unknown_to_js
                                                (x7448
                                                   ~value:(Ojs.float_of_js
                                                             x7452)
                                                   ~index:(Ojs.float_of_js
                                                             x7453)
                                                   ~array:(t_of_js x7454))))|]);
                             (match x7449 with
                              | Some x7451 ->
                                  ignore
                                    (Ojs.call x7450 "push"
                                       [|(any_to_js x7451)|])
                              | None -> ());
                             x7450))|])
    let (toReversed : 'tags this -> t) =
      fun (x7458 : 'tags this) ->
        t_of_js (Ojs.call (this_to_js Obj.magic x7458) "toReversed" [||])
    let (toSorted :
      'tags this -> ?compareFn:(a:float -> b:float -> float) -> unit -> t) =
      fun (x7465 : 'tags this) ->
        fun ?compareFn:(x7460 : (a:float -> b:float -> float) option) ->
          fun () ->
            t_of_js
              (let x7467 = this_to_js Obj.magic x7465 in
               Ojs.call (Ojs.get_prop_ascii x7467 "toSorted") "apply"
                 [|x7467;((let x7461 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x7460 with
                            | Some x7462 ->
                                ignore
                                  (Ojs.call x7461 "push"
                                     [|(Ojs.fun_to_js 2
                                          (fun (x7463 : Ojs.t) ->
                                             fun (x7464 : Ojs.t) ->
                                               Ojs.float_to_js
                                                 (x7462
                                                    ~a:(Ojs.float_of_js x7463)
                                                    ~b:(Ojs.float_of_js x7464))))|])
                            | None -> ());
                           x7461))|])
    let (with_ : 'tags this -> index:float -> value:float -> t) =
      fun (x7470 : 'tags this) ->
        fun ~index:(x7468 : float) ->
          fun ~value:(x7469 : float) ->
            t_of_js
              (Ojs.call (this_to_js Obj.magic x7470) "with"
                 [|(Ojs.float_to_js x7468);(Ojs.float_to_js x7469)|])
    let (includes :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> bool)
      =
      fun (x7476 : 'tags this) ->
        fun ~searchElement:(x7472 : float) ->
          fun ?fromIndex:(x7473 : float option) ->
            fun () ->
              Ojs.bool_of_js
                (let x7478 = this_to_js Obj.magic x7476 in
                 Ojs.call (Ojs.get_prop_ascii x7478 "includes") "apply"
                   [|x7478;((let x7474 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7474 "push"
                                  [|(Ojs.float_to_js x7472)|]);
                             (match x7473 with
                              | Some x7475 ->
                                  ignore
                                    (Ojs.call x7474 "push"
                                       [|(Ojs.float_to_js x7475)|])
                              | None -> ());
                             x7474))|])
    let (entries : 'tags this -> (float * float) IterableIterator.t) =
      fun (x7479 : 'tags this) ->
        IterableIterator.t_of_js
          (fun (x7481 : Ojs.t) ->
             let x7482 = x7481 in
             ((Ojs.float_of_js (Ojs.array_get x7482 0)),
               (Ojs.float_of_js (Ojs.array_get x7482 1))))
          (Ojs.call (this_to_js Obj.magic x7479) "entries" [||])
    let (keys : 'tags this -> float IterableIterator.t) =
      fun (x7483 : 'tags this) ->
        IterableIterator.t_of_js Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x7483) "keys" [||])
    let (values : 'tags this -> float IterableIterator.t) =
      fun (x7486 : 'tags this) ->
        IterableIterator.t_of_js Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x7486) "values" [||])
    let (get_BYTES_PER_ELEMENT : 'tags this -> float) =
      fun (x7489 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x7489)
             "BYTES_PER_ELEMENT")
    let (get_buffer : 'tags this -> ArrayBufferLike.t) =
      fun (x7491 : 'tags this) ->
        ArrayBufferLike.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x7491) "buffer")
    let (get_byteLength : 'tags this -> float) =
      fun (x7493 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x7493) "byteLength")
    let (get_byteOffset : 'tags this -> float) =
      fun (x7495 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x7495) "byteOffset")
    let (copyWithin :
      'tags this ->
        target:float -> start:float -> ?end_:float -> unit -> 'tags this)
      =
      fun (x7502 : 'tags this) ->
        fun ~target:(x7497 : float) ->
          fun ~start:(x7498 : float) ->
            fun ?end_:(x7499 : float option) ->
              fun () ->
                this_of_js Obj.magic
                  (let x7504 = this_to_js Obj.magic x7502 in
                   Ojs.call (Ojs.get_prop_ascii x7504 "copyWithin") "apply"
                     [|x7504;((let x7500 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x7500 "push"
                                    [|(Ojs.float_to_js x7497)|]);
                               ignore
                                 (Ojs.call x7500 "push"
                                    [|(Ojs.float_to_js x7498)|]);
                               (match x7499 with
                                | Some x7501 ->
                                    ignore
                                      (Ojs.call x7500 "push"
                                         [|(Ojs.float_to_js x7501)|])
                                | None -> ());
                               x7500))|])
    let (every :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x7513 : 'tags this) ->
        fun
          ~predicate:(x7506 :
                       value:float -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x7507 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x7515 = this_to_js Obj.magic x7513 in
                 Ojs.call (Ojs.get_prop_ascii x7515 "every") "apply"
                   [|x7515;((let x7508 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7508 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x7510 : Ojs.t) ->
                                          fun (x7511 : Ojs.t) ->
                                            fun (x7512 : Ojs.t) ->
                                              unknown_to_js
                                                (x7506
                                                   ~value:(Ojs.float_of_js
                                                             x7510)
                                                   ~index:(Ojs.float_of_js
                                                             x7511)
                                                   ~array:(t_of_js x7512))))|]);
                             (match x7507 with
                              | Some x7509 ->
                                  ignore
                                    (Ojs.call x7508 "push"
                                       [|(any_to_js x7509)|])
                              | None -> ());
                             x7508))|])
    let (fill :
      'tags this ->
        value:float -> ?start:float -> ?end_:float -> unit -> 'tags this)
      =
      fun (x7522 : 'tags this) ->
        fun ~value:(x7516 : float) ->
          fun ?start:(x7517 : float option) ->
            fun ?end_:(x7518 : float option) ->
              fun () ->
                this_of_js Obj.magic
                  (let x7524 = this_to_js Obj.magic x7522 in
                   Ojs.call (Ojs.get_prop_ascii x7524 "fill") "apply"
                     [|x7524;((let x7519 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x7519 "push"
                                    [|(Ojs.float_to_js x7516)|]);
                               (match x7517 with
                                | Some x7521 ->
                                    ignore
                                      (Ojs.call x7519 "push"
                                         [|(Ojs.float_to_js x7521)|])
                                | None -> ());
                               (match x7518 with
                                | Some x7520 ->
                                    ignore
                                      (Ojs.call x7519 "push"
                                         [|(Ojs.float_to_js x7520)|])
                                | None -> ());
                               x7519))|])
    let (filter :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> any) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x7533 : 'tags this) ->
        fun ~predicate:(x7526 : value:float -> index:float -> array:t -> any)
          ->
          fun ?thisArg:(x7527 : any option) ->
            fun () ->
              t_of_js
                (let x7535 = this_to_js Obj.magic x7533 in
                 Ojs.call (Ojs.get_prop_ascii x7535 "filter") "apply"
                   [|x7535;((let x7528 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7528 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x7530 : Ojs.t) ->
                                          fun (x7531 : Ojs.t) ->
                                            fun (x7532 : Ojs.t) ->
                                              any_to_js
                                                (x7526
                                                   ~value:(Ojs.float_of_js
                                                             x7530)
                                                   ~index:(Ojs.float_of_js
                                                             x7531)
                                                   ~array:(t_of_js x7532))))|]);
                             (match x7527 with
                              | Some x7529 ->
                                  ignore
                                    (Ojs.call x7528 "push"
                                       [|(any_to_js x7529)|])
                              | None -> ());
                             x7528))|])
    let (find :
      'tags this ->
        predicate:(value:float -> index:float -> obj:t -> bool) ->
          ?thisArg:any -> unit -> float option)
      =
      fun (x7543 : 'tags this) ->
        fun ~predicate:(x7536 : value:float -> index:float -> obj:t -> bool)
          ->
          fun ?thisArg:(x7537 : any option) ->
            fun () ->
              Ojs.option_of_js Ojs.float_of_js
                (let x7545 = this_to_js Obj.magic x7543 in
                 Ojs.call (Ojs.get_prop_ascii x7545 "find") "apply"
                   [|x7545;((let x7538 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7538 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x7540 : Ojs.t) ->
                                          fun (x7541 : Ojs.t) ->
                                            fun (x7542 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x7536
                                                   ~value:(Ojs.float_of_js
                                                             x7540)
                                                   ~index:(Ojs.float_of_js
                                                             x7541)
                                                   ~obj:(t_of_js x7542))))|]);
                             (match x7537 with
                              | Some x7539 ->
                                  ignore
                                    (Ojs.call x7538 "push"
                                       [|(any_to_js x7539)|])
                              | None -> ());
                             x7538))|])
    let (findIndex :
      'tags this ->
        predicate:(value:float -> index:float -> obj:t -> bool) ->
          ?thisArg:any -> unit -> float)
      =
      fun (x7554 : 'tags this) ->
        fun ~predicate:(x7547 : value:float -> index:float -> obj:t -> bool)
          ->
          fun ?thisArg:(x7548 : any option) ->
            fun () ->
              Ojs.float_of_js
                (let x7556 = this_to_js Obj.magic x7554 in
                 Ojs.call (Ojs.get_prop_ascii x7556 "findIndex") "apply"
                   [|x7556;((let x7549 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7549 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x7551 : Ojs.t) ->
                                          fun (x7552 : Ojs.t) ->
                                            fun (x7553 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x7547
                                                   ~value:(Ojs.float_of_js
                                                             x7551)
                                                   ~index:(Ojs.float_of_js
                                                             x7552)
                                                   ~obj:(t_of_js x7553))))|]);
                             (match x7548 with
                              | Some x7550 ->
                                  ignore
                                    (Ojs.call x7549 "push"
                                       [|(any_to_js x7550)|])
                              | None -> ());
                             x7549))|])
    let (forEach :
      'tags this ->
        callbackfn:(value:float -> index:float -> array:t -> unit) ->
          ?thisArg:any -> unit -> unit)
      =
      fun (x7564 : 'tags this) ->
        fun
          ~callbackfn:(x7557 : value:float -> index:float -> array:t -> unit)
          ->
          fun ?thisArg:(x7558 : any option) ->
            fun () ->
              ignore
                (let x7566 = this_to_js Obj.magic x7564 in
                 Ojs.call (Ojs.get_prop_ascii x7566 "forEach") "apply"
                   [|x7566;((let x7559 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7559 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x7561 : Ojs.t) ->
                                          fun (x7562 : Ojs.t) ->
                                            fun (x7563 : Ojs.t) ->
                                              x7557
                                                ~value:(Ojs.float_of_js x7561)
                                                ~index:(Ojs.float_of_js x7562)
                                                ~array:(t_of_js x7563)))|]);
                             (match x7558 with
                              | Some x7560 ->
                                  ignore
                                    (Ojs.call x7559 "push"
                                       [|(any_to_js x7560)|])
                              | None -> ());
                             x7559))|])
    let (indexOf :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> float)
      =
      fun (x7571 : 'tags this) ->
        fun ~searchElement:(x7567 : float) ->
          fun ?fromIndex:(x7568 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x7573 = this_to_js Obj.magic x7571 in
                 Ojs.call (Ojs.get_prop_ascii x7573 "indexOf") "apply"
                   [|x7573;((let x7569 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7569 "push"
                                  [|(Ojs.float_to_js x7567)|]);
                             (match x7568 with
                              | Some x7570 ->
                                  ignore
                                    (Ojs.call x7569 "push"
                                       [|(Ojs.float_to_js x7570)|])
                              | None -> ());
                             x7569))|])
    let (join : 'tags this -> ?separator:string -> unit -> string) =
      fun (x7577 : 'tags this) ->
        fun ?separator:(x7574 : string option) ->
          fun () ->
            Ojs.string_of_js
              (let x7579 = this_to_js Obj.magic x7577 in
               Ojs.call (Ojs.get_prop_ascii x7579 "join") "apply"
                 [|x7579;((let x7575 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x7574 with
                            | Some x7576 ->
                                ignore
                                  (Ojs.call x7575 "push"
                                     [|(Ojs.string_to_js x7576)|])
                            | None -> ());
                           x7575))|])
    let (lastIndexOf :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> float)
      =
      fun (x7584 : 'tags this) ->
        fun ~searchElement:(x7580 : float) ->
          fun ?fromIndex:(x7581 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x7586 = this_to_js Obj.magic x7584 in
                 Ojs.call (Ojs.get_prop_ascii x7586 "lastIndexOf") "apply"
                   [|x7586;((let x7582 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7582 "push"
                                  [|(Ojs.float_to_js x7580)|]);
                             (match x7581 with
                              | Some x7583 ->
                                  ignore
                                    (Ojs.call x7582 "push"
                                       [|(Ojs.float_to_js x7583)|])
                              | None -> ());
                             x7582))|])
    let (get_length : 'tags this -> float) =
      fun (x7587 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x7587) "length")
    let (map :
      'tags this ->
        callbackfn:(value:float -> index:float -> array:t -> float) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x7596 : 'tags this) ->
        fun
          ~callbackfn:(x7589 :
                        value:float -> index:float -> array:t -> float)
          ->
          fun ?thisArg:(x7590 : any option) ->
            fun () ->
              t_of_js
                (let x7598 = this_to_js Obj.magic x7596 in
                 Ojs.call (Ojs.get_prop_ascii x7598 "map") "apply"
                   [|x7598;((let x7591 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7591 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x7593 : Ojs.t) ->
                                          fun (x7594 : Ojs.t) ->
                                            fun (x7595 : Ojs.t) ->
                                              Ojs.float_to_js
                                                (x7589
                                                   ~value:(Ojs.float_of_js
                                                             x7593)
                                                   ~index:(Ojs.float_of_js
                                                             x7594)
                                                   ~array:(t_of_js x7595))))|]);
                             (match x7590 with
                              | Some x7592 ->
                                  ignore
                                    (Ojs.call x7591 "push"
                                       [|(any_to_js x7592)|])
                              | None -> ());
                             x7591))|])
    let (reduce :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> float)
      =
      fun (x7604 : 'tags this) ->
        fun
          ~callbackfn:(x7599 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x7604) "reduce"
               [|(Ojs.fun_to_js 4
                    (fun (x7600 : Ojs.t) ->
                       fun (x7601 : Ojs.t) ->
                         fun (x7602 : Ojs.t) ->
                           fun (x7603 : Ojs.t) ->
                             Ojs.float_to_js
                               (x7599 ~previousValue:(Ojs.float_of_js x7600)
                                  ~currentValue:(Ojs.float_of_js x7601)
                                  ~currentIndex:(Ojs.float_of_js x7602)
                                  ~array:(t_of_js x7603))))|])
    let (reduce' :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> initialValue:float -> float)
      =
      fun (x7612 : 'tags this) ->
        fun
          ~callbackfn:(x7606 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          fun ~initialValue:(x7611 : float) ->
            Ojs.float_of_js
              (Ojs.call (this_to_js Obj.magic x7612) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x7607 : Ojs.t) ->
                         fun (x7608 : Ojs.t) ->
                           fun (x7609 : Ojs.t) ->
                             fun (x7610 : Ojs.t) ->
                               Ojs.float_to_js
                                 (x7606
                                    ~previousValue:(Ojs.float_of_js x7607)
                                    ~currentValue:(Ojs.float_of_js x7608)
                                    ~currentIndex:(Ojs.float_of_js x7609)
                                    ~array:(t_of_js x7610))));(Ojs.float_to_js
                                                                 x7611)|])
    let (reduce'' :
      'tags this ->
        callbackfn:(previousValue:'U ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x7620 : 'tags this) ->
        fun
          ~callbackfn:(x7614 :
                        previousValue:'U ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x7619 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic x7620) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x7615 : Ojs.t) ->
                         fun (x7616 : Ojs.t) ->
                           fun (x7617 : Ojs.t) ->
                             fun (x7618 : Ojs.t) ->
                               Obj.magic
                                 (x7614 ~previousValue:(Obj.magic x7615)
                                    ~currentValue:(Ojs.float_of_js x7616)
                                    ~currentIndex:(Ojs.float_of_js x7617)
                                    ~array:(t_of_js x7618))));(Obj.magic
                                                                 x7619)|])
    let (reduceRight :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> float)
      =
      fun (x7627 : 'tags this) ->
        fun
          ~callbackfn:(x7622 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x7627) "reduceRight"
               [|(Ojs.fun_to_js 4
                    (fun (x7623 : Ojs.t) ->
                       fun (x7624 : Ojs.t) ->
                         fun (x7625 : Ojs.t) ->
                           fun (x7626 : Ojs.t) ->
                             Ojs.float_to_js
                               (x7622 ~previousValue:(Ojs.float_of_js x7623)
                                  ~currentValue:(Ojs.float_of_js x7624)
                                  ~currentIndex:(Ojs.float_of_js x7625)
                                  ~array:(t_of_js x7626))))|])
    let (reduceRight' :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> initialValue:float -> float)
      =
      fun (x7635 : 'tags this) ->
        fun
          ~callbackfn:(x7629 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          fun ~initialValue:(x7634 : float) ->
            Ojs.float_of_js
              (Ojs.call (this_to_js Obj.magic x7635) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x7630 : Ojs.t) ->
                         fun (x7631 : Ojs.t) ->
                           fun (x7632 : Ojs.t) ->
                             fun (x7633 : Ojs.t) ->
                               Ojs.float_to_js
                                 (x7629
                                    ~previousValue:(Ojs.float_of_js x7630)
                                    ~currentValue:(Ojs.float_of_js x7631)
                                    ~currentIndex:(Ojs.float_of_js x7632)
                                    ~array:(t_of_js x7633))));(Ojs.float_to_js
                                                                 x7634)|])
    let (reduceRight'' :
      'tags this ->
        callbackfn:(previousValue:'U ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x7643 : 'tags this) ->
        fun
          ~callbackfn:(x7637 :
                        previousValue:'U ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x7642 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic x7643) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x7638 : Ojs.t) ->
                         fun (x7639 : Ojs.t) ->
                           fun (x7640 : Ojs.t) ->
                             fun (x7641 : Ojs.t) ->
                               Obj.magic
                                 (x7637 ~previousValue:(Obj.magic x7638)
                                    ~currentValue:(Ojs.float_of_js x7639)
                                    ~currentIndex:(Ojs.float_of_js x7640)
                                    ~array:(t_of_js x7641))));(Obj.magic
                                                                 x7642)|])
    let (reverse : 'tags this -> t) =
      fun (x7645 : 'tags this) ->
        t_of_js (Ojs.call (this_to_js Obj.magic x7645) "reverse" [||])
    let (set_ :
      'tags this -> array:float ArrayLike.t -> ?offset:float -> unit -> unit)
      =
      fun (x7652 : 'tags this) ->
        fun ~array:(x7647 : float ArrayLike.t) ->
          fun ?offset:(x7648 : float option) ->
            fun () ->
              ignore
                (let x7654 = this_to_js Obj.magic x7652 in
                 Ojs.call (Ojs.get_prop_ascii x7654 "set") "apply"
                   [|x7654;((let x7649 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7649 "push"
                                  [|(ArrayLike.t_to_js Ojs.float_to_js x7647)|]);
                             (match x7648 with
                              | Some x7650 ->
                                  ignore
                                    (Ojs.call x7649 "push"
                                       [|(Ojs.float_to_js x7650)|])
                              | None -> ());
                             x7649))|])
    let (slice : 'tags this -> ?start:float -> ?end_:float -> unit -> t) =
      fun (x7660 : 'tags this) ->
        fun ?start:(x7655 : float option) ->
          fun ?end_:(x7656 : float option) ->
            fun () ->
              t_of_js
                (let x7662 = this_to_js Obj.magic x7660 in
                 Ojs.call (Ojs.get_prop_ascii x7662 "slice") "apply"
                   [|x7662;((let x7657 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x7655 with
                              | Some x7659 ->
                                  ignore
                                    (Ojs.call x7657 "push"
                                       [|(Ojs.float_to_js x7659)|])
                              | None -> ());
                             (match x7656 with
                              | Some x7658 ->
                                  ignore
                                    (Ojs.call x7657 "push"
                                       [|(Ojs.float_to_js x7658)|])
                              | None -> ());
                             x7657))|])
    let (some :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x7670 : 'tags this) ->
        fun
          ~predicate:(x7663 :
                       value:float -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x7664 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x7672 = this_to_js Obj.magic x7670 in
                 Ojs.call (Ojs.get_prop_ascii x7672 "some") "apply"
                   [|x7672;((let x7665 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7665 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x7667 : Ojs.t) ->
                                          fun (x7668 : Ojs.t) ->
                                            fun (x7669 : Ojs.t) ->
                                              unknown_to_js
                                                (x7663
                                                   ~value:(Ojs.float_of_js
                                                             x7667)
                                                   ~index:(Ojs.float_of_js
                                                             x7668)
                                                   ~array:(t_of_js x7669))))|]);
                             (match x7664 with
                              | Some x7666 ->
                                  ignore
                                    (Ojs.call x7665 "push"
                                       [|(any_to_js x7666)|])
                              | None -> ());
                             x7665))|])
    let (sort :
      'tags this ->
        ?compareFn:(a:float -> b:float -> float) -> unit -> 'tags this)
      =
      fun (x7678 : 'tags this) ->
        fun ?compareFn:(x7673 : (a:float -> b:float -> float) option) ->
          fun () ->
            this_of_js Obj.magic
              (let x7680 = this_to_js Obj.magic x7678 in
               Ojs.call (Ojs.get_prop_ascii x7680 "sort") "apply"
                 [|x7680;((let x7674 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x7673 with
                            | Some x7675 ->
                                ignore
                                  (Ojs.call x7674 "push"
                                     [|(Ojs.fun_to_js 2
                                          (fun (x7676 : Ojs.t) ->
                                             fun (x7677 : Ojs.t) ->
                                               Ojs.float_to_js
                                                 (x7675
                                                    ~a:(Ojs.float_of_js x7676)
                                                    ~b:(Ojs.float_of_js x7677))))|])
                            | None -> ());
                           x7674))|])
    let (subarray : 'tags this -> ?begin_:float -> ?end_:float -> unit -> t)
      =
      fun (x7687 : 'tags this) ->
        fun ?begin_:(x7682 : float option) ->
          fun ?end_:(x7683 : float option) ->
            fun () ->
              t_of_js
                (let x7689 = this_to_js Obj.magic x7687 in
                 Ojs.call (Ojs.get_prop_ascii x7689 "subarray") "apply"
                   [|x7689;((let x7684 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x7682 with
                              | Some x7686 ->
                                  ignore
                                    (Ojs.call x7684 "push"
                                       [|(Ojs.float_to_js x7686)|])
                              | None -> ());
                             (match x7683 with
                              | Some x7685 ->
                                  ignore
                                    (Ojs.call x7684 "push"
                                       [|(Ojs.float_to_js x7685)|])
                              | None -> ());
                             x7684))|])
    let (toLocaleString : 'tags this -> string) =
      fun (x7690 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x7690) "toLocaleString" [||])
    let (toString : 'tags this -> string) =
      fun (x7692 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x7692) "toString" [||])
    let (valueOf : 'tags this -> t) =
      fun (x7694 : 'tags this) ->
        t_of_js (Ojs.call (this_to_js Obj.magic x7694) "valueOf" [||])
    let (get : 'tags this -> float -> float) =
      fun (x7696 : 'tags this) ->
        fun (x7698 : float) ->
          Ojs.float_of_js
            (Ojs.get_prop (this_to_js Obj.magic x7696)
               (Ojs.float_to_js x7698))
    let (set : 'tags this -> float -> float -> unit) =
      fun (x7699 : 'tags this) ->
        fun (x7701 : float) ->
          fun (x7702 : float) ->
            Ojs.set_prop (this_to_js Obj.magic x7699) (Ojs.float_to_js x7701)
              (Ojs.float_to_js x7702)
    let (create : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Uint32Array") [||])
    let (create' : float Iterable.t -> t) =
      fun (x7703 : float Iterable.t) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Uint32Array")
             [|(Iterable.t_to_js Ojs.float_to_js x7703)|])
    let (from :
      arrayLike:float Iterable.t ->
        ?mapfn:(v:float -> k:float -> float) -> ?thisArg:any -> unit -> t)
      =
      fun ~arrayLike:(x7705 : float Iterable.t) ->
        fun ?mapfn:(x7706 : (v:float -> k:float -> float) option) ->
          fun ?thisArg:(x7707 : any option) ->
            fun () ->
              t_of_js
                (let x7714 = Ojs.get_prop_ascii Ojs.global "Uint32Array" in
                 Ojs.call (Ojs.get_prop_ascii x7714 "from") "apply"
                   [|x7714;((let x7708 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7708 "push"
                                  [|(Iterable.t_to_js Ojs.float_to_js x7705)|]);
                             (match x7706 with
                              | Some x7710 ->
                                  ignore
                                    (Ojs.call x7708 "push"
                                       [|(Ojs.fun_to_js 2
                                            (fun (x7711 : Ojs.t) ->
                                               fun (x7712 : Ojs.t) ->
                                                 Ojs.float_to_js
                                                   (x7710
                                                      ~v:(Ojs.float_of_js
                                                            x7711)
                                                      ~k:(Ojs.float_of_js
                                                            x7712))))|])
                              | None -> ());
                             (match x7707 with
                              | Some x7709 ->
                                  ignore
                                    (Ojs.call x7708 "push"
                                       [|(any_to_js x7709)|])
                              | None -> ());
                             x7708))|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Uint32Array")
             "prototype")
    let (create'' : float -> t) =
      fun (x7715 : float) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Uint32Array")
             [|(Ojs.float_to_js x7715)|])
    let (create''' :
      [ `U1 of float ArrayLike.t  | `U2 of ArrayBufferLike.t ] -> t) =
      fun (x7716 : [ `U1 of float ArrayLike.t  | `U2 of ArrayBufferLike.t ])
        ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Uint32Array")
             [|((match x7716 with
                 | `U1 x7717 -> ArrayLike.t_to_js Ojs.float_to_js x7717
                 | `U2 x7719 -> ArrayBufferLike.t_to_js x7719))|])
    let (create'''' :
      buffer:ArrayBufferLike.t ->
        ?byteOffset:float -> ?length:float -> unit -> t)
      =
      fun ~buffer:(x7720 : ArrayBufferLike.t) ->
        fun ?byteOffset:(x7721 : float option) ->
          fun ?length:(x7722 : float option) ->
            fun () ->
              t_of_js
                (Ojs.new_obj_arr
                   (Ojs.get_prop_ascii Ojs.global "Uint32Array")
                   (let x7723 =
                      Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                        [||] in
                    ignore
                      (Ojs.call x7723 "push"
                         [|(ArrayBufferLike.t_to_js x7720)|]);
                    (match x7721 with
                     | Some x7725 ->
                         ignore
                           (Ojs.call x7723 "push" [|(Ojs.float_to_js x7725)|])
                     | None -> ());
                    (match x7722 with
                     | Some x7724 ->
                         ignore
                           (Ojs.call x7723 "push" [|(Ojs.float_to_js x7724)|])
                     | None -> ());
                    x7723))
    let (bytes_per_element : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Uint32Array")
             "BYTES_PER_ELEMENT")
    let (of_ : float list -> t) =
      fun (x7726 : float list) ->
        t_of_js
          (let x7729 = Ojs.get_prop_ascii Ojs.global "Uint32Array" in
           Ojs.call (Ojs.get_prop_ascii x7729 "of") "apply"
             [|x7729;((let x7727 =
                         Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                           [||] in
                       List.iter
                         (fun (x7728 : float) ->
                            ignore
                              (Ojs.call x7727 "push"
                                 [|(Ojs.float_to_js x7728)|])) x7726;
                       x7727))|])
    let (from' : float ArrayLike.t -> t) =
      fun (x7730 : float ArrayLike.t) ->
        t_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Uint32Array") "from"
             [|(ArrayLike.t_to_js Ojs.float_to_js x7730)|])
    let (from'' :
      arrayLike:'T ArrayLike.t ->
        mapfn:(v:'T -> k:float -> float) -> ?thisArg:any -> unit -> t)
      =
      fun ~arrayLike:(x7732 : 'T ArrayLike.t) ->
        fun ~mapfn:(x7733 : v:'T -> k:float -> float) ->
          fun ?thisArg:(x7734 : any option) ->
            fun () ->
              t_of_js
                (let x7740 = Ojs.get_prop_ascii Ojs.global "Uint32Array" in
                 Ojs.call (Ojs.get_prop_ascii x7740 "from") "apply"
                   [|x7740;((let x7735 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7735 "push"
                                  [|(ArrayLike.t_to_js Obj.magic x7732)|]);
                             ignore
                               (Ojs.call x7735 "push"
                                  [|(Ojs.fun_to_js 2
                                       (fun (x7737 : Ojs.t) ->
                                          fun (x7738 : Ojs.t) ->
                                            Ojs.float_to_js
                                              (x7733 ~v:(Obj.magic x7737)
                                                 ~k:(Ojs.float_of_js x7738))))|]);
                             (match x7734 with
                              | Some x7736 ->
                                  ignore
                                    (Ojs.call x7735 "push"
                                       [|(any_to_js x7736)|])
                              | None -> ());
                             x7735))|])
    let cast_from = Obj.magic
  end
module Uint16Array =
  struct
    type t = [ `Uint16Array ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type tags = [ `Uint16Array ]
    type 'tags this = 'tags intf constraint 'tags = [> `Uint16Array ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x7743 : Ojs.t) -> intf_of_js __tags_of_js x7743
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x7741 : __tags intf) -> intf_to_js __tags_to_js x7741
    let (at : 'tags this -> index:float -> float option) =
      fun (x7746 : 'tags this) ->
        fun ~index:(x7745 : float) ->
          Ojs.option_of_js Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x7746) "at"
               [|(Ojs.float_to_js x7745)|])
    let (findLast :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> bool) ->
          ?thisArg:any -> unit -> 'S option)
      =
      fun (x7756 : 'tags this) ->
        fun
          ~predicate:(x7749 : value:float -> index:float -> array:t -> bool)
          ->
          fun ?thisArg:(x7750 : any option) ->
            fun () ->
              Ojs.option_of_js Obj.magic
                (let x7758 = this_to_js Obj.magic x7756 in
                 Ojs.call (Ojs.get_prop_ascii x7758 "findLast") "apply"
                   [|x7758;((let x7751 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7751 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x7753 : Ojs.t) ->
                                          fun (x7754 : Ojs.t) ->
                                            fun (x7755 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x7749
                                                   ~value:(Ojs.float_of_js
                                                             x7753)
                                                   ~index:(Ojs.float_of_js
                                                             x7754)
                                                   ~array:(t_of_js x7755))))|]);
                             (match x7750 with
                              | Some x7752 ->
                                  ignore
                                    (Ojs.call x7751 "push"
                                       [|(any_to_js x7752)|])
                              | None -> ());
                             x7751))|])
    let (findLast' :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> float option)
      =
      fun (x7767 : 'tags this) ->
        fun
          ~predicate:(x7760 :
                       value:float -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x7761 : any option) ->
            fun () ->
              Ojs.option_of_js Ojs.float_of_js
                (let x7769 = this_to_js Obj.magic x7767 in
                 Ojs.call (Ojs.get_prop_ascii x7769 "findLast") "apply"
                   [|x7769;((let x7762 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7762 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x7764 : Ojs.t) ->
                                          fun (x7765 : Ojs.t) ->
                                            fun (x7766 : Ojs.t) ->
                                              unknown_to_js
                                                (x7760
                                                   ~value:(Ojs.float_of_js
                                                             x7764)
                                                   ~index:(Ojs.float_of_js
                                                             x7765)
                                                   ~array:(t_of_js x7766))))|]);
                             (match x7761 with
                              | Some x7763 ->
                                  ignore
                                    (Ojs.call x7762 "push"
                                       [|(any_to_js x7763)|])
                              | None -> ());
                             x7762))|])
    let (findLastIndex :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> float)
      =
      fun (x7778 : 'tags this) ->
        fun
          ~predicate:(x7771 :
                       value:float -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x7772 : any option) ->
            fun () ->
              Ojs.float_of_js
                (let x7780 = this_to_js Obj.magic x7778 in
                 Ojs.call (Ojs.get_prop_ascii x7780 "findLastIndex") "apply"
                   [|x7780;((let x7773 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7773 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x7775 : Ojs.t) ->
                                          fun (x7776 : Ojs.t) ->
                                            fun (x7777 : Ojs.t) ->
                                              unknown_to_js
                                                (x7771
                                                   ~value:(Ojs.float_of_js
                                                             x7775)
                                                   ~index:(Ojs.float_of_js
                                                             x7776)
                                                   ~array:(t_of_js x7777))))|]);
                             (match x7772 with
                              | Some x7774 ->
                                  ignore
                                    (Ojs.call x7773 "push"
                                       [|(any_to_js x7774)|])
                              | None -> ());
                             x7773))|])
    let (toReversed : 'tags this -> t) =
      fun (x7781 : 'tags this) ->
        t_of_js (Ojs.call (this_to_js Obj.magic x7781) "toReversed" [||])
    let (toSorted :
      'tags this -> ?compareFn:(a:float -> b:float -> float) -> unit -> t) =
      fun (x7788 : 'tags this) ->
        fun ?compareFn:(x7783 : (a:float -> b:float -> float) option) ->
          fun () ->
            t_of_js
              (let x7790 = this_to_js Obj.magic x7788 in
               Ojs.call (Ojs.get_prop_ascii x7790 "toSorted") "apply"
                 [|x7790;((let x7784 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x7783 with
                            | Some x7785 ->
                                ignore
                                  (Ojs.call x7784 "push"
                                     [|(Ojs.fun_to_js 2
                                          (fun (x7786 : Ojs.t) ->
                                             fun (x7787 : Ojs.t) ->
                                               Ojs.float_to_js
                                                 (x7785
                                                    ~a:(Ojs.float_of_js x7786)
                                                    ~b:(Ojs.float_of_js x7787))))|])
                            | None -> ());
                           x7784))|])
    let (with_ : 'tags this -> index:float -> value:float -> t) =
      fun (x7793 : 'tags this) ->
        fun ~index:(x7791 : float) ->
          fun ~value:(x7792 : float) ->
            t_of_js
              (Ojs.call (this_to_js Obj.magic x7793) "with"
                 [|(Ojs.float_to_js x7791);(Ojs.float_to_js x7792)|])
    let (includes :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> bool)
      =
      fun (x7799 : 'tags this) ->
        fun ~searchElement:(x7795 : float) ->
          fun ?fromIndex:(x7796 : float option) ->
            fun () ->
              Ojs.bool_of_js
                (let x7801 = this_to_js Obj.magic x7799 in
                 Ojs.call (Ojs.get_prop_ascii x7801 "includes") "apply"
                   [|x7801;((let x7797 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7797 "push"
                                  [|(Ojs.float_to_js x7795)|]);
                             (match x7796 with
                              | Some x7798 ->
                                  ignore
                                    (Ojs.call x7797 "push"
                                       [|(Ojs.float_to_js x7798)|])
                              | None -> ());
                             x7797))|])
    let (entries : 'tags this -> (float * float) IterableIterator.t) =
      fun (x7802 : 'tags this) ->
        IterableIterator.t_of_js
          (fun (x7804 : Ojs.t) ->
             let x7805 = x7804 in
             ((Ojs.float_of_js (Ojs.array_get x7805 0)),
               (Ojs.float_of_js (Ojs.array_get x7805 1))))
          (Ojs.call (this_to_js Obj.magic x7802) "entries" [||])
    let (keys : 'tags this -> float IterableIterator.t) =
      fun (x7806 : 'tags this) ->
        IterableIterator.t_of_js Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x7806) "keys" [||])
    let (values : 'tags this -> float IterableIterator.t) =
      fun (x7809 : 'tags this) ->
        IterableIterator.t_of_js Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x7809) "values" [||])
    let (get_BYTES_PER_ELEMENT : 'tags this -> float) =
      fun (x7812 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x7812)
             "BYTES_PER_ELEMENT")
    let (get_buffer : 'tags this -> ArrayBufferLike.t) =
      fun (x7814 : 'tags this) ->
        ArrayBufferLike.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x7814) "buffer")
    let (get_byteLength : 'tags this -> float) =
      fun (x7816 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x7816) "byteLength")
    let (get_byteOffset : 'tags this -> float) =
      fun (x7818 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x7818) "byteOffset")
    let (copyWithin :
      'tags this ->
        target:float -> start:float -> ?end_:float -> unit -> 'tags this)
      =
      fun (x7825 : 'tags this) ->
        fun ~target:(x7820 : float) ->
          fun ~start:(x7821 : float) ->
            fun ?end_:(x7822 : float option) ->
              fun () ->
                this_of_js Obj.magic
                  (let x7827 = this_to_js Obj.magic x7825 in
                   Ojs.call (Ojs.get_prop_ascii x7827 "copyWithin") "apply"
                     [|x7827;((let x7823 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x7823 "push"
                                    [|(Ojs.float_to_js x7820)|]);
                               ignore
                                 (Ojs.call x7823 "push"
                                    [|(Ojs.float_to_js x7821)|]);
                               (match x7822 with
                                | Some x7824 ->
                                    ignore
                                      (Ojs.call x7823 "push"
                                         [|(Ojs.float_to_js x7824)|])
                                | None -> ());
                               x7823))|])
    let (every :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x7836 : 'tags this) ->
        fun
          ~predicate:(x7829 :
                       value:float -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x7830 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x7838 = this_to_js Obj.magic x7836 in
                 Ojs.call (Ojs.get_prop_ascii x7838 "every") "apply"
                   [|x7838;((let x7831 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7831 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x7833 : Ojs.t) ->
                                          fun (x7834 : Ojs.t) ->
                                            fun (x7835 : Ojs.t) ->
                                              unknown_to_js
                                                (x7829
                                                   ~value:(Ojs.float_of_js
                                                             x7833)
                                                   ~index:(Ojs.float_of_js
                                                             x7834)
                                                   ~array:(t_of_js x7835))))|]);
                             (match x7830 with
                              | Some x7832 ->
                                  ignore
                                    (Ojs.call x7831 "push"
                                       [|(any_to_js x7832)|])
                              | None -> ());
                             x7831))|])
    let (fill :
      'tags this ->
        value:float -> ?start:float -> ?end_:float -> unit -> 'tags this)
      =
      fun (x7845 : 'tags this) ->
        fun ~value:(x7839 : float) ->
          fun ?start:(x7840 : float option) ->
            fun ?end_:(x7841 : float option) ->
              fun () ->
                this_of_js Obj.magic
                  (let x7847 = this_to_js Obj.magic x7845 in
                   Ojs.call (Ojs.get_prop_ascii x7847 "fill") "apply"
                     [|x7847;((let x7842 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x7842 "push"
                                    [|(Ojs.float_to_js x7839)|]);
                               (match x7840 with
                                | Some x7844 ->
                                    ignore
                                      (Ojs.call x7842 "push"
                                         [|(Ojs.float_to_js x7844)|])
                                | None -> ());
                               (match x7841 with
                                | Some x7843 ->
                                    ignore
                                      (Ojs.call x7842 "push"
                                         [|(Ojs.float_to_js x7843)|])
                                | None -> ());
                               x7842))|])
    let (filter :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> any) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x7856 : 'tags this) ->
        fun ~predicate:(x7849 : value:float -> index:float -> array:t -> any)
          ->
          fun ?thisArg:(x7850 : any option) ->
            fun () ->
              t_of_js
                (let x7858 = this_to_js Obj.magic x7856 in
                 Ojs.call (Ojs.get_prop_ascii x7858 "filter") "apply"
                   [|x7858;((let x7851 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7851 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x7853 : Ojs.t) ->
                                          fun (x7854 : Ojs.t) ->
                                            fun (x7855 : Ojs.t) ->
                                              any_to_js
                                                (x7849
                                                   ~value:(Ojs.float_of_js
                                                             x7853)
                                                   ~index:(Ojs.float_of_js
                                                             x7854)
                                                   ~array:(t_of_js x7855))))|]);
                             (match x7850 with
                              | Some x7852 ->
                                  ignore
                                    (Ojs.call x7851 "push"
                                       [|(any_to_js x7852)|])
                              | None -> ());
                             x7851))|])
    let (find :
      'tags this ->
        predicate:(value:float -> index:float -> obj:t -> bool) ->
          ?thisArg:any -> unit -> float option)
      =
      fun (x7866 : 'tags this) ->
        fun ~predicate:(x7859 : value:float -> index:float -> obj:t -> bool)
          ->
          fun ?thisArg:(x7860 : any option) ->
            fun () ->
              Ojs.option_of_js Ojs.float_of_js
                (let x7868 = this_to_js Obj.magic x7866 in
                 Ojs.call (Ojs.get_prop_ascii x7868 "find") "apply"
                   [|x7868;((let x7861 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7861 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x7863 : Ojs.t) ->
                                          fun (x7864 : Ojs.t) ->
                                            fun (x7865 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x7859
                                                   ~value:(Ojs.float_of_js
                                                             x7863)
                                                   ~index:(Ojs.float_of_js
                                                             x7864)
                                                   ~obj:(t_of_js x7865))))|]);
                             (match x7860 with
                              | Some x7862 ->
                                  ignore
                                    (Ojs.call x7861 "push"
                                       [|(any_to_js x7862)|])
                              | None -> ());
                             x7861))|])
    let (findIndex :
      'tags this ->
        predicate:(value:float -> index:float -> obj:t -> bool) ->
          ?thisArg:any -> unit -> float)
      =
      fun (x7877 : 'tags this) ->
        fun ~predicate:(x7870 : value:float -> index:float -> obj:t -> bool)
          ->
          fun ?thisArg:(x7871 : any option) ->
            fun () ->
              Ojs.float_of_js
                (let x7879 = this_to_js Obj.magic x7877 in
                 Ojs.call (Ojs.get_prop_ascii x7879 "findIndex") "apply"
                   [|x7879;((let x7872 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7872 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x7874 : Ojs.t) ->
                                          fun (x7875 : Ojs.t) ->
                                            fun (x7876 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x7870
                                                   ~value:(Ojs.float_of_js
                                                             x7874)
                                                   ~index:(Ojs.float_of_js
                                                             x7875)
                                                   ~obj:(t_of_js x7876))))|]);
                             (match x7871 with
                              | Some x7873 ->
                                  ignore
                                    (Ojs.call x7872 "push"
                                       [|(any_to_js x7873)|])
                              | None -> ());
                             x7872))|])
    let (forEach :
      'tags this ->
        callbackfn:(value:float -> index:float -> array:t -> unit) ->
          ?thisArg:any -> unit -> unit)
      =
      fun (x7887 : 'tags this) ->
        fun
          ~callbackfn:(x7880 : value:float -> index:float -> array:t -> unit)
          ->
          fun ?thisArg:(x7881 : any option) ->
            fun () ->
              ignore
                (let x7889 = this_to_js Obj.magic x7887 in
                 Ojs.call (Ojs.get_prop_ascii x7889 "forEach") "apply"
                   [|x7889;((let x7882 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7882 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x7884 : Ojs.t) ->
                                          fun (x7885 : Ojs.t) ->
                                            fun (x7886 : Ojs.t) ->
                                              x7880
                                                ~value:(Ojs.float_of_js x7884)
                                                ~index:(Ojs.float_of_js x7885)
                                                ~array:(t_of_js x7886)))|]);
                             (match x7881 with
                              | Some x7883 ->
                                  ignore
                                    (Ojs.call x7882 "push"
                                       [|(any_to_js x7883)|])
                              | None -> ());
                             x7882))|])
    let (indexOf :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> float)
      =
      fun (x7894 : 'tags this) ->
        fun ~searchElement:(x7890 : float) ->
          fun ?fromIndex:(x7891 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x7896 = this_to_js Obj.magic x7894 in
                 Ojs.call (Ojs.get_prop_ascii x7896 "indexOf") "apply"
                   [|x7896;((let x7892 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7892 "push"
                                  [|(Ojs.float_to_js x7890)|]);
                             (match x7891 with
                              | Some x7893 ->
                                  ignore
                                    (Ojs.call x7892 "push"
                                       [|(Ojs.float_to_js x7893)|])
                              | None -> ());
                             x7892))|])
    let (join : 'tags this -> ?separator:string -> unit -> string) =
      fun (x7900 : 'tags this) ->
        fun ?separator:(x7897 : string option) ->
          fun () ->
            Ojs.string_of_js
              (let x7902 = this_to_js Obj.magic x7900 in
               Ojs.call (Ojs.get_prop_ascii x7902 "join") "apply"
                 [|x7902;((let x7898 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x7897 with
                            | Some x7899 ->
                                ignore
                                  (Ojs.call x7898 "push"
                                     [|(Ojs.string_to_js x7899)|])
                            | None -> ());
                           x7898))|])
    let (lastIndexOf :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> float)
      =
      fun (x7907 : 'tags this) ->
        fun ~searchElement:(x7903 : float) ->
          fun ?fromIndex:(x7904 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x7909 = this_to_js Obj.magic x7907 in
                 Ojs.call (Ojs.get_prop_ascii x7909 "lastIndexOf") "apply"
                   [|x7909;((let x7905 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7905 "push"
                                  [|(Ojs.float_to_js x7903)|]);
                             (match x7904 with
                              | Some x7906 ->
                                  ignore
                                    (Ojs.call x7905 "push"
                                       [|(Ojs.float_to_js x7906)|])
                              | None -> ());
                             x7905))|])
    let (get_length : 'tags this -> float) =
      fun (x7910 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x7910) "length")
    let (map :
      'tags this ->
        callbackfn:(value:float -> index:float -> array:t -> float) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x7919 : 'tags this) ->
        fun
          ~callbackfn:(x7912 :
                        value:float -> index:float -> array:t -> float)
          ->
          fun ?thisArg:(x7913 : any option) ->
            fun () ->
              t_of_js
                (let x7921 = this_to_js Obj.magic x7919 in
                 Ojs.call (Ojs.get_prop_ascii x7921 "map") "apply"
                   [|x7921;((let x7914 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7914 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x7916 : Ojs.t) ->
                                          fun (x7917 : Ojs.t) ->
                                            fun (x7918 : Ojs.t) ->
                                              Ojs.float_to_js
                                                (x7912
                                                   ~value:(Ojs.float_of_js
                                                             x7916)
                                                   ~index:(Ojs.float_of_js
                                                             x7917)
                                                   ~array:(t_of_js x7918))))|]);
                             (match x7913 with
                              | Some x7915 ->
                                  ignore
                                    (Ojs.call x7914 "push"
                                       [|(any_to_js x7915)|])
                              | None -> ());
                             x7914))|])
    let (reduce :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> float)
      =
      fun (x7927 : 'tags this) ->
        fun
          ~callbackfn:(x7922 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x7927) "reduce"
               [|(Ojs.fun_to_js 4
                    (fun (x7923 : Ojs.t) ->
                       fun (x7924 : Ojs.t) ->
                         fun (x7925 : Ojs.t) ->
                           fun (x7926 : Ojs.t) ->
                             Ojs.float_to_js
                               (x7922 ~previousValue:(Ojs.float_of_js x7923)
                                  ~currentValue:(Ojs.float_of_js x7924)
                                  ~currentIndex:(Ojs.float_of_js x7925)
                                  ~array:(t_of_js x7926))))|])
    let (reduce' :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> initialValue:float -> float)
      =
      fun (x7935 : 'tags this) ->
        fun
          ~callbackfn:(x7929 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          fun ~initialValue:(x7934 : float) ->
            Ojs.float_of_js
              (Ojs.call (this_to_js Obj.magic x7935) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x7930 : Ojs.t) ->
                         fun (x7931 : Ojs.t) ->
                           fun (x7932 : Ojs.t) ->
                             fun (x7933 : Ojs.t) ->
                               Ojs.float_to_js
                                 (x7929
                                    ~previousValue:(Ojs.float_of_js x7930)
                                    ~currentValue:(Ojs.float_of_js x7931)
                                    ~currentIndex:(Ojs.float_of_js x7932)
                                    ~array:(t_of_js x7933))));(Ojs.float_to_js
                                                                 x7934)|])
    let (reduce'' :
      'tags this ->
        callbackfn:(previousValue:'U ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x7943 : 'tags this) ->
        fun
          ~callbackfn:(x7937 :
                        previousValue:'U ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x7942 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic x7943) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x7938 : Ojs.t) ->
                         fun (x7939 : Ojs.t) ->
                           fun (x7940 : Ojs.t) ->
                             fun (x7941 : Ojs.t) ->
                               Obj.magic
                                 (x7937 ~previousValue:(Obj.magic x7938)
                                    ~currentValue:(Ojs.float_of_js x7939)
                                    ~currentIndex:(Ojs.float_of_js x7940)
                                    ~array:(t_of_js x7941))));(Obj.magic
                                                                 x7942)|])
    let (reduceRight :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> float)
      =
      fun (x7950 : 'tags this) ->
        fun
          ~callbackfn:(x7945 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x7950) "reduceRight"
               [|(Ojs.fun_to_js 4
                    (fun (x7946 : Ojs.t) ->
                       fun (x7947 : Ojs.t) ->
                         fun (x7948 : Ojs.t) ->
                           fun (x7949 : Ojs.t) ->
                             Ojs.float_to_js
                               (x7945 ~previousValue:(Ojs.float_of_js x7946)
                                  ~currentValue:(Ojs.float_of_js x7947)
                                  ~currentIndex:(Ojs.float_of_js x7948)
                                  ~array:(t_of_js x7949))))|])
    let (reduceRight' :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> initialValue:float -> float)
      =
      fun (x7958 : 'tags this) ->
        fun
          ~callbackfn:(x7952 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          fun ~initialValue:(x7957 : float) ->
            Ojs.float_of_js
              (Ojs.call (this_to_js Obj.magic x7958) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x7953 : Ojs.t) ->
                         fun (x7954 : Ojs.t) ->
                           fun (x7955 : Ojs.t) ->
                             fun (x7956 : Ojs.t) ->
                               Ojs.float_to_js
                                 (x7952
                                    ~previousValue:(Ojs.float_of_js x7953)
                                    ~currentValue:(Ojs.float_of_js x7954)
                                    ~currentIndex:(Ojs.float_of_js x7955)
                                    ~array:(t_of_js x7956))));(Ojs.float_to_js
                                                                 x7957)|])
    let (reduceRight'' :
      'tags this ->
        callbackfn:(previousValue:'U ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x7966 : 'tags this) ->
        fun
          ~callbackfn:(x7960 :
                        previousValue:'U ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x7965 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic x7966) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x7961 : Ojs.t) ->
                         fun (x7962 : Ojs.t) ->
                           fun (x7963 : Ojs.t) ->
                             fun (x7964 : Ojs.t) ->
                               Obj.magic
                                 (x7960 ~previousValue:(Obj.magic x7961)
                                    ~currentValue:(Ojs.float_of_js x7962)
                                    ~currentIndex:(Ojs.float_of_js x7963)
                                    ~array:(t_of_js x7964))));(Obj.magic
                                                                 x7965)|])
    let (reverse : 'tags this -> t) =
      fun (x7968 : 'tags this) ->
        t_of_js (Ojs.call (this_to_js Obj.magic x7968) "reverse" [||])
    let (set_ :
      'tags this -> array:float ArrayLike.t -> ?offset:float -> unit -> unit)
      =
      fun (x7975 : 'tags this) ->
        fun ~array:(x7970 : float ArrayLike.t) ->
          fun ?offset:(x7971 : float option) ->
            fun () ->
              ignore
                (let x7977 = this_to_js Obj.magic x7975 in
                 Ojs.call (Ojs.get_prop_ascii x7977 "set") "apply"
                   [|x7977;((let x7972 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7972 "push"
                                  [|(ArrayLike.t_to_js Ojs.float_to_js x7970)|]);
                             (match x7971 with
                              | Some x7973 ->
                                  ignore
                                    (Ojs.call x7972 "push"
                                       [|(Ojs.float_to_js x7973)|])
                              | None -> ());
                             x7972))|])
    let (slice : 'tags this -> ?start:float -> ?end_:float -> unit -> t) =
      fun (x7983 : 'tags this) ->
        fun ?start:(x7978 : float option) ->
          fun ?end_:(x7979 : float option) ->
            fun () ->
              t_of_js
                (let x7985 = this_to_js Obj.magic x7983 in
                 Ojs.call (Ojs.get_prop_ascii x7985 "slice") "apply"
                   [|x7985;((let x7980 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x7978 with
                              | Some x7982 ->
                                  ignore
                                    (Ojs.call x7980 "push"
                                       [|(Ojs.float_to_js x7982)|])
                              | None -> ());
                             (match x7979 with
                              | Some x7981 ->
                                  ignore
                                    (Ojs.call x7980 "push"
                                       [|(Ojs.float_to_js x7981)|])
                              | None -> ());
                             x7980))|])
    let (some :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x7993 : 'tags this) ->
        fun
          ~predicate:(x7986 :
                       value:float -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x7987 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x7995 = this_to_js Obj.magic x7993 in
                 Ojs.call (Ojs.get_prop_ascii x7995 "some") "apply"
                   [|x7995;((let x7988 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7988 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x7990 : Ojs.t) ->
                                          fun (x7991 : Ojs.t) ->
                                            fun (x7992 : Ojs.t) ->
                                              unknown_to_js
                                                (x7986
                                                   ~value:(Ojs.float_of_js
                                                             x7990)
                                                   ~index:(Ojs.float_of_js
                                                             x7991)
                                                   ~array:(t_of_js x7992))))|]);
                             (match x7987 with
                              | Some x7989 ->
                                  ignore
                                    (Ojs.call x7988 "push"
                                       [|(any_to_js x7989)|])
                              | None -> ());
                             x7988))|])
    let (sort :
      'tags this ->
        ?compareFn:(a:float -> b:float -> float) -> unit -> 'tags this)
      =
      fun (x8001 : 'tags this) ->
        fun ?compareFn:(x7996 : (a:float -> b:float -> float) option) ->
          fun () ->
            this_of_js Obj.magic
              (let x8003 = this_to_js Obj.magic x8001 in
               Ojs.call (Ojs.get_prop_ascii x8003 "sort") "apply"
                 [|x8003;((let x7997 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x7996 with
                            | Some x7998 ->
                                ignore
                                  (Ojs.call x7997 "push"
                                     [|(Ojs.fun_to_js 2
                                          (fun (x7999 : Ojs.t) ->
                                             fun (x8000 : Ojs.t) ->
                                               Ojs.float_to_js
                                                 (x7998
                                                    ~a:(Ojs.float_of_js x7999)
                                                    ~b:(Ojs.float_of_js x8000))))|])
                            | None -> ());
                           x7997))|])
    let (subarray : 'tags this -> ?begin_:float -> ?end_:float -> unit -> t)
      =
      fun (x8010 : 'tags this) ->
        fun ?begin_:(x8005 : float option) ->
          fun ?end_:(x8006 : float option) ->
            fun () ->
              t_of_js
                (let x8012 = this_to_js Obj.magic x8010 in
                 Ojs.call (Ojs.get_prop_ascii x8012 "subarray") "apply"
                   [|x8012;((let x8007 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x8005 with
                              | Some x8009 ->
                                  ignore
                                    (Ojs.call x8007 "push"
                                       [|(Ojs.float_to_js x8009)|])
                              | None -> ());
                             (match x8006 with
                              | Some x8008 ->
                                  ignore
                                    (Ojs.call x8007 "push"
                                       [|(Ojs.float_to_js x8008)|])
                              | None -> ());
                             x8007))|])
    let (toLocaleString : 'tags this -> string) =
      fun (x8013 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x8013) "toLocaleString" [||])
    let (toString : 'tags this -> string) =
      fun (x8015 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x8015) "toString" [||])
    let (valueOf : 'tags this -> t) =
      fun (x8017 : 'tags this) ->
        t_of_js (Ojs.call (this_to_js Obj.magic x8017) "valueOf" [||])
    let (get : 'tags this -> float -> float) =
      fun (x8019 : 'tags this) ->
        fun (x8021 : float) ->
          Ojs.float_of_js
            (Ojs.get_prop (this_to_js Obj.magic x8019)
               (Ojs.float_to_js x8021))
    let (set : 'tags this -> float -> float -> unit) =
      fun (x8022 : 'tags this) ->
        fun (x8024 : float) ->
          fun (x8025 : float) ->
            Ojs.set_prop (this_to_js Obj.magic x8022) (Ojs.float_to_js x8024)
              (Ojs.float_to_js x8025)
    let (create : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Uint16Array") [||])
    let (create' : float Iterable.t -> t) =
      fun (x8026 : float Iterable.t) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Uint16Array")
             [|(Iterable.t_to_js Ojs.float_to_js x8026)|])
    let (from :
      arrayLike:float Iterable.t ->
        ?mapfn:(v:float -> k:float -> float) -> ?thisArg:any -> unit -> t)
      =
      fun ~arrayLike:(x8028 : float Iterable.t) ->
        fun ?mapfn:(x8029 : (v:float -> k:float -> float) option) ->
          fun ?thisArg:(x8030 : any option) ->
            fun () ->
              t_of_js
                (let x8037 = Ojs.get_prop_ascii Ojs.global "Uint16Array" in
                 Ojs.call (Ojs.get_prop_ascii x8037 "from") "apply"
                   [|x8037;((let x8031 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8031 "push"
                                  [|(Iterable.t_to_js Ojs.float_to_js x8028)|]);
                             (match x8029 with
                              | Some x8033 ->
                                  ignore
                                    (Ojs.call x8031 "push"
                                       [|(Ojs.fun_to_js 2
                                            (fun (x8034 : Ojs.t) ->
                                               fun (x8035 : Ojs.t) ->
                                                 Ojs.float_to_js
                                                   (x8033
                                                      ~v:(Ojs.float_of_js
                                                            x8034)
                                                      ~k:(Ojs.float_of_js
                                                            x8035))))|])
                              | None -> ());
                             (match x8030 with
                              | Some x8032 ->
                                  ignore
                                    (Ojs.call x8031 "push"
                                       [|(any_to_js x8032)|])
                              | None -> ());
                             x8031))|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Uint16Array")
             "prototype")
    let (create'' : float -> t) =
      fun (x8038 : float) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Uint16Array")
             [|(Ojs.float_to_js x8038)|])
    let (create''' :
      [ `U1 of float ArrayLike.t  | `U2 of ArrayBufferLike.t ] -> t) =
      fun (x8039 : [ `U1 of float ArrayLike.t  | `U2 of ArrayBufferLike.t ])
        ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Uint16Array")
             [|((match x8039 with
                 | `U1 x8040 -> ArrayLike.t_to_js Ojs.float_to_js x8040
                 | `U2 x8042 -> ArrayBufferLike.t_to_js x8042))|])
    let (create'''' :
      buffer:ArrayBufferLike.t ->
        ?byteOffset:float -> ?length:float -> unit -> t)
      =
      fun ~buffer:(x8043 : ArrayBufferLike.t) ->
        fun ?byteOffset:(x8044 : float option) ->
          fun ?length:(x8045 : float option) ->
            fun () ->
              t_of_js
                (Ojs.new_obj_arr
                   (Ojs.get_prop_ascii Ojs.global "Uint16Array")
                   (let x8046 =
                      Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                        [||] in
                    ignore
                      (Ojs.call x8046 "push"
                         [|(ArrayBufferLike.t_to_js x8043)|]);
                    (match x8044 with
                     | Some x8048 ->
                         ignore
                           (Ojs.call x8046 "push" [|(Ojs.float_to_js x8048)|])
                     | None -> ());
                    (match x8045 with
                     | Some x8047 ->
                         ignore
                           (Ojs.call x8046 "push" [|(Ojs.float_to_js x8047)|])
                     | None -> ());
                    x8046))
    let (bytes_per_element : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Uint16Array")
             "BYTES_PER_ELEMENT")
    let (of_ : float list -> t) =
      fun (x8049 : float list) ->
        t_of_js
          (let x8052 = Ojs.get_prop_ascii Ojs.global "Uint16Array" in
           Ojs.call (Ojs.get_prop_ascii x8052 "of") "apply"
             [|x8052;((let x8050 =
                         Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                           [||] in
                       List.iter
                         (fun (x8051 : float) ->
                            ignore
                              (Ojs.call x8050 "push"
                                 [|(Ojs.float_to_js x8051)|])) x8049;
                       x8050))|])
    let (from' : float ArrayLike.t -> t) =
      fun (x8053 : float ArrayLike.t) ->
        t_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Uint16Array") "from"
             [|(ArrayLike.t_to_js Ojs.float_to_js x8053)|])
    let (from'' :
      arrayLike:'T ArrayLike.t ->
        mapfn:(v:'T -> k:float -> float) -> ?thisArg:any -> unit -> t)
      =
      fun ~arrayLike:(x8055 : 'T ArrayLike.t) ->
        fun ~mapfn:(x8056 : v:'T -> k:float -> float) ->
          fun ?thisArg:(x8057 : any option) ->
            fun () ->
              t_of_js
                (let x8063 = Ojs.get_prop_ascii Ojs.global "Uint16Array" in
                 Ojs.call (Ojs.get_prop_ascii x8063 "from") "apply"
                   [|x8063;((let x8058 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8058 "push"
                                  [|(ArrayLike.t_to_js Obj.magic x8055)|]);
                             ignore
                               (Ojs.call x8058 "push"
                                  [|(Ojs.fun_to_js 2
                                       (fun (x8060 : Ojs.t) ->
                                          fun (x8061 : Ojs.t) ->
                                            Ojs.float_to_js
                                              (x8056 ~v:(Obj.magic x8060)
                                                 ~k:(Ojs.float_of_js x8061))))|]);
                             (match x8057 with
                              | Some x8059 ->
                                  ignore
                                    (Ojs.call x8058 "push"
                                       [|(any_to_js x8059)|])
                              | None -> ());
                             x8058))|])
    let cast_from = Obj.magic
  end
module Uint8Array =
  struct
    type t = [ `Uint8Array ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type tags = [ `Uint8Array ]
    type 'tags this = 'tags intf constraint 'tags = [> `Uint8Array ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x8066 : Ojs.t) -> intf_of_js __tags_of_js x8066
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x8064 : __tags intf) -> intf_to_js __tags_to_js x8064
    let (at : 'tags this -> index:float -> float option) =
      fun (x8069 : 'tags this) ->
        fun ~index:(x8068 : float) ->
          Ojs.option_of_js Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x8069) "at"
               [|(Ojs.float_to_js x8068)|])
    let (findLast :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> bool) ->
          ?thisArg:any -> unit -> 'S option)
      =
      fun (x8079 : 'tags this) ->
        fun
          ~predicate:(x8072 : value:float -> index:float -> array:t -> bool)
          ->
          fun ?thisArg:(x8073 : any option) ->
            fun () ->
              Ojs.option_of_js Obj.magic
                (let x8081 = this_to_js Obj.magic x8079 in
                 Ojs.call (Ojs.get_prop_ascii x8081 "findLast") "apply"
                   [|x8081;((let x8074 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8074 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x8076 : Ojs.t) ->
                                          fun (x8077 : Ojs.t) ->
                                            fun (x8078 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x8072
                                                   ~value:(Ojs.float_of_js
                                                             x8076)
                                                   ~index:(Ojs.float_of_js
                                                             x8077)
                                                   ~array:(t_of_js x8078))))|]);
                             (match x8073 with
                              | Some x8075 ->
                                  ignore
                                    (Ojs.call x8074 "push"
                                       [|(any_to_js x8075)|])
                              | None -> ());
                             x8074))|])
    let (findLast' :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> float option)
      =
      fun (x8090 : 'tags this) ->
        fun
          ~predicate:(x8083 :
                       value:float -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x8084 : any option) ->
            fun () ->
              Ojs.option_of_js Ojs.float_of_js
                (let x8092 = this_to_js Obj.magic x8090 in
                 Ojs.call (Ojs.get_prop_ascii x8092 "findLast") "apply"
                   [|x8092;((let x8085 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8085 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x8087 : Ojs.t) ->
                                          fun (x8088 : Ojs.t) ->
                                            fun (x8089 : Ojs.t) ->
                                              unknown_to_js
                                                (x8083
                                                   ~value:(Ojs.float_of_js
                                                             x8087)
                                                   ~index:(Ojs.float_of_js
                                                             x8088)
                                                   ~array:(t_of_js x8089))))|]);
                             (match x8084 with
                              | Some x8086 ->
                                  ignore
                                    (Ojs.call x8085 "push"
                                       [|(any_to_js x8086)|])
                              | None -> ());
                             x8085))|])
    let (findLastIndex :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> float)
      =
      fun (x8101 : 'tags this) ->
        fun
          ~predicate:(x8094 :
                       value:float -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x8095 : any option) ->
            fun () ->
              Ojs.float_of_js
                (let x8103 = this_to_js Obj.magic x8101 in
                 Ojs.call (Ojs.get_prop_ascii x8103 "findLastIndex") "apply"
                   [|x8103;((let x8096 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8096 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x8098 : Ojs.t) ->
                                          fun (x8099 : Ojs.t) ->
                                            fun (x8100 : Ojs.t) ->
                                              unknown_to_js
                                                (x8094
                                                   ~value:(Ojs.float_of_js
                                                             x8098)
                                                   ~index:(Ojs.float_of_js
                                                             x8099)
                                                   ~array:(t_of_js x8100))))|]);
                             (match x8095 with
                              | Some x8097 ->
                                  ignore
                                    (Ojs.call x8096 "push"
                                       [|(any_to_js x8097)|])
                              | None -> ());
                             x8096))|])
    let (toReversed : 'tags this -> t) =
      fun (x8104 : 'tags this) ->
        t_of_js (Ojs.call (this_to_js Obj.magic x8104) "toReversed" [||])
    let (toSorted :
      'tags this -> ?compareFn:(a:float -> b:float -> float) -> unit -> t) =
      fun (x8111 : 'tags this) ->
        fun ?compareFn:(x8106 : (a:float -> b:float -> float) option) ->
          fun () ->
            t_of_js
              (let x8113 = this_to_js Obj.magic x8111 in
               Ojs.call (Ojs.get_prop_ascii x8113 "toSorted") "apply"
                 [|x8113;((let x8107 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x8106 with
                            | Some x8108 ->
                                ignore
                                  (Ojs.call x8107 "push"
                                     [|(Ojs.fun_to_js 2
                                          (fun (x8109 : Ojs.t) ->
                                             fun (x8110 : Ojs.t) ->
                                               Ojs.float_to_js
                                                 (x8108
                                                    ~a:(Ojs.float_of_js x8109)
                                                    ~b:(Ojs.float_of_js x8110))))|])
                            | None -> ());
                           x8107))|])
    let (with_ : 'tags this -> index:float -> value:float -> t) =
      fun (x8116 : 'tags this) ->
        fun ~index:(x8114 : float) ->
          fun ~value:(x8115 : float) ->
            t_of_js
              (Ojs.call (this_to_js Obj.magic x8116) "with"
                 [|(Ojs.float_to_js x8114);(Ojs.float_to_js x8115)|])
    let (includes :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> bool)
      =
      fun (x8122 : 'tags this) ->
        fun ~searchElement:(x8118 : float) ->
          fun ?fromIndex:(x8119 : float option) ->
            fun () ->
              Ojs.bool_of_js
                (let x8124 = this_to_js Obj.magic x8122 in
                 Ojs.call (Ojs.get_prop_ascii x8124 "includes") "apply"
                   [|x8124;((let x8120 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8120 "push"
                                  [|(Ojs.float_to_js x8118)|]);
                             (match x8119 with
                              | Some x8121 ->
                                  ignore
                                    (Ojs.call x8120 "push"
                                       [|(Ojs.float_to_js x8121)|])
                              | None -> ());
                             x8120))|])
    let (entries : 'tags this -> (float * float) IterableIterator.t) =
      fun (x8125 : 'tags this) ->
        IterableIterator.t_of_js
          (fun (x8127 : Ojs.t) ->
             let x8128 = x8127 in
             ((Ojs.float_of_js (Ojs.array_get x8128 0)),
               (Ojs.float_of_js (Ojs.array_get x8128 1))))
          (Ojs.call (this_to_js Obj.magic x8125) "entries" [||])
    let (keys : 'tags this -> float IterableIterator.t) =
      fun (x8129 : 'tags this) ->
        IterableIterator.t_of_js Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x8129) "keys" [||])
    let (values : 'tags this -> float IterableIterator.t) =
      fun (x8132 : 'tags this) ->
        IterableIterator.t_of_js Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x8132) "values" [||])
    let (get_BYTES_PER_ELEMENT : 'tags this -> float) =
      fun (x8135 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x8135)
             "BYTES_PER_ELEMENT")
    let (get_buffer : 'tags this -> ArrayBufferLike.t) =
      fun (x8137 : 'tags this) ->
        ArrayBufferLike.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x8137) "buffer")
    let (get_byteLength : 'tags this -> float) =
      fun (x8139 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x8139) "byteLength")
    let (get_byteOffset : 'tags this -> float) =
      fun (x8141 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x8141) "byteOffset")
    let (copyWithin :
      'tags this ->
        target:float -> start:float -> ?end_:float -> unit -> 'tags this)
      =
      fun (x8148 : 'tags this) ->
        fun ~target:(x8143 : float) ->
          fun ~start:(x8144 : float) ->
            fun ?end_:(x8145 : float option) ->
              fun () ->
                this_of_js Obj.magic
                  (let x8150 = this_to_js Obj.magic x8148 in
                   Ojs.call (Ojs.get_prop_ascii x8150 "copyWithin") "apply"
                     [|x8150;((let x8146 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x8146 "push"
                                    [|(Ojs.float_to_js x8143)|]);
                               ignore
                                 (Ojs.call x8146 "push"
                                    [|(Ojs.float_to_js x8144)|]);
                               (match x8145 with
                                | Some x8147 ->
                                    ignore
                                      (Ojs.call x8146 "push"
                                         [|(Ojs.float_to_js x8147)|])
                                | None -> ());
                               x8146))|])
    let (every :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x8159 : 'tags this) ->
        fun
          ~predicate:(x8152 :
                       value:float -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x8153 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x8161 = this_to_js Obj.magic x8159 in
                 Ojs.call (Ojs.get_prop_ascii x8161 "every") "apply"
                   [|x8161;((let x8154 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8154 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x8156 : Ojs.t) ->
                                          fun (x8157 : Ojs.t) ->
                                            fun (x8158 : Ojs.t) ->
                                              unknown_to_js
                                                (x8152
                                                   ~value:(Ojs.float_of_js
                                                             x8156)
                                                   ~index:(Ojs.float_of_js
                                                             x8157)
                                                   ~array:(t_of_js x8158))))|]);
                             (match x8153 with
                              | Some x8155 ->
                                  ignore
                                    (Ojs.call x8154 "push"
                                       [|(any_to_js x8155)|])
                              | None -> ());
                             x8154))|])
    let (fill :
      'tags this ->
        value:float -> ?start:float -> ?end_:float -> unit -> 'tags this)
      =
      fun (x8168 : 'tags this) ->
        fun ~value:(x8162 : float) ->
          fun ?start:(x8163 : float option) ->
            fun ?end_:(x8164 : float option) ->
              fun () ->
                this_of_js Obj.magic
                  (let x8170 = this_to_js Obj.magic x8168 in
                   Ojs.call (Ojs.get_prop_ascii x8170 "fill") "apply"
                     [|x8170;((let x8165 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x8165 "push"
                                    [|(Ojs.float_to_js x8162)|]);
                               (match x8163 with
                                | Some x8167 ->
                                    ignore
                                      (Ojs.call x8165 "push"
                                         [|(Ojs.float_to_js x8167)|])
                                | None -> ());
                               (match x8164 with
                                | Some x8166 ->
                                    ignore
                                      (Ojs.call x8165 "push"
                                         [|(Ojs.float_to_js x8166)|])
                                | None -> ());
                               x8165))|])
    let (filter :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> any) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x8179 : 'tags this) ->
        fun ~predicate:(x8172 : value:float -> index:float -> array:t -> any)
          ->
          fun ?thisArg:(x8173 : any option) ->
            fun () ->
              t_of_js
                (let x8181 = this_to_js Obj.magic x8179 in
                 Ojs.call (Ojs.get_prop_ascii x8181 "filter") "apply"
                   [|x8181;((let x8174 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8174 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x8176 : Ojs.t) ->
                                          fun (x8177 : Ojs.t) ->
                                            fun (x8178 : Ojs.t) ->
                                              any_to_js
                                                (x8172
                                                   ~value:(Ojs.float_of_js
                                                             x8176)
                                                   ~index:(Ojs.float_of_js
                                                             x8177)
                                                   ~array:(t_of_js x8178))))|]);
                             (match x8173 with
                              | Some x8175 ->
                                  ignore
                                    (Ojs.call x8174 "push"
                                       [|(any_to_js x8175)|])
                              | None -> ());
                             x8174))|])
    let (find :
      'tags this ->
        predicate:(value:float -> index:float -> obj:t -> bool) ->
          ?thisArg:any -> unit -> float option)
      =
      fun (x8189 : 'tags this) ->
        fun ~predicate:(x8182 : value:float -> index:float -> obj:t -> bool)
          ->
          fun ?thisArg:(x8183 : any option) ->
            fun () ->
              Ojs.option_of_js Ojs.float_of_js
                (let x8191 = this_to_js Obj.magic x8189 in
                 Ojs.call (Ojs.get_prop_ascii x8191 "find") "apply"
                   [|x8191;((let x8184 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8184 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x8186 : Ojs.t) ->
                                          fun (x8187 : Ojs.t) ->
                                            fun (x8188 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x8182
                                                   ~value:(Ojs.float_of_js
                                                             x8186)
                                                   ~index:(Ojs.float_of_js
                                                             x8187)
                                                   ~obj:(t_of_js x8188))))|]);
                             (match x8183 with
                              | Some x8185 ->
                                  ignore
                                    (Ojs.call x8184 "push"
                                       [|(any_to_js x8185)|])
                              | None -> ());
                             x8184))|])
    let (findIndex :
      'tags this ->
        predicate:(value:float -> index:float -> obj:t -> bool) ->
          ?thisArg:any -> unit -> float)
      =
      fun (x8200 : 'tags this) ->
        fun ~predicate:(x8193 : value:float -> index:float -> obj:t -> bool)
          ->
          fun ?thisArg:(x8194 : any option) ->
            fun () ->
              Ojs.float_of_js
                (let x8202 = this_to_js Obj.magic x8200 in
                 Ojs.call (Ojs.get_prop_ascii x8202 "findIndex") "apply"
                   [|x8202;((let x8195 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8195 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x8197 : Ojs.t) ->
                                          fun (x8198 : Ojs.t) ->
                                            fun (x8199 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x8193
                                                   ~value:(Ojs.float_of_js
                                                             x8197)
                                                   ~index:(Ojs.float_of_js
                                                             x8198)
                                                   ~obj:(t_of_js x8199))))|]);
                             (match x8194 with
                              | Some x8196 ->
                                  ignore
                                    (Ojs.call x8195 "push"
                                       [|(any_to_js x8196)|])
                              | None -> ());
                             x8195))|])
    let (forEach :
      'tags this ->
        callbackfn:(value:float -> index:float -> array:t -> unit) ->
          ?thisArg:any -> unit -> unit)
      =
      fun (x8210 : 'tags this) ->
        fun
          ~callbackfn:(x8203 : value:float -> index:float -> array:t -> unit)
          ->
          fun ?thisArg:(x8204 : any option) ->
            fun () ->
              ignore
                (let x8212 = this_to_js Obj.magic x8210 in
                 Ojs.call (Ojs.get_prop_ascii x8212 "forEach") "apply"
                   [|x8212;((let x8205 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8205 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x8207 : Ojs.t) ->
                                          fun (x8208 : Ojs.t) ->
                                            fun (x8209 : Ojs.t) ->
                                              x8203
                                                ~value:(Ojs.float_of_js x8207)
                                                ~index:(Ojs.float_of_js x8208)
                                                ~array:(t_of_js x8209)))|]);
                             (match x8204 with
                              | Some x8206 ->
                                  ignore
                                    (Ojs.call x8205 "push"
                                       [|(any_to_js x8206)|])
                              | None -> ());
                             x8205))|])
    let (indexOf :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> float)
      =
      fun (x8217 : 'tags this) ->
        fun ~searchElement:(x8213 : float) ->
          fun ?fromIndex:(x8214 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x8219 = this_to_js Obj.magic x8217 in
                 Ojs.call (Ojs.get_prop_ascii x8219 "indexOf") "apply"
                   [|x8219;((let x8215 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8215 "push"
                                  [|(Ojs.float_to_js x8213)|]);
                             (match x8214 with
                              | Some x8216 ->
                                  ignore
                                    (Ojs.call x8215 "push"
                                       [|(Ojs.float_to_js x8216)|])
                              | None -> ());
                             x8215))|])
    let (join : 'tags this -> ?separator:string -> unit -> string) =
      fun (x8223 : 'tags this) ->
        fun ?separator:(x8220 : string option) ->
          fun () ->
            Ojs.string_of_js
              (let x8225 = this_to_js Obj.magic x8223 in
               Ojs.call (Ojs.get_prop_ascii x8225 "join") "apply"
                 [|x8225;((let x8221 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x8220 with
                            | Some x8222 ->
                                ignore
                                  (Ojs.call x8221 "push"
                                     [|(Ojs.string_to_js x8222)|])
                            | None -> ());
                           x8221))|])
    let (lastIndexOf :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> float)
      =
      fun (x8230 : 'tags this) ->
        fun ~searchElement:(x8226 : float) ->
          fun ?fromIndex:(x8227 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x8232 = this_to_js Obj.magic x8230 in
                 Ojs.call (Ojs.get_prop_ascii x8232 "lastIndexOf") "apply"
                   [|x8232;((let x8228 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8228 "push"
                                  [|(Ojs.float_to_js x8226)|]);
                             (match x8227 with
                              | Some x8229 ->
                                  ignore
                                    (Ojs.call x8228 "push"
                                       [|(Ojs.float_to_js x8229)|])
                              | None -> ());
                             x8228))|])
    let (get_length : 'tags this -> float) =
      fun (x8233 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x8233) "length")
    let (map :
      'tags this ->
        callbackfn:(value:float -> index:float -> array:t -> float) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x8242 : 'tags this) ->
        fun
          ~callbackfn:(x8235 :
                        value:float -> index:float -> array:t -> float)
          ->
          fun ?thisArg:(x8236 : any option) ->
            fun () ->
              t_of_js
                (let x8244 = this_to_js Obj.magic x8242 in
                 Ojs.call (Ojs.get_prop_ascii x8244 "map") "apply"
                   [|x8244;((let x8237 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8237 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x8239 : Ojs.t) ->
                                          fun (x8240 : Ojs.t) ->
                                            fun (x8241 : Ojs.t) ->
                                              Ojs.float_to_js
                                                (x8235
                                                   ~value:(Ojs.float_of_js
                                                             x8239)
                                                   ~index:(Ojs.float_of_js
                                                             x8240)
                                                   ~array:(t_of_js x8241))))|]);
                             (match x8236 with
                              | Some x8238 ->
                                  ignore
                                    (Ojs.call x8237 "push"
                                       [|(any_to_js x8238)|])
                              | None -> ());
                             x8237))|])
    let (reduce :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> float)
      =
      fun (x8250 : 'tags this) ->
        fun
          ~callbackfn:(x8245 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x8250) "reduce"
               [|(Ojs.fun_to_js 4
                    (fun (x8246 : Ojs.t) ->
                       fun (x8247 : Ojs.t) ->
                         fun (x8248 : Ojs.t) ->
                           fun (x8249 : Ojs.t) ->
                             Ojs.float_to_js
                               (x8245 ~previousValue:(Ojs.float_of_js x8246)
                                  ~currentValue:(Ojs.float_of_js x8247)
                                  ~currentIndex:(Ojs.float_of_js x8248)
                                  ~array:(t_of_js x8249))))|])
    let (reduce' :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> initialValue:float -> float)
      =
      fun (x8258 : 'tags this) ->
        fun
          ~callbackfn:(x8252 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          fun ~initialValue:(x8257 : float) ->
            Ojs.float_of_js
              (Ojs.call (this_to_js Obj.magic x8258) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x8253 : Ojs.t) ->
                         fun (x8254 : Ojs.t) ->
                           fun (x8255 : Ojs.t) ->
                             fun (x8256 : Ojs.t) ->
                               Ojs.float_to_js
                                 (x8252
                                    ~previousValue:(Ojs.float_of_js x8253)
                                    ~currentValue:(Ojs.float_of_js x8254)
                                    ~currentIndex:(Ojs.float_of_js x8255)
                                    ~array:(t_of_js x8256))));(Ojs.float_to_js
                                                                 x8257)|])
    let (reduce'' :
      'tags this ->
        callbackfn:(previousValue:'U ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x8266 : 'tags this) ->
        fun
          ~callbackfn:(x8260 :
                        previousValue:'U ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x8265 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic x8266) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x8261 : Ojs.t) ->
                         fun (x8262 : Ojs.t) ->
                           fun (x8263 : Ojs.t) ->
                             fun (x8264 : Ojs.t) ->
                               Obj.magic
                                 (x8260 ~previousValue:(Obj.magic x8261)
                                    ~currentValue:(Ojs.float_of_js x8262)
                                    ~currentIndex:(Ojs.float_of_js x8263)
                                    ~array:(t_of_js x8264))));(Obj.magic
                                                                 x8265)|])
    let (reduceRight :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> float)
      =
      fun (x8273 : 'tags this) ->
        fun
          ~callbackfn:(x8268 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x8273) "reduceRight"
               [|(Ojs.fun_to_js 4
                    (fun (x8269 : Ojs.t) ->
                       fun (x8270 : Ojs.t) ->
                         fun (x8271 : Ojs.t) ->
                           fun (x8272 : Ojs.t) ->
                             Ojs.float_to_js
                               (x8268 ~previousValue:(Ojs.float_of_js x8269)
                                  ~currentValue:(Ojs.float_of_js x8270)
                                  ~currentIndex:(Ojs.float_of_js x8271)
                                  ~array:(t_of_js x8272))))|])
    let (reduceRight' :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> initialValue:float -> float)
      =
      fun (x8281 : 'tags this) ->
        fun
          ~callbackfn:(x8275 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          fun ~initialValue:(x8280 : float) ->
            Ojs.float_of_js
              (Ojs.call (this_to_js Obj.magic x8281) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x8276 : Ojs.t) ->
                         fun (x8277 : Ojs.t) ->
                           fun (x8278 : Ojs.t) ->
                             fun (x8279 : Ojs.t) ->
                               Ojs.float_to_js
                                 (x8275
                                    ~previousValue:(Ojs.float_of_js x8276)
                                    ~currentValue:(Ojs.float_of_js x8277)
                                    ~currentIndex:(Ojs.float_of_js x8278)
                                    ~array:(t_of_js x8279))));(Ojs.float_to_js
                                                                 x8280)|])
    let (reduceRight'' :
      'tags this ->
        callbackfn:(previousValue:'U ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x8289 : 'tags this) ->
        fun
          ~callbackfn:(x8283 :
                        previousValue:'U ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x8288 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic x8289) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x8284 : Ojs.t) ->
                         fun (x8285 : Ojs.t) ->
                           fun (x8286 : Ojs.t) ->
                             fun (x8287 : Ojs.t) ->
                               Obj.magic
                                 (x8283 ~previousValue:(Obj.magic x8284)
                                    ~currentValue:(Ojs.float_of_js x8285)
                                    ~currentIndex:(Ojs.float_of_js x8286)
                                    ~array:(t_of_js x8287))));(Obj.magic
                                                                 x8288)|])
    let (reverse : 'tags this -> t) =
      fun (x8291 : 'tags this) ->
        t_of_js (Ojs.call (this_to_js Obj.magic x8291) "reverse" [||])
    let (set_ :
      'tags this -> array:float ArrayLike.t -> ?offset:float -> unit -> unit)
      =
      fun (x8298 : 'tags this) ->
        fun ~array:(x8293 : float ArrayLike.t) ->
          fun ?offset:(x8294 : float option) ->
            fun () ->
              ignore
                (let x8300 = this_to_js Obj.magic x8298 in
                 Ojs.call (Ojs.get_prop_ascii x8300 "set") "apply"
                   [|x8300;((let x8295 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8295 "push"
                                  [|(ArrayLike.t_to_js Ojs.float_to_js x8293)|]);
                             (match x8294 with
                              | Some x8296 ->
                                  ignore
                                    (Ojs.call x8295 "push"
                                       [|(Ojs.float_to_js x8296)|])
                              | None -> ());
                             x8295))|])
    let (slice : 'tags this -> ?start:float -> ?end_:float -> unit -> t) =
      fun (x8306 : 'tags this) ->
        fun ?start:(x8301 : float option) ->
          fun ?end_:(x8302 : float option) ->
            fun () ->
              t_of_js
                (let x8308 = this_to_js Obj.magic x8306 in
                 Ojs.call (Ojs.get_prop_ascii x8308 "slice") "apply"
                   [|x8308;((let x8303 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x8301 with
                              | Some x8305 ->
                                  ignore
                                    (Ojs.call x8303 "push"
                                       [|(Ojs.float_to_js x8305)|])
                              | None -> ());
                             (match x8302 with
                              | Some x8304 ->
                                  ignore
                                    (Ojs.call x8303 "push"
                                       [|(Ojs.float_to_js x8304)|])
                              | None -> ());
                             x8303))|])
    let (some :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x8316 : 'tags this) ->
        fun
          ~predicate:(x8309 :
                       value:float -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x8310 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x8318 = this_to_js Obj.magic x8316 in
                 Ojs.call (Ojs.get_prop_ascii x8318 "some") "apply"
                   [|x8318;((let x8311 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8311 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x8313 : Ojs.t) ->
                                          fun (x8314 : Ojs.t) ->
                                            fun (x8315 : Ojs.t) ->
                                              unknown_to_js
                                                (x8309
                                                   ~value:(Ojs.float_of_js
                                                             x8313)
                                                   ~index:(Ojs.float_of_js
                                                             x8314)
                                                   ~array:(t_of_js x8315))))|]);
                             (match x8310 with
                              | Some x8312 ->
                                  ignore
                                    (Ojs.call x8311 "push"
                                       [|(any_to_js x8312)|])
                              | None -> ());
                             x8311))|])
    let (sort :
      'tags this ->
        ?compareFn:(a:float -> b:float -> float) -> unit -> 'tags this)
      =
      fun (x8324 : 'tags this) ->
        fun ?compareFn:(x8319 : (a:float -> b:float -> float) option) ->
          fun () ->
            this_of_js Obj.magic
              (let x8326 = this_to_js Obj.magic x8324 in
               Ojs.call (Ojs.get_prop_ascii x8326 "sort") "apply"
                 [|x8326;((let x8320 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x8319 with
                            | Some x8321 ->
                                ignore
                                  (Ojs.call x8320 "push"
                                     [|(Ojs.fun_to_js 2
                                          (fun (x8322 : Ojs.t) ->
                                             fun (x8323 : Ojs.t) ->
                                               Ojs.float_to_js
                                                 (x8321
                                                    ~a:(Ojs.float_of_js x8322)
                                                    ~b:(Ojs.float_of_js x8323))))|])
                            | None -> ());
                           x8320))|])
    let (subarray : 'tags this -> ?begin_:float -> ?end_:float -> unit -> t)
      =
      fun (x8333 : 'tags this) ->
        fun ?begin_:(x8328 : float option) ->
          fun ?end_:(x8329 : float option) ->
            fun () ->
              t_of_js
                (let x8335 = this_to_js Obj.magic x8333 in
                 Ojs.call (Ojs.get_prop_ascii x8335 "subarray") "apply"
                   [|x8335;((let x8330 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x8328 with
                              | Some x8332 ->
                                  ignore
                                    (Ojs.call x8330 "push"
                                       [|(Ojs.float_to_js x8332)|])
                              | None -> ());
                             (match x8329 with
                              | Some x8331 ->
                                  ignore
                                    (Ojs.call x8330 "push"
                                       [|(Ojs.float_to_js x8331)|])
                              | None -> ());
                             x8330))|])
    let (toLocaleString : 'tags this -> string) =
      fun (x8336 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x8336) "toLocaleString" [||])
    let (toString : 'tags this -> string) =
      fun (x8338 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x8338) "toString" [||])
    let (valueOf : 'tags this -> t) =
      fun (x8340 : 'tags this) ->
        t_of_js (Ojs.call (this_to_js Obj.magic x8340) "valueOf" [||])
    let (get : 'tags this -> float -> float) =
      fun (x8342 : 'tags this) ->
        fun (x8344 : float) ->
          Ojs.float_of_js
            (Ojs.get_prop (this_to_js Obj.magic x8342)
               (Ojs.float_to_js x8344))
    let (set : 'tags this -> float -> float -> unit) =
      fun (x8345 : 'tags this) ->
        fun (x8347 : float) ->
          fun (x8348 : float) ->
            Ojs.set_prop (this_to_js Obj.magic x8345) (Ojs.float_to_js x8347)
              (Ojs.float_to_js x8348)
    let (create : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Uint8Array") [||])
    let (create' : float Iterable.t -> t) =
      fun (x8349 : float Iterable.t) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Uint8Array")
             [|(Iterable.t_to_js Ojs.float_to_js x8349)|])
    let (from :
      arrayLike:float Iterable.t ->
        ?mapfn:(v:float -> k:float -> float) -> ?thisArg:any -> unit -> t)
      =
      fun ~arrayLike:(x8351 : float Iterable.t) ->
        fun ?mapfn:(x8352 : (v:float -> k:float -> float) option) ->
          fun ?thisArg:(x8353 : any option) ->
            fun () ->
              t_of_js
                (let x8360 = Ojs.get_prop_ascii Ojs.global "Uint8Array" in
                 Ojs.call (Ojs.get_prop_ascii x8360 "from") "apply"
                   [|x8360;((let x8354 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8354 "push"
                                  [|(Iterable.t_to_js Ojs.float_to_js x8351)|]);
                             (match x8352 with
                              | Some x8356 ->
                                  ignore
                                    (Ojs.call x8354 "push"
                                       [|(Ojs.fun_to_js 2
                                            (fun (x8357 : Ojs.t) ->
                                               fun (x8358 : Ojs.t) ->
                                                 Ojs.float_to_js
                                                   (x8356
                                                      ~v:(Ojs.float_of_js
                                                            x8357)
                                                      ~k:(Ojs.float_of_js
                                                            x8358))))|])
                              | None -> ());
                             (match x8353 with
                              | Some x8355 ->
                                  ignore
                                    (Ojs.call x8354 "push"
                                       [|(any_to_js x8355)|])
                              | None -> ());
                             x8354))|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Uint8Array")
             "prototype")
    let (create'' : float -> t) =
      fun (x8361 : float) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Uint8Array")
             [|(Ojs.float_to_js x8361)|])
    let (create''' :
      [ `U1 of float ArrayLike.t  | `U2 of ArrayBufferLike.t ] -> t) =
      fun (x8362 : [ `U1 of float ArrayLike.t  | `U2 of ArrayBufferLike.t ])
        ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Uint8Array")
             [|((match x8362 with
                 | `U1 x8363 -> ArrayLike.t_to_js Ojs.float_to_js x8363
                 | `U2 x8365 -> ArrayBufferLike.t_to_js x8365))|])
    let (create'''' :
      buffer:ArrayBufferLike.t ->
        ?byteOffset:float -> ?length:float -> unit -> t)
      =
      fun ~buffer:(x8366 : ArrayBufferLike.t) ->
        fun ?byteOffset:(x8367 : float option) ->
          fun ?length:(x8368 : float option) ->
            fun () ->
              t_of_js
                (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "Uint8Array")
                   (let x8369 =
                      Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                        [||] in
                    ignore
                      (Ojs.call x8369 "push"
                         [|(ArrayBufferLike.t_to_js x8366)|]);
                    (match x8367 with
                     | Some x8371 ->
                         ignore
                           (Ojs.call x8369 "push" [|(Ojs.float_to_js x8371)|])
                     | None -> ());
                    (match x8368 with
                     | Some x8370 ->
                         ignore
                           (Ojs.call x8369 "push" [|(Ojs.float_to_js x8370)|])
                     | None -> ());
                    x8369))
    let (bytes_per_element : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Uint8Array")
             "BYTES_PER_ELEMENT")
    let (of_ : float list -> t) =
      fun (x8372 : float list) ->
        t_of_js
          (let x8375 = Ojs.get_prop_ascii Ojs.global "Uint8Array" in
           Ojs.call (Ojs.get_prop_ascii x8375 "of") "apply"
             [|x8375;((let x8373 =
                         Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                           [||] in
                       List.iter
                         (fun (x8374 : float) ->
                            ignore
                              (Ojs.call x8373 "push"
                                 [|(Ojs.float_to_js x8374)|])) x8372;
                       x8373))|])
    let (from' : float ArrayLike.t -> t) =
      fun (x8376 : float ArrayLike.t) ->
        t_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Uint8Array") "from"
             [|(ArrayLike.t_to_js Ojs.float_to_js x8376)|])
    let (from'' :
      arrayLike:'T ArrayLike.t ->
        mapfn:(v:'T -> k:float -> float) -> ?thisArg:any -> unit -> t)
      =
      fun ~arrayLike:(x8378 : 'T ArrayLike.t) ->
        fun ~mapfn:(x8379 : v:'T -> k:float -> float) ->
          fun ?thisArg:(x8380 : any option) ->
            fun () ->
              t_of_js
                (let x8386 = Ojs.get_prop_ascii Ojs.global "Uint8Array" in
                 Ojs.call (Ojs.get_prop_ascii x8386 "from") "apply"
                   [|x8386;((let x8381 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8381 "push"
                                  [|(ArrayLike.t_to_js Obj.magic x8378)|]);
                             ignore
                               (Ojs.call x8381 "push"
                                  [|(Ojs.fun_to_js 2
                                       (fun (x8383 : Ojs.t) ->
                                          fun (x8384 : Ojs.t) ->
                                            Ojs.float_to_js
                                              (x8379 ~v:(Obj.magic x8383)
                                                 ~k:(Ojs.float_of_js x8384))))|]);
                             (match x8380 with
                              | Some x8382 ->
                                  ignore
                                    (Ojs.call x8381 "push"
                                       [|(any_to_js x8382)|])
                              | None -> ());
                             x8381))|])
    let cast_from = Obj.magic
  end
module Int8Array =
  struct
    type t = [ `Int8Array ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type tags = [ `Int8Array ]
    type 'tags this = 'tags intf constraint 'tags = [> `Int8Array ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x8389 : Ojs.t) -> intf_of_js __tags_of_js x8389
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x8387 : __tags intf) -> intf_to_js __tags_to_js x8387
    let (at : 'tags this -> index:float -> float option) =
      fun (x8392 : 'tags this) ->
        fun ~index:(x8391 : float) ->
          Ojs.option_of_js Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x8392) "at"
               [|(Ojs.float_to_js x8391)|])
    let (findLast :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> bool) ->
          ?thisArg:any -> unit -> 'S option)
      =
      fun (x8402 : 'tags this) ->
        fun
          ~predicate:(x8395 : value:float -> index:float -> array:t -> bool)
          ->
          fun ?thisArg:(x8396 : any option) ->
            fun () ->
              Ojs.option_of_js Obj.magic
                (let x8404 = this_to_js Obj.magic x8402 in
                 Ojs.call (Ojs.get_prop_ascii x8404 "findLast") "apply"
                   [|x8404;((let x8397 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8397 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x8399 : Ojs.t) ->
                                          fun (x8400 : Ojs.t) ->
                                            fun (x8401 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x8395
                                                   ~value:(Ojs.float_of_js
                                                             x8399)
                                                   ~index:(Ojs.float_of_js
                                                             x8400)
                                                   ~array:(t_of_js x8401))))|]);
                             (match x8396 with
                              | Some x8398 ->
                                  ignore
                                    (Ojs.call x8397 "push"
                                       [|(any_to_js x8398)|])
                              | None -> ());
                             x8397))|])
    let (findLast' :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> float option)
      =
      fun (x8413 : 'tags this) ->
        fun
          ~predicate:(x8406 :
                       value:float -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x8407 : any option) ->
            fun () ->
              Ojs.option_of_js Ojs.float_of_js
                (let x8415 = this_to_js Obj.magic x8413 in
                 Ojs.call (Ojs.get_prop_ascii x8415 "findLast") "apply"
                   [|x8415;((let x8408 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8408 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x8410 : Ojs.t) ->
                                          fun (x8411 : Ojs.t) ->
                                            fun (x8412 : Ojs.t) ->
                                              unknown_to_js
                                                (x8406
                                                   ~value:(Ojs.float_of_js
                                                             x8410)
                                                   ~index:(Ojs.float_of_js
                                                             x8411)
                                                   ~array:(t_of_js x8412))))|]);
                             (match x8407 with
                              | Some x8409 ->
                                  ignore
                                    (Ojs.call x8408 "push"
                                       [|(any_to_js x8409)|])
                              | None -> ());
                             x8408))|])
    let (findLastIndex :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> float)
      =
      fun (x8424 : 'tags this) ->
        fun
          ~predicate:(x8417 :
                       value:float -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x8418 : any option) ->
            fun () ->
              Ojs.float_of_js
                (let x8426 = this_to_js Obj.magic x8424 in
                 Ojs.call (Ojs.get_prop_ascii x8426 "findLastIndex") "apply"
                   [|x8426;((let x8419 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8419 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x8421 : Ojs.t) ->
                                          fun (x8422 : Ojs.t) ->
                                            fun (x8423 : Ojs.t) ->
                                              unknown_to_js
                                                (x8417
                                                   ~value:(Ojs.float_of_js
                                                             x8421)
                                                   ~index:(Ojs.float_of_js
                                                             x8422)
                                                   ~array:(t_of_js x8423))))|]);
                             (match x8418 with
                              | Some x8420 ->
                                  ignore
                                    (Ojs.call x8419 "push"
                                       [|(any_to_js x8420)|])
                              | None -> ());
                             x8419))|])
    let (toReversed : 'tags this -> Uint8Array.t) =
      fun (x8427 : 'tags this) ->
        Uint8Array.t_of_js
          (Ojs.call (this_to_js Obj.magic x8427) "toReversed" [||])
    let (toSorted :
      'tags this ->
        ?compareFn:(a:float -> b:float -> float) -> unit -> Uint8Array.t)
      =
      fun (x8434 : 'tags this) ->
        fun ?compareFn:(x8429 : (a:float -> b:float -> float) option) ->
          fun () ->
            Uint8Array.t_of_js
              (let x8436 = this_to_js Obj.magic x8434 in
               Ojs.call (Ojs.get_prop_ascii x8436 "toSorted") "apply"
                 [|x8436;((let x8430 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x8429 with
                            | Some x8431 ->
                                ignore
                                  (Ojs.call x8430 "push"
                                     [|(Ojs.fun_to_js 2
                                          (fun (x8432 : Ojs.t) ->
                                             fun (x8433 : Ojs.t) ->
                                               Ojs.float_to_js
                                                 (x8431
                                                    ~a:(Ojs.float_of_js x8432)
                                                    ~b:(Ojs.float_of_js x8433))))|])
                            | None -> ());
                           x8430))|])
    let (with_ : 'tags this -> index:float -> value:float -> Uint8Array.t) =
      fun (x8439 : 'tags this) ->
        fun ~index:(x8437 : float) ->
          fun ~value:(x8438 : float) ->
            Uint8Array.t_of_js
              (Ojs.call (this_to_js Obj.magic x8439) "with"
                 [|(Ojs.float_to_js x8437);(Ojs.float_to_js x8438)|])
    let (includes :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> bool)
      =
      fun (x8445 : 'tags this) ->
        fun ~searchElement:(x8441 : float) ->
          fun ?fromIndex:(x8442 : float option) ->
            fun () ->
              Ojs.bool_of_js
                (let x8447 = this_to_js Obj.magic x8445 in
                 Ojs.call (Ojs.get_prop_ascii x8447 "includes") "apply"
                   [|x8447;((let x8443 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8443 "push"
                                  [|(Ojs.float_to_js x8441)|]);
                             (match x8442 with
                              | Some x8444 ->
                                  ignore
                                    (Ojs.call x8443 "push"
                                       [|(Ojs.float_to_js x8444)|])
                              | None -> ());
                             x8443))|])
    let (entries : 'tags this -> (float * float) IterableIterator.t) =
      fun (x8448 : 'tags this) ->
        IterableIterator.t_of_js
          (fun (x8450 : Ojs.t) ->
             let x8451 = x8450 in
             ((Ojs.float_of_js (Ojs.array_get x8451 0)),
               (Ojs.float_of_js (Ojs.array_get x8451 1))))
          (Ojs.call (this_to_js Obj.magic x8448) "entries" [||])
    let (keys : 'tags this -> float IterableIterator.t) =
      fun (x8452 : 'tags this) ->
        IterableIterator.t_of_js Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x8452) "keys" [||])
    let (values : 'tags this -> float IterableIterator.t) =
      fun (x8455 : 'tags this) ->
        IterableIterator.t_of_js Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x8455) "values" [||])
    let (get_BYTES_PER_ELEMENT : 'tags this -> float) =
      fun (x8458 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x8458)
             "BYTES_PER_ELEMENT")
    let (get_buffer : 'tags this -> ArrayBufferLike.t) =
      fun (x8460 : 'tags this) ->
        ArrayBufferLike.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x8460) "buffer")
    let (get_byteLength : 'tags this -> float) =
      fun (x8462 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x8462) "byteLength")
    let (get_byteOffset : 'tags this -> float) =
      fun (x8464 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x8464) "byteOffset")
    let (copyWithin :
      'tags this ->
        target:float -> start:float -> ?end_:float -> unit -> 'tags this)
      =
      fun (x8471 : 'tags this) ->
        fun ~target:(x8466 : float) ->
          fun ~start:(x8467 : float) ->
            fun ?end_:(x8468 : float option) ->
              fun () ->
                this_of_js Obj.magic
                  (let x8473 = this_to_js Obj.magic x8471 in
                   Ojs.call (Ojs.get_prop_ascii x8473 "copyWithin") "apply"
                     [|x8473;((let x8469 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x8469 "push"
                                    [|(Ojs.float_to_js x8466)|]);
                               ignore
                                 (Ojs.call x8469 "push"
                                    [|(Ojs.float_to_js x8467)|]);
                               (match x8468 with
                                | Some x8470 ->
                                    ignore
                                      (Ojs.call x8469 "push"
                                         [|(Ojs.float_to_js x8470)|])
                                | None -> ());
                               x8469))|])
    let (every :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x8482 : 'tags this) ->
        fun
          ~predicate:(x8475 :
                       value:float -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x8476 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x8484 = this_to_js Obj.magic x8482 in
                 Ojs.call (Ojs.get_prop_ascii x8484 "every") "apply"
                   [|x8484;((let x8477 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8477 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x8479 : Ojs.t) ->
                                          fun (x8480 : Ojs.t) ->
                                            fun (x8481 : Ojs.t) ->
                                              unknown_to_js
                                                (x8475
                                                   ~value:(Ojs.float_of_js
                                                             x8479)
                                                   ~index:(Ojs.float_of_js
                                                             x8480)
                                                   ~array:(t_of_js x8481))))|]);
                             (match x8476 with
                              | Some x8478 ->
                                  ignore
                                    (Ojs.call x8477 "push"
                                       [|(any_to_js x8478)|])
                              | None -> ());
                             x8477))|])
    let (fill :
      'tags this ->
        value:float -> ?start:float -> ?end_:float -> unit -> 'tags this)
      =
      fun (x8491 : 'tags this) ->
        fun ~value:(x8485 : float) ->
          fun ?start:(x8486 : float option) ->
            fun ?end_:(x8487 : float option) ->
              fun () ->
                this_of_js Obj.magic
                  (let x8493 = this_to_js Obj.magic x8491 in
                   Ojs.call (Ojs.get_prop_ascii x8493 "fill") "apply"
                     [|x8493;((let x8488 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x8488 "push"
                                    [|(Ojs.float_to_js x8485)|]);
                               (match x8486 with
                                | Some x8490 ->
                                    ignore
                                      (Ojs.call x8488 "push"
                                         [|(Ojs.float_to_js x8490)|])
                                | None -> ());
                               (match x8487 with
                                | Some x8489 ->
                                    ignore
                                      (Ojs.call x8488 "push"
                                         [|(Ojs.float_to_js x8489)|])
                                | None -> ());
                               x8488))|])
    let (filter :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> any) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x8502 : 'tags this) ->
        fun ~predicate:(x8495 : value:float -> index:float -> array:t -> any)
          ->
          fun ?thisArg:(x8496 : any option) ->
            fun () ->
              t_of_js
                (let x8504 = this_to_js Obj.magic x8502 in
                 Ojs.call (Ojs.get_prop_ascii x8504 "filter") "apply"
                   [|x8504;((let x8497 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8497 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x8499 : Ojs.t) ->
                                          fun (x8500 : Ojs.t) ->
                                            fun (x8501 : Ojs.t) ->
                                              any_to_js
                                                (x8495
                                                   ~value:(Ojs.float_of_js
                                                             x8499)
                                                   ~index:(Ojs.float_of_js
                                                             x8500)
                                                   ~array:(t_of_js x8501))))|]);
                             (match x8496 with
                              | Some x8498 ->
                                  ignore
                                    (Ojs.call x8497 "push"
                                       [|(any_to_js x8498)|])
                              | None -> ());
                             x8497))|])
    let (find :
      'tags this ->
        predicate:(value:float -> index:float -> obj:t -> bool) ->
          ?thisArg:any -> unit -> float option)
      =
      fun (x8512 : 'tags this) ->
        fun ~predicate:(x8505 : value:float -> index:float -> obj:t -> bool)
          ->
          fun ?thisArg:(x8506 : any option) ->
            fun () ->
              Ojs.option_of_js Ojs.float_of_js
                (let x8514 = this_to_js Obj.magic x8512 in
                 Ojs.call (Ojs.get_prop_ascii x8514 "find") "apply"
                   [|x8514;((let x8507 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8507 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x8509 : Ojs.t) ->
                                          fun (x8510 : Ojs.t) ->
                                            fun (x8511 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x8505
                                                   ~value:(Ojs.float_of_js
                                                             x8509)
                                                   ~index:(Ojs.float_of_js
                                                             x8510)
                                                   ~obj:(t_of_js x8511))))|]);
                             (match x8506 with
                              | Some x8508 ->
                                  ignore
                                    (Ojs.call x8507 "push"
                                       [|(any_to_js x8508)|])
                              | None -> ());
                             x8507))|])
    let (findIndex :
      'tags this ->
        predicate:(value:float -> index:float -> obj:t -> bool) ->
          ?thisArg:any -> unit -> float)
      =
      fun (x8523 : 'tags this) ->
        fun ~predicate:(x8516 : value:float -> index:float -> obj:t -> bool)
          ->
          fun ?thisArg:(x8517 : any option) ->
            fun () ->
              Ojs.float_of_js
                (let x8525 = this_to_js Obj.magic x8523 in
                 Ojs.call (Ojs.get_prop_ascii x8525 "findIndex") "apply"
                   [|x8525;((let x8518 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8518 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x8520 : Ojs.t) ->
                                          fun (x8521 : Ojs.t) ->
                                            fun (x8522 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x8516
                                                   ~value:(Ojs.float_of_js
                                                             x8520)
                                                   ~index:(Ojs.float_of_js
                                                             x8521)
                                                   ~obj:(t_of_js x8522))))|]);
                             (match x8517 with
                              | Some x8519 ->
                                  ignore
                                    (Ojs.call x8518 "push"
                                       [|(any_to_js x8519)|])
                              | None -> ());
                             x8518))|])
    let (forEach :
      'tags this ->
        callbackfn:(value:float -> index:float -> array:t -> unit) ->
          ?thisArg:any -> unit -> unit)
      =
      fun (x8533 : 'tags this) ->
        fun
          ~callbackfn:(x8526 : value:float -> index:float -> array:t -> unit)
          ->
          fun ?thisArg:(x8527 : any option) ->
            fun () ->
              ignore
                (let x8535 = this_to_js Obj.magic x8533 in
                 Ojs.call (Ojs.get_prop_ascii x8535 "forEach") "apply"
                   [|x8535;((let x8528 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8528 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x8530 : Ojs.t) ->
                                          fun (x8531 : Ojs.t) ->
                                            fun (x8532 : Ojs.t) ->
                                              x8526
                                                ~value:(Ojs.float_of_js x8530)
                                                ~index:(Ojs.float_of_js x8531)
                                                ~array:(t_of_js x8532)))|]);
                             (match x8527 with
                              | Some x8529 ->
                                  ignore
                                    (Ojs.call x8528 "push"
                                       [|(any_to_js x8529)|])
                              | None -> ());
                             x8528))|])
    let (indexOf :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> float)
      =
      fun (x8540 : 'tags this) ->
        fun ~searchElement:(x8536 : float) ->
          fun ?fromIndex:(x8537 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x8542 = this_to_js Obj.magic x8540 in
                 Ojs.call (Ojs.get_prop_ascii x8542 "indexOf") "apply"
                   [|x8542;((let x8538 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8538 "push"
                                  [|(Ojs.float_to_js x8536)|]);
                             (match x8537 with
                              | Some x8539 ->
                                  ignore
                                    (Ojs.call x8538 "push"
                                       [|(Ojs.float_to_js x8539)|])
                              | None -> ());
                             x8538))|])
    let (join : 'tags this -> ?separator:string -> unit -> string) =
      fun (x8546 : 'tags this) ->
        fun ?separator:(x8543 : string option) ->
          fun () ->
            Ojs.string_of_js
              (let x8548 = this_to_js Obj.magic x8546 in
               Ojs.call (Ojs.get_prop_ascii x8548 "join") "apply"
                 [|x8548;((let x8544 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x8543 with
                            | Some x8545 ->
                                ignore
                                  (Ojs.call x8544 "push"
                                     [|(Ojs.string_to_js x8545)|])
                            | None -> ());
                           x8544))|])
    let (lastIndexOf :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> float)
      =
      fun (x8553 : 'tags this) ->
        fun ~searchElement:(x8549 : float) ->
          fun ?fromIndex:(x8550 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x8555 = this_to_js Obj.magic x8553 in
                 Ojs.call (Ojs.get_prop_ascii x8555 "lastIndexOf") "apply"
                   [|x8555;((let x8551 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8551 "push"
                                  [|(Ojs.float_to_js x8549)|]);
                             (match x8550 with
                              | Some x8552 ->
                                  ignore
                                    (Ojs.call x8551 "push"
                                       [|(Ojs.float_to_js x8552)|])
                              | None -> ());
                             x8551))|])
    let (get_length : 'tags this -> float) =
      fun (x8556 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x8556) "length")
    let (map :
      'tags this ->
        callbackfn:(value:float -> index:float -> array:t -> float) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x8565 : 'tags this) ->
        fun
          ~callbackfn:(x8558 :
                        value:float -> index:float -> array:t -> float)
          ->
          fun ?thisArg:(x8559 : any option) ->
            fun () ->
              t_of_js
                (let x8567 = this_to_js Obj.magic x8565 in
                 Ojs.call (Ojs.get_prop_ascii x8567 "map") "apply"
                   [|x8567;((let x8560 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8560 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x8562 : Ojs.t) ->
                                          fun (x8563 : Ojs.t) ->
                                            fun (x8564 : Ojs.t) ->
                                              Ojs.float_to_js
                                                (x8558
                                                   ~value:(Ojs.float_of_js
                                                             x8562)
                                                   ~index:(Ojs.float_of_js
                                                             x8563)
                                                   ~array:(t_of_js x8564))))|]);
                             (match x8559 with
                              | Some x8561 ->
                                  ignore
                                    (Ojs.call x8560 "push"
                                       [|(any_to_js x8561)|])
                              | None -> ());
                             x8560))|])
    let (reduce :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> float)
      =
      fun (x8573 : 'tags this) ->
        fun
          ~callbackfn:(x8568 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x8573) "reduce"
               [|(Ojs.fun_to_js 4
                    (fun (x8569 : Ojs.t) ->
                       fun (x8570 : Ojs.t) ->
                         fun (x8571 : Ojs.t) ->
                           fun (x8572 : Ojs.t) ->
                             Ojs.float_to_js
                               (x8568 ~previousValue:(Ojs.float_of_js x8569)
                                  ~currentValue:(Ojs.float_of_js x8570)
                                  ~currentIndex:(Ojs.float_of_js x8571)
                                  ~array:(t_of_js x8572))))|])
    let (reduce' :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> initialValue:float -> float)
      =
      fun (x8581 : 'tags this) ->
        fun
          ~callbackfn:(x8575 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          fun ~initialValue:(x8580 : float) ->
            Ojs.float_of_js
              (Ojs.call (this_to_js Obj.magic x8581) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x8576 : Ojs.t) ->
                         fun (x8577 : Ojs.t) ->
                           fun (x8578 : Ojs.t) ->
                             fun (x8579 : Ojs.t) ->
                               Ojs.float_to_js
                                 (x8575
                                    ~previousValue:(Ojs.float_of_js x8576)
                                    ~currentValue:(Ojs.float_of_js x8577)
                                    ~currentIndex:(Ojs.float_of_js x8578)
                                    ~array:(t_of_js x8579))));(Ojs.float_to_js
                                                                 x8580)|])
    let (reduce'' :
      'tags this ->
        callbackfn:(previousValue:'U ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x8589 : 'tags this) ->
        fun
          ~callbackfn:(x8583 :
                        previousValue:'U ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x8588 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic x8589) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x8584 : Ojs.t) ->
                         fun (x8585 : Ojs.t) ->
                           fun (x8586 : Ojs.t) ->
                             fun (x8587 : Ojs.t) ->
                               Obj.magic
                                 (x8583 ~previousValue:(Obj.magic x8584)
                                    ~currentValue:(Ojs.float_of_js x8585)
                                    ~currentIndex:(Ojs.float_of_js x8586)
                                    ~array:(t_of_js x8587))));(Obj.magic
                                                                 x8588)|])
    let (reduceRight :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> float)
      =
      fun (x8596 : 'tags this) ->
        fun
          ~callbackfn:(x8591 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x8596) "reduceRight"
               [|(Ojs.fun_to_js 4
                    (fun (x8592 : Ojs.t) ->
                       fun (x8593 : Ojs.t) ->
                         fun (x8594 : Ojs.t) ->
                           fun (x8595 : Ojs.t) ->
                             Ojs.float_to_js
                               (x8591 ~previousValue:(Ojs.float_of_js x8592)
                                  ~currentValue:(Ojs.float_of_js x8593)
                                  ~currentIndex:(Ojs.float_of_js x8594)
                                  ~array:(t_of_js x8595))))|])
    let (reduceRight' :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> initialValue:float -> float)
      =
      fun (x8604 : 'tags this) ->
        fun
          ~callbackfn:(x8598 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          fun ~initialValue:(x8603 : float) ->
            Ojs.float_of_js
              (Ojs.call (this_to_js Obj.magic x8604) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x8599 : Ojs.t) ->
                         fun (x8600 : Ojs.t) ->
                           fun (x8601 : Ojs.t) ->
                             fun (x8602 : Ojs.t) ->
                               Ojs.float_to_js
                                 (x8598
                                    ~previousValue:(Ojs.float_of_js x8599)
                                    ~currentValue:(Ojs.float_of_js x8600)
                                    ~currentIndex:(Ojs.float_of_js x8601)
                                    ~array:(t_of_js x8602))));(Ojs.float_to_js
                                                                 x8603)|])
    let (reduceRight'' :
      'tags this ->
        callbackfn:(previousValue:'U ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x8612 : 'tags this) ->
        fun
          ~callbackfn:(x8606 :
                        previousValue:'U ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x8611 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic x8612) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x8607 : Ojs.t) ->
                         fun (x8608 : Ojs.t) ->
                           fun (x8609 : Ojs.t) ->
                             fun (x8610 : Ojs.t) ->
                               Obj.magic
                                 (x8606 ~previousValue:(Obj.magic x8607)
                                    ~currentValue:(Ojs.float_of_js x8608)
                                    ~currentIndex:(Ojs.float_of_js x8609)
                                    ~array:(t_of_js x8610))));(Obj.magic
                                                                 x8611)|])
    let (reverse : 'tags this -> t) =
      fun (x8614 : 'tags this) ->
        t_of_js (Ojs.call (this_to_js Obj.magic x8614) "reverse" [||])
    let (set_ :
      'tags this -> array:float ArrayLike.t -> ?offset:float -> unit -> unit)
      =
      fun (x8621 : 'tags this) ->
        fun ~array:(x8616 : float ArrayLike.t) ->
          fun ?offset:(x8617 : float option) ->
            fun () ->
              ignore
                (let x8623 = this_to_js Obj.magic x8621 in
                 Ojs.call (Ojs.get_prop_ascii x8623 "set") "apply"
                   [|x8623;((let x8618 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8618 "push"
                                  [|(ArrayLike.t_to_js Ojs.float_to_js x8616)|]);
                             (match x8617 with
                              | Some x8619 ->
                                  ignore
                                    (Ojs.call x8618 "push"
                                       [|(Ojs.float_to_js x8619)|])
                              | None -> ());
                             x8618))|])
    let (slice : 'tags this -> ?start:float -> ?end_:float -> unit -> t) =
      fun (x8629 : 'tags this) ->
        fun ?start:(x8624 : float option) ->
          fun ?end_:(x8625 : float option) ->
            fun () ->
              t_of_js
                (let x8631 = this_to_js Obj.magic x8629 in
                 Ojs.call (Ojs.get_prop_ascii x8631 "slice") "apply"
                   [|x8631;((let x8626 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x8624 with
                              | Some x8628 ->
                                  ignore
                                    (Ojs.call x8626 "push"
                                       [|(Ojs.float_to_js x8628)|])
                              | None -> ());
                             (match x8625 with
                              | Some x8627 ->
                                  ignore
                                    (Ojs.call x8626 "push"
                                       [|(Ojs.float_to_js x8627)|])
                              | None -> ());
                             x8626))|])
    let (some :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x8639 : 'tags this) ->
        fun
          ~predicate:(x8632 :
                       value:float -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x8633 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x8641 = this_to_js Obj.magic x8639 in
                 Ojs.call (Ojs.get_prop_ascii x8641 "some") "apply"
                   [|x8641;((let x8634 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8634 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x8636 : Ojs.t) ->
                                          fun (x8637 : Ojs.t) ->
                                            fun (x8638 : Ojs.t) ->
                                              unknown_to_js
                                                (x8632
                                                   ~value:(Ojs.float_of_js
                                                             x8636)
                                                   ~index:(Ojs.float_of_js
                                                             x8637)
                                                   ~array:(t_of_js x8638))))|]);
                             (match x8633 with
                              | Some x8635 ->
                                  ignore
                                    (Ojs.call x8634 "push"
                                       [|(any_to_js x8635)|])
                              | None -> ());
                             x8634))|])
    let (sort :
      'tags this ->
        ?compareFn:(a:float -> b:float -> float) -> unit -> 'tags this)
      =
      fun (x8647 : 'tags this) ->
        fun ?compareFn:(x8642 : (a:float -> b:float -> float) option) ->
          fun () ->
            this_of_js Obj.magic
              (let x8649 = this_to_js Obj.magic x8647 in
               Ojs.call (Ojs.get_prop_ascii x8649 "sort") "apply"
                 [|x8649;((let x8643 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x8642 with
                            | Some x8644 ->
                                ignore
                                  (Ojs.call x8643 "push"
                                     [|(Ojs.fun_to_js 2
                                          (fun (x8645 : Ojs.t) ->
                                             fun (x8646 : Ojs.t) ->
                                               Ojs.float_to_js
                                                 (x8644
                                                    ~a:(Ojs.float_of_js x8645)
                                                    ~b:(Ojs.float_of_js x8646))))|])
                            | None -> ());
                           x8643))|])
    let (subarray : 'tags this -> ?begin_:float -> ?end_:float -> unit -> t)
      =
      fun (x8656 : 'tags this) ->
        fun ?begin_:(x8651 : float option) ->
          fun ?end_:(x8652 : float option) ->
            fun () ->
              t_of_js
                (let x8658 = this_to_js Obj.magic x8656 in
                 Ojs.call (Ojs.get_prop_ascii x8658 "subarray") "apply"
                   [|x8658;((let x8653 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x8651 with
                              | Some x8655 ->
                                  ignore
                                    (Ojs.call x8653 "push"
                                       [|(Ojs.float_to_js x8655)|])
                              | None -> ());
                             (match x8652 with
                              | Some x8654 ->
                                  ignore
                                    (Ojs.call x8653 "push"
                                       [|(Ojs.float_to_js x8654)|])
                              | None -> ());
                             x8653))|])
    let (toLocaleString : 'tags this -> string) =
      fun (x8659 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x8659) "toLocaleString" [||])
    let (toString : 'tags this -> string) =
      fun (x8661 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x8661) "toString" [||])
    let (valueOf : 'tags this -> t) =
      fun (x8663 : 'tags this) ->
        t_of_js (Ojs.call (this_to_js Obj.magic x8663) "valueOf" [||])
    let (get : 'tags this -> float -> float) =
      fun (x8665 : 'tags this) ->
        fun (x8667 : float) ->
          Ojs.float_of_js
            (Ojs.get_prop (this_to_js Obj.magic x8665)
               (Ojs.float_to_js x8667))
    let (set : 'tags this -> float -> float -> unit) =
      fun (x8668 : 'tags this) ->
        fun (x8670 : float) ->
          fun (x8671 : float) ->
            Ojs.set_prop (this_to_js Obj.magic x8668) (Ojs.float_to_js x8670)
              (Ojs.float_to_js x8671)
    let (create : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Int8Array") [||])
    let (create' : float Iterable.t -> t) =
      fun (x8672 : float Iterable.t) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Int8Array")
             [|(Iterable.t_to_js Ojs.float_to_js x8672)|])
    let (from :
      arrayLike:float Iterable.t ->
        ?mapfn:(v:float -> k:float -> float) -> ?thisArg:any -> unit -> t)
      =
      fun ~arrayLike:(x8674 : float Iterable.t) ->
        fun ?mapfn:(x8675 : (v:float -> k:float -> float) option) ->
          fun ?thisArg:(x8676 : any option) ->
            fun () ->
              t_of_js
                (let x8683 = Ojs.get_prop_ascii Ojs.global "Int8Array" in
                 Ojs.call (Ojs.get_prop_ascii x8683 "from") "apply"
                   [|x8683;((let x8677 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8677 "push"
                                  [|(Iterable.t_to_js Ojs.float_to_js x8674)|]);
                             (match x8675 with
                              | Some x8679 ->
                                  ignore
                                    (Ojs.call x8677 "push"
                                       [|(Ojs.fun_to_js 2
                                            (fun (x8680 : Ojs.t) ->
                                               fun (x8681 : Ojs.t) ->
                                                 Ojs.float_to_js
                                                   (x8679
                                                      ~v:(Ojs.float_of_js
                                                            x8680)
                                                      ~k:(Ojs.float_of_js
                                                            x8681))))|])
                              | None -> ());
                             (match x8676 with
                              | Some x8678 ->
                                  ignore
                                    (Ojs.call x8677 "push"
                                       [|(any_to_js x8678)|])
                              | None -> ());
                             x8677))|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Int8Array")
             "prototype")
    let (create'' : float -> t) =
      fun (x8684 : float) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Int8Array")
             [|(Ojs.float_to_js x8684)|])
    let (create''' :
      [ `U1 of float ArrayLike.t  | `U2 of ArrayBufferLike.t ] -> t) =
      fun (x8685 : [ `U1 of float ArrayLike.t  | `U2 of ArrayBufferLike.t ])
        ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Int8Array")
             [|((match x8685 with
                 | `U1 x8686 -> ArrayLike.t_to_js Ojs.float_to_js x8686
                 | `U2 x8688 -> ArrayBufferLike.t_to_js x8688))|])
    let (create'''' :
      buffer:ArrayBufferLike.t ->
        ?byteOffset:float -> ?length:float -> unit -> t)
      =
      fun ~buffer:(x8689 : ArrayBufferLike.t) ->
        fun ?byteOffset:(x8690 : float option) ->
          fun ?length:(x8691 : float option) ->
            fun () ->
              t_of_js
                (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "Int8Array")
                   (let x8692 =
                      Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                        [||] in
                    ignore
                      (Ojs.call x8692 "push"
                         [|(ArrayBufferLike.t_to_js x8689)|]);
                    (match x8690 with
                     | Some x8694 ->
                         ignore
                           (Ojs.call x8692 "push" [|(Ojs.float_to_js x8694)|])
                     | None -> ());
                    (match x8691 with
                     | Some x8693 ->
                         ignore
                           (Ojs.call x8692 "push" [|(Ojs.float_to_js x8693)|])
                     | None -> ());
                    x8692))
    let (bytes_per_element : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Int8Array")
             "BYTES_PER_ELEMENT")
    let (of_ : float list -> t) =
      fun (x8695 : float list) ->
        t_of_js
          (let x8698 = Ojs.get_prop_ascii Ojs.global "Int8Array" in
           Ojs.call (Ojs.get_prop_ascii x8698 "of") "apply"
             [|x8698;((let x8696 =
                         Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                           [||] in
                       List.iter
                         (fun (x8697 : float) ->
                            ignore
                              (Ojs.call x8696 "push"
                                 [|(Ojs.float_to_js x8697)|])) x8695;
                       x8696))|])
    let (from' : float ArrayLike.t -> t) =
      fun (x8699 : float ArrayLike.t) ->
        t_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Int8Array") "from"
             [|(ArrayLike.t_to_js Ojs.float_to_js x8699)|])
    let (from'' :
      arrayLike:'T ArrayLike.t ->
        mapfn:(v:'T -> k:float -> float) -> ?thisArg:any -> unit -> t)
      =
      fun ~arrayLike:(x8701 : 'T ArrayLike.t) ->
        fun ~mapfn:(x8702 : v:'T -> k:float -> float) ->
          fun ?thisArg:(x8703 : any option) ->
            fun () ->
              t_of_js
                (let x8709 = Ojs.get_prop_ascii Ojs.global "Int8Array" in
                 Ojs.call (Ojs.get_prop_ascii x8709 "from") "apply"
                   [|x8709;((let x8704 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8704 "push"
                                  [|(ArrayLike.t_to_js Obj.magic x8701)|]);
                             ignore
                               (Ojs.call x8704 "push"
                                  [|(Ojs.fun_to_js 2
                                       (fun (x8706 : Ojs.t) ->
                                          fun (x8707 : Ojs.t) ->
                                            Ojs.float_to_js
                                              (x8702 ~v:(Obj.magic x8706)
                                                 ~k:(Ojs.float_of_js x8707))))|]);
                             (match x8703 with
                              | Some x8705 ->
                                  ignore
                                    (Ojs.call x8704 "push"
                                       [|(any_to_js x8705)|])
                              | None -> ());
                             x8704))|])
    let cast_from = Obj.magic
  end
module Int32Array =
  struct
    type t = [ `Int32Array ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type tags = [ `Int32Array ]
    type 'tags this = 'tags intf constraint 'tags = [> `Int32Array ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x8712 : Ojs.t) -> intf_of_js __tags_of_js x8712
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x8710 : __tags intf) -> intf_to_js __tags_to_js x8710
    let (at : 'tags this -> index:float -> float option) =
      fun (x8715 : 'tags this) ->
        fun ~index:(x8714 : float) ->
          Ojs.option_of_js Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x8715) "at"
               [|(Ojs.float_to_js x8714)|])
    let (findLast :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> bool) ->
          ?thisArg:any -> unit -> 'S option)
      =
      fun (x8725 : 'tags this) ->
        fun
          ~predicate:(x8718 : value:float -> index:float -> array:t -> bool)
          ->
          fun ?thisArg:(x8719 : any option) ->
            fun () ->
              Ojs.option_of_js Obj.magic
                (let x8727 = this_to_js Obj.magic x8725 in
                 Ojs.call (Ojs.get_prop_ascii x8727 "findLast") "apply"
                   [|x8727;((let x8720 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8720 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x8722 : Ojs.t) ->
                                          fun (x8723 : Ojs.t) ->
                                            fun (x8724 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x8718
                                                   ~value:(Ojs.float_of_js
                                                             x8722)
                                                   ~index:(Ojs.float_of_js
                                                             x8723)
                                                   ~array:(t_of_js x8724))))|]);
                             (match x8719 with
                              | Some x8721 ->
                                  ignore
                                    (Ojs.call x8720 "push"
                                       [|(any_to_js x8721)|])
                              | None -> ());
                             x8720))|])
    let (findLast' :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> float option)
      =
      fun (x8736 : 'tags this) ->
        fun
          ~predicate:(x8729 :
                       value:float -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x8730 : any option) ->
            fun () ->
              Ojs.option_of_js Ojs.float_of_js
                (let x8738 = this_to_js Obj.magic x8736 in
                 Ojs.call (Ojs.get_prop_ascii x8738 "findLast") "apply"
                   [|x8738;((let x8731 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8731 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x8733 : Ojs.t) ->
                                          fun (x8734 : Ojs.t) ->
                                            fun (x8735 : Ojs.t) ->
                                              unknown_to_js
                                                (x8729
                                                   ~value:(Ojs.float_of_js
                                                             x8733)
                                                   ~index:(Ojs.float_of_js
                                                             x8734)
                                                   ~array:(t_of_js x8735))))|]);
                             (match x8730 with
                              | Some x8732 ->
                                  ignore
                                    (Ojs.call x8731 "push"
                                       [|(any_to_js x8732)|])
                              | None -> ());
                             x8731))|])
    let (findLastIndex :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> float)
      =
      fun (x8747 : 'tags this) ->
        fun
          ~predicate:(x8740 :
                       value:float -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x8741 : any option) ->
            fun () ->
              Ojs.float_of_js
                (let x8749 = this_to_js Obj.magic x8747 in
                 Ojs.call (Ojs.get_prop_ascii x8749 "findLastIndex") "apply"
                   [|x8749;((let x8742 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8742 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x8744 : Ojs.t) ->
                                          fun (x8745 : Ojs.t) ->
                                            fun (x8746 : Ojs.t) ->
                                              unknown_to_js
                                                (x8740
                                                   ~value:(Ojs.float_of_js
                                                             x8744)
                                                   ~index:(Ojs.float_of_js
                                                             x8745)
                                                   ~array:(t_of_js x8746))))|]);
                             (match x8741 with
                              | Some x8743 ->
                                  ignore
                                    (Ojs.call x8742 "push"
                                       [|(any_to_js x8743)|])
                              | None -> ());
                             x8742))|])
    let (toReversed : 'tags this -> t) =
      fun (x8750 : 'tags this) ->
        t_of_js (Ojs.call (this_to_js Obj.magic x8750) "toReversed" [||])
    let (toSorted :
      'tags this -> ?compareFn:(a:float -> b:float -> float) -> unit -> t) =
      fun (x8757 : 'tags this) ->
        fun ?compareFn:(x8752 : (a:float -> b:float -> float) option) ->
          fun () ->
            t_of_js
              (let x8759 = this_to_js Obj.magic x8757 in
               Ojs.call (Ojs.get_prop_ascii x8759 "toSorted") "apply"
                 [|x8759;((let x8753 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x8752 with
                            | Some x8754 ->
                                ignore
                                  (Ojs.call x8753 "push"
                                     [|(Ojs.fun_to_js 2
                                          (fun (x8755 : Ojs.t) ->
                                             fun (x8756 : Ojs.t) ->
                                               Ojs.float_to_js
                                                 (x8754
                                                    ~a:(Ojs.float_of_js x8755)
                                                    ~b:(Ojs.float_of_js x8756))))|])
                            | None -> ());
                           x8753))|])
    let (with_ : 'tags this -> index:float -> value:float -> t) =
      fun (x8762 : 'tags this) ->
        fun ~index:(x8760 : float) ->
          fun ~value:(x8761 : float) ->
            t_of_js
              (Ojs.call (this_to_js Obj.magic x8762) "with"
                 [|(Ojs.float_to_js x8760);(Ojs.float_to_js x8761)|])
    let (includes :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> bool)
      =
      fun (x8768 : 'tags this) ->
        fun ~searchElement:(x8764 : float) ->
          fun ?fromIndex:(x8765 : float option) ->
            fun () ->
              Ojs.bool_of_js
                (let x8770 = this_to_js Obj.magic x8768 in
                 Ojs.call (Ojs.get_prop_ascii x8770 "includes") "apply"
                   [|x8770;((let x8766 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8766 "push"
                                  [|(Ojs.float_to_js x8764)|]);
                             (match x8765 with
                              | Some x8767 ->
                                  ignore
                                    (Ojs.call x8766 "push"
                                       [|(Ojs.float_to_js x8767)|])
                              | None -> ());
                             x8766))|])
    let (entries : 'tags this -> (float * float) IterableIterator.t) =
      fun (x8771 : 'tags this) ->
        IterableIterator.t_of_js
          (fun (x8773 : Ojs.t) ->
             let x8774 = x8773 in
             ((Ojs.float_of_js (Ojs.array_get x8774 0)),
               (Ojs.float_of_js (Ojs.array_get x8774 1))))
          (Ojs.call (this_to_js Obj.magic x8771) "entries" [||])
    let (keys : 'tags this -> float IterableIterator.t) =
      fun (x8775 : 'tags this) ->
        IterableIterator.t_of_js Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x8775) "keys" [||])
    let (values : 'tags this -> float IterableIterator.t) =
      fun (x8778 : 'tags this) ->
        IterableIterator.t_of_js Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x8778) "values" [||])
    let (get_BYTES_PER_ELEMENT : 'tags this -> float) =
      fun (x8781 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x8781)
             "BYTES_PER_ELEMENT")
    let (get_buffer : 'tags this -> ArrayBufferLike.t) =
      fun (x8783 : 'tags this) ->
        ArrayBufferLike.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x8783) "buffer")
    let (get_byteLength : 'tags this -> float) =
      fun (x8785 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x8785) "byteLength")
    let (get_byteOffset : 'tags this -> float) =
      fun (x8787 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x8787) "byteOffset")
    let (copyWithin :
      'tags this ->
        target:float -> start:float -> ?end_:float -> unit -> 'tags this)
      =
      fun (x8794 : 'tags this) ->
        fun ~target:(x8789 : float) ->
          fun ~start:(x8790 : float) ->
            fun ?end_:(x8791 : float option) ->
              fun () ->
                this_of_js Obj.magic
                  (let x8796 = this_to_js Obj.magic x8794 in
                   Ojs.call (Ojs.get_prop_ascii x8796 "copyWithin") "apply"
                     [|x8796;((let x8792 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x8792 "push"
                                    [|(Ojs.float_to_js x8789)|]);
                               ignore
                                 (Ojs.call x8792 "push"
                                    [|(Ojs.float_to_js x8790)|]);
                               (match x8791 with
                                | Some x8793 ->
                                    ignore
                                      (Ojs.call x8792 "push"
                                         [|(Ojs.float_to_js x8793)|])
                                | None -> ());
                               x8792))|])
    let (every :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x8805 : 'tags this) ->
        fun
          ~predicate:(x8798 :
                       value:float -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x8799 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x8807 = this_to_js Obj.magic x8805 in
                 Ojs.call (Ojs.get_prop_ascii x8807 "every") "apply"
                   [|x8807;((let x8800 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8800 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x8802 : Ojs.t) ->
                                          fun (x8803 : Ojs.t) ->
                                            fun (x8804 : Ojs.t) ->
                                              unknown_to_js
                                                (x8798
                                                   ~value:(Ojs.float_of_js
                                                             x8802)
                                                   ~index:(Ojs.float_of_js
                                                             x8803)
                                                   ~array:(t_of_js x8804))))|]);
                             (match x8799 with
                              | Some x8801 ->
                                  ignore
                                    (Ojs.call x8800 "push"
                                       [|(any_to_js x8801)|])
                              | None -> ());
                             x8800))|])
    let (fill :
      'tags this ->
        value:float -> ?start:float -> ?end_:float -> unit -> 'tags this)
      =
      fun (x8814 : 'tags this) ->
        fun ~value:(x8808 : float) ->
          fun ?start:(x8809 : float option) ->
            fun ?end_:(x8810 : float option) ->
              fun () ->
                this_of_js Obj.magic
                  (let x8816 = this_to_js Obj.magic x8814 in
                   Ojs.call (Ojs.get_prop_ascii x8816 "fill") "apply"
                     [|x8816;((let x8811 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x8811 "push"
                                    [|(Ojs.float_to_js x8808)|]);
                               (match x8809 with
                                | Some x8813 ->
                                    ignore
                                      (Ojs.call x8811 "push"
                                         [|(Ojs.float_to_js x8813)|])
                                | None -> ());
                               (match x8810 with
                                | Some x8812 ->
                                    ignore
                                      (Ojs.call x8811 "push"
                                         [|(Ojs.float_to_js x8812)|])
                                | None -> ());
                               x8811))|])
    let (filter :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> any) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x8825 : 'tags this) ->
        fun ~predicate:(x8818 : value:float -> index:float -> array:t -> any)
          ->
          fun ?thisArg:(x8819 : any option) ->
            fun () ->
              t_of_js
                (let x8827 = this_to_js Obj.magic x8825 in
                 Ojs.call (Ojs.get_prop_ascii x8827 "filter") "apply"
                   [|x8827;((let x8820 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8820 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x8822 : Ojs.t) ->
                                          fun (x8823 : Ojs.t) ->
                                            fun (x8824 : Ojs.t) ->
                                              any_to_js
                                                (x8818
                                                   ~value:(Ojs.float_of_js
                                                             x8822)
                                                   ~index:(Ojs.float_of_js
                                                             x8823)
                                                   ~array:(t_of_js x8824))))|]);
                             (match x8819 with
                              | Some x8821 ->
                                  ignore
                                    (Ojs.call x8820 "push"
                                       [|(any_to_js x8821)|])
                              | None -> ());
                             x8820))|])
    let (find :
      'tags this ->
        predicate:(value:float -> index:float -> obj:t -> bool) ->
          ?thisArg:any -> unit -> float option)
      =
      fun (x8835 : 'tags this) ->
        fun ~predicate:(x8828 : value:float -> index:float -> obj:t -> bool)
          ->
          fun ?thisArg:(x8829 : any option) ->
            fun () ->
              Ojs.option_of_js Ojs.float_of_js
                (let x8837 = this_to_js Obj.magic x8835 in
                 Ojs.call (Ojs.get_prop_ascii x8837 "find") "apply"
                   [|x8837;((let x8830 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8830 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x8832 : Ojs.t) ->
                                          fun (x8833 : Ojs.t) ->
                                            fun (x8834 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x8828
                                                   ~value:(Ojs.float_of_js
                                                             x8832)
                                                   ~index:(Ojs.float_of_js
                                                             x8833)
                                                   ~obj:(t_of_js x8834))))|]);
                             (match x8829 with
                              | Some x8831 ->
                                  ignore
                                    (Ojs.call x8830 "push"
                                       [|(any_to_js x8831)|])
                              | None -> ());
                             x8830))|])
    let (findIndex :
      'tags this ->
        predicate:(value:float -> index:float -> obj:t -> bool) ->
          ?thisArg:any -> unit -> float)
      =
      fun (x8846 : 'tags this) ->
        fun ~predicate:(x8839 : value:float -> index:float -> obj:t -> bool)
          ->
          fun ?thisArg:(x8840 : any option) ->
            fun () ->
              Ojs.float_of_js
                (let x8848 = this_to_js Obj.magic x8846 in
                 Ojs.call (Ojs.get_prop_ascii x8848 "findIndex") "apply"
                   [|x8848;((let x8841 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8841 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x8843 : Ojs.t) ->
                                          fun (x8844 : Ojs.t) ->
                                            fun (x8845 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x8839
                                                   ~value:(Ojs.float_of_js
                                                             x8843)
                                                   ~index:(Ojs.float_of_js
                                                             x8844)
                                                   ~obj:(t_of_js x8845))))|]);
                             (match x8840 with
                              | Some x8842 ->
                                  ignore
                                    (Ojs.call x8841 "push"
                                       [|(any_to_js x8842)|])
                              | None -> ());
                             x8841))|])
    let (forEach :
      'tags this ->
        callbackfn:(value:float -> index:float -> array:t -> unit) ->
          ?thisArg:any -> unit -> unit)
      =
      fun (x8856 : 'tags this) ->
        fun
          ~callbackfn:(x8849 : value:float -> index:float -> array:t -> unit)
          ->
          fun ?thisArg:(x8850 : any option) ->
            fun () ->
              ignore
                (let x8858 = this_to_js Obj.magic x8856 in
                 Ojs.call (Ojs.get_prop_ascii x8858 "forEach") "apply"
                   [|x8858;((let x8851 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8851 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x8853 : Ojs.t) ->
                                          fun (x8854 : Ojs.t) ->
                                            fun (x8855 : Ojs.t) ->
                                              x8849
                                                ~value:(Ojs.float_of_js x8853)
                                                ~index:(Ojs.float_of_js x8854)
                                                ~array:(t_of_js x8855)))|]);
                             (match x8850 with
                              | Some x8852 ->
                                  ignore
                                    (Ojs.call x8851 "push"
                                       [|(any_to_js x8852)|])
                              | None -> ());
                             x8851))|])
    let (indexOf :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> float)
      =
      fun (x8863 : 'tags this) ->
        fun ~searchElement:(x8859 : float) ->
          fun ?fromIndex:(x8860 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x8865 = this_to_js Obj.magic x8863 in
                 Ojs.call (Ojs.get_prop_ascii x8865 "indexOf") "apply"
                   [|x8865;((let x8861 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8861 "push"
                                  [|(Ojs.float_to_js x8859)|]);
                             (match x8860 with
                              | Some x8862 ->
                                  ignore
                                    (Ojs.call x8861 "push"
                                       [|(Ojs.float_to_js x8862)|])
                              | None -> ());
                             x8861))|])
    let (join : 'tags this -> ?separator:string -> unit -> string) =
      fun (x8869 : 'tags this) ->
        fun ?separator:(x8866 : string option) ->
          fun () ->
            Ojs.string_of_js
              (let x8871 = this_to_js Obj.magic x8869 in
               Ojs.call (Ojs.get_prop_ascii x8871 "join") "apply"
                 [|x8871;((let x8867 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x8866 with
                            | Some x8868 ->
                                ignore
                                  (Ojs.call x8867 "push"
                                     [|(Ojs.string_to_js x8868)|])
                            | None -> ());
                           x8867))|])
    let (lastIndexOf :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> float)
      =
      fun (x8876 : 'tags this) ->
        fun ~searchElement:(x8872 : float) ->
          fun ?fromIndex:(x8873 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x8878 = this_to_js Obj.magic x8876 in
                 Ojs.call (Ojs.get_prop_ascii x8878 "lastIndexOf") "apply"
                   [|x8878;((let x8874 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8874 "push"
                                  [|(Ojs.float_to_js x8872)|]);
                             (match x8873 with
                              | Some x8875 ->
                                  ignore
                                    (Ojs.call x8874 "push"
                                       [|(Ojs.float_to_js x8875)|])
                              | None -> ());
                             x8874))|])
    let (get_length : 'tags this -> float) =
      fun (x8879 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x8879) "length")
    let (map :
      'tags this ->
        callbackfn:(value:float -> index:float -> array:t -> float) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x8888 : 'tags this) ->
        fun
          ~callbackfn:(x8881 :
                        value:float -> index:float -> array:t -> float)
          ->
          fun ?thisArg:(x8882 : any option) ->
            fun () ->
              t_of_js
                (let x8890 = this_to_js Obj.magic x8888 in
                 Ojs.call (Ojs.get_prop_ascii x8890 "map") "apply"
                   [|x8890;((let x8883 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8883 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x8885 : Ojs.t) ->
                                          fun (x8886 : Ojs.t) ->
                                            fun (x8887 : Ojs.t) ->
                                              Ojs.float_to_js
                                                (x8881
                                                   ~value:(Ojs.float_of_js
                                                             x8885)
                                                   ~index:(Ojs.float_of_js
                                                             x8886)
                                                   ~array:(t_of_js x8887))))|]);
                             (match x8882 with
                              | Some x8884 ->
                                  ignore
                                    (Ojs.call x8883 "push"
                                       [|(any_to_js x8884)|])
                              | None -> ());
                             x8883))|])
    let (reduce :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> float)
      =
      fun (x8896 : 'tags this) ->
        fun
          ~callbackfn:(x8891 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x8896) "reduce"
               [|(Ojs.fun_to_js 4
                    (fun (x8892 : Ojs.t) ->
                       fun (x8893 : Ojs.t) ->
                         fun (x8894 : Ojs.t) ->
                           fun (x8895 : Ojs.t) ->
                             Ojs.float_to_js
                               (x8891 ~previousValue:(Ojs.float_of_js x8892)
                                  ~currentValue:(Ojs.float_of_js x8893)
                                  ~currentIndex:(Ojs.float_of_js x8894)
                                  ~array:(t_of_js x8895))))|])
    let (reduce' :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> initialValue:float -> float)
      =
      fun (x8904 : 'tags this) ->
        fun
          ~callbackfn:(x8898 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          fun ~initialValue:(x8903 : float) ->
            Ojs.float_of_js
              (Ojs.call (this_to_js Obj.magic x8904) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x8899 : Ojs.t) ->
                         fun (x8900 : Ojs.t) ->
                           fun (x8901 : Ojs.t) ->
                             fun (x8902 : Ojs.t) ->
                               Ojs.float_to_js
                                 (x8898
                                    ~previousValue:(Ojs.float_of_js x8899)
                                    ~currentValue:(Ojs.float_of_js x8900)
                                    ~currentIndex:(Ojs.float_of_js x8901)
                                    ~array:(t_of_js x8902))));(Ojs.float_to_js
                                                                 x8903)|])
    let (reduce'' :
      'tags this ->
        callbackfn:(previousValue:'U ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x8912 : 'tags this) ->
        fun
          ~callbackfn:(x8906 :
                        previousValue:'U ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x8911 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic x8912) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x8907 : Ojs.t) ->
                         fun (x8908 : Ojs.t) ->
                           fun (x8909 : Ojs.t) ->
                             fun (x8910 : Ojs.t) ->
                               Obj.magic
                                 (x8906 ~previousValue:(Obj.magic x8907)
                                    ~currentValue:(Ojs.float_of_js x8908)
                                    ~currentIndex:(Ojs.float_of_js x8909)
                                    ~array:(t_of_js x8910))));(Obj.magic
                                                                 x8911)|])
    let (reduceRight :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> float)
      =
      fun (x8919 : 'tags this) ->
        fun
          ~callbackfn:(x8914 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x8919) "reduceRight"
               [|(Ojs.fun_to_js 4
                    (fun (x8915 : Ojs.t) ->
                       fun (x8916 : Ojs.t) ->
                         fun (x8917 : Ojs.t) ->
                           fun (x8918 : Ojs.t) ->
                             Ojs.float_to_js
                               (x8914 ~previousValue:(Ojs.float_of_js x8915)
                                  ~currentValue:(Ojs.float_of_js x8916)
                                  ~currentIndex:(Ojs.float_of_js x8917)
                                  ~array:(t_of_js x8918))))|])
    let (reduceRight' :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> initialValue:float -> float)
      =
      fun (x8927 : 'tags this) ->
        fun
          ~callbackfn:(x8921 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          fun ~initialValue:(x8926 : float) ->
            Ojs.float_of_js
              (Ojs.call (this_to_js Obj.magic x8927) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x8922 : Ojs.t) ->
                         fun (x8923 : Ojs.t) ->
                           fun (x8924 : Ojs.t) ->
                             fun (x8925 : Ojs.t) ->
                               Ojs.float_to_js
                                 (x8921
                                    ~previousValue:(Ojs.float_of_js x8922)
                                    ~currentValue:(Ojs.float_of_js x8923)
                                    ~currentIndex:(Ojs.float_of_js x8924)
                                    ~array:(t_of_js x8925))));(Ojs.float_to_js
                                                                 x8926)|])
    let (reduceRight'' :
      'tags this ->
        callbackfn:(previousValue:'U ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x8935 : 'tags this) ->
        fun
          ~callbackfn:(x8929 :
                        previousValue:'U ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x8934 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic x8935) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x8930 : Ojs.t) ->
                         fun (x8931 : Ojs.t) ->
                           fun (x8932 : Ojs.t) ->
                             fun (x8933 : Ojs.t) ->
                               Obj.magic
                                 (x8929 ~previousValue:(Obj.magic x8930)
                                    ~currentValue:(Ojs.float_of_js x8931)
                                    ~currentIndex:(Ojs.float_of_js x8932)
                                    ~array:(t_of_js x8933))));(Obj.magic
                                                                 x8934)|])
    let (reverse : 'tags this -> t) =
      fun (x8937 : 'tags this) ->
        t_of_js (Ojs.call (this_to_js Obj.magic x8937) "reverse" [||])
    let (set_ :
      'tags this -> array:float ArrayLike.t -> ?offset:float -> unit -> unit)
      =
      fun (x8944 : 'tags this) ->
        fun ~array:(x8939 : float ArrayLike.t) ->
          fun ?offset:(x8940 : float option) ->
            fun () ->
              ignore
                (let x8946 = this_to_js Obj.magic x8944 in
                 Ojs.call (Ojs.get_prop_ascii x8946 "set") "apply"
                   [|x8946;((let x8941 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8941 "push"
                                  [|(ArrayLike.t_to_js Ojs.float_to_js x8939)|]);
                             (match x8940 with
                              | Some x8942 ->
                                  ignore
                                    (Ojs.call x8941 "push"
                                       [|(Ojs.float_to_js x8942)|])
                              | None -> ());
                             x8941))|])
    let (slice : 'tags this -> ?start:float -> ?end_:float -> unit -> t) =
      fun (x8952 : 'tags this) ->
        fun ?start:(x8947 : float option) ->
          fun ?end_:(x8948 : float option) ->
            fun () ->
              t_of_js
                (let x8954 = this_to_js Obj.magic x8952 in
                 Ojs.call (Ojs.get_prop_ascii x8954 "slice") "apply"
                   [|x8954;((let x8949 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x8947 with
                              | Some x8951 ->
                                  ignore
                                    (Ojs.call x8949 "push"
                                       [|(Ojs.float_to_js x8951)|])
                              | None -> ());
                             (match x8948 with
                              | Some x8950 ->
                                  ignore
                                    (Ojs.call x8949 "push"
                                       [|(Ojs.float_to_js x8950)|])
                              | None -> ());
                             x8949))|])
    let (some :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x8962 : 'tags this) ->
        fun
          ~predicate:(x8955 :
                       value:float -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x8956 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x8964 = this_to_js Obj.magic x8962 in
                 Ojs.call (Ojs.get_prop_ascii x8964 "some") "apply"
                   [|x8964;((let x8957 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8957 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x8959 : Ojs.t) ->
                                          fun (x8960 : Ojs.t) ->
                                            fun (x8961 : Ojs.t) ->
                                              unknown_to_js
                                                (x8955
                                                   ~value:(Ojs.float_of_js
                                                             x8959)
                                                   ~index:(Ojs.float_of_js
                                                             x8960)
                                                   ~array:(t_of_js x8961))))|]);
                             (match x8956 with
                              | Some x8958 ->
                                  ignore
                                    (Ojs.call x8957 "push"
                                       [|(any_to_js x8958)|])
                              | None -> ());
                             x8957))|])
    let (sort :
      'tags this ->
        ?compareFn:(a:float -> b:float -> float) -> unit -> 'tags this)
      =
      fun (x8970 : 'tags this) ->
        fun ?compareFn:(x8965 : (a:float -> b:float -> float) option) ->
          fun () ->
            this_of_js Obj.magic
              (let x8972 = this_to_js Obj.magic x8970 in
               Ojs.call (Ojs.get_prop_ascii x8972 "sort") "apply"
                 [|x8972;((let x8966 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x8965 with
                            | Some x8967 ->
                                ignore
                                  (Ojs.call x8966 "push"
                                     [|(Ojs.fun_to_js 2
                                          (fun (x8968 : Ojs.t) ->
                                             fun (x8969 : Ojs.t) ->
                                               Ojs.float_to_js
                                                 (x8967
                                                    ~a:(Ojs.float_of_js x8968)
                                                    ~b:(Ojs.float_of_js x8969))))|])
                            | None -> ());
                           x8966))|])
    let (subarray : 'tags this -> ?begin_:float -> ?end_:float -> unit -> t)
      =
      fun (x8979 : 'tags this) ->
        fun ?begin_:(x8974 : float option) ->
          fun ?end_:(x8975 : float option) ->
            fun () ->
              t_of_js
                (let x8981 = this_to_js Obj.magic x8979 in
                 Ojs.call (Ojs.get_prop_ascii x8981 "subarray") "apply"
                   [|x8981;((let x8976 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x8974 with
                              | Some x8978 ->
                                  ignore
                                    (Ojs.call x8976 "push"
                                       [|(Ojs.float_to_js x8978)|])
                              | None -> ());
                             (match x8975 with
                              | Some x8977 ->
                                  ignore
                                    (Ojs.call x8976 "push"
                                       [|(Ojs.float_to_js x8977)|])
                              | None -> ());
                             x8976))|])
    let (toLocaleString : 'tags this -> string) =
      fun (x8982 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x8982) "toLocaleString" [||])
    let (toString : 'tags this -> string) =
      fun (x8984 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x8984) "toString" [||])
    let (valueOf : 'tags this -> t) =
      fun (x8986 : 'tags this) ->
        t_of_js (Ojs.call (this_to_js Obj.magic x8986) "valueOf" [||])
    let (get : 'tags this -> float -> float) =
      fun (x8988 : 'tags this) ->
        fun (x8990 : float) ->
          Ojs.float_of_js
            (Ojs.get_prop (this_to_js Obj.magic x8988)
               (Ojs.float_to_js x8990))
    let (set : 'tags this -> float -> float -> unit) =
      fun (x8991 : 'tags this) ->
        fun (x8993 : float) ->
          fun (x8994 : float) ->
            Ojs.set_prop (this_to_js Obj.magic x8991) (Ojs.float_to_js x8993)
              (Ojs.float_to_js x8994)
    let (create : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Int32Array") [||])
    let (create' : float Iterable.t -> t) =
      fun (x8995 : float Iterable.t) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Int32Array")
             [|(Iterable.t_to_js Ojs.float_to_js x8995)|])
    let (from :
      arrayLike:float Iterable.t ->
        ?mapfn:(v:float -> k:float -> float) -> ?thisArg:any -> unit -> t)
      =
      fun ~arrayLike:(x8997 : float Iterable.t) ->
        fun ?mapfn:(x8998 : (v:float -> k:float -> float) option) ->
          fun ?thisArg:(x8999 : any option) ->
            fun () ->
              t_of_js
                (let x9006 = Ojs.get_prop_ascii Ojs.global "Int32Array" in
                 Ojs.call (Ojs.get_prop_ascii x9006 "from") "apply"
                   [|x9006;((let x9000 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x9000 "push"
                                  [|(Iterable.t_to_js Ojs.float_to_js x8997)|]);
                             (match x8998 with
                              | Some x9002 ->
                                  ignore
                                    (Ojs.call x9000 "push"
                                       [|(Ojs.fun_to_js 2
                                            (fun (x9003 : Ojs.t) ->
                                               fun (x9004 : Ojs.t) ->
                                                 Ojs.float_to_js
                                                   (x9002
                                                      ~v:(Ojs.float_of_js
                                                            x9003)
                                                      ~k:(Ojs.float_of_js
                                                            x9004))))|])
                              | None -> ());
                             (match x8999 with
                              | Some x9001 ->
                                  ignore
                                    (Ojs.call x9000 "push"
                                       [|(any_to_js x9001)|])
                              | None -> ());
                             x9000))|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Int32Array")
             "prototype")
    let (create'' : float -> t) =
      fun (x9007 : float) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Int32Array")
             [|(Ojs.float_to_js x9007)|])
    let (create''' :
      [ `U1 of float ArrayLike.t  | `U2 of ArrayBufferLike.t ] -> t) =
      fun (x9008 : [ `U1 of float ArrayLike.t  | `U2 of ArrayBufferLike.t ])
        ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Int32Array")
             [|((match x9008 with
                 | `U1 x9009 -> ArrayLike.t_to_js Ojs.float_to_js x9009
                 | `U2 x9011 -> ArrayBufferLike.t_to_js x9011))|])
    let (create'''' :
      buffer:ArrayBufferLike.t ->
        ?byteOffset:float -> ?length:float -> unit -> t)
      =
      fun ~buffer:(x9012 : ArrayBufferLike.t) ->
        fun ?byteOffset:(x9013 : float option) ->
          fun ?length:(x9014 : float option) ->
            fun () ->
              t_of_js
                (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "Int32Array")
                   (let x9015 =
                      Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                        [||] in
                    ignore
                      (Ojs.call x9015 "push"
                         [|(ArrayBufferLike.t_to_js x9012)|]);
                    (match x9013 with
                     | Some x9017 ->
                         ignore
                           (Ojs.call x9015 "push" [|(Ojs.float_to_js x9017)|])
                     | None -> ());
                    (match x9014 with
                     | Some x9016 ->
                         ignore
                           (Ojs.call x9015 "push" [|(Ojs.float_to_js x9016)|])
                     | None -> ());
                    x9015))
    let (bytes_per_element : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Int32Array")
             "BYTES_PER_ELEMENT")
    let (of_ : float list -> t) =
      fun (x9018 : float list) ->
        t_of_js
          (let x9021 = Ojs.get_prop_ascii Ojs.global "Int32Array" in
           Ojs.call (Ojs.get_prop_ascii x9021 "of") "apply"
             [|x9021;((let x9019 =
                         Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                           [||] in
                       List.iter
                         (fun (x9020 : float) ->
                            ignore
                              (Ojs.call x9019 "push"
                                 [|(Ojs.float_to_js x9020)|])) x9018;
                       x9019))|])
    let (from' : float ArrayLike.t -> t) =
      fun (x9022 : float ArrayLike.t) ->
        t_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Int32Array") "from"
             [|(ArrayLike.t_to_js Ojs.float_to_js x9022)|])
    let (from'' :
      arrayLike:'T ArrayLike.t ->
        mapfn:(v:'T -> k:float -> float) -> ?thisArg:any -> unit -> t)
      =
      fun ~arrayLike:(x9024 : 'T ArrayLike.t) ->
        fun ~mapfn:(x9025 : v:'T -> k:float -> float) ->
          fun ?thisArg:(x9026 : any option) ->
            fun () ->
              t_of_js
                (let x9032 = Ojs.get_prop_ascii Ojs.global "Int32Array" in
                 Ojs.call (Ojs.get_prop_ascii x9032 "from") "apply"
                   [|x9032;((let x9027 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x9027 "push"
                                  [|(ArrayLike.t_to_js Obj.magic x9024)|]);
                             ignore
                               (Ojs.call x9027 "push"
                                  [|(Ojs.fun_to_js 2
                                       (fun (x9029 : Ojs.t) ->
                                          fun (x9030 : Ojs.t) ->
                                            Ojs.float_to_js
                                              (x9025 ~v:(Obj.magic x9029)
                                                 ~k:(Ojs.float_of_js x9030))))|]);
                             (match x9026 with
                              | Some x9028 ->
                                  ignore
                                    (Ojs.call x9027 "push"
                                       [|(any_to_js x9028)|])
                              | None -> ());
                             x9027))|])
    let cast_from = Obj.magic
  end
module Int16Array =
  struct
    type t = [ `Int16Array ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type tags = [ `Int16Array ]
    type 'tags this = 'tags intf constraint 'tags = [> `Int16Array ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x9035 : Ojs.t) -> intf_of_js __tags_of_js x9035
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x9033 : __tags intf) -> intf_to_js __tags_to_js x9033
    let (at : 'tags this -> index:float -> float option) =
      fun (x9038 : 'tags this) ->
        fun ~index:(x9037 : float) ->
          Ojs.option_of_js Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x9038) "at"
               [|(Ojs.float_to_js x9037)|])
    let (findLast :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> bool) ->
          ?thisArg:any -> unit -> 'S option)
      =
      fun (x9048 : 'tags this) ->
        fun
          ~predicate:(x9041 : value:float -> index:float -> array:t -> bool)
          ->
          fun ?thisArg:(x9042 : any option) ->
            fun () ->
              Ojs.option_of_js Obj.magic
                (let x9050 = this_to_js Obj.magic x9048 in
                 Ojs.call (Ojs.get_prop_ascii x9050 "findLast") "apply"
                   [|x9050;((let x9043 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x9043 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x9045 : Ojs.t) ->
                                          fun (x9046 : Ojs.t) ->
                                            fun (x9047 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x9041
                                                   ~value:(Ojs.float_of_js
                                                             x9045)
                                                   ~index:(Ojs.float_of_js
                                                             x9046)
                                                   ~array:(t_of_js x9047))))|]);
                             (match x9042 with
                              | Some x9044 ->
                                  ignore
                                    (Ojs.call x9043 "push"
                                       [|(any_to_js x9044)|])
                              | None -> ());
                             x9043))|])
    let (findLast' :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> float option)
      =
      fun (x9059 : 'tags this) ->
        fun
          ~predicate:(x9052 :
                       value:float -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x9053 : any option) ->
            fun () ->
              Ojs.option_of_js Ojs.float_of_js
                (let x9061 = this_to_js Obj.magic x9059 in
                 Ojs.call (Ojs.get_prop_ascii x9061 "findLast") "apply"
                   [|x9061;((let x9054 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x9054 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x9056 : Ojs.t) ->
                                          fun (x9057 : Ojs.t) ->
                                            fun (x9058 : Ojs.t) ->
                                              unknown_to_js
                                                (x9052
                                                   ~value:(Ojs.float_of_js
                                                             x9056)
                                                   ~index:(Ojs.float_of_js
                                                             x9057)
                                                   ~array:(t_of_js x9058))))|]);
                             (match x9053 with
                              | Some x9055 ->
                                  ignore
                                    (Ojs.call x9054 "push"
                                       [|(any_to_js x9055)|])
                              | None -> ());
                             x9054))|])
    let (findLastIndex :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> float)
      =
      fun (x9070 : 'tags this) ->
        fun
          ~predicate:(x9063 :
                       value:float -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x9064 : any option) ->
            fun () ->
              Ojs.float_of_js
                (let x9072 = this_to_js Obj.magic x9070 in
                 Ojs.call (Ojs.get_prop_ascii x9072 "findLastIndex") "apply"
                   [|x9072;((let x9065 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x9065 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x9067 : Ojs.t) ->
                                          fun (x9068 : Ojs.t) ->
                                            fun (x9069 : Ojs.t) ->
                                              unknown_to_js
                                                (x9063
                                                   ~value:(Ojs.float_of_js
                                                             x9067)
                                                   ~index:(Ojs.float_of_js
                                                             x9068)
                                                   ~array:(t_of_js x9069))))|]);
                             (match x9064 with
                              | Some x9066 ->
                                  ignore
                                    (Ojs.call x9065 "push"
                                       [|(any_to_js x9066)|])
                              | None -> ());
                             x9065))|])
    let (toReversed : 'tags this -> t) =
      fun (x9073 : 'tags this) ->
        t_of_js (Ojs.call (this_to_js Obj.magic x9073) "toReversed" [||])
    let (toSorted :
      'tags this -> ?compareFn:(a:float -> b:float -> float) -> unit -> t) =
      fun (x9080 : 'tags this) ->
        fun ?compareFn:(x9075 : (a:float -> b:float -> float) option) ->
          fun () ->
            t_of_js
              (let x9082 = this_to_js Obj.magic x9080 in
               Ojs.call (Ojs.get_prop_ascii x9082 "toSorted") "apply"
                 [|x9082;((let x9076 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x9075 with
                            | Some x9077 ->
                                ignore
                                  (Ojs.call x9076 "push"
                                     [|(Ojs.fun_to_js 2
                                          (fun (x9078 : Ojs.t) ->
                                             fun (x9079 : Ojs.t) ->
                                               Ojs.float_to_js
                                                 (x9077
                                                    ~a:(Ojs.float_of_js x9078)
                                                    ~b:(Ojs.float_of_js x9079))))|])
                            | None -> ());
                           x9076))|])
    let (with_ : 'tags this -> index:float -> value:float -> t) =
      fun (x9085 : 'tags this) ->
        fun ~index:(x9083 : float) ->
          fun ~value:(x9084 : float) ->
            t_of_js
              (Ojs.call (this_to_js Obj.magic x9085) "with"
                 [|(Ojs.float_to_js x9083);(Ojs.float_to_js x9084)|])
    let (includes :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> bool)
      =
      fun (x9091 : 'tags this) ->
        fun ~searchElement:(x9087 : float) ->
          fun ?fromIndex:(x9088 : float option) ->
            fun () ->
              Ojs.bool_of_js
                (let x9093 = this_to_js Obj.magic x9091 in
                 Ojs.call (Ojs.get_prop_ascii x9093 "includes") "apply"
                   [|x9093;((let x9089 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x9089 "push"
                                  [|(Ojs.float_to_js x9087)|]);
                             (match x9088 with
                              | Some x9090 ->
                                  ignore
                                    (Ojs.call x9089 "push"
                                       [|(Ojs.float_to_js x9090)|])
                              | None -> ());
                             x9089))|])
    let (entries : 'tags this -> (float * float) IterableIterator.t) =
      fun (x9094 : 'tags this) ->
        IterableIterator.t_of_js
          (fun (x9096 : Ojs.t) ->
             let x9097 = x9096 in
             ((Ojs.float_of_js (Ojs.array_get x9097 0)),
               (Ojs.float_of_js (Ojs.array_get x9097 1))))
          (Ojs.call (this_to_js Obj.magic x9094) "entries" [||])
    let (keys : 'tags this -> float IterableIterator.t) =
      fun (x9098 : 'tags this) ->
        IterableIterator.t_of_js Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x9098) "keys" [||])
    let (values : 'tags this -> float IterableIterator.t) =
      fun (x9101 : 'tags this) ->
        IterableIterator.t_of_js Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x9101) "values" [||])
    let (get_BYTES_PER_ELEMENT : 'tags this -> float) =
      fun (x9104 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x9104)
             "BYTES_PER_ELEMENT")
    let (get_buffer : 'tags this -> ArrayBufferLike.t) =
      fun (x9106 : 'tags this) ->
        ArrayBufferLike.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x9106) "buffer")
    let (get_byteLength : 'tags this -> float) =
      fun (x9108 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x9108) "byteLength")
    let (get_byteOffset : 'tags this -> float) =
      fun (x9110 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x9110) "byteOffset")
    let (copyWithin :
      'tags this ->
        target:float -> start:float -> ?end_:float -> unit -> 'tags this)
      =
      fun (x9117 : 'tags this) ->
        fun ~target:(x9112 : float) ->
          fun ~start:(x9113 : float) ->
            fun ?end_:(x9114 : float option) ->
              fun () ->
                this_of_js Obj.magic
                  (let x9119 = this_to_js Obj.magic x9117 in
                   Ojs.call (Ojs.get_prop_ascii x9119 "copyWithin") "apply"
                     [|x9119;((let x9115 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x9115 "push"
                                    [|(Ojs.float_to_js x9112)|]);
                               ignore
                                 (Ojs.call x9115 "push"
                                    [|(Ojs.float_to_js x9113)|]);
                               (match x9114 with
                                | Some x9116 ->
                                    ignore
                                      (Ojs.call x9115 "push"
                                         [|(Ojs.float_to_js x9116)|])
                                | None -> ());
                               x9115))|])
    let (every :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x9128 : 'tags this) ->
        fun
          ~predicate:(x9121 :
                       value:float -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x9122 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x9130 = this_to_js Obj.magic x9128 in
                 Ojs.call (Ojs.get_prop_ascii x9130 "every") "apply"
                   [|x9130;((let x9123 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x9123 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x9125 : Ojs.t) ->
                                          fun (x9126 : Ojs.t) ->
                                            fun (x9127 : Ojs.t) ->
                                              unknown_to_js
                                                (x9121
                                                   ~value:(Ojs.float_of_js
                                                             x9125)
                                                   ~index:(Ojs.float_of_js
                                                             x9126)
                                                   ~array:(t_of_js x9127))))|]);
                             (match x9122 with
                              | Some x9124 ->
                                  ignore
                                    (Ojs.call x9123 "push"
                                       [|(any_to_js x9124)|])
                              | None -> ());
                             x9123))|])
    let (fill :
      'tags this ->
        value:float -> ?start:float -> ?end_:float -> unit -> 'tags this)
      =
      fun (x9137 : 'tags this) ->
        fun ~value:(x9131 : float) ->
          fun ?start:(x9132 : float option) ->
            fun ?end_:(x9133 : float option) ->
              fun () ->
                this_of_js Obj.magic
                  (let x9139 = this_to_js Obj.magic x9137 in
                   Ojs.call (Ojs.get_prop_ascii x9139 "fill") "apply"
                     [|x9139;((let x9134 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x9134 "push"
                                    [|(Ojs.float_to_js x9131)|]);
                               (match x9132 with
                                | Some x9136 ->
                                    ignore
                                      (Ojs.call x9134 "push"
                                         [|(Ojs.float_to_js x9136)|])
                                | None -> ());
                               (match x9133 with
                                | Some x9135 ->
                                    ignore
                                      (Ojs.call x9134 "push"
                                         [|(Ojs.float_to_js x9135)|])
                                | None -> ());
                               x9134))|])
    let (filter :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> any) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x9148 : 'tags this) ->
        fun ~predicate:(x9141 : value:float -> index:float -> array:t -> any)
          ->
          fun ?thisArg:(x9142 : any option) ->
            fun () ->
              t_of_js
                (let x9150 = this_to_js Obj.magic x9148 in
                 Ojs.call (Ojs.get_prop_ascii x9150 "filter") "apply"
                   [|x9150;((let x9143 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x9143 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x9145 : Ojs.t) ->
                                          fun (x9146 : Ojs.t) ->
                                            fun (x9147 : Ojs.t) ->
                                              any_to_js
                                                (x9141
                                                   ~value:(Ojs.float_of_js
                                                             x9145)
                                                   ~index:(Ojs.float_of_js
                                                             x9146)
                                                   ~array:(t_of_js x9147))))|]);
                             (match x9142 with
                              | Some x9144 ->
                                  ignore
                                    (Ojs.call x9143 "push"
                                       [|(any_to_js x9144)|])
                              | None -> ());
                             x9143))|])
    let (find :
      'tags this ->
        predicate:(value:float -> index:float -> obj:t -> bool) ->
          ?thisArg:any -> unit -> float option)
      =
      fun (x9158 : 'tags this) ->
        fun ~predicate:(x9151 : value:float -> index:float -> obj:t -> bool)
          ->
          fun ?thisArg:(x9152 : any option) ->
            fun () ->
              Ojs.option_of_js Ojs.float_of_js
                (let x9160 = this_to_js Obj.magic x9158 in
                 Ojs.call (Ojs.get_prop_ascii x9160 "find") "apply"
                   [|x9160;((let x9153 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x9153 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x9155 : Ojs.t) ->
                                          fun (x9156 : Ojs.t) ->
                                            fun (x9157 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x9151
                                                   ~value:(Ojs.float_of_js
                                                             x9155)
                                                   ~index:(Ojs.float_of_js
                                                             x9156)
                                                   ~obj:(t_of_js x9157))))|]);
                             (match x9152 with
                              | Some x9154 ->
                                  ignore
                                    (Ojs.call x9153 "push"
                                       [|(any_to_js x9154)|])
                              | None -> ());
                             x9153))|])
    let (findIndex :
      'tags this ->
        predicate:(value:float -> index:float -> obj:t -> bool) ->
          ?thisArg:any -> unit -> float)
      =
      fun (x9169 : 'tags this) ->
        fun ~predicate:(x9162 : value:float -> index:float -> obj:t -> bool)
          ->
          fun ?thisArg:(x9163 : any option) ->
            fun () ->
              Ojs.float_of_js
                (let x9171 = this_to_js Obj.magic x9169 in
                 Ojs.call (Ojs.get_prop_ascii x9171 "findIndex") "apply"
                   [|x9171;((let x9164 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x9164 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x9166 : Ojs.t) ->
                                          fun (x9167 : Ojs.t) ->
                                            fun (x9168 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x9162
                                                   ~value:(Ojs.float_of_js
                                                             x9166)
                                                   ~index:(Ojs.float_of_js
                                                             x9167)
                                                   ~obj:(t_of_js x9168))))|]);
                             (match x9163 with
                              | Some x9165 ->
                                  ignore
                                    (Ojs.call x9164 "push"
                                       [|(any_to_js x9165)|])
                              | None -> ());
                             x9164))|])
    let (forEach :
      'tags this ->
        callbackfn:(value:float -> index:float -> array:t -> unit) ->
          ?thisArg:any -> unit -> unit)
      =
      fun (x9179 : 'tags this) ->
        fun
          ~callbackfn:(x9172 : value:float -> index:float -> array:t -> unit)
          ->
          fun ?thisArg:(x9173 : any option) ->
            fun () ->
              ignore
                (let x9181 = this_to_js Obj.magic x9179 in
                 Ojs.call (Ojs.get_prop_ascii x9181 "forEach") "apply"
                   [|x9181;((let x9174 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x9174 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x9176 : Ojs.t) ->
                                          fun (x9177 : Ojs.t) ->
                                            fun (x9178 : Ojs.t) ->
                                              x9172
                                                ~value:(Ojs.float_of_js x9176)
                                                ~index:(Ojs.float_of_js x9177)
                                                ~array:(t_of_js x9178)))|]);
                             (match x9173 with
                              | Some x9175 ->
                                  ignore
                                    (Ojs.call x9174 "push"
                                       [|(any_to_js x9175)|])
                              | None -> ());
                             x9174))|])
    let (indexOf :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> float)
      =
      fun (x9186 : 'tags this) ->
        fun ~searchElement:(x9182 : float) ->
          fun ?fromIndex:(x9183 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x9188 = this_to_js Obj.magic x9186 in
                 Ojs.call (Ojs.get_prop_ascii x9188 "indexOf") "apply"
                   [|x9188;((let x9184 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x9184 "push"
                                  [|(Ojs.float_to_js x9182)|]);
                             (match x9183 with
                              | Some x9185 ->
                                  ignore
                                    (Ojs.call x9184 "push"
                                       [|(Ojs.float_to_js x9185)|])
                              | None -> ());
                             x9184))|])
    let (join : 'tags this -> ?separator:string -> unit -> string) =
      fun (x9192 : 'tags this) ->
        fun ?separator:(x9189 : string option) ->
          fun () ->
            Ojs.string_of_js
              (let x9194 = this_to_js Obj.magic x9192 in
               Ojs.call (Ojs.get_prop_ascii x9194 "join") "apply"
                 [|x9194;((let x9190 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x9189 with
                            | Some x9191 ->
                                ignore
                                  (Ojs.call x9190 "push"
                                     [|(Ojs.string_to_js x9191)|])
                            | None -> ());
                           x9190))|])
    let (lastIndexOf :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> float)
      =
      fun (x9199 : 'tags this) ->
        fun ~searchElement:(x9195 : float) ->
          fun ?fromIndex:(x9196 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x9201 = this_to_js Obj.magic x9199 in
                 Ojs.call (Ojs.get_prop_ascii x9201 "lastIndexOf") "apply"
                   [|x9201;((let x9197 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x9197 "push"
                                  [|(Ojs.float_to_js x9195)|]);
                             (match x9196 with
                              | Some x9198 ->
                                  ignore
                                    (Ojs.call x9197 "push"
                                       [|(Ojs.float_to_js x9198)|])
                              | None -> ());
                             x9197))|])
    let (get_length : 'tags this -> float) =
      fun (x9202 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x9202) "length")
    let (map :
      'tags this ->
        callbackfn:(value:float -> index:float -> array:t -> float) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x9211 : 'tags this) ->
        fun
          ~callbackfn:(x9204 :
                        value:float -> index:float -> array:t -> float)
          ->
          fun ?thisArg:(x9205 : any option) ->
            fun () ->
              t_of_js
                (let x9213 = this_to_js Obj.magic x9211 in
                 Ojs.call (Ojs.get_prop_ascii x9213 "map") "apply"
                   [|x9213;((let x9206 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x9206 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x9208 : Ojs.t) ->
                                          fun (x9209 : Ojs.t) ->
                                            fun (x9210 : Ojs.t) ->
                                              Ojs.float_to_js
                                                (x9204
                                                   ~value:(Ojs.float_of_js
                                                             x9208)
                                                   ~index:(Ojs.float_of_js
                                                             x9209)
                                                   ~array:(t_of_js x9210))))|]);
                             (match x9205 with
                              | Some x9207 ->
                                  ignore
                                    (Ojs.call x9206 "push"
                                       [|(any_to_js x9207)|])
                              | None -> ());
                             x9206))|])
    let (reduce :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> float)
      =
      fun (x9219 : 'tags this) ->
        fun
          ~callbackfn:(x9214 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x9219) "reduce"
               [|(Ojs.fun_to_js 4
                    (fun (x9215 : Ojs.t) ->
                       fun (x9216 : Ojs.t) ->
                         fun (x9217 : Ojs.t) ->
                           fun (x9218 : Ojs.t) ->
                             Ojs.float_to_js
                               (x9214 ~previousValue:(Ojs.float_of_js x9215)
                                  ~currentValue:(Ojs.float_of_js x9216)
                                  ~currentIndex:(Ojs.float_of_js x9217)
                                  ~array:(t_of_js x9218))))|])
    let (reduce' :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> initialValue:float -> float)
      =
      fun (x9227 : 'tags this) ->
        fun
          ~callbackfn:(x9221 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          fun ~initialValue:(x9226 : float) ->
            Ojs.float_of_js
              (Ojs.call (this_to_js Obj.magic x9227) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x9222 : Ojs.t) ->
                         fun (x9223 : Ojs.t) ->
                           fun (x9224 : Ojs.t) ->
                             fun (x9225 : Ojs.t) ->
                               Ojs.float_to_js
                                 (x9221
                                    ~previousValue:(Ojs.float_of_js x9222)
                                    ~currentValue:(Ojs.float_of_js x9223)
                                    ~currentIndex:(Ojs.float_of_js x9224)
                                    ~array:(t_of_js x9225))));(Ojs.float_to_js
                                                                 x9226)|])
    let (reduce'' :
      'tags this ->
        callbackfn:(previousValue:'U ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x9235 : 'tags this) ->
        fun
          ~callbackfn:(x9229 :
                        previousValue:'U ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x9234 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic x9235) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x9230 : Ojs.t) ->
                         fun (x9231 : Ojs.t) ->
                           fun (x9232 : Ojs.t) ->
                             fun (x9233 : Ojs.t) ->
                               Obj.magic
                                 (x9229 ~previousValue:(Obj.magic x9230)
                                    ~currentValue:(Ojs.float_of_js x9231)
                                    ~currentIndex:(Ojs.float_of_js x9232)
                                    ~array:(t_of_js x9233))));(Obj.magic
                                                                 x9234)|])
    let (reduceRight :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> float)
      =
      fun (x9242 : 'tags this) ->
        fun
          ~callbackfn:(x9237 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x9242) "reduceRight"
               [|(Ojs.fun_to_js 4
                    (fun (x9238 : Ojs.t) ->
                       fun (x9239 : Ojs.t) ->
                         fun (x9240 : Ojs.t) ->
                           fun (x9241 : Ojs.t) ->
                             Ojs.float_to_js
                               (x9237 ~previousValue:(Ojs.float_of_js x9238)
                                  ~currentValue:(Ojs.float_of_js x9239)
                                  ~currentIndex:(Ojs.float_of_js x9240)
                                  ~array:(t_of_js x9241))))|])
    let (reduceRight' :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> initialValue:float -> float)
      =
      fun (x9250 : 'tags this) ->
        fun
          ~callbackfn:(x9244 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          fun ~initialValue:(x9249 : float) ->
            Ojs.float_of_js
              (Ojs.call (this_to_js Obj.magic x9250) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x9245 : Ojs.t) ->
                         fun (x9246 : Ojs.t) ->
                           fun (x9247 : Ojs.t) ->
                             fun (x9248 : Ojs.t) ->
                               Ojs.float_to_js
                                 (x9244
                                    ~previousValue:(Ojs.float_of_js x9245)
                                    ~currentValue:(Ojs.float_of_js x9246)
                                    ~currentIndex:(Ojs.float_of_js x9247)
                                    ~array:(t_of_js x9248))));(Ojs.float_to_js
                                                                 x9249)|])
    let (reduceRight'' :
      'tags this ->
        callbackfn:(previousValue:'U ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x9258 : 'tags this) ->
        fun
          ~callbackfn:(x9252 :
                        previousValue:'U ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x9257 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic x9258) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x9253 : Ojs.t) ->
                         fun (x9254 : Ojs.t) ->
                           fun (x9255 : Ojs.t) ->
                             fun (x9256 : Ojs.t) ->
                               Obj.magic
                                 (x9252 ~previousValue:(Obj.magic x9253)
                                    ~currentValue:(Ojs.float_of_js x9254)
                                    ~currentIndex:(Ojs.float_of_js x9255)
                                    ~array:(t_of_js x9256))));(Obj.magic
                                                                 x9257)|])
    let (reverse : 'tags this -> t) =
      fun (x9260 : 'tags this) ->
        t_of_js (Ojs.call (this_to_js Obj.magic x9260) "reverse" [||])
    let (set_ :
      'tags this -> array:float ArrayLike.t -> ?offset:float -> unit -> unit)
      =
      fun (x9267 : 'tags this) ->
        fun ~array:(x9262 : float ArrayLike.t) ->
          fun ?offset:(x9263 : float option) ->
            fun () ->
              ignore
                (let x9269 = this_to_js Obj.magic x9267 in
                 Ojs.call (Ojs.get_prop_ascii x9269 "set") "apply"
                   [|x9269;((let x9264 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x9264 "push"
                                  [|(ArrayLike.t_to_js Ojs.float_to_js x9262)|]);
                             (match x9263 with
                              | Some x9265 ->
                                  ignore
                                    (Ojs.call x9264 "push"
                                       [|(Ojs.float_to_js x9265)|])
                              | None -> ());
                             x9264))|])
    let (slice : 'tags this -> ?start:float -> ?end_:float -> unit -> t) =
      fun (x9275 : 'tags this) ->
        fun ?start:(x9270 : float option) ->
          fun ?end_:(x9271 : float option) ->
            fun () ->
              t_of_js
                (let x9277 = this_to_js Obj.magic x9275 in
                 Ojs.call (Ojs.get_prop_ascii x9277 "slice") "apply"
                   [|x9277;((let x9272 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x9270 with
                              | Some x9274 ->
                                  ignore
                                    (Ojs.call x9272 "push"
                                       [|(Ojs.float_to_js x9274)|])
                              | None -> ());
                             (match x9271 with
                              | Some x9273 ->
                                  ignore
                                    (Ojs.call x9272 "push"
                                       [|(Ojs.float_to_js x9273)|])
                              | None -> ());
                             x9272))|])
    let (some :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x9285 : 'tags this) ->
        fun
          ~predicate:(x9278 :
                       value:float -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x9279 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x9287 = this_to_js Obj.magic x9285 in
                 Ojs.call (Ojs.get_prop_ascii x9287 "some") "apply"
                   [|x9287;((let x9280 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x9280 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x9282 : Ojs.t) ->
                                          fun (x9283 : Ojs.t) ->
                                            fun (x9284 : Ojs.t) ->
                                              unknown_to_js
                                                (x9278
                                                   ~value:(Ojs.float_of_js
                                                             x9282)
                                                   ~index:(Ojs.float_of_js
                                                             x9283)
                                                   ~array:(t_of_js x9284))))|]);
                             (match x9279 with
                              | Some x9281 ->
                                  ignore
                                    (Ojs.call x9280 "push"
                                       [|(any_to_js x9281)|])
                              | None -> ());
                             x9280))|])
    let (sort :
      'tags this ->
        ?compareFn:(a:float -> b:float -> float) -> unit -> 'tags this)
      =
      fun (x9293 : 'tags this) ->
        fun ?compareFn:(x9288 : (a:float -> b:float -> float) option) ->
          fun () ->
            this_of_js Obj.magic
              (let x9295 = this_to_js Obj.magic x9293 in
               Ojs.call (Ojs.get_prop_ascii x9295 "sort") "apply"
                 [|x9295;((let x9289 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x9288 with
                            | Some x9290 ->
                                ignore
                                  (Ojs.call x9289 "push"
                                     [|(Ojs.fun_to_js 2
                                          (fun (x9291 : Ojs.t) ->
                                             fun (x9292 : Ojs.t) ->
                                               Ojs.float_to_js
                                                 (x9290
                                                    ~a:(Ojs.float_of_js x9291)
                                                    ~b:(Ojs.float_of_js x9292))))|])
                            | None -> ());
                           x9289))|])
    let (subarray : 'tags this -> ?begin_:float -> ?end_:float -> unit -> t)
      =
      fun (x9302 : 'tags this) ->
        fun ?begin_:(x9297 : float option) ->
          fun ?end_:(x9298 : float option) ->
            fun () ->
              t_of_js
                (let x9304 = this_to_js Obj.magic x9302 in
                 Ojs.call (Ojs.get_prop_ascii x9304 "subarray") "apply"
                   [|x9304;((let x9299 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x9297 with
                              | Some x9301 ->
                                  ignore
                                    (Ojs.call x9299 "push"
                                       [|(Ojs.float_to_js x9301)|])
                              | None -> ());
                             (match x9298 with
                              | Some x9300 ->
                                  ignore
                                    (Ojs.call x9299 "push"
                                       [|(Ojs.float_to_js x9300)|])
                              | None -> ());
                             x9299))|])
    let (toLocaleString : 'tags this -> string) =
      fun (x9305 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x9305) "toLocaleString" [||])
    let (toString : 'tags this -> string) =
      fun (x9307 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x9307) "toString" [||])
    let (valueOf : 'tags this -> t) =
      fun (x9309 : 'tags this) ->
        t_of_js (Ojs.call (this_to_js Obj.magic x9309) "valueOf" [||])
    let (get : 'tags this -> float -> float) =
      fun (x9311 : 'tags this) ->
        fun (x9313 : float) ->
          Ojs.float_of_js
            (Ojs.get_prop (this_to_js Obj.magic x9311)
               (Ojs.float_to_js x9313))
    let (set : 'tags this -> float -> float -> unit) =
      fun (x9314 : 'tags this) ->
        fun (x9316 : float) ->
          fun (x9317 : float) ->
            Ojs.set_prop (this_to_js Obj.magic x9314) (Ojs.float_to_js x9316)
              (Ojs.float_to_js x9317)
    let (create : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Int16Array") [||])
    let (create' : float Iterable.t -> t) =
      fun (x9318 : float Iterable.t) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Int16Array")
             [|(Iterable.t_to_js Ojs.float_to_js x9318)|])
    let (from :
      arrayLike:float Iterable.t ->
        ?mapfn:(v:float -> k:float -> float) -> ?thisArg:any -> unit -> t)
      =
      fun ~arrayLike:(x9320 : float Iterable.t) ->
        fun ?mapfn:(x9321 : (v:float -> k:float -> float) option) ->
          fun ?thisArg:(x9322 : any option) ->
            fun () ->
              t_of_js
                (let x9329 = Ojs.get_prop_ascii Ojs.global "Int16Array" in
                 Ojs.call (Ojs.get_prop_ascii x9329 "from") "apply"
                   [|x9329;((let x9323 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x9323 "push"
                                  [|(Iterable.t_to_js Ojs.float_to_js x9320)|]);
                             (match x9321 with
                              | Some x9325 ->
                                  ignore
                                    (Ojs.call x9323 "push"
                                       [|(Ojs.fun_to_js 2
                                            (fun (x9326 : Ojs.t) ->
                                               fun (x9327 : Ojs.t) ->
                                                 Ojs.float_to_js
                                                   (x9325
                                                      ~v:(Ojs.float_of_js
                                                            x9326)
                                                      ~k:(Ojs.float_of_js
                                                            x9327))))|])
                              | None -> ());
                             (match x9322 with
                              | Some x9324 ->
                                  ignore
                                    (Ojs.call x9323 "push"
                                       [|(any_to_js x9324)|])
                              | None -> ());
                             x9323))|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Int16Array")
             "prototype")
    let (create'' : float -> t) =
      fun (x9330 : float) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Int16Array")
             [|(Ojs.float_to_js x9330)|])
    let (create''' :
      [ `U1 of float ArrayLike.t  | `U2 of ArrayBufferLike.t ] -> t) =
      fun (x9331 : [ `U1 of float ArrayLike.t  | `U2 of ArrayBufferLike.t ])
        ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Int16Array")
             [|((match x9331 with
                 | `U1 x9332 -> ArrayLike.t_to_js Ojs.float_to_js x9332
                 | `U2 x9334 -> ArrayBufferLike.t_to_js x9334))|])
    let (create'''' :
      buffer:ArrayBufferLike.t ->
        ?byteOffset:float -> ?length:float -> unit -> t)
      =
      fun ~buffer:(x9335 : ArrayBufferLike.t) ->
        fun ?byteOffset:(x9336 : float option) ->
          fun ?length:(x9337 : float option) ->
            fun () ->
              t_of_js
                (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "Int16Array")
                   (let x9338 =
                      Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                        [||] in
                    ignore
                      (Ojs.call x9338 "push"
                         [|(ArrayBufferLike.t_to_js x9335)|]);
                    (match x9336 with
                     | Some x9340 ->
                         ignore
                           (Ojs.call x9338 "push" [|(Ojs.float_to_js x9340)|])
                     | None -> ());
                    (match x9337 with
                     | Some x9339 ->
                         ignore
                           (Ojs.call x9338 "push" [|(Ojs.float_to_js x9339)|])
                     | None -> ());
                    x9338))
    let (bytes_per_element : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Int16Array")
             "BYTES_PER_ELEMENT")
    let (of_ : float list -> t) =
      fun (x9341 : float list) ->
        t_of_js
          (let x9344 = Ojs.get_prop_ascii Ojs.global "Int16Array" in
           Ojs.call (Ojs.get_prop_ascii x9344 "of") "apply"
             [|x9344;((let x9342 =
                         Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                           [||] in
                       List.iter
                         (fun (x9343 : float) ->
                            ignore
                              (Ojs.call x9342 "push"
                                 [|(Ojs.float_to_js x9343)|])) x9341;
                       x9342))|])
    let (from' : float ArrayLike.t -> t) =
      fun (x9345 : float ArrayLike.t) ->
        t_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Int16Array") "from"
             [|(ArrayLike.t_to_js Ojs.float_to_js x9345)|])
    let (from'' :
      arrayLike:'T ArrayLike.t ->
        mapfn:(v:'T -> k:float -> float) -> ?thisArg:any -> unit -> t)
      =
      fun ~arrayLike:(x9347 : 'T ArrayLike.t) ->
        fun ~mapfn:(x9348 : v:'T -> k:float -> float) ->
          fun ?thisArg:(x9349 : any option) ->
            fun () ->
              t_of_js
                (let x9355 = Ojs.get_prop_ascii Ojs.global "Int16Array" in
                 Ojs.call (Ojs.get_prop_ascii x9355 "from") "apply"
                   [|x9355;((let x9350 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x9350 "push"
                                  [|(ArrayLike.t_to_js Obj.magic x9347)|]);
                             ignore
                               (Ojs.call x9350 "push"
                                  [|(Ojs.fun_to_js 2
                                       (fun (x9352 : Ojs.t) ->
                                          fun (x9353 : Ojs.t) ->
                                            Ojs.float_to_js
                                              (x9348 ~v:(Obj.magic x9352)
                                                 ~k:(Ojs.float_of_js x9353))))|]);
                             (match x9349 with
                              | Some x9351 ->
                                  ignore
                                    (Ojs.call x9350 "push"
                                       [|(any_to_js x9351)|])
                              | None -> ());
                             x9350))|])
    let cast_from = Obj.magic
  end
module BigUint64Array =
  struct
    type t = [ `BigUint64Array ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type tags = [ `BigUint64Array ]
    type 'tags this = 'tags intf constraint 'tags = [> `BigUint64Array ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x9358 : Ojs.t) -> intf_of_js __tags_of_js x9358
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x9356 : __tags intf) -> intf_to_js __tags_to_js x9356
    let (at : 'tags this -> index:float -> bigint option) =
      fun (x9361 : 'tags this) ->
        fun ~index:(x9360 : float) ->
          Ojs.option_of_js bigint_of_js
            (Ojs.call (this_to_js Obj.magic x9361) "at"
               [|(Ojs.float_to_js x9360)|])
    let (findLast :
      'tags this ->
        predicate:(value:bigint -> index:float -> array:t -> bool) ->
          ?thisArg:any -> unit -> 'S option)
      =
      fun (x9371 : 'tags this) ->
        fun
          ~predicate:(x9364 : value:bigint -> index:float -> array:t -> bool)
          ->
          fun ?thisArg:(x9365 : any option) ->
            fun () ->
              Ojs.option_of_js Obj.magic
                (let x9373 = this_to_js Obj.magic x9371 in
                 Ojs.call (Ojs.get_prop_ascii x9373 "findLast") "apply"
                   [|x9373;((let x9366 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x9366 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x9368 : Ojs.t) ->
                                          fun (x9369 : Ojs.t) ->
                                            fun (x9370 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x9364
                                                   ~value:(bigint_of_js x9368)
                                                   ~index:(Ojs.float_of_js
                                                             x9369)
                                                   ~array:(t_of_js x9370))))|]);
                             (match x9365 with
                              | Some x9367 ->
                                  ignore
                                    (Ojs.call x9366 "push"
                                       [|(any_to_js x9367)|])
                              | None -> ());
                             x9366))|])
    let (findLast' :
      'tags this ->
        predicate:(value:bigint -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> bigint option)
      =
      fun (x9382 : 'tags this) ->
        fun
          ~predicate:(x9375 :
                       value:bigint -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x9376 : any option) ->
            fun () ->
              Ojs.option_of_js bigint_of_js
                (let x9384 = this_to_js Obj.magic x9382 in
                 Ojs.call (Ojs.get_prop_ascii x9384 "findLast") "apply"
                   [|x9384;((let x9377 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x9377 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x9379 : Ojs.t) ->
                                          fun (x9380 : Ojs.t) ->
                                            fun (x9381 : Ojs.t) ->
                                              unknown_to_js
                                                (x9375
                                                   ~value:(bigint_of_js x9379)
                                                   ~index:(Ojs.float_of_js
                                                             x9380)
                                                   ~array:(t_of_js x9381))))|]);
                             (match x9376 with
                              | Some x9378 ->
                                  ignore
                                    (Ojs.call x9377 "push"
                                       [|(any_to_js x9378)|])
                              | None -> ());
                             x9377))|])
    let (findLastIndex :
      'tags this ->
        predicate:(value:bigint -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> float)
      =
      fun (x9393 : 'tags this) ->
        fun
          ~predicate:(x9386 :
                       value:bigint -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x9387 : any option) ->
            fun () ->
              Ojs.float_of_js
                (let x9395 = this_to_js Obj.magic x9393 in
                 Ojs.call (Ojs.get_prop_ascii x9395 "findLastIndex") "apply"
                   [|x9395;((let x9388 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x9388 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x9390 : Ojs.t) ->
                                          fun (x9391 : Ojs.t) ->
                                            fun (x9392 : Ojs.t) ->
                                              unknown_to_js
                                                (x9386
                                                   ~value:(bigint_of_js x9390)
                                                   ~index:(Ojs.float_of_js
                                                             x9391)
                                                   ~array:(t_of_js x9392))))|]);
                             (match x9387 with
                              | Some x9389 ->
                                  ignore
                                    (Ojs.call x9388 "push"
                                       [|(any_to_js x9389)|])
                              | None -> ());
                             x9388))|])
    let (toReversed : 'tags this -> t) =
      fun (x9396 : 'tags this) ->
        t_of_js (Ojs.call (this_to_js Obj.magic x9396) "toReversed" [||])
    let (toSorted :
      'tags this -> ?compareFn:(a:bigint -> b:bigint -> float) -> unit -> t)
      =
      fun (x9403 : 'tags this) ->
        fun ?compareFn:(x9398 : (a:bigint -> b:bigint -> float) option) ->
          fun () ->
            t_of_js
              (let x9405 = this_to_js Obj.magic x9403 in
               Ojs.call (Ojs.get_prop_ascii x9405 "toSorted") "apply"
                 [|x9405;((let x9399 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x9398 with
                            | Some x9400 ->
                                ignore
                                  (Ojs.call x9399 "push"
                                     [|(Ojs.fun_to_js 2
                                          (fun (x9401 : Ojs.t) ->
                                             fun (x9402 : Ojs.t) ->
                                               Ojs.float_to_js
                                                 (x9400
                                                    ~a:(bigint_of_js x9401)
                                                    ~b:(bigint_of_js x9402))))|])
                            | None -> ());
                           x9399))|])
    let (with_ : 'tags this -> index:float -> value:bigint -> t) =
      fun (x9408 : 'tags this) ->
        fun ~index:(x9406 : float) ->
          fun ~value:(x9407 : bigint) ->
            t_of_js
              (Ojs.call (this_to_js Obj.magic x9408) "with"
                 [|(Ojs.float_to_js x9406);(bigint_to_js x9407)|])
    let (get_BYTES_PER_ELEMENT : 'tags this -> float) =
      fun (x9410 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x9410)
             "BYTES_PER_ELEMENT")
    let (get_buffer : 'tags this -> ArrayBufferLike.t) =
      fun (x9412 : 'tags this) ->
        ArrayBufferLike.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x9412) "buffer")
    let (get_byteLength : 'tags this -> float) =
      fun (x9414 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x9414) "byteLength")
    let (get_byteOffset : 'tags this -> float) =
      fun (x9416 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x9416) "byteOffset")
    let (copyWithin :
      'tags this ->
        target:float -> start:float -> ?end_:float -> unit -> 'tags this)
      =
      fun (x9423 : 'tags this) ->
        fun ~target:(x9418 : float) ->
          fun ~start:(x9419 : float) ->
            fun ?end_:(x9420 : float option) ->
              fun () ->
                this_of_js Obj.magic
                  (let x9425 = this_to_js Obj.magic x9423 in
                   Ojs.call (Ojs.get_prop_ascii x9425 "copyWithin") "apply"
                     [|x9425;((let x9421 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x9421 "push"
                                    [|(Ojs.float_to_js x9418)|]);
                               ignore
                                 (Ojs.call x9421 "push"
                                    [|(Ojs.float_to_js x9419)|]);
                               (match x9420 with
                                | Some x9422 ->
                                    ignore
                                      (Ojs.call x9421 "push"
                                         [|(Ojs.float_to_js x9422)|])
                                | None -> ());
                               x9421))|])
    let (entries : 'tags this -> (float * bigint) IterableIterator.t) =
      fun (x9427 : 'tags this) ->
        IterableIterator.t_of_js
          (fun (x9429 : Ojs.t) ->
             let x9430 = x9429 in
             ((Ojs.float_of_js (Ojs.array_get x9430 0)),
               (bigint_of_js (Ojs.array_get x9430 1))))
          (Ojs.call (this_to_js Obj.magic x9427) "entries" [||])
    let (every :
      'tags this ->
        predicate:(value:bigint -> index:float -> array:t -> bool) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x9438 : 'tags this) ->
        fun
          ~predicate:(x9431 : value:bigint -> index:float -> array:t -> bool)
          ->
          fun ?thisArg:(x9432 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x9440 = this_to_js Obj.magic x9438 in
                 Ojs.call (Ojs.get_prop_ascii x9440 "every") "apply"
                   [|x9440;((let x9433 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x9433 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x9435 : Ojs.t) ->
                                          fun (x9436 : Ojs.t) ->
                                            fun (x9437 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x9431
                                                   ~value:(bigint_of_js x9435)
                                                   ~index:(Ojs.float_of_js
                                                             x9436)
                                                   ~array:(t_of_js x9437))))|]);
                             (match x9432 with
                              | Some x9434 ->
                                  ignore
                                    (Ojs.call x9433 "push"
                                       [|(any_to_js x9434)|])
                              | None -> ());
                             x9433))|])
    let (fill :
      'tags this ->
        value:bigint -> ?start:float -> ?end_:float -> unit -> 'tags this)
      =
      fun (x9447 : 'tags this) ->
        fun ~value:(x9441 : bigint) ->
          fun ?start:(x9442 : float option) ->
            fun ?end_:(x9443 : float option) ->
              fun () ->
                this_of_js Obj.magic
                  (let x9449 = this_to_js Obj.magic x9447 in
                   Ojs.call (Ojs.get_prop_ascii x9449 "fill") "apply"
                     [|x9449;((let x9444 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x9444 "push"
                                    [|(bigint_to_js x9441)|]);
                               (match x9442 with
                                | Some x9446 ->
                                    ignore
                                      (Ojs.call x9444 "push"
                                         [|(Ojs.float_to_js x9446)|])
                                | None -> ());
                               (match x9443 with
                                | Some x9445 ->
                                    ignore
                                      (Ojs.call x9444 "push"
                                         [|(Ojs.float_to_js x9445)|])
                                | None -> ());
                               x9444))|])
    let (filter :
      'tags this ->
        predicate:(value:bigint -> index:float -> array:t -> any) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x9458 : 'tags this) ->
        fun
          ~predicate:(x9451 : value:bigint -> index:float -> array:t -> any)
          ->
          fun ?thisArg:(x9452 : any option) ->
            fun () ->
              t_of_js
                (let x9460 = this_to_js Obj.magic x9458 in
                 Ojs.call (Ojs.get_prop_ascii x9460 "filter") "apply"
                   [|x9460;((let x9453 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x9453 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x9455 : Ojs.t) ->
                                          fun (x9456 : Ojs.t) ->
                                            fun (x9457 : Ojs.t) ->
                                              any_to_js
                                                (x9451
                                                   ~value:(bigint_of_js x9455)
                                                   ~index:(Ojs.float_of_js
                                                             x9456)
                                                   ~array:(t_of_js x9457))))|]);
                             (match x9452 with
                              | Some x9454 ->
                                  ignore
                                    (Ojs.call x9453 "push"
                                       [|(any_to_js x9454)|])
                              | None -> ());
                             x9453))|])
    let (find :
      'tags this ->
        predicate:(value:bigint -> index:float -> array:t -> bool) ->
          ?thisArg:any -> unit -> bigint option)
      =
      fun (x9468 : 'tags this) ->
        fun
          ~predicate:(x9461 : value:bigint -> index:float -> array:t -> bool)
          ->
          fun ?thisArg:(x9462 : any option) ->
            fun () ->
              Ojs.option_of_js bigint_of_js
                (let x9470 = this_to_js Obj.magic x9468 in
                 Ojs.call (Ojs.get_prop_ascii x9470 "find") "apply"
                   [|x9470;((let x9463 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x9463 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x9465 : Ojs.t) ->
                                          fun (x9466 : Ojs.t) ->
                                            fun (x9467 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x9461
                                                   ~value:(bigint_of_js x9465)
                                                   ~index:(Ojs.float_of_js
                                                             x9466)
                                                   ~array:(t_of_js x9467))))|]);
                             (match x9462 with
                              | Some x9464 ->
                                  ignore
                                    (Ojs.call x9463 "push"
                                       [|(any_to_js x9464)|])
                              | None -> ());
                             x9463))|])
    let (findIndex :
      'tags this ->
        predicate:(value:bigint -> index:float -> array:t -> bool) ->
          ?thisArg:any -> unit -> float)
      =
      fun (x9479 : 'tags this) ->
        fun
          ~predicate:(x9472 : value:bigint -> index:float -> array:t -> bool)
          ->
          fun ?thisArg:(x9473 : any option) ->
            fun () ->
              Ojs.float_of_js
                (let x9481 = this_to_js Obj.magic x9479 in
                 Ojs.call (Ojs.get_prop_ascii x9481 "findIndex") "apply"
                   [|x9481;((let x9474 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x9474 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x9476 : Ojs.t) ->
                                          fun (x9477 : Ojs.t) ->
                                            fun (x9478 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x9472
                                                   ~value:(bigint_of_js x9476)
                                                   ~index:(Ojs.float_of_js
                                                             x9477)
                                                   ~array:(t_of_js x9478))))|]);
                             (match x9473 with
                              | Some x9475 ->
                                  ignore
                                    (Ojs.call x9474 "push"
                                       [|(any_to_js x9475)|])
                              | None -> ());
                             x9474))|])
    let (forEach :
      'tags this ->
        callbackfn:(value:bigint -> index:float -> array:t -> unit) ->
          ?thisArg:any -> unit -> unit)
      =
      fun (x9489 : 'tags this) ->
        fun
          ~callbackfn:(x9482 :
                        value:bigint -> index:float -> array:t -> unit)
          ->
          fun ?thisArg:(x9483 : any option) ->
            fun () ->
              ignore
                (let x9491 = this_to_js Obj.magic x9489 in
                 Ojs.call (Ojs.get_prop_ascii x9491 "forEach") "apply"
                   [|x9491;((let x9484 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x9484 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x9486 : Ojs.t) ->
                                          fun (x9487 : Ojs.t) ->
                                            fun (x9488 : Ojs.t) ->
                                              x9482
                                                ~value:(bigint_of_js x9486)
                                                ~index:(Ojs.float_of_js x9487)
                                                ~array:(t_of_js x9488)))|]);
                             (match x9483 with
                              | Some x9485 ->
                                  ignore
                                    (Ojs.call x9484 "push"
                                       [|(any_to_js x9485)|])
                              | None -> ());
                             x9484))|])
    let (includes :
      'tags this -> searchElement:bigint -> ?fromIndex:float -> unit -> bool)
      =
      fun (x9496 : 'tags this) ->
        fun ~searchElement:(x9492 : bigint) ->
          fun ?fromIndex:(x9493 : float option) ->
            fun () ->
              Ojs.bool_of_js
                (let x9498 = this_to_js Obj.magic x9496 in
                 Ojs.call (Ojs.get_prop_ascii x9498 "includes") "apply"
                   [|x9498;((let x9494 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x9494 "push"
                                  [|(bigint_to_js x9492)|]);
                             (match x9493 with
                              | Some x9495 ->
                                  ignore
                                    (Ojs.call x9494 "push"
                                       [|(Ojs.float_to_js x9495)|])
                              | None -> ());
                             x9494))|])
    let (indexOf :
      'tags this -> searchElement:bigint -> ?fromIndex:float -> unit -> float)
      =
      fun (x9503 : 'tags this) ->
        fun ~searchElement:(x9499 : bigint) ->
          fun ?fromIndex:(x9500 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x9505 = this_to_js Obj.magic x9503 in
                 Ojs.call (Ojs.get_prop_ascii x9505 "indexOf") "apply"
                   [|x9505;((let x9501 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x9501 "push"
                                  [|(bigint_to_js x9499)|]);
                             (match x9500 with
                              | Some x9502 ->
                                  ignore
                                    (Ojs.call x9501 "push"
                                       [|(Ojs.float_to_js x9502)|])
                              | None -> ());
                             x9501))|])
    let (join : 'tags this -> ?separator:string -> unit -> string) =
      fun (x9509 : 'tags this) ->
        fun ?separator:(x9506 : string option) ->
          fun () ->
            Ojs.string_of_js
              (let x9511 = this_to_js Obj.magic x9509 in
               Ojs.call (Ojs.get_prop_ascii x9511 "join") "apply"
                 [|x9511;((let x9507 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x9506 with
                            | Some x9508 ->
                                ignore
                                  (Ojs.call x9507 "push"
                                     [|(Ojs.string_to_js x9508)|])
                            | None -> ());
                           x9507))|])
    let (keys : 'tags this -> float IterableIterator.t) =
      fun (x9512 : 'tags this) ->
        IterableIterator.t_of_js Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x9512) "keys" [||])
    let (lastIndexOf :
      'tags this -> searchElement:bigint -> ?fromIndex:float -> unit -> float)
      =
      fun (x9519 : 'tags this) ->
        fun ~searchElement:(x9515 : bigint) ->
          fun ?fromIndex:(x9516 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x9521 = this_to_js Obj.magic x9519 in
                 Ojs.call (Ojs.get_prop_ascii x9521 "lastIndexOf") "apply"
                   [|x9521;((let x9517 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x9517 "push"
                                  [|(bigint_to_js x9515)|]);
                             (match x9516 with
                              | Some x9518 ->
                                  ignore
                                    (Ojs.call x9517 "push"
                                       [|(Ojs.float_to_js x9518)|])
                              | None -> ());
                             x9517))|])
    let (get_length : 'tags this -> float) =
      fun (x9522 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x9522) "length")
    let (map :
      'tags this ->
        callbackfn:(value:bigint -> index:float -> array:t -> bigint) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x9531 : 'tags this) ->
        fun
          ~callbackfn:(x9524 :
                        value:bigint -> index:float -> array:t -> bigint)
          ->
          fun ?thisArg:(x9525 : any option) ->
            fun () ->
              t_of_js
                (let x9533 = this_to_js Obj.magic x9531 in
                 Ojs.call (Ojs.get_prop_ascii x9533 "map") "apply"
                   [|x9533;((let x9526 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x9526 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x9528 : Ojs.t) ->
                                          fun (x9529 : Ojs.t) ->
                                            fun (x9530 : Ojs.t) ->
                                              bigint_to_js
                                                (x9524
                                                   ~value:(bigint_of_js x9528)
                                                   ~index:(Ojs.float_of_js
                                                             x9529)
                                                   ~array:(t_of_js x9530))))|]);
                             (match x9525 with
                              | Some x9527 ->
                                  ignore
                                    (Ojs.call x9526 "push"
                                       [|(any_to_js x9527)|])
                              | None -> ());
                             x9526))|])
    let (reduce :
      'tags this ->
        callbackfn:(previousValue:bigint ->
                      currentValue:bigint ->
                        currentIndex:float -> array:t -> bigint)
          -> bigint)
      =
      fun (x9539 : 'tags this) ->
        fun
          ~callbackfn:(x9534 :
                        previousValue:bigint ->
                          currentValue:bigint ->
                            currentIndex:float -> array:t -> bigint)
          ->
          bigint_of_js
            (Ojs.call (this_to_js Obj.magic x9539) "reduce"
               [|(Ojs.fun_to_js 4
                    (fun (x9535 : Ojs.t) ->
                       fun (x9536 : Ojs.t) ->
                         fun (x9537 : Ojs.t) ->
                           fun (x9538 : Ojs.t) ->
                             bigint_to_js
                               (x9534 ~previousValue:(bigint_of_js x9535)
                                  ~currentValue:(bigint_of_js x9536)
                                  ~currentIndex:(Ojs.float_of_js x9537)
                                  ~array:(t_of_js x9538))))|])
    let (reduce' :
      'tags this ->
        callbackfn:(previousValue:'U ->
                      currentValue:bigint ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x9547 : 'tags this) ->
        fun
          ~callbackfn:(x9541 :
                        previousValue:'U ->
                          currentValue:bigint ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x9546 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic x9547) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x9542 : Ojs.t) ->
                         fun (x9543 : Ojs.t) ->
                           fun (x9544 : Ojs.t) ->
                             fun (x9545 : Ojs.t) ->
                               Obj.magic
                                 (x9541 ~previousValue:(Obj.magic x9542)
                                    ~currentValue:(bigint_of_js x9543)
                                    ~currentIndex:(Ojs.float_of_js x9544)
                                    ~array:(t_of_js x9545))));(Obj.magic
                                                                 x9546)|])
    let (reduceRight :
      'tags this ->
        callbackfn:(previousValue:bigint ->
                      currentValue:bigint ->
                        currentIndex:float -> array:t -> bigint)
          -> bigint)
      =
      fun (x9554 : 'tags this) ->
        fun
          ~callbackfn:(x9549 :
                        previousValue:bigint ->
                          currentValue:bigint ->
                            currentIndex:float -> array:t -> bigint)
          ->
          bigint_of_js
            (Ojs.call (this_to_js Obj.magic x9554) "reduceRight"
               [|(Ojs.fun_to_js 4
                    (fun (x9550 : Ojs.t) ->
                       fun (x9551 : Ojs.t) ->
                         fun (x9552 : Ojs.t) ->
                           fun (x9553 : Ojs.t) ->
                             bigint_to_js
                               (x9549 ~previousValue:(bigint_of_js x9550)
                                  ~currentValue:(bigint_of_js x9551)
                                  ~currentIndex:(Ojs.float_of_js x9552)
                                  ~array:(t_of_js x9553))))|])
    let (reduceRight' :
      'tags this ->
        callbackfn:(previousValue:'U ->
                      currentValue:bigint ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x9562 : 'tags this) ->
        fun
          ~callbackfn:(x9556 :
                        previousValue:'U ->
                          currentValue:bigint ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x9561 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic x9562) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x9557 : Ojs.t) ->
                         fun (x9558 : Ojs.t) ->
                           fun (x9559 : Ojs.t) ->
                             fun (x9560 : Ojs.t) ->
                               Obj.magic
                                 (x9556 ~previousValue:(Obj.magic x9557)
                                    ~currentValue:(bigint_of_js x9558)
                                    ~currentIndex:(Ojs.float_of_js x9559)
                                    ~array:(t_of_js x9560))));(Obj.magic
                                                                 x9561)|])
    let (reverse : 'tags this -> 'tags this) =
      fun (x9564 : 'tags this) ->
        this_of_js Obj.magic
          (Ojs.call (this_to_js Obj.magic x9564) "reverse" [||])
    let (set_ :
      'tags this -> array:bigint ArrayLike.t -> ?offset:float -> unit -> unit)
      =
      fun (x9572 : 'tags this) ->
        fun ~array:(x9567 : bigint ArrayLike.t) ->
          fun ?offset:(x9568 : float option) ->
            fun () ->
              ignore
                (let x9574 = this_to_js Obj.magic x9572 in
                 Ojs.call (Ojs.get_prop_ascii x9574 "set") "apply"
                   [|x9574;((let x9569 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x9569 "push"
                                  [|(ArrayLike.t_to_js bigint_to_js x9567)|]);
                             (match x9568 with
                              | Some x9570 ->
                                  ignore
                                    (Ojs.call x9569 "push"
                                       [|(Ojs.float_to_js x9570)|])
                              | None -> ());
                             x9569))|])
    let (slice : 'tags this -> ?start:float -> ?end_:float -> unit -> t) =
      fun (x9580 : 'tags this) ->
        fun ?start:(x9575 : float option) ->
          fun ?end_:(x9576 : float option) ->
            fun () ->
              t_of_js
                (let x9582 = this_to_js Obj.magic x9580 in
                 Ojs.call (Ojs.get_prop_ascii x9582 "slice") "apply"
                   [|x9582;((let x9577 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x9575 with
                              | Some x9579 ->
                                  ignore
                                    (Ojs.call x9577 "push"
                                       [|(Ojs.float_to_js x9579)|])
                              | None -> ());
                             (match x9576 with
                              | Some x9578 ->
                                  ignore
                                    (Ojs.call x9577 "push"
                                       [|(Ojs.float_to_js x9578)|])
                              | None -> ());
                             x9577))|])
    let (some :
      'tags this ->
        predicate:(value:bigint -> index:float -> array:t -> bool) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x9590 : 'tags this) ->
        fun
          ~predicate:(x9583 : value:bigint -> index:float -> array:t -> bool)
          ->
          fun ?thisArg:(x9584 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x9592 = this_to_js Obj.magic x9590 in
                 Ojs.call (Ojs.get_prop_ascii x9592 "some") "apply"
                   [|x9592;((let x9585 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x9585 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x9587 : Ojs.t) ->
                                          fun (x9588 : Ojs.t) ->
                                            fun (x9589 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x9583
                                                   ~value:(bigint_of_js x9587)
                                                   ~index:(Ojs.float_of_js
                                                             x9588)
                                                   ~array:(t_of_js x9589))))|]);
                             (match x9584 with
                              | Some x9586 ->
                                  ignore
                                    (Ojs.call x9585 "push"
                                       [|(any_to_js x9586)|])
                              | None -> ());
                             x9585))|])
    let (sort :
      'tags this ->
        ?compareFn:(a:bigint -> b:bigint -> [ `U1 of float  | `U2 of bigint ])
          -> unit -> 'tags this)
      =
      fun (x9600 : 'tags this) ->
        fun
          ?compareFn:(x9593 :
                       (a:bigint ->
                          b:bigint -> [ `U1 of float  | `U2 of bigint ])
                         option)
          ->
          fun () ->
            this_of_js Obj.magic
              (let x9602 = this_to_js Obj.magic x9600 in
               Ojs.call (Ojs.get_prop_ascii x9602 "sort") "apply"
                 [|x9602;((let x9594 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x9593 with
                            | Some x9595 ->
                                ignore
                                  (Ojs.call x9594 "push"
                                     [|(Ojs.fun_to_js 2
                                          (fun (x9596 : Ojs.t) ->
                                             fun (x9597 : Ojs.t) ->
                                               match x9595
                                                       ~a:(bigint_of_js x9596)
                                                       ~b:(bigint_of_js x9597)
                                               with
                                               | `U1 x9598 ->
                                                   Ojs.float_to_js x9598
                                               | `U2 x9599 ->
                                                   bigint_to_js x9599))|])
                            | None -> ());
                           x9594))|])
    let (subarray : 'tags this -> ?begin_:float -> ?end_:float -> unit -> t)
      =
      fun (x9609 : 'tags this) ->
        fun ?begin_:(x9604 : float option) ->
          fun ?end_:(x9605 : float option) ->
            fun () ->
              t_of_js
                (let x9611 = this_to_js Obj.magic x9609 in
                 Ojs.call (Ojs.get_prop_ascii x9611 "subarray") "apply"
                   [|x9611;((let x9606 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x9604 with
                              | Some x9608 ->
                                  ignore
                                    (Ojs.call x9606 "push"
                                       [|(Ojs.float_to_js x9608)|])
                              | None -> ());
                             (match x9605 with
                              | Some x9607 ->
                                  ignore
                                    (Ojs.call x9606 "push"
                                       [|(Ojs.float_to_js x9607)|])
                              | None -> ());
                             x9606))|])
    let (toLocaleString : 'tags this -> string) =
      fun (x9612 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x9612) "toLocaleString" [||])
    let (toString : 'tags this -> string) =
      fun (x9614 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x9614) "toString" [||])
    let (valueOf : 'tags this -> t) =
      fun (x9616 : 'tags this) ->
        t_of_js (Ojs.call (this_to_js Obj.magic x9616) "valueOf" [||])
    let (values : 'tags this -> bigint IterableIterator.t) =
      fun (x9618 : 'tags this) ->
        IterableIterator.t_of_js bigint_of_js
          (Ojs.call (this_to_js Obj.magic x9618) "values" [||])
    let (get : 'tags this -> float -> bigint) =
      fun (x9621 : 'tags this) ->
        fun (x9623 : float) ->
          bigint_of_js
            (Ojs.get_prop (this_to_js Obj.magic x9621)
               (Ojs.float_to_js x9623))
    let (set : 'tags this -> float -> bigint -> unit) =
      fun (x9624 : 'tags this) ->
        fun (x9626 : float) ->
          fun (x9627 : bigint) ->
            Ojs.set_prop (this_to_js Obj.magic x9624) (Ojs.float_to_js x9626)
              (bigint_to_js x9627)
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "BigUint64Array") "prototype")
    let (create : ?length:float -> unit -> t) =
      fun ?length:(x9628 : float option) ->
        fun () ->
          t_of_js
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "BigUint64Array")
               (let x9629 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x9628 with
                 | Some x9630 ->
                     ignore
                       (Ojs.call x9629 "push" [|(Ojs.float_to_js x9630)|])
                 | None -> ());
                x9629))
    let (create' : bigint Iterable.t -> t) =
      fun (x9631 : bigint Iterable.t) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "BigUint64Array")
             [|(Iterable.t_to_js bigint_to_js x9631)|])
    let (create'' :
      buffer:ArrayBufferLike.t ->
        ?byteOffset:float -> ?length:float -> unit -> t)
      =
      fun ~buffer:(x9633 : ArrayBufferLike.t) ->
        fun ?byteOffset:(x9634 : float option) ->
          fun ?length:(x9635 : float option) ->
            fun () ->
              t_of_js
                (Ojs.new_obj_arr
                   (Ojs.get_prop_ascii Ojs.global "BigUint64Array")
                   (let x9636 =
                      Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                        [||] in
                    ignore
                      (Ojs.call x9636 "push"
                         [|(ArrayBufferLike.t_to_js x9633)|]);
                    (match x9634 with
                     | Some x9638 ->
                         ignore
                           (Ojs.call x9636 "push" [|(Ojs.float_to_js x9638)|])
                     | None -> ());
                    (match x9635 with
                     | Some x9637 ->
                         ignore
                           (Ojs.call x9636 "push" [|(Ojs.float_to_js x9637)|])
                     | None -> ());
                    x9636))
    let (bytes_per_element : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "BigUint64Array")
             "BYTES_PER_ELEMENT")
    let (of_ : bigint list -> t) =
      fun (x9639 : bigint list) ->
        t_of_js
          (let x9642 = Ojs.get_prop_ascii Ojs.global "BigUint64Array" in
           Ojs.call (Ojs.get_prop_ascii x9642 "of") "apply"
             [|x9642;((let x9640 =
                         Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                           [||] in
                       List.iter
                         (fun (x9641 : bigint) ->
                            ignore
                              (Ojs.call x9640 "push" [|(bigint_to_js x9641)|]))
                         x9639;
                       x9640))|])
    let (from : bigint ArrayLike.t -> t) =
      fun (x9643 : bigint ArrayLike.t) ->
        t_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "BigUint64Array") "from"
             [|(ArrayLike.t_to_js bigint_to_js x9643)|])
    let (from' :
      arrayLike:'U ArrayLike.t ->
        mapfn:(v:'U -> k:float -> bigint) -> ?thisArg:any -> unit -> t)
      =
      fun ~arrayLike:(x9645 : 'U ArrayLike.t) ->
        fun ~mapfn:(x9646 : v:'U -> k:float -> bigint) ->
          fun ?thisArg:(x9647 : any option) ->
            fun () ->
              t_of_js
                (let x9653 = Ojs.get_prop_ascii Ojs.global "BigUint64Array" in
                 Ojs.call (Ojs.get_prop_ascii x9653 "from") "apply"
                   [|x9653;((let x9648 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x9648 "push"
                                  [|(ArrayLike.t_to_js Obj.magic x9645)|]);
                             ignore
                               (Ojs.call x9648 "push"
                                  [|(Ojs.fun_to_js 2
                                       (fun (x9650 : Ojs.t) ->
                                          fun (x9651 : Ojs.t) ->
                                            bigint_to_js
                                              (x9646 ~v:(Obj.magic x9650)
                                                 ~k:(Ojs.float_of_js x9651))))|]);
                             (match x9647 with
                              | Some x9649 ->
                                  ignore
                                    (Ojs.call x9648 "push"
                                       [|(any_to_js x9649)|])
                              | None -> ());
                             x9648))|])
    let cast_from = Obj.magic
  end
module BigInt64Array =
  struct
    type t = [ `BigInt64Array ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type tags = [ `BigInt64Array ]
    type 'tags this = 'tags intf constraint 'tags = [> `BigInt64Array ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x9656 : Ojs.t) -> intf_of_js __tags_of_js x9656
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x9654 : __tags intf) -> intf_to_js __tags_to_js x9654
    let (at : 'tags this -> index:float -> bigint option) =
      fun (x9659 : 'tags this) ->
        fun ~index:(x9658 : float) ->
          Ojs.option_of_js bigint_of_js
            (Ojs.call (this_to_js Obj.magic x9659) "at"
               [|(Ojs.float_to_js x9658)|])
    let (findLast :
      'tags this ->
        predicate:(value:bigint -> index:float -> array:t -> bool) ->
          ?thisArg:any -> unit -> 'S option)
      =
      fun (x9669 : 'tags this) ->
        fun
          ~predicate:(x9662 : value:bigint -> index:float -> array:t -> bool)
          ->
          fun ?thisArg:(x9663 : any option) ->
            fun () ->
              Ojs.option_of_js Obj.magic
                (let x9671 = this_to_js Obj.magic x9669 in
                 Ojs.call (Ojs.get_prop_ascii x9671 "findLast") "apply"
                   [|x9671;((let x9664 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x9664 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x9666 : Ojs.t) ->
                                          fun (x9667 : Ojs.t) ->
                                            fun (x9668 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x9662
                                                   ~value:(bigint_of_js x9666)
                                                   ~index:(Ojs.float_of_js
                                                             x9667)
                                                   ~array:(t_of_js x9668))))|]);
                             (match x9663 with
                              | Some x9665 ->
                                  ignore
                                    (Ojs.call x9664 "push"
                                       [|(any_to_js x9665)|])
                              | None -> ());
                             x9664))|])
    let (findLast' :
      'tags this ->
        predicate:(value:bigint -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> bigint option)
      =
      fun (x9680 : 'tags this) ->
        fun
          ~predicate:(x9673 :
                       value:bigint -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x9674 : any option) ->
            fun () ->
              Ojs.option_of_js bigint_of_js
                (let x9682 = this_to_js Obj.magic x9680 in
                 Ojs.call (Ojs.get_prop_ascii x9682 "findLast") "apply"
                   [|x9682;((let x9675 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x9675 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x9677 : Ojs.t) ->
                                          fun (x9678 : Ojs.t) ->
                                            fun (x9679 : Ojs.t) ->
                                              unknown_to_js
                                                (x9673
                                                   ~value:(bigint_of_js x9677)
                                                   ~index:(Ojs.float_of_js
                                                             x9678)
                                                   ~array:(t_of_js x9679))))|]);
                             (match x9674 with
                              | Some x9676 ->
                                  ignore
                                    (Ojs.call x9675 "push"
                                       [|(any_to_js x9676)|])
                              | None -> ());
                             x9675))|])
    let (findLastIndex :
      'tags this ->
        predicate:(value:bigint -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> float)
      =
      fun (x9691 : 'tags this) ->
        fun
          ~predicate:(x9684 :
                       value:bigint -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x9685 : any option) ->
            fun () ->
              Ojs.float_of_js
                (let x9693 = this_to_js Obj.magic x9691 in
                 Ojs.call (Ojs.get_prop_ascii x9693 "findLastIndex") "apply"
                   [|x9693;((let x9686 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x9686 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x9688 : Ojs.t) ->
                                          fun (x9689 : Ojs.t) ->
                                            fun (x9690 : Ojs.t) ->
                                              unknown_to_js
                                                (x9684
                                                   ~value:(bigint_of_js x9688)
                                                   ~index:(Ojs.float_of_js
                                                             x9689)
                                                   ~array:(t_of_js x9690))))|]);
                             (match x9685 with
                              | Some x9687 ->
                                  ignore
                                    (Ojs.call x9686 "push"
                                       [|(any_to_js x9687)|])
                              | None -> ());
                             x9686))|])
    let (toReversed : 'tags this -> t) =
      fun (x9694 : 'tags this) ->
        t_of_js (Ojs.call (this_to_js Obj.magic x9694) "toReversed" [||])
    let (toSorted :
      'tags this -> ?compareFn:(a:bigint -> b:bigint -> float) -> unit -> t)
      =
      fun (x9701 : 'tags this) ->
        fun ?compareFn:(x9696 : (a:bigint -> b:bigint -> float) option) ->
          fun () ->
            t_of_js
              (let x9703 = this_to_js Obj.magic x9701 in
               Ojs.call (Ojs.get_prop_ascii x9703 "toSorted") "apply"
                 [|x9703;((let x9697 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x9696 with
                            | Some x9698 ->
                                ignore
                                  (Ojs.call x9697 "push"
                                     [|(Ojs.fun_to_js 2
                                          (fun (x9699 : Ojs.t) ->
                                             fun (x9700 : Ojs.t) ->
                                               Ojs.float_to_js
                                                 (x9698
                                                    ~a:(bigint_of_js x9699)
                                                    ~b:(bigint_of_js x9700))))|])
                            | None -> ());
                           x9697))|])
    let (with_ : 'tags this -> index:float -> value:bigint -> t) =
      fun (x9706 : 'tags this) ->
        fun ~index:(x9704 : float) ->
          fun ~value:(x9705 : bigint) ->
            t_of_js
              (Ojs.call (this_to_js Obj.magic x9706) "with"
                 [|(Ojs.float_to_js x9704);(bigint_to_js x9705)|])
    let (get_BYTES_PER_ELEMENT : 'tags this -> float) =
      fun (x9708 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x9708)
             "BYTES_PER_ELEMENT")
    let (get_buffer : 'tags this -> ArrayBufferLike.t) =
      fun (x9710 : 'tags this) ->
        ArrayBufferLike.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x9710) "buffer")
    let (get_byteLength : 'tags this -> float) =
      fun (x9712 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x9712) "byteLength")
    let (get_byteOffset : 'tags this -> float) =
      fun (x9714 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x9714) "byteOffset")
    let (copyWithin :
      'tags this ->
        target:float -> start:float -> ?end_:float -> unit -> 'tags this)
      =
      fun (x9721 : 'tags this) ->
        fun ~target:(x9716 : float) ->
          fun ~start:(x9717 : float) ->
            fun ?end_:(x9718 : float option) ->
              fun () ->
                this_of_js Obj.magic
                  (let x9723 = this_to_js Obj.magic x9721 in
                   Ojs.call (Ojs.get_prop_ascii x9723 "copyWithin") "apply"
                     [|x9723;((let x9719 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x9719 "push"
                                    [|(Ojs.float_to_js x9716)|]);
                               ignore
                                 (Ojs.call x9719 "push"
                                    [|(Ojs.float_to_js x9717)|]);
                               (match x9718 with
                                | Some x9720 ->
                                    ignore
                                      (Ojs.call x9719 "push"
                                         [|(Ojs.float_to_js x9720)|])
                                | None -> ());
                               x9719))|])
    let (entries : 'tags this -> (float * bigint) IterableIterator.t) =
      fun (x9725 : 'tags this) ->
        IterableIterator.t_of_js
          (fun (x9727 : Ojs.t) ->
             let x9728 = x9727 in
             ((Ojs.float_of_js (Ojs.array_get x9728 0)),
               (bigint_of_js (Ojs.array_get x9728 1))))
          (Ojs.call (this_to_js Obj.magic x9725) "entries" [||])
    let (every :
      'tags this ->
        predicate:(value:bigint -> index:float -> array:t -> bool) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x9736 : 'tags this) ->
        fun
          ~predicate:(x9729 : value:bigint -> index:float -> array:t -> bool)
          ->
          fun ?thisArg:(x9730 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x9738 = this_to_js Obj.magic x9736 in
                 Ojs.call (Ojs.get_prop_ascii x9738 "every") "apply"
                   [|x9738;((let x9731 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x9731 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x9733 : Ojs.t) ->
                                          fun (x9734 : Ojs.t) ->
                                            fun (x9735 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x9729
                                                   ~value:(bigint_of_js x9733)
                                                   ~index:(Ojs.float_of_js
                                                             x9734)
                                                   ~array:(t_of_js x9735))))|]);
                             (match x9730 with
                              | Some x9732 ->
                                  ignore
                                    (Ojs.call x9731 "push"
                                       [|(any_to_js x9732)|])
                              | None -> ());
                             x9731))|])
    let (fill :
      'tags this ->
        value:bigint -> ?start:float -> ?end_:float -> unit -> 'tags this)
      =
      fun (x9745 : 'tags this) ->
        fun ~value:(x9739 : bigint) ->
          fun ?start:(x9740 : float option) ->
            fun ?end_:(x9741 : float option) ->
              fun () ->
                this_of_js Obj.magic
                  (let x9747 = this_to_js Obj.magic x9745 in
                   Ojs.call (Ojs.get_prop_ascii x9747 "fill") "apply"
                     [|x9747;((let x9742 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x9742 "push"
                                    [|(bigint_to_js x9739)|]);
                               (match x9740 with
                                | Some x9744 ->
                                    ignore
                                      (Ojs.call x9742 "push"
                                         [|(Ojs.float_to_js x9744)|])
                                | None -> ());
                               (match x9741 with
                                | Some x9743 ->
                                    ignore
                                      (Ojs.call x9742 "push"
                                         [|(Ojs.float_to_js x9743)|])
                                | None -> ());
                               x9742))|])
    let (filter :
      'tags this ->
        predicate:(value:bigint -> index:float -> array:t -> any) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x9756 : 'tags this) ->
        fun
          ~predicate:(x9749 : value:bigint -> index:float -> array:t -> any)
          ->
          fun ?thisArg:(x9750 : any option) ->
            fun () ->
              t_of_js
                (let x9758 = this_to_js Obj.magic x9756 in
                 Ojs.call (Ojs.get_prop_ascii x9758 "filter") "apply"
                   [|x9758;((let x9751 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x9751 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x9753 : Ojs.t) ->
                                          fun (x9754 : Ojs.t) ->
                                            fun (x9755 : Ojs.t) ->
                                              any_to_js
                                                (x9749
                                                   ~value:(bigint_of_js x9753)
                                                   ~index:(Ojs.float_of_js
                                                             x9754)
                                                   ~array:(t_of_js x9755))))|]);
                             (match x9750 with
                              | Some x9752 ->
                                  ignore
                                    (Ojs.call x9751 "push"
                                       [|(any_to_js x9752)|])
                              | None -> ());
                             x9751))|])
    let (find :
      'tags this ->
        predicate:(value:bigint -> index:float -> array:t -> bool) ->
          ?thisArg:any -> unit -> bigint option)
      =
      fun (x9766 : 'tags this) ->
        fun
          ~predicate:(x9759 : value:bigint -> index:float -> array:t -> bool)
          ->
          fun ?thisArg:(x9760 : any option) ->
            fun () ->
              Ojs.option_of_js bigint_of_js
                (let x9768 = this_to_js Obj.magic x9766 in
                 Ojs.call (Ojs.get_prop_ascii x9768 "find") "apply"
                   [|x9768;((let x9761 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x9761 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x9763 : Ojs.t) ->
                                          fun (x9764 : Ojs.t) ->
                                            fun (x9765 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x9759
                                                   ~value:(bigint_of_js x9763)
                                                   ~index:(Ojs.float_of_js
                                                             x9764)
                                                   ~array:(t_of_js x9765))))|]);
                             (match x9760 with
                              | Some x9762 ->
                                  ignore
                                    (Ojs.call x9761 "push"
                                       [|(any_to_js x9762)|])
                              | None -> ());
                             x9761))|])
    let (findIndex :
      'tags this ->
        predicate:(value:bigint -> index:float -> array:t -> bool) ->
          ?thisArg:any -> unit -> float)
      =
      fun (x9777 : 'tags this) ->
        fun
          ~predicate:(x9770 : value:bigint -> index:float -> array:t -> bool)
          ->
          fun ?thisArg:(x9771 : any option) ->
            fun () ->
              Ojs.float_of_js
                (let x9779 = this_to_js Obj.magic x9777 in
                 Ojs.call (Ojs.get_prop_ascii x9779 "findIndex") "apply"
                   [|x9779;((let x9772 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x9772 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x9774 : Ojs.t) ->
                                          fun (x9775 : Ojs.t) ->
                                            fun (x9776 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x9770
                                                   ~value:(bigint_of_js x9774)
                                                   ~index:(Ojs.float_of_js
                                                             x9775)
                                                   ~array:(t_of_js x9776))))|]);
                             (match x9771 with
                              | Some x9773 ->
                                  ignore
                                    (Ojs.call x9772 "push"
                                       [|(any_to_js x9773)|])
                              | None -> ());
                             x9772))|])
    let (forEach :
      'tags this ->
        callbackfn:(value:bigint -> index:float -> array:t -> unit) ->
          ?thisArg:any -> unit -> unit)
      =
      fun (x9787 : 'tags this) ->
        fun
          ~callbackfn:(x9780 :
                        value:bigint -> index:float -> array:t -> unit)
          ->
          fun ?thisArg:(x9781 : any option) ->
            fun () ->
              ignore
                (let x9789 = this_to_js Obj.magic x9787 in
                 Ojs.call (Ojs.get_prop_ascii x9789 "forEach") "apply"
                   [|x9789;((let x9782 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x9782 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x9784 : Ojs.t) ->
                                          fun (x9785 : Ojs.t) ->
                                            fun (x9786 : Ojs.t) ->
                                              x9780
                                                ~value:(bigint_of_js x9784)
                                                ~index:(Ojs.float_of_js x9785)
                                                ~array:(t_of_js x9786)))|]);
                             (match x9781 with
                              | Some x9783 ->
                                  ignore
                                    (Ojs.call x9782 "push"
                                       [|(any_to_js x9783)|])
                              | None -> ());
                             x9782))|])
    let (includes :
      'tags this -> searchElement:bigint -> ?fromIndex:float -> unit -> bool)
      =
      fun (x9794 : 'tags this) ->
        fun ~searchElement:(x9790 : bigint) ->
          fun ?fromIndex:(x9791 : float option) ->
            fun () ->
              Ojs.bool_of_js
                (let x9796 = this_to_js Obj.magic x9794 in
                 Ojs.call (Ojs.get_prop_ascii x9796 "includes") "apply"
                   [|x9796;((let x9792 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x9792 "push"
                                  [|(bigint_to_js x9790)|]);
                             (match x9791 with
                              | Some x9793 ->
                                  ignore
                                    (Ojs.call x9792 "push"
                                       [|(Ojs.float_to_js x9793)|])
                              | None -> ());
                             x9792))|])
    let (indexOf :
      'tags this -> searchElement:bigint -> ?fromIndex:float -> unit -> float)
      =
      fun (x9801 : 'tags this) ->
        fun ~searchElement:(x9797 : bigint) ->
          fun ?fromIndex:(x9798 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x9803 = this_to_js Obj.magic x9801 in
                 Ojs.call (Ojs.get_prop_ascii x9803 "indexOf") "apply"
                   [|x9803;((let x9799 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x9799 "push"
                                  [|(bigint_to_js x9797)|]);
                             (match x9798 with
                              | Some x9800 ->
                                  ignore
                                    (Ojs.call x9799 "push"
                                       [|(Ojs.float_to_js x9800)|])
                              | None -> ());
                             x9799))|])
    let (join : 'tags this -> ?separator:string -> unit -> string) =
      fun (x9807 : 'tags this) ->
        fun ?separator:(x9804 : string option) ->
          fun () ->
            Ojs.string_of_js
              (let x9809 = this_to_js Obj.magic x9807 in
               Ojs.call (Ojs.get_prop_ascii x9809 "join") "apply"
                 [|x9809;((let x9805 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x9804 with
                            | Some x9806 ->
                                ignore
                                  (Ojs.call x9805 "push"
                                     [|(Ojs.string_to_js x9806)|])
                            | None -> ());
                           x9805))|])
    let (keys : 'tags this -> float IterableIterator.t) =
      fun (x9810 : 'tags this) ->
        IterableIterator.t_of_js Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x9810) "keys" [||])
    let (lastIndexOf :
      'tags this -> searchElement:bigint -> ?fromIndex:float -> unit -> float)
      =
      fun (x9817 : 'tags this) ->
        fun ~searchElement:(x9813 : bigint) ->
          fun ?fromIndex:(x9814 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x9819 = this_to_js Obj.magic x9817 in
                 Ojs.call (Ojs.get_prop_ascii x9819 "lastIndexOf") "apply"
                   [|x9819;((let x9815 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x9815 "push"
                                  [|(bigint_to_js x9813)|]);
                             (match x9814 with
                              | Some x9816 ->
                                  ignore
                                    (Ojs.call x9815 "push"
                                       [|(Ojs.float_to_js x9816)|])
                              | None -> ());
                             x9815))|])
    let (get_length : 'tags this -> float) =
      fun (x9820 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x9820) "length")
    let (map :
      'tags this ->
        callbackfn:(value:bigint -> index:float -> array:t -> bigint) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x9829 : 'tags this) ->
        fun
          ~callbackfn:(x9822 :
                        value:bigint -> index:float -> array:t -> bigint)
          ->
          fun ?thisArg:(x9823 : any option) ->
            fun () ->
              t_of_js
                (let x9831 = this_to_js Obj.magic x9829 in
                 Ojs.call (Ojs.get_prop_ascii x9831 "map") "apply"
                   [|x9831;((let x9824 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x9824 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x9826 : Ojs.t) ->
                                          fun (x9827 : Ojs.t) ->
                                            fun (x9828 : Ojs.t) ->
                                              bigint_to_js
                                                (x9822
                                                   ~value:(bigint_of_js x9826)
                                                   ~index:(Ojs.float_of_js
                                                             x9827)
                                                   ~array:(t_of_js x9828))))|]);
                             (match x9823 with
                              | Some x9825 ->
                                  ignore
                                    (Ojs.call x9824 "push"
                                       [|(any_to_js x9825)|])
                              | None -> ());
                             x9824))|])
    let (reduce :
      'tags this ->
        callbackfn:(previousValue:bigint ->
                      currentValue:bigint ->
                        currentIndex:float -> array:t -> bigint)
          -> bigint)
      =
      fun (x9837 : 'tags this) ->
        fun
          ~callbackfn:(x9832 :
                        previousValue:bigint ->
                          currentValue:bigint ->
                            currentIndex:float -> array:t -> bigint)
          ->
          bigint_of_js
            (Ojs.call (this_to_js Obj.magic x9837) "reduce"
               [|(Ojs.fun_to_js 4
                    (fun (x9833 : Ojs.t) ->
                       fun (x9834 : Ojs.t) ->
                         fun (x9835 : Ojs.t) ->
                           fun (x9836 : Ojs.t) ->
                             bigint_to_js
                               (x9832 ~previousValue:(bigint_of_js x9833)
                                  ~currentValue:(bigint_of_js x9834)
                                  ~currentIndex:(Ojs.float_of_js x9835)
                                  ~array:(t_of_js x9836))))|])
    let (reduce' :
      'tags this ->
        callbackfn:(previousValue:'U ->
                      currentValue:bigint ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x9845 : 'tags this) ->
        fun
          ~callbackfn:(x9839 :
                        previousValue:'U ->
                          currentValue:bigint ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x9844 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic x9845) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x9840 : Ojs.t) ->
                         fun (x9841 : Ojs.t) ->
                           fun (x9842 : Ojs.t) ->
                             fun (x9843 : Ojs.t) ->
                               Obj.magic
                                 (x9839 ~previousValue:(Obj.magic x9840)
                                    ~currentValue:(bigint_of_js x9841)
                                    ~currentIndex:(Ojs.float_of_js x9842)
                                    ~array:(t_of_js x9843))));(Obj.magic
                                                                 x9844)|])
    let (reduceRight :
      'tags this ->
        callbackfn:(previousValue:bigint ->
                      currentValue:bigint ->
                        currentIndex:float -> array:t -> bigint)
          -> bigint)
      =
      fun (x9852 : 'tags this) ->
        fun
          ~callbackfn:(x9847 :
                        previousValue:bigint ->
                          currentValue:bigint ->
                            currentIndex:float -> array:t -> bigint)
          ->
          bigint_of_js
            (Ojs.call (this_to_js Obj.magic x9852) "reduceRight"
               [|(Ojs.fun_to_js 4
                    (fun (x9848 : Ojs.t) ->
                       fun (x9849 : Ojs.t) ->
                         fun (x9850 : Ojs.t) ->
                           fun (x9851 : Ojs.t) ->
                             bigint_to_js
                               (x9847 ~previousValue:(bigint_of_js x9848)
                                  ~currentValue:(bigint_of_js x9849)
                                  ~currentIndex:(Ojs.float_of_js x9850)
                                  ~array:(t_of_js x9851))))|])
    let (reduceRight' :
      'tags this ->
        callbackfn:(previousValue:'U ->
                      currentValue:bigint ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x9860 : 'tags this) ->
        fun
          ~callbackfn:(x9854 :
                        previousValue:'U ->
                          currentValue:bigint ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x9859 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic x9860) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x9855 : Ojs.t) ->
                         fun (x9856 : Ojs.t) ->
                           fun (x9857 : Ojs.t) ->
                             fun (x9858 : Ojs.t) ->
                               Obj.magic
                                 (x9854 ~previousValue:(Obj.magic x9855)
                                    ~currentValue:(bigint_of_js x9856)
                                    ~currentIndex:(Ojs.float_of_js x9857)
                                    ~array:(t_of_js x9858))));(Obj.magic
                                                                 x9859)|])
    let (reverse : 'tags this -> 'tags this) =
      fun (x9862 : 'tags this) ->
        this_of_js Obj.magic
          (Ojs.call (this_to_js Obj.magic x9862) "reverse" [||])
    let (set_ :
      'tags this -> array:bigint ArrayLike.t -> ?offset:float -> unit -> unit)
      =
      fun (x9870 : 'tags this) ->
        fun ~array:(x9865 : bigint ArrayLike.t) ->
          fun ?offset:(x9866 : float option) ->
            fun () ->
              ignore
                (let x9872 = this_to_js Obj.magic x9870 in
                 Ojs.call (Ojs.get_prop_ascii x9872 "set") "apply"
                   [|x9872;((let x9867 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x9867 "push"
                                  [|(ArrayLike.t_to_js bigint_to_js x9865)|]);
                             (match x9866 with
                              | Some x9868 ->
                                  ignore
                                    (Ojs.call x9867 "push"
                                       [|(Ojs.float_to_js x9868)|])
                              | None -> ());
                             x9867))|])
    let (slice : 'tags this -> ?start:float -> ?end_:float -> unit -> t) =
      fun (x9878 : 'tags this) ->
        fun ?start:(x9873 : float option) ->
          fun ?end_:(x9874 : float option) ->
            fun () ->
              t_of_js
                (let x9880 = this_to_js Obj.magic x9878 in
                 Ojs.call (Ojs.get_prop_ascii x9880 "slice") "apply"
                   [|x9880;((let x9875 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x9873 with
                              | Some x9877 ->
                                  ignore
                                    (Ojs.call x9875 "push"
                                       [|(Ojs.float_to_js x9877)|])
                              | None -> ());
                             (match x9874 with
                              | Some x9876 ->
                                  ignore
                                    (Ojs.call x9875 "push"
                                       [|(Ojs.float_to_js x9876)|])
                              | None -> ());
                             x9875))|])
    let (some :
      'tags this ->
        predicate:(value:bigint -> index:float -> array:t -> bool) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x9888 : 'tags this) ->
        fun
          ~predicate:(x9881 : value:bigint -> index:float -> array:t -> bool)
          ->
          fun ?thisArg:(x9882 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x9890 = this_to_js Obj.magic x9888 in
                 Ojs.call (Ojs.get_prop_ascii x9890 "some") "apply"
                   [|x9890;((let x9883 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x9883 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x9885 : Ojs.t) ->
                                          fun (x9886 : Ojs.t) ->
                                            fun (x9887 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x9881
                                                   ~value:(bigint_of_js x9885)
                                                   ~index:(Ojs.float_of_js
                                                             x9886)
                                                   ~array:(t_of_js x9887))))|]);
                             (match x9882 with
                              | Some x9884 ->
                                  ignore
                                    (Ojs.call x9883 "push"
                                       [|(any_to_js x9884)|])
                              | None -> ());
                             x9883))|])
    let (sort :
      'tags this ->
        ?compareFn:(a:bigint -> b:bigint -> [ `U1 of float  | `U2 of bigint ])
          -> unit -> 'tags this)
      =
      fun (x9898 : 'tags this) ->
        fun
          ?compareFn:(x9891 :
                       (a:bigint ->
                          b:bigint -> [ `U1 of float  | `U2 of bigint ])
                         option)
          ->
          fun () ->
            this_of_js Obj.magic
              (let x9900 = this_to_js Obj.magic x9898 in
               Ojs.call (Ojs.get_prop_ascii x9900 "sort") "apply"
                 [|x9900;((let x9892 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x9891 with
                            | Some x9893 ->
                                ignore
                                  (Ojs.call x9892 "push"
                                     [|(Ojs.fun_to_js 2
                                          (fun (x9894 : Ojs.t) ->
                                             fun (x9895 : Ojs.t) ->
                                               match x9893
                                                       ~a:(bigint_of_js x9894)
                                                       ~b:(bigint_of_js x9895)
                                               with
                                               | `U1 x9896 ->
                                                   Ojs.float_to_js x9896
                                               | `U2 x9897 ->
                                                   bigint_to_js x9897))|])
                            | None -> ());
                           x9892))|])
    let (subarray : 'tags this -> ?begin_:float -> ?end_:float -> unit -> t)
      =
      fun (x9907 : 'tags this) ->
        fun ?begin_:(x9902 : float option) ->
          fun ?end_:(x9903 : float option) ->
            fun () ->
              t_of_js
                (let x9909 = this_to_js Obj.magic x9907 in
                 Ojs.call (Ojs.get_prop_ascii x9909 "subarray") "apply"
                   [|x9909;((let x9904 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x9902 with
                              | Some x9906 ->
                                  ignore
                                    (Ojs.call x9904 "push"
                                       [|(Ojs.float_to_js x9906)|])
                              | None -> ());
                             (match x9903 with
                              | Some x9905 ->
                                  ignore
                                    (Ojs.call x9904 "push"
                                       [|(Ojs.float_to_js x9905)|])
                              | None -> ());
                             x9904))|])
    let (toLocaleString : 'tags this -> string) =
      fun (x9910 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x9910) "toLocaleString" [||])
    let (toString : 'tags this -> string) =
      fun (x9912 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x9912) "toString" [||])
    let (valueOf : 'tags this -> t) =
      fun (x9914 : 'tags this) ->
        t_of_js (Ojs.call (this_to_js Obj.magic x9914) "valueOf" [||])
    let (values : 'tags this -> bigint IterableIterator.t) =
      fun (x9916 : 'tags this) ->
        IterableIterator.t_of_js bigint_of_js
          (Ojs.call (this_to_js Obj.magic x9916) "values" [||])
    let (get : 'tags this -> float -> bigint) =
      fun (x9919 : 'tags this) ->
        fun (x9921 : float) ->
          bigint_of_js
            (Ojs.get_prop (this_to_js Obj.magic x9919)
               (Ojs.float_to_js x9921))
    let (set : 'tags this -> float -> bigint -> unit) =
      fun (x9922 : 'tags this) ->
        fun (x9924 : float) ->
          fun (x9925 : bigint) ->
            Ojs.set_prop (this_to_js Obj.magic x9922) (Ojs.float_to_js x9924)
              (bigint_to_js x9925)
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "BigInt64Array")
             "prototype")
    let (create : ?length:float -> unit -> t) =
      fun ?length:(x9926 : float option) ->
        fun () ->
          t_of_js
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "BigInt64Array")
               (let x9927 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x9926 with
                 | Some x9928 ->
                     ignore
                       (Ojs.call x9927 "push" [|(Ojs.float_to_js x9928)|])
                 | None -> ());
                x9927))
    let (create' : bigint Iterable.t -> t) =
      fun (x9929 : bigint Iterable.t) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "BigInt64Array")
             [|(Iterable.t_to_js bigint_to_js x9929)|])
    let (create'' :
      buffer:ArrayBufferLike.t ->
        ?byteOffset:float -> ?length:float -> unit -> t)
      =
      fun ~buffer:(x9931 : ArrayBufferLike.t) ->
        fun ?byteOffset:(x9932 : float option) ->
          fun ?length:(x9933 : float option) ->
            fun () ->
              t_of_js
                (Ojs.new_obj_arr
                   (Ojs.get_prop_ascii Ojs.global "BigInt64Array")
                   (let x9934 =
                      Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                        [||] in
                    ignore
                      (Ojs.call x9934 "push"
                         [|(ArrayBufferLike.t_to_js x9931)|]);
                    (match x9932 with
                     | Some x9936 ->
                         ignore
                           (Ojs.call x9934 "push" [|(Ojs.float_to_js x9936)|])
                     | None -> ());
                    (match x9933 with
                     | Some x9935 ->
                         ignore
                           (Ojs.call x9934 "push" [|(Ojs.float_to_js x9935)|])
                     | None -> ());
                    x9934))
    let (bytes_per_element : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "BigInt64Array")
             "BYTES_PER_ELEMENT")
    let (of_ : bigint list -> t) =
      fun (x9937 : bigint list) ->
        t_of_js
          (let x9940 = Ojs.get_prop_ascii Ojs.global "BigInt64Array" in
           Ojs.call (Ojs.get_prop_ascii x9940 "of") "apply"
             [|x9940;((let x9938 =
                         Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                           [||] in
                       List.iter
                         (fun (x9939 : bigint) ->
                            ignore
                              (Ojs.call x9938 "push" [|(bigint_to_js x9939)|]))
                         x9937;
                       x9938))|])
    let (from : bigint ArrayLike.t -> t) =
      fun (x9941 : bigint ArrayLike.t) ->
        t_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "BigInt64Array") "from"
             [|(ArrayLike.t_to_js bigint_to_js x9941)|])
    let (from' :
      arrayLike:'U ArrayLike.t ->
        mapfn:(v:'U -> k:float -> bigint) -> ?thisArg:any -> unit -> t)
      =
      fun ~arrayLike:(x9943 : 'U ArrayLike.t) ->
        fun ~mapfn:(x9944 : v:'U -> k:float -> bigint) ->
          fun ?thisArg:(x9945 : any option) ->
            fun () ->
              t_of_js
                (let x9951 = Ojs.get_prop_ascii Ojs.global "BigInt64Array" in
                 Ojs.call (Ojs.get_prop_ascii x9951 "from") "apply"
                   [|x9951;((let x9946 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x9946 "push"
                                  [|(ArrayLike.t_to_js Obj.magic x9943)|]);
                             ignore
                               (Ojs.call x9946 "push"
                                  [|(Ojs.fun_to_js 2
                                       (fun (x9948 : Ojs.t) ->
                                          fun (x9949 : Ojs.t) ->
                                            bigint_to_js
                                              (x9944 ~v:(Obj.magic x9948)
                                                 ~k:(Ojs.float_of_js x9949))))|]);
                             (match x9945 with
                              | Some x9947 ->
                                  ignore
                                    (Ojs.call x9946 "push"
                                       [|(any_to_js x9947)|])
                              | None -> ());
                             x9946))|])
    let cast_from = Obj.magic
  end
module PromiseRejectedResult =
  struct
    type t = [ `PromiseRejectedResult ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type tags = [ `PromiseRejectedResult ]
    type 'tags this =
      'tags intf constraint 'tags = [> `PromiseRejectedResult ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x9954 : Ojs.t) -> intf_of_js __tags_of_js x9954
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x9952 : __tags intf) -> intf_to_js __tags_to_js x9952
    let (get_status : 'tags this -> [ `L_s113_rejected ]) =
      fun (x9956 : 'tags this) ->
        let x9958 = Ojs.get_prop_ascii (this_to_js Obj.magic x9956) "status" in
        match Ojs.string_of_js x9958 with
        | "rejected" -> `L_s113_rejected
        | _ -> assert false
    let (set_status : 'tags this -> [ `L_s113_rejected ] -> unit) =
      fun (x9959 : 'tags this) ->
        fun (x9960 : [ `L_s113_rejected ]) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x9959) "status"
            (match x9960 with
             | `L_s113_rejected -> Ojs.string_to_js "rejected")
    let (get_reason : 'tags this -> any) =
      fun (x9962 : 'tags this) ->
        any_of_js (Ojs.get_prop_ascii (this_to_js Obj.magic x9962) "reason")
    let (set_reason : 'tags this -> any -> unit) =
      fun (x9964 : 'tags this) ->
        fun (x9965 : any) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x9964) "reason"
            (any_to_js x9965)
    let (create : status:[ `L_s113_rejected ] -> reason:any -> unit -> t) =
      fun ~status:(x9967 : [ `L_s113_rejected ]) ->
        fun ~reason:(x9968 : any) ->
          fun () ->
            let x9969 = Ojs.empty_obj () in
            Ojs.set_prop_ascii x9969 "status"
              (match x9967 with
               | `L_s113_rejected -> Ojs.string_to_js "rejected");
            Ojs.set_prop_ascii x9969 "reason" (any_to_js x9968);
            t_of_js x9969
    let cast_from = Obj.magic
  end
module PromiseFulfilledResult =
  struct
    type 'T t = [ `PromiseFulfilledResult of 'T ] intf
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun _T -> Obj.magic
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun _T -> Obj.magic
    type 'T tags = [ `PromiseFulfilledResult of 'T ]
    type ('tags, 'T) this =
      'tags intf constraint 'tags = [> `PromiseFulfilledResult of 'T ]
    let rec this_of_js :
      'tags 'T .
        (Ojs.t -> 'tags) -> (Ojs.t -> 'T) -> Ojs.t -> ('tags, 'T) this
      =
      fun (type __tags) ->
        fun (type __T) ->
          fun (__tags_of_js : Ojs.t -> __tags) ->
            fun (__T_of_js : Ojs.t -> __T) ->
              fun (x9972 : Ojs.t) -> intf_of_js __tags_of_js x9972
    and this_to_js :
      'tags 'T .
        ('tags -> Ojs.t) -> ('T -> Ojs.t) -> ('tags, 'T) this -> Ojs.t
      =
      fun (type __tags) ->
        fun (type __T) ->
          fun (__tags_to_js : __tags -> Ojs.t) ->
            fun (__T_to_js : __T -> Ojs.t) ->
              fun (x9970 : __tags intf) -> intf_to_js __tags_to_js x9970
    let (get_status : ('tags, 'T) this -> [ `L_s62_fulfilled ]) =
      fun (x9974 : ('tags, 'T) this) ->
        let x9977 =
          Ojs.get_prop_ascii (this_to_js Obj.magic Obj.magic x9974) "status" in
        match Ojs.string_of_js x9977 with
        | "fulfilled" -> `L_s62_fulfilled
        | _ -> assert false
    let (set_status : ('tags, 'T) this -> [ `L_s62_fulfilled ] -> unit) =
      fun (x9978 : ('tags, 'T) this) ->
        fun (x9979 : [ `L_s62_fulfilled ]) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic Obj.magic x9978) "status"
            (match x9979 with
             | `L_s62_fulfilled -> Ojs.string_to_js "fulfilled")
    let (get_value : ('tags, 'T) this -> 'T) =
      fun (x9982 : ('tags, 'T) this) ->
        Obj.magic
          (Ojs.get_prop_ascii (this_to_js Obj.magic Obj.magic x9982) "value")
    let (set_value : ('tags, 'T) this -> 'T -> unit) =
      fun (x9985 : ('tags, 'T) this) ->
        fun (x9986 : 'T) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic Obj.magic x9985) "value"
            (Obj.magic x9986)
    let (create : status:[ `L_s62_fulfilled ] -> value:'T -> unit -> 'T t) =
      fun ~status:(x9989 : [ `L_s62_fulfilled ]) ->
        fun ~value:(x9990 : 'T) ->
          fun () ->
            let x9991 = Ojs.empty_obj () in
            Ojs.set_prop_ascii x9991 "status"
              (match x9989 with
               | `L_s62_fulfilled -> Ojs.string_to_js "fulfilled");
            Ojs.set_prop_ascii x9991 "value" (Obj.magic x9990);
            t_of_js Obj.magic x9991
    let cast_from = Obj.magic
  end
module PromiseSettledResult =
  struct
    type 'T t =
      [ `U_s62_fulfilled of 'T PromiseFulfilledResult.t 
      | `U_s113_rejected of PromiseRejectedResult.t ]
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun (type __T) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x9997 : Ojs.t) ->
            let x9998 = x9997 in
            match Ojs.string_of_js (Ojs.get_prop_ascii x9998 "status") with
            | "fulfilled" ->
                `U_s62_fulfilled
                  (PromiseFulfilledResult.t_of_js __T_of_js x9998)
            | "rejected" ->
                `U_s113_rejected (PromiseRejectedResult.t_of_js x9998)
            | _ -> assert false
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t =
      fun (type __T) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun
            (x9993 :
              [ `U_s62_fulfilled of __T PromiseFulfilledResult.t 
              | `U_s113_rejected of PromiseRejectedResult.t ])
            ->
            match x9993 with
            | `U_s62_fulfilled x9994 ->
                PromiseFulfilledResult.t_to_js __T_to_js x9994
            | `U_s113_rejected x9996 -> PromiseRejectedResult.t_to_js x9996
  end
module Awaited =
  struct
    type 'T t = any
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun (type __T) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x10001 : Ojs.t) -> any_of_js x10001
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t =
      fun (type __T) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x10000 : any) -> any_to_js x10000
  end
module rec
  Promise:sig
            type 'T t = [ `Promise of 'T ] intf
            [@@@js.stop ]
            type 'T tags = [ `Promise of 'T ]
            [@@@js.start ]
            [@@@js.implem type 'T tags = [ `Promise of 'T ]]
            type ('tags, 'T) this =
              'tags intf constraint 'tags = [> `Promise of 'T ]
            val t_to_js : ('T -> Ojs.t) -> 'T t -> Ojs.t
            val t_of_js : (Ojs.t -> 'T) -> Ojs.t -> 'T t
            val finally :
              ('tags, 'T) this ->
                ?onfinally:[ `Null  | `Undefined of undefined 
                           | `U1 of unit -> unit ]
                  -> unit -> 'T t
            val then_ :
              ('tags, 'T) this ->
                ?onfulfilled:[ `Null  | `Undefined of undefined 
                             | `U1 of
                                 'T ->
                                   [ `U1 of 'TResult1 
                                   | `U2 of 'TResult1 PromiseLike.t ]
                                 ]
                  ->
                  ?onrejected:[ `Null  | `Undefined of undefined 
                              | `U1 of
                                  any ->
                                    [ `U1 of 'TResult2 
                                    | `U2 of 'TResult2 PromiseLike.t ]
                                  ]
                    -> unit -> ('TResult1, 'TResult2) union2 t
            val catch :
              ('tags, 'T) this ->
                ?onrejected:[ `Null  | `Undefined of undefined 
                            | `U1 of
                                any ->
                                  [ `U1 of 'TResult 
                                  | `U2 of 'TResult PromiseLike.t ]
                                ]
                  -> unit -> ('T, 'TResult) union2 t
            val allSettled : 'T -> any t
            val allSettled' :
              [ `U1 of 'T  | `U2 of 'T PromiseLike.t ] Iterable.t ->
                'T Awaited.t PromiseSettledResult.t list t
            val withResolvers : unit -> 'T PromiseWithResolvers.t
            val any : 'T -> any Awaited.t t
            val any' :
              [ `U1 of 'T  | `U2 of 'T PromiseLike.t ] Iterable.t ->
                'T Awaited.t t
            val prototype : unit -> any t
            val create :
              (resolve:([ `U1 of 'T  | `U2 of 'T PromiseLike.t ] -> unit) ->
                 reject:(?reason:any -> unit -> unit) -> unit)
                -> 'T t
            val all : 'T -> any t
            val race : 'T -> any Awaited.t t
            val reject : ?reason:any -> unit -> 'T t
            val resolve : unit -> unit t
            val resolve' : 'T -> 'T Awaited.t t
            val resolve'' :
              [ `U1 of 'T  | `U2 of 'T PromiseLike.t ] -> 'T Awaited.t t
            val all' :
              [ `U1 of 'T  | `U2 of 'T PromiseLike.t ] Iterable.t ->
                'T Awaited.t list t
            val race' :
              [ `U1 of 'T  | `U2 of 'T PromiseLike.t ] Iterable.t ->
                'T Awaited.t t
            val cast_from : ('tags, 'T) this -> 'T t
          end =
  struct
    type 'T t = [ `Promise of 'T ] intf
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun _T -> Obj.magic
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun _T -> Obj.magic
    type 'T tags = [ `Promise of 'T ]
    type ('tags, 'T) this = 'tags intf constraint 'tags = [> `Promise of 'T ]
    let rec this_of_js :
      'tags 'T .
        (Ojs.t -> 'tags) -> (Ojs.t -> 'T) -> Ojs.t -> ('tags, 'T) this
      =
      fun (type __tags) ->
        fun (type __T) ->
          fun (__tags_of_js : Ojs.t -> __tags) ->
            fun (__T_of_js : Ojs.t -> __T) ->
              fun (x10004 : Ojs.t) -> intf_of_js __tags_of_js x10004
    and this_to_js :
      'tags 'T .
        ('tags -> Ojs.t) -> ('T -> Ojs.t) -> ('tags, 'T) this -> Ojs.t
      =
      fun (type __tags) ->
        fun (type __T) ->
          fun (__tags_to_js : __tags -> Ojs.t) ->
            fun (__T_to_js : __T -> Ojs.t) ->
              fun (x10002 : __tags intf) -> intf_to_js __tags_to_js x10002
    let (finally :
      ('tags, 'T) this ->
        ?onfinally:[ `Null  | `Undefined of undefined 
                   | `U1 of unit -> unit ]
          -> unit -> 'T t)
      =
      fun (x10011 : ('tags, 'T) this) ->
        fun
          ?onfinally:(x10006 :
                       [ `Null  | `Undefined of undefined 
                       | `U1 of unit -> unit ] option)
          ->
          fun () ->
            t_of_js Obj.magic
              (let x10014 = this_to_js Obj.magic Obj.magic x10011 in
               Ojs.call (Ojs.get_prop_ascii x10014 "finally") "apply"
                 [|x10014;((let x10007 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x10006 with
                             | Some x10008 ->
                                 ignore
                                   (Ojs.call x10007 "push"
                                      [|((match x10008 with
                                          | `Null -> Ojs.null
                                          | `Undefined x10009 ->
                                              undefined_to_js x10009
                                          | `U1 x10010 ->
                                              Ojs.fun_to_js 1
                                                (fun _ -> x10010 ())))|])
                             | None -> ());
                            x10007))|])
    let (then_ :
      ('tags, 'T) this ->
        ?onfulfilled:[ `Null  | `Undefined of undefined 
                     | `U1 of
                         'T ->
                           [ `U1 of 'TResult1 
                           | `U2 of 'TResult1 PromiseLike.t ]
                         ]
          ->
          ?onrejected:[ `Null  | `Undefined of undefined 
                      | `U1 of
                          any ->
                            [ `U1 of 'TResult2 
                            | `U2 of 'TResult2 PromiseLike.t ]
                          ]
            -> unit -> ('TResult1, 'TResult2) union2 t)
      =
      fun (x10033 : ('tags, 'T) this) ->
        fun
          ?onfulfilled:(x10016 :
                         [ `Null  | `Undefined of undefined 
                         | `U1 of
                             'T ->
                               [ `U1 of 'TResult1 
                               | `U2 of 'TResult1 PromiseLike.t ]
                             ]
                           option)
          ->
          fun
            ?onrejected:(x10017 :
                          [ `Null  | `Undefined of undefined 
                          | `U1 of
                              any ->
                                [ `U1 of 'TResult2 
                                | `U2 of 'TResult2 PromiseLike.t ]
                              ]
                            option)
            ->
            fun () ->
              t_of_js
                (fun (x10037 : Ojs.t) ->
                   union2_of_js Obj.magic Obj.magic x10037)
                (let x10036 = this_to_js Obj.magic Obj.magic x10033 in
                 Ojs.call (Ojs.get_prop_ascii x10036 "then") "apply"
                   [|x10036;((let x10018 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              (match x10016 with
                               | Some x10026 ->
                                   ignore
                                     (Ojs.call x10018 "push"
                                        [|((match x10026 with
                                            | `Null -> Ojs.null
                                            | `Undefined x10027 ->
                                                undefined_to_js x10027
                                            | `U1 x10028 ->
                                                Ojs.fun_to_js 1
                                                  (fun (x10029 : Ojs.t) ->
                                                     match x10028
                                                             (Obj.magic
                                                                x10029)
                                                     with
                                                     | `U1 x10030 ->
                                                         Obj.magic x10030
                                                     | `U2 x10031 ->
                                                         PromiseLike.t_to_js
                                                           Obj.magic x10031)))|])
                               | None -> ());
                              (match x10017 with
                               | Some x10019 ->
                                   ignore
                                     (Ojs.call x10018 "push"
                                        [|((match x10019 with
                                            | `Null -> Ojs.null
                                            | `Undefined x10020 ->
                                                undefined_to_js x10020
                                            | `U1 x10021 ->
                                                Ojs.fun_to_js 1
                                                  (fun (x10022 : Ojs.t) ->
                                                     match x10021
                                                             (any_of_js
                                                                x10022)
                                                     with
                                                     | `U1 x10023 ->
                                                         Obj.magic x10023
                                                     | `U2 x10024 ->
                                                         PromiseLike.t_to_js
                                                           Obj.magic x10024)))|])
                               | None -> ());
                              x10018))|])
    let (catch :
      ('tags, 'T) this ->
        ?onrejected:[ `Null  | `Undefined of undefined 
                    | `U1 of
                        any ->
                          [ `U1 of 'TResult 
                          | `U2 of 'TResult PromiseLike.t ]
                        ]
          -> unit -> ('T, 'TResult) union2 t)
      =
      fun (x10049 : ('tags, 'T) this) ->
        fun
          ?onrejected:(x10040 :
                        [ `Null  | `Undefined of undefined 
                        | `U1 of
                            any ->
                              [ `U1 of 'TResult 
                              | `U2 of 'TResult PromiseLike.t ]
                            ]
                          option)
          ->
          fun () ->
            t_of_js
              (fun (x10053 : Ojs.t) ->
                 union2_of_js Obj.magic Obj.magic x10053)
              (let x10052 = this_to_js Obj.magic Obj.magic x10049 in
               Ojs.call (Ojs.get_prop_ascii x10052 "catch") "apply"
                 [|x10052;((let x10041 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x10040 with
                             | Some x10042 ->
                                 ignore
                                   (Ojs.call x10041 "push"
                                      [|((match x10042 with
                                          | `Null -> Ojs.null
                                          | `Undefined x10043 ->
                                              undefined_to_js x10043
                                          | `U1 x10044 ->
                                              Ojs.fun_to_js 1
                                                (fun (x10045 : Ojs.t) ->
                                                   match x10044
                                                           (any_of_js x10045)
                                                   with
                                                   | `U1 x10046 ->
                                                       Obj.magic x10046
                                                   | `U2 x10047 ->
                                                       PromiseLike.t_to_js
                                                         Obj.magic x10047)))|])
                             | None -> ());
                            x10041))|])
    let (allSettled : 'T -> any t) =
      fun (x10056 : 'T) ->
        t_of_js any_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Promise") "allSettled"
             [|(Obj.magic x10056)|])
    let (allSettled' :
      [ `U1 of 'T  | `U2 of 'T PromiseLike.t ] Iterable.t ->
        'T Awaited.t PromiseSettledResult.t list t)
      =
      fun (x10058 : [ `U1 of 'T  | `U2 of 'T PromiseLike.t ] Iterable.t) ->
        t_of_js
          (fun (x10063 : Ojs.t) ->
             Ojs.list_of_js
               (fun (x10064 : Ojs.t) ->
                  PromiseSettledResult.t_of_js
                    (fun (x10065 : Ojs.t) -> Awaited.t_of_js Obj.magic x10065)
                    x10064) x10063)
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Promise") "allSettled"
             [|(Iterable.t_to_js
                  (fun (x10059 : [ `U1 of 'T  | `U2 of 'T PromiseLike.t ]) ->
                     match x10059 with
                     | `U1 x10060 -> Obj.magic x10060
                     | `U2 x10061 -> PromiseLike.t_to_js Obj.magic x10061)
                  x10058)|])
    let (withResolvers : unit -> 'T PromiseWithResolvers.t) =
      fun () ->
        PromiseWithResolvers.t_of_js Obj.magic
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Promise") "withResolvers"
             [||])
    let (any : 'T -> any Awaited.t t) =
      fun (x10068 : 'T) ->
        t_of_js (fun (x10069 : Ojs.t) -> Awaited.t_of_js any_of_js x10069)
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Promise") "any"
             [|(Obj.magic x10068)|])
    let (any' :
      [ `U1 of 'T  | `U2 of 'T PromiseLike.t ] Iterable.t -> 'T Awaited.t t)
      =
      fun (x10071 : [ `U1 of 'T  | `U2 of 'T PromiseLike.t ] Iterable.t) ->
        t_of_js (fun (x10076 : Ojs.t) -> Awaited.t_of_js Obj.magic x10076)
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Promise") "any"
             [|(Iterable.t_to_js
                  (fun (x10072 : [ `U1 of 'T  | `U2 of 'T PromiseLike.t ]) ->
                     match x10072 with
                     | `U1 x10073 -> Obj.magic x10073
                     | `U2 x10074 -> PromiseLike.t_to_js Obj.magic x10074)
                  x10071)|])
    let (prototype : unit -> any t) =
      fun () ->
        t_of_js any_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Promise")
             "prototype")
    let (create :
      (resolve:([ `U1 of 'T  | `U2 of 'T PromiseLike.t ] -> unit) ->
         reject:(?reason:any -> unit -> unit) -> unit)
        -> 'T t)
      =
      fun
        (x10079 :
          resolve:([ `U1 of 'T  | `U2 of 'T PromiseLike.t ] -> unit) ->
            reject:(?reason:any -> unit -> unit) -> unit)
        ->
        t_of_js Obj.magic
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Promise")
             [|(Ojs.fun_to_js 2
                  (fun (x10080 : Ojs.t) ->
                     fun (x10085 : Ojs.t) ->
                       x10079
                         ~resolve:(fun
                                     (x10081 :
                                       [ `U1 of 'T 
                                       | `U2 of 'T PromiseLike.t ])
                                     ->
                                     ignore
                                       (Ojs.apply x10080
                                          [|((match x10081 with
                                              | `U1 x10082 ->
                                                  Obj.magic x10082
                                              | `U2 x10083 ->
                                                  PromiseLike.t_to_js
                                                    Obj.magic x10083))|]))
                         ~reject:(fun ?reason:(x10086 : any option) ->
                                    fun () ->
                                      ignore
                                        (Ojs.call x10085 "apply"
                                           [|Ojs.null;((let x10087 =
                                                          Ojs.new_obj
                                                            (Ojs.get_prop_ascii
                                                               Ojs.global
                                                               "Array") 
                                                            [||] in
                                                        (match x10086 with
                                                         | Some x10088 ->
                                                             ignore
                                                               (Ojs.call
                                                                  x10087
                                                                  "push"
                                                                  [|(
                                                                    any_to_js
                                                                    x10088)|])
                                                         | None -> ());
                                                        x10087))|]))))|])
    let (all : 'T -> any t) =
      fun (x10090 : 'T) ->
        t_of_js any_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Promise") "all"
             [|(Obj.magic x10090)|])
    let (race : 'T -> any Awaited.t t) =
      fun (x10092 : 'T) ->
        t_of_js (fun (x10093 : Ojs.t) -> Awaited.t_of_js any_of_js x10093)
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Promise") "race"
             [|(Obj.magic x10092)|])
    let (reject : ?reason:any -> unit -> 'T t) =
      fun ?reason:(x10095 : any option) ->
        fun () ->
          t_of_js Obj.magic
            (let x10098 = Ojs.get_prop_ascii Ojs.global "Promise" in
             Ojs.call (Ojs.get_prop_ascii x10098 "reject") "apply"
               [|x10098;((let x10096 =
                            Ojs.new_obj
                              (Ojs.get_prop_ascii Ojs.global "Array") 
                              [||] in
                          (match x10095 with
                           | Some x10097 ->
                               ignore
                                 (Ojs.call x10096 "push"
                                    [|(any_to_js x10097)|])
                           | None -> ());
                          x10096))|])
    let (resolve : unit -> unit t) =
      fun () ->
        t_of_js Ojs.unit_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Promise") "resolve" [||])
    let (resolve' : 'T -> 'T Awaited.t t) =
      fun (x10101 : 'T) ->
        t_of_js (fun (x10102 : Ojs.t) -> Awaited.t_of_js Obj.magic x10102)
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Promise") "resolve"
             [|(Obj.magic x10101)|])
    let (resolve'' :
      [ `U1 of 'T  | `U2 of 'T PromiseLike.t ] -> 'T Awaited.t t) =
      fun (x10104 : [ `U1 of 'T  | `U2 of 'T PromiseLike.t ]) ->
        t_of_js (fun (x10108 : Ojs.t) -> Awaited.t_of_js Obj.magic x10108)
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Promise") "resolve"
             [|((match x10104 with
                 | `U1 x10105 -> Obj.magic x10105
                 | `U2 x10106 -> PromiseLike.t_to_js Obj.magic x10106))|])
    let (all' :
      [ `U1 of 'T  | `U2 of 'T PromiseLike.t ] Iterable.t ->
        'T Awaited.t list t)
      =
      fun (x10110 : [ `U1 of 'T  | `U2 of 'T PromiseLike.t ] Iterable.t) ->
        t_of_js
          (fun (x10115 : Ojs.t) ->
             Ojs.list_of_js
               (fun (x10116 : Ojs.t) -> Awaited.t_of_js Obj.magic x10116)
               x10115)
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Promise") "all"
             [|(Iterable.t_to_js
                  (fun (x10111 : [ `U1 of 'T  | `U2 of 'T PromiseLike.t ]) ->
                     match x10111 with
                     | `U1 x10112 -> Obj.magic x10112
                     | `U2 x10113 -> PromiseLike.t_to_js Obj.magic x10113)
                  x10110)|])
    let (race' :
      [ `U1 of 'T  | `U2 of 'T PromiseLike.t ] Iterable.t -> 'T Awaited.t t)
      =
      fun (x10118 : [ `U1 of 'T  | `U2 of 'T PromiseLike.t ] Iterable.t) ->
        t_of_js (fun (x10123 : Ojs.t) -> Awaited.t_of_js Obj.magic x10123)
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Promise") "race"
             [|(Iterable.t_to_js
                  (fun (x10119 : [ `U1 of 'T  | `U2 of 'T PromiseLike.t ]) ->
                     match x10119 with
                     | `U1 x10120 -> Obj.magic x10120
                     | `U2 x10121 -> PromiseLike.t_to_js Obj.magic x10121)
                  x10118)|])
    let cast_from = Obj.magic
  end
 and
  PromiseWithResolvers:sig
                         type 'T t = [ `PromiseWithResolvers of 'T ] intf
                         [@@@js.stop ]
                         type 'T tags = [ `PromiseWithResolvers of 'T ]
                         [@@@js.start ]
                         [@@@js.implem
                           type 'T tags = [ `PromiseWithResolvers of 'T ]]
                         type ('tags, 'T) this =
                           'tags intf constraint 'tags =
                                       [> `PromiseWithResolvers of 'T ]
                         val t_to_js : ('T -> Ojs.t) -> 'T t -> Ojs.t
                         val t_of_js : (Ojs.t -> 'T) -> Ojs.t -> 'T t
                         val get_promise : ('tags, 'T) this -> 'T Promise.t
                         val set_promise :
                           ('tags, 'T) this -> 'T Promise.t -> unit
                         val resolve :
                           ('tags, 'T) this ->
                             value:[ `U1 of 'T  | `U2 of 'T PromiseLike.t ]
                               -> unit
                         val reject :
                           ('tags, 'T) this -> ?reason:any -> unit -> unit
                         val create :
                           promise:'T Promise.t ->
                             resolve:(('T, 'T PromiseLike.t) union2 -> unit)
                               ->
                               reject:(?reason:any -> unit -> unit) ->
                                 unit -> 'T t
                         val cast_from : ('tags, 'T) this -> 'T t
                       end =
  struct
    type 'T t = [ `PromiseWithResolvers of 'T ] intf
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun _T -> Obj.magic
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun _T -> Obj.magic
    type 'T tags = [ `PromiseWithResolvers of 'T ]
    type ('tags, 'T) this =
      'tags intf constraint 'tags = [> `PromiseWithResolvers of 'T ]
    let rec this_of_js :
      'tags 'T .
        (Ojs.t -> 'tags) -> (Ojs.t -> 'T) -> Ojs.t -> ('tags, 'T) this
      =
      fun (type __tags) ->
        fun (type __T) ->
          fun (__tags_of_js : Ojs.t -> __tags) ->
            fun (__T_of_js : Ojs.t -> __T) ->
              fun (x10127 : Ojs.t) -> intf_of_js __tags_of_js x10127
    and this_to_js :
      'tags 'T .
        ('tags -> Ojs.t) -> ('T -> Ojs.t) -> ('tags, 'T) this -> Ojs.t
      =
      fun (type __tags) ->
        fun (type __T) ->
          fun (__tags_to_js : __tags -> Ojs.t) ->
            fun (__T_to_js : __T -> Ojs.t) ->
              fun (x10125 : __tags intf) -> intf_to_js __tags_to_js x10125
    let (get_promise : ('tags, 'T) this -> 'T Promise.t) =
      fun (x10129 : ('tags, 'T) this) ->
        Promise.t_of_js Obj.magic
          (Ojs.get_prop_ascii (this_to_js Obj.magic Obj.magic x10129)
             "promise")
    let (set_promise : ('tags, 'T) this -> 'T Promise.t -> unit) =
      fun (x10133 : ('tags, 'T) this) ->
        fun (x10134 : 'T Promise.t) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic Obj.magic x10133)
            "promise" (Promise.t_to_js Obj.magic x10134)
    let (resolve :
      ('tags, 'T) this ->
        value:[ `U1 of 'T  | `U2 of 'T PromiseLike.t ] -> unit)
      =
      fun (x10142 : ('tags, 'T) this) ->
        fun ~value:(x10138 : [ `U1 of 'T  | `U2 of 'T PromiseLike.t ]) ->
          ignore
            (Ojs.call (this_to_js Obj.magic Obj.magic x10142) "resolve"
               [|((match x10138 with
                   | `U1 x10139 -> Obj.magic x10139
                   | `U2 x10140 -> PromiseLike.t_to_js Obj.magic x10140))|])
    let (reject : ('tags, 'T) this -> ?reason:any -> unit -> unit) =
      fun (x10148 : ('tags, 'T) this) ->
        fun ?reason:(x10145 : any option) ->
          fun () ->
            ignore
              (let x10151 = this_to_js Obj.magic Obj.magic x10148 in
               Ojs.call (Ojs.get_prop_ascii x10151 "reject") "apply"
                 [|x10151;((let x10146 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x10145 with
                             | Some x10147 ->
                                 ignore
                                   (Ojs.call x10146 "push"
                                      [|(any_to_js x10147)|])
                             | None -> ());
                            x10146))|])
    let (create :
      promise:'T Promise.t ->
        resolve:(('T, 'T PromiseLike.t) union2 -> unit) ->
          reject:(?reason:any -> unit -> unit) -> unit -> 'T t)
      =
      fun ~promise:(x10152 : 'T Promise.t) ->
        fun ~resolve:(x10153 : ('T, 'T PromiseLike.t) union2 -> unit) ->
          fun ~reject:(x10154 : ?reason:any -> unit -> unit) ->
            fun () ->
              let x10155 = Ojs.empty_obj () in
              Ojs.set_prop_ascii x10155 "promise"
                (Promise.t_to_js Obj.magic x10152);
              Ojs.set_prop_ascii x10155 "resolve"
                (Ojs.fun_to_js 1
                   (fun (x10159 : Ojs.t) ->
                      x10153
                        (union2_of_js Obj.magic
                           (fun (x10161 : Ojs.t) ->
                              PromiseLike.t_of_js Obj.magic x10161) x10159)));
              Ojs.set_prop_ascii x10155 "reject"
                (Ojs.fun_to_js 1
                   (fun (x10157 : Ojs.t) ->
                      x10154 ?reason:(Ojs.option_of_js any_of_js x10157) ()));
              t_of_js Obj.magic x10155
    let cast_from = Obj.magic
  end
module Atomics =
  struct
    module AnonymousInterface2 =
      struct
        type t = Ojs.t
        let rec t_of_js : Ojs.t -> t = fun (x10165 : Ojs.t) -> x10165
        and t_to_js : t -> Ojs.t = fun (x10164 : Ojs.t) -> x10164
        let (get_async : t -> [ `L_b_true ]) =
          fun (x10166 : t) ->
            let x10167 = Ojs.get_prop_ascii (t_to_js x10166) "async" in
            match Ojs.bool_of_js x10167 with
            | true -> `L_b_true
            | _ -> assert false
        let (set_async : t -> [ `L_b_true ] -> unit) =
          fun (x10168 : t) ->
            fun (x10169 : [ `L_b_true ]) ->
              Ojs.set_prop_ascii (t_to_js x10168) "async"
                (match x10169 with | `L_b_true -> Ojs.bool_to_js true)
        let (get_value : t -> [ `L_s133_timed_out  | `L_s99_ok ] Promise.t) =
          fun (x10170 : t) ->
            Promise.t_of_js
              (fun (x10171 : Ojs.t) ->
                 let x10172 = x10171 in
                 match Ojs.string_of_js x10172 with
                 | "timed-out" -> `L_s133_timed_out
                 | "ok" -> `L_s99_ok
                 | _ -> assert false)
              (Ojs.get_prop_ascii (t_to_js x10170) "value")
        let (set_value :
          t ->
            [ `U1 of [ `L_s99_ok ]  | `U2 of [ `L_s133_timed_out ] ]
              Promise.t -> unit)
          =
          fun (x10173 : t) ->
            fun
              (x10174 :
                [ `U1 of [ `L_s99_ok ]  | `U2 of [ `L_s133_timed_out ] ]
                  Promise.t)
              ->
              Ojs.set_prop_ascii (t_to_js x10173) "value"
                (Promise.t_to_js
                   (fun
                      (x10175 :
                        [ `U1 of [ `L_s99_ok ] 
                        | `U2 of [ `L_s133_timed_out ] ])
                      ->
                      match x10175 with
                      | `U1 x10176 ->
                          (match x10176 with
                           | `L_s99_ok -> Ojs.string_to_js "ok")
                      | `U2 x10177 ->
                          (match x10177 with
                           | `L_s133_timed_out ->
                               Ojs.string_to_js "timed-out")) x10174)
        let (create :
          async:[ `L_b_true ] ->
            value:[ `L_s133_timed_out  | `L_s99_ok ] Promise.t -> unit -> t)
          =
          fun ~async:(x10178 : [ `L_b_true ]) ->
            fun
              ~value:(x10179 : [ `L_s133_timed_out  | `L_s99_ok ] Promise.t)
              ->
              fun () ->
                let x10180 = Ojs.empty_obj () in
                Ojs.set_prop_ascii x10180 "async"
                  (match x10178 with | `L_b_true -> Ojs.bool_to_js true);
                Ojs.set_prop_ascii x10180 "value"
                  (Promise.t_to_js
                     (fun (x10181 : [ `L_s133_timed_out  | `L_s99_ok ]) ->
                        match x10181 with
                        | `L_s133_timed_out -> Ojs.string_to_js "timed-out"
                        | `L_s99_ok -> Ojs.string_to_js "ok") x10179);
                t_of_js x10180
      end
    module AnonymousInterface1 =
      struct
        type t = Ojs.t
        let rec t_of_js : Ojs.t -> t = fun (x10183 : Ojs.t) -> x10183
        and t_to_js : t -> Ojs.t = fun (x10182 : Ojs.t) -> x10182
        let (get_async : t -> [ `L_b_false ]) =
          fun (x10184 : t) ->
            let x10185 = Ojs.get_prop_ascii (t_to_js x10184) "async" in
            match Ojs.bool_of_js x10185 with
            | false -> `L_b_false
            | _ -> assert false
        let (set_async : t -> [ `L_b_false ] -> unit) =
          fun (x10186 : t) ->
            fun (x10187 : [ `L_b_false ]) ->
              Ojs.set_prop_ascii (t_to_js x10186) "async"
                (match x10187 with | `L_b_false -> Ojs.bool_to_js false)
        let (get_value : t -> [ `L_s133_timed_out  | `L_s95_not_equal ]) =
          fun (x10188 : t) ->
            let x10189 = Ojs.get_prop_ascii (t_to_js x10188) "value" in
            match Ojs.string_of_js x10189 with
            | "timed-out" -> `L_s133_timed_out
            | "not-equal" -> `L_s95_not_equal
            | _ -> assert false
        let (set_value :
          t ->
            [ `U1 of [ `L_s95_not_equal ]  | `U2 of [ `L_s133_timed_out ] ]
              -> unit)
          =
          fun (x10190 : t) ->
            fun
              (x10191 :
                [ `U1 of [ `L_s95_not_equal ] 
                | `U2 of [ `L_s133_timed_out ] ])
              ->
              Ojs.set_prop_ascii (t_to_js x10190) "value"
                (match x10191 with
                 | `U1 x10192 ->
                     (match x10192 with
                      | `L_s95_not_equal -> Ojs.string_to_js "not-equal")
                 | `U2 x10193 ->
                     (match x10193 with
                      | `L_s133_timed_out -> Ojs.string_to_js "timed-out"))
        let (create :
          async:[ `L_b_false ] ->
            value:[ `L_s133_timed_out  | `L_s95_not_equal ] -> unit -> t)
          =
          fun ~async:(x10194 : [ `L_b_false ]) ->
            fun ~value:(x10195 : [ `L_s133_timed_out  | `L_s95_not_equal ])
              ->
              fun () ->
                let x10196 = Ojs.empty_obj () in
                Ojs.set_prop_ascii x10196 "async"
                  (match x10194 with | `L_b_false -> Ojs.bool_to_js false);
                Ojs.set_prop_ascii x10196 "value"
                  (match x10195 with
                   | `L_s133_timed_out -> Ojs.string_to_js "timed-out"
                   | `L_s95_not_equal -> Ojs.string_to_js "not-equal");
                t_of_js x10196
      end
    let (waitAsync :
      typedArray:Int32Array.t ->
        index:float ->
          value:float ->
            ?timeout:float ->
              unit ->
                [ `U_b_false of AnonymousInterface1.t 
                | `U_b_true of AnonymousInterface2.t ])
      =
      fun ~typedArray:(x10197 : Int32Array.t) ->
        fun ~index:(x10198 : float) ->
          fun ~value:(x10199 : float) ->
            fun ?timeout:(x10200 : float option) ->
              fun () ->
                let x10204 =
                  let x10203 = Ojs.get_prop_ascii Ojs.global "Atomics" in
                  Ojs.call (Ojs.get_prop_ascii x10203 "waitAsync") "apply"
                    [|x10203;((let x10201 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x10201 "push"
                                    [|(Int32Array.t_to_js x10197)|]);
                               ignore
                                 (Ojs.call x10201 "push"
                                    [|(Ojs.float_to_js x10198)|]);
                               ignore
                                 (Ojs.call x10201 "push"
                                    [|(Ojs.float_to_js x10199)|]);
                               (match x10200 with
                                | Some x10202 ->
                                    ignore
                                      (Ojs.call x10201 "push"
                                         [|(Ojs.float_to_js x10202)|])
                                | None -> ());
                               x10201))|] in
                match Ojs.bool_of_js (Ojs.get_prop_ascii x10204 "async") with
                | false -> `U_b_false (AnonymousInterface1.t_of_js x10204)
                | true -> `U_b_true (AnonymousInterface2.t_of_js x10204)
    let (waitAsync' :
      typedArray:BigInt64Array.t ->
        index:float ->
          value:bigint ->
            ?timeout:float ->
              unit ->
                [ `U_b_false of AnonymousInterface1.t 
                | `U_b_true of AnonymousInterface2.t ])
      =
      fun ~typedArray:(x10205 : BigInt64Array.t) ->
        fun ~index:(x10206 : float) ->
          fun ~value:(x10207 : bigint) ->
            fun ?timeout:(x10208 : float option) ->
              fun () ->
                let x10212 =
                  let x10211 = Ojs.get_prop_ascii Ojs.global "Atomics" in
                  Ojs.call (Ojs.get_prop_ascii x10211 "waitAsync") "apply"
                    [|x10211;((let x10209 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x10209 "push"
                                    [|(BigInt64Array.t_to_js x10205)|]);
                               ignore
                                 (Ojs.call x10209 "push"
                                    [|(Ojs.float_to_js x10206)|]);
                               ignore
                                 (Ojs.call x10209 "push"
                                    [|(bigint_to_js x10207)|]);
                               (match x10208 with
                                | Some x10210 ->
                                    ignore
                                      (Ojs.call x10209 "push"
                                         [|(Ojs.float_to_js x10210)|])
                                | None -> ());
                               x10209))|] in
                match Ojs.bool_of_js (Ojs.get_prop_ascii x10212 "async") with
                | false -> `U_b_false (AnonymousInterface1.t_of_js x10212)
                | true -> `U_b_true (AnonymousInterface2.t_of_js x10212)
    let (add :
      typedArray:[ `U1 of BigInt64Array.t  | `U2 of BigUint64Array.t ] ->
        index:float -> value:bigint -> bigint)
      =
      fun
        ~typedArray:(x10213 :
                      [ `U1 of BigInt64Array.t  | `U2 of BigUint64Array.t ])
        ->
        fun ~index:(x10216 : float) ->
          fun ~value:(x10217 : bigint) ->
            bigint_of_js
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "Atomics") "add"
                 [|((match x10213 with
                     | `U1 x10214 -> BigInt64Array.t_to_js x10214
                     | `U2 x10215 -> BigUint64Array.t_to_js x10215));(
                   Ojs.float_to_js x10216);(bigint_to_js x10217)|])
    let (and_ :
      typedArray:[ `U1 of BigInt64Array.t  | `U2 of BigUint64Array.t ] ->
        index:float -> value:bigint -> bigint)
      =
      fun
        ~typedArray:(x10218 :
                      [ `U1 of BigInt64Array.t  | `U2 of BigUint64Array.t ])
        ->
        fun ~index:(x10221 : float) ->
          fun ~value:(x10222 : bigint) ->
            bigint_of_js
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "Atomics") "and"
                 [|((match x10218 with
                     | `U1 x10219 -> BigInt64Array.t_to_js x10219
                     | `U2 x10220 -> BigUint64Array.t_to_js x10220));(
                   Ojs.float_to_js x10221);(bigint_to_js x10222)|])
    let (compareExchange :
      typedArray:[ `U1 of BigInt64Array.t  | `U2 of BigUint64Array.t ] ->
        index:float ->
          expectedValue:bigint -> replacementValue:bigint -> bigint)
      =
      fun
        ~typedArray:(x10223 :
                      [ `U1 of BigInt64Array.t  | `U2 of BigUint64Array.t ])
        ->
        fun ~index:(x10226 : float) ->
          fun ~expectedValue:(x10227 : bigint) ->
            fun ~replacementValue:(x10228 : bigint) ->
              bigint_of_js
                (Ojs.call (Ojs.get_prop_ascii Ojs.global "Atomics")
                   "compareExchange"
                   [|((match x10223 with
                       | `U1 x10224 -> BigInt64Array.t_to_js x10224
                       | `U2 x10225 -> BigUint64Array.t_to_js x10225));(
                     Ojs.float_to_js x10226);(bigint_to_js x10227);(bigint_to_js
                                                                    x10228)|])
    let (exchange :
      typedArray:[ `U1 of BigInt64Array.t  | `U2 of BigUint64Array.t ] ->
        index:float -> value:bigint -> bigint)
      =
      fun
        ~typedArray:(x10229 :
                      [ `U1 of BigInt64Array.t  | `U2 of BigUint64Array.t ])
        ->
        fun ~index:(x10232 : float) ->
          fun ~value:(x10233 : bigint) ->
            bigint_of_js
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "Atomics") "exchange"
                 [|((match x10229 with
                     | `U1 x10230 -> BigInt64Array.t_to_js x10230
                     | `U2 x10231 -> BigUint64Array.t_to_js x10231));(
                   Ojs.float_to_js x10232);(bigint_to_js x10233)|])
    let (load :
      typedArray:[ `U1 of BigInt64Array.t  | `U2 of BigUint64Array.t ] ->
        index:float -> bigint)
      =
      fun
        ~typedArray:(x10234 :
                      [ `U1 of BigInt64Array.t  | `U2 of BigUint64Array.t ])
        ->
        fun ~index:(x10237 : float) ->
          bigint_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "Atomics") "load"
               [|((match x10234 with
                   | `U1 x10235 -> BigInt64Array.t_to_js x10235
                   | `U2 x10236 -> BigUint64Array.t_to_js x10236));(Ojs.float_to_js
                                                                    x10237)|])
    let (or_ :
      typedArray:[ `U1 of BigInt64Array.t  | `U2 of BigUint64Array.t ] ->
        index:float -> value:bigint -> bigint)
      =
      fun
        ~typedArray:(x10238 :
                      [ `U1 of BigInt64Array.t  | `U2 of BigUint64Array.t ])
        ->
        fun ~index:(x10241 : float) ->
          fun ~value:(x10242 : bigint) ->
            bigint_of_js
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "Atomics") "or"
                 [|((match x10238 with
                     | `U1 x10239 -> BigInt64Array.t_to_js x10239
                     | `U2 x10240 -> BigUint64Array.t_to_js x10240));(
                   Ojs.float_to_js x10241);(bigint_to_js x10242)|])
    let (store :
      typedArray:[ `U1 of BigInt64Array.t  | `U2 of BigUint64Array.t ] ->
        index:float -> value:bigint -> bigint)
      =
      fun
        ~typedArray:(x10243 :
                      [ `U1 of BigInt64Array.t  | `U2 of BigUint64Array.t ])
        ->
        fun ~index:(x10246 : float) ->
          fun ~value:(x10247 : bigint) ->
            bigint_of_js
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "Atomics") "store"
                 [|((match x10243 with
                     | `U1 x10244 -> BigInt64Array.t_to_js x10244
                     | `U2 x10245 -> BigUint64Array.t_to_js x10245));(
                   Ojs.float_to_js x10246);(bigint_to_js x10247)|])
    let (sub :
      typedArray:[ `U1 of BigInt64Array.t  | `U2 of BigUint64Array.t ] ->
        index:float -> value:bigint -> bigint)
      =
      fun
        ~typedArray:(x10248 :
                      [ `U1 of BigInt64Array.t  | `U2 of BigUint64Array.t ])
        ->
        fun ~index:(x10251 : float) ->
          fun ~value:(x10252 : bigint) ->
            bigint_of_js
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "Atomics") "sub"
                 [|((match x10248 with
                     | `U1 x10249 -> BigInt64Array.t_to_js x10249
                     | `U2 x10250 -> BigUint64Array.t_to_js x10250));(
                   Ojs.float_to_js x10251);(bigint_to_js x10252)|])
    let (wait :
      typedArray:BigInt64Array.t ->
        index:float ->
          value:bigint ->
            ?timeout:float ->
              unit -> [ `L_s133_timed_out  | `L_s95_not_equal  | `L_s99_ok ])
      =
      fun ~typedArray:(x10253 : BigInt64Array.t) ->
        fun ~index:(x10254 : float) ->
          fun ~value:(x10255 : bigint) ->
            fun ?timeout:(x10256 : float option) ->
              fun () ->
                let x10260 =
                  let x10259 = Ojs.get_prop_ascii Ojs.global "Atomics" in
                  Ojs.call (Ojs.get_prop_ascii x10259 "wait") "apply"
                    [|x10259;((let x10257 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x10257 "push"
                                    [|(BigInt64Array.t_to_js x10253)|]);
                               ignore
                                 (Ojs.call x10257 "push"
                                    [|(Ojs.float_to_js x10254)|]);
                               ignore
                                 (Ojs.call x10257 "push"
                                    [|(bigint_to_js x10255)|]);
                               (match x10256 with
                                | Some x10258 ->
                                    ignore
                                      (Ojs.call x10257 "push"
                                         [|(Ojs.float_to_js x10258)|])
                                | None -> ());
                               x10257))|] in
                match Ojs.string_of_js x10260 with
                | "timed-out" -> `L_s133_timed_out
                | "not-equal" -> `L_s95_not_equal
                | "ok" -> `L_s99_ok
                | _ -> assert false
    let (notify :
      typedArray:BigInt64Array.t ->
        index:float -> ?count:float -> unit -> float)
      =
      fun ~typedArray:(x10261 : BigInt64Array.t) ->
        fun ~index:(x10262 : float) ->
          fun ?count:(x10263 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x10266 = Ojs.get_prop_ascii Ojs.global "Atomics" in
                 Ojs.call (Ojs.get_prop_ascii x10266 "notify") "apply"
                   [|x10266;((let x10264 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x10264 "push"
                                   [|(BigInt64Array.t_to_js x10261)|]);
                              ignore
                                (Ojs.call x10264 "push"
                                   [|(Ojs.float_to_js x10262)|]);
                              (match x10263 with
                               | Some x10265 ->
                                   ignore
                                     (Ojs.call x10264 "push"
                                        [|(Ojs.float_to_js x10265)|])
                               | None -> ());
                              x10264))|])
    let (xor :
      typedArray:[ `U1 of BigInt64Array.t  | `U2 of BigUint64Array.t ] ->
        index:float -> value:bigint -> bigint)
      =
      fun
        ~typedArray:(x10267 :
                      [ `U1 of BigInt64Array.t  | `U2 of BigUint64Array.t ])
        ->
        fun ~index:(x10270 : float) ->
          fun ~value:(x10271 : bigint) ->
            bigint_of_js
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "Atomics") "xor"
                 [|((match x10267 with
                     | `U1 x10268 -> BigInt64Array.t_to_js x10268
                     | `U2 x10269 -> BigUint64Array.t_to_js x10269));(
                   Ojs.float_to_js x10270);(bigint_to_js x10271)|])
    let (add' :
      typedArray:[ `U1 of Int8Array.t  | `U2 of Uint8Array.t 
                 | `U3 of Int16Array.t  | `U4 of Uint16Array.t 
                 | `U5 of Int32Array.t  | `U6 of Uint32Array.t ]
        -> index:float -> value:float -> float)
      =
      fun
        ~typedArray:(x10272 :
                      [ `U1 of Int8Array.t  | `U2 of Uint8Array.t 
                      | `U3 of Int16Array.t  | `U4 of Uint16Array.t 
                      | `U5 of Int32Array.t  | `U6 of Uint32Array.t ])
        ->
        fun ~index:(x10279 : float) ->
          fun ~value:(x10280 : float) ->
            Ojs.float_of_js
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "Atomics") "add"
                 [|((match x10272 with
                     | `U1 x10273 -> Int8Array.t_to_js x10273
                     | `U2 x10274 -> Uint8Array.t_to_js x10274
                     | `U3 x10275 -> Int16Array.t_to_js x10275
                     | `U4 x10276 -> Uint16Array.t_to_js x10276
                     | `U5 x10277 -> Int32Array.t_to_js x10277
                     | `U6 x10278 -> Uint32Array.t_to_js x10278));(Ojs.float_to_js
                                                                    x10279);(
                   Ojs.float_to_js x10280)|])
    let (and_' :
      typedArray:[ `U1 of Int8Array.t  | `U2 of Uint8Array.t 
                 | `U3 of Int16Array.t  | `U4 of Uint16Array.t 
                 | `U5 of Int32Array.t  | `U6 of Uint32Array.t ]
        -> index:float -> value:float -> float)
      =
      fun
        ~typedArray:(x10281 :
                      [ `U1 of Int8Array.t  | `U2 of Uint8Array.t 
                      | `U3 of Int16Array.t  | `U4 of Uint16Array.t 
                      | `U5 of Int32Array.t  | `U6 of Uint32Array.t ])
        ->
        fun ~index:(x10288 : float) ->
          fun ~value:(x10289 : float) ->
            Ojs.float_of_js
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "Atomics") "and"
                 [|((match x10281 with
                     | `U1 x10282 -> Int8Array.t_to_js x10282
                     | `U2 x10283 -> Uint8Array.t_to_js x10283
                     | `U3 x10284 -> Int16Array.t_to_js x10284
                     | `U4 x10285 -> Uint16Array.t_to_js x10285
                     | `U5 x10286 -> Int32Array.t_to_js x10286
                     | `U6 x10287 -> Uint32Array.t_to_js x10287));(Ojs.float_to_js
                                                                    x10288);(
                   Ojs.float_to_js x10289)|])
    let (compareExchange' :
      typedArray:[ `U1 of Int8Array.t  | `U2 of Uint8Array.t 
                 | `U3 of Int16Array.t  | `U4 of Uint16Array.t 
                 | `U5 of Int32Array.t  | `U6 of Uint32Array.t ]
        ->
        index:float -> expectedValue:float -> replacementValue:float -> float)
      =
      fun
        ~typedArray:(x10290 :
                      [ `U1 of Int8Array.t  | `U2 of Uint8Array.t 
                      | `U3 of Int16Array.t  | `U4 of Uint16Array.t 
                      | `U5 of Int32Array.t  | `U6 of Uint32Array.t ])
        ->
        fun ~index:(x10297 : float) ->
          fun ~expectedValue:(x10298 : float) ->
            fun ~replacementValue:(x10299 : float) ->
              Ojs.float_of_js
                (Ojs.call (Ojs.get_prop_ascii Ojs.global "Atomics")
                   "compareExchange"
                   [|((match x10290 with
                       | `U1 x10291 -> Int8Array.t_to_js x10291
                       | `U2 x10292 -> Uint8Array.t_to_js x10292
                       | `U3 x10293 -> Int16Array.t_to_js x10293
                       | `U4 x10294 -> Uint16Array.t_to_js x10294
                       | `U5 x10295 -> Int32Array.t_to_js x10295
                       | `U6 x10296 -> Uint32Array.t_to_js x10296));(
                     Ojs.float_to_js x10297);(Ojs.float_to_js x10298);(
                     Ojs.float_to_js x10299)|])
    let (exchange' :
      typedArray:[ `U1 of Int8Array.t  | `U2 of Uint8Array.t 
                 | `U3 of Int16Array.t  | `U4 of Uint16Array.t 
                 | `U5 of Int32Array.t  | `U6 of Uint32Array.t ]
        -> index:float -> value:float -> float)
      =
      fun
        ~typedArray:(x10300 :
                      [ `U1 of Int8Array.t  | `U2 of Uint8Array.t 
                      | `U3 of Int16Array.t  | `U4 of Uint16Array.t 
                      | `U5 of Int32Array.t  | `U6 of Uint32Array.t ])
        ->
        fun ~index:(x10307 : float) ->
          fun ~value:(x10308 : float) ->
            Ojs.float_of_js
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "Atomics") "exchange"
                 [|((match x10300 with
                     | `U1 x10301 -> Int8Array.t_to_js x10301
                     | `U2 x10302 -> Uint8Array.t_to_js x10302
                     | `U3 x10303 -> Int16Array.t_to_js x10303
                     | `U4 x10304 -> Uint16Array.t_to_js x10304
                     | `U5 x10305 -> Int32Array.t_to_js x10305
                     | `U6 x10306 -> Uint32Array.t_to_js x10306));(Ojs.float_to_js
                                                                    x10307);(
                   Ojs.float_to_js x10308)|])
    let (isLockFree : float -> bool) =
      fun (x10309 : float) ->
        Ojs.bool_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Atomics") "isLockFree"
             [|(Ojs.float_to_js x10309)|])
    let (load' :
      typedArray:[ `U1 of Int8Array.t  | `U2 of Uint8Array.t 
                 | `U3 of Int16Array.t  | `U4 of Uint16Array.t 
                 | `U5 of Int32Array.t  | `U6 of Uint32Array.t ]
        -> index:float -> float)
      =
      fun
        ~typedArray:(x10310 :
                      [ `U1 of Int8Array.t  | `U2 of Uint8Array.t 
                      | `U3 of Int16Array.t  | `U4 of Uint16Array.t 
                      | `U5 of Int32Array.t  | `U6 of Uint32Array.t ])
        ->
        fun ~index:(x10317 : float) ->
          Ojs.float_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "Atomics") "load"
               [|((match x10310 with
                   | `U1 x10311 -> Int8Array.t_to_js x10311
                   | `U2 x10312 -> Uint8Array.t_to_js x10312
                   | `U3 x10313 -> Int16Array.t_to_js x10313
                   | `U4 x10314 -> Uint16Array.t_to_js x10314
                   | `U5 x10315 -> Int32Array.t_to_js x10315
                   | `U6 x10316 -> Uint32Array.t_to_js x10316));(Ojs.float_to_js
                                                                   x10317)|])
    let (or_' :
      typedArray:[ `U1 of Int8Array.t  | `U2 of Uint8Array.t 
                 | `U3 of Int16Array.t  | `U4 of Uint16Array.t 
                 | `U5 of Int32Array.t  | `U6 of Uint32Array.t ]
        -> index:float -> value:float -> float)
      =
      fun
        ~typedArray:(x10318 :
                      [ `U1 of Int8Array.t  | `U2 of Uint8Array.t 
                      | `U3 of Int16Array.t  | `U4 of Uint16Array.t 
                      | `U5 of Int32Array.t  | `U6 of Uint32Array.t ])
        ->
        fun ~index:(x10325 : float) ->
          fun ~value:(x10326 : float) ->
            Ojs.float_of_js
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "Atomics") "or"
                 [|((match x10318 with
                     | `U1 x10319 -> Int8Array.t_to_js x10319
                     | `U2 x10320 -> Uint8Array.t_to_js x10320
                     | `U3 x10321 -> Int16Array.t_to_js x10321
                     | `U4 x10322 -> Uint16Array.t_to_js x10322
                     | `U5 x10323 -> Int32Array.t_to_js x10323
                     | `U6 x10324 -> Uint32Array.t_to_js x10324));(Ojs.float_to_js
                                                                    x10325);(
                   Ojs.float_to_js x10326)|])
    let (store' :
      typedArray:[ `U1 of Int8Array.t  | `U2 of Uint8Array.t 
                 | `U3 of Int16Array.t  | `U4 of Uint16Array.t 
                 | `U5 of Int32Array.t  | `U6 of Uint32Array.t ]
        -> index:float -> value:float -> float)
      =
      fun
        ~typedArray:(x10327 :
                      [ `U1 of Int8Array.t  | `U2 of Uint8Array.t 
                      | `U3 of Int16Array.t  | `U4 of Uint16Array.t 
                      | `U5 of Int32Array.t  | `U6 of Uint32Array.t ])
        ->
        fun ~index:(x10334 : float) ->
          fun ~value:(x10335 : float) ->
            Ojs.float_of_js
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "Atomics") "store"
                 [|((match x10327 with
                     | `U1 x10328 -> Int8Array.t_to_js x10328
                     | `U2 x10329 -> Uint8Array.t_to_js x10329
                     | `U3 x10330 -> Int16Array.t_to_js x10330
                     | `U4 x10331 -> Uint16Array.t_to_js x10331
                     | `U5 x10332 -> Int32Array.t_to_js x10332
                     | `U6 x10333 -> Uint32Array.t_to_js x10333));(Ojs.float_to_js
                                                                    x10334);(
                   Ojs.float_to_js x10335)|])
    let (sub' :
      typedArray:[ `U1 of Int8Array.t  | `U2 of Uint8Array.t 
                 | `U3 of Int16Array.t  | `U4 of Uint16Array.t 
                 | `U5 of Int32Array.t  | `U6 of Uint32Array.t ]
        -> index:float -> value:float -> float)
      =
      fun
        ~typedArray:(x10336 :
                      [ `U1 of Int8Array.t  | `U2 of Uint8Array.t 
                      | `U3 of Int16Array.t  | `U4 of Uint16Array.t 
                      | `U5 of Int32Array.t  | `U6 of Uint32Array.t ])
        ->
        fun ~index:(x10343 : float) ->
          fun ~value:(x10344 : float) ->
            Ojs.float_of_js
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "Atomics") "sub"
                 [|((match x10336 with
                     | `U1 x10337 -> Int8Array.t_to_js x10337
                     | `U2 x10338 -> Uint8Array.t_to_js x10338
                     | `U3 x10339 -> Int16Array.t_to_js x10339
                     | `U4 x10340 -> Uint16Array.t_to_js x10340
                     | `U5 x10341 -> Int32Array.t_to_js x10341
                     | `U6 x10342 -> Uint32Array.t_to_js x10342));(Ojs.float_to_js
                                                                    x10343);(
                   Ojs.float_to_js x10344)|])
    let (wait' :
      typedArray:Int32Array.t ->
        index:float ->
          value:float ->
            ?timeout:float ->
              unit -> [ `L_s133_timed_out  | `L_s95_not_equal  | `L_s99_ok ])
      =
      fun ~typedArray:(x10345 : Int32Array.t) ->
        fun ~index:(x10346 : float) ->
          fun ~value:(x10347 : float) ->
            fun ?timeout:(x10348 : float option) ->
              fun () ->
                let x10352 =
                  let x10351 = Ojs.get_prop_ascii Ojs.global "Atomics" in
                  Ojs.call (Ojs.get_prop_ascii x10351 "wait") "apply"
                    [|x10351;((let x10349 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x10349 "push"
                                    [|(Int32Array.t_to_js x10345)|]);
                               ignore
                                 (Ojs.call x10349 "push"
                                    [|(Ojs.float_to_js x10346)|]);
                               ignore
                                 (Ojs.call x10349 "push"
                                    [|(Ojs.float_to_js x10347)|]);
                               (match x10348 with
                                | Some x10350 ->
                                    ignore
                                      (Ojs.call x10349 "push"
                                         [|(Ojs.float_to_js x10350)|])
                                | None -> ());
                               x10349))|] in
                match Ojs.string_of_js x10352 with
                | "timed-out" -> `L_s133_timed_out
                | "not-equal" -> `L_s95_not_equal
                | "ok" -> `L_s99_ok
                | _ -> assert false
    let (notify' :
      typedArray:Int32Array.t -> index:float -> ?count:float -> unit -> float)
      =
      fun ~typedArray:(x10353 : Int32Array.t) ->
        fun ~index:(x10354 : float) ->
          fun ?count:(x10355 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x10358 = Ojs.get_prop_ascii Ojs.global "Atomics" in
                 Ojs.call (Ojs.get_prop_ascii x10358 "notify") "apply"
                   [|x10358;((let x10356 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x10356 "push"
                                   [|(Int32Array.t_to_js x10353)|]);
                              ignore
                                (Ojs.call x10356 "push"
                                   [|(Ojs.float_to_js x10354)|]);
                              (match x10355 with
                               | Some x10357 ->
                                   ignore
                                     (Ojs.call x10356 "push"
                                        [|(Ojs.float_to_js x10357)|])
                               | None -> ());
                              x10356))|])
    let (xor' :
      typedArray:[ `U1 of Int8Array.t  | `U2 of Uint8Array.t 
                 | `U3 of Int16Array.t  | `U4 of Uint16Array.t 
                 | `U5 of Int32Array.t  | `U6 of Uint32Array.t ]
        -> index:float -> value:float -> float)
      =
      fun
        ~typedArray:(x10359 :
                      [ `U1 of Int8Array.t  | `U2 of Uint8Array.t 
                      | `U3 of Int16Array.t  | `U4 of Uint16Array.t 
                      | `U5 of Int32Array.t  | `U6 of Uint32Array.t ])
        ->
        fun ~index:(x10366 : float) ->
          fun ~value:(x10367 : float) ->
            Ojs.float_of_js
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "Atomics") "xor"
                 [|((match x10359 with
                     | `U1 x10360 -> Int8Array.t_to_js x10360
                     | `U2 x10361 -> Uint8Array.t_to_js x10361
                     | `U3 x10362 -> Int16Array.t_to_js x10362
                     | `U4 x10363 -> Uint16Array.t_to_js x10363
                     | `U5 x10364 -> Int32Array.t_to_js x10364
                     | `U6 x10365 -> Uint32Array.t_to_js x10365));(Ojs.float_to_js
                                                                    x10366);(
                   Ojs.float_to_js x10367)|])
  end
module AsyncIterator =
  struct
    type ('T, 'TReturn, 'TNext) t =
      [ `AsyncIterator of ('T * 'TReturn * 'TNext) ] intf
    let rec t_of_js :
      'T 'TReturn 'TNext .
        (Ojs.t -> 'T) ->
          (Ojs.t -> 'TReturn) ->
            (Ojs.t -> 'TNext) -> Ojs.t -> ('T, 'TReturn, 'TNext) t
      = fun _T -> fun _TReturn -> fun _TNext -> Obj.magic
    and t_to_js :
      'T 'TReturn 'TNext .
        ('T -> Ojs.t) ->
          ('TReturn -> Ojs.t) ->
            ('TNext -> Ojs.t) -> ('T, 'TReturn, 'TNext) t -> Ojs.t
      = fun _T -> fun _TReturn -> fun _TNext -> Obj.magic
    type ('T, 'TReturn) t_2 = ('T, 'TReturn, undefined) t
    let rec t_2_of_js :
      'T 'TReturn .
        (Ojs.t -> 'T) -> (Ojs.t -> 'TReturn) -> Ojs.t -> ('T, 'TReturn) t_2
      =
      fun (type __T) ->
        fun (type __TReturn) ->
          fun (__T_of_js : Ojs.t -> __T) ->
            fun (__TReturn_of_js : Ojs.t -> __TReturn) ->
              fun (x10372 : Ojs.t) ->
                t_of_js __T_of_js __TReturn_of_js undefined_of_js x10372
    and t_2_to_js :
      'T 'TReturn .
        ('T -> Ojs.t) -> ('TReturn -> Ojs.t) -> ('T, 'TReturn) t_2 -> Ojs.t
      =
      fun (type __T) ->
        fun (type __TReturn) ->
          fun (__T_to_js : __T -> Ojs.t) ->
            fun (__TReturn_to_js : __TReturn -> Ojs.t) ->
              fun (x10368 : (__T, __TReturn, undefined) t) ->
                t_to_js __T_to_js __TReturn_to_js undefined_to_js x10368
    type 'T t_1 = ('T, any, undefined) t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 =
      fun (type __T) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x10380 : Ojs.t) ->
            t_of_js __T_of_js any_of_js undefined_of_js x10380
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t =
      fun (type __T) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x10376 : (__T, any, undefined) t) ->
            t_to_js __T_to_js any_to_js undefined_to_js x10376
    type ('T, 'TReturn, 'TNext) tags =
      [ `AsyncIterator of ('T * 'TReturn * 'TNext) ]
    type ('T, 'TReturn) tags_2 = ('T, 'TReturn, undefined) tags
    type 'T tags_1 = ('T, any, undefined) tags
    type ('tags, 'T, 'TReturn, 'TNext) this =
      'tags intf constraint 'tags =
                  [> `AsyncIterator of ('T * 'TReturn * 'TNext) ]
    let rec this_of_js :
      'tags 'T 'TReturn 'TNext .
        (Ojs.t -> 'tags) ->
          (Ojs.t -> 'T) ->
            (Ojs.t -> 'TReturn) ->
              (Ojs.t -> 'TNext) ->
                Ojs.t -> ('tags, 'T, 'TReturn, 'TNext) this
      =
      fun (type __tags) ->
        fun (type __T) ->
          fun (type __TReturn) ->
            fun (type __TNext) ->
              fun (__tags_of_js : Ojs.t -> __tags) ->
                fun (__T_of_js : Ojs.t -> __T) ->
                  fun (__TReturn_of_js : Ojs.t -> __TReturn) ->
                    fun (__TNext_of_js : Ojs.t -> __TNext) ->
                      fun (x10386 : Ojs.t) -> intf_of_js __tags_of_js x10386
    and this_to_js :
      'tags 'T 'TReturn 'TNext .
        ('tags -> Ojs.t) ->
          ('T -> Ojs.t) ->
            ('TReturn -> Ojs.t) ->
              ('TNext -> Ojs.t) ->
                ('tags, 'T, 'TReturn, 'TNext) this -> Ojs.t
      =
      fun (type __tags) ->
        fun (type __T) ->
          fun (type __TReturn) ->
            fun (type __TNext) ->
              fun (__tags_to_js : __tags -> Ojs.t) ->
                fun (__T_to_js : __T -> Ojs.t) ->
                  fun (__TReturn_to_js : __TReturn -> Ojs.t) ->
                    fun (__TNext_to_js : __TNext -> Ojs.t) ->
                      fun (x10384 : __tags intf) ->
                        intf_to_js __tags_to_js x10384
    let (next :
      ('tags, 'T, 'TReturn, 'TNext) this ->
        args:any list -> ('T, 'TReturn) IteratorResult.t Promise.t)
      =
      fun (x10391 : ('tags, 'T, 'TReturn, 'TNext) this) ->
        fun ~args:(x10388 : any list) ->
          Promise.t_of_js
            (fun (x10397 : Ojs.t) ->
               IteratorResult.t_of_js Obj.magic Obj.magic x10397)
            (let x10396 =
               this_to_js Obj.magic Obj.magic Obj.magic Obj.magic x10391 in
             Ojs.call (Ojs.get_prop_ascii x10396 "next") "apply"
               [|x10396;((let x10389 =
                            Ojs.new_obj
                              (Ojs.get_prop_ascii Ojs.global "Array") 
                              [||] in
                          List.iter
                            (fun (x10390 : any) ->
                               ignore
                                 (Ojs.call x10389 "push"
                                    [|(any_to_js x10390)|])) x10388;
                          x10389))|])
    let (return :
      ('tags, 'T, 'TReturn, 'TNext) this ->
        ?value:[ `U1 of 'TReturn  | `U2 of 'TReturn PromiseLike.t ] ->
          unit -> ('T, 'TReturn) IteratorResult.t Promise.t)
      =
      fun (x10406 : ('tags, 'T, 'TReturn, 'TNext) this) ->
        fun
          ?value:(x10400 :
                   [ `U1 of 'TReturn  | `U2 of 'TReturn PromiseLike.t ]
                     option)
          ->
          fun () ->
            Promise.t_of_js
              (fun (x10412 : Ojs.t) ->
                 IteratorResult.t_of_js Obj.magic Obj.magic x10412)
              (let x10411 =
                 this_to_js Obj.magic Obj.magic Obj.magic Obj.magic x10406 in
               Ojs.call (Ojs.get_prop_ascii x10411 "return") "apply"
                 [|x10411;((let x10401 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x10400 with
                             | Some x10402 ->
                                 ignore
                                   (Ojs.call x10401 "push"
                                      [|((match x10402 with
                                          | `U1 x10403 -> Obj.magic x10403
                                          | `U2 x10404 ->
                                              PromiseLike.t_to_js Obj.magic
                                                x10404))|])
                             | None -> ());
                            x10401))|])
    let (throw :
      ('tags, 'T, 'TReturn, 'TNext) this ->
        ?e:any -> unit -> ('T, 'TReturn) IteratorResult.t Promise.t)
      =
      fun (x10418 : ('tags, 'T, 'TReturn, 'TNext) this) ->
        fun ?e:(x10415 : any option) ->
          fun () ->
            Promise.t_of_js
              (fun (x10424 : Ojs.t) ->
                 IteratorResult.t_of_js Obj.magic Obj.magic x10424)
              (let x10423 =
                 this_to_js Obj.magic Obj.magic Obj.magic Obj.magic x10418 in
               Ojs.call (Ojs.get_prop_ascii x10423 "throw") "apply"
                 [|x10423;((let x10416 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x10415 with
                             | Some x10417 ->
                                 ignore
                                   (Ojs.call x10416 "push"
                                      [|(any_to_js x10417)|])
                             | None -> ());
                            x10416))|])
    let cast_from = Obj.magic
  end
module AsyncIterableIterator =
  struct
    type 'T t =
      [ `AsyncIterableIterator of 'T 
      | `AsyncIterator of ('T * any * undefined) ] intf
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun _T -> Obj.magic
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun _T -> Obj.magic
    type 'T tags =
      [ `AsyncIterableIterator of 'T 
      | `AsyncIterator of ('T * any * undefined) ]
    type ('tags, 'T) this =
      'tags intf constraint 'tags = [> `AsyncIterableIterator of 'T ]
    let rec this_of_js :
      'tags 'T .
        (Ojs.t -> 'tags) -> (Ojs.t -> 'T) -> Ojs.t -> ('tags, 'T) this
      =
      fun (type __tags) ->
        fun (type __T) ->
          fun (__tags_of_js : Ojs.t -> __tags) ->
            fun (__T_of_js : Ojs.t -> __T) ->
              fun (x10429 : Ojs.t) -> intf_of_js __tags_of_js x10429
    and this_to_js :
      'tags 'T .
        ('tags -> Ojs.t) -> ('T -> Ojs.t) -> ('tags, 'T) this -> Ojs.t
      =
      fun (type __tags) ->
        fun (type __T) ->
          fun (__tags_to_js : __tags -> Ojs.t) ->
            fun (__T_to_js : __T -> Ojs.t) ->
              fun (x10427 : __tags intf) -> intf_to_js __tags_to_js x10427
    let cast_from = Obj.magic
  end
module AsyncIterable =
  struct
    type 'T t = [ `AsyncIterable of 'T ] intf
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun _T -> Obj.magic
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun _T -> Obj.magic
    type 'T tags = [ `AsyncIterable of 'T ]
    type ('tags, 'T) this =
      'tags intf constraint 'tags = [> `AsyncIterable of 'T ]
    let rec this_of_js :
      'tags 'T .
        (Ojs.t -> 'tags) -> (Ojs.t -> 'T) -> Ojs.t -> ('tags, 'T) this
      =
      fun (type __tags) ->
        fun (type __T) ->
          fun (__tags_of_js : Ojs.t -> __tags) ->
            fun (__T_of_js : Ojs.t -> __T) ->
              fun (x10433 : Ojs.t) -> intf_of_js __tags_of_js x10433
    and this_to_js :
      'tags 'T .
        ('tags -> Ojs.t) -> ('T -> Ojs.t) -> ('tags, 'T) this -> Ojs.t
      =
      fun (type __tags) ->
        fun (type __T) ->
          fun (__tags_to_js : __tags -> Ojs.t) ->
            fun (__T_to_js : __T -> Ojs.t) ->
              fun (x10431 : __tags intf) -> intf_to_js __tags_to_js x10431
    let cast_from = Obj.magic
  end
module AsyncGenerator =
  struct
    type ('T, 'TReturn, 'TNext) t =
      [ `AsyncGenerator of ('T * 'TReturn * 'TNext) 
      | `AsyncIterator of ('T * 'TReturn * 'TNext) ] intf
    let rec t_of_js :
      'T 'TReturn 'TNext .
        (Ojs.t -> 'T) ->
          (Ojs.t -> 'TReturn) ->
            (Ojs.t -> 'TNext) -> Ojs.t -> ('T, 'TReturn, 'TNext) t
      = fun _T -> fun _TReturn -> fun _TNext -> Obj.magic
    and t_to_js :
      'T 'TReturn 'TNext .
        ('T -> Ojs.t) ->
          ('TReturn -> Ojs.t) ->
            ('TNext -> Ojs.t) -> ('T, 'TReturn, 'TNext) t -> Ojs.t
      = fun _T -> fun _TReturn -> fun _TNext -> Obj.magic
    type ('T, 'TReturn) t_2 = ('T, 'TReturn, unknown) t
    let rec t_2_of_js :
      'T 'TReturn .
        (Ojs.t -> 'T) -> (Ojs.t -> 'TReturn) -> Ojs.t -> ('T, 'TReturn) t_2
      =
      fun (type __T) ->
        fun (type __TReturn) ->
          fun (__T_of_js : Ojs.t -> __T) ->
            fun (__TReturn_of_js : Ojs.t -> __TReturn) ->
              fun (x10439 : Ojs.t) ->
                t_of_js __T_of_js __TReturn_of_js unknown_of_js x10439
    and t_2_to_js :
      'T 'TReturn .
        ('T -> Ojs.t) -> ('TReturn -> Ojs.t) -> ('T, 'TReturn) t_2 -> Ojs.t
      =
      fun (type __T) ->
        fun (type __TReturn) ->
          fun (__T_to_js : __T -> Ojs.t) ->
            fun (__TReturn_to_js : __TReturn -> Ojs.t) ->
              fun (x10435 : (__T, __TReturn, unknown) t) ->
                t_to_js __T_to_js __TReturn_to_js unknown_to_js x10435
    type 'T t_1 = ('T, any, unknown) t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 =
      fun (type __T) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x10447 : Ojs.t) ->
            t_of_js __T_of_js any_of_js unknown_of_js x10447
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t =
      fun (type __T) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x10443 : (__T, any, unknown) t) ->
            t_to_js __T_to_js any_to_js unknown_to_js x10443
    type t_0 = (unknown, any, unknown) t
    let rec t_0_of_js : Ojs.t -> t_0 =
      fun (x10455 : Ojs.t) ->
        t_of_js unknown_of_js any_of_js unknown_of_js x10455
    and t_0_to_js : t_0 -> Ojs.t =
      fun (x10451 : (unknown, any, unknown) t) ->
        t_to_js unknown_to_js any_to_js unknown_to_js x10451
    type ('T, 'TReturn, 'TNext) tags =
      [ `AsyncGenerator of ('T * 'TReturn * 'TNext) 
      | `AsyncIterator of ('T * 'TReturn * 'TNext) ]
    type ('T, 'TReturn) tags_2 = ('T, 'TReturn, unknown) tags
    type 'T tags_1 = ('T, any, unknown) tags
    type tags_0 = (unknown, any, unknown) tags
    type ('tags, 'T, 'TReturn, 'TNext) this =
      'tags intf constraint 'tags =
                  [> `AsyncGenerator of ('T * 'TReturn * 'TNext) ]
    let rec this_of_js :
      'tags 'T 'TReturn 'TNext .
        (Ojs.t -> 'tags) ->
          (Ojs.t -> 'T) ->
            (Ojs.t -> 'TReturn) ->
              (Ojs.t -> 'TNext) ->
                Ojs.t -> ('tags, 'T, 'TReturn, 'TNext) this
      =
      fun (type __tags) ->
        fun (type __T) ->
          fun (type __TReturn) ->
            fun (type __TNext) ->
              fun (__tags_of_js : Ojs.t -> __tags) ->
                fun (__T_of_js : Ojs.t -> __T) ->
                  fun (__TReturn_of_js : Ojs.t -> __TReturn) ->
                    fun (__TNext_of_js : Ojs.t -> __TNext) ->
                      fun (x10461 : Ojs.t) -> intf_of_js __tags_of_js x10461
    and this_to_js :
      'tags 'T 'TReturn 'TNext .
        ('tags -> Ojs.t) ->
          ('T -> Ojs.t) ->
            ('TReturn -> Ojs.t) ->
              ('TNext -> Ojs.t) ->
                ('tags, 'T, 'TReturn, 'TNext) this -> Ojs.t
      =
      fun (type __tags) ->
        fun (type __T) ->
          fun (type __TReturn) ->
            fun (type __TNext) ->
              fun (__tags_to_js : __tags -> Ojs.t) ->
                fun (__T_to_js : __T -> Ojs.t) ->
                  fun (__TReturn_to_js : __TReturn -> Ojs.t) ->
                    fun (__TNext_to_js : __TNext -> Ojs.t) ->
                      fun (x10459 : __tags intf) ->
                        intf_to_js __tags_to_js x10459
    let (next :
      ('tags, 'T, 'TReturn, 'TNext) this ->
        args:any list -> ('T, 'TReturn) IteratorResult.t Promise.t)
      =
      fun (x10466 : ('tags, 'T, 'TReturn, 'TNext) this) ->
        fun ~args:(x10463 : any list) ->
          Promise.t_of_js
            (fun (x10472 : Ojs.t) ->
               IteratorResult.t_of_js Obj.magic Obj.magic x10472)
            (let x10471 =
               this_to_js Obj.magic Obj.magic Obj.magic Obj.magic x10466 in
             Ojs.call (Ojs.get_prop_ascii x10471 "next") "apply"
               [|x10471;((let x10464 =
                            Ojs.new_obj
                              (Ojs.get_prop_ascii Ojs.global "Array") 
                              [||] in
                          List.iter
                            (fun (x10465 : any) ->
                               ignore
                                 (Ojs.call x10464 "push"
                                    [|(any_to_js x10465)|])) x10463;
                          x10464))|])
    let (return :
      ('tags, 'T, 'TReturn, 'TNext) this ->
        value:[ `U1 of 'TReturn  | `U2 of 'TReturn PromiseLike.t ] ->
          ('T, 'TReturn) IteratorResult.t Promise.t)
      =
      fun (x10479 : ('tags, 'T, 'TReturn, 'TNext) this) ->
        fun
          ~value:(x10475 :
                   [ `U1 of 'TReturn  | `U2 of 'TReturn PromiseLike.t ])
          ->
          Promise.t_of_js
            (fun (x10484 : Ojs.t) ->
               IteratorResult.t_of_js Obj.magic Obj.magic x10484)
            (Ojs.call
               (this_to_js Obj.magic Obj.magic Obj.magic Obj.magic x10479)
               "return"
               [|((match x10475 with
                   | `U1 x10476 -> Obj.magic x10476
                   | `U2 x10477 -> PromiseLike.t_to_js Obj.magic x10477))|])
    let (throw :
      ('tags, 'T, 'TReturn, 'TNext) this ->
        e:any -> ('T, 'TReturn) IteratorResult.t Promise.t)
      =
      fun (x10488 : ('tags, 'T, 'TReturn, 'TNext) this) ->
        fun ~e:(x10487 : any) ->
          Promise.t_of_js
            (fun (x10493 : Ojs.t) ->
               IteratorResult.t_of_js Obj.magic Obj.magic x10493)
            (Ojs.call
               (this_to_js Obj.magic Obj.magic Obj.magic Obj.magic x10488)
               "throw" [|(any_to_js x10487)|])
    let cast_from = Obj.magic
  end
module AsyncGeneratorFunction =
  struct
    type t = [ `AsyncGeneratorFunction ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type tags = [ `AsyncGeneratorFunction ]
    type 'tags this =
      'tags intf constraint 'tags = [> `AsyncGeneratorFunction ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x10498 : Ojs.t) -> intf_of_js __tags_of_js x10498
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x10496 : __tags intf) -> intf_to_js __tags_to_js x10496
    let (create : 'tags this -> args:any list -> AsyncGenerator.t_0) =
      fun (x10503 : 'tags this) ->
        fun ~args:(x10500 : any list) ->
          AsyncGenerator.t_0_of_js
            (Ojs.new_obj_arr (this_to_js Obj.magic x10503)
               (let x10501 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                List.iter
                  (fun (x10502 : any) ->
                     ignore (Ojs.call x10501 "push" [|(any_to_js x10502)|]))
                  x10500;
                x10501))
    let (apply : 'tags this -> args:any list -> AsyncGenerator.t_0) =
      fun (x10508 : 'tags this) ->
        fun ~args:(x10505 : any list) ->
          AsyncGenerator.t_0_of_js
            (Ojs.call (this_to_js Obj.magic x10508) "apply"
               [|Ojs.null;((let x10506 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            List.iter
                              (fun (x10507 : any) ->
                                 ignore
                                   (Ojs.call x10506 "push"
                                      [|(any_to_js x10507)|])) x10505;
                            x10506))|])
    let (get_length : 'tags this -> float) =
      fun (x10510 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x10510) "length")
    let (get_name : 'tags this -> string) =
      fun (x10512 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x10512) "name")
    let (get_prototype : 'tags this -> AsyncGenerator.t_0) =
      fun (x10514 : 'tags this) ->
        AsyncGenerator.t_0_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x10514) "prototype")
    let cast_from = Obj.magic
  end
module AsyncGeneratorFunctionConstructor =
  struct
    type t = [ `AsyncGeneratorFunctionConstructor ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type tags = [ `AsyncGeneratorFunctionConstructor ]
    type 'tags this =
      'tags intf constraint 'tags = [> `AsyncGeneratorFunctionConstructor ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x10518 : Ojs.t) -> intf_of_js __tags_of_js x10518
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x10516 : __tags intf) -> intf_to_js __tags_to_js x10516
    let (create : 'tags this -> args:string list -> AsyncGeneratorFunction.t)
      =
      fun (x10523 : 'tags this) ->
        fun ~args:(x10520 : string list) ->
          AsyncGeneratorFunction.t_of_js
            (Ojs.new_obj_arr (this_to_js Obj.magic x10523)
               (let x10521 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                List.iter
                  (fun (x10522 : string) ->
                     ignore
                       (Ojs.call x10521 "push" [|(Ojs.string_to_js x10522)|]))
                  x10520;
                x10521))
    let (apply : 'tags this -> args:string list -> AsyncGeneratorFunction.t)
      =
      fun (x10528 : 'tags this) ->
        fun ~args:(x10525 : string list) ->
          AsyncGeneratorFunction.t_of_js
            (Ojs.call (this_to_js Obj.magic x10528) "apply"
               [|Ojs.null;((let x10526 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            List.iter
                              (fun (x10527 : string) ->
                                 ignore
                                   (Ojs.call x10526 "push"
                                      [|(Ojs.string_to_js x10527)|])) x10525;
                            x10526))|])
    let (get_length : 'tags this -> float) =
      fun (x10530 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x10530) "length")
    let (get_name : 'tags this -> string) =
      fun (x10532 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x10532) "name")
    let (get_prototype : 'tags this -> AsyncGeneratorFunction.t) =
      fun (x10534 : 'tags this) ->
        AsyncGeneratorFunction.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x10534) "prototype")
    let cast_from = Obj.magic
  end
module AsyncDisposable =
  struct
    type t = [ `AsyncDisposable ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type tags = [ `AsyncDisposable ]
    type 'tags this = 'tags intf constraint 'tags = [> `AsyncDisposable ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x10538 : Ojs.t) -> intf_of_js __tags_of_js x10538
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x10536 : __tags intf) -> intf_to_js __tags_to_js x10536
    let cast_from = Obj.magic
  end
module AsyncDisposableStack =
  struct
    type t = [ `AsyncDisposableStack ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type tags = [ `AsyncDisposableStack ]
    type 'tags this =
      'tags intf constraint 'tags = [> `AsyncDisposableStack ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x10542 : Ojs.t) -> intf_of_js __tags_of_js x10542
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x10540 : __tags intf) -> intf_to_js __tags_to_js x10540
    let (get_disposed : 'tags this -> bool) =
      fun (x10544 : 'tags this) ->
        Ojs.bool_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x10544) "disposed")
    let (disposeAsync : 'tags this -> unit Promise.t) =
      fun (x10546 : 'tags this) ->
        Promise.t_of_js Ojs.unit_of_js
          (Ojs.call (this_to_js Obj.magic x10546) "disposeAsync" [||])
    let (use : 'tags this -> value:'T -> 'T) =
      fun (x10550 : 'tags this) ->
        fun ~value:(x10549 : 'T) ->
          Obj.magic
            (Ojs.call (this_to_js Obj.magic x10550) "use"
               [|(Obj.magic x10549)|])
    let (adopt :
      'tags this ->
        value:'T ->
          onDisposeAsync:('T -> [ `U1 of unit PromiseLike.t  | `U2 of unit ])
            -> 'T)
      =
      fun (x10558 : 'tags this) ->
        fun ~value:(x10552 : 'T) ->
          fun
            ~onDisposeAsync:(x10553 :
                              'T ->
                                [ `U1 of unit PromiseLike.t  | `U2 of unit ])
            ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic x10558) "adopt"
                 [|(Obj.magic x10552);(Ojs.fun_to_js 1
                                         (fun (x10554 : Ojs.t) ->
                                            match x10553 (Obj.magic x10554)
                                            with
                                            | `U1 x10555 ->
                                                PromiseLike.t_to_js
                                                  Ojs.unit_to_js x10555
                                            | `U2 x10557 ->
                                                Ojs.unit_to_js x10557))|])
    let (defer :
      'tags this ->
        onDisposeAsync:(unit -> [ `U1 of unit PromiseLike.t  | `U2 of unit ])
          -> unit)
      =
      fun (x10564 : 'tags this) ->
        fun
          ~onDisposeAsync:(x10560 :
                            unit ->
                              [ `U1 of unit PromiseLike.t  | `U2 of unit ])
          ->
          ignore
            (Ojs.call (this_to_js Obj.magic x10564) "defer"
               [|(Ojs.fun_to_js 1
                    (fun _ ->
                       match x10560 () with
                       | `U1 x10561 ->
                           PromiseLike.t_to_js Ojs.unit_to_js x10561
                       | `U2 x10563 -> Ojs.unit_to_js x10563))|])
    let (move : 'tags this -> t) =
      fun (x10566 : 'tags this) ->
        t_of_js (Ojs.call (this_to_js Obj.magic x10566) "move" [||])
    let (create : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "AsyncDisposableStack")
             [||])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "AsyncDisposableStack")
             "prototype")
    let cast_from = Obj.magic
  end
module ArrayBufferView =
  struct
    type t = [ `ArrayBufferView ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type tags = [ `ArrayBufferView ]
    type 'tags this = 'tags intf constraint 'tags = [> `ArrayBufferView ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x10570 : Ojs.t) -> intf_of_js __tags_of_js x10570
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x10568 : __tags intf) -> intf_to_js __tags_to_js x10568
    let (get_buffer : 'tags this -> ArrayBufferLike.t) =
      fun (x10572 : 'tags this) ->
        ArrayBufferLike.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x10572) "buffer")
    let (set_buffer : 'tags this -> ArrayBufferLike.t -> unit) =
      fun (x10574 : 'tags this) ->
        fun (x10575 : ArrayBufferLike.t) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x10574) "buffer"
            (ArrayBufferLike.t_to_js x10575)
    let (get_byteLength : 'tags this -> float) =
      fun (x10577 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x10577) "byteLength")
    let (set_byteLength : 'tags this -> float -> unit) =
      fun (x10579 : 'tags this) ->
        fun (x10580 : float) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x10579) "byteLength"
            (Ojs.float_to_js x10580)
    let (get_byteOffset : 'tags this -> float) =
      fun (x10582 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x10582) "byteOffset")
    let (set_byteOffset : 'tags this -> float -> unit) =
      fun (x10584 : 'tags this) ->
        fun (x10585 : float) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x10584) "byteOffset"
            (Ojs.float_to_js x10585)
    let (create :
      buffer:ArrayBufferLike.t ->
        byteLength:float -> byteOffset:float -> unit -> t)
      =
      fun ~buffer:(x10587 : ArrayBufferLike.t) ->
        fun ~byteLength:(x10588 : float) ->
          fun ~byteOffset:(x10589 : float) ->
            fun () ->
              let x10590 = Ojs.empty_obj () in
              Ojs.set_prop_ascii x10590 "buffer"
                (ArrayBufferLike.t_to_js x10587);
              Ojs.set_prop_ascii x10590 "byteLength" (Ojs.float_to_js x10588);
              Ojs.set_prop_ascii x10590 "byteOffset" (Ojs.float_to_js x10589);
              t_of_js x10590
    let cast_from = Obj.magic
  end
module ArrayBufferTypes =
  struct
    type t = [ `ArrayBufferTypes ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type tags = [ `ArrayBufferTypes ]
    type 'tags this = 'tags intf constraint 'tags = [> `ArrayBufferTypes ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x10593 : Ojs.t) -> intf_of_js __tags_of_js x10593
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x10591 : __tags intf) -> intf_to_js __tags_to_js x10591
    let (get_SharedArrayBuffer : 'tags this -> SharedArrayBuffer.t) =
      fun (x10595 : 'tags this) ->
        SharedArrayBuffer.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x10595)
             "SharedArrayBuffer")
    let (set_SharedArrayBuffer : 'tags this -> SharedArrayBuffer.t -> unit) =
      fun (x10597 : 'tags this) ->
        fun (x10598 : SharedArrayBuffer.t) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x10597)
            "SharedArrayBuffer" (SharedArrayBuffer.t_to_js x10598)
    let (get_ArrayBuffer : 'tags this -> ArrayBuffer.t) =
      fun (x10600 : 'tags this) ->
        ArrayBuffer.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x10600) "ArrayBuffer")
    let (set_ArrayBuffer : 'tags this -> ArrayBuffer.t -> unit) =
      fun (x10602 : 'tags this) ->
        fun (x10603 : ArrayBuffer.t) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x10602) "ArrayBuffer"
            (ArrayBuffer.t_to_js x10603)
    let (create :
      sharedArrayBuffer:SharedArrayBuffer.t ->
        arrayBuffer:ArrayBuffer.t -> unit -> t)
      =
      fun ~sharedArrayBuffer:(x10605 : SharedArrayBuffer.t) ->
        fun ~arrayBuffer:(x10606 : ArrayBuffer.t) ->
          fun () ->
            let x10607 = Ojs.empty_obj () in
            Ojs.set_prop_ascii x10607 "SharedArrayBuffer"
              (SharedArrayBuffer.t_to_js x10605);
            Ojs.set_prop_ascii x10607 "ArrayBuffer"
              (ArrayBuffer.t_to_js x10606);
            t_of_js x10607
    let cast_from = Obj.magic
  end
module AggregateError =
  struct
    type t = [ `AggregateError  | `Error ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type tags = [ `AggregateError  | `Error ]
    type 'tags this = 'tags intf constraint 'tags = [> `AggregateError ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x10610 : Ojs.t) -> intf_of_js __tags_of_js x10610
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x10608 : __tags intf) -> intf_to_js __tags_to_js x10608
    let (get_errors : 'tags this -> any list) =
      fun (x10612 : 'tags this) ->
        Ojs.list_of_js any_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x10612) "errors")
    let (set_errors : 'tags this -> any list -> unit) =
      fun (x10615 : 'tags this) ->
        fun (x10616 : any list) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x10615) "errors"
            (Ojs.list_to_js any_to_js x10616)
    let (create :
      errors:any Iterable.t ->
        ?message:string -> ?options:ErrorOptions.t -> unit -> t)
      =
      fun ~errors:(x10619 : any Iterable.t) ->
        fun ?message:(x10620 : string option) ->
          fun ?options:(x10621 : ErrorOptions.t option) ->
            fun () ->
              t_of_js
                (Ojs.new_obj_arr
                   (Ojs.get_prop_ascii Ojs.global "AggregateError")
                   (let x10622 =
                      Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                        [||] in
                    ignore
                      (Ojs.call x10622 "push"
                         [|(Iterable.t_to_js any_to_js x10619)|]);
                    (match x10620 with
                     | Some x10624 ->
                         ignore
                           (Ojs.call x10622 "push"
                              [|(Ojs.string_to_js x10624)|])
                     | None -> ());
                    (match x10621 with
                     | Some x10623 ->
                         ignore
                           (Ojs.call x10622 "push"
                              [|(ErrorOptions.t_to_js x10623)|])
                     | None -> ());
                    x10622))
    let (invoke :
      errors:any Iterable.t ->
        ?message:string -> ?options:ErrorOptions.t -> unit -> t)
      =
      fun ~errors:(x10626 : any Iterable.t) ->
        fun ?message:(x10627 : string option) ->
          fun ?options:(x10628 : ErrorOptions.t option) ->
            fun () ->
              t_of_js
                (Ojs.call (Ojs.get_prop_ascii Ojs.global "AggregateError")
                   "apply"
                   [|Ojs.null;((let x10629 =
                                  Ojs.new_obj
                                    (Ojs.get_prop_ascii Ojs.global "Array")
                                    [||] in
                                ignore
                                  (Ojs.call x10629 "push"
                                     [|(Iterable.t_to_js any_to_js x10626)|]);
                                (match x10627 with
                                 | Some x10631 ->
                                     ignore
                                       (Ojs.call x10629 "push"
                                          [|(Ojs.string_to_js x10631)|])
                                 | None -> ());
                                (match x10628 with
                                 | Some x10630 ->
                                     ignore
                                       (Ojs.call x10629 "push"
                                          [|(ErrorOptions.t_to_js x10630)|])
                                 | None -> ());
                                x10629))|])
    let (create' : errors:any Iterable.t -> ?message:string -> unit -> t) =
      fun ~errors:(x10633 : any Iterable.t) ->
        fun ?message:(x10634 : string option) ->
          fun () ->
            t_of_js
              (Ojs.new_obj_arr
                 (Ojs.get_prop_ascii Ojs.global "AggregateError")
                 (let x10635 =
                    Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                  ignore
                    (Ojs.call x10635 "push"
                       [|(Iterable.t_to_js any_to_js x10633)|]);
                  (match x10634 with
                   | Some x10636 ->
                       ignore
                         (Ojs.call x10635 "push"
                            [|(Ojs.string_to_js x10636)|])
                   | None -> ());
                  x10635))
    let (invoke' : errors:any Iterable.t -> ?message:string -> unit -> t) =
      fun ~errors:(x10638 : any Iterable.t) ->
        fun ?message:(x10639 : string option) ->
          fun () ->
            t_of_js
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "AggregateError")
                 "apply"
                 [|Ojs.null;((let x10640 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x10640 "push"
                                   [|(Iterable.t_to_js any_to_js x10638)|]);
                              (match x10639 with
                               | Some x10641 ->
                                   ignore
                                     (Ojs.call x10640 "push"
                                        [|(Ojs.string_to_js x10641)|])
                               | None -> ());
                              x10640))|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "AggregateError") "prototype")
    let (create'' : errors:any list -> unit -> t) =
      fun ~errors:(x10643 : any list) ->
        fun () ->
          let x10644 = Ojs.empty_obj () in
          Ojs.set_prop_ascii x10644 "errors"
            (Ojs.list_to_js any_to_js x10643);
          t_of_js x10644
    let cast_from = Obj.magic
  end
module ReadonlyArray_Make(T:Ojs.T) =
  struct
    type 'T parent = 'T ReadonlyArray.t
    let rec parent_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T parent =
      fun (type __T) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x10648 : Ojs.t) -> ReadonlyArray.t_of_js __T_of_js x10648
    and parent_to_js : 'T . ('T -> Ojs.t) -> 'T parent -> Ojs.t =
      fun (type __T) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x10646 : __T ReadonlyArray.t) ->
            ReadonlyArray.t_to_js __T_to_js x10646
    type t = T.t parent
    let rec t_of_js : Ojs.t -> t =
      fun (x10652 : Ojs.t) -> parent_of_js T.t_of_js x10652
    and t_to_js : t -> Ojs.t =
      fun (x10650 : T.t parent) -> parent_to_js T.t_to_js x10650
    let (at : t -> index:float -> T.t option) =
      fun (x10655 : t) ->
        fun ~index:(x10654 : float) ->
          Ojs.option_of_js T.t_of_js
            (Ojs.call (t_to_js x10655) "at" [|(Ojs.float_to_js x10654)|])
    let (findLast :
      t ->
        predicate:(value:T.t -> index:float -> array:T.t list -> bool) ->
          ?thisArg:any -> unit -> 'S option)
      =
      fun (x10665 : t) ->
        fun
          ~predicate:(x10657 :
                       value:T.t -> index:float -> array:T.t list -> bool)
          ->
          fun ?thisArg:(x10658 : any option) ->
            fun () ->
              Ojs.option_of_js Obj.magic
                (let x10666 = t_to_js x10665 in
                 Ojs.call (Ojs.get_prop_ascii x10666 "findLast") "apply"
                   [|x10666;((let x10659 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x10659 "push"
                                   [|(Ojs.fun_to_js 3
                                        (fun (x10661 : Ojs.t) ->
                                           fun (x10662 : Ojs.t) ->
                                             fun (x10663 : Ojs.t) ->
                                               Ojs.bool_to_js
                                                 (x10657
                                                    ~value:(T.t_of_js x10661)
                                                    ~index:(Ojs.float_of_js
                                                              x10662)
                                                    ~array:(Ojs.list_of_js
                                                              T.t_of_js
                                                              x10663))))|]);
                              (match x10658 with
                               | Some x10660 ->
                                   ignore
                                     (Ojs.call x10659 "push"
                                        [|(any_to_js x10660)|])
                               | None -> ());
                              x10659))|])
    let (findLast :
      t ->
        predicate:(value:T.t -> index:float -> array:T.t list -> unknown) ->
          ?thisArg:any -> unit -> T.t option)
      =
      fun (x10676 : t) ->
        fun
          ~predicate:(x10668 :
                       value:T.t -> index:float -> array:T.t list -> unknown)
          ->
          fun ?thisArg:(x10669 : any option) ->
            fun () ->
              Ojs.option_of_js T.t_of_js
                (let x10677 = t_to_js x10676 in
                 Ojs.call (Ojs.get_prop_ascii x10677 "findLast") "apply"
                   [|x10677;((let x10670 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x10670 "push"
                                   [|(Ojs.fun_to_js 3
                                        (fun (x10672 : Ojs.t) ->
                                           fun (x10673 : Ojs.t) ->
                                             fun (x10674 : Ojs.t) ->
                                               unknown_to_js
                                                 (x10668
                                                    ~value:(T.t_of_js x10672)
                                                    ~index:(Ojs.float_of_js
                                                              x10673)
                                                    ~array:(Ojs.list_of_js
                                                              T.t_of_js
                                                              x10674))))|]);
                              (match x10669 with
                               | Some x10671 ->
                                   ignore
                                     (Ojs.call x10670 "push"
                                        [|(any_to_js x10671)|])
                               | None -> ());
                              x10670))|])
    let (findLastIndex :
      t ->
        predicate:(value:T.t -> index:float -> array:T.t list -> unknown) ->
          ?thisArg:any -> unit -> float)
      =
      fun (x10687 : t) ->
        fun
          ~predicate:(x10679 :
                       value:T.t -> index:float -> array:T.t list -> unknown)
          ->
          fun ?thisArg:(x10680 : any option) ->
            fun () ->
              Ojs.float_of_js
                (let x10688 = t_to_js x10687 in
                 Ojs.call (Ojs.get_prop_ascii x10688 "findLastIndex") "apply"
                   [|x10688;((let x10681 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x10681 "push"
                                   [|(Ojs.fun_to_js 3
                                        (fun (x10683 : Ojs.t) ->
                                           fun (x10684 : Ojs.t) ->
                                             fun (x10685 : Ojs.t) ->
                                               unknown_to_js
                                                 (x10679
                                                    ~value:(T.t_of_js x10683)
                                                    ~index:(Ojs.float_of_js
                                                              x10684)
                                                    ~array:(Ojs.list_of_js
                                                              T.t_of_js
                                                              x10685))))|]);
                              (match x10680 with
                               | Some x10682 ->
                                   ignore
                                     (Ojs.call x10681 "push"
                                        [|(any_to_js x10682)|])
                               | None -> ());
                              x10681))|])
    let (toReversed : t -> T.t list) =
      fun (x10689 : t) ->
        Ojs.list_of_js T.t_of_js
          (Ojs.call (t_to_js x10689) "toReversed" [||])
    let (toSorted :
      t -> ?compareFn:(a:T.t -> b:T.t -> float) -> unit -> T.t list) =
      fun (x10696 : t) ->
        fun ?compareFn:(x10691 : (a:T.t -> b:T.t -> float) option) ->
          fun () ->
            Ojs.list_of_js T.t_of_js
              (let x10697 = t_to_js x10696 in
               Ojs.call (Ojs.get_prop_ascii x10697 "toSorted") "apply"
                 [|x10697;((let x10692 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x10691 with
                             | Some x10693 ->
                                 ignore
                                   (Ojs.call x10692 "push"
                                      [|(Ojs.fun_to_js 2
                                           (fun (x10694 : Ojs.t) ->
                                              fun (x10695 : Ojs.t) ->
                                                Ojs.float_to_js
                                                  (x10693
                                                     ~a:(T.t_of_js x10694)
                                                     ~b:(T.t_of_js x10695))))|])
                             | None -> ());
                            x10692))|])
    let (toSpliced :
      t -> start:float -> deleteCount:float -> items:T.t list -> T.t list) =
      fun (x10704 : t) ->
        fun ~start:(x10699 : float) ->
          fun ~deleteCount:(x10700 : float) ->
            fun ~items:(x10701 : T.t list) ->
              Ojs.list_of_js T.t_of_js
                (let x10705 = t_to_js x10704 in
                 Ojs.call (Ojs.get_prop_ascii x10705 "toSpliced") "apply"
                   [|x10705;((let x10702 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x10702 "push"
                                   [|(Ojs.float_to_js x10699)|]);
                              ignore
                                (Ojs.call x10702 "push"
                                   [|(Ojs.float_to_js x10700)|]);
                              List.iter
                                (fun (x10703 : T.t) ->
                                   ignore
                                     (Ojs.call x10702 "push"
                                        [|(T.t_to_js x10703)|])) x10701;
                              x10702))|])
    let (toSpliced :
      t -> start:float -> ?deleteCount:float -> unit -> T.t list) =
      fun (x10711 : t) ->
        fun ~start:(x10707 : float) ->
          fun ?deleteCount:(x10708 : float option) ->
            fun () ->
              Ojs.list_of_js T.t_of_js
                (let x10712 = t_to_js x10711 in
                 Ojs.call (Ojs.get_prop_ascii x10712 "toSpliced") "apply"
                   [|x10712;((let x10709 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x10709 "push"
                                   [|(Ojs.float_to_js x10707)|]);
                              (match x10708 with
                               | Some x10710 ->
                                   ignore
                                     (Ojs.call x10709 "push"
                                        [|(Ojs.float_to_js x10710)|])
                               | None -> ());
                              x10709))|])
    let (with_ : t -> index:float -> value:T.t -> T.t list) =
      fun (x10716 : t) ->
        fun ~index:(x10714 : float) ->
          fun ~value:(x10715 : T.t) ->
            Ojs.list_of_js T.t_of_js
              (Ojs.call (t_to_js x10716) "with"
                 [|(Ojs.float_to_js x10714);(T.t_to_js x10715)|])
    let (flatMap :
      t ->
        callback:(this:'This ->
                    value:T.t ->
                      index:float ->
                        array:T.t list -> [ `U1 of 'U  | `U2 of 'U parent ])
          -> ?thisArg:'This -> unit -> 'U list)
      =
      fun (x10730 : t) ->
        fun
          ~callback:(x10718 :
                      this:'This ->
                        value:T.t ->
                          index:float ->
                            array:T.t list ->
                              [ `U1 of 'U  | `U2 of 'U parent ])
          ->
          fun ?thisArg:(x10719 : 'This option) ->
            fun () ->
              Ojs.list_of_js Obj.magic
                (let x10731 = t_to_js x10730 in
                 Ojs.call (Ojs.get_prop_ascii x10731 "flatMap") "apply"
                   [|x10731;((let x10720 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x10720 "push"
                                   [|(Ojs.fun_to_js 4
                                        (fun (x10722 : Ojs.t) ->
                                           fun (x10723 : Ojs.t) ->
                                             fun (x10724 : Ojs.t) ->
                                               fun (x10725 : Ojs.t) ->
                                                 match x10718
                                                         ~this:(Obj.magic
                                                                  x10722)
                                                         ~value:(T.t_of_js
                                                                   x10723)
                                                         ~index:(Ojs.float_of_js
                                                                   x10724)
                                                         ~array:(Ojs.list_of_js
                                                                   T.t_of_js
                                                                   x10725)
                                                 with
                                                 | `U1 x10727 ->
                                                     Obj.magic x10727
                                                 | `U2 x10728 ->
                                                     parent_to_js Obj.magic
                                                       x10728))|]);
                              (match x10719 with
                               | Some x10721 ->
                                   ignore
                                     (Ojs.call x10720 "push"
                                        [|(Obj.magic x10721)|])
                               | None -> ());
                              x10720))|])
    let (flat :
      t -> this:'A -> ?depth:'D -> unit -> ('A, 'D) FlatArray.t list) =
      fun (x10737 : t) ->
        fun ~this:(x10733 : 'A) ->
          fun ?depth:(x10734 : 'D option) ->
            fun () ->
              Ojs.list_of_js
                (fun (x10739 : Ojs.t) ->
                   FlatArray.t_of_js Obj.magic Obj.magic x10739)
                (let x10738 = t_to_js x10737 in
                 Ojs.call (Ojs.get_prop_ascii x10738 "flat") "apply"
                   [|x10738;((let x10735 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x10735 "push"
                                   [|(Obj.magic x10733)|]);
                              (match x10734 with
                               | Some x10736 ->
                                   ignore
                                     (Ojs.call x10735 "push"
                                        [|(Obj.magic x10736)|])
                               | None -> ());
                              x10735))|])
    let (includes :
      t -> searchElement:T.t -> ?fromIndex:float -> unit -> bool) =
      fun (x10746 : t) ->
        fun ~searchElement:(x10742 : T.t) ->
          fun ?fromIndex:(x10743 : float option) ->
            fun () ->
              Ojs.bool_of_js
                (let x10747 = t_to_js x10746 in
                 Ojs.call (Ojs.get_prop_ascii x10747 "includes") "apply"
                   [|x10747;((let x10744 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x10744 "push"
                                   [|(T.t_to_js x10742)|]);
                              (match x10743 with
                               | Some x10745 ->
                                   ignore
                                     (Ojs.call x10744 "push"
                                        [|(Ojs.float_to_js x10745)|])
                               | None -> ());
                              x10744))|])
    let (entries : t -> (float * T.t) IterableIterator.t) =
      fun (x10748 : t) ->
        IterableIterator.t_of_js
          (fun (x10749 : Ojs.t) ->
             let x10750 = x10749 in
             ((Ojs.float_of_js (Ojs.array_get x10750 0)),
               (T.t_of_js (Ojs.array_get x10750 1))))
          (Ojs.call (t_to_js x10748) "entries" [||])
    let (keys : t -> float IterableIterator.t) =
      fun (x10751 : t) ->
        IterableIterator.t_of_js Ojs.float_of_js
          (Ojs.call (t_to_js x10751) "keys" [||])
    let (values : t -> T.t IterableIterator.t) =
      fun (x10753 : t) ->
        IterableIterator.t_of_js T.t_of_js
          (Ojs.call (t_to_js x10753) "values" [||])
    let (find :
      t ->
        predicate:(value:T.t -> index:float -> obj:T.t list -> bool) ->
          ?thisArg:any -> unit -> 'S option)
      =
      fun (x10763 : t) ->
        fun
          ~predicate:(x10755 :
                       value:T.t -> index:float -> obj:T.t list -> bool)
          ->
          fun ?thisArg:(x10756 : any option) ->
            fun () ->
              Ojs.option_of_js Obj.magic
                (let x10764 = t_to_js x10763 in
                 Ojs.call (Ojs.get_prop_ascii x10764 "find") "apply"
                   [|x10764;((let x10757 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x10757 "push"
                                   [|(Ojs.fun_to_js 3
                                        (fun (x10759 : Ojs.t) ->
                                           fun (x10760 : Ojs.t) ->
                                             fun (x10761 : Ojs.t) ->
                                               Ojs.bool_to_js
                                                 (x10755
                                                    ~value:(T.t_of_js x10759)
                                                    ~index:(Ojs.float_of_js
                                                              x10760)
                                                    ~obj:(Ojs.list_of_js
                                                            T.t_of_js x10761))))|]);
                              (match x10756 with
                               | Some x10758 ->
                                   ignore
                                     (Ojs.call x10757 "push"
                                        [|(any_to_js x10758)|])
                               | None -> ());
                              x10757))|])
    let (find :
      t ->
        predicate:(value:T.t -> index:float -> obj:T.t list -> unknown) ->
          ?thisArg:any -> unit -> T.t option)
      =
      fun (x10774 : t) ->
        fun
          ~predicate:(x10766 :
                       value:T.t -> index:float -> obj:T.t list -> unknown)
          ->
          fun ?thisArg:(x10767 : any option) ->
            fun () ->
              Ojs.option_of_js T.t_of_js
                (let x10775 = t_to_js x10774 in
                 Ojs.call (Ojs.get_prop_ascii x10775 "find") "apply"
                   [|x10775;((let x10768 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x10768 "push"
                                   [|(Ojs.fun_to_js 3
                                        (fun (x10770 : Ojs.t) ->
                                           fun (x10771 : Ojs.t) ->
                                             fun (x10772 : Ojs.t) ->
                                               unknown_to_js
                                                 (x10766
                                                    ~value:(T.t_of_js x10770)
                                                    ~index:(Ojs.float_of_js
                                                              x10771)
                                                    ~obj:(Ojs.list_of_js
                                                            T.t_of_js x10772))))|]);
                              (match x10767 with
                               | Some x10769 ->
                                   ignore
                                     (Ojs.call x10768 "push"
                                        [|(any_to_js x10769)|])
                               | None -> ());
                              x10768))|])
    let (findIndex :
      t ->
        predicate:(value:T.t -> index:float -> obj:T.t list -> unknown) ->
          ?thisArg:any -> unit -> float)
      =
      fun (x10785 : t) ->
        fun
          ~predicate:(x10777 :
                       value:T.t -> index:float -> obj:T.t list -> unknown)
          ->
          fun ?thisArg:(x10778 : any option) ->
            fun () ->
              Ojs.float_of_js
                (let x10786 = t_to_js x10785 in
                 Ojs.call (Ojs.get_prop_ascii x10786 "findIndex") "apply"
                   [|x10786;((let x10779 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x10779 "push"
                                   [|(Ojs.fun_to_js 3
                                        (fun (x10781 : Ojs.t) ->
                                           fun (x10782 : Ojs.t) ->
                                             fun (x10783 : Ojs.t) ->
                                               unknown_to_js
                                                 (x10777
                                                    ~value:(T.t_of_js x10781)
                                                    ~index:(Ojs.float_of_js
                                                              x10782)
                                                    ~obj:(Ojs.list_of_js
                                                            T.t_of_js x10783))))|]);
                              (match x10778 with
                               | Some x10780 ->
                                   ignore
                                     (Ojs.call x10779 "push"
                                        [|(any_to_js x10780)|])
                               | None -> ());
                              x10779))|])
    let (get_length : t -> float) =
      fun (x10787 : t) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x10787) "length")
    let (toString : t -> string) =
      fun (x10788 : t) ->
        Ojs.string_of_js (Ojs.call (t_to_js x10788) "toString" [||])
    let (toLocaleString : t -> string) =
      fun (x10789 : t) ->
        Ojs.string_of_js (Ojs.call (t_to_js x10789) "toLocaleString" [||])
    let (concat : t -> items:T.t ConcatArray.t list -> T.t list) =
      fun (x10794 : t) ->
        fun ~items:(x10790 : T.t ConcatArray.t list) ->
          Ojs.list_of_js T.t_of_js
            (let x10795 = t_to_js x10794 in
             Ojs.call (Ojs.get_prop_ascii x10795 "concat") "apply"
               [|x10795;((let x10791 =
                            Ojs.new_obj
                              (Ojs.get_prop_ascii Ojs.global "Array") 
                              [||] in
                          List.iter
                            (fun (x10792 : T.t ConcatArray.t) ->
                               ignore
                                 (Ojs.call x10791 "push"
                                    [|(ConcatArray.t_to_js T.t_to_js x10792)|]))
                            x10790;
                          x10791))|])
    let (concat :
      t -> items:[ `U1 of T.t  | `U2 of T.t ConcatArray.t ] list -> T.t list)
      =
      fun (x10803 : t) ->
        fun ~items:(x10797 : [ `U1 of T.t  | `U2 of T.t ConcatArray.t ] list)
          ->
          Ojs.list_of_js T.t_of_js
            (let x10804 = t_to_js x10803 in
             Ojs.call (Ojs.get_prop_ascii x10804 "concat") "apply"
               [|x10804;((let x10798 =
                            Ojs.new_obj
                              (Ojs.get_prop_ascii Ojs.global "Array") 
                              [||] in
                          List.iter
                            (fun
                               (x10799 :
                                 [ `U1 of T.t  | `U2 of T.t ConcatArray.t ])
                               ->
                               ignore
                                 (Ojs.call x10798 "push"
                                    [|((match x10799 with
                                        | `U1 x10800 -> T.t_to_js x10800
                                        | `U2 x10801 ->
                                            ConcatArray.t_to_js T.t_to_js
                                              x10801))|])) x10797;
                          x10798))|])
    let (join : t -> ?separator:string -> unit -> string) =
      fun (x10809 : t) ->
        fun ?separator:(x10806 : string option) ->
          fun () ->
            Ojs.string_of_js
              (let x10810 = t_to_js x10809 in
               Ojs.call (Ojs.get_prop_ascii x10810 "join") "apply"
                 [|x10810;((let x10807 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x10806 with
                             | Some x10808 ->
                                 ignore
                                   (Ojs.call x10807 "push"
                                      [|(Ojs.string_to_js x10808)|])
                             | None -> ());
                            x10807))|])
    let (slice : t -> ?start:float -> ?end_:float -> unit -> T.t list) =
      fun (x10816 : t) ->
        fun ?start:(x10811 : float option) ->
          fun ?end_:(x10812 : float option) ->
            fun () ->
              Ojs.list_of_js T.t_of_js
                (let x10817 = t_to_js x10816 in
                 Ojs.call (Ojs.get_prop_ascii x10817 "slice") "apply"
                   [|x10817;((let x10813 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              (match x10811 with
                               | Some x10815 ->
                                   ignore
                                     (Ojs.call x10813 "push"
                                        [|(Ojs.float_to_js x10815)|])
                               | None -> ());
                              (match x10812 with
                               | Some x10814 ->
                                   ignore
                                     (Ojs.call x10813 "push"
                                        [|(Ojs.float_to_js x10814)|])
                               | None -> ());
                              x10813))|])
    let (indexOf :
      t -> searchElement:T.t -> ?fromIndex:float -> unit -> float) =
      fun (x10823 : t) ->
        fun ~searchElement:(x10819 : T.t) ->
          fun ?fromIndex:(x10820 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x10824 = t_to_js x10823 in
                 Ojs.call (Ojs.get_prop_ascii x10824 "indexOf") "apply"
                   [|x10824;((let x10821 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x10821 "push"
                                   [|(T.t_to_js x10819)|]);
                              (match x10820 with
                               | Some x10822 ->
                                   ignore
                                     (Ojs.call x10821 "push"
                                        [|(Ojs.float_to_js x10822)|])
                               | None -> ());
                              x10821))|])
    let (lastIndexOf :
      t -> searchElement:T.t -> ?fromIndex:float -> unit -> float) =
      fun (x10829 : t) ->
        fun ~searchElement:(x10825 : T.t) ->
          fun ?fromIndex:(x10826 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x10830 = t_to_js x10829 in
                 Ojs.call (Ojs.get_prop_ascii x10830 "lastIndexOf") "apply"
                   [|x10830;((let x10827 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x10827 "push"
                                   [|(T.t_to_js x10825)|]);
                              (match x10826 with
                               | Some x10828 ->
                                   ignore
                                     (Ojs.call x10827 "push"
                                        [|(Ojs.float_to_js x10828)|])
                               | None -> ());
                              x10827))|])
    let (every :
      t ->
        predicate:(value:T.t -> index:float -> array:T.t list -> bool) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x10839 : t) ->
        fun
          ~predicate:(x10831 :
                       value:T.t -> index:float -> array:T.t list -> bool)
          ->
          fun ?thisArg:(x10832 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x10840 = t_to_js x10839 in
                 Ojs.call (Ojs.get_prop_ascii x10840 "every") "apply"
                   [|x10840;((let x10833 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x10833 "push"
                                   [|(Ojs.fun_to_js 3
                                        (fun (x10835 : Ojs.t) ->
                                           fun (x10836 : Ojs.t) ->
                                             fun (x10837 : Ojs.t) ->
                                               Ojs.bool_to_js
                                                 (x10831
                                                    ~value:(T.t_of_js x10835)
                                                    ~index:(Ojs.float_of_js
                                                              x10836)
                                                    ~array:(Ojs.list_of_js
                                                              T.t_of_js
                                                              x10837))))|]);
                              (match x10832 with
                               | Some x10834 ->
                                   ignore
                                     (Ojs.call x10833 "push"
                                        [|(any_to_js x10834)|])
                               | None -> ());
                              x10833))|])
    let (every :
      t ->
        predicate:(value:T.t -> index:float -> array:T.t list -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x10849 : t) ->
        fun
          ~predicate:(x10841 :
                       value:T.t -> index:float -> array:T.t list -> unknown)
          ->
          fun ?thisArg:(x10842 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x10850 = t_to_js x10849 in
                 Ojs.call (Ojs.get_prop_ascii x10850 "every") "apply"
                   [|x10850;((let x10843 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x10843 "push"
                                   [|(Ojs.fun_to_js 3
                                        (fun (x10845 : Ojs.t) ->
                                           fun (x10846 : Ojs.t) ->
                                             fun (x10847 : Ojs.t) ->
                                               unknown_to_js
                                                 (x10841
                                                    ~value:(T.t_of_js x10845)
                                                    ~index:(Ojs.float_of_js
                                                              x10846)
                                                    ~array:(Ojs.list_of_js
                                                              T.t_of_js
                                                              x10847))))|]);
                              (match x10842 with
                               | Some x10844 ->
                                   ignore
                                     (Ojs.call x10843 "push"
                                        [|(any_to_js x10844)|])
                               | None -> ());
                              x10843))|])
    let (some :
      t ->
        predicate:(value:T.t -> index:float -> array:T.t list -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x10859 : t) ->
        fun
          ~predicate:(x10851 :
                       value:T.t -> index:float -> array:T.t list -> unknown)
          ->
          fun ?thisArg:(x10852 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x10860 = t_to_js x10859 in
                 Ojs.call (Ojs.get_prop_ascii x10860 "some") "apply"
                   [|x10860;((let x10853 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x10853 "push"
                                   [|(Ojs.fun_to_js 3
                                        (fun (x10855 : Ojs.t) ->
                                           fun (x10856 : Ojs.t) ->
                                             fun (x10857 : Ojs.t) ->
                                               unknown_to_js
                                                 (x10851
                                                    ~value:(T.t_of_js x10855)
                                                    ~index:(Ojs.float_of_js
                                                              x10856)
                                                    ~array:(Ojs.list_of_js
                                                              T.t_of_js
                                                              x10857))))|]);
                              (match x10852 with
                               | Some x10854 ->
                                   ignore
                                     (Ojs.call x10853 "push"
                                        [|(any_to_js x10854)|])
                               | None -> ());
                              x10853))|])
    let (forEach :
      t ->
        callbackfn:(value:T.t -> index:float -> array:T.t list -> unit) ->
          ?thisArg:any -> unit -> unit)
      =
      fun (x10869 : t) ->
        fun
          ~callbackfn:(x10861 :
                        value:T.t -> index:float -> array:T.t list -> unit)
          ->
          fun ?thisArg:(x10862 : any option) ->
            fun () ->
              ignore
                (let x10870 = t_to_js x10869 in
                 Ojs.call (Ojs.get_prop_ascii x10870 "forEach") "apply"
                   [|x10870;((let x10863 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x10863 "push"
                                   [|(Ojs.fun_to_js 3
                                        (fun (x10865 : Ojs.t) ->
                                           fun (x10866 : Ojs.t) ->
                                             fun (x10867 : Ojs.t) ->
                                               x10861
                                                 ~value:(T.t_of_js x10865)
                                                 ~index:(Ojs.float_of_js
                                                           x10866)
                                                 ~array:(Ojs.list_of_js
                                                           T.t_of_js x10867)))|]);
                              (match x10862 with
                               | Some x10864 ->
                                   ignore
                                     (Ojs.call x10863 "push"
                                        [|(any_to_js x10864)|])
                               | None -> ());
                              x10863))|])
    let (map :
      t ->
        callbackfn:(value:T.t -> index:float -> array:T.t list -> 'U) ->
          ?thisArg:any -> unit -> 'U list)
      =
      fun (x10879 : t) ->
        fun
          ~callbackfn:(x10871 :
                        value:T.t -> index:float -> array:T.t list -> 'U)
          ->
          fun ?thisArg:(x10872 : any option) ->
            fun () ->
              Ojs.list_of_js Obj.magic
                (let x10880 = t_to_js x10879 in
                 Ojs.call (Ojs.get_prop_ascii x10880 "map") "apply"
                   [|x10880;((let x10873 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x10873 "push"
                                   [|(Ojs.fun_to_js 3
                                        (fun (x10875 : Ojs.t) ->
                                           fun (x10876 : Ojs.t) ->
                                             fun (x10877 : Ojs.t) ->
                                               Obj.magic
                                                 (x10871
                                                    ~value:(T.t_of_js x10875)
                                                    ~index:(Ojs.float_of_js
                                                              x10876)
                                                    ~array:(Ojs.list_of_js
                                                              T.t_of_js
                                                              x10877))))|]);
                              (match x10872 with
                               | Some x10874 ->
                                   ignore
                                     (Ojs.call x10873 "push"
                                        [|(any_to_js x10874)|])
                               | None -> ());
                              x10873))|])
    let (filter :
      t ->
        predicate:(value:T.t -> index:float -> array:T.t list -> bool) ->
          ?thisArg:any -> unit -> 'S list)
      =
      fun (x10890 : t) ->
        fun
          ~predicate:(x10882 :
                       value:T.t -> index:float -> array:T.t list -> bool)
          ->
          fun ?thisArg:(x10883 : any option) ->
            fun () ->
              Ojs.list_of_js Obj.magic
                (let x10891 = t_to_js x10890 in
                 Ojs.call (Ojs.get_prop_ascii x10891 "filter") "apply"
                   [|x10891;((let x10884 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x10884 "push"
                                   [|(Ojs.fun_to_js 3
                                        (fun (x10886 : Ojs.t) ->
                                           fun (x10887 : Ojs.t) ->
                                             fun (x10888 : Ojs.t) ->
                                               Ojs.bool_to_js
                                                 (x10882
                                                    ~value:(T.t_of_js x10886)
                                                    ~index:(Ojs.float_of_js
                                                              x10887)
                                                    ~array:(Ojs.list_of_js
                                                              T.t_of_js
                                                              x10888))))|]);
                              (match x10883 with
                               | Some x10885 ->
                                   ignore
                                     (Ojs.call x10884 "push"
                                        [|(any_to_js x10885)|])
                               | None -> ());
                              x10884))|])
    let (filter :
      t ->
        predicate:(value:T.t -> index:float -> array:T.t list -> unknown) ->
          ?thisArg:any -> unit -> T.t list)
      =
      fun (x10901 : t) ->
        fun
          ~predicate:(x10893 :
                       value:T.t -> index:float -> array:T.t list -> unknown)
          ->
          fun ?thisArg:(x10894 : any option) ->
            fun () ->
              Ojs.list_of_js T.t_of_js
                (let x10902 = t_to_js x10901 in
                 Ojs.call (Ojs.get_prop_ascii x10902 "filter") "apply"
                   [|x10902;((let x10895 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x10895 "push"
                                   [|(Ojs.fun_to_js 3
                                        (fun (x10897 : Ojs.t) ->
                                           fun (x10898 : Ojs.t) ->
                                             fun (x10899 : Ojs.t) ->
                                               unknown_to_js
                                                 (x10893
                                                    ~value:(T.t_of_js x10897)
                                                    ~index:(Ojs.float_of_js
                                                              x10898)
                                                    ~array:(Ojs.list_of_js
                                                              T.t_of_js
                                                              x10899))))|]);
                              (match x10894 with
                               | Some x10896 ->
                                   ignore
                                     (Ojs.call x10895 "push"
                                        [|(any_to_js x10896)|])
                               | None -> ());
                              x10895))|])
    let (reduce :
      t ->
        callbackfn:(previousValue:T.t ->
                      currentValue:T.t ->
                        currentIndex:float -> array:T.t list -> T.t)
          -> T.t)
      =
      fun (x10910 : t) ->
        fun
          ~callbackfn:(x10904 :
                        previousValue:T.t ->
                          currentValue:T.t ->
                            currentIndex:float -> array:T.t list -> T.t)
          ->
          T.t_of_js
            (Ojs.call (t_to_js x10910) "reduce"
               [|(Ojs.fun_to_js 4
                    (fun (x10905 : Ojs.t) ->
                       fun (x10906 : Ojs.t) ->
                         fun (x10907 : Ojs.t) ->
                           fun (x10908 : Ojs.t) ->
                             T.t_to_js
                               (x10904 ~previousValue:(T.t_of_js x10905)
                                  ~currentValue:(T.t_of_js x10906)
                                  ~currentIndex:(Ojs.float_of_js x10907)
                                  ~array:(Ojs.list_of_js T.t_of_js x10908))))|])
    let (reduce :
      t ->
        callbackfn:(previousValue:T.t ->
                      currentValue:T.t ->
                        currentIndex:float -> array:T.t list -> T.t)
          -> initialValue:T.t -> T.t)
      =
      fun (x10918 : t) ->
        fun
          ~callbackfn:(x10911 :
                        previousValue:T.t ->
                          currentValue:T.t ->
                            currentIndex:float -> array:T.t list -> T.t)
          ->
          fun ~initialValue:(x10917 : T.t) ->
            T.t_of_js
              (Ojs.call (t_to_js x10918) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x10912 : Ojs.t) ->
                         fun (x10913 : Ojs.t) ->
                           fun (x10914 : Ojs.t) ->
                             fun (x10915 : Ojs.t) ->
                               T.t_to_js
                                 (x10911 ~previousValue:(T.t_of_js x10912)
                                    ~currentValue:(T.t_of_js x10913)
                                    ~currentIndex:(Ojs.float_of_js x10914)
                                    ~array:(Ojs.list_of_js T.t_of_js x10915))));(
                   T.t_to_js x10917)|])
    let (reduce :
      t ->
        callbackfn:(previousValue:'U ->
                      currentValue:T.t ->
                        currentIndex:float -> array:T.t list -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x10926 : t) ->
        fun
          ~callbackfn:(x10919 :
                        previousValue:'U ->
                          currentValue:T.t ->
                            currentIndex:float -> array:T.t list -> 'U)
          ->
          fun ~initialValue:(x10925 : 'U) ->
            Obj.magic
              (Ojs.call (t_to_js x10926) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x10920 : Ojs.t) ->
                         fun (x10921 : Ojs.t) ->
                           fun (x10922 : Ojs.t) ->
                             fun (x10923 : Ojs.t) ->
                               Obj.magic
                                 (x10919 ~previousValue:(Obj.magic x10920)
                                    ~currentValue:(T.t_of_js x10921)
                                    ~currentIndex:(Ojs.float_of_js x10922)
                                    ~array:(Ojs.list_of_js T.t_of_js x10923))));(
                   Obj.magic x10925)|])
    let (reduceRight :
      t ->
        callbackfn:(previousValue:T.t ->
                      currentValue:T.t ->
                        currentIndex:float -> array:T.t list -> T.t)
          -> T.t)
      =
      fun (x10933 : t) ->
        fun
          ~callbackfn:(x10927 :
                        previousValue:T.t ->
                          currentValue:T.t ->
                            currentIndex:float -> array:T.t list -> T.t)
          ->
          T.t_of_js
            (Ojs.call (t_to_js x10933) "reduceRight"
               [|(Ojs.fun_to_js 4
                    (fun (x10928 : Ojs.t) ->
                       fun (x10929 : Ojs.t) ->
                         fun (x10930 : Ojs.t) ->
                           fun (x10931 : Ojs.t) ->
                             T.t_to_js
                               (x10927 ~previousValue:(T.t_of_js x10928)
                                  ~currentValue:(T.t_of_js x10929)
                                  ~currentIndex:(Ojs.float_of_js x10930)
                                  ~array:(Ojs.list_of_js T.t_of_js x10931))))|])
    let (reduceRight :
      t ->
        callbackfn:(previousValue:T.t ->
                      currentValue:T.t ->
                        currentIndex:float -> array:T.t list -> T.t)
          -> initialValue:T.t -> T.t)
      =
      fun (x10941 : t) ->
        fun
          ~callbackfn:(x10934 :
                        previousValue:T.t ->
                          currentValue:T.t ->
                            currentIndex:float -> array:T.t list -> T.t)
          ->
          fun ~initialValue:(x10940 : T.t) ->
            T.t_of_js
              (Ojs.call (t_to_js x10941) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x10935 : Ojs.t) ->
                         fun (x10936 : Ojs.t) ->
                           fun (x10937 : Ojs.t) ->
                             fun (x10938 : Ojs.t) ->
                               T.t_to_js
                                 (x10934 ~previousValue:(T.t_of_js x10935)
                                    ~currentValue:(T.t_of_js x10936)
                                    ~currentIndex:(Ojs.float_of_js x10937)
                                    ~array:(Ojs.list_of_js T.t_of_js x10938))));(
                   T.t_to_js x10940)|])
    let (reduceRight :
      t ->
        callbackfn:(previousValue:'U ->
                      currentValue:T.t ->
                        currentIndex:float -> array:T.t list -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x10949 : t) ->
        fun
          ~callbackfn:(x10942 :
                        previousValue:'U ->
                          currentValue:T.t ->
                            currentIndex:float -> array:T.t list -> 'U)
          ->
          fun ~initialValue:(x10948 : 'U) ->
            Obj.magic
              (Ojs.call (t_to_js x10949) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x10943 : Ojs.t) ->
                         fun (x10944 : Ojs.t) ->
                           fun (x10945 : Ojs.t) ->
                             fun (x10946 : Ojs.t) ->
                               Obj.magic
                                 (x10942 ~previousValue:(Obj.magic x10943)
                                    ~currentValue:(T.t_of_js x10944)
                                    ~currentIndex:(Ojs.float_of_js x10945)
                                    ~array:(Ojs.list_of_js T.t_of_js x10946))));(
                   Obj.magic x10948)|])
    let (get : t -> float -> T.t) =
      fun (x10950 : t) ->
        fun (x10951 : float) ->
          T.t_of_js (Ojs.get_prop (t_to_js x10950) (Ojs.float_to_js x10951))
  end
module ConcatArray_Make(T:Ojs.T) =
  struct
    type 'T parent = 'T ConcatArray.t
    let rec parent_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T parent =
      fun (type __T) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x10954 : Ojs.t) -> ConcatArray.t_of_js __T_of_js x10954
    and parent_to_js : 'T . ('T -> Ojs.t) -> 'T parent -> Ojs.t =
      fun (type __T) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x10952 : __T ConcatArray.t) ->
            ConcatArray.t_to_js __T_to_js x10952
    type t = T.t parent
    let rec t_of_js : Ojs.t -> t =
      fun (x10958 : Ojs.t) -> parent_of_js T.t_of_js x10958
    and t_to_js : t -> Ojs.t =
      fun (x10956 : T.t parent) -> parent_to_js T.t_to_js x10956
    let (get_length : t -> float) =
      fun (x10960 : t) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x10960) "length")
    let (get : t -> float -> T.t) =
      fun (x10961 : t) ->
        fun (x10962 : float) ->
          T.t_of_js (Ojs.get_prop (t_to_js x10961) (Ojs.float_to_js x10962))
    let (join : t -> ?separator:string -> unit -> string) =
      fun (x10966 : t) ->
        fun ?separator:(x10963 : string option) ->
          fun () ->
            Ojs.string_of_js
              (let x10967 = t_to_js x10966 in
               Ojs.call (Ojs.get_prop_ascii x10967 "join") "apply"
                 [|x10967;((let x10964 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x10963 with
                             | Some x10965 ->
                                 ignore
                                   (Ojs.call x10964 "push"
                                      [|(Ojs.string_to_js x10965)|])
                             | None -> ());
                            x10964))|])
    let (slice : t -> ?start:float -> ?end_:float -> unit -> T.t list) =
      fun (x10973 : t) ->
        fun ?start:(x10968 : float option) ->
          fun ?end_:(x10969 : float option) ->
            fun () ->
              Ojs.list_of_js T.t_of_js
                (let x10974 = t_to_js x10973 in
                 Ojs.call (Ojs.get_prop_ascii x10974 "slice") "apply"
                   [|x10974;((let x10970 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              (match x10968 with
                               | Some x10972 ->
                                   ignore
                                     (Ojs.call x10970 "push"
                                        [|(Ojs.float_to_js x10972)|])
                               | None -> ());
                              (match x10969 with
                               | Some x10971 ->
                                   ignore
                                     (Ojs.call x10970 "push"
                                        [|(Ojs.float_to_js x10971)|])
                               | None -> ());
                              x10970))|])
  end
module Array_Make(T:Ojs.T) =
  struct
    type 'T parent = 'T Array.t
    let rec parent_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T parent =
      fun (type __T) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x10978 : Ojs.t) -> Array.t_of_js __T_of_js x10978
    and parent_to_js : 'T . ('T -> Ojs.t) -> 'T parent -> Ojs.t =
      fun (type __T) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x10976 : __T Array.t) -> Array.t_to_js __T_to_js x10976
    type t = T.t parent
    let rec t_of_js : Ojs.t -> t =
      fun (x10982 : Ojs.t) -> parent_of_js T.t_of_js x10982
    and t_to_js : t -> Ojs.t =
      fun (x10980 : T.t parent) -> parent_to_js T.t_to_js x10980
    let (at : t -> index:float -> T.t option) =
      fun (x10985 : t) ->
        fun ~index:(x10984 : float) ->
          Ojs.option_of_js T.t_of_js
            (Ojs.call (t_to_js x10985) "at" [|(Ojs.float_to_js x10984)|])
    let (findLast :
      t ->
        predicate:(value:T.t -> index:float -> array:T.t list -> bool) ->
          ?thisArg:any -> unit -> 'S option)
      =
      fun (x10995 : t) ->
        fun
          ~predicate:(x10987 :
                       value:T.t -> index:float -> array:T.t list -> bool)
          ->
          fun ?thisArg:(x10988 : any option) ->
            fun () ->
              Ojs.option_of_js Obj.magic
                (let x10996 = t_to_js x10995 in
                 Ojs.call (Ojs.get_prop_ascii x10996 "findLast") "apply"
                   [|x10996;((let x10989 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x10989 "push"
                                   [|(Ojs.fun_to_js 3
                                        (fun (x10991 : Ojs.t) ->
                                           fun (x10992 : Ojs.t) ->
                                             fun (x10993 : Ojs.t) ->
                                               Ojs.bool_to_js
                                                 (x10987
                                                    ~value:(T.t_of_js x10991)
                                                    ~index:(Ojs.float_of_js
                                                              x10992)
                                                    ~array:(Ojs.list_of_js
                                                              T.t_of_js
                                                              x10993))))|]);
                              (match x10988 with
                               | Some x10990 ->
                                   ignore
                                     (Ojs.call x10989 "push"
                                        [|(any_to_js x10990)|])
                               | None -> ());
                              x10989))|])
    let (findLast :
      t ->
        predicate:(value:T.t -> index:float -> array:T.t list -> unknown) ->
          ?thisArg:any -> unit -> T.t option)
      =
      fun (x11006 : t) ->
        fun
          ~predicate:(x10998 :
                       value:T.t -> index:float -> array:T.t list -> unknown)
          ->
          fun ?thisArg:(x10999 : any option) ->
            fun () ->
              Ojs.option_of_js T.t_of_js
                (let x11007 = t_to_js x11006 in
                 Ojs.call (Ojs.get_prop_ascii x11007 "findLast") "apply"
                   [|x11007;((let x11000 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x11000 "push"
                                   [|(Ojs.fun_to_js 3
                                        (fun (x11002 : Ojs.t) ->
                                           fun (x11003 : Ojs.t) ->
                                             fun (x11004 : Ojs.t) ->
                                               unknown_to_js
                                                 (x10998
                                                    ~value:(T.t_of_js x11002)
                                                    ~index:(Ojs.float_of_js
                                                              x11003)
                                                    ~array:(Ojs.list_of_js
                                                              T.t_of_js
                                                              x11004))))|]);
                              (match x10999 with
                               | Some x11001 ->
                                   ignore
                                     (Ojs.call x11000 "push"
                                        [|(any_to_js x11001)|])
                               | None -> ());
                              x11000))|])
    let (findLastIndex :
      t ->
        predicate:(value:T.t -> index:float -> array:T.t list -> unknown) ->
          ?thisArg:any -> unit -> float)
      =
      fun (x11017 : t) ->
        fun
          ~predicate:(x11009 :
                       value:T.t -> index:float -> array:T.t list -> unknown)
          ->
          fun ?thisArg:(x11010 : any option) ->
            fun () ->
              Ojs.float_of_js
                (let x11018 = t_to_js x11017 in
                 Ojs.call (Ojs.get_prop_ascii x11018 "findLastIndex") "apply"
                   [|x11018;((let x11011 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x11011 "push"
                                   [|(Ojs.fun_to_js 3
                                        (fun (x11013 : Ojs.t) ->
                                           fun (x11014 : Ojs.t) ->
                                             fun (x11015 : Ojs.t) ->
                                               unknown_to_js
                                                 (x11009
                                                    ~value:(T.t_of_js x11013)
                                                    ~index:(Ojs.float_of_js
                                                              x11014)
                                                    ~array:(Ojs.list_of_js
                                                              T.t_of_js
                                                              x11015))))|]);
                              (match x11010 with
                               | Some x11012 ->
                                   ignore
                                     (Ojs.call x11011 "push"
                                        [|(any_to_js x11012)|])
                               | None -> ());
                              x11011))|])
    let (toReversed : t -> T.t list) =
      fun (x11019 : t) ->
        Ojs.list_of_js T.t_of_js
          (Ojs.call (t_to_js x11019) "toReversed" [||])
    let (toSorted :
      t -> ?compareFn:(a:T.t -> b:T.t -> float) -> unit -> T.t list) =
      fun (x11026 : t) ->
        fun ?compareFn:(x11021 : (a:T.t -> b:T.t -> float) option) ->
          fun () ->
            Ojs.list_of_js T.t_of_js
              (let x11027 = t_to_js x11026 in
               Ojs.call (Ojs.get_prop_ascii x11027 "toSorted") "apply"
                 [|x11027;((let x11022 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x11021 with
                             | Some x11023 ->
                                 ignore
                                   (Ojs.call x11022 "push"
                                      [|(Ojs.fun_to_js 2
                                           (fun (x11024 : Ojs.t) ->
                                              fun (x11025 : Ojs.t) ->
                                                Ojs.float_to_js
                                                  (x11023
                                                     ~a:(T.t_of_js x11024)
                                                     ~b:(T.t_of_js x11025))))|])
                             | None -> ());
                            x11022))|])
    let (toSpliced :
      t -> start:float -> deleteCount:float -> items:T.t list -> T.t list) =
      fun (x11034 : t) ->
        fun ~start:(x11029 : float) ->
          fun ~deleteCount:(x11030 : float) ->
            fun ~items:(x11031 : T.t list) ->
              Ojs.list_of_js T.t_of_js
                (let x11035 = t_to_js x11034 in
                 Ojs.call (Ojs.get_prop_ascii x11035 "toSpliced") "apply"
                   [|x11035;((let x11032 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x11032 "push"
                                   [|(Ojs.float_to_js x11029)|]);
                              ignore
                                (Ojs.call x11032 "push"
                                   [|(Ojs.float_to_js x11030)|]);
                              List.iter
                                (fun (x11033 : T.t) ->
                                   ignore
                                     (Ojs.call x11032 "push"
                                        [|(T.t_to_js x11033)|])) x11031;
                              x11032))|])
    let (toSpliced :
      t -> start:float -> ?deleteCount:float -> unit -> T.t list) =
      fun (x11041 : t) ->
        fun ~start:(x11037 : float) ->
          fun ?deleteCount:(x11038 : float option) ->
            fun () ->
              Ojs.list_of_js T.t_of_js
                (let x11042 = t_to_js x11041 in
                 Ojs.call (Ojs.get_prop_ascii x11042 "toSpliced") "apply"
                   [|x11042;((let x11039 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x11039 "push"
                                   [|(Ojs.float_to_js x11037)|]);
                              (match x11038 with
                               | Some x11040 ->
                                   ignore
                                     (Ojs.call x11039 "push"
                                        [|(Ojs.float_to_js x11040)|])
                               | None -> ());
                              x11039))|])
    let (with_ : t -> index:float -> value:T.t -> T.t list) =
      fun (x11046 : t) ->
        fun ~index:(x11044 : float) ->
          fun ~value:(x11045 : T.t) ->
            Ojs.list_of_js T.t_of_js
              (Ojs.call (t_to_js x11046) "with"
                 [|(Ojs.float_to_js x11044);(T.t_to_js x11045)|])
    let (flatMap :
      t ->
        callback:(this:'This ->
                    value:T.t ->
                      index:float ->
                        array:T.t list ->
                          [ `U1 of 'U  | `U2 of 'U ReadonlyArray.t ])
          -> ?thisArg:'This -> unit -> 'U list)
      =
      fun (x11060 : t) ->
        fun
          ~callback:(x11048 :
                      this:'This ->
                        value:T.t ->
                          index:float ->
                            array:T.t list ->
                              [ `U1 of 'U  | `U2 of 'U ReadonlyArray.t ])
          ->
          fun ?thisArg:(x11049 : 'This option) ->
            fun () ->
              Ojs.list_of_js Obj.magic
                (let x11061 = t_to_js x11060 in
                 Ojs.call (Ojs.get_prop_ascii x11061 "flatMap") "apply"
                   [|x11061;((let x11050 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x11050 "push"
                                   [|(Ojs.fun_to_js 4
                                        (fun (x11052 : Ojs.t) ->
                                           fun (x11053 : Ojs.t) ->
                                             fun (x11054 : Ojs.t) ->
                                               fun (x11055 : Ojs.t) ->
                                                 match x11048
                                                         ~this:(Obj.magic
                                                                  x11052)
                                                         ~value:(T.t_of_js
                                                                   x11053)
                                                         ~index:(Ojs.float_of_js
                                                                   x11054)
                                                         ~array:(Ojs.list_of_js
                                                                   T.t_of_js
                                                                   x11055)
                                                 with
                                                 | `U1 x11057 ->
                                                     Obj.magic x11057
                                                 | `U2 x11058 ->
                                                     ReadonlyArray.t_to_js
                                                       Obj.magic x11058))|]);
                              (match x11049 with
                               | Some x11051 ->
                                   ignore
                                     (Ojs.call x11050 "push"
                                        [|(Obj.magic x11051)|])
                               | None -> ());
                              x11050))|])
    let (flat :
      t -> this:'A -> ?depth:'D -> unit -> ('A, 'D) FlatArray.t list) =
      fun (x11067 : t) ->
        fun ~this:(x11063 : 'A) ->
          fun ?depth:(x11064 : 'D option) ->
            fun () ->
              Ojs.list_of_js
                (fun (x11069 : Ojs.t) ->
                   FlatArray.t_of_js Obj.magic Obj.magic x11069)
                (let x11068 = t_to_js x11067 in
                 Ojs.call (Ojs.get_prop_ascii x11068 "flat") "apply"
                   [|x11068;((let x11065 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x11065 "push"
                                   [|(Obj.magic x11063)|]);
                              (match x11064 with
                               | Some x11066 ->
                                   ignore
                                     (Ojs.call x11065 "push"
                                        [|(Obj.magic x11066)|])
                               | None -> ());
                              x11065))|])
    let (includes :
      t -> searchElement:T.t -> ?fromIndex:float -> unit -> bool) =
      fun (x11076 : t) ->
        fun ~searchElement:(x11072 : T.t) ->
          fun ?fromIndex:(x11073 : float option) ->
            fun () ->
              Ojs.bool_of_js
                (let x11077 = t_to_js x11076 in
                 Ojs.call (Ojs.get_prop_ascii x11077 "includes") "apply"
                   [|x11077;((let x11074 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x11074 "push"
                                   [|(T.t_to_js x11072)|]);
                              (match x11073 with
                               | Some x11075 ->
                                   ignore
                                     (Ojs.call x11074 "push"
                                        [|(Ojs.float_to_js x11075)|])
                               | None -> ());
                              x11074))|])
    let (entries : t -> (float * T.t) IterableIterator.t) =
      fun (x11078 : t) ->
        IterableIterator.t_of_js
          (fun (x11079 : Ojs.t) ->
             let x11080 = x11079 in
             ((Ojs.float_of_js (Ojs.array_get x11080 0)),
               (T.t_of_js (Ojs.array_get x11080 1))))
          (Ojs.call (t_to_js x11078) "entries" [||])
    let (keys : t -> float IterableIterator.t) =
      fun (x11081 : t) ->
        IterableIterator.t_of_js Ojs.float_of_js
          (Ojs.call (t_to_js x11081) "keys" [||])
    let (values : t -> T.t IterableIterator.t) =
      fun (x11083 : t) ->
        IterableIterator.t_of_js T.t_of_js
          (Ojs.call (t_to_js x11083) "values" [||])
    let (find :
      t ->
        predicate:(value:T.t -> index:float -> obj:T.t list -> bool) ->
          ?thisArg:any -> unit -> 'S option)
      =
      fun (x11093 : t) ->
        fun
          ~predicate:(x11085 :
                       value:T.t -> index:float -> obj:T.t list -> bool)
          ->
          fun ?thisArg:(x11086 : any option) ->
            fun () ->
              Ojs.option_of_js Obj.magic
                (let x11094 = t_to_js x11093 in
                 Ojs.call (Ojs.get_prop_ascii x11094 "find") "apply"
                   [|x11094;((let x11087 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x11087 "push"
                                   [|(Ojs.fun_to_js 3
                                        (fun (x11089 : Ojs.t) ->
                                           fun (x11090 : Ojs.t) ->
                                             fun (x11091 : Ojs.t) ->
                                               Ojs.bool_to_js
                                                 (x11085
                                                    ~value:(T.t_of_js x11089)
                                                    ~index:(Ojs.float_of_js
                                                              x11090)
                                                    ~obj:(Ojs.list_of_js
                                                            T.t_of_js x11091))))|]);
                              (match x11086 with
                               | Some x11088 ->
                                   ignore
                                     (Ojs.call x11087 "push"
                                        [|(any_to_js x11088)|])
                               | None -> ());
                              x11087))|])
    let (find :
      t ->
        predicate:(value:T.t -> index:float -> obj:T.t list -> unknown) ->
          ?thisArg:any -> unit -> T.t option)
      =
      fun (x11104 : t) ->
        fun
          ~predicate:(x11096 :
                       value:T.t -> index:float -> obj:T.t list -> unknown)
          ->
          fun ?thisArg:(x11097 : any option) ->
            fun () ->
              Ojs.option_of_js T.t_of_js
                (let x11105 = t_to_js x11104 in
                 Ojs.call (Ojs.get_prop_ascii x11105 "find") "apply"
                   [|x11105;((let x11098 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x11098 "push"
                                   [|(Ojs.fun_to_js 3
                                        (fun (x11100 : Ojs.t) ->
                                           fun (x11101 : Ojs.t) ->
                                             fun (x11102 : Ojs.t) ->
                                               unknown_to_js
                                                 (x11096
                                                    ~value:(T.t_of_js x11100)
                                                    ~index:(Ojs.float_of_js
                                                              x11101)
                                                    ~obj:(Ojs.list_of_js
                                                            T.t_of_js x11102))))|]);
                              (match x11097 with
                               | Some x11099 ->
                                   ignore
                                     (Ojs.call x11098 "push"
                                        [|(any_to_js x11099)|])
                               | None -> ());
                              x11098))|])
    let (findIndex :
      t ->
        predicate:(value:T.t -> index:float -> obj:T.t list -> unknown) ->
          ?thisArg:any -> unit -> float)
      =
      fun (x11115 : t) ->
        fun
          ~predicate:(x11107 :
                       value:T.t -> index:float -> obj:T.t list -> unknown)
          ->
          fun ?thisArg:(x11108 : any option) ->
            fun () ->
              Ojs.float_of_js
                (let x11116 = t_to_js x11115 in
                 Ojs.call (Ojs.get_prop_ascii x11116 "findIndex") "apply"
                   [|x11116;((let x11109 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x11109 "push"
                                   [|(Ojs.fun_to_js 3
                                        (fun (x11111 : Ojs.t) ->
                                           fun (x11112 : Ojs.t) ->
                                             fun (x11113 : Ojs.t) ->
                                               unknown_to_js
                                                 (x11107
                                                    ~value:(T.t_of_js x11111)
                                                    ~index:(Ojs.float_of_js
                                                              x11112)
                                                    ~obj:(Ojs.list_of_js
                                                            T.t_of_js x11113))))|]);
                              (match x11108 with
                               | Some x11110 ->
                                   ignore
                                     (Ojs.call x11109 "push"
                                        [|(any_to_js x11110)|])
                               | None -> ());
                              x11109))|])
    let (fill : t -> value:T.t -> ?start:float -> ?end_:float -> unit -> t) =
      fun (x11123 : t) ->
        fun ~value:(x11117 : T.t) ->
          fun ?start:(x11118 : float option) ->
            fun ?end_:(x11119 : float option) ->
              fun () ->
                t_of_js
                  (let x11124 = t_to_js x11123 in
                   Ojs.call (Ojs.get_prop_ascii x11124 "fill") "apply"
                     [|x11124;((let x11120 =
                                  Ojs.new_obj
                                    (Ojs.get_prop_ascii Ojs.global "Array")
                                    [||] in
                                ignore
                                  (Ojs.call x11120 "push"
                                     [|(T.t_to_js x11117)|]);
                                (match x11118 with
                                 | Some x11122 ->
                                     ignore
                                       (Ojs.call x11120 "push"
                                          [|(Ojs.float_to_js x11122)|])
                                 | None -> ());
                                (match x11119 with
                                 | Some x11121 ->
                                     ignore
                                       (Ojs.call x11120 "push"
                                          [|(Ojs.float_to_js x11121)|])
                                 | None -> ());
                                x11120))|])
    let (copyWithin :
      t -> target:float -> start:float -> ?end_:float -> unit -> t) =
      fun (x11130 : t) ->
        fun ~target:(x11125 : float) ->
          fun ~start:(x11126 : float) ->
            fun ?end_:(x11127 : float option) ->
              fun () ->
                t_of_js
                  (let x11131 = t_to_js x11130 in
                   Ojs.call (Ojs.get_prop_ascii x11131 "copyWithin") "apply"
                     [|x11131;((let x11128 =
                                  Ojs.new_obj
                                    (Ojs.get_prop_ascii Ojs.global "Array")
                                    [||] in
                                ignore
                                  (Ojs.call x11128 "push"
                                     [|(Ojs.float_to_js x11125)|]);
                                ignore
                                  (Ojs.call x11128 "push"
                                     [|(Ojs.float_to_js x11126)|]);
                                (match x11127 with
                                 | Some x11129 ->
                                     ignore
                                       (Ojs.call x11128 "push"
                                          [|(Ojs.float_to_js x11129)|])
                                 | None -> ());
                                x11128))|])
    let (get_length : t -> float) =
      fun (x11132 : t) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x11132) "length")
    let (set_length : t -> float -> unit) =
      fun (x11133 : t) ->
        fun (x11134 : float) ->
          Ojs.set_prop_ascii (t_to_js x11133) "length"
            (Ojs.float_to_js x11134)
    let (toString : t -> string) =
      fun (x11135 : t) ->
        Ojs.string_of_js (Ojs.call (t_to_js x11135) "toString" [||])
    let (toLocaleString : t -> string) =
      fun (x11136 : t) ->
        Ojs.string_of_js (Ojs.call (t_to_js x11136) "toLocaleString" [||])
    let (pop : t -> T.t option) =
      fun (x11137 : t) ->
        Ojs.option_of_js T.t_of_js (Ojs.call (t_to_js x11137) "pop" [||])
    let (push : t -> items:T.t list -> float) =
      fun (x11142 : t) ->
        fun ~items:(x11139 : T.t list) ->
          Ojs.float_of_js
            (let x11143 = t_to_js x11142 in
             Ojs.call (Ojs.get_prop_ascii x11143 "push") "apply"
               [|x11143;((let x11140 =
                            Ojs.new_obj
                              (Ojs.get_prop_ascii Ojs.global "Array") 
                              [||] in
                          List.iter
                            (fun (x11141 : T.t) ->
                               ignore
                                 (Ojs.call x11140 "push"
                                    [|(T.t_to_js x11141)|])) x11139;
                          x11140))|])
    let (concat : t -> items:T.t ConcatArray.t list -> T.t list) =
      fun (x11148 : t) ->
        fun ~items:(x11144 : T.t ConcatArray.t list) ->
          Ojs.list_of_js T.t_of_js
            (let x11149 = t_to_js x11148 in
             Ojs.call (Ojs.get_prop_ascii x11149 "concat") "apply"
               [|x11149;((let x11145 =
                            Ojs.new_obj
                              (Ojs.get_prop_ascii Ojs.global "Array") 
                              [||] in
                          List.iter
                            (fun (x11146 : T.t ConcatArray.t) ->
                               ignore
                                 (Ojs.call x11145 "push"
                                    [|(ConcatArray.t_to_js T.t_to_js x11146)|]))
                            x11144;
                          x11145))|])
    let (concat :
      t -> items:[ `U1 of T.t  | `U2 of T.t ConcatArray.t ] list -> T.t list)
      =
      fun (x11157 : t) ->
        fun ~items:(x11151 : [ `U1 of T.t  | `U2 of T.t ConcatArray.t ] list)
          ->
          Ojs.list_of_js T.t_of_js
            (let x11158 = t_to_js x11157 in
             Ojs.call (Ojs.get_prop_ascii x11158 "concat") "apply"
               [|x11158;((let x11152 =
                            Ojs.new_obj
                              (Ojs.get_prop_ascii Ojs.global "Array") 
                              [||] in
                          List.iter
                            (fun
                               (x11153 :
                                 [ `U1 of T.t  | `U2 of T.t ConcatArray.t ])
                               ->
                               ignore
                                 (Ojs.call x11152 "push"
                                    [|((match x11153 with
                                        | `U1 x11154 -> T.t_to_js x11154
                                        | `U2 x11155 ->
                                            ConcatArray.t_to_js T.t_to_js
                                              x11155))|])) x11151;
                          x11152))|])
    let (join : t -> ?separator:string -> unit -> string) =
      fun (x11163 : t) ->
        fun ?separator:(x11160 : string option) ->
          fun () ->
            Ojs.string_of_js
              (let x11164 = t_to_js x11163 in
               Ojs.call (Ojs.get_prop_ascii x11164 "join") "apply"
                 [|x11164;((let x11161 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x11160 with
                             | Some x11162 ->
                                 ignore
                                   (Ojs.call x11161 "push"
                                      [|(Ojs.string_to_js x11162)|])
                             | None -> ());
                            x11161))|])
    let (reverse : t -> T.t list) =
      fun (x11165 : t) ->
        Ojs.list_of_js T.t_of_js (Ojs.call (t_to_js x11165) "reverse" [||])
    let (shift : t -> T.t option) =
      fun (x11167 : t) ->
        Ojs.option_of_js T.t_of_js (Ojs.call (t_to_js x11167) "shift" [||])
    let (slice : t -> ?start:float -> ?end_:float -> unit -> T.t list) =
      fun (x11174 : t) ->
        fun ?start:(x11169 : float option) ->
          fun ?end_:(x11170 : float option) ->
            fun () ->
              Ojs.list_of_js T.t_of_js
                (let x11175 = t_to_js x11174 in
                 Ojs.call (Ojs.get_prop_ascii x11175 "slice") "apply"
                   [|x11175;((let x11171 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              (match x11169 with
                               | Some x11173 ->
                                   ignore
                                     (Ojs.call x11171 "push"
                                        [|(Ojs.float_to_js x11173)|])
                               | None -> ());
                              (match x11170 with
                               | Some x11172 ->
                                   ignore
                                     (Ojs.call x11171 "push"
                                        [|(Ojs.float_to_js x11172)|])
                               | None -> ());
                              x11171))|])
    let (sort : t -> ?compareFn:(a:T.t -> b:T.t -> float) -> unit -> t) =
      fun (x11182 : t) ->
        fun ?compareFn:(x11177 : (a:T.t -> b:T.t -> float) option) ->
          fun () ->
            t_of_js
              (let x11183 = t_to_js x11182 in
               Ojs.call (Ojs.get_prop_ascii x11183 "sort") "apply"
                 [|x11183;((let x11178 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x11177 with
                             | Some x11179 ->
                                 ignore
                                   (Ojs.call x11178 "push"
                                      [|(Ojs.fun_to_js 2
                                           (fun (x11180 : Ojs.t) ->
                                              fun (x11181 : Ojs.t) ->
                                                Ojs.float_to_js
                                                  (x11179
                                                     ~a:(T.t_of_js x11180)
                                                     ~b:(T.t_of_js x11181))))|])
                             | None -> ());
                            x11178))|])
    let (splice : t -> start:float -> ?deleteCount:float -> unit -> T.t list)
      =
      fun (x11188 : t) ->
        fun ~start:(x11184 : float) ->
          fun ?deleteCount:(x11185 : float option) ->
            fun () ->
              Ojs.list_of_js T.t_of_js
                (let x11189 = t_to_js x11188 in
                 Ojs.call (Ojs.get_prop_ascii x11189 "splice") "apply"
                   [|x11189;((let x11186 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x11186 "push"
                                   [|(Ojs.float_to_js x11184)|]);
                              (match x11185 with
                               | Some x11187 ->
                                   ignore
                                     (Ojs.call x11186 "push"
                                        [|(Ojs.float_to_js x11187)|])
                               | None -> ());
                              x11186))|])
    let (splice :
      t -> start:float -> deleteCount:float -> items:T.t list -> T.t list) =
      fun (x11196 : t) ->
        fun ~start:(x11191 : float) ->
          fun ~deleteCount:(x11192 : float) ->
            fun ~items:(x11193 : T.t list) ->
              Ojs.list_of_js T.t_of_js
                (let x11197 = t_to_js x11196 in
                 Ojs.call (Ojs.get_prop_ascii x11197 "splice") "apply"
                   [|x11197;((let x11194 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x11194 "push"
                                   [|(Ojs.float_to_js x11191)|]);
                              ignore
                                (Ojs.call x11194 "push"
                                   [|(Ojs.float_to_js x11192)|]);
                              List.iter
                                (fun (x11195 : T.t) ->
                                   ignore
                                     (Ojs.call x11194 "push"
                                        [|(T.t_to_js x11195)|])) x11193;
                              x11194))|])
    let (unshift : t -> items:T.t list -> float) =
      fun (x11202 : t) ->
        fun ~items:(x11199 : T.t list) ->
          Ojs.float_of_js
            (let x11203 = t_to_js x11202 in
             Ojs.call (Ojs.get_prop_ascii x11203 "unshift") "apply"
               [|x11203;((let x11200 =
                            Ojs.new_obj
                              (Ojs.get_prop_ascii Ojs.global "Array") 
                              [||] in
                          List.iter
                            (fun (x11201 : T.t) ->
                               ignore
                                 (Ojs.call x11200 "push"
                                    [|(T.t_to_js x11201)|])) x11199;
                          x11200))|])
    let (indexOf :
      t -> searchElement:T.t -> ?fromIndex:float -> unit -> float) =
      fun (x11208 : t) ->
        fun ~searchElement:(x11204 : T.t) ->
          fun ?fromIndex:(x11205 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x11209 = t_to_js x11208 in
                 Ojs.call (Ojs.get_prop_ascii x11209 "indexOf") "apply"
                   [|x11209;((let x11206 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x11206 "push"
                                   [|(T.t_to_js x11204)|]);
                              (match x11205 with
                               | Some x11207 ->
                                   ignore
                                     (Ojs.call x11206 "push"
                                        [|(Ojs.float_to_js x11207)|])
                               | None -> ());
                              x11206))|])
    let (lastIndexOf :
      t -> searchElement:T.t -> ?fromIndex:float -> unit -> float) =
      fun (x11214 : t) ->
        fun ~searchElement:(x11210 : T.t) ->
          fun ?fromIndex:(x11211 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x11215 = t_to_js x11214 in
                 Ojs.call (Ojs.get_prop_ascii x11215 "lastIndexOf") "apply"
                   [|x11215;((let x11212 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x11212 "push"
                                   [|(T.t_to_js x11210)|]);
                              (match x11211 with
                               | Some x11213 ->
                                   ignore
                                     (Ojs.call x11212 "push"
                                        [|(Ojs.float_to_js x11213)|])
                               | None -> ());
                              x11212))|])
    let (every :
      t ->
        predicate:(value:T.t -> index:float -> array:T.t list -> bool) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x11224 : t) ->
        fun
          ~predicate:(x11216 :
                       value:T.t -> index:float -> array:T.t list -> bool)
          ->
          fun ?thisArg:(x11217 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x11225 = t_to_js x11224 in
                 Ojs.call (Ojs.get_prop_ascii x11225 "every") "apply"
                   [|x11225;((let x11218 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x11218 "push"
                                   [|(Ojs.fun_to_js 3
                                        (fun (x11220 : Ojs.t) ->
                                           fun (x11221 : Ojs.t) ->
                                             fun (x11222 : Ojs.t) ->
                                               Ojs.bool_to_js
                                                 (x11216
                                                    ~value:(T.t_of_js x11220)
                                                    ~index:(Ojs.float_of_js
                                                              x11221)
                                                    ~array:(Ojs.list_of_js
                                                              T.t_of_js
                                                              x11222))))|]);
                              (match x11217 with
                               | Some x11219 ->
                                   ignore
                                     (Ojs.call x11218 "push"
                                        [|(any_to_js x11219)|])
                               | None -> ());
                              x11218))|])
    let (every :
      t ->
        predicate:(value:T.t -> index:float -> array:T.t list -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x11234 : t) ->
        fun
          ~predicate:(x11226 :
                       value:T.t -> index:float -> array:T.t list -> unknown)
          ->
          fun ?thisArg:(x11227 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x11235 = t_to_js x11234 in
                 Ojs.call (Ojs.get_prop_ascii x11235 "every") "apply"
                   [|x11235;((let x11228 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x11228 "push"
                                   [|(Ojs.fun_to_js 3
                                        (fun (x11230 : Ojs.t) ->
                                           fun (x11231 : Ojs.t) ->
                                             fun (x11232 : Ojs.t) ->
                                               unknown_to_js
                                                 (x11226
                                                    ~value:(T.t_of_js x11230)
                                                    ~index:(Ojs.float_of_js
                                                              x11231)
                                                    ~array:(Ojs.list_of_js
                                                              T.t_of_js
                                                              x11232))))|]);
                              (match x11227 with
                               | Some x11229 ->
                                   ignore
                                     (Ojs.call x11228 "push"
                                        [|(any_to_js x11229)|])
                               | None -> ());
                              x11228))|])
    let (some :
      t ->
        predicate:(value:T.t -> index:float -> array:T.t list -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x11244 : t) ->
        fun
          ~predicate:(x11236 :
                       value:T.t -> index:float -> array:T.t list -> unknown)
          ->
          fun ?thisArg:(x11237 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x11245 = t_to_js x11244 in
                 Ojs.call (Ojs.get_prop_ascii x11245 "some") "apply"
                   [|x11245;((let x11238 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x11238 "push"
                                   [|(Ojs.fun_to_js 3
                                        (fun (x11240 : Ojs.t) ->
                                           fun (x11241 : Ojs.t) ->
                                             fun (x11242 : Ojs.t) ->
                                               unknown_to_js
                                                 (x11236
                                                    ~value:(T.t_of_js x11240)
                                                    ~index:(Ojs.float_of_js
                                                              x11241)
                                                    ~array:(Ojs.list_of_js
                                                              T.t_of_js
                                                              x11242))))|]);
                              (match x11237 with
                               | Some x11239 ->
                                   ignore
                                     (Ojs.call x11238 "push"
                                        [|(any_to_js x11239)|])
                               | None -> ());
                              x11238))|])
    let (forEach :
      t ->
        callbackfn:(value:T.t -> index:float -> array:T.t list -> unit) ->
          ?thisArg:any -> unit -> unit)
      =
      fun (x11254 : t) ->
        fun
          ~callbackfn:(x11246 :
                        value:T.t -> index:float -> array:T.t list -> unit)
          ->
          fun ?thisArg:(x11247 : any option) ->
            fun () ->
              ignore
                (let x11255 = t_to_js x11254 in
                 Ojs.call (Ojs.get_prop_ascii x11255 "forEach") "apply"
                   [|x11255;((let x11248 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x11248 "push"
                                   [|(Ojs.fun_to_js 3
                                        (fun (x11250 : Ojs.t) ->
                                           fun (x11251 : Ojs.t) ->
                                             fun (x11252 : Ojs.t) ->
                                               x11246
                                                 ~value:(T.t_of_js x11250)
                                                 ~index:(Ojs.float_of_js
                                                           x11251)
                                                 ~array:(Ojs.list_of_js
                                                           T.t_of_js x11252)))|]);
                              (match x11247 with
                               | Some x11249 ->
                                   ignore
                                     (Ojs.call x11248 "push"
                                        [|(any_to_js x11249)|])
                               | None -> ());
                              x11248))|])
    let (map :
      t ->
        callbackfn:(value:T.t -> index:float -> array:T.t list -> 'U) ->
          ?thisArg:any -> unit -> 'U list)
      =
      fun (x11264 : t) ->
        fun
          ~callbackfn:(x11256 :
                        value:T.t -> index:float -> array:T.t list -> 'U)
          ->
          fun ?thisArg:(x11257 : any option) ->
            fun () ->
              Ojs.list_of_js Obj.magic
                (let x11265 = t_to_js x11264 in
                 Ojs.call (Ojs.get_prop_ascii x11265 "map") "apply"
                   [|x11265;((let x11258 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x11258 "push"
                                   [|(Ojs.fun_to_js 3
                                        (fun (x11260 : Ojs.t) ->
                                           fun (x11261 : Ojs.t) ->
                                             fun (x11262 : Ojs.t) ->
                                               Obj.magic
                                                 (x11256
                                                    ~value:(T.t_of_js x11260)
                                                    ~index:(Ojs.float_of_js
                                                              x11261)
                                                    ~array:(Ojs.list_of_js
                                                              T.t_of_js
                                                              x11262))))|]);
                              (match x11257 with
                               | Some x11259 ->
                                   ignore
                                     (Ojs.call x11258 "push"
                                        [|(any_to_js x11259)|])
                               | None -> ());
                              x11258))|])
    let (filter :
      t ->
        predicate:(value:T.t -> index:float -> array:T.t list -> bool) ->
          ?thisArg:any -> unit -> 'S list)
      =
      fun (x11275 : t) ->
        fun
          ~predicate:(x11267 :
                       value:T.t -> index:float -> array:T.t list -> bool)
          ->
          fun ?thisArg:(x11268 : any option) ->
            fun () ->
              Ojs.list_of_js Obj.magic
                (let x11276 = t_to_js x11275 in
                 Ojs.call (Ojs.get_prop_ascii x11276 "filter") "apply"
                   [|x11276;((let x11269 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x11269 "push"
                                   [|(Ojs.fun_to_js 3
                                        (fun (x11271 : Ojs.t) ->
                                           fun (x11272 : Ojs.t) ->
                                             fun (x11273 : Ojs.t) ->
                                               Ojs.bool_to_js
                                                 (x11267
                                                    ~value:(T.t_of_js x11271)
                                                    ~index:(Ojs.float_of_js
                                                              x11272)
                                                    ~array:(Ojs.list_of_js
                                                              T.t_of_js
                                                              x11273))))|]);
                              (match x11268 with
                               | Some x11270 ->
                                   ignore
                                     (Ojs.call x11269 "push"
                                        [|(any_to_js x11270)|])
                               | None -> ());
                              x11269))|])
    let (filter :
      t ->
        predicate:(value:T.t -> index:float -> array:T.t list -> unknown) ->
          ?thisArg:any -> unit -> T.t list)
      =
      fun (x11286 : t) ->
        fun
          ~predicate:(x11278 :
                       value:T.t -> index:float -> array:T.t list -> unknown)
          ->
          fun ?thisArg:(x11279 : any option) ->
            fun () ->
              Ojs.list_of_js T.t_of_js
                (let x11287 = t_to_js x11286 in
                 Ojs.call (Ojs.get_prop_ascii x11287 "filter") "apply"
                   [|x11287;((let x11280 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x11280 "push"
                                   [|(Ojs.fun_to_js 3
                                        (fun (x11282 : Ojs.t) ->
                                           fun (x11283 : Ojs.t) ->
                                             fun (x11284 : Ojs.t) ->
                                               unknown_to_js
                                                 (x11278
                                                    ~value:(T.t_of_js x11282)
                                                    ~index:(Ojs.float_of_js
                                                              x11283)
                                                    ~array:(Ojs.list_of_js
                                                              T.t_of_js
                                                              x11284))))|]);
                              (match x11279 with
                               | Some x11281 ->
                                   ignore
                                     (Ojs.call x11280 "push"
                                        [|(any_to_js x11281)|])
                               | None -> ());
                              x11280))|])
    let (reduce :
      t ->
        callbackfn:(previousValue:T.t ->
                      currentValue:T.t ->
                        currentIndex:float -> array:T.t list -> T.t)
          -> T.t)
      =
      fun (x11295 : t) ->
        fun
          ~callbackfn:(x11289 :
                        previousValue:T.t ->
                          currentValue:T.t ->
                            currentIndex:float -> array:T.t list -> T.t)
          ->
          T.t_of_js
            (Ojs.call (t_to_js x11295) "reduce"
               [|(Ojs.fun_to_js 4
                    (fun (x11290 : Ojs.t) ->
                       fun (x11291 : Ojs.t) ->
                         fun (x11292 : Ojs.t) ->
                           fun (x11293 : Ojs.t) ->
                             T.t_to_js
                               (x11289 ~previousValue:(T.t_of_js x11290)
                                  ~currentValue:(T.t_of_js x11291)
                                  ~currentIndex:(Ojs.float_of_js x11292)
                                  ~array:(Ojs.list_of_js T.t_of_js x11293))))|])
    let (reduce :
      t ->
        callbackfn:(previousValue:T.t ->
                      currentValue:T.t ->
                        currentIndex:float -> array:T.t list -> T.t)
          -> initialValue:T.t -> T.t)
      =
      fun (x11303 : t) ->
        fun
          ~callbackfn:(x11296 :
                        previousValue:T.t ->
                          currentValue:T.t ->
                            currentIndex:float -> array:T.t list -> T.t)
          ->
          fun ~initialValue:(x11302 : T.t) ->
            T.t_of_js
              (Ojs.call (t_to_js x11303) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x11297 : Ojs.t) ->
                         fun (x11298 : Ojs.t) ->
                           fun (x11299 : Ojs.t) ->
                             fun (x11300 : Ojs.t) ->
                               T.t_to_js
                                 (x11296 ~previousValue:(T.t_of_js x11297)
                                    ~currentValue:(T.t_of_js x11298)
                                    ~currentIndex:(Ojs.float_of_js x11299)
                                    ~array:(Ojs.list_of_js T.t_of_js x11300))));(
                   T.t_to_js x11302)|])
    let (reduce :
      t ->
        callbackfn:(previousValue:'U ->
                      currentValue:T.t ->
                        currentIndex:float -> array:T.t list -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x11311 : t) ->
        fun
          ~callbackfn:(x11304 :
                        previousValue:'U ->
                          currentValue:T.t ->
                            currentIndex:float -> array:T.t list -> 'U)
          ->
          fun ~initialValue:(x11310 : 'U) ->
            Obj.magic
              (Ojs.call (t_to_js x11311) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x11305 : Ojs.t) ->
                         fun (x11306 : Ojs.t) ->
                           fun (x11307 : Ojs.t) ->
                             fun (x11308 : Ojs.t) ->
                               Obj.magic
                                 (x11304 ~previousValue:(Obj.magic x11305)
                                    ~currentValue:(T.t_of_js x11306)
                                    ~currentIndex:(Ojs.float_of_js x11307)
                                    ~array:(Ojs.list_of_js T.t_of_js x11308))));(
                   Obj.magic x11310)|])
    let (reduceRight :
      t ->
        callbackfn:(previousValue:T.t ->
                      currentValue:T.t ->
                        currentIndex:float -> array:T.t list -> T.t)
          -> T.t)
      =
      fun (x11318 : t) ->
        fun
          ~callbackfn:(x11312 :
                        previousValue:T.t ->
                          currentValue:T.t ->
                            currentIndex:float -> array:T.t list -> T.t)
          ->
          T.t_of_js
            (Ojs.call (t_to_js x11318) "reduceRight"
               [|(Ojs.fun_to_js 4
                    (fun (x11313 : Ojs.t) ->
                       fun (x11314 : Ojs.t) ->
                         fun (x11315 : Ojs.t) ->
                           fun (x11316 : Ojs.t) ->
                             T.t_to_js
                               (x11312 ~previousValue:(T.t_of_js x11313)
                                  ~currentValue:(T.t_of_js x11314)
                                  ~currentIndex:(Ojs.float_of_js x11315)
                                  ~array:(Ojs.list_of_js T.t_of_js x11316))))|])
    let (reduceRight :
      t ->
        callbackfn:(previousValue:T.t ->
                      currentValue:T.t ->
                        currentIndex:float -> array:T.t list -> T.t)
          -> initialValue:T.t -> T.t)
      =
      fun (x11326 : t) ->
        fun
          ~callbackfn:(x11319 :
                        previousValue:T.t ->
                          currentValue:T.t ->
                            currentIndex:float -> array:T.t list -> T.t)
          ->
          fun ~initialValue:(x11325 : T.t) ->
            T.t_of_js
              (Ojs.call (t_to_js x11326) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x11320 : Ojs.t) ->
                         fun (x11321 : Ojs.t) ->
                           fun (x11322 : Ojs.t) ->
                             fun (x11323 : Ojs.t) ->
                               T.t_to_js
                                 (x11319 ~previousValue:(T.t_of_js x11320)
                                    ~currentValue:(T.t_of_js x11321)
                                    ~currentIndex:(Ojs.float_of_js x11322)
                                    ~array:(Ojs.list_of_js T.t_of_js x11323))));(
                   T.t_to_js x11325)|])
    let (reduceRight :
      t ->
        callbackfn:(previousValue:'U ->
                      currentValue:T.t ->
                        currentIndex:float -> array:T.t list -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x11334 : t) ->
        fun
          ~callbackfn:(x11327 :
                        previousValue:'U ->
                          currentValue:T.t ->
                            currentIndex:float -> array:T.t list -> 'U)
          ->
          fun ~initialValue:(x11333 : 'U) ->
            Obj.magic
              (Ojs.call (t_to_js x11334) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x11328 : Ojs.t) ->
                         fun (x11329 : Ojs.t) ->
                           fun (x11330 : Ojs.t) ->
                             fun (x11331 : Ojs.t) ->
                               Obj.magic
                                 (x11327 ~previousValue:(Obj.magic x11328)
                                    ~currentValue:(T.t_of_js x11329)
                                    ~currentIndex:(Ojs.float_of_js x11330)
                                    ~array:(Ojs.list_of_js T.t_of_js x11331))));(
                   Obj.magic x11333)|])
    let (get : t -> float -> T.t) =
      fun (x11335 : t) ->
        fun (x11336 : float) ->
          T.t_of_js (Ojs.get_prop (t_to_js x11335) (Ojs.float_to_js x11336))
    let (set : t -> float -> T.t -> unit) =
      fun (x11337 : t) ->
        fun (x11338 : float) ->
          fun (x11339 : T.t) ->
            Ojs.set_prop (t_to_js x11337) (Ojs.float_to_js x11338)
              (T.t_to_js x11339)
    let (from :
      [ `U1 of T.t Iterable.t  | `U2 of T.t ArrayLike.t ] -> T.t list) =
      fun (x11340 : [ `U1 of T.t Iterable.t  | `U2 of T.t ArrayLike.t ]) ->
        Ojs.list_of_js T.t_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Array") "from"
             [|((match x11340 with
                 | `U1 x11341 -> Iterable.t_to_js T.t_to_js x11341
                 | `U2 x11343 -> ArrayLike.t_to_js T.t_to_js x11343))|])
    let (from :
      iterable:[ `U1 of T.t Iterable.t  | `U2 of T.t ArrayLike.t ] ->
        mapfn:(v:T.t -> k:float -> 'U) -> ?thisArg:any -> unit -> 'U list)
      =
      fun
        ~iterable:(x11346 :
                    [ `U1 of T.t Iterable.t  | `U2 of T.t ArrayLike.t ])
        ->
        fun ~mapfn:(x11347 : v:T.t -> k:float -> 'U) ->
          fun ?thisArg:(x11348 : any option) ->
            fun () ->
              Ojs.list_of_js Obj.magic
                (let x11357 = Ojs.get_prop_ascii Ojs.global "Array" in
                 Ojs.call (Ojs.get_prop_ascii x11357 "from") "apply"
                   [|x11357;((let x11349 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x11349 "push"
                                   [|((match x11346 with
                                       | `U1 x11353 ->
                                           Iterable.t_to_js T.t_to_js x11353
                                       | `U2 x11355 ->
                                           ArrayLike.t_to_js T.t_to_js x11355))|]);
                              ignore
                                (Ojs.call x11349 "push"
                                   [|(Ojs.fun_to_js 2
                                        (fun (x11351 : Ojs.t) ->
                                           fun (x11352 : Ojs.t) ->
                                             Obj.magic
                                               (x11347 ~v:(T.t_of_js x11351)
                                                  ~k:(Ojs.float_of_js x11352))))|]);
                              (match x11348 with
                               | Some x11350 ->
                                   ignore
                                     (Ojs.call x11349 "push"
                                        [|(any_to_js x11350)|])
                               | None -> ());
                              x11349))|])
    let (from : T.t ArrayLike.t -> T.t list) =
      fun (x11359 : T.t ArrayLike.t) ->
        Ojs.list_of_js T.t_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Array") "from"
             [|(ArrayLike.t_to_js T.t_to_js x11359)|])
    let (from :
      arrayLike:T.t ArrayLike.t ->
        mapfn:(v:T.t -> k:float -> 'U) -> ?thisArg:any -> unit -> 'U list)
      =
      fun ~arrayLike:(x11362 : T.t ArrayLike.t) ->
        fun ~mapfn:(x11363 : v:T.t -> k:float -> 'U) ->
          fun ?thisArg:(x11364 : any option) ->
            fun () ->
              Ojs.list_of_js Obj.magic
                (let x11370 = Ojs.get_prop_ascii Ojs.global "Array" in
                 Ojs.call (Ojs.get_prop_ascii x11370 "from") "apply"
                   [|x11370;((let x11365 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x11365 "push"
                                   [|(ArrayLike.t_to_js T.t_to_js x11362)|]);
                              ignore
                                (Ojs.call x11365 "push"
                                   [|(Ojs.fun_to_js 2
                                        (fun (x11367 : Ojs.t) ->
                                           fun (x11368 : Ojs.t) ->
                                             Obj.magic
                                               (x11363 ~v:(T.t_of_js x11367)
                                                  ~k:(Ojs.float_of_js x11368))))|]);
                              (match x11364 with
                               | Some x11366 ->
                                   ignore
                                     (Ojs.call x11365 "push"
                                        [|(any_to_js x11366)|])
                               | None -> ());
                              x11365))|])
    let (of_ : T.t list -> T.t list) =
      fun (x11372 : T.t list) ->
        Ojs.list_of_js T.t_of_js
          (let x11375 = Ojs.get_prop_ascii Ojs.global "Array" in
           Ojs.call (Ojs.get_prop_ascii x11375 "of") "apply"
             [|x11375;((let x11373 =
                          Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                            [||] in
                        List.iter
                          (fun (x11374 : T.t) ->
                             ignore
                               (Ojs.call x11373 "push" [|(T.t_to_js x11374)|]))
                          x11372;
                        x11373))|])
    let (create : ?arrayLength:float -> unit -> any list) =
      fun ?arrayLength:(x11377 : float option) ->
        fun () ->
          Ojs.list_of_js any_of_js
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "Array")
               (let x11378 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x11377 with
                 | Some x11379 ->
                     ignore
                       (Ojs.call x11378 "push" [|(Ojs.float_to_js x11379)|])
                 | None -> ());
                x11378))
    let (create : float -> T.t list) =
      fun (x11381 : float) ->
        Ojs.list_of_js T.t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
             [|(Ojs.float_to_js x11381)|])
    let (create : T.t list -> T.t list) =
      fun (x11383 : T.t list) ->
        Ojs.list_of_js T.t_of_js
          (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "Array")
             (let x11384 =
                Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
              List.iter
                (fun (x11385 : T.t) ->
                   ignore (Ojs.call x11384 "push" [|(T.t_to_js x11385)|]))
                x11383;
              x11384))
    let (invoke : ?arrayLength:float -> unit -> any list) =
      fun ?arrayLength:(x11387 : float option) ->
        fun () ->
          Ojs.list_of_js any_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "Array") "apply"
               [|Ojs.null;((let x11388 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x11387 with
                             | Some x11389 ->
                                 ignore
                                   (Ojs.call x11388 "push"
                                      [|(Ojs.float_to_js x11389)|])
                             | None -> ());
                            x11388))|])
    let (invoke : float -> T.t list) =
      fun (x11391 : float) ->
        Ojs.list_of_js T.t_of_js
          (Ojs.apply (Ojs.get_prop_ascii Ojs.global "Array")
             [|(Ojs.float_to_js x11391)|])
    let (invoke : T.t list -> T.t list) =
      fun (x11393 : T.t list) ->
        Ojs.list_of_js T.t_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Array") "apply"
             [|Ojs.null;((let x11394 =
                            Ojs.new_obj
                              (Ojs.get_prop_ascii Ojs.global "Array") 
                              [||] in
                          List.iter
                            (fun (x11395 : T.t) ->
                               ignore
                                 (Ojs.call x11394 "push"
                                    [|(T.t_to_js x11395)|])) x11393;
                          x11394))|])
    let (isArray : any -> bool) =
      fun (x11397 : any) ->
        Ojs.bool_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Array") "isArray"
             [|(any_to_js x11397)|])
    let (prototype : unit -> any list) =
      fun () ->
        Ojs.list_of_js any_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Array")
             "prototype")
  end
module TypedPropertyDescriptor_Make(T:Ojs.T) =
  struct
    type 'T parent = 'T TypedPropertyDescriptor.t
    let rec parent_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T parent =
      fun (type __T) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x11401 : Ojs.t) ->
            TypedPropertyDescriptor.t_of_js __T_of_js x11401
    and parent_to_js : 'T . ('T -> Ojs.t) -> 'T parent -> Ojs.t =
      fun (type __T) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x11399 : __T TypedPropertyDescriptor.t) ->
            TypedPropertyDescriptor.t_to_js __T_to_js x11399
    type t = T.t parent
    let rec t_of_js : Ojs.t -> t =
      fun (x11405 : Ojs.t) -> parent_of_js T.t_of_js x11405
    and t_to_js : t -> Ojs.t =
      fun (x11403 : T.t parent) -> parent_to_js T.t_to_js x11403
    let (get_enumerable : t -> bool option) =
      fun (x11407 : t) ->
        Ojs.option_of_js Ojs.bool_of_js
          (Ojs.get_prop_ascii (t_to_js x11407) "enumerable")
    let (set_enumerable : t -> bool -> unit) =
      fun (x11409 : t) ->
        fun (x11410 : bool) ->
          Ojs.set_prop_ascii (t_to_js x11409) "enumerable"
            (Ojs.bool_to_js x11410)
    let (get_configurable : t -> bool option) =
      fun (x11411 : t) ->
        Ojs.option_of_js Ojs.bool_of_js
          (Ojs.get_prop_ascii (t_to_js x11411) "configurable")
    let (set_configurable : t -> bool -> unit) =
      fun (x11413 : t) ->
        fun (x11414 : bool) ->
          Ojs.set_prop_ascii (t_to_js x11413) "configurable"
            (Ojs.bool_to_js x11414)
    let (get_writable : t -> bool option) =
      fun (x11415 : t) ->
        Ojs.option_of_js Ojs.bool_of_js
          (Ojs.get_prop_ascii (t_to_js x11415) "writable")
    let (set_writable : t -> bool -> unit) =
      fun (x11417 : t) ->
        fun (x11418 : bool) ->
          Ojs.set_prop_ascii (t_to_js x11417) "writable"
            (Ojs.bool_to_js x11418)
    let (get_value : t -> T.t option) =
      fun (x11419 : t) ->
        Ojs.option_of_js T.t_of_js
          (Ojs.get_prop_ascii (t_to_js x11419) "value")
    let (set_value : t -> T.t -> unit) =
      fun (x11421 : t) ->
        fun (x11422 : T.t) ->
          Ojs.set_prop_ascii (t_to_js x11421) "value" (T.t_to_js x11422)
    let (get_get : t -> (unit -> T.t) option) =
      fun (x11423 : t) ->
        Ojs.option_of_js
          (fun (x11424 : Ojs.t) ->
             fun () -> T.t_of_js (Ojs.apply x11424 [||]))
          (Ojs.get_prop_ascii (t_to_js x11423) "get")
    let (set_get : t -> (unit -> T.t) -> unit) =
      fun (x11425 : t) ->
        fun (x11426 : unit -> T.t) ->
          Ojs.set_prop_ascii (t_to_js x11425) "get"
            (Ojs.fun_to_js 1 (fun _ -> T.t_to_js (x11426 ())))
    let (get_set : t -> (T.t -> unit) option) =
      fun (x11427 : t) ->
        Ojs.option_of_js
          (fun (x11428 : Ojs.t) ->
             fun (x11429 : T.t) ->
               ignore (Ojs.apply x11428 [|(T.t_to_js x11429)|]))
          (Ojs.get_prop_ascii (t_to_js x11427) "set")
    let (set_set : t -> (T.t -> unit) -> unit) =
      fun (x11430 : t) ->
        fun (x11431 : T.t -> unit) ->
          Ojs.set_prop_ascii (t_to_js x11430) "set"
            (Ojs.fun_to_js 1
               (fun (x11432 : Ojs.t) -> x11431 (T.t_of_js x11432)))
  end
module PromiseLike_Make(T:Ojs.T) =
  struct
    type 'T parent = 'T PromiseLike.t
    let rec parent_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T parent =
      fun (type __T) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x11435 : Ojs.t) -> PromiseLike.t_of_js __T_of_js x11435
    and parent_to_js : 'T . ('T -> Ojs.t) -> 'T parent -> Ojs.t =
      fun (type __T) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x11433 : __T PromiseLike.t) ->
            PromiseLike.t_to_js __T_to_js x11433
    type t = T.t parent
    let rec t_of_js : Ojs.t -> t =
      fun (x11439 : Ojs.t) -> parent_of_js T.t_of_js x11439
    and t_to_js : t -> Ojs.t =
      fun (x11437 : T.t parent) -> parent_to_js T.t_to_js x11437
    let (then_ :
      t ->
        ?onfulfilled:[ `Null  | `Undefined of undefined 
                     | `U1 of
                         T.t ->
                           [ `U1 of 'TResult1  | `U2 of 'TResult1 parent ]
                         ]
          ->
          ?onrejected:[ `Null  | `Undefined of undefined 
                      | `U1 of
                          any ->
                            [ `U1 of 'TResult2  | `U2 of 'TResult2 parent ]
                          ]
            -> unit -> ('TResult1, 'TResult2) union2 parent)
      =
      fun (x11458 : t) ->
        fun
          ?onfulfilled:(x11441 :
                         [ `Null  | `Undefined of undefined 
                         | `U1 of
                             T.t ->
                               [ `U1 of 'TResult1 
                               | `U2 of 'TResult1 parent ]
                             ]
                           option)
          ->
          fun
            ?onrejected:(x11442 :
                          [ `Null  | `Undefined of undefined 
                          | `U1 of
                              any ->
                                [ `U1 of 'TResult2 
                                | `U2 of 'TResult2 parent ]
                              ]
                            option)
            ->
            fun () ->
              parent_of_js
                (fun (x11460 : Ojs.t) ->
                   union2_of_js Obj.magic Obj.magic x11460)
                (let x11459 = t_to_js x11458 in
                 Ojs.call (Ojs.get_prop_ascii x11459 "then") "apply"
                   [|x11459;((let x11443 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              (match x11441 with
                               | Some x11451 ->
                                   ignore
                                     (Ojs.call x11443 "push"
                                        [|((match x11451 with
                                            | `Null -> Ojs.null
                                            | `Undefined x11452 ->
                                                undefined_to_js x11452
                                            | `U1 x11453 ->
                                                Ojs.fun_to_js 1
                                                  (fun (x11454 : Ojs.t) ->
                                                     match x11453
                                                             (T.t_of_js
                                                                x11454)
                                                     with
                                                     | `U1 x11455 ->
                                                         Obj.magic x11455
                                                     | `U2 x11456 ->
                                                         parent_to_js
                                                           Obj.magic x11456)))|])
                               | None -> ());
                              (match x11442 with
                               | Some x11444 ->
                                   ignore
                                     (Ojs.call x11443 "push"
                                        [|((match x11444 with
                                            | `Null -> Ojs.null
                                            | `Undefined x11445 ->
                                                undefined_to_js x11445
                                            | `U1 x11446 ->
                                                Ojs.fun_to_js 1
                                                  (fun (x11447 : Ojs.t) ->
                                                     match x11446
                                                             (any_of_js
                                                                x11447)
                                                     with
                                                     | `U1 x11448 ->
                                                         Obj.magic x11448
                                                     | `U2 x11449 ->
                                                         parent_to_js
                                                           Obj.magic x11449)))|])
                               | None -> ());
                              x11443))|])
  end
module ArrayLike_Make(T:Ojs.T) =
  struct
    type 'T parent = 'T ArrayLike.t
    let rec parent_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T parent =
      fun (type __T) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x11465 : Ojs.t) -> ArrayLike.t_of_js __T_of_js x11465
    and parent_to_js : 'T . ('T -> Ojs.t) -> 'T parent -> Ojs.t =
      fun (type __T) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x11463 : __T ArrayLike.t) ->
            ArrayLike.t_to_js __T_to_js x11463
    type t = T.t parent
    let rec t_of_js : Ojs.t -> t =
      fun (x11469 : Ojs.t) -> parent_of_js T.t_of_js x11469
    and t_to_js : t -> Ojs.t =
      fun (x11467 : T.t parent) -> parent_to_js T.t_to_js x11467
    let (get_length : t -> float) =
      fun (x11471 : t) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x11471) "length")
    let (get : t -> float -> T.t) =
      fun (x11472 : t) ->
        fun (x11473 : float) ->
          T.t_of_js (Ojs.get_prop (t_to_js x11472) (Ojs.float_to_js x11473))
  end
module Map_Make(K:Ojs.T)(V:Ojs.T) =
  struct
    type ('K, 'V) parent = ('K, 'V) Map.t
    let rec parent_of_js :
      'K 'V . (Ojs.t -> 'K) -> (Ojs.t -> 'V) -> Ojs.t -> ('K, 'V) parent =
      fun (type __K) ->
        fun (type __V) ->
          fun (__K_of_js : Ojs.t -> __K) ->
            fun (__V_of_js : Ojs.t -> __V) ->
              fun (x11477 : Ojs.t) -> Map.t_of_js __K_of_js __V_of_js x11477
    and parent_to_js :
      'K 'V . ('K -> Ojs.t) -> ('V -> Ojs.t) -> ('K, 'V) parent -> Ojs.t =
      fun (type __K) ->
        fun (type __V) ->
          fun (__K_to_js : __K -> Ojs.t) ->
            fun (__V_to_js : __V -> Ojs.t) ->
              fun (x11474 : (__K, __V) Map.t) ->
                Map.t_to_js __K_to_js __V_to_js x11474
    type t = (K.t, V.t) parent
    let rec t_of_js : Ojs.t -> t =
      fun (x11483 : Ojs.t) -> parent_of_js K.t_of_js V.t_of_js x11483
    and t_to_js : t -> Ojs.t =
      fun (x11480 : (K.t, V.t) parent) ->
        parent_to_js K.t_to_js V.t_to_js x11480
    let (entries : t -> (K.t * V.t) IterableIterator.t) =
      fun (x11486 : t) ->
        IterableIterator.t_of_js
          (fun (x11487 : Ojs.t) ->
             let x11488 = x11487 in
             ((K.t_of_js (Ojs.array_get x11488 0)),
               (V.t_of_js (Ojs.array_get x11488 1))))
          (Ojs.call (t_to_js x11486) "entries" [||])
    let (keys : t -> K.t IterableIterator.t) =
      fun (x11489 : t) ->
        IterableIterator.t_of_js K.t_of_js
          (Ojs.call (t_to_js x11489) "keys" [||])
    let (values : t -> V.t IterableIterator.t) =
      fun (x11491 : t) ->
        IterableIterator.t_of_js V.t_of_js
          (Ojs.call (t_to_js x11491) "values" [||])
    let (clear : t -> unit) =
      fun (x11493 : t) -> ignore (Ojs.call (t_to_js x11493) "clear" [||])
    let (delete : t -> key:K.t -> bool) =
      fun (x11495 : t) ->
        fun ~key:(x11494 : K.t) ->
          Ojs.bool_of_js
            (Ojs.call (t_to_js x11495) "delete" [|(K.t_to_js x11494)|])
    let (forEach :
      t ->
        callbackfn:(value:V.t -> key:K.t -> map:t -> unit) ->
          ?thisArg:any -> unit -> unit)
      =
      fun (x11503 : t) ->
        fun ~callbackfn:(x11496 : value:V.t -> key:K.t -> map:t -> unit) ->
          fun ?thisArg:(x11497 : any option) ->
            fun () ->
              ignore
                (let x11504 = t_to_js x11503 in
                 Ojs.call (Ojs.get_prop_ascii x11504 "forEach") "apply"
                   [|x11504;((let x11498 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x11498 "push"
                                   [|(Ojs.fun_to_js 3
                                        (fun (x11500 : Ojs.t) ->
                                           fun (x11501 : Ojs.t) ->
                                             fun (x11502 : Ojs.t) ->
                                               x11496
                                                 ~value:(V.t_of_js x11500)
                                                 ~key:(K.t_of_js x11501)
                                                 ~map:(t_of_js x11502)))|]);
                              (match x11497 with
                               | Some x11499 ->
                                   ignore
                                     (Ojs.call x11498 "push"
                                        [|(any_to_js x11499)|])
                               | None -> ());
                              x11498))|])
    let (get_ : t -> key:K.t -> V.t option) =
      fun (x11506 : t) ->
        fun ~key:(x11505 : K.t) ->
          Ojs.option_of_js V.t_of_js
            (Ojs.call (t_to_js x11506) "get" [|(K.t_to_js x11505)|])
    let (has : t -> key:K.t -> bool) =
      fun (x11509 : t) ->
        fun ~key:(x11508 : K.t) ->
          Ojs.bool_of_js
            (Ojs.call (t_to_js x11509) "has" [|(K.t_to_js x11508)|])
    let (set_ : t -> key:K.t -> value:V.t -> t) =
      fun (x11512 : t) ->
        fun ~key:(x11510 : K.t) ->
          fun ~value:(x11511 : V.t) ->
            t_of_js
              (Ojs.call (t_to_js x11512) "set"
                 [|(K.t_to_js x11510);(V.t_to_js x11511)|])
    let (get_size : t -> float) =
      fun (x11513 : t) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x11513) "size")
    let (groupBy :
      items:'T Iterable.t ->
        keySelector:(item:'T -> index:float -> K.t) -> (K.t, 'T list) parent)
      =
      fun ~items:(x11514 : 'T Iterable.t) ->
        fun ~keySelector:(x11516 : item:'T -> index:float -> K.t) ->
          parent_of_js K.t_of_js
            (fun (x11520 : Ojs.t) -> Ojs.list_of_js Obj.magic x11520)
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "Map") "groupBy"
               [|(Iterable.t_to_js Obj.magic x11514);(Ojs.fun_to_js 2
                                                        (fun (x11517 : Ojs.t)
                                                           ->
                                                           fun
                                                             (x11518 : Ojs.t)
                                                             ->
                                                             K.t_to_js
                                                               (x11516
                                                                  ~item:(
                                                                  Obj.magic
                                                                    x11517)
                                                                  ~index:(
                                                                  Ojs.float_of_js
                                                                    x11518))))|])
    let (create : unit -> (any, any) parent) =
      fun () ->
        parent_of_js any_of_js any_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Map") [||])
    let (create : ?iterable:(K.t * V.t) Iterable.t option -> unit -> t) =
      fun ?iterable:(x11524 : (K.t * V.t) Iterable.t option option) ->
        fun () ->
          t_of_js
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "Map")
               (let x11525 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x11524 with
                 | Some x11526 ->
                     ignore
                       (Ojs.call x11525 "push"
                          [|(Ojs.option_to_js
                               (fun (x11527 : (K.t * V.t) Iterable.t) ->
                                  Iterable.t_to_js
                                    (fun (x11528 : (K.t * V.t)) ->
                                       let (x11529, x11530) = x11528 in
                                       let x11531 = Ojs.array_make 2 in
                                       Ojs.array_set x11531 0
                                         (K.t_to_js x11529);
                                       Ojs.array_set x11531 1
                                         (V.t_to_js x11530);
                                       x11531) x11527) x11526)|])
                 | None -> ());
                x11525))
    let (create : unit -> (any, any) parent) =
      fun () ->
        parent_of_js any_of_js any_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Map") [||])
    let (create : ?entries:(K.t * V.t) list option -> unit -> t) =
      fun ?entries:(x11534 : (K.t * V.t) list option option) ->
        fun () ->
          t_of_js
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "Map")
               (let x11535 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x11534 with
                 | Some x11536 ->
                     ignore
                       (Ojs.call x11535 "push"
                          [|(Ojs.option_to_js
                               (fun (x11537 : (K.t * V.t) list) ->
                                  Ojs.list_to_js
                                    (fun (x11538 : (K.t * V.t)) ->
                                       let (x11539, x11540) = x11538 in
                                       let x11541 = Ojs.array_make 2 in
                                       Ojs.array_set x11541 0
                                         (K.t_to_js x11539);
                                       Ojs.array_set x11541 1
                                         (V.t_to_js x11540);
                                       x11541) x11537) x11536)|])
                 | None -> ());
                x11535))
    let (prototype : unit -> (any, any) parent) =
      fun () ->
        parent_of_js any_of_js any_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Map")
             "prototype")
  end
module ReadonlyMap_Make(K:Ojs.T)(V:Ojs.T) =
  struct
    type ('K, 'V) parent = ('K, 'V) ReadonlyMap.t
    let rec parent_of_js :
      'K 'V . (Ojs.t -> 'K) -> (Ojs.t -> 'V) -> Ojs.t -> ('K, 'V) parent =
      fun (type __K) ->
        fun (type __V) ->
          fun (__K_of_js : Ojs.t -> __K) ->
            fun (__V_of_js : Ojs.t -> __V) ->
              fun (x11547 : Ojs.t) ->
                ReadonlyMap.t_of_js __K_of_js __V_of_js x11547
    and parent_to_js :
      'K 'V . ('K -> Ojs.t) -> ('V -> Ojs.t) -> ('K, 'V) parent -> Ojs.t =
      fun (type __K) ->
        fun (type __V) ->
          fun (__K_to_js : __K -> Ojs.t) ->
            fun (__V_to_js : __V -> Ojs.t) ->
              fun (x11544 : (__K, __V) ReadonlyMap.t) ->
                ReadonlyMap.t_to_js __K_to_js __V_to_js x11544
    type t = (K.t, V.t) parent
    let rec t_of_js : Ojs.t -> t =
      fun (x11553 : Ojs.t) -> parent_of_js K.t_of_js V.t_of_js x11553
    and t_to_js : t -> Ojs.t =
      fun (x11550 : (K.t, V.t) parent) ->
        parent_to_js K.t_to_js V.t_to_js x11550
    let (entries : t -> (K.t * V.t) IterableIterator.t) =
      fun (x11556 : t) ->
        IterableIterator.t_of_js
          (fun (x11557 : Ojs.t) ->
             let x11558 = x11557 in
             ((K.t_of_js (Ojs.array_get x11558 0)),
               (V.t_of_js (Ojs.array_get x11558 1))))
          (Ojs.call (t_to_js x11556) "entries" [||])
    let (keys : t -> K.t IterableIterator.t) =
      fun (x11559 : t) ->
        IterableIterator.t_of_js K.t_of_js
          (Ojs.call (t_to_js x11559) "keys" [||])
    let (values : t -> V.t IterableIterator.t) =
      fun (x11561 : t) ->
        IterableIterator.t_of_js V.t_of_js
          (Ojs.call (t_to_js x11561) "values" [||])
    let (forEach :
      t ->
        callbackfn:(value:V.t -> key:K.t -> map:t -> unit) ->
          ?thisArg:any -> unit -> unit)
      =
      fun (x11570 : t) ->
        fun ~callbackfn:(x11563 : value:V.t -> key:K.t -> map:t -> unit) ->
          fun ?thisArg:(x11564 : any option) ->
            fun () ->
              ignore
                (let x11571 = t_to_js x11570 in
                 Ojs.call (Ojs.get_prop_ascii x11571 "forEach") "apply"
                   [|x11571;((let x11565 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x11565 "push"
                                   [|(Ojs.fun_to_js 3
                                        (fun (x11567 : Ojs.t) ->
                                           fun (x11568 : Ojs.t) ->
                                             fun (x11569 : Ojs.t) ->
                                               x11563
                                                 ~value:(V.t_of_js x11567)
                                                 ~key:(K.t_of_js x11568)
                                                 ~map:(t_of_js x11569)))|]);
                              (match x11564 with
                               | Some x11566 ->
                                   ignore
                                     (Ojs.call x11565 "push"
                                        [|(any_to_js x11566)|])
                               | None -> ());
                              x11565))|])
    let (get_ : t -> key:K.t -> V.t option) =
      fun (x11573 : t) ->
        fun ~key:(x11572 : K.t) ->
          Ojs.option_of_js V.t_of_js
            (Ojs.call (t_to_js x11573) "get" [|(K.t_to_js x11572)|])
    let (has : t -> key:K.t -> bool) =
      fun (x11576 : t) ->
        fun ~key:(x11575 : K.t) ->
          Ojs.bool_of_js
            (Ojs.call (t_to_js x11576) "has" [|(K.t_to_js x11575)|])
    let (get_size : t -> float) =
      fun (x11577 : t) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x11577) "size")
  end
module WeakMap_Make(K:Ojs.T)(V:Ojs.T) =
  struct
    type ('K, 'V) parent = ('K, 'V) WeakMap.t
    let rec parent_of_js :
      'K 'V . (Ojs.t -> 'K) -> (Ojs.t -> 'V) -> Ojs.t -> ('K, 'V) parent =
      fun (type __K) ->
        fun (type __V) ->
          fun (__K_of_js : Ojs.t -> __K) ->
            fun (__V_of_js : Ojs.t -> __V) ->
              fun (x11581 : Ojs.t) ->
                WeakMap.t_of_js __K_of_js __V_of_js x11581
    and parent_to_js :
      'K 'V . ('K -> Ojs.t) -> ('V -> Ojs.t) -> ('K, 'V) parent -> Ojs.t =
      fun (type __K) ->
        fun (type __V) ->
          fun (__K_to_js : __K -> Ojs.t) ->
            fun (__V_to_js : __V -> Ojs.t) ->
              fun (x11578 : (__K, __V) WeakMap.t) ->
                WeakMap.t_to_js __K_to_js __V_to_js x11578
    type t = (K.t, V.t) parent
    let rec t_of_js : Ojs.t -> t =
      fun (x11587 : Ojs.t) -> parent_of_js K.t_of_js V.t_of_js x11587
    and t_to_js : t -> Ojs.t =
      fun (x11584 : (K.t, V.t) parent) ->
        parent_to_js K.t_to_js V.t_to_js x11584
    let (delete : t -> key:K.t -> bool) =
      fun (x11591 : t) ->
        fun ~key:(x11590 : K.t) ->
          Ojs.bool_of_js
            (Ojs.call (t_to_js x11591) "delete" [|(K.t_to_js x11590)|])
    let (get_ : t -> key:K.t -> V.t option) =
      fun (x11593 : t) ->
        fun ~key:(x11592 : K.t) ->
          Ojs.option_of_js V.t_of_js
            (Ojs.call (t_to_js x11593) "get" [|(K.t_to_js x11592)|])
    let (has : t -> key:K.t -> bool) =
      fun (x11596 : t) ->
        fun ~key:(x11595 : K.t) ->
          Ojs.bool_of_js
            (Ojs.call (t_to_js x11596) "has" [|(K.t_to_js x11595)|])
    let (set_ : t -> key:K.t -> value:V.t -> t) =
      fun (x11599 : t) ->
        fun ~key:(x11597 : K.t) ->
          fun ~value:(x11598 : V.t) ->
            t_of_js
              (Ojs.call (t_to_js x11599) "set"
                 [|(K.t_to_js x11597);(V.t_to_js x11598)|])
    let (create : (K.t * V.t) Iterable.t -> t) =
      fun (x11600 : (K.t * V.t) Iterable.t) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "WeakMap")
             [|(Iterable.t_to_js
                  (fun (x11601 : (K.t * V.t)) ->
                     let (x11602, x11603) = x11601 in
                     let x11604 = Ojs.array_make 2 in
                     Ojs.array_set x11604 0 (K.t_to_js x11602);
                     Ojs.array_set x11604 1 (V.t_to_js x11603);
                     x11604) x11600)|])
    let (create : ?entries:(K.t * V.t) list option -> unit -> t) =
      fun ?entries:(x11605 : (K.t * V.t) list option option) ->
        fun () ->
          t_of_js
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "WeakMap")
               (let x11606 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x11605 with
                 | Some x11607 ->
                     ignore
                       (Ojs.call x11606 "push"
                          [|(Ojs.option_to_js
                               (fun (x11608 : (K.t * V.t) list) ->
                                  Ojs.list_to_js
                                    (fun (x11609 : (K.t * V.t)) ->
                                       let (x11610, x11611) = x11609 in
                                       let x11612 = Ojs.array_make 2 in
                                       Ojs.array_set x11612 0
                                         (K.t_to_js x11610);
                                       Ojs.array_set x11612 1
                                         (V.t_to_js x11611);
                                       x11612) x11608) x11607)|])
                 | None -> ());
                x11606))
    let (prototype : unit -> (WeakKey.t, any) parent) =
      fun () ->
        parent_of_js WeakKey.t_of_js any_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "WeakMap")
             "prototype")
  end
module Set_Make(T:Ojs.T) =
  struct
    type 'T parent = 'T Set.t
    let rec parent_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T parent =
      fun (type __T) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x11617 : Ojs.t) -> Set.t_of_js __T_of_js x11617
    and parent_to_js : 'T . ('T -> Ojs.t) -> 'T parent -> Ojs.t =
      fun (type __T) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x11615 : __T Set.t) -> Set.t_to_js __T_to_js x11615
    type t = T.t parent
    let rec t_of_js : Ojs.t -> t =
      fun (x11621 : Ojs.t) -> parent_of_js T.t_of_js x11621
    and t_to_js : t -> Ojs.t =
      fun (x11619 : T.t parent) -> parent_to_js T.t_to_js x11619
    let (entries : t -> (T.t * T.t) IterableIterator.t) =
      fun (x11623 : t) ->
        IterableIterator.t_of_js
          (fun (x11624 : Ojs.t) ->
             let x11625 = x11624 in
             ((T.t_of_js (Ojs.array_get x11625 0)),
               (T.t_of_js (Ojs.array_get x11625 1))))
          (Ojs.call (t_to_js x11623) "entries" [||])
    let (keys : t -> T.t IterableIterator.t) =
      fun (x11626 : t) ->
        IterableIterator.t_of_js T.t_of_js
          (Ojs.call (t_to_js x11626) "keys" [||])
    let (values : t -> T.t IterableIterator.t) =
      fun (x11628 : t) ->
        IterableIterator.t_of_js T.t_of_js
          (Ojs.call (t_to_js x11628) "values" [||])
    let (add : t -> value:T.t -> t) =
      fun (x11631 : t) ->
        fun ~value:(x11630 : T.t) ->
          t_of_js (Ojs.call (t_to_js x11631) "add" [|(T.t_to_js x11630)|])
    let (clear : t -> unit) =
      fun (x11632 : t) -> ignore (Ojs.call (t_to_js x11632) "clear" [||])
    let (delete : t -> value:T.t -> bool) =
      fun (x11634 : t) ->
        fun ~value:(x11633 : T.t) ->
          Ojs.bool_of_js
            (Ojs.call (t_to_js x11634) "delete" [|(T.t_to_js x11633)|])
    let (forEach :
      t ->
        callbackfn:(value:T.t -> value2:T.t -> set_:t -> unit) ->
          ?thisArg:any -> unit -> unit)
      =
      fun (x11642 : t) ->
        fun ~callbackfn:(x11635 : value:T.t -> value2:T.t -> set_:t -> unit)
          ->
          fun ?thisArg:(x11636 : any option) ->
            fun () ->
              ignore
                (let x11643 = t_to_js x11642 in
                 Ojs.call (Ojs.get_prop_ascii x11643 "forEach") "apply"
                   [|x11643;((let x11637 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x11637 "push"
                                   [|(Ojs.fun_to_js 3
                                        (fun (x11639 : Ojs.t) ->
                                           fun (x11640 : Ojs.t) ->
                                             fun (x11641 : Ojs.t) ->
                                               x11635
                                                 ~value:(T.t_of_js x11639)
                                                 ~value2:(T.t_of_js x11640)
                                                 ~set_:(t_of_js x11641)))|]);
                              (match x11636 with
                               | Some x11638 ->
                                   ignore
                                     (Ojs.call x11637 "push"
                                        [|(any_to_js x11638)|])
                               | None -> ());
                              x11637))|])
    let (has : t -> value:T.t -> bool) =
      fun (x11645 : t) ->
        fun ~value:(x11644 : T.t) ->
          Ojs.bool_of_js
            (Ojs.call (t_to_js x11645) "has" [|(T.t_to_js x11644)|])
    let (get_size : t -> float) =
      fun (x11646 : t) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x11646) "size")
    let (create : ?iterable:T.t Iterable.t option -> unit -> t) =
      fun ?iterable:(x11647 : T.t Iterable.t option option) ->
        fun () ->
          t_of_js
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "Set")
               (let x11648 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x11647 with
                 | Some x11649 ->
                     ignore
                       (Ojs.call x11648 "push"
                          [|(Ojs.option_to_js
                               (fun (x11650 : T.t Iterable.t) ->
                                  Iterable.t_to_js T.t_to_js x11650) x11649)|])
                 | None -> ());
                x11648))
    let (create : ?values:T.t list option -> unit -> t) =
      fun ?values:(x11652 : T.t list option option) ->
        fun () ->
          t_of_js
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "Set")
               (let x11653 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x11652 with
                 | Some x11654 ->
                     ignore
                       (Ojs.call x11653 "push"
                          [|(Ojs.option_to_js
                               (fun (x11655 : T.t list) ->
                                  Ojs.list_to_js T.t_to_js x11655) x11654)|])
                 | None -> ());
                x11653))
    let (prototype : unit -> any parent) =
      fun () ->
        parent_of_js any_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Set")
             "prototype")
  end
module ReadonlySet_Make(T:Ojs.T) =
  struct
    type 'T parent = 'T ReadonlySet.t
    let rec parent_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T parent =
      fun (type __T) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x11660 : Ojs.t) -> ReadonlySet.t_of_js __T_of_js x11660
    and parent_to_js : 'T . ('T -> Ojs.t) -> 'T parent -> Ojs.t =
      fun (type __T) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x11658 : __T ReadonlySet.t) ->
            ReadonlySet.t_to_js __T_to_js x11658
    type t = T.t parent
    let rec t_of_js : Ojs.t -> t =
      fun (x11664 : Ojs.t) -> parent_of_js T.t_of_js x11664
    and t_to_js : t -> Ojs.t =
      fun (x11662 : T.t parent) -> parent_to_js T.t_to_js x11662
    let (entries : t -> (T.t * T.t) IterableIterator.t) =
      fun (x11666 : t) ->
        IterableIterator.t_of_js
          (fun (x11667 : Ojs.t) ->
             let x11668 = x11667 in
             ((T.t_of_js (Ojs.array_get x11668 0)),
               (T.t_of_js (Ojs.array_get x11668 1))))
          (Ojs.call (t_to_js x11666) "entries" [||])
    let (keys : t -> T.t IterableIterator.t) =
      fun (x11669 : t) ->
        IterableIterator.t_of_js T.t_of_js
          (Ojs.call (t_to_js x11669) "keys" [||])
    let (values : t -> T.t IterableIterator.t) =
      fun (x11671 : t) ->
        IterableIterator.t_of_js T.t_of_js
          (Ojs.call (t_to_js x11671) "values" [||])
    let (forEach :
      t ->
        callbackfn:(value:T.t -> value2:T.t -> set_:t -> unit) ->
          ?thisArg:any -> unit -> unit)
      =
      fun (x11680 : t) ->
        fun ~callbackfn:(x11673 : value:T.t -> value2:T.t -> set_:t -> unit)
          ->
          fun ?thisArg:(x11674 : any option) ->
            fun () ->
              ignore
                (let x11681 = t_to_js x11680 in
                 Ojs.call (Ojs.get_prop_ascii x11681 "forEach") "apply"
                   [|x11681;((let x11675 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x11675 "push"
                                   [|(Ojs.fun_to_js 3
                                        (fun (x11677 : Ojs.t) ->
                                           fun (x11678 : Ojs.t) ->
                                             fun (x11679 : Ojs.t) ->
                                               x11673
                                                 ~value:(T.t_of_js x11677)
                                                 ~value2:(T.t_of_js x11678)
                                                 ~set_:(t_of_js x11679)))|]);
                              (match x11674 with
                               | Some x11676 ->
                                   ignore
                                     (Ojs.call x11675 "push"
                                        [|(any_to_js x11676)|])
                               | None -> ());
                              x11675))|])
    let (has : t -> value:T.t -> bool) =
      fun (x11683 : t) ->
        fun ~value:(x11682 : T.t) ->
          Ojs.bool_of_js
            (Ojs.call (t_to_js x11683) "has" [|(T.t_to_js x11682)|])
    let (get_size : t -> float) =
      fun (x11684 : t) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x11684) "size")
  end
module WeakSet_Make(T:Ojs.T) =
  struct
    type 'T parent = 'T WeakSet.t
    let rec parent_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T parent =
      fun (type __T) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x11687 : Ojs.t) -> WeakSet.t_of_js __T_of_js x11687
    and parent_to_js : 'T . ('T -> Ojs.t) -> 'T parent -> Ojs.t =
      fun (type __T) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x11685 : __T WeakSet.t) -> WeakSet.t_to_js __T_to_js x11685
    type t = T.t parent
    let rec t_of_js : Ojs.t -> t =
      fun (x11691 : Ojs.t) -> parent_of_js T.t_of_js x11691
    and t_to_js : t -> Ojs.t =
      fun (x11689 : T.t parent) -> parent_to_js T.t_to_js x11689
    let (add : t -> value:T.t -> t) =
      fun (x11694 : t) ->
        fun ~value:(x11693 : T.t) ->
          t_of_js (Ojs.call (t_to_js x11694) "add" [|(T.t_to_js x11693)|])
    let (delete : t -> value:T.t -> bool) =
      fun (x11696 : t) ->
        fun ~value:(x11695 : T.t) ->
          Ojs.bool_of_js
            (Ojs.call (t_to_js x11696) "delete" [|(T.t_to_js x11695)|])
    let (has : t -> value:T.t -> bool) =
      fun (x11698 : t) ->
        fun ~value:(x11697 : T.t) ->
          Ojs.bool_of_js
            (Ojs.call (t_to_js x11698) "has" [|(T.t_to_js x11697)|])
    let (create : T.t Iterable.t -> t) =
      fun (x11699 : T.t Iterable.t) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "WeakSet")
             [|(Iterable.t_to_js T.t_to_js x11699)|])
    let (create : ?values:T.t list option -> unit -> t) =
      fun ?values:(x11701 : T.t list option option) ->
        fun () ->
          t_of_js
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "WeakSet")
               (let x11702 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x11701 with
                 | Some x11703 ->
                     ignore
                       (Ojs.call x11702 "push"
                          [|(Ojs.option_to_js
                               (fun (x11704 : T.t list) ->
                                  Ojs.list_to_js T.t_to_js x11704) x11703)|])
                 | None -> ());
                x11702))
    let (prototype : unit -> WeakKey.t parent) =
      fun () ->
        parent_of_js WeakKey.t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "WeakSet")
             "prototype")
  end
module Generator_Make(T:Ojs.T)(TReturn:Ojs.T)(TNext:Ojs.T) =
  struct
    type ('T, 'TReturn, 'TNext) parent = ('T, 'TReturn, 'TNext) Generator.t
    let rec parent_of_js :
      'T 'TReturn 'TNext .
        (Ojs.t -> 'T) ->
          (Ojs.t -> 'TReturn) ->
            (Ojs.t -> 'TNext) -> Ojs.t -> ('T, 'TReturn, 'TNext) parent
      =
      fun (type __T) ->
        fun (type __TReturn) ->
          fun (type __TNext) ->
            fun (__T_of_js : Ojs.t -> __T) ->
              fun (__TReturn_of_js : Ojs.t -> __TReturn) ->
                fun (__TNext_of_js : Ojs.t -> __TNext) ->
                  fun (x11711 : Ojs.t) ->
                    Generator.t_of_js __T_of_js __TReturn_of_js __TNext_of_js
                      x11711
    and parent_to_js :
      'T 'TReturn 'TNext .
        ('T -> Ojs.t) ->
          ('TReturn -> Ojs.t) ->
            ('TNext -> Ojs.t) -> ('T, 'TReturn, 'TNext) parent -> Ojs.t
      =
      fun (type __T) ->
        fun (type __TReturn) ->
          fun (type __TNext) ->
            fun (__T_to_js : __T -> Ojs.t) ->
              fun (__TReturn_to_js : __TReturn -> Ojs.t) ->
                fun (__TNext_to_js : __TNext -> Ojs.t) ->
                  fun (x11707 : (__T, __TReturn, __TNext) Generator.t) ->
                    Generator.t_to_js __T_to_js __TReturn_to_js __TNext_to_js
                      x11707
    type t = (T.t, TReturn.t, TNext.t) parent
    let rec t_of_js : Ojs.t -> t =
      fun (x11719 : Ojs.t) ->
        parent_of_js T.t_of_js TReturn.t_of_js TNext.t_of_js x11719
    and t_to_js : t -> Ojs.t =
      fun (x11715 : (T.t, TReturn.t, TNext.t) parent) ->
        parent_to_js T.t_to_js TReturn.t_to_js TNext.t_to_js x11715
    let (next : t -> args:any list -> (T.t, TReturn.t) IteratorResult.t) =
      fun (x11726 : t) ->
        fun ~args:(x11723 : any list) ->
          IteratorResult.t_of_js T.t_of_js TReturn.t_of_js
            (let x11727 = t_to_js x11726 in
             Ojs.call (Ojs.get_prop_ascii x11727 "next") "apply"
               [|x11727;((let x11724 =
                            Ojs.new_obj
                              (Ojs.get_prop_ascii Ojs.global "Array") 
                              [||] in
                          List.iter
                            (fun (x11725 : any) ->
                               ignore
                                 (Ojs.call x11724 "push"
                                    [|(any_to_js x11725)|])) x11723;
                          x11724))|])
    let (return : t -> value:TReturn.t -> (T.t, TReturn.t) IteratorResult.t)
      =
      fun (x11731 : t) ->
        fun ~value:(x11730 : TReturn.t) ->
          IteratorResult.t_of_js T.t_of_js TReturn.t_of_js
            (Ojs.call (t_to_js x11731) "return" [|(TReturn.t_to_js x11730)|])
    let (throw : t -> e:any -> (T.t, TReturn.t) IteratorResult.t) =
      fun (x11735 : t) ->
        fun ~e:(x11734 : any) ->
          IteratorResult.t_of_js T.t_of_js TReturn.t_of_js
            (Ojs.call (t_to_js x11735) "throw" [|(any_to_js x11734)|])
  end
module IteratorYieldResult_Make(TYield:Ojs.T) =
  struct
    type 'TYield parent = 'TYield IteratorYieldResult.t
    let rec parent_of_js :
      'TYield . (Ojs.t -> 'TYield) -> Ojs.t -> 'TYield parent =
      fun (type __TYield) ->
        fun (__TYield_of_js : Ojs.t -> __TYield) ->
          fun (x11740 : Ojs.t) ->
            IteratorYieldResult.t_of_js __TYield_of_js x11740
    and parent_to_js :
      'TYield . ('TYield -> Ojs.t) -> 'TYield parent -> Ojs.t =
      fun (type __TYield) ->
        fun (__TYield_to_js : __TYield -> Ojs.t) ->
          fun (x11738 : __TYield IteratorYieldResult.t) ->
            IteratorYieldResult.t_to_js __TYield_to_js x11738
    type t = TYield.t parent
    let rec t_of_js : Ojs.t -> t =
      fun (x11744 : Ojs.t) -> parent_of_js TYield.t_of_js x11744
    and t_to_js : t -> Ojs.t =
      fun (x11742 : TYield.t parent) -> parent_to_js TYield.t_to_js x11742
    let (get_done : t -> [ `L_b_false ] option) =
      fun (x11746 : t) ->
        Ojs.option_of_js
          (fun (x11747 : Ojs.t) ->
             let x11748 = x11747 in
             match Ojs.bool_of_js x11748 with
             | false -> `L_b_false
             | _ -> assert false)
          (Ojs.get_prop_ascii (t_to_js x11746) "done")
    let (set_done : t -> [ `L_b_false ] -> unit) =
      fun (x11749 : t) ->
        fun (x11750 : [ `L_b_false ]) ->
          Ojs.set_prop_ascii (t_to_js x11749) "done"
            (match x11750 with | `L_b_false -> Ojs.bool_to_js false)
    let (get_value : t -> TYield.t) =
      fun (x11751 : t) ->
        TYield.t_of_js (Ojs.get_prop_ascii (t_to_js x11751) "value")
    let (set_value : t -> TYield.t -> unit) =
      fun (x11752 : t) ->
        fun (x11753 : TYield.t) ->
          Ojs.set_prop_ascii (t_to_js x11752) "value" (TYield.t_to_js x11753)
  end
module IteratorReturnResult_Make(TReturn:Ojs.T) =
  struct
    type 'TReturn parent = 'TReturn IteratorReturnResult.t
    let rec parent_of_js :
      'TReturn . (Ojs.t -> 'TReturn) -> Ojs.t -> 'TReturn parent =
      fun (type __TReturn) ->
        fun (__TReturn_of_js : Ojs.t -> __TReturn) ->
          fun (x11756 : Ojs.t) ->
            IteratorReturnResult.t_of_js __TReturn_of_js x11756
    and parent_to_js :
      'TReturn . ('TReturn -> Ojs.t) -> 'TReturn parent -> Ojs.t =
      fun (type __TReturn) ->
        fun (__TReturn_to_js : __TReturn -> Ojs.t) ->
          fun (x11754 : __TReturn IteratorReturnResult.t) ->
            IteratorReturnResult.t_to_js __TReturn_to_js x11754
    type t = TReturn.t parent
    let rec t_of_js : Ojs.t -> t =
      fun (x11760 : Ojs.t) -> parent_of_js TReturn.t_of_js x11760
    and t_to_js : t -> Ojs.t =
      fun (x11758 : TReturn.t parent) -> parent_to_js TReturn.t_to_js x11758
    let (get_done : t -> [ `L_b_true ]) =
      fun (x11762 : t) ->
        let x11763 = Ojs.get_prop_ascii (t_to_js x11762) "done" in
        match Ojs.bool_of_js x11763 with
        | true -> `L_b_true
        | _ -> assert false
    let (set_done : t -> [ `L_b_true ] -> unit) =
      fun (x11764 : t) ->
        fun (x11765 : [ `L_b_true ]) ->
          Ojs.set_prop_ascii (t_to_js x11764) "done"
            (match x11765 with | `L_b_true -> Ojs.bool_to_js true)
    let (get_value : t -> TReturn.t) =
      fun (x11766 : t) ->
        TReturn.t_of_js (Ojs.get_prop_ascii (t_to_js x11766) "value")
    let (set_value : t -> TReturn.t -> unit) =
      fun (x11767 : t) ->
        fun (x11768 : TReturn.t) ->
          Ojs.set_prop_ascii (t_to_js x11767) "value"
            (TReturn.t_to_js x11768)
  end
module Iterator_Make(T:Ojs.T)(TReturn:Ojs.T)(TNext:Ojs.T) =
  struct
    type ('T, 'TReturn, 'TNext) parent = ('T, 'TReturn, 'TNext) Iterator.t
    let rec parent_of_js :
      'T 'TReturn 'TNext .
        (Ojs.t -> 'T) ->
          (Ojs.t -> 'TReturn) ->
            (Ojs.t -> 'TNext) -> Ojs.t -> ('T, 'TReturn, 'TNext) parent
      =
      fun (type __T) ->
        fun (type __TReturn) ->
          fun (type __TNext) ->
            fun (__T_of_js : Ojs.t -> __T) ->
              fun (__TReturn_of_js : Ojs.t -> __TReturn) ->
                fun (__TNext_of_js : Ojs.t -> __TNext) ->
                  fun (x11773 : Ojs.t) ->
                    Iterator.t_of_js __T_of_js __TReturn_of_js __TNext_of_js
                      x11773
    and parent_to_js :
      'T 'TReturn 'TNext .
        ('T -> Ojs.t) ->
          ('TReturn -> Ojs.t) ->
            ('TNext -> Ojs.t) -> ('T, 'TReturn, 'TNext) parent -> Ojs.t
      =
      fun (type __T) ->
        fun (type __TReturn) ->
          fun (type __TNext) ->
            fun (__T_to_js : __T -> Ojs.t) ->
              fun (__TReturn_to_js : __TReturn -> Ojs.t) ->
                fun (__TNext_to_js : __TNext -> Ojs.t) ->
                  fun (x11769 : (__T, __TReturn, __TNext) Iterator.t) ->
                    Iterator.t_to_js __T_to_js __TReturn_to_js __TNext_to_js
                      x11769
    type t = (T.t, TReturn.t, TNext.t) parent
    let rec t_of_js : Ojs.t -> t =
      fun (x11781 : Ojs.t) ->
        parent_of_js T.t_of_js TReturn.t_of_js TNext.t_of_js x11781
    and t_to_js : t -> Ojs.t =
      fun (x11777 : (T.t, TReturn.t, TNext.t) parent) ->
        parent_to_js T.t_to_js TReturn.t_to_js TNext.t_to_js x11777
    let (next : t -> args:any list -> (T.t, TReturn.t) IteratorResult.t) =
      fun (x11788 : t) ->
        fun ~args:(x11785 : any list) ->
          IteratorResult.t_of_js T.t_of_js TReturn.t_of_js
            (let x11789 = t_to_js x11788 in
             Ojs.call (Ojs.get_prop_ascii x11789 "next") "apply"
               [|x11789;((let x11786 =
                            Ojs.new_obj
                              (Ojs.get_prop_ascii Ojs.global "Array") 
                              [||] in
                          List.iter
                            (fun (x11787 : any) ->
                               ignore
                                 (Ojs.call x11786 "push"
                                    [|(any_to_js x11787)|])) x11785;
                          x11786))|])
    let (return :
      t -> ?value:TReturn.t -> unit -> (T.t, TReturn.t) IteratorResult.t) =
      fun (x11795 : t) ->
        fun ?value:(x11792 : TReturn.t option) ->
          fun () ->
            IteratorResult.t_of_js T.t_of_js TReturn.t_of_js
              (let x11796 = t_to_js x11795 in
               Ojs.call (Ojs.get_prop_ascii x11796 "return") "apply"
                 [|x11796;((let x11793 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x11792 with
                             | Some x11794 ->
                                 ignore
                                   (Ojs.call x11793 "push"
                                      [|(TReturn.t_to_js x11794)|])
                             | None -> ());
                            x11793))|])
    let (throw : t -> ?e:any -> unit -> (T.t, TReturn.t) IteratorResult.t) =
      fun (x11802 : t) ->
        fun ?e:(x11799 : any option) ->
          fun () ->
            IteratorResult.t_of_js T.t_of_js TReturn.t_of_js
              (let x11803 = t_to_js x11802 in
               Ojs.call (Ojs.get_prop_ascii x11803 "throw") "apply"
                 [|x11803;((let x11800 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x11799 with
                             | Some x11801 ->
                                 ignore
                                   (Ojs.call x11800 "push"
                                      [|(any_to_js x11801)|])
                             | None -> ());
                            x11800))|])
  end
module Promise_Make(T:Ojs.T) =
  struct
    type 'T parent = 'T Promise.t
    let rec parent_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T parent =
      fun (type __T) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x11808 : Ojs.t) -> Promise.t_of_js __T_of_js x11808
    and parent_to_js : 'T . ('T -> Ojs.t) -> 'T parent -> Ojs.t =
      fun (type __T) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x11806 : __T Promise.t) -> Promise.t_to_js __T_to_js x11806
    type t = T.t parent
    let rec t_of_js : Ojs.t -> t =
      fun (x11812 : Ojs.t) -> parent_of_js T.t_of_js x11812
    and t_to_js : t -> Ojs.t =
      fun (x11810 : T.t parent) -> parent_to_js T.t_to_js x11810
    let (finally :
      t ->
        ?onfinally:[ `Null  | `Undefined of undefined 
                   | `U1 of unit -> unit ]
          -> unit -> t)
      =
      fun (x11819 : t) ->
        fun
          ?onfinally:(x11814 :
                       [ `Null  | `Undefined of undefined 
                       | `U1 of unit -> unit ] option)
          ->
          fun () ->
            t_of_js
              (let x11820 = t_to_js x11819 in
               Ojs.call (Ojs.get_prop_ascii x11820 "finally") "apply"
                 [|x11820;((let x11815 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x11814 with
                             | Some x11816 ->
                                 ignore
                                   (Ojs.call x11815 "push"
                                      [|((match x11816 with
                                          | `Null -> Ojs.null
                                          | `Undefined x11817 ->
                                              undefined_to_js x11817
                                          | `U1 x11818 ->
                                              Ojs.fun_to_js 1
                                                (fun _ -> x11818 ())))|])
                             | None -> ());
                            x11815))|])
    let (then_ :
      t ->
        ?onfulfilled:[ `Null  | `Undefined of undefined 
                     | `U1 of
                         T.t ->
                           [ `U1 of 'TResult1 
                           | `U2 of 'TResult1 PromiseLike.t ]
                         ]
          ->
          ?onrejected:[ `Null  | `Undefined of undefined 
                      | `U1 of
                          any ->
                            [ `U1 of 'TResult2 
                            | `U2 of 'TResult2 PromiseLike.t ]
                          ]
            -> unit -> ('TResult1, 'TResult2) union2 parent)
      =
      fun (x11838 : t) ->
        fun
          ?onfulfilled:(x11821 :
                         [ `Null  | `Undefined of undefined 
                         | `U1 of
                             T.t ->
                               [ `U1 of 'TResult1 
                               | `U2 of 'TResult1 PromiseLike.t ]
                             ]
                           option)
          ->
          fun
            ?onrejected:(x11822 :
                          [ `Null  | `Undefined of undefined 
                          | `U1 of
                              any ->
                                [ `U1 of 'TResult2 
                                | `U2 of 'TResult2 PromiseLike.t ]
                              ]
                            option)
            ->
            fun () ->
              parent_of_js
                (fun (x11840 : Ojs.t) ->
                   union2_of_js Obj.magic Obj.magic x11840)
                (let x11839 = t_to_js x11838 in
                 Ojs.call (Ojs.get_prop_ascii x11839 "then") "apply"
                   [|x11839;((let x11823 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              (match x11821 with
                               | Some x11831 ->
                                   ignore
                                     (Ojs.call x11823 "push"
                                        [|((match x11831 with
                                            | `Null -> Ojs.null
                                            | `Undefined x11832 ->
                                                undefined_to_js x11832
                                            | `U1 x11833 ->
                                                Ojs.fun_to_js 1
                                                  (fun (x11834 : Ojs.t) ->
                                                     match x11833
                                                             (T.t_of_js
                                                                x11834)
                                                     with
                                                     | `U1 x11835 ->
                                                         Obj.magic x11835
                                                     | `U2 x11836 ->
                                                         PromiseLike.t_to_js
                                                           Obj.magic x11836)))|])
                               | None -> ());
                              (match x11822 with
                               | Some x11824 ->
                                   ignore
                                     (Ojs.call x11823 "push"
                                        [|((match x11824 with
                                            | `Null -> Ojs.null
                                            | `Undefined x11825 ->
                                                undefined_to_js x11825
                                            | `U1 x11826 ->
                                                Ojs.fun_to_js 1
                                                  (fun (x11827 : Ojs.t) ->
                                                     match x11826
                                                             (any_of_js
                                                                x11827)
                                                     with
                                                     | `U1 x11828 ->
                                                         Obj.magic x11828
                                                     | `U2 x11829 ->
                                                         PromiseLike.t_to_js
                                                           Obj.magic x11829)))|])
                               | None -> ());
                              x11823))|])
    let (catch :
      t ->
        ?onrejected:[ `Null  | `Undefined of undefined 
                    | `U1 of
                        any ->
                          [ `U1 of 'TResult 
                          | `U2 of 'TResult PromiseLike.t ]
                        ]
          -> unit -> (T.t, 'TResult) union2 parent)
      =
      fun (x11852 : t) ->
        fun
          ?onrejected:(x11843 :
                        [ `Null  | `Undefined of undefined 
                        | `U1 of
                            any ->
                              [ `U1 of 'TResult 
                              | `U2 of 'TResult PromiseLike.t ]
                            ]
                          option)
          ->
          fun () ->
            parent_of_js
              (fun (x11854 : Ojs.t) ->
                 union2_of_js T.t_of_js Obj.magic x11854)
              (let x11853 = t_to_js x11852 in
               Ojs.call (Ojs.get_prop_ascii x11853 "catch") "apply"
                 [|x11853;((let x11844 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x11843 with
                             | Some x11845 ->
                                 ignore
                                   (Ojs.call x11844 "push"
                                      [|((match x11845 with
                                          | `Null -> Ojs.null
                                          | `Undefined x11846 ->
                                              undefined_to_js x11846
                                          | `U1 x11847 ->
                                              Ojs.fun_to_js 1
                                                (fun (x11848 : Ojs.t) ->
                                                   match x11847
                                                           (any_of_js x11848)
                                                   with
                                                   | `U1 x11849 ->
                                                       Obj.magic x11849
                                                   | `U2 x11850 ->
                                                       PromiseLike.t_to_js
                                                         Obj.magic x11850)))|])
                             | None -> ());
                            x11844))|])
    let (allSettled : T.t -> any parent) =
      fun (x11857 : T.t) ->
        parent_of_js any_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Promise") "allSettled"
             [|(T.t_to_js x11857)|])
    let (allSettled :
      [ `U1 of T.t  | `U2 of T.t PromiseLike.t ] Iterable.t ->
        T.t Awaited.t PromiseSettledResult.t list Awaited.t
          PromiseSettledResult.t list parent)
      =
      fun (x11859 : [ `U1 of T.t  | `U2 of T.t PromiseLike.t ] Iterable.t) ->
        parent_of_js
          (fun (x11864 : Ojs.t) ->
             Ojs.list_of_js
               (fun (x11865 : Ojs.t) ->
                  PromiseSettledResult.t_of_js
                    (fun (x11866 : Ojs.t) ->
                       Awaited.t_of_js
                         (fun (x11867 : Ojs.t) ->
                            Ojs.list_of_js
                              (fun (x11868 : Ojs.t) ->
                                 PromiseSettledResult.t_of_js
                                   (fun (x11869 : Ojs.t) ->
                                      Awaited.t_of_js T.t_of_js x11869)
                                   x11868) x11867) x11866) x11865) x11864)
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Promise") "allSettled"
             [|(Iterable.t_to_js
                  (fun (x11860 : [ `U1 of T.t  | `U2 of T.t PromiseLike.t ])
                     ->
                     match x11860 with
                     | `U1 x11861 -> T.t_to_js x11861
                     | `U2 x11862 -> PromiseLike.t_to_js T.t_to_js x11862)
                  x11859)|])
    let (withResolvers : unit -> T.t PromiseWithResolvers.t) =
      fun () ->
        PromiseWithResolvers.t_of_js T.t_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Promise") "withResolvers"
             [||])
    let (any : T.t -> any Awaited.t parent) =
      fun (x11872 : T.t) ->
        parent_of_js
          (fun (x11873 : Ojs.t) -> Awaited.t_of_js any_of_js x11873)
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Promise") "any"
             [|(T.t_to_js x11872)|])
    let (any :
      [ `U1 of T.t  | `U2 of T.t PromiseLike.t ] Iterable.t ->
        T.t Awaited.t Awaited.t parent)
      =
      fun (x11875 : [ `U1 of T.t  | `U2 of T.t PromiseLike.t ] Iterable.t) ->
        parent_of_js
          (fun (x11880 : Ojs.t) ->
             Awaited.t_of_js
               (fun (x11881 : Ojs.t) -> Awaited.t_of_js T.t_of_js x11881)
               x11880)
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Promise") "any"
             [|(Iterable.t_to_js
                  (fun (x11876 : [ `U1 of T.t  | `U2 of T.t PromiseLike.t ])
                     ->
                     match x11876 with
                     | `U1 x11877 -> T.t_to_js x11877
                     | `U2 x11878 -> PromiseLike.t_to_js T.t_to_js x11878)
                  x11875)|])
    let (prototype : unit -> any parent) =
      fun () ->
        parent_of_js any_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Promise")
             "prototype")
    let (create :
      (resolve:([ `U1 of T.t  | `U2 of T.t PromiseLike.t ] -> unit) ->
         reject:(?reason:any -> unit -> unit) -> unit)
        -> t)
      =
      fun
        (x11884 :
          resolve:([ `U1 of T.t  | `U2 of T.t PromiseLike.t ] -> unit) ->
            reject:(?reason:any -> unit -> unit) -> unit)
        ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Promise")
             [|(Ojs.fun_to_js 2
                  (fun (x11885 : Ojs.t) ->
                     fun (x11890 : Ojs.t) ->
                       x11884
                         ~resolve:(fun
                                     (x11886 :
                                       [ `U1 of T.t 
                                       | `U2 of T.t PromiseLike.t ])
                                     ->
                                     ignore
                                       (Ojs.apply x11885
                                          [|((match x11886 with
                                              | `U1 x11887 ->
                                                  T.t_to_js x11887
                                              | `U2 x11888 ->
                                                  PromiseLike.t_to_js
                                                    T.t_to_js x11888))|]))
                         ~reject:(fun ?reason:(x11891 : any option) ->
                                    fun () ->
                                      ignore
                                        (Ojs.call x11890 "apply"
                                           [|Ojs.null;((let x11892 =
                                                          Ojs.new_obj
                                                            (Ojs.get_prop_ascii
                                                               Ojs.global
                                                               "Array") 
                                                            [||] in
                                                        (match x11891 with
                                                         | Some x11893 ->
                                                             ignore
                                                               (Ojs.call
                                                                  x11892
                                                                  "push"
                                                                  [|(
                                                                    any_to_js
                                                                    x11893)|])
                                                         | None -> ());
                                                        x11892))|]))))|])
    let (all : T.t -> any parent) =
      fun (x11894 : T.t) ->
        parent_of_js any_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Promise") "all"
             [|(T.t_to_js x11894)|])
    let (race : T.t -> any Awaited.t parent) =
      fun (x11896 : T.t) ->
        parent_of_js
          (fun (x11897 : Ojs.t) -> Awaited.t_of_js any_of_js x11897)
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Promise") "race"
             [|(T.t_to_js x11896)|])
    let (reject : ?reason:any -> unit -> t) =
      fun ?reason:(x11899 : any option) ->
        fun () ->
          t_of_js
            (let x11902 = Ojs.get_prop_ascii Ojs.global "Promise" in
             Ojs.call (Ojs.get_prop_ascii x11902 "reject") "apply"
               [|x11902;((let x11900 =
                            Ojs.new_obj
                              (Ojs.get_prop_ascii Ojs.global "Array") 
                              [||] in
                          (match x11899 with
                           | Some x11901 ->
                               ignore
                                 (Ojs.call x11900 "push"
                                    [|(any_to_js x11901)|])
                           | None -> ());
                          x11900))|])
    let (resolve : unit -> unit parent) =
      fun () ->
        parent_of_js Ojs.unit_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Promise") "resolve" [||])
    let (resolve : T.t -> T.t Awaited.t Awaited.t parent) =
      fun (x11904 : T.t) ->
        parent_of_js
          (fun (x11905 : Ojs.t) ->
             Awaited.t_of_js
               (fun (x11906 : Ojs.t) -> Awaited.t_of_js T.t_of_js x11906)
               x11905)
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Promise") "resolve"
             [|(T.t_to_js x11904)|])
    let (resolve :
      [ `U1 of T.t  | `U2 of T.t PromiseLike.t ] ->
        T.t Awaited.t Awaited.t parent)
      =
      fun (x11908 : [ `U1 of T.t  | `U2 of T.t PromiseLike.t ]) ->
        parent_of_js
          (fun (x11912 : Ojs.t) ->
             Awaited.t_of_js
               (fun (x11913 : Ojs.t) -> Awaited.t_of_js T.t_of_js x11913)
               x11912)
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Promise") "resolve"
             [|((match x11908 with
                 | `U1 x11909 -> T.t_to_js x11909
                 | `U2 x11910 -> PromiseLike.t_to_js T.t_to_js x11910))|])
    let (all :
      [ `U1 of T.t  | `U2 of T.t PromiseLike.t ] Iterable.t ->
        T.t Awaited.t list Awaited.t list parent)
      =
      fun (x11915 : [ `U1 of T.t  | `U2 of T.t PromiseLike.t ] Iterable.t) ->
        parent_of_js
          (fun (x11920 : Ojs.t) ->
             Ojs.list_of_js
               (fun (x11921 : Ojs.t) ->
                  Awaited.t_of_js
                    (fun (x11922 : Ojs.t) ->
                       Ojs.list_of_js
                         (fun (x11923 : Ojs.t) ->
                            Awaited.t_of_js T.t_of_js x11923) x11922) x11921)
               x11920)
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Promise") "all"
             [|(Iterable.t_to_js
                  (fun (x11916 : [ `U1 of T.t  | `U2 of T.t PromiseLike.t ])
                     ->
                     match x11916 with
                     | `U1 x11917 -> T.t_to_js x11917
                     | `U2 x11918 -> PromiseLike.t_to_js T.t_to_js x11918)
                  x11915)|])
    let (race :
      [ `U1 of T.t  | `U2 of T.t PromiseLike.t ] Iterable.t ->
        T.t Awaited.t Awaited.t parent)
      =
      fun (x11925 : [ `U1 of T.t  | `U2 of T.t PromiseLike.t ] Iterable.t) ->
        parent_of_js
          (fun (x11930 : Ojs.t) ->
             Awaited.t_of_js
               (fun (x11931 : Ojs.t) -> Awaited.t_of_js T.t_of_js x11931)
               x11930)
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Promise") "race"
             [|(Iterable.t_to_js
                  (fun (x11926 : [ `U1 of T.t  | `U2 of T.t PromiseLike.t ])
                     ->
                     match x11926 with
                     | `U1 x11927 -> T.t_to_js x11927
                     | `U2 x11928 -> PromiseLike.t_to_js T.t_to_js x11928)
                  x11925)|])
  end
module ProxyHandler_Make(T:Ojs.T) =
  struct
    type 'T parent = 'T ProxyHandler.t
    let rec parent_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T parent =
      fun (type __T) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x11935 : Ojs.t) -> ProxyHandler.t_of_js __T_of_js x11935
    and parent_to_js : 'T . ('T -> Ojs.t) -> 'T parent -> Ojs.t =
      fun (type __T) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x11933 : __T ProxyHandler.t) ->
            ProxyHandler.t_to_js __T_to_js x11933
    type t = T.t parent
    let rec t_of_js : Ojs.t -> t =
      fun (x11939 : Ojs.t) -> parent_of_js T.t_of_js x11939
    and t_to_js : t -> Ojs.t =
      fun (x11937 : T.t parent) -> parent_to_js T.t_to_js x11937
    let (apply_ : t -> target:T.t -> thisArg:any -> argArray:any list -> any)
      =
      fun (x11945 : t) ->
        fun ~target:(x11941 : T.t) ->
          fun ~thisArg:(x11942 : any) ->
            fun ~argArray:(x11943 : any list) ->
              any_of_js
                (Ojs.call (t_to_js x11945) "apply"
                   [|(T.t_to_js x11941);(any_to_js x11942);(Ojs.list_to_js
                                                              any_to_js
                                                              x11943)|])
    let (construct :
      t ->
        target:T.t ->
          argArray:any list -> newTarget:Function.t -> untyped_object)
      =
      fun (x11950 : t) ->
        fun ~target:(x11946 : T.t) ->
          fun ~argArray:(x11947 : any list) ->
            fun ~newTarget:(x11949 : Function.t) ->
              untyped_object_of_js
                (Ojs.call (t_to_js x11950) "construct"
                   [|(T.t_to_js x11946);(Ojs.list_to_js any_to_js x11947);(
                     Function.t_to_js x11949)|])
    let (defineProperty :
      t ->
        target:T.t ->
          property:[ `U1 of string  | `U2 of symbol ] ->
            attributes:PropertyDescriptor.t -> bool)
      =
      fun (x11956 : t) ->
        fun ~target:(x11951 : T.t) ->
          fun ~property:(x11952 : [ `U1 of string  | `U2 of symbol ]) ->
            fun ~attributes:(x11955 : PropertyDescriptor.t) ->
              Ojs.bool_of_js
                (Ojs.call (t_to_js x11956) "defineProperty"
                   [|(T.t_to_js x11951);((match x11952 with
                                          | `U1 x11953 ->
                                              Ojs.string_to_js x11953
                                          | `U2 x11954 -> symbol_to_js x11954));(
                     PropertyDescriptor.t_to_js x11955)|])
    let (deleteProperty :
      t -> target:T.t -> p:[ `U1 of string  | `U2 of symbol ] -> bool) =
      fun (x11961 : t) ->
        fun ~target:(x11957 : T.t) ->
          fun ~p:(x11958 : [ `U1 of string  | `U2 of symbol ]) ->
            Ojs.bool_of_js
              (Ojs.call (t_to_js x11961) "deleteProperty"
                 [|(T.t_to_js x11957);((match x11958 with
                                        | `U1 x11959 ->
                                            Ojs.string_to_js x11959
                                        | `U2 x11960 -> symbol_to_js x11960))|])
    let (get_ :
      t ->
        target:T.t ->
          p:[ `U1 of string  | `U2 of symbol ] -> receiver:any -> any)
      =
      fun (x11967 : t) ->
        fun ~target:(x11962 : T.t) ->
          fun ~p:(x11963 : [ `U1 of string  | `U2 of symbol ]) ->
            fun ~receiver:(x11966 : any) ->
              any_of_js
                (Ojs.call (t_to_js x11967) "get"
                   [|(T.t_to_js x11962);((match x11963 with
                                          | `U1 x11964 ->
                                              Ojs.string_to_js x11964
                                          | `U2 x11965 -> symbol_to_js x11965));(
                     any_to_js x11966)|])
    let (getOwnPropertyDescriptor :
      t ->
        target:T.t ->
          p:[ `U1 of string  | `U2 of symbol ] -> PropertyDescriptor.t option)
      =
      fun (x11972 : t) ->
        fun ~target:(x11968 : T.t) ->
          fun ~p:(x11969 : [ `U1 of string  | `U2 of symbol ]) ->
            Ojs.option_of_js PropertyDescriptor.t_of_js
              (Ojs.call (t_to_js x11972) "getOwnPropertyDescriptor"
                 [|(T.t_to_js x11968);((match x11969 with
                                        | `U1 x11970 ->
                                            Ojs.string_to_js x11970
                                        | `U2 x11971 -> symbol_to_js x11971))|])
    let (getPrototypeOf : t -> target:T.t -> untyped_object option) =
      fun (x11975 : t) ->
        fun ~target:(x11974 : T.t) ->
          Ojs.option_of_js untyped_object_of_js
            (Ojs.call (t_to_js x11975) "getPrototypeOf"
               [|(T.t_to_js x11974)|])
    let (has :
      t -> target:T.t -> p:[ `U1 of string  | `U2 of symbol ] -> bool) =
      fun (x11981 : t) ->
        fun ~target:(x11977 : T.t) ->
          fun ~p:(x11978 : [ `U1 of string  | `U2 of symbol ]) ->
            Ojs.bool_of_js
              (Ojs.call (t_to_js x11981) "has"
                 [|(T.t_to_js x11977);((match x11978 with
                                        | `U1 x11979 ->
                                            Ojs.string_to_js x11979
                                        | `U2 x11980 -> symbol_to_js x11980))|])
    let (isExtensible : t -> target:T.t -> bool) =
      fun (x11983 : t) ->
        fun ~target:(x11982 : T.t) ->
          Ojs.bool_of_js
            (Ojs.call (t_to_js x11983) "isExtensible" [|(T.t_to_js x11982)|])
    let (ownKeys :
      t ->
        target:T.t ->
          [ `String of string  | `Symbol of symbol ] Primitive.t ArrayLike.t)
      =
      fun (x11985 : t) ->
        fun ~target:(x11984 : T.t) ->
          ArrayLike.t_of_js
            (fun (x11986 : Ojs.t) ->
               Primitive.t_of_js
                 (fun (x11987 : Ojs.t) ->
                    let x11988 = x11987 in
                    match Ojs.string_of_js
                            (Ojs.get_prop_ascii x11988 "dummy")
                    with
                    | "String" -> `String (Ojs.string_of_js x11988)
                    | "Symbol" -> `Symbol (symbol_of_js x11988)
                    | _ -> assert false) x11986)
            (Ojs.call (t_to_js x11985) "ownKeys" [|(T.t_to_js x11984)|])
    let (preventExtensions : t -> target:T.t -> bool) =
      fun (x11990 : t) ->
        fun ~target:(x11989 : T.t) ->
          Ojs.bool_of_js
            (Ojs.call (t_to_js x11990) "preventExtensions"
               [|(T.t_to_js x11989)|])
    let (set_ :
      t ->
        target:T.t ->
          p:[ `U1 of string  | `U2 of symbol ] ->
            newValue:any -> receiver:any -> bool)
      =
      fun (x11997 : t) ->
        fun ~target:(x11991 : T.t) ->
          fun ~p:(x11992 : [ `U1 of string  | `U2 of symbol ]) ->
            fun ~newValue:(x11995 : any) ->
              fun ~receiver:(x11996 : any) ->
                Ojs.bool_of_js
                  (Ojs.call (t_to_js x11997) "set"
                     [|(T.t_to_js x11991);((match x11992 with
                                            | `U1 x11993 ->
                                                Ojs.string_to_js x11993
                                            | `U2 x11994 ->
                                                symbol_to_js x11994));(
                       any_to_js x11995);(any_to_js x11996)|])
    let (setPrototypeOf : t -> target:T.t -> v:untyped_object option -> bool)
      =
      fun (x12001 : t) ->
        fun ~target:(x11998 : T.t) ->
          fun ~v:(x11999 : untyped_object option) ->
            Ojs.bool_of_js
              (Ojs.call (t_to_js x12001) "setPrototypeOf"
                 [|(T.t_to_js x11998);(Ojs.option_to_js untyped_object_to_js
                                         x11999)|])
  end
module AsyncGenerator_Make(T:Ojs.T)(TReturn:Ojs.T)(TNext:Ojs.T) =
  struct
    type ('T, 'TReturn, 'TNext) parent =
      ('T, 'TReturn, 'TNext) AsyncGenerator.t
    let rec parent_of_js :
      'T 'TReturn 'TNext .
        (Ojs.t -> 'T) ->
          (Ojs.t -> 'TReturn) ->
            (Ojs.t -> 'TNext) -> Ojs.t -> ('T, 'TReturn, 'TNext) parent
      =
      fun (type __T) ->
        fun (type __TReturn) ->
          fun (type __TNext) ->
            fun (__T_of_js : Ojs.t -> __T) ->
              fun (__TReturn_of_js : Ojs.t -> __TReturn) ->
                fun (__TNext_of_js : Ojs.t -> __TNext) ->
                  fun (x12006 : Ojs.t) ->
                    AsyncGenerator.t_of_js __T_of_js __TReturn_of_js
                      __TNext_of_js x12006
    and parent_to_js :
      'T 'TReturn 'TNext .
        ('T -> Ojs.t) ->
          ('TReturn -> Ojs.t) ->
            ('TNext -> Ojs.t) -> ('T, 'TReturn, 'TNext) parent -> Ojs.t
      =
      fun (type __T) ->
        fun (type __TReturn) ->
          fun (type __TNext) ->
            fun (__T_to_js : __T -> Ojs.t) ->
              fun (__TReturn_to_js : __TReturn -> Ojs.t) ->
                fun (__TNext_to_js : __TNext -> Ojs.t) ->
                  fun (x12002 : (__T, __TReturn, __TNext) AsyncGenerator.t)
                    ->
                    AsyncGenerator.t_to_js __T_to_js __TReturn_to_js
                      __TNext_to_js x12002
    type t = (T.t, TReturn.t, TNext.t) parent
    let rec t_of_js : Ojs.t -> t =
      fun (x12014 : Ojs.t) ->
        parent_of_js T.t_of_js TReturn.t_of_js TNext.t_of_js x12014
    and t_to_js : t -> Ojs.t =
      fun (x12010 : (T.t, TReturn.t, TNext.t) parent) ->
        parent_to_js T.t_to_js TReturn.t_to_js TNext.t_to_js x12010
    let (next :
      t -> args:any list -> (T.t, TReturn.t) IteratorResult.t Promise.t) =
      fun (x12021 : t) ->
        fun ~args:(x12018 : any list) ->
          Promise.t_of_js
            (fun (x12023 : Ojs.t) ->
               IteratorResult.t_of_js T.t_of_js TReturn.t_of_js x12023)
            (let x12022 = t_to_js x12021 in
             Ojs.call (Ojs.get_prop_ascii x12022 "next") "apply"
               [|x12022;((let x12019 =
                            Ojs.new_obj
                              (Ojs.get_prop_ascii Ojs.global "Array") 
                              [||] in
                          List.iter
                            (fun (x12020 : any) ->
                               ignore
                                 (Ojs.call x12019 "push"
                                    [|(any_to_js x12020)|])) x12018;
                          x12019))|])
    let (return :
      t ->
        value:[ `U1 of TReturn.t  | `U2 of TReturn.t PromiseLike.t ] ->
          (T.t, TReturn.t) IteratorResult.t Promise.t)
      =
      fun (x12030 : t) ->
        fun
          ~value:(x12026 :
                   [ `U1 of TReturn.t  | `U2 of TReturn.t PromiseLike.t ])
          ->
          Promise.t_of_js
            (fun (x12031 : Ojs.t) ->
               IteratorResult.t_of_js T.t_of_js TReturn.t_of_js x12031)
            (Ojs.call (t_to_js x12030) "return"
               [|((match x12026 with
                   | `U1 x12027 -> TReturn.t_to_js x12027
                   | `U2 x12028 -> PromiseLike.t_to_js TReturn.t_to_js x12028))|])
    let (throw : t -> e:any -> (T.t, TReturn.t) IteratorResult.t Promise.t) =
      fun (x12035 : t) ->
        fun ~e:(x12034 : any) ->
          Promise.t_of_js
            (fun (x12036 : Ojs.t) ->
               IteratorResult.t_of_js T.t_of_js TReturn.t_of_js x12036)
            (Ojs.call (t_to_js x12035) "throw" [|(any_to_js x12034)|])
  end
module AsyncIterator_Make(T:Ojs.T)(TReturn:Ojs.T)(TNext:Ojs.T) =
  struct
    type ('T, 'TReturn, 'TNext) parent =
      ('T, 'TReturn, 'TNext) AsyncIterator.t
    let rec parent_of_js :
      'T 'TReturn 'TNext .
        (Ojs.t -> 'T) ->
          (Ojs.t -> 'TReturn) ->
            (Ojs.t -> 'TNext) -> Ojs.t -> ('T, 'TReturn, 'TNext) parent
      =
      fun (type __T) ->
        fun (type __TReturn) ->
          fun (type __TNext) ->
            fun (__T_of_js : Ojs.t -> __T) ->
              fun (__TReturn_of_js : Ojs.t -> __TReturn) ->
                fun (__TNext_of_js : Ojs.t -> __TNext) ->
                  fun (x12043 : Ojs.t) ->
                    AsyncIterator.t_of_js __T_of_js __TReturn_of_js
                      __TNext_of_js x12043
    and parent_to_js :
      'T 'TReturn 'TNext .
        ('T -> Ojs.t) ->
          ('TReturn -> Ojs.t) ->
            ('TNext -> Ojs.t) -> ('T, 'TReturn, 'TNext) parent -> Ojs.t
      =
      fun (type __T) ->
        fun (type __TReturn) ->
          fun (type __TNext) ->
            fun (__T_to_js : __T -> Ojs.t) ->
              fun (__TReturn_to_js : __TReturn -> Ojs.t) ->
                fun (__TNext_to_js : __TNext -> Ojs.t) ->
                  fun (x12039 : (__T, __TReturn, __TNext) AsyncIterator.t) ->
                    AsyncIterator.t_to_js __T_to_js __TReturn_to_js
                      __TNext_to_js x12039
    type t = (T.t, TReturn.t, TNext.t) parent
    let rec t_of_js : Ojs.t -> t =
      fun (x12051 : Ojs.t) ->
        parent_of_js T.t_of_js TReturn.t_of_js TNext.t_of_js x12051
    and t_to_js : t -> Ojs.t =
      fun (x12047 : (T.t, TReturn.t, TNext.t) parent) ->
        parent_to_js T.t_to_js TReturn.t_to_js TNext.t_to_js x12047
    let (next :
      t -> args:any list -> (T.t, TReturn.t) IteratorResult.t Promise.t) =
      fun (x12058 : t) ->
        fun ~args:(x12055 : any list) ->
          Promise.t_of_js
            (fun (x12060 : Ojs.t) ->
               IteratorResult.t_of_js T.t_of_js TReturn.t_of_js x12060)
            (let x12059 = t_to_js x12058 in
             Ojs.call (Ojs.get_prop_ascii x12059 "next") "apply"
               [|x12059;((let x12056 =
                            Ojs.new_obj
                              (Ojs.get_prop_ascii Ojs.global "Array") 
                              [||] in
                          List.iter
                            (fun (x12057 : any) ->
                               ignore
                                 (Ojs.call x12056 "push"
                                    [|(any_to_js x12057)|])) x12055;
                          x12056))|])
    let (return :
      t ->
        ?value:[ `U1 of TReturn.t  | `U2 of TReturn.t PromiseLike.t ] ->
          unit -> (T.t, TReturn.t) IteratorResult.t Promise.t)
      =
      fun (x12069 : t) ->
        fun
          ?value:(x12063 :
                   [ `U1 of TReturn.t  | `U2 of TReturn.t PromiseLike.t ]
                     option)
          ->
          fun () ->
            Promise.t_of_js
              (fun (x12071 : Ojs.t) ->
                 IteratorResult.t_of_js T.t_of_js TReturn.t_of_js x12071)
              (let x12070 = t_to_js x12069 in
               Ojs.call (Ojs.get_prop_ascii x12070 "return") "apply"
                 [|x12070;((let x12064 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x12063 with
                             | Some x12065 ->
                                 ignore
                                   (Ojs.call x12064 "push"
                                      [|((match x12065 with
                                          | `U1 x12066 ->
                                              TReturn.t_to_js x12066
                                          | `U2 x12067 ->
                                              PromiseLike.t_to_js
                                                TReturn.t_to_js x12067))|])
                             | None -> ());
                            x12064))|])
    let (throw :
      t -> ?e:any -> unit -> (T.t, TReturn.t) IteratorResult.t Promise.t) =
      fun (x12077 : t) ->
        fun ?e:(x12074 : any option) ->
          fun () ->
            Promise.t_of_js
              (fun (x12079 : Ojs.t) ->
                 IteratorResult.t_of_js T.t_of_js TReturn.t_of_js x12079)
              (let x12078 = t_to_js x12077 in
               Ojs.call (Ojs.get_prop_ascii x12078 "throw") "apply"
                 [|x12078;((let x12075 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x12074 with
                             | Some x12076 ->
                                 ignore
                                   (Ojs.call x12075 "push"
                                      [|(any_to_js x12076)|])
                             | None -> ());
                            x12075))|])
  end
module WeakRef_Make(T:Ojs.T) =
  struct
    type 'T parent = 'T WeakRef.t
    let rec parent_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T parent =
      fun (type __T) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x12084 : Ojs.t) -> WeakRef.t_of_js __T_of_js x12084
    and parent_to_js : 'T . ('T -> Ojs.t) -> 'T parent -> Ojs.t =
      fun (type __T) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x12082 : __T WeakRef.t) -> WeakRef.t_to_js __T_to_js x12082
    type t = T.t parent
    let rec t_of_js : Ojs.t -> t =
      fun (x12088 : Ojs.t) -> parent_of_js T.t_of_js x12088
    and t_to_js : t -> Ojs.t =
      fun (x12086 : T.t parent) -> parent_to_js T.t_to_js x12086
    let (deref : t -> T.t option) =
      fun (x12090 : t) ->
        Ojs.option_of_js T.t_of_js (Ojs.call (t_to_js x12090) "deref" [||])
    let (prototype : unit -> any parent) =
      fun () ->
        parent_of_js any_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "WeakRef")
             "prototype")
    let (create : T.t -> t) =
      fun (x12093 : T.t) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "WeakRef")
             [|(T.t_to_js x12093)|])
  end
module FinalizationRegistry_Make(T:Ojs.T) =
  struct
    type 'T parent = 'T FinalizationRegistry.t
    let rec parent_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T parent =
      fun (type __T) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x12096 : Ojs.t) ->
            FinalizationRegistry.t_of_js __T_of_js x12096
    and parent_to_js : 'T . ('T -> Ojs.t) -> 'T parent -> Ojs.t =
      fun (type __T) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x12094 : __T FinalizationRegistry.t) ->
            FinalizationRegistry.t_to_js __T_to_js x12094
    type t = T.t parent
    let rec t_of_js : Ojs.t -> t =
      fun (x12100 : Ojs.t) -> parent_of_js T.t_of_js x12100
    and t_to_js : t -> Ojs.t =
      fun (x12098 : T.t parent) -> parent_to_js T.t_to_js x12098
    let (register :
      t ->
        target:WeakKey.t ->
          heldValue:T.t -> ?unregisterToken:WeakKey.t -> unit -> unit)
      =
      fun (x12107 : t) ->
        fun ~target:(x12102 : WeakKey.t) ->
          fun ~heldValue:(x12103 : T.t) ->
            fun ?unregisterToken:(x12104 : WeakKey.t option) ->
              fun () ->
                ignore
                  (let x12108 = t_to_js x12107 in
                   Ojs.call (Ojs.get_prop_ascii x12108 "register") "apply"
                     [|x12108;((let x12105 =
                                  Ojs.new_obj
                                    (Ojs.get_prop_ascii Ojs.global "Array")
                                    [||] in
                                ignore
                                  (Ojs.call x12105 "push"
                                     [|(WeakKey.t_to_js x12102)|]);
                                ignore
                                  (Ojs.call x12105 "push"
                                     [|(T.t_to_js x12103)|]);
                                (match x12104 with
                                 | Some x12106 ->
                                     ignore
                                       (Ojs.call x12105 "push"
                                          [|(WeakKey.t_to_js x12106)|])
                                 | None -> ());
                                x12105))|])
    let (unregister : t -> unregisterToken:WeakKey.t -> unit) =
      fun (x12110 : t) ->
        fun ~unregisterToken:(x12109 : WeakKey.t) ->
          ignore
            (Ojs.call (t_to_js x12110) "unregister"
               [|(WeakKey.t_to_js x12109)|])
    let (prototype : unit -> any parent) =
      fun () ->
        parent_of_js any_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "FinalizationRegistry")
             "prototype")
    let (create : (T.t -> unit) -> t) =
      fun (x12112 : T.t -> unit) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "FinalizationRegistry")
             [|(Ojs.fun_to_js 1
                  (fun (x12113 : Ojs.t) -> x12112 (T.t_of_js x12113)))|])
  end
module PromiseWithResolvers_Make(T:Ojs.T) =
  struct
    type 'T parent = 'T PromiseWithResolvers.t
    let rec parent_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T parent =
      fun (type __T) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x12116 : Ojs.t) ->
            PromiseWithResolvers.t_of_js __T_of_js x12116
    and parent_to_js : 'T . ('T -> Ojs.t) -> 'T parent -> Ojs.t =
      fun (type __T) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x12114 : __T PromiseWithResolvers.t) ->
            PromiseWithResolvers.t_to_js __T_to_js x12114
    type t = T.t parent
    let rec t_of_js : Ojs.t -> t =
      fun (x12120 : Ojs.t) -> parent_of_js T.t_of_js x12120
    and t_to_js : t -> Ojs.t =
      fun (x12118 : T.t parent) -> parent_to_js T.t_to_js x12118
    let (get_promise : t -> T.t Promise.t) =
      fun (x12122 : t) ->
        Promise.t_of_js T.t_of_js
          (Ojs.get_prop_ascii (t_to_js x12122) "promise")
    let (set_promise : t -> T.t Promise.t -> unit) =
      fun (x12124 : t) ->
        fun (x12125 : T.t Promise.t) ->
          Ojs.set_prop_ascii (t_to_js x12124) "promise"
            (Promise.t_to_js T.t_to_js x12125)
    let (resolve :
      t -> value:[ `U1 of T.t  | `U2 of T.t PromiseLike.t ] -> unit) =
      fun (x12131 : t) ->
        fun ~value:(x12127 : [ `U1 of T.t  | `U2 of T.t PromiseLike.t ]) ->
          ignore
            (Ojs.call (t_to_js x12131) "resolve"
               [|((match x12127 with
                   | `U1 x12128 -> T.t_to_js x12128
                   | `U2 x12129 -> PromiseLike.t_to_js T.t_to_js x12129))|])
    let (reject : t -> ?reason:any -> unit -> unit) =
      fun (x12135 : t) ->
        fun ?reason:(x12132 : any option) ->
          fun () ->
            ignore
              (let x12136 = t_to_js x12135 in
               Ojs.call (Ojs.get_prop_ascii x12136 "reject") "apply"
                 [|x12136;((let x12133 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x12132 with
                             | Some x12134 ->
                                 ignore
                                   (Ojs.call x12133 "push"
                                      [|(any_to_js x12134)|])
                             | None -> ());
                            x12133))|])
  end
module PromiseFulfilledResult_Make(T:Ojs.T) =
  struct
    type 'T parent = 'T PromiseFulfilledResult.t
    let rec parent_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T parent =
      fun (type __T) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x12139 : Ojs.t) ->
            PromiseFulfilledResult.t_of_js __T_of_js x12139
    and parent_to_js : 'T . ('T -> Ojs.t) -> 'T parent -> Ojs.t =
      fun (type __T) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x12137 : __T PromiseFulfilledResult.t) ->
            PromiseFulfilledResult.t_to_js __T_to_js x12137
    type t = T.t parent
    let rec t_of_js : Ojs.t -> t =
      fun (x12143 : Ojs.t) -> parent_of_js T.t_of_js x12143
    and t_to_js : t -> Ojs.t =
      fun (x12141 : T.t parent) -> parent_to_js T.t_to_js x12141
    let (get_status : t -> [ `L_s62_fulfilled ]) =
      fun (x12145 : t) ->
        let x12146 = Ojs.get_prop_ascii (t_to_js x12145) "status" in
        match Ojs.string_of_js x12146 with
        | "fulfilled" -> `L_s62_fulfilled
        | _ -> assert false
    let (set_status : t -> [ `L_s62_fulfilled ] -> unit) =
      fun (x12147 : t) ->
        fun (x12148 : [ `L_s62_fulfilled ]) ->
          Ojs.set_prop_ascii (t_to_js x12147) "status"
            (match x12148 with
             | `L_s62_fulfilled -> Ojs.string_to_js "fulfilled")
    let (get_value : t -> T.t) =
      fun (x12149 : t) ->
        T.t_of_js (Ojs.get_prop_ascii (t_to_js x12149) "value")
    let (set_value : t -> T.t -> unit) =
      fun (x12150 : t) ->
        fun (x12151 : T.t) ->
          Ojs.set_prop_ascii (t_to_js x12150) "value" (T.t_to_js x12151)
  end
let (nan : unit -> float) =
  fun () -> Ojs.float_of_js (Ojs.get_prop_ascii Ojs.global "NaN")
let (infinity : unit -> float) =
  fun () -> Ojs.float_of_js (Ojs.get_prop_ascii Ojs.global "Infinity")
let (eval : string -> any) =
  fun (x12152 : string) ->
    any_of_js (Ojs.call Ojs.global "eval" [|(Ojs.string_to_js x12152)|])
let (parseInt : string:string -> ?radix:float -> unit -> float) =
  fun ~string:(x12153 : string) ->
    fun ?radix:(x12154 : float option) ->
      fun () ->
        Ojs.float_of_js
          (let x12157 = Ojs.global in
           Ojs.call (Ojs.get_prop_ascii x12157 "parseInt") "apply"
             [|x12157;((let x12155 =
                          Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                            [||] in
                        ignore
                          (Ojs.call x12155 "push"
                             [|(Ojs.string_to_js x12153)|]);
                        (match x12154 with
                         | Some x12156 ->
                             ignore
                               (Ojs.call x12155 "push"
                                  [|(Ojs.float_to_js x12156)|])
                         | None -> ());
                        x12155))|])
let (parseFloat : string -> float) =
  fun (x12158 : string) ->
    Ojs.float_of_js
      (Ojs.call Ojs.global "parseFloat" [|(Ojs.string_to_js x12158)|])
let (isNaN : float -> bool) =
  fun (x12159 : float) ->
    Ojs.bool_of_js (Ojs.call Ojs.global "isNaN" [|(Ojs.float_to_js x12159)|])
let (isFinite : float -> bool) =
  fun (x12160 : float) ->
    Ojs.bool_of_js
      (Ojs.call Ojs.global "isFinite" [|(Ojs.float_to_js x12160)|])
let (decodeURI : string -> string) =
  fun (x12161 : string) ->
    Ojs.string_of_js
      (Ojs.call Ojs.global "decodeURI" [|(Ojs.string_to_js x12161)|])
let (decodeURIComponent : string -> string) =
  fun (x12162 : string) ->
    Ojs.string_of_js
      (Ojs.call Ojs.global "decodeURIComponent" [|(Ojs.string_to_js x12162)|])
let (encodeURI : string -> string) =
  fun (x12163 : string) ->
    Ojs.string_of_js
      (Ojs.call Ojs.global "encodeURI" [|(Ojs.string_to_js x12163)|])
let (encodeURIComponent :
  [ `Number of float  | `String of string  | `Boolean of bool ] Primitive.t
    -> string)
  =
  fun
    (x12164 :
      [ `Number of float  | `String of string  | `Boolean of bool ]
        Primitive.t)
    ->
    Ojs.string_of_js
      (Ojs.call Ojs.global "encodeURIComponent"
         [|(Primitive.t_to_js
              (fun
                 (x12165 :
                   [ `Number of float  | `String of string 
                   | `Boolean of bool ])
                 ->
                 match x12165 with
                 | `Number x12166 -> Ojs.float_to_js x12166
                 | `String x12167 -> Ojs.string_to_js x12167
                 | `Boolean x12168 -> Ojs.bool_to_js x12168) x12164)|])
let (escape : string -> string) =
  fun (x12169 : string) ->
    Ojs.string_of_js
      (Ojs.call Ojs.global "escape" [|(Ojs.string_to_js x12169)|])
let (unescape : string -> string) =
  fun (x12170 : string) ->
    Ojs.string_of_js
      (Ojs.call Ojs.global "unescape" [|(Ojs.string_to_js x12170)|])
let (proxy : unit -> ProxyConstructor.t) =
  fun () -> ProxyConstructor.t_of_js (Ojs.get_prop_ascii Ojs.global "Proxy")
