[@@@js.dummy "!! This code has been generated by gen_js_api !!"]
[@@@ocaml.warning "-7-32-39"]
[@@@ocaml.warning "-7-11-32-33-39"]
open Ts2ocaml_min
module WeakKey =
  struct
    type t = [ `Symbol of symbol  | `Other of untyped_object ] Primitive.t
    let rec t_of_js : Ojs.t -> t =
      fun (x5 : Ojs.t) ->
        Primitive.t_of_js
          (fun (x6 : Ojs.t) ->
             let x7 = x6 in
             match Ojs.string_of_js (Ojs.get_prop_ascii x7 "dummy") with
             | "Symbol" -> `Symbol (symbol_of_js x7)
             | "Other" -> `Other (untyped_object_of_js x7)
             | _ -> assert false) x5
    and t_to_js : t -> Ojs.t =
      fun
        (x1 : [ `Symbol of symbol  | `Other of untyped_object ] Primitive.t)
        ->
        Primitive.t_to_js
          (fun (x2 : [ `Symbol of symbol  | `Other of untyped_object ]) ->
             match x2 with
             | `Symbol x3 -> symbol_to_js x3
             | `Other x4 -> untyped_object_to_js x4) x1
  end
module IteratorYieldResult =
  struct
    type 'TYield t = [ `IteratorYieldResult of 'TYield ] intf
    let rec t_of_js : 'TYield . (Ojs.t -> 'TYield) -> Ojs.t -> 'TYield t =
      fun _TYield -> Obj.magic
    and t_to_js : 'TYield . ('TYield -> Ojs.t) -> 'TYield t -> Ojs.t =
      fun _TYield -> Obj.magic
    type 'TYield tags = [ `IteratorYieldResult of 'TYield ]
    type ('tags, 'TYield) this =
      'tags intf constraint 'tags = [> `IteratorYieldResult of 'TYield ]
    let rec this_of_js :
      'tags 'TYield .
        (Ojs.t -> 'tags) ->
          (Ojs.t -> 'TYield) -> Ojs.t -> ('tags, 'TYield) this
      =
      fun (type __tags) ->
        fun (type __TYield) ->
          fun (__tags_of_js : Ojs.t -> __tags) ->
            fun (__TYield_of_js : Ojs.t -> __TYield) ->
              fun (x10 : Ojs.t) -> intf_of_js __tags_of_js x10
    and this_to_js :
      'tags 'TYield .
        ('tags -> Ojs.t) ->
          ('TYield -> Ojs.t) -> ('tags, 'TYield) this -> Ojs.t
      =
      fun (type __tags) ->
        fun (type __TYield) ->
          fun (__tags_to_js : __tags -> Ojs.t) ->
            fun (__TYield_to_js : __TYield -> Ojs.t) ->
              fun (x8 : __tags intf) -> intf_to_js __tags_to_js x8
    let (get_done : ('tags, 'TYield) this -> [ `L_b_false ] option) =
      fun (x12 : ('tags, 'TYield) this) ->
        Ojs.option_of_js
          (fun (x15 : Ojs.t) ->
             let x16 = x15 in
             match Ojs.bool_of_js x16 with
             | false -> `L_b_false
             | _ -> assert false)
          (Ojs.get_prop_ascii (this_to_js Obj.magic Obj.magic x12) "done")
    let (set_done : ('tags, 'TYield) this -> [ `L_b_false ] -> unit) =
      fun (x17 : ('tags, 'TYield) this) ->
        fun (x18 : [ `L_b_false ]) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic Obj.magic x17) "done"
            (match x18 with | `L_b_false -> Ojs.bool_to_js false)
    let (get_value : ('tags, 'TYield) this -> 'TYield) =
      fun (x21 : ('tags, 'TYield) this) ->
        Obj.magic
          (Ojs.get_prop_ascii (this_to_js Obj.magic Obj.magic x21) "value")
    let (set_value : ('tags, 'TYield) this -> 'TYield -> unit) =
      fun (x24 : ('tags, 'TYield) this) ->
        fun (x25 : 'TYield) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic Obj.magic x24) "value"
            (Obj.magic x25)
    let (create :
      ?done_:[ `L_b_false ] -> value:'TYield -> unit -> 'TYield t) =
      fun ?done_:(x28 : [ `L_b_false ] option) ->
        fun ~value:(x29 : 'TYield) ->
          fun () ->
            let x30 = Ojs.empty_obj () in
            (match x28 with
             | Some x32 ->
                 Ojs.set_prop_ascii x30 "done"
                   (match x32 with | `L_b_false -> Ojs.bool_to_js false)
             | None -> ());
            Ojs.set_prop_ascii x30 "value" (Obj.magic x29);
            t_of_js Obj.magic x30
    let cast_from = Obj.magic
  end
module IteratorReturnResult =
  struct
    type 'TReturn t = [ `IteratorReturnResult of 'TReturn ] intf
    let rec t_of_js : 'TReturn . (Ojs.t -> 'TReturn) -> Ojs.t -> 'TReturn t =
      fun _TReturn -> Obj.magic
    and t_to_js : 'TReturn . ('TReturn -> Ojs.t) -> 'TReturn t -> Ojs.t =
      fun _TReturn -> Obj.magic
    type 'TReturn tags = [ `IteratorReturnResult of 'TReturn ]
    type ('tags, 'TReturn) this =
      'tags intf constraint 'tags = [> `IteratorReturnResult of 'TReturn ]
    let rec this_of_js :
      'tags 'TReturn .
        (Ojs.t -> 'tags) ->
          (Ojs.t -> 'TReturn) -> Ojs.t -> ('tags, 'TReturn) this
      =
      fun (type __tags) ->
        fun (type __TReturn) ->
          fun (__tags_of_js : Ojs.t -> __tags) ->
            fun (__TReturn_of_js : Ojs.t -> __TReturn) ->
              fun (x35 : Ojs.t) -> intf_of_js __tags_of_js x35
    and this_to_js :
      'tags 'TReturn .
        ('tags -> Ojs.t) ->
          ('TReturn -> Ojs.t) -> ('tags, 'TReturn) this -> Ojs.t
      =
      fun (type __tags) ->
        fun (type __TReturn) ->
          fun (__tags_to_js : __tags -> Ojs.t) ->
            fun (__TReturn_to_js : __TReturn -> Ojs.t) ->
              fun (x33 : __tags intf) -> intf_to_js __tags_to_js x33
    let (get_done : ('tags, 'TReturn) this -> [ `L_b_true ]) =
      fun (x37 : ('tags, 'TReturn) this) ->
        let x40 =
          Ojs.get_prop_ascii (this_to_js Obj.magic Obj.magic x37) "done" in
        match Ojs.bool_of_js x40 with | true -> `L_b_true | _ -> assert false
    let (set_done : ('tags, 'TReturn) this -> [ `L_b_true ] -> unit) =
      fun (x41 : ('tags, 'TReturn) this) ->
        fun (x42 : [ `L_b_true ]) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic Obj.magic x41) "done"
            (match x42 with | `L_b_true -> Ojs.bool_to_js true)
    let (get_value : ('tags, 'TReturn) this -> 'TReturn) =
      fun (x45 : ('tags, 'TReturn) this) ->
        Obj.magic
          (Ojs.get_prop_ascii (this_to_js Obj.magic Obj.magic x45) "value")
    let (set_value : ('tags, 'TReturn) this -> 'TReturn -> unit) =
      fun (x48 : ('tags, 'TReturn) this) ->
        fun (x49 : 'TReturn) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic Obj.magic x48) "value"
            (Obj.magic x49)
    let (create :
      done_:[ `L_b_true ] -> value:'TReturn -> unit -> 'TReturn t) =
      fun ~done_:(x52 : [ `L_b_true ]) ->
        fun ~value:(x53 : 'TReturn) ->
          fun () ->
            let x54 = Ojs.empty_obj () in
            Ojs.set_prop_ascii x54 "done"
              (match x52 with | `L_b_true -> Ojs.bool_to_js true);
            Ojs.set_prop_ascii x54 "value" (Obj.magic x53);
            t_of_js Obj.magic x54
    let cast_from = Obj.magic
  end
module IteratorResult =
  struct
    type ('T, 'TReturn) t =
      [ `U_b_false of 'T IteratorYieldResult.t 
      | `U_b_true of 'TReturn IteratorReturnResult.t ]
    let rec t_of_js :
      'T 'TReturn .
        (Ojs.t -> 'T) -> (Ojs.t -> 'TReturn) -> Ojs.t -> ('T, 'TReturn) t
      =
      fun (type __T) ->
        fun (type __TReturn) ->
          fun (__T_of_js : Ojs.t -> __T) ->
            fun (__TReturn_of_js : Ojs.t -> __TReturn) ->
              fun (x61 : Ojs.t) ->
                let x62 = x61 in
                match Ojs.bool_of_js (Ojs.get_prop_ascii x62 "done") with
                | false ->
                    `U_b_false (IteratorYieldResult.t_of_js __T_of_js x62)
                | true ->
                    `U_b_true
                      (IteratorReturnResult.t_of_js __TReturn_of_js x62)
    and t_to_js :
      'T 'TReturn .
        ('T -> Ojs.t) -> ('TReturn -> Ojs.t) -> ('T, 'TReturn) t -> Ojs.t
      =
      fun (type __T) ->
        fun (type __TReturn) ->
          fun (__T_to_js : __T -> Ojs.t) ->
            fun (__TReturn_to_js : __TReturn -> Ojs.t) ->
              fun
                (x56 :
                  [ `U_b_false of __T IteratorYieldResult.t 
                  | `U_b_true of __TReturn IteratorReturnResult.t ])
                ->
                match x56 with
                | `U_b_false x57 -> IteratorYieldResult.t_to_js __T_to_js x57
                | `U_b_true x59 ->
                    IteratorReturnResult.t_to_js __TReturn_to_js x59
    type 'T t_1 = ('T, any) t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 =
      fun (type __T) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x68 : Ojs.t) -> t_of_js __T_of_js any_of_js x68
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t =
      fun (type __T) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x65 : (__T, any) t) -> t_to_js __T_to_js any_to_js x65
  end
module Iterator =
  struct
    type ('T, 'TReturn, 'TNext) t =
      [ `Iterator of ('T * 'TReturn * 'TNext) ] intf
    let rec t_of_js :
      'T 'TReturn 'TNext .
        (Ojs.t -> 'T) ->
          (Ojs.t -> 'TReturn) ->
            (Ojs.t -> 'TNext) -> Ojs.t -> ('T, 'TReturn, 'TNext) t
      = fun _T -> fun _TReturn -> fun _TNext -> Obj.magic
    and t_to_js :
      'T 'TReturn 'TNext .
        ('T -> Ojs.t) ->
          ('TReturn -> Ojs.t) ->
            ('TNext -> Ojs.t) -> ('T, 'TReturn, 'TNext) t -> Ojs.t
      = fun _T -> fun _TReturn -> fun _TNext -> Obj.magic
    type ('T, 'TReturn) t_2 = ('T, 'TReturn, undefined) t
    let rec t_2_of_js :
      'T 'TReturn .
        (Ojs.t -> 'T) -> (Ojs.t -> 'TReturn) -> Ojs.t -> ('T, 'TReturn) t_2
      =
      fun (type __T) ->
        fun (type __TReturn) ->
          fun (__T_of_js : Ojs.t -> __T) ->
            fun (__TReturn_of_js : Ojs.t -> __TReturn) ->
              fun (x75 : Ojs.t) ->
                t_of_js __T_of_js __TReturn_of_js undefined_of_js x75
    and t_2_to_js :
      'T 'TReturn .
        ('T -> Ojs.t) -> ('TReturn -> Ojs.t) -> ('T, 'TReturn) t_2 -> Ojs.t
      =
      fun (type __T) ->
        fun (type __TReturn) ->
          fun (__T_to_js : __T -> Ojs.t) ->
            fun (__TReturn_to_js : __TReturn -> Ojs.t) ->
              fun (x71 : (__T, __TReturn, undefined) t) ->
                t_to_js __T_to_js __TReturn_to_js undefined_to_js x71
    type 'T t_1 = ('T, any, undefined) t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 =
      fun (type __T) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x83 : Ojs.t) ->
            t_of_js __T_of_js any_of_js undefined_of_js x83
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t =
      fun (type __T) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x79 : (__T, any, undefined) t) ->
            t_to_js __T_to_js any_to_js undefined_to_js x79
    type ('T, 'TReturn, 'TNext) tags =
      [ `Iterator of ('T * 'TReturn * 'TNext) ]
    type ('T, 'TReturn) tags_2 = ('T, 'TReturn, undefined) tags
    type 'T tags_1 = ('T, any, undefined) tags
    type ('tags, 'T, 'TReturn, 'TNext) this =
      'tags intf constraint 'tags =
                  [> `Iterator of ('T * 'TReturn * 'TNext) ]
    let rec this_of_js :
      'tags 'T 'TReturn 'TNext .
        (Ojs.t -> 'tags) ->
          (Ojs.t -> 'T) ->
            (Ojs.t -> 'TReturn) ->
              (Ojs.t -> 'TNext) ->
                Ojs.t -> ('tags, 'T, 'TReturn, 'TNext) this
      =
      fun (type __tags) ->
        fun (type __T) ->
          fun (type __TReturn) ->
            fun (type __TNext) ->
              fun (__tags_of_js : Ojs.t -> __tags) ->
                fun (__T_of_js : Ojs.t -> __T) ->
                  fun (__TReturn_of_js : Ojs.t -> __TReturn) ->
                    fun (__TNext_of_js : Ojs.t -> __TNext) ->
                      fun (x89 : Ojs.t) -> intf_of_js __tags_of_js x89
    and this_to_js :
      'tags 'T 'TReturn 'TNext .
        ('tags -> Ojs.t) ->
          ('T -> Ojs.t) ->
            ('TReturn -> Ojs.t) ->
              ('TNext -> Ojs.t) ->
                ('tags, 'T, 'TReturn, 'TNext) this -> Ojs.t
      =
      fun (type __tags) ->
        fun (type __T) ->
          fun (type __TReturn) ->
            fun (type __TNext) ->
              fun (__tags_to_js : __tags -> Ojs.t) ->
                fun (__T_to_js : __T -> Ojs.t) ->
                  fun (__TReturn_to_js : __TReturn -> Ojs.t) ->
                    fun (__TNext_to_js : __TNext -> Ojs.t) ->
                      fun (x87 : __tags intf) -> intf_to_js __tags_to_js x87
    let (next :
      ('tags, 'T, 'TReturn, 'TNext) this ->
        args:any list -> ('T, 'TReturn) IteratorResult.t)
      =
      fun (x94 : ('tags, 'T, 'TReturn, 'TNext) this) ->
        fun ~args:(x91 : any list) ->
          IteratorResult.t_of_js Obj.magic Obj.magic
            (let x99 = this_to_js Obj.magic Obj.magic Obj.magic Obj.magic x94 in
             Ojs.call (Ojs.get_prop_ascii x99 "next") "apply"
               [|x99;((let x92 =
                         Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                           [||] in
                       List.iter
                         (fun (x93 : any) ->
                            ignore (Ojs.call x92 "push" [|(any_to_js x93)|]))
                         x91;
                       x92))|])
    let (return :
      ('tags, 'T, 'TReturn, 'TNext) this ->
        ?value:'TReturn -> unit -> ('T, 'TReturn) IteratorResult.t)
      =
      fun (x105 : ('tags, 'T, 'TReturn, 'TNext) this) ->
        fun ?value:(x102 : 'TReturn option) ->
          fun () ->
            IteratorResult.t_of_js Obj.magic Obj.magic
              (let x110 =
                 this_to_js Obj.magic Obj.magic Obj.magic Obj.magic x105 in
               Ojs.call (Ojs.get_prop_ascii x110 "return") "apply"
                 [|x110;((let x103 =
                            Ojs.new_obj
                              (Ojs.get_prop_ascii Ojs.global "Array") 
                              [||] in
                          (match x102 with
                           | Some x104 ->
                               ignore
                                 (Ojs.call x103 "push" [|(Obj.magic x104)|])
                           | None -> ());
                          x103))|])
    let (throw :
      ('tags, 'T, 'TReturn, 'TNext) this ->
        ?e:any -> unit -> ('T, 'TReturn) IteratorResult.t)
      =
      fun (x116 : ('tags, 'T, 'TReturn, 'TNext) this) ->
        fun ?e:(x113 : any option) ->
          fun () ->
            IteratorResult.t_of_js Obj.magic Obj.magic
              (let x121 =
                 this_to_js Obj.magic Obj.magic Obj.magic Obj.magic x116 in
               Ojs.call (Ojs.get_prop_ascii x121 "throw") "apply"
                 [|x121;((let x114 =
                            Ojs.new_obj
                              (Ojs.get_prop_ascii Ojs.global "Array") 
                              [||] in
                          (match x113 with
                           | Some x115 ->
                               ignore
                                 (Ojs.call x114 "push" [|(any_to_js x115)|])
                           | None -> ());
                          x114))|])
    let cast_from = Obj.magic
  end
module Iterable =
  struct
    type 'T t = [ `Iterable of 'T ] intf
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun _T -> Obj.magic
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun _T -> Obj.magic
    type 'T tags = [ `Iterable of 'T ]
    type ('tags, 'T) this =
      'tags intf constraint 'tags = [> `Iterable of 'T ]
    let rec this_of_js :
      'tags 'T .
        (Ojs.t -> 'tags) -> (Ojs.t -> 'T) -> Ojs.t -> ('tags, 'T) this
      =
      fun (type __tags) ->
        fun (type __T) ->
          fun (__tags_of_js : Ojs.t -> __tags) ->
            fun (__T_of_js : Ojs.t -> __T) ->
              fun (x126 : Ojs.t) -> intf_of_js __tags_of_js x126
    and this_to_js :
      'tags 'T .
        ('tags -> Ojs.t) -> ('T -> Ojs.t) -> ('tags, 'T) this -> Ojs.t
      =
      fun (type __tags) ->
        fun (type __T) ->
          fun (__tags_to_js : __tags -> Ojs.t) ->
            fun (__T_to_js : __T -> Ojs.t) ->
              fun (x124 : __tags intf) -> intf_to_js __tags_to_js x124
    let cast_from = Obj.magic
  end
module WeakSet =
  struct
    type 'T t = [ `WeakSet of 'T ] intf
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun _T -> Obj.magic
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun _T -> Obj.magic
    type 'T tags = [ `WeakSet of 'T ]
    type ('tags, 'T) this = 'tags intf constraint 'tags = [> `WeakSet of 'T ]
    let rec this_of_js :
      'tags 'T .
        (Ojs.t -> 'tags) -> (Ojs.t -> 'T) -> Ojs.t -> ('tags, 'T) this
      =
      fun (type __tags) ->
        fun (type __T) ->
          fun (__tags_of_js : Ojs.t -> __tags) ->
            fun (__T_of_js : Ojs.t -> __T) ->
              fun (x130 : Ojs.t) -> intf_of_js __tags_of_js x130
    and this_to_js :
      'tags 'T .
        ('tags -> Ojs.t) -> ('T -> Ojs.t) -> ('tags, 'T) this -> Ojs.t
      =
      fun (type __tags) ->
        fun (type __T) ->
          fun (__tags_to_js : __tags -> Ojs.t) ->
            fun (__T_to_js : __T -> Ojs.t) ->
              fun (x128 : __tags intf) -> intf_to_js __tags_to_js x128
    let (add : ('tags, 'T) this -> value:'T -> ('tags, 'T) this) =
      fun (x133 : ('tags, 'T) this) ->
        fun ~value:(x132 : 'T) ->
          this_of_js Obj.magic Obj.magic
            (Ojs.call (this_to_js Obj.magic Obj.magic x133) "add"
               [|(Obj.magic x132)|])
    let (delete : ('tags, 'T) this -> value:'T -> bool) =
      fun (x139 : ('tags, 'T) this) ->
        fun ~value:(x138 : 'T) ->
          Ojs.bool_of_js
            (Ojs.call (this_to_js Obj.magic Obj.magic x139) "delete"
               [|(Obj.magic x138)|])
    let (has : ('tags, 'T) this -> value:'T -> bool) =
      fun (x143 : ('tags, 'T) this) ->
        fun ~value:(x142 : 'T) ->
          Ojs.bool_of_js
            (Ojs.call (this_to_js Obj.magic Obj.magic x143) "has"
               [|(Obj.magic x142)|])
    let (create : 'T Iterable.t -> 'T t) =
      fun (x146 : 'T Iterable.t) ->
        t_of_js Obj.magic
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "WeakSet")
             [|(Iterable.t_to_js Obj.magic x146)|])
    let (create' : ?values:'T list option -> unit -> 'T t) =
      fun ?values:(x149 : 'T list option option) ->
        fun () ->
          t_of_js Obj.magic
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "WeakSet")
               (let x150 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x149 with
                 | Some x151 ->
                     ignore
                       (Ojs.call x150 "push"
                          [|(Ojs.option_to_js
                               (fun (x152 : 'T list) ->
                                  Ojs.list_to_js Obj.magic x152) x151)|])
                 | None -> ());
                x150))
    let (prototype : unit -> WeakKey.t t) =
      fun () ->
        t_of_js WeakKey.t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "WeakSet")
             "prototype")
    let cast_from = Obj.magic
  end
module WeakRef =
  struct
    type 'T t = [ `WeakRef of 'T ] intf
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun _T -> Obj.magic
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun _T -> Obj.magic
    type 'T tags = [ `WeakRef of 'T ]
    type ('tags, 'T) this = 'tags intf constraint 'tags = [> `WeakRef of 'T ]
    let rec this_of_js :
      'tags 'T .
        (Ojs.t -> 'tags) -> (Ojs.t -> 'T) -> Ojs.t -> ('tags, 'T) this
      =
      fun (type __tags) ->
        fun (type __T) ->
          fun (__tags_of_js : Ojs.t -> __tags) ->
            fun (__T_of_js : Ojs.t -> __T) ->
              fun (x158 : Ojs.t) -> intf_of_js __tags_of_js x158
    and this_to_js :
      'tags 'T .
        ('tags -> Ojs.t) -> ('T -> Ojs.t) -> ('tags, 'T) this -> Ojs.t
      =
      fun (type __tags) ->
        fun (type __T) ->
          fun (__tags_to_js : __tags -> Ojs.t) ->
            fun (__T_to_js : __T -> Ojs.t) ->
              fun (x156 : __tags intf) -> intf_to_js __tags_to_js x156
    let (deref : ('tags, 'T) this -> 'T option) =
      fun (x160 : ('tags, 'T) this) ->
        Ojs.option_of_js Obj.magic
          (Ojs.call (this_to_js Obj.magic Obj.magic x160) "deref" [||])
    let (prototype : unit -> any t) =
      fun () ->
        t_of_js any_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "WeakRef")
             "prototype")
    let (create : 'T -> 'T t) =
      fun (x165 : 'T) ->
        t_of_js Obj.magic
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "WeakRef")
             [|(Obj.magic x165)|])
    let cast_from = Obj.magic
  end
module WeakMap =
  struct
    type ('K, 'V) t = [ `WeakMap of ('K * 'V) ] intf
    let rec t_of_js :
      'K 'V . (Ojs.t -> 'K) -> (Ojs.t -> 'V) -> Ojs.t -> ('K, 'V) t =
      fun _K -> fun _V -> Obj.magic
    and t_to_js :
      'K 'V . ('K -> Ojs.t) -> ('V -> Ojs.t) -> ('K, 'V) t -> Ojs.t =
      fun _K -> fun _V -> Obj.magic
    type ('K, 'V) tags = [ `WeakMap of ('K * 'V) ]
    type ('tags, 'K, 'V) this =
      'tags intf constraint 'tags = [> `WeakMap of ('K * 'V) ]
    let rec this_of_js :
      'tags 'K 'V .
        (Ojs.t -> 'tags) ->
          (Ojs.t -> 'K) -> (Ojs.t -> 'V) -> Ojs.t -> ('tags, 'K, 'V) this
      =
      fun (type __tags) ->
        fun (type __K) ->
          fun (type __V) ->
            fun (__tags_of_js : Ojs.t -> __tags) ->
              fun (__K_of_js : Ojs.t -> __K) ->
                fun (__V_of_js : Ojs.t -> __V) ->
                  fun (x169 : Ojs.t) -> intf_of_js __tags_of_js x169
    and this_to_js :
      'tags 'K 'V .
        ('tags -> Ojs.t) ->
          ('K -> Ojs.t) -> ('V -> Ojs.t) -> ('tags, 'K, 'V) this -> Ojs.t
      =
      fun (type __tags) ->
        fun (type __K) ->
          fun (type __V) ->
            fun (__tags_to_js : __tags -> Ojs.t) ->
              fun (__K_to_js : __K -> Ojs.t) ->
                fun (__V_to_js : __V -> Ojs.t) ->
                  fun (x167 : __tags intf) -> intf_to_js __tags_to_js x167
    let (delete : ('tags, 'K, 'V) this -> key:'K -> bool) =
      fun (x172 : ('tags, 'K, 'V) this) ->
        fun ~key:(x171 : 'K) ->
          Ojs.bool_of_js
            (Ojs.call (this_to_js Obj.magic Obj.magic Obj.magic x172)
               "delete" [|(Obj.magic x171)|])
    let (get_ : ('tags, 'K, 'V) this -> key:'K -> 'V option) =
      fun (x177 : ('tags, 'K, 'V) this) ->
        fun ~key:(x176 : 'K) ->
          Ojs.option_of_js Obj.magic
            (Ojs.call (this_to_js Obj.magic Obj.magic Obj.magic x177) "get"
               [|(Obj.magic x176)|])
    let (has : ('tags, 'K, 'V) this -> key:'K -> bool) =
      fun (x183 : ('tags, 'K, 'V) this) ->
        fun ~key:(x182 : 'K) ->
          Ojs.bool_of_js
            (Ojs.call (this_to_js Obj.magic Obj.magic Obj.magic x183) "has"
               [|(Obj.magic x182)|])
    let (set_ :
      ('tags, 'K, 'V) this -> key:'K -> value:'V -> ('tags, 'K, 'V) this) =
      fun (x189 : ('tags, 'K, 'V) this) ->
        fun ~key:(x187 : 'K) ->
          fun ~value:(x188 : 'V) ->
            this_of_js Obj.magic Obj.magic Obj.magic
              (Ojs.call (this_to_js Obj.magic Obj.magic Obj.magic x189) "set"
                 [|(Obj.magic x187);(Obj.magic x188)|])
    let (create : ('K * 'V) Iterable.t -> ('K, 'V) t) =
      fun (x196 : ('K * 'V) Iterable.t) ->
        t_of_js Obj.magic Obj.magic
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "WeakMap")
             [|(Iterable.t_to_js
                  (fun (x197 : ('K * 'V)) ->
                     let (x198, x199) = x197 in
                     let x200 = Ojs.array_make 2 in
                     Ojs.array_set x200 0 (Obj.magic x198);
                     Ojs.array_set x200 1 (Obj.magic x199);
                     x200) x196)|])
    let (create' : ?entries:('K * 'V) list option -> unit -> ('K, 'V) t) =
      fun ?entries:(x203 : ('K * 'V) list option option) ->
        fun () ->
          t_of_js Obj.magic Obj.magic
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "WeakMap")
               (let x204 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x203 with
                 | Some x205 ->
                     ignore
                       (Ojs.call x204 "push"
                          [|(Ojs.option_to_js
                               (fun (x206 : ('K * 'V) list) ->
                                  Ojs.list_to_js
                                    (fun (x207 : ('K * 'V)) ->
                                       let (x208, x209) = x207 in
                                       let x210 = Ojs.array_make 2 in
                                       Ojs.array_set x210 0 (Obj.magic x208);
                                       Ojs.array_set x210 1 (Obj.magic x209);
                                       x210) x206) x205)|])
                 | None -> ());
                x204))
    let (prototype : unit -> (WeakKey.t, any) t) =
      fun () ->
        t_of_js WeakKey.t_of_js any_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "WeakMap")
             "prototype")
    let cast_from = Obj.magic
  end
module WeakKeyTypes =
  struct
    type t = [ `WeakKeyTypes ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type tags = [ `WeakKeyTypes ]
    type 'tags this = 'tags intf constraint 'tags = [> `WeakKeyTypes ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x217 : Ojs.t) -> intf_of_js __tags_of_js x217
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x215 : __tags intf) -> intf_to_js __tags_to_js x215
    let (get_symbol : 'tags this -> symbol) =
      fun (x219 : 'tags this) ->
        symbol_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x219) "symbol")
    let (set_symbol : 'tags this -> symbol -> unit) =
      fun (x221 : 'tags this) ->
        fun (x222 : symbol) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x221) "symbol"
            (symbol_to_js x222)
    let (get_object : 'tags this -> untyped_object) =
      fun (x224 : 'tags this) ->
        untyped_object_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x224) "object")
    let (set_object : 'tags this -> untyped_object -> unit) =
      fun (x226 : 'tags this) ->
        fun (x227 : untyped_object) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x226) "object"
            (untyped_object_to_js x227)
    let (create : symbol:symbol -> object_:untyped_object -> unit -> t) =
      fun ~symbol:(x229 : symbol) ->
        fun ~object_:(x230 : untyped_object) ->
          fun () ->
            let x231 = Ojs.empty_obj () in
            Ojs.set_prop_ascii x231 "symbol" (symbol_to_js x229);
            Ojs.set_prop_ascii x231 "object" (untyped_object_to_js x230);
            t_of_js x231
    let cast_from = Obj.magic
  end
module Uppercase =
  struct
    type 'S t = Ojs.t
    let rec t_of_js : 'S . (Ojs.t -> 'S) -> Ojs.t -> 'S t =
      fun (type __S) ->
        fun (__S_of_js : Ojs.t -> __S) -> fun (x233 : Ojs.t) -> x233
    and t_to_js : 'S . ('S -> Ojs.t) -> 'S t -> Ojs.t =
      fun (type __S) ->
        fun (__S_to_js : __S -> Ojs.t) -> fun (x232 : Ojs.t) -> x232
  end
module Uncapitalize =
  struct
    type 'S t = Ojs.t
    let rec t_of_js : 'S . (Ojs.t -> 'S) -> Ojs.t -> 'S t =
      fun (type __S) ->
        fun (__S_of_js : Ojs.t -> __S) -> fun (x235 : Ojs.t) -> x235
    and t_to_js : 'S . ('S -> Ojs.t) -> 'S t -> Ojs.t =
      fun (type __S) ->
        fun (__S_to_js : __S -> Ojs.t) -> fun (x234 : Ojs.t) -> x234
  end
module SharedArrayBuffer =
  struct
    type t = [ `SharedArrayBuffer ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type tags = [ `SharedArrayBuffer ]
    type 'tags this = 'tags intf constraint 'tags = [> `SharedArrayBuffer ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x238 : Ojs.t) -> intf_of_js __tags_of_js x238
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x236 : __tags intf) -> intf_to_js __tags_to_js x236
    let (get_byteLength : 'tags this -> float) =
      fun (x240 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x240) "byteLength")
    let (slice : 'tags this -> begin_:float -> ?end_:float -> unit -> t) =
      fun (x246 : 'tags this) ->
        fun ~begin_:(x242 : float) ->
          fun ?end_:(x243 : float option) ->
            fun () ->
              t_of_js
                (let x248 = this_to_js Obj.magic x246 in
                 Ojs.call (Ojs.get_prop_ascii x248 "slice") "apply"
                   [|x248;((let x244 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x244 "push"
                                 [|(Ojs.float_to_js x242)|]);
                            (match x243 with
                             | Some x245 ->
                                 ignore
                                   (Ojs.call x244 "push"
                                      [|(Ojs.float_to_js x245)|])
                             | None -> ());
                            x244))|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "SharedArrayBuffer") "prototype")
    let (create : float -> t) =
      fun (x249 : float) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "SharedArrayBuffer")
             [|(Ojs.float_to_js x249)|])
    let cast_from = Obj.magic
  end
module ArrayBuffer =
  struct
    type t = [ `ArrayBuffer ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type tags = [ `ArrayBuffer ]
    type 'tags this = 'tags intf constraint 'tags = [> `ArrayBuffer ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x252 : Ojs.t) -> intf_of_js __tags_of_js x252
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x250 : __tags intf) -> intf_to_js __tags_to_js x250
    let (get_byteLength : 'tags this -> float) =
      fun (x254 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x254) "byteLength")
    let (slice : 'tags this -> begin_:float -> ?end_:float -> unit -> t) =
      fun (x260 : 'tags this) ->
        fun ~begin_:(x256 : float) ->
          fun ?end_:(x257 : float option) ->
            fun () ->
              t_of_js
                (let x262 = this_to_js Obj.magic x260 in
                 Ojs.call (Ojs.get_prop_ascii x262 "slice") "apply"
                   [|x262;((let x258 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x258 "push"
                                 [|(Ojs.float_to_js x256)|]);
                            (match x257 with
                             | Some x259 ->
                                 ignore
                                   (Ojs.call x258 "push"
                                      [|(Ojs.float_to_js x259)|])
                             | None -> ());
                            x258))|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "ArrayBuffer")
             "prototype")
    let (create : float -> t) =
      fun (x263 : float) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "ArrayBuffer")
             [|(Ojs.float_to_js x263)|])
    let (isView : any -> bool) =
      fun (x264 : any) ->
        Ojs.bool_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "ArrayBuffer") "isView"
             [|(any_to_js x264)|])
    let cast_from = Obj.magic
  end
module ArrayBufferLike =
  struct
    type t = (ArrayBuffer.t, SharedArrayBuffer.t) union2
    let rec t_of_js : Ojs.t -> t =
      fun (x268 : Ojs.t) ->
        union2_of_js ArrayBuffer.t_of_js SharedArrayBuffer.t_of_js x268
    and t_to_js : t -> Ojs.t =
      fun (x265 : (ArrayBuffer.t, SharedArrayBuffer.t) union2) ->
        union2_to_js ArrayBuffer.t_to_js SharedArrayBuffer.t_to_js x265
  end
module IterableIterator =
  struct
    type 'T t =
      [ `IterableIterator of 'T  | `Iterator of ('T * any * undefined) ] intf
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun _T -> Obj.magic
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun _T -> Obj.magic
    type 'T tags =
      [ `IterableIterator of 'T  | `Iterator of ('T * any * undefined) ]
    type ('tags, 'T) this =
      'tags intf constraint 'tags = [> `IterableIterator of 'T ]
    let rec this_of_js :
      'tags 'T .
        (Ojs.t -> 'tags) -> (Ojs.t -> 'T) -> Ojs.t -> ('tags, 'T) this
      =
      fun (type __tags) ->
        fun (type __T) ->
          fun (__tags_of_js : Ojs.t -> __tags) ->
            fun (__T_of_js : Ojs.t -> __T) ->
              fun (x273 : Ojs.t) -> intf_of_js __tags_of_js x273
    and this_to_js :
      'tags 'T .
        ('tags -> Ojs.t) -> ('T -> Ojs.t) -> ('tags, 'T) this -> Ojs.t
      =
      fun (type __tags) ->
        fun (type __T) ->
          fun (__tags_to_js : __tags -> Ojs.t) ->
            fun (__T_to_js : __T -> Ojs.t) ->
              fun (x271 : __tags intf) -> intf_to_js __tags_to_js x271
    let cast_from = Obj.magic
  end
module ArrayLike =
  struct
    type 'T t = [ `ArrayLike of 'T ] intf
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun _T -> Obj.magic
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun _T -> Obj.magic
    type 'T tags = [ `ArrayLike of 'T ]
    type ('tags, 'T) this =
      'tags intf constraint 'tags = [> `ArrayLike of 'T ]
    let rec this_of_js :
      'tags 'T .
        (Ojs.t -> 'tags) -> (Ojs.t -> 'T) -> Ojs.t -> ('tags, 'T) this
      =
      fun (type __tags) ->
        fun (type __T) ->
          fun (__tags_of_js : Ojs.t -> __tags) ->
            fun (__T_of_js : Ojs.t -> __T) ->
              fun (x277 : Ojs.t) -> intf_of_js __tags_of_js x277
    and this_to_js :
      'tags 'T .
        ('tags -> Ojs.t) -> ('T -> Ojs.t) -> ('tags, 'T) this -> Ojs.t
      =
      fun (type __tags) ->
        fun (type __T) ->
          fun (__tags_to_js : __tags -> Ojs.t) ->
            fun (__T_to_js : __T -> Ojs.t) ->
              fun (x275 : __tags intf) -> intf_to_js __tags_to_js x275
    let (get_length : ('tags, 'T) this -> float) =
      fun (x279 : ('tags, 'T) this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic Obj.magic x279) "length")
    let (get : ('tags, 'T) this -> float -> 'T) =
      fun (x282 : ('tags, 'T) this) ->
        fun (x285 : float) ->
          Obj.magic
            (Ojs.get_prop (this_to_js Obj.magic Obj.magic x282)
               (Ojs.float_to_js x285))
    let (create : length:float -> unit -> 'T t) =
      fun ~length:(x286 : float) ->
        fun () ->
          let x287 = Ojs.empty_obj () in
          Ojs.set_prop_ascii x287 "length" (Ojs.float_to_js x286);
          t_of_js Obj.magic x287
    let cast_from = Obj.magic
    let (of_ml : 'T list -> 'T t) =
      fun (x289 : 'T list) ->
        t_of_js Obj.magic (Ojs.list_to_js Obj.magic x289)
    let (to_ml : 'T t -> 'T list) =
      fun (x292 : 'T t) -> Ojs.list_of_js Obj.magic (t_to_js Obj.magic x292)
  end
module Uint8ClampedArray =
  struct
    type t = [ `Uint8ClampedArray ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type tags = [ `Uint8ClampedArray ]
    type 'tags this = 'tags intf constraint 'tags = [> `Uint8ClampedArray ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x297 : Ojs.t) -> intf_of_js __tags_of_js x297
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x295 : __tags intf) -> intf_to_js __tags_to_js x295
    let (findLast :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> bool) ->
          ?thisArg:any -> unit -> 'S option)
      =
      fun (x306 : 'tags this) ->
        fun ~predicate:(x299 : value:float -> index:float -> array:t -> bool)
          ->
          fun ?thisArg:(x300 : any option) ->
            fun () ->
              Ojs.option_of_js Obj.magic
                (let x308 = this_to_js Obj.magic x306 in
                 Ojs.call (Ojs.get_prop_ascii x308 "findLast") "apply"
                   [|x308;((let x301 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x301 "push"
                                 [|(Ojs.fun_to_js 3
                                      (fun (x303 : Ojs.t) ->
                                         fun (x304 : Ojs.t) ->
                                           fun (x305 : Ojs.t) ->
                                             Ojs.bool_to_js
                                               (x299
                                                  ~value:(Ojs.float_of_js
                                                            x303)
                                                  ~index:(Ojs.float_of_js
                                                            x304)
                                                  ~array:(t_of_js x305))))|]);
                            (match x300 with
                             | Some x302 ->
                                 ignore
                                   (Ojs.call x301 "push" [|(any_to_js x302)|])
                             | None -> ());
                            x301))|])
    let (findLast' :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> float option)
      =
      fun (x317 : 'tags this) ->
        fun
          ~predicate:(x310 :
                       value:float -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x311 : any option) ->
            fun () ->
              Ojs.option_of_js Ojs.float_of_js
                (let x319 = this_to_js Obj.magic x317 in
                 Ojs.call (Ojs.get_prop_ascii x319 "findLast") "apply"
                   [|x319;((let x312 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x312 "push"
                                 [|(Ojs.fun_to_js 3
                                      (fun (x314 : Ojs.t) ->
                                         fun (x315 : Ojs.t) ->
                                           fun (x316 : Ojs.t) ->
                                             unknown_to_js
                                               (x310
                                                  ~value:(Ojs.float_of_js
                                                            x314)
                                                  ~index:(Ojs.float_of_js
                                                            x315)
                                                  ~array:(t_of_js x316))))|]);
                            (match x311 with
                             | Some x313 ->
                                 ignore
                                   (Ojs.call x312 "push" [|(any_to_js x313)|])
                             | None -> ());
                            x312))|])
    let (findLastIndex :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> float)
      =
      fun (x328 : 'tags this) ->
        fun
          ~predicate:(x321 :
                       value:float -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x322 : any option) ->
            fun () ->
              Ojs.float_of_js
                (let x330 = this_to_js Obj.magic x328 in
                 Ojs.call (Ojs.get_prop_ascii x330 "findLastIndex") "apply"
                   [|x330;((let x323 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x323 "push"
                                 [|(Ojs.fun_to_js 3
                                      (fun (x325 : Ojs.t) ->
                                         fun (x326 : Ojs.t) ->
                                           fun (x327 : Ojs.t) ->
                                             unknown_to_js
                                               (x321
                                                  ~value:(Ojs.float_of_js
                                                            x325)
                                                  ~index:(Ojs.float_of_js
                                                            x326)
                                                  ~array:(t_of_js x327))))|]);
                            (match x322 with
                             | Some x324 ->
                                 ignore
                                   (Ojs.call x323 "push" [|(any_to_js x324)|])
                             | None -> ());
                            x323))|])
    let (toReversed : 'tags this -> t) =
      fun (x331 : 'tags this) ->
        t_of_js (Ojs.call (this_to_js Obj.magic x331) "toReversed" [||])
    let (toSorted :
      'tags this -> ?compareFn:(a:float -> b:float -> float) -> unit -> t) =
      fun (x338 : 'tags this) ->
        fun ?compareFn:(x333 : (a:float -> b:float -> float) option) ->
          fun () ->
            t_of_js
              (let x340 = this_to_js Obj.magic x338 in
               Ojs.call (Ojs.get_prop_ascii x340 "toSorted") "apply"
                 [|x340;((let x334 =
                            Ojs.new_obj
                              (Ojs.get_prop_ascii Ojs.global "Array") 
                              [||] in
                          (match x333 with
                           | Some x335 ->
                               ignore
                                 (Ojs.call x334 "push"
                                    [|(Ojs.fun_to_js 2
                                         (fun (x336 : Ojs.t) ->
                                            fun (x337 : Ojs.t) ->
                                              Ojs.float_to_js
                                                (x335
                                                   ~a:(Ojs.float_of_js x336)
                                                   ~b:(Ojs.float_of_js x337))))|])
                           | None -> ());
                          x334))|])
    let (with_ : 'tags this -> index:float -> value:float -> t) =
      fun (x343 : 'tags this) ->
        fun ~index:(x341 : float) ->
          fun ~value:(x342 : float) ->
            t_of_js
              (Ojs.call (this_to_js Obj.magic x343) "with"
                 [|(Ojs.float_to_js x341);(Ojs.float_to_js x342)|])
    let (at : 'tags this -> index:float -> float option) =
      fun (x346 : 'tags this) ->
        fun ~index:(x345 : float) ->
          Ojs.option_of_js Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x346) "at"
               [|(Ojs.float_to_js x345)|])
    let (includes :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> bool)
      =
      fun (x353 : 'tags this) ->
        fun ~searchElement:(x349 : float) ->
          fun ?fromIndex:(x350 : float option) ->
            fun () ->
              Ojs.bool_of_js
                (let x355 = this_to_js Obj.magic x353 in
                 Ojs.call (Ojs.get_prop_ascii x355 "includes") "apply"
                   [|x355;((let x351 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x351 "push"
                                 [|(Ojs.float_to_js x349)|]);
                            (match x350 with
                             | Some x352 ->
                                 ignore
                                   (Ojs.call x351 "push"
                                      [|(Ojs.float_to_js x352)|])
                             | None -> ());
                            x351))|])
    let (entries : 'tags this -> (float * float) IterableIterator.t) =
      fun (x356 : 'tags this) ->
        IterableIterator.t_of_js
          (fun (x358 : Ojs.t) ->
             let x359 = x358 in
             ((Ojs.float_of_js (Ojs.array_get x359 0)),
               (Ojs.float_of_js (Ojs.array_get x359 1))))
          (Ojs.call (this_to_js Obj.magic x356) "entries" [||])
    let (keys : 'tags this -> float IterableIterator.t) =
      fun (x360 : 'tags this) ->
        IterableIterator.t_of_js Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x360) "keys" [||])
    let (values : 'tags this -> float IterableIterator.t) =
      fun (x363 : 'tags this) ->
        IterableIterator.t_of_js Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x363) "values" [||])
    let (get_BYTES_PER_ELEMENT : 'tags this -> float) =
      fun (x366 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x366) "BYTES_PER_ELEMENT")
    let (get_buffer : 'tags this -> ArrayBufferLike.t) =
      fun (x368 : 'tags this) ->
        ArrayBufferLike.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x368) "buffer")
    let (get_byteLength : 'tags this -> float) =
      fun (x370 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x370) "byteLength")
    let (get_byteOffset : 'tags this -> float) =
      fun (x372 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x372) "byteOffset")
    let (copyWithin :
      'tags this ->
        target:float -> start:float -> ?end_:float -> unit -> 'tags this)
      =
      fun (x379 : 'tags this) ->
        fun ~target:(x374 : float) ->
          fun ~start:(x375 : float) ->
            fun ?end_:(x376 : float option) ->
              fun () ->
                this_of_js Obj.magic
                  (let x381 = this_to_js Obj.magic x379 in
                   Ojs.call (Ojs.get_prop_ascii x381 "copyWithin") "apply"
                     [|x381;((let x377 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x377 "push"
                                   [|(Ojs.float_to_js x374)|]);
                              ignore
                                (Ojs.call x377 "push"
                                   [|(Ojs.float_to_js x375)|]);
                              (match x376 with
                               | Some x378 ->
                                   ignore
                                     (Ojs.call x377 "push"
                                        [|(Ojs.float_to_js x378)|])
                               | None -> ());
                              x377))|])
    let (every :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x390 : 'tags this) ->
        fun
          ~predicate:(x383 :
                       value:float -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x384 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x392 = this_to_js Obj.magic x390 in
                 Ojs.call (Ojs.get_prop_ascii x392 "every") "apply"
                   [|x392;((let x385 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x385 "push"
                                 [|(Ojs.fun_to_js 3
                                      (fun (x387 : Ojs.t) ->
                                         fun (x388 : Ojs.t) ->
                                           fun (x389 : Ojs.t) ->
                                             unknown_to_js
                                               (x383
                                                  ~value:(Ojs.float_of_js
                                                            x387)
                                                  ~index:(Ojs.float_of_js
                                                            x388)
                                                  ~array:(t_of_js x389))))|]);
                            (match x384 with
                             | Some x386 ->
                                 ignore
                                   (Ojs.call x385 "push" [|(any_to_js x386)|])
                             | None -> ());
                            x385))|])
    let (fill :
      'tags this ->
        value:float -> ?start:float -> ?end_:float -> unit -> 'tags this)
      =
      fun (x399 : 'tags this) ->
        fun ~value:(x393 : float) ->
          fun ?start:(x394 : float option) ->
            fun ?end_:(x395 : float option) ->
              fun () ->
                this_of_js Obj.magic
                  (let x401 = this_to_js Obj.magic x399 in
                   Ojs.call (Ojs.get_prop_ascii x401 "fill") "apply"
                     [|x401;((let x396 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x396 "push"
                                   [|(Ojs.float_to_js x393)|]);
                              (match x394 with
                               | Some x398 ->
                                   ignore
                                     (Ojs.call x396 "push"
                                        [|(Ojs.float_to_js x398)|])
                               | None -> ());
                              (match x395 with
                               | Some x397 ->
                                   ignore
                                     (Ojs.call x396 "push"
                                        [|(Ojs.float_to_js x397)|])
                               | None -> ());
                              x396))|])
    let (filter :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> any) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x410 : 'tags this) ->
        fun ~predicate:(x403 : value:float -> index:float -> array:t -> any)
          ->
          fun ?thisArg:(x404 : any option) ->
            fun () ->
              t_of_js
                (let x412 = this_to_js Obj.magic x410 in
                 Ojs.call (Ojs.get_prop_ascii x412 "filter") "apply"
                   [|x412;((let x405 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x405 "push"
                                 [|(Ojs.fun_to_js 3
                                      (fun (x407 : Ojs.t) ->
                                         fun (x408 : Ojs.t) ->
                                           fun (x409 : Ojs.t) ->
                                             any_to_js
                                               (x403
                                                  ~value:(Ojs.float_of_js
                                                            x407)
                                                  ~index:(Ojs.float_of_js
                                                            x408)
                                                  ~array:(t_of_js x409))))|]);
                            (match x404 with
                             | Some x406 ->
                                 ignore
                                   (Ojs.call x405 "push" [|(any_to_js x406)|])
                             | None -> ());
                            x405))|])
    let (find :
      'tags this ->
        predicate:(value:float -> index:float -> obj:t -> bool) ->
          ?thisArg:any -> unit -> float option)
      =
      fun (x420 : 'tags this) ->
        fun ~predicate:(x413 : value:float -> index:float -> obj:t -> bool)
          ->
          fun ?thisArg:(x414 : any option) ->
            fun () ->
              Ojs.option_of_js Ojs.float_of_js
                (let x422 = this_to_js Obj.magic x420 in
                 Ojs.call (Ojs.get_prop_ascii x422 "find") "apply"
                   [|x422;((let x415 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x415 "push"
                                 [|(Ojs.fun_to_js 3
                                      (fun (x417 : Ojs.t) ->
                                         fun (x418 : Ojs.t) ->
                                           fun (x419 : Ojs.t) ->
                                             Ojs.bool_to_js
                                               (x413
                                                  ~value:(Ojs.float_of_js
                                                            x417)
                                                  ~index:(Ojs.float_of_js
                                                            x418)
                                                  ~obj:(t_of_js x419))))|]);
                            (match x414 with
                             | Some x416 ->
                                 ignore
                                   (Ojs.call x415 "push" [|(any_to_js x416)|])
                             | None -> ());
                            x415))|])
    let (findIndex :
      'tags this ->
        predicate:(value:float -> index:float -> obj:t -> bool) ->
          ?thisArg:any -> unit -> float)
      =
      fun (x431 : 'tags this) ->
        fun ~predicate:(x424 : value:float -> index:float -> obj:t -> bool)
          ->
          fun ?thisArg:(x425 : any option) ->
            fun () ->
              Ojs.float_of_js
                (let x433 = this_to_js Obj.magic x431 in
                 Ojs.call (Ojs.get_prop_ascii x433 "findIndex") "apply"
                   [|x433;((let x426 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x426 "push"
                                 [|(Ojs.fun_to_js 3
                                      (fun (x428 : Ojs.t) ->
                                         fun (x429 : Ojs.t) ->
                                           fun (x430 : Ojs.t) ->
                                             Ojs.bool_to_js
                                               (x424
                                                  ~value:(Ojs.float_of_js
                                                            x428)
                                                  ~index:(Ojs.float_of_js
                                                            x429)
                                                  ~obj:(t_of_js x430))))|]);
                            (match x425 with
                             | Some x427 ->
                                 ignore
                                   (Ojs.call x426 "push" [|(any_to_js x427)|])
                             | None -> ());
                            x426))|])
    let (forEach :
      'tags this ->
        callbackfn:(value:float -> index:float -> array:t -> unit) ->
          ?thisArg:any -> unit -> unit)
      =
      fun (x441 : 'tags this) ->
        fun
          ~callbackfn:(x434 : value:float -> index:float -> array:t -> unit)
          ->
          fun ?thisArg:(x435 : any option) ->
            fun () ->
              ignore
                (let x443 = this_to_js Obj.magic x441 in
                 Ojs.call (Ojs.get_prop_ascii x443 "forEach") "apply"
                   [|x443;((let x436 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x436 "push"
                                 [|(Ojs.fun_to_js 3
                                      (fun (x438 : Ojs.t) ->
                                         fun (x439 : Ojs.t) ->
                                           fun (x440 : Ojs.t) ->
                                             x434
                                               ~value:(Ojs.float_of_js x438)
                                               ~index:(Ojs.float_of_js x439)
                                               ~array:(t_of_js x440)))|]);
                            (match x435 with
                             | Some x437 ->
                                 ignore
                                   (Ojs.call x436 "push" [|(any_to_js x437)|])
                             | None -> ());
                            x436))|])
    let (indexOf :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> float)
      =
      fun (x448 : 'tags this) ->
        fun ~searchElement:(x444 : float) ->
          fun ?fromIndex:(x445 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x450 = this_to_js Obj.magic x448 in
                 Ojs.call (Ojs.get_prop_ascii x450 "indexOf") "apply"
                   [|x450;((let x446 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x446 "push"
                                 [|(Ojs.float_to_js x444)|]);
                            (match x445 with
                             | Some x447 ->
                                 ignore
                                   (Ojs.call x446 "push"
                                      [|(Ojs.float_to_js x447)|])
                             | None -> ());
                            x446))|])
    let (join : 'tags this -> ?separator:string -> unit -> string) =
      fun (x454 : 'tags this) ->
        fun ?separator:(x451 : string option) ->
          fun () ->
            Ojs.string_of_js
              (let x456 = this_to_js Obj.magic x454 in
               Ojs.call (Ojs.get_prop_ascii x456 "join") "apply"
                 [|x456;((let x452 =
                            Ojs.new_obj
                              (Ojs.get_prop_ascii Ojs.global "Array") 
                              [||] in
                          (match x451 with
                           | Some x453 ->
                               ignore
                                 (Ojs.call x452 "push"
                                    [|(Ojs.string_to_js x453)|])
                           | None -> ());
                          x452))|])
    let (lastIndexOf :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> float)
      =
      fun (x461 : 'tags this) ->
        fun ~searchElement:(x457 : float) ->
          fun ?fromIndex:(x458 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x463 = this_to_js Obj.magic x461 in
                 Ojs.call (Ojs.get_prop_ascii x463 "lastIndexOf") "apply"
                   [|x463;((let x459 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x459 "push"
                                 [|(Ojs.float_to_js x457)|]);
                            (match x458 with
                             | Some x460 ->
                                 ignore
                                   (Ojs.call x459 "push"
                                      [|(Ojs.float_to_js x460)|])
                             | None -> ());
                            x459))|])
    let (get_length : 'tags this -> float) =
      fun (x464 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x464) "length")
    let (map :
      'tags this ->
        callbackfn:(value:float -> index:float -> array:t -> float) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x473 : 'tags this) ->
        fun
          ~callbackfn:(x466 : value:float -> index:float -> array:t -> float)
          ->
          fun ?thisArg:(x467 : any option) ->
            fun () ->
              t_of_js
                (let x475 = this_to_js Obj.magic x473 in
                 Ojs.call (Ojs.get_prop_ascii x475 "map") "apply"
                   [|x475;((let x468 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x468 "push"
                                 [|(Ojs.fun_to_js 3
                                      (fun (x470 : Ojs.t) ->
                                         fun (x471 : Ojs.t) ->
                                           fun (x472 : Ojs.t) ->
                                             Ojs.float_to_js
                                               (x466
                                                  ~value:(Ojs.float_of_js
                                                            x470)
                                                  ~index:(Ojs.float_of_js
                                                            x471)
                                                  ~array:(t_of_js x472))))|]);
                            (match x467 with
                             | Some x469 ->
                                 ignore
                                   (Ojs.call x468 "push" [|(any_to_js x469)|])
                             | None -> ());
                            x468))|])
    let (reduce :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> float)
      =
      fun (x481 : 'tags this) ->
        fun
          ~callbackfn:(x476 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x481) "reduce"
               [|(Ojs.fun_to_js 4
                    (fun (x477 : Ojs.t) ->
                       fun (x478 : Ojs.t) ->
                         fun (x479 : Ojs.t) ->
                           fun (x480 : Ojs.t) ->
                             Ojs.float_to_js
                               (x476 ~previousValue:(Ojs.float_of_js x477)
                                  ~currentValue:(Ojs.float_of_js x478)
                                  ~currentIndex:(Ojs.float_of_js x479)
                                  ~array:(t_of_js x480))))|])
    let (reduce' :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> initialValue:float -> float)
      =
      fun (x489 : 'tags this) ->
        fun
          ~callbackfn:(x483 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          fun ~initialValue:(x488 : float) ->
            Ojs.float_of_js
              (Ojs.call (this_to_js Obj.magic x489) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x484 : Ojs.t) ->
                         fun (x485 : Ojs.t) ->
                           fun (x486 : Ojs.t) ->
                             fun (x487 : Ojs.t) ->
                               Ojs.float_to_js
                                 (x483 ~previousValue:(Ojs.float_of_js x484)
                                    ~currentValue:(Ojs.float_of_js x485)
                                    ~currentIndex:(Ojs.float_of_js x486)
                                    ~array:(t_of_js x487))));(Ojs.float_to_js
                                                                x488)|])
    let (reduce'' :
      'tags this ->
        callbackfn:(previousValue:'U ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x497 : 'tags this) ->
        fun
          ~callbackfn:(x491 :
                        previousValue:'U ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x496 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic x497) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x492 : Ojs.t) ->
                         fun (x493 : Ojs.t) ->
                           fun (x494 : Ojs.t) ->
                             fun (x495 : Ojs.t) ->
                               Obj.magic
                                 (x491 ~previousValue:(Obj.magic x492)
                                    ~currentValue:(Ojs.float_of_js x493)
                                    ~currentIndex:(Ojs.float_of_js x494)
                                    ~array:(t_of_js x495))));(Obj.magic x496)|])
    let (reduceRight :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> float)
      =
      fun (x504 : 'tags this) ->
        fun
          ~callbackfn:(x499 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x504) "reduceRight"
               [|(Ojs.fun_to_js 4
                    (fun (x500 : Ojs.t) ->
                       fun (x501 : Ojs.t) ->
                         fun (x502 : Ojs.t) ->
                           fun (x503 : Ojs.t) ->
                             Ojs.float_to_js
                               (x499 ~previousValue:(Ojs.float_of_js x500)
                                  ~currentValue:(Ojs.float_of_js x501)
                                  ~currentIndex:(Ojs.float_of_js x502)
                                  ~array:(t_of_js x503))))|])
    let (reduceRight' :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> initialValue:float -> float)
      =
      fun (x512 : 'tags this) ->
        fun
          ~callbackfn:(x506 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          fun ~initialValue:(x511 : float) ->
            Ojs.float_of_js
              (Ojs.call (this_to_js Obj.magic x512) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x507 : Ojs.t) ->
                         fun (x508 : Ojs.t) ->
                           fun (x509 : Ojs.t) ->
                             fun (x510 : Ojs.t) ->
                               Ojs.float_to_js
                                 (x506 ~previousValue:(Ojs.float_of_js x507)
                                    ~currentValue:(Ojs.float_of_js x508)
                                    ~currentIndex:(Ojs.float_of_js x509)
                                    ~array:(t_of_js x510))));(Ojs.float_to_js
                                                                x511)|])
    let (reduceRight'' :
      'tags this ->
        callbackfn:(previousValue:'U ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x520 : 'tags this) ->
        fun
          ~callbackfn:(x514 :
                        previousValue:'U ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x519 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic x520) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x515 : Ojs.t) ->
                         fun (x516 : Ojs.t) ->
                           fun (x517 : Ojs.t) ->
                             fun (x518 : Ojs.t) ->
                               Obj.magic
                                 (x514 ~previousValue:(Obj.magic x515)
                                    ~currentValue:(Ojs.float_of_js x516)
                                    ~currentIndex:(Ojs.float_of_js x517)
                                    ~array:(t_of_js x518))));(Obj.magic x519)|])
    let (reverse : 'tags this -> t) =
      fun (x522 : 'tags this) ->
        t_of_js (Ojs.call (this_to_js Obj.magic x522) "reverse" [||])
    let (set_ :
      'tags this -> array:float ArrayLike.t -> ?offset:float -> unit -> unit)
      =
      fun (x529 : 'tags this) ->
        fun ~array:(x524 : float ArrayLike.t) ->
          fun ?offset:(x525 : float option) ->
            fun () ->
              ignore
                (let x531 = this_to_js Obj.magic x529 in
                 Ojs.call (Ojs.get_prop_ascii x531 "set") "apply"
                   [|x531;((let x526 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x526 "push"
                                 [|(ArrayLike.t_to_js Ojs.float_to_js x524)|]);
                            (match x525 with
                             | Some x527 ->
                                 ignore
                                   (Ojs.call x526 "push"
                                      [|(Ojs.float_to_js x527)|])
                             | None -> ());
                            x526))|])
    let (slice : 'tags this -> ?start:float -> ?end_:float -> unit -> t) =
      fun (x537 : 'tags this) ->
        fun ?start:(x532 : float option) ->
          fun ?end_:(x533 : float option) ->
            fun () ->
              t_of_js
                (let x539 = this_to_js Obj.magic x537 in
                 Ojs.call (Ojs.get_prop_ascii x539 "slice") "apply"
                   [|x539;((let x534 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x532 with
                             | Some x536 ->
                                 ignore
                                   (Ojs.call x534 "push"
                                      [|(Ojs.float_to_js x536)|])
                             | None -> ());
                            (match x533 with
                             | Some x535 ->
                                 ignore
                                   (Ojs.call x534 "push"
                                      [|(Ojs.float_to_js x535)|])
                             | None -> ());
                            x534))|])
    let (some :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x547 : 'tags this) ->
        fun
          ~predicate:(x540 :
                       value:float -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x541 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x549 = this_to_js Obj.magic x547 in
                 Ojs.call (Ojs.get_prop_ascii x549 "some") "apply"
                   [|x549;((let x542 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x542 "push"
                                 [|(Ojs.fun_to_js 3
                                      (fun (x544 : Ojs.t) ->
                                         fun (x545 : Ojs.t) ->
                                           fun (x546 : Ojs.t) ->
                                             unknown_to_js
                                               (x540
                                                  ~value:(Ojs.float_of_js
                                                            x544)
                                                  ~index:(Ojs.float_of_js
                                                            x545)
                                                  ~array:(t_of_js x546))))|]);
                            (match x541 with
                             | Some x543 ->
                                 ignore
                                   (Ojs.call x542 "push" [|(any_to_js x543)|])
                             | None -> ());
                            x542))|])
    let (sort :
      'tags this ->
        ?compareFn:(a:float -> b:float -> float) -> unit -> 'tags this)
      =
      fun (x555 : 'tags this) ->
        fun ?compareFn:(x550 : (a:float -> b:float -> float) option) ->
          fun () ->
            this_of_js Obj.magic
              (let x557 = this_to_js Obj.magic x555 in
               Ojs.call (Ojs.get_prop_ascii x557 "sort") "apply"
                 [|x557;((let x551 =
                            Ojs.new_obj
                              (Ojs.get_prop_ascii Ojs.global "Array") 
                              [||] in
                          (match x550 with
                           | Some x552 ->
                               ignore
                                 (Ojs.call x551 "push"
                                    [|(Ojs.fun_to_js 2
                                         (fun (x553 : Ojs.t) ->
                                            fun (x554 : Ojs.t) ->
                                              Ojs.float_to_js
                                                (x552
                                                   ~a:(Ojs.float_of_js x553)
                                                   ~b:(Ojs.float_of_js x554))))|])
                           | None -> ());
                          x551))|])
    let (subarray : 'tags this -> ?begin_:float -> ?end_:float -> unit -> t)
      =
      fun (x564 : 'tags this) ->
        fun ?begin_:(x559 : float option) ->
          fun ?end_:(x560 : float option) ->
            fun () ->
              t_of_js
                (let x566 = this_to_js Obj.magic x564 in
                 Ojs.call (Ojs.get_prop_ascii x566 "subarray") "apply"
                   [|x566;((let x561 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x559 with
                             | Some x563 ->
                                 ignore
                                   (Ojs.call x561 "push"
                                      [|(Ojs.float_to_js x563)|])
                             | None -> ());
                            (match x560 with
                             | Some x562 ->
                                 ignore
                                   (Ojs.call x561 "push"
                                      [|(Ojs.float_to_js x562)|])
                             | None -> ());
                            x561))|])
    let (toLocaleString : 'tags this -> string) =
      fun (x567 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x567) "toLocaleString" [||])
    let (toString : 'tags this -> string) =
      fun (x569 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x569) "toString" [||])
    let (valueOf : 'tags this -> t) =
      fun (x571 : 'tags this) ->
        t_of_js (Ojs.call (this_to_js Obj.magic x571) "valueOf" [||])
    let (get : 'tags this -> float -> float) =
      fun (x573 : 'tags this) ->
        fun (x575 : float) ->
          Ojs.float_of_js
            (Ojs.get_prop (this_to_js Obj.magic x573) (Ojs.float_to_js x575))
    let (set : 'tags this -> float -> float -> unit) =
      fun (x576 : 'tags this) ->
        fun (x578 : float) ->
          fun (x579 : float) ->
            Ojs.set_prop (this_to_js Obj.magic x576) (Ojs.float_to_js x578)
              (Ojs.float_to_js x579)
    let (create : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Uint8ClampedArray")
             [||])
    let (create' : float Iterable.t -> t) =
      fun (x580 : float Iterable.t) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Uint8ClampedArray")
             [|(Iterable.t_to_js Ojs.float_to_js x580)|])
    let (from :
      arrayLike:float Iterable.t ->
        ?mapfn:(v:float -> k:float -> float) -> ?thisArg:any -> unit -> t)
      =
      fun ~arrayLike:(x582 : float Iterable.t) ->
        fun ?mapfn:(x583 : (v:float -> k:float -> float) option) ->
          fun ?thisArg:(x584 : any option) ->
            fun () ->
              t_of_js
                (let x591 = Ojs.get_prop_ascii Ojs.global "Uint8ClampedArray" in
                 Ojs.call (Ojs.get_prop_ascii x591 "from") "apply"
                   [|x591;((let x585 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x585 "push"
                                 [|(Iterable.t_to_js Ojs.float_to_js x582)|]);
                            (match x583 with
                             | Some x587 ->
                                 ignore
                                   (Ojs.call x585 "push"
                                      [|(Ojs.fun_to_js 2
                                           (fun (x588 : Ojs.t) ->
                                              fun (x589 : Ojs.t) ->
                                                Ojs.float_to_js
                                                  (x587
                                                     ~v:(Ojs.float_of_js x588)
                                                     ~k:(Ojs.float_of_js x589))))|])
                             | None -> ());
                            (match x584 with
                             | Some x586 ->
                                 ignore
                                   (Ojs.call x585 "push" [|(any_to_js x586)|])
                             | None -> ());
                            x585))|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "Uint8ClampedArray") "prototype")
    let (create'' : float -> t) =
      fun (x592 : float) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Uint8ClampedArray")
             [|(Ojs.float_to_js x592)|])
    let (create''' :
      [ `U1 of float ArrayLike.t  | `U2 of ArrayBufferLike.t ] -> t) =
      fun (x593 : [ `U1 of float ArrayLike.t  | `U2 of ArrayBufferLike.t ])
        ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Uint8ClampedArray")
             [|((match x593 with
                 | `U1 x594 -> ArrayLike.t_to_js Ojs.float_to_js x594
                 | `U2 x596 -> ArrayBufferLike.t_to_js x596))|])
    let (create'''' :
      buffer:ArrayBufferLike.t ->
        ?byteOffset:float -> ?length:float -> unit -> t)
      =
      fun ~buffer:(x597 : ArrayBufferLike.t) ->
        fun ?byteOffset:(x598 : float option) ->
          fun ?length:(x599 : float option) ->
            fun () ->
              t_of_js
                (Ojs.new_obj_arr
                   (Ojs.get_prop_ascii Ojs.global "Uint8ClampedArray")
                   (let x600 =
                      Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                        [||] in
                    ignore
                      (Ojs.call x600 "push"
                         [|(ArrayBufferLike.t_to_js x597)|]);
                    (match x598 with
                     | Some x602 ->
                         ignore
                           (Ojs.call x600 "push" [|(Ojs.float_to_js x602)|])
                     | None -> ());
                    (match x599 with
                     | Some x601 ->
                         ignore
                           (Ojs.call x600 "push" [|(Ojs.float_to_js x601)|])
                     | None -> ());
                    x600))
    let (bytes_per_element : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "Uint8ClampedArray")
             "BYTES_PER_ELEMENT")
    let (of_ : float list -> t) =
      fun (x603 : float list) ->
        t_of_js
          (let x606 = Ojs.get_prop_ascii Ojs.global "Uint8ClampedArray" in
           Ojs.call (Ojs.get_prop_ascii x606 "of") "apply"
             [|x606;((let x604 =
                        Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                          [||] in
                      List.iter
                        (fun (x605 : float) ->
                           ignore
                             (Ojs.call x604 "push" [|(Ojs.float_to_js x605)|]))
                        x603;
                      x604))|])
    let (from' : float ArrayLike.t -> t) =
      fun (x607 : float ArrayLike.t) ->
        t_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Uint8ClampedArray")
             "from" [|(ArrayLike.t_to_js Ojs.float_to_js x607)|])
    let (from'' :
      arrayLike:'T ArrayLike.t ->
        mapfn:(v:'T -> k:float -> float) -> ?thisArg:any -> unit -> t)
      =
      fun ~arrayLike:(x609 : 'T ArrayLike.t) ->
        fun ~mapfn:(x610 : v:'T -> k:float -> float) ->
          fun ?thisArg:(x611 : any option) ->
            fun () ->
              t_of_js
                (let x617 = Ojs.get_prop_ascii Ojs.global "Uint8ClampedArray" in
                 Ojs.call (Ojs.get_prop_ascii x617 "from") "apply"
                   [|x617;((let x612 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x612 "push"
                                 [|(ArrayLike.t_to_js Obj.magic x609)|]);
                            ignore
                              (Ojs.call x612 "push"
                                 [|(Ojs.fun_to_js 2
                                      (fun (x614 : Ojs.t) ->
                                         fun (x615 : Ojs.t) ->
                                           Ojs.float_to_js
                                             (x610 ~v:(Obj.magic x614)
                                                ~k:(Ojs.float_of_js x615))))|]);
                            (match x611 with
                             | Some x613 ->
                                 ignore
                                   (Ojs.call x612 "push" [|(any_to_js x613)|])
                             | None -> ());
                            x612))|])
    let cast_from = Obj.magic
  end
module ErrorOptions =
  struct
    type t = [ `ErrorOptions ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type tags = [ `ErrorOptions ]
    type 'tags this = 'tags intf constraint 'tags = [> `ErrorOptions ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x620 : Ojs.t) -> intf_of_js __tags_of_js x620
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x618 : __tags intf) -> intf_to_js __tags_to_js x618
    let (get_cause : 'tags this -> unknown option) =
      fun (x622 : 'tags this) ->
        Ojs.option_of_js unknown_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x622) "cause")
    let (set_cause : 'tags this -> unknown -> unit) =
      fun (x625 : 'tags this) ->
        fun (x626 : unknown) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x625) "cause"
            (unknown_to_js x626)
    let (create : ?cause:unknown -> unit -> t) =
      fun ?cause:(x628 : unknown option) ->
        fun () ->
          let x629 = Ojs.empty_obj () in
          (match x628 with
           | Some x630 ->
               Ojs.set_prop_ascii x629 "cause" (unknown_to_js x630)
           | None -> ());
          t_of_js x629
    let cast_from = Obj.magic
  end
module Error =
  struct
    type t = [ `Error ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type tags = [ `Error ]
    type 'tags this = 'tags intf constraint 'tags = [> `Error ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x633 : Ojs.t) -> intf_of_js __tags_of_js x633
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x631 : __tags intf) -> intf_to_js __tags_to_js x631
    let (get_cause : 'tags this -> unknown option) =
      fun (x635 : 'tags this) ->
        Ojs.option_of_js unknown_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x635) "cause")
    let (set_cause : 'tags this -> unknown -> unit) =
      fun (x638 : 'tags this) ->
        fun (x639 : unknown) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x638) "cause"
            (unknown_to_js x639)
    let (get_name : 'tags this -> string) =
      fun (x641 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x641) "name")
    let (set_name : 'tags this -> string -> unit) =
      fun (x643 : 'tags this) ->
        fun (x644 : string) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x643) "name"
            (Ojs.string_to_js x644)
    let (get_message : 'tags this -> string) =
      fun (x646 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x646) "message")
    let (set_message : 'tags this -> string -> unit) =
      fun (x648 : 'tags this) ->
        fun (x649 : string) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x648) "message"
            (Ojs.string_to_js x649)
    let (get_stack : 'tags this -> string option) =
      fun (x651 : 'tags this) ->
        Ojs.option_of_js Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x651) "stack")
    let (set_stack : 'tags this -> string -> unit) =
      fun (x654 : 'tags this) ->
        fun (x655 : string) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x654) "stack"
            (Ojs.string_to_js x655)
    let (create : ?message:string -> ?options:ErrorOptions.t -> unit -> t) =
      fun ?message:(x657 : string option) ->
        fun ?options:(x658 : ErrorOptions.t option) ->
          fun () ->
            t_of_js
              (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "Error")
                 (let x659 =
                    Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                  (match x657 with
                   | Some x661 ->
                       ignore
                         (Ojs.call x659 "push" [|(Ojs.string_to_js x661)|])
                   | None -> ());
                  (match x658 with
                   | Some x660 ->
                       ignore
                         (Ojs.call x659 "push"
                            [|(ErrorOptions.t_to_js x660)|])
                   | None -> ());
                  x659))
    let (invoke : ?message:string -> ?options:ErrorOptions.t -> unit -> t) =
      fun ?message:(x662 : string option) ->
        fun ?options:(x663 : ErrorOptions.t option) ->
          fun () ->
            t_of_js
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "Error") "apply"
                 [|Ojs.null;((let x664 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              (match x662 with
                               | Some x666 ->
                                   ignore
                                     (Ojs.call x664 "push"
                                        [|(Ojs.string_to_js x666)|])
                               | None -> ());
                              (match x663 with
                               | Some x665 ->
                                   ignore
                                     (Ojs.call x664 "push"
                                        [|(ErrorOptions.t_to_js x665)|])
                               | None -> ());
                              x664))|])
    let (create' : ?message:string -> unit -> t) =
      fun ?message:(x667 : string option) ->
        fun () ->
          t_of_js
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "Error")
               (let x668 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x667 with
                 | Some x669 ->
                     ignore
                       (Ojs.call x668 "push" [|(Ojs.string_to_js x669)|])
                 | None -> ());
                x668))
    let (invoke' : ?message:string -> unit -> t) =
      fun ?message:(x670 : string option) ->
        fun () ->
          t_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "Error") "apply"
               [|Ojs.null;((let x671 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x670 with
                             | Some x672 ->
                                 ignore
                                   (Ojs.call x671 "push"
                                      [|(Ojs.string_to_js x672)|])
                             | None -> ());
                            x671))|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Error")
             "prototype")
    let (create'' :
      ?cause:unknown ->
        name:string -> message:string -> ?stack:string -> unit -> t)
      =
      fun ?cause:(x673 : unknown option) ->
        fun ~name:(x674 : string) ->
          fun ~message:(x675 : string) ->
            fun ?stack:(x676 : string option) ->
              fun () ->
                let x677 = Ojs.empty_obj () in
                (match x673 with
                 | Some x679 ->
                     Ojs.set_prop_ascii x677 "cause" (unknown_to_js x679)
                 | None -> ());
                Ojs.set_prop_ascii x677 "name" (Ojs.string_to_js x674);
                Ojs.set_prop_ascii x677 "message" (Ojs.string_to_js x675);
                (match x676 with
                 | Some x678 ->
                     Ojs.set_prop_ascii x677 "stack" (Ojs.string_to_js x678)
                 | None -> ());
                t_of_js x677
    let cast_from = Obj.magic
  end
module URIError =
  struct
    type t = [ `Error  | `URIError ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type tags = [ `Error  | `URIError ]
    type 'tags this = 'tags intf constraint 'tags = [> `URIError ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x682 : Ojs.t) -> intf_of_js __tags_of_js x682
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x680 : __tags intf) -> intf_to_js __tags_to_js x680
    let (create : ?message:string -> ?options:ErrorOptions.t -> unit -> t) =
      fun ?message:(x684 : string option) ->
        fun ?options:(x685 : ErrorOptions.t option) ->
          fun () ->
            t_of_js
              (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "URIError")
                 (let x686 =
                    Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                  (match x684 with
                   | Some x688 ->
                       ignore
                         (Ojs.call x686 "push" [|(Ojs.string_to_js x688)|])
                   | None -> ());
                  (match x685 with
                   | Some x687 ->
                       ignore
                         (Ojs.call x686 "push"
                            [|(ErrorOptions.t_to_js x687)|])
                   | None -> ());
                  x686))
    let (invoke : ?message:string -> ?options:ErrorOptions.t -> unit -> t) =
      fun ?message:(x689 : string option) ->
        fun ?options:(x690 : ErrorOptions.t option) ->
          fun () ->
            t_of_js
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "URIError") "apply"
                 [|Ojs.null;((let x691 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              (match x689 with
                               | Some x693 ->
                                   ignore
                                     (Ojs.call x691 "push"
                                        [|(Ojs.string_to_js x693)|])
                               | None -> ());
                              (match x690 with
                               | Some x692 ->
                                   ignore
                                     (Ojs.call x691 "push"
                                        [|(ErrorOptions.t_to_js x692)|])
                               | None -> ());
                              x691))|])
    let (create' : ?message:string -> unit -> t) =
      fun ?message:(x694 : string option) ->
        fun () ->
          t_of_js
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "URIError")
               (let x695 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x694 with
                 | Some x696 ->
                     ignore
                       (Ojs.call x695 "push" [|(Ojs.string_to_js x696)|])
                 | None -> ());
                x695))
    let (invoke' : ?message:string -> unit -> t) =
      fun ?message:(x697 : string option) ->
        fun () ->
          t_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "URIError") "apply"
               [|Ojs.null;((let x698 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x697 with
                             | Some x699 ->
                                 ignore
                                   (Ojs.call x698 "push"
                                      [|(Ojs.string_to_js x699)|])
                             | None -> ());
                            x698))|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "URIError")
             "prototype")
    let cast_from = Obj.magic
  end
module TypeError =
  struct
    type t = [ `Error  | `TypeError ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type tags = [ `Error  | `TypeError ]
    type 'tags this = 'tags intf constraint 'tags = [> `TypeError ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x702 : Ojs.t) -> intf_of_js __tags_of_js x702
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x700 : __tags intf) -> intf_to_js __tags_to_js x700
    let (create : ?message:string -> ?options:ErrorOptions.t -> unit -> t) =
      fun ?message:(x704 : string option) ->
        fun ?options:(x705 : ErrorOptions.t option) ->
          fun () ->
            t_of_js
              (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "TypeError")
                 (let x706 =
                    Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                  (match x704 with
                   | Some x708 ->
                       ignore
                         (Ojs.call x706 "push" [|(Ojs.string_to_js x708)|])
                   | None -> ());
                  (match x705 with
                   | Some x707 ->
                       ignore
                         (Ojs.call x706 "push"
                            [|(ErrorOptions.t_to_js x707)|])
                   | None -> ());
                  x706))
    let (invoke : ?message:string -> ?options:ErrorOptions.t -> unit -> t) =
      fun ?message:(x709 : string option) ->
        fun ?options:(x710 : ErrorOptions.t option) ->
          fun () ->
            t_of_js
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "TypeError") "apply"
                 [|Ojs.null;((let x711 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              (match x709 with
                               | Some x713 ->
                                   ignore
                                     (Ojs.call x711 "push"
                                        [|(Ojs.string_to_js x713)|])
                               | None -> ());
                              (match x710 with
                               | Some x712 ->
                                   ignore
                                     (Ojs.call x711 "push"
                                        [|(ErrorOptions.t_to_js x712)|])
                               | None -> ());
                              x711))|])
    let (create' : ?message:string -> unit -> t) =
      fun ?message:(x714 : string option) ->
        fun () ->
          t_of_js
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "TypeError")
               (let x715 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x714 with
                 | Some x716 ->
                     ignore
                       (Ojs.call x715 "push" [|(Ojs.string_to_js x716)|])
                 | None -> ());
                x715))
    let (invoke' : ?message:string -> unit -> t) =
      fun ?message:(x717 : string option) ->
        fun () ->
          t_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "TypeError") "apply"
               [|Ojs.null;((let x718 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x717 with
                             | Some x719 ->
                                 ignore
                                   (Ojs.call x718 "push"
                                      [|(Ojs.string_to_js x719)|])
                             | None -> ());
                            x718))|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "TypeError")
             "prototype")
    let cast_from = Obj.magic
  end
module FlatArray =
  struct
    type ('Arr, 'Depth) t = any
    let rec t_of_js :
      'Arr 'Depth .
        (Ojs.t -> 'Arr) -> (Ojs.t -> 'Depth) -> Ojs.t -> ('Arr, 'Depth) t
      =
      fun (type __Arr) ->
        fun (type __Depth) ->
          fun (__Arr_of_js : Ojs.t -> __Arr) ->
            fun (__Depth_of_js : Ojs.t -> __Depth) ->
              fun (x721 : Ojs.t) -> any_of_js x721
    and t_to_js :
      'Arr 'Depth .
        ('Arr -> Ojs.t) -> ('Depth -> Ojs.t) -> ('Arr, 'Depth) t -> Ojs.t
      =
      fun (type __Arr) ->
        fun (type __Depth) ->
          fun (__Arr_to_js : __Arr -> Ojs.t) ->
            fun (__Depth_to_js : __Depth -> Ojs.t) ->
              fun (x720 : any) -> any_to_js x720
  end
module ConcatArray =
  struct
    type 'T t = [ `ConcatArray of 'T ] intf
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun _T -> Obj.magic
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun _T -> Obj.magic
    type 'T tags = [ `ConcatArray of 'T ]
    type ('tags, 'T) this =
      'tags intf constraint 'tags = [> `ConcatArray of 'T ]
    let rec this_of_js :
      'tags 'T .
        (Ojs.t -> 'tags) -> (Ojs.t -> 'T) -> Ojs.t -> ('tags, 'T) this
      =
      fun (type __tags) ->
        fun (type __T) ->
          fun (__tags_of_js : Ojs.t -> __tags) ->
            fun (__T_of_js : Ojs.t -> __T) ->
              fun (x724 : Ojs.t) -> intf_of_js __tags_of_js x724
    and this_to_js :
      'tags 'T .
        ('tags -> Ojs.t) -> ('T -> Ojs.t) -> ('tags, 'T) this -> Ojs.t
      =
      fun (type __tags) ->
        fun (type __T) ->
          fun (__tags_to_js : __tags -> Ojs.t) ->
            fun (__T_to_js : __T -> Ojs.t) ->
              fun (x722 : __tags intf) -> intf_to_js __tags_to_js x722
    let (get_length : ('tags, 'T) this -> float) =
      fun (x726 : ('tags, 'T) this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic Obj.magic x726) "length")
    let (get : ('tags, 'T) this -> float -> 'T) =
      fun (x729 : ('tags, 'T) this) ->
        fun (x732 : float) ->
          Obj.magic
            (Ojs.get_prop (this_to_js Obj.magic Obj.magic x729)
               (Ojs.float_to_js x732))
    let (join : ('tags, 'T) this -> ?separator:string -> unit -> string) =
      fun (x736 : ('tags, 'T) this) ->
        fun ?separator:(x733 : string option) ->
          fun () ->
            Ojs.string_of_js
              (let x739 = this_to_js Obj.magic Obj.magic x736 in
               Ojs.call (Ojs.get_prop_ascii x739 "join") "apply"
                 [|x739;((let x734 =
                            Ojs.new_obj
                              (Ojs.get_prop_ascii Ojs.global "Array") 
                              [||] in
                          (match x733 with
                           | Some x735 ->
                               ignore
                                 (Ojs.call x734 "push"
                                    [|(Ojs.string_to_js x735)|])
                           | None -> ());
                          x734))|])
    let (slice :
      ('tags, 'T) this -> ?start:float -> ?end_:float -> unit -> 'T list) =
      fun (x745 : ('tags, 'T) this) ->
        fun ?start:(x740 : float option) ->
          fun ?end_:(x741 : float option) ->
            fun () ->
              Ojs.list_of_js Obj.magic
                (let x748 = this_to_js Obj.magic Obj.magic x745 in
                 Ojs.call (Ojs.get_prop_ascii x748 "slice") "apply"
                   [|x748;((let x742 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x740 with
                             | Some x744 ->
                                 ignore
                                   (Ojs.call x742 "push"
                                      [|(Ojs.float_to_js x744)|])
                             | None -> ());
                            (match x741 with
                             | Some x743 ->
                                 ignore
                                   (Ojs.call x742 "push"
                                      [|(Ojs.float_to_js x743)|])
                             | None -> ());
                            x742))|])
    let cast_from = Obj.magic
  end
module ReadonlyArray =
  struct
    type 'T t = [ `ReadonlyArray of 'T ] intf
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun _T -> Obj.magic
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun _T -> Obj.magic
    type 'T tags = [ `ReadonlyArray of 'T ]
    type ('tags, 'T) this =
      'tags intf constraint 'tags = [> `ReadonlyArray of 'T ]
    let rec this_of_js :
      'tags 'T .
        (Ojs.t -> 'tags) -> (Ojs.t -> 'T) -> Ojs.t -> ('tags, 'T) this
      =
      fun (type __tags) ->
        fun (type __T) ->
          fun (__tags_of_js : Ojs.t -> __tags) ->
            fun (__T_of_js : Ojs.t -> __T) ->
              fun (x752 : Ojs.t) -> intf_of_js __tags_of_js x752
    and this_to_js :
      'tags 'T .
        ('tags -> Ojs.t) -> ('T -> Ojs.t) -> ('tags, 'T) this -> Ojs.t
      =
      fun (type __tags) ->
        fun (type __T) ->
          fun (__tags_to_js : __tags -> Ojs.t) ->
            fun (__T_to_js : __T -> Ojs.t) ->
              fun (x750 : __tags intf) -> intf_to_js __tags_to_js x750
    let (findLast :
      ('tags, 'T) this ->
        predicate:(value:'T -> index:float -> array:'T list -> bool) ->
          ?thisArg:any -> unit -> 'S option)
      =
      fun (x762 : ('tags, 'T) this) ->
        fun
          ~predicate:(x754 :
                       value:'T -> index:float -> array:'T list -> bool)
          ->
          fun ?thisArg:(x755 : any option) ->
            fun () ->
              Ojs.option_of_js Obj.magic
                (let x765 = this_to_js Obj.magic Obj.magic x762 in
                 Ojs.call (Ojs.get_prop_ascii x765 "findLast") "apply"
                   [|x765;((let x756 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x756 "push"
                                 [|(Ojs.fun_to_js 3
                                      (fun (x758 : Ojs.t) ->
                                         fun (x759 : Ojs.t) ->
                                           fun (x760 : Ojs.t) ->
                                             Ojs.bool_to_js
                                               (x754 ~value:(Obj.magic x758)
                                                  ~index:(Ojs.float_of_js
                                                            x759)
                                                  ~array:(Ojs.list_of_js
                                                            Obj.magic x760))))|]);
                            (match x755 with
                             | Some x757 ->
                                 ignore
                                   (Ojs.call x756 "push" [|(any_to_js x757)|])
                             | None -> ());
                            x756))|])
    let (findLast' :
      ('tags, 'T) this ->
        predicate:(value:'T -> index:float -> array:'T list -> unknown) ->
          ?thisArg:any -> unit -> 'T option)
      =
      fun (x775 : ('tags, 'T) this) ->
        fun
          ~predicate:(x767 :
                       value:'T -> index:float -> array:'T list -> unknown)
          ->
          fun ?thisArg:(x768 : any option) ->
            fun () ->
              Ojs.option_of_js Obj.magic
                (let x778 = this_to_js Obj.magic Obj.magic x775 in
                 Ojs.call (Ojs.get_prop_ascii x778 "findLast") "apply"
                   [|x778;((let x769 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x769 "push"
                                 [|(Ojs.fun_to_js 3
                                      (fun (x771 : Ojs.t) ->
                                         fun (x772 : Ojs.t) ->
                                           fun (x773 : Ojs.t) ->
                                             unknown_to_js
                                               (x767 ~value:(Obj.magic x771)
                                                  ~index:(Ojs.float_of_js
                                                            x772)
                                                  ~array:(Ojs.list_of_js
                                                            Obj.magic x773))))|]);
                            (match x768 with
                             | Some x770 ->
                                 ignore
                                   (Ojs.call x769 "push" [|(any_to_js x770)|])
                             | None -> ());
                            x769))|])
    let (findLastIndex :
      ('tags, 'T) this ->
        predicate:(value:'T -> index:float -> array:'T list -> unknown) ->
          ?thisArg:any -> unit -> float)
      =
      fun (x788 : ('tags, 'T) this) ->
        fun
          ~predicate:(x780 :
                       value:'T -> index:float -> array:'T list -> unknown)
          ->
          fun ?thisArg:(x781 : any option) ->
            fun () ->
              Ojs.float_of_js
                (let x791 = this_to_js Obj.magic Obj.magic x788 in
                 Ojs.call (Ojs.get_prop_ascii x791 "findLastIndex") "apply"
                   [|x791;((let x782 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x782 "push"
                                 [|(Ojs.fun_to_js 3
                                      (fun (x784 : Ojs.t) ->
                                         fun (x785 : Ojs.t) ->
                                           fun (x786 : Ojs.t) ->
                                             unknown_to_js
                                               (x780 ~value:(Obj.magic x784)
                                                  ~index:(Ojs.float_of_js
                                                            x785)
                                                  ~array:(Ojs.list_of_js
                                                            Obj.magic x786))))|]);
                            (match x781 with
                             | Some x783 ->
                                 ignore
                                   (Ojs.call x782 "push" [|(any_to_js x783)|])
                             | None -> ());
                            x782))|])
    let (toReversed : ('tags, 'T) this -> 'T list) =
      fun (x792 : ('tags, 'T) this) ->
        Ojs.list_of_js Obj.magic
          (Ojs.call (this_to_js Obj.magic Obj.magic x792) "toReversed" [||])
    let (toSorted :
      ('tags, 'T) this ->
        ?compareFn:(a:'T -> b:'T -> float) -> unit -> 'T list)
      =
      fun (x801 : ('tags, 'T) this) ->
        fun ?compareFn:(x796 : (a:'T -> b:'T -> float) option) ->
          fun () ->
            Ojs.list_of_js Obj.magic
              (let x804 = this_to_js Obj.magic Obj.magic x801 in
               Ojs.call (Ojs.get_prop_ascii x804 "toSorted") "apply"
                 [|x804;((let x797 =
                            Ojs.new_obj
                              (Ojs.get_prop_ascii Ojs.global "Array") 
                              [||] in
                          (match x796 with
                           | Some x798 ->
                               ignore
                                 (Ojs.call x797 "push"
                                    [|(Ojs.fun_to_js 2
                                         (fun (x799 : Ojs.t) ->
                                            fun (x800 : Ojs.t) ->
                                              Ojs.float_to_js
                                                (x798 ~a:(Obj.magic x799)
                                                   ~b:(Obj.magic x800))))|])
                           | None -> ());
                          x797))|])
    let (toSpliced :
      ('tags, 'T) this ->
        start:float -> deleteCount:float -> items:'T list -> 'T list)
      =
      fun (x811 : ('tags, 'T) this) ->
        fun ~start:(x806 : float) ->
          fun ~deleteCount:(x807 : float) ->
            fun ~items:(x808 : 'T list) ->
              Ojs.list_of_js Obj.magic
                (let x814 = this_to_js Obj.magic Obj.magic x811 in
                 Ojs.call (Ojs.get_prop_ascii x814 "toSpliced") "apply"
                   [|x814;((let x809 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x809 "push"
                                 [|(Ojs.float_to_js x806)|]);
                            ignore
                              (Ojs.call x809 "push"
                                 [|(Ojs.float_to_js x807)|]);
                            List.iter
                              (fun (x810 : 'T) ->
                                 ignore
                                   (Ojs.call x809 "push" [|(Obj.magic x810)|]))
                              x808;
                            x809))|])
    let (toSpliced' :
      ('tags, 'T) this ->
        start:float -> ?deleteCount:float -> unit -> 'T list)
      =
      fun (x820 : ('tags, 'T) this) ->
        fun ~start:(x816 : float) ->
          fun ?deleteCount:(x817 : float option) ->
            fun () ->
              Ojs.list_of_js Obj.magic
                (let x823 = this_to_js Obj.magic Obj.magic x820 in
                 Ojs.call (Ojs.get_prop_ascii x823 "toSpliced") "apply"
                   [|x823;((let x818 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x818 "push"
                                 [|(Ojs.float_to_js x816)|]);
                            (match x817 with
                             | Some x819 ->
                                 ignore
                                   (Ojs.call x818 "push"
                                      [|(Ojs.float_to_js x819)|])
                             | None -> ());
                            x818))|])
    let (with_ : ('tags, 'T) this -> index:float -> value:'T -> 'T list) =
      fun (x827 : ('tags, 'T) this) ->
        fun ~index:(x825 : float) ->
          fun ~value:(x826 : 'T) ->
            Ojs.list_of_js Obj.magic
              (Ojs.call (this_to_js Obj.magic Obj.magic x827) "with"
                 [|(Ojs.float_to_js x825);(Obj.magic x826)|])
    let (at : ('tags, 'T) this -> index:float -> 'T option) =
      fun (x832 : ('tags, 'T) this) ->
        fun ~index:(x831 : float) ->
          Ojs.option_of_js Obj.magic
            (Ojs.call (this_to_js Obj.magic Obj.magic x832) "at"
               [|(Ojs.float_to_js x831)|])
    let (flatMap :
      ('tags, 'T) this ->
        callback:(this:'This ->
                    value:'T ->
                      index:float ->
                        array:'T list -> [ `U1 of 'U  | `U2 of 'U t ])
          -> ?thisArg:'This -> unit -> 'U list)
      =
      fun (x848 : ('tags, 'T) this) ->
        fun
          ~callback:(x836 :
                      this:'This ->
                        value:'T ->
                          index:float ->
                            array:'T list -> [ `U1 of 'U  | `U2 of 'U t ])
          ->
          fun ?thisArg:(x837 : 'This option) ->
            fun () ->
              Ojs.list_of_js Obj.magic
                (let x851 = this_to_js Obj.magic Obj.magic x848 in
                 Ojs.call (Ojs.get_prop_ascii x851 "flatMap") "apply"
                   [|x851;((let x838 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x838 "push"
                                 [|(Ojs.fun_to_js 4
                                      (fun (x840 : Ojs.t) ->
                                         fun (x841 : Ojs.t) ->
                                           fun (x842 : Ojs.t) ->
                                             fun (x843 : Ojs.t) ->
                                               match x836
                                                       ~this:(Obj.magic x840)
                                                       ~value:(Obj.magic x841)
                                                       ~index:(Ojs.float_of_js
                                                                 x842)
                                                       ~array:(Ojs.list_of_js
                                                                 Obj.magic
                                                                 x843)
                                               with
                                               | `U1 x845 -> Obj.magic x845
                                               | `U2 x846 ->
                                                   t_to_js Obj.magic x846))|]);
                            (match x837 with
                             | Some x839 ->
                                 ignore
                                   (Ojs.call x838 "push" [|(Obj.magic x839)|])
                             | None -> ());
                            x838))|])
    let (flat :
      ('tags, 'T) this ->
        this:'A -> ?depth:'D -> unit -> ('A, 'D) FlatArray.t list)
      =
      fun (x857 : ('tags, 'T) this) ->
        fun ~this:(x853 : 'A) ->
          fun ?depth:(x854 : 'D option) ->
            fun () ->
              Ojs.list_of_js
                (fun (x861 : Ojs.t) ->
                   FlatArray.t_of_js Obj.magic Obj.magic x861)
                (let x860 = this_to_js Obj.magic Obj.magic x857 in
                 Ojs.call (Ojs.get_prop_ascii x860 "flat") "apply"
                   [|x860;((let x855 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x855 "push" [|(Obj.magic x853)|]);
                            (match x854 with
                             | Some x856 ->
                                 ignore
                                   (Ojs.call x855 "push" [|(Obj.magic x856)|])
                             | None -> ());
                            x855))|])
    let (includes :
      ('tags, 'T) this ->
        searchElement:'T -> ?fromIndex:float -> unit -> bool)
      =
      fun (x868 : ('tags, 'T) this) ->
        fun ~searchElement:(x864 : 'T) ->
          fun ?fromIndex:(x865 : float option) ->
            fun () ->
              Ojs.bool_of_js
                (let x871 = this_to_js Obj.magic Obj.magic x868 in
                 Ojs.call (Ojs.get_prop_ascii x871 "includes") "apply"
                   [|x871;((let x866 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x866 "push" [|(Obj.magic x864)|]);
                            (match x865 with
                             | Some x867 ->
                                 ignore
                                   (Ojs.call x866 "push"
                                      [|(Ojs.float_to_js x867)|])
                             | None -> ());
                            x866))|])
    let (entries : ('tags, 'T) this -> (float * 'T) IterableIterator.t) =
      fun (x872 : ('tags, 'T) this) ->
        IterableIterator.t_of_js
          (fun (x875 : Ojs.t) ->
             let x876 = x875 in
             ((Ojs.float_of_js (Ojs.array_get x876 0)),
               (Obj.magic (Ojs.array_get x876 1))))
          (Ojs.call (this_to_js Obj.magic Obj.magic x872) "entries" [||])
    let (keys : ('tags, 'T) this -> float IterableIterator.t) =
      fun (x877 : ('tags, 'T) this) ->
        IterableIterator.t_of_js Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic Obj.magic x877) "keys" [||])
    let (values : ('tags, 'T) this -> 'T IterableIterator.t) =
      fun (x881 : ('tags, 'T) this) ->
        IterableIterator.t_of_js Obj.magic
          (Ojs.call (this_to_js Obj.magic Obj.magic x881) "values" [||])
    let (find :
      ('tags, 'T) this ->
        predicate:(value:'T -> index:float -> obj:'T list -> bool) ->
          ?thisArg:any -> unit -> 'S option)
      =
      fun (x893 : ('tags, 'T) this) ->
        fun
          ~predicate:(x885 : value:'T -> index:float -> obj:'T list -> bool)
          ->
          fun ?thisArg:(x886 : any option) ->
            fun () ->
              Ojs.option_of_js Obj.magic
                (let x896 = this_to_js Obj.magic Obj.magic x893 in
                 Ojs.call (Ojs.get_prop_ascii x896 "find") "apply"
                   [|x896;((let x887 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x887 "push"
                                 [|(Ojs.fun_to_js 3
                                      (fun (x889 : Ojs.t) ->
                                         fun (x890 : Ojs.t) ->
                                           fun (x891 : Ojs.t) ->
                                             Ojs.bool_to_js
                                               (x885 ~value:(Obj.magic x889)
                                                  ~index:(Ojs.float_of_js
                                                            x890)
                                                  ~obj:(Ojs.list_of_js
                                                          Obj.magic x891))))|]);
                            (match x886 with
                             | Some x888 ->
                                 ignore
                                   (Ojs.call x887 "push" [|(any_to_js x888)|])
                             | None -> ());
                            x887))|])
    let (find' :
      ('tags, 'T) this ->
        predicate:(value:'T -> index:float -> obj:'T list -> unknown) ->
          ?thisArg:any -> unit -> 'T option)
      =
      fun (x906 : ('tags, 'T) this) ->
        fun
          ~predicate:(x898 :
                       value:'T -> index:float -> obj:'T list -> unknown)
          ->
          fun ?thisArg:(x899 : any option) ->
            fun () ->
              Ojs.option_of_js Obj.magic
                (let x909 = this_to_js Obj.magic Obj.magic x906 in
                 Ojs.call (Ojs.get_prop_ascii x909 "find") "apply"
                   [|x909;((let x900 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x900 "push"
                                 [|(Ojs.fun_to_js 3
                                      (fun (x902 : Ojs.t) ->
                                         fun (x903 : Ojs.t) ->
                                           fun (x904 : Ojs.t) ->
                                             unknown_to_js
                                               (x898 ~value:(Obj.magic x902)
                                                  ~index:(Ojs.float_of_js
                                                            x903)
                                                  ~obj:(Ojs.list_of_js
                                                          Obj.magic x904))))|]);
                            (match x899 with
                             | Some x901 ->
                                 ignore
                                   (Ojs.call x900 "push" [|(any_to_js x901)|])
                             | None -> ());
                            x900))|])
    let (findIndex :
      ('tags, 'T) this ->
        predicate:(value:'T -> index:float -> obj:'T list -> unknown) ->
          ?thisArg:any -> unit -> float)
      =
      fun (x919 : ('tags, 'T) this) ->
        fun
          ~predicate:(x911 :
                       value:'T -> index:float -> obj:'T list -> unknown)
          ->
          fun ?thisArg:(x912 : any option) ->
            fun () ->
              Ojs.float_of_js
                (let x922 = this_to_js Obj.magic Obj.magic x919 in
                 Ojs.call (Ojs.get_prop_ascii x922 "findIndex") "apply"
                   [|x922;((let x913 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x913 "push"
                                 [|(Ojs.fun_to_js 3
                                      (fun (x915 : Ojs.t) ->
                                         fun (x916 : Ojs.t) ->
                                           fun (x917 : Ojs.t) ->
                                             unknown_to_js
                                               (x911 ~value:(Obj.magic x915)
                                                  ~index:(Ojs.float_of_js
                                                            x916)
                                                  ~obj:(Ojs.list_of_js
                                                          Obj.magic x917))))|]);
                            (match x912 with
                             | Some x914 ->
                                 ignore
                                   (Ojs.call x913 "push" [|(any_to_js x914)|])
                             | None -> ());
                            x913))|])
    let (get_length : ('tags, 'T) this -> float) =
      fun (x923 : ('tags, 'T) this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic Obj.magic x923) "length")
    let (toString : ('tags, 'T) this -> string) =
      fun (x926 : ('tags, 'T) this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic Obj.magic x926) "toString" [||])
    let (toLocaleString : ('tags, 'T) this -> string) =
      fun (x929 : ('tags, 'T) this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic Obj.magic x929) "toLocaleString"
             [||])
    let (concat : ('tags, 'T) this -> items:'T ConcatArray.t list -> 'T list)
      =
      fun (x936 : ('tags, 'T) this) ->
        fun ~items:(x932 : 'T ConcatArray.t list) ->
          Ojs.list_of_js Obj.magic
            (let x939 = this_to_js Obj.magic Obj.magic x936 in
             Ojs.call (Ojs.get_prop_ascii x939 "concat") "apply"
               [|x939;((let x933 =
                          Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                            [||] in
                        List.iter
                          (fun (x934 : 'T ConcatArray.t) ->
                             ignore
                               (Ojs.call x933 "push"
                                  [|(ConcatArray.t_to_js Obj.magic x934)|]))
                          x932;
                        x933))|])
    let (concat' :
      ('tags, 'T) this ->
        items:[ `U1 of 'T  | `U2 of 'T ConcatArray.t ] list -> 'T list)
      =
      fun (x947 : ('tags, 'T) this) ->
        fun ~items:(x941 : [ `U1 of 'T  | `U2 of 'T ConcatArray.t ] list) ->
          Ojs.list_of_js Obj.magic
            (let x950 = this_to_js Obj.magic Obj.magic x947 in
             Ojs.call (Ojs.get_prop_ascii x950 "concat") "apply"
               [|x950;((let x942 =
                          Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                            [||] in
                        List.iter
                          (fun
                             (x943 :
                               [ `U1 of 'T  | `U2 of 'T ConcatArray.t ])
                             ->
                             ignore
                               (Ojs.call x942 "push"
                                  [|((match x943 with
                                      | `U1 x944 -> Obj.magic x944
                                      | `U2 x945 ->
                                          ConcatArray.t_to_js Obj.magic x945))|]))
                          x941;
                        x942))|])
    let (join : ('tags, 'T) this -> ?separator:string -> unit -> string) =
      fun (x955 : ('tags, 'T) this) ->
        fun ?separator:(x952 : string option) ->
          fun () ->
            Ojs.string_of_js
              (let x958 = this_to_js Obj.magic Obj.magic x955 in
               Ojs.call (Ojs.get_prop_ascii x958 "join") "apply"
                 [|x958;((let x953 =
                            Ojs.new_obj
                              (Ojs.get_prop_ascii Ojs.global "Array") 
                              [||] in
                          (match x952 with
                           | Some x954 ->
                               ignore
                                 (Ojs.call x953 "push"
                                    [|(Ojs.string_to_js x954)|])
                           | None -> ());
                          x953))|])
    let (slice :
      ('tags, 'T) this -> ?start:float -> ?end_:float -> unit -> 'T list) =
      fun (x964 : ('tags, 'T) this) ->
        fun ?start:(x959 : float option) ->
          fun ?end_:(x960 : float option) ->
            fun () ->
              Ojs.list_of_js Obj.magic
                (let x967 = this_to_js Obj.magic Obj.magic x964 in
                 Ojs.call (Ojs.get_prop_ascii x967 "slice") "apply"
                   [|x967;((let x961 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x959 with
                             | Some x963 ->
                                 ignore
                                   (Ojs.call x961 "push"
                                      [|(Ojs.float_to_js x963)|])
                             | None -> ());
                            (match x960 with
                             | Some x962 ->
                                 ignore
                                   (Ojs.call x961 "push"
                                      [|(Ojs.float_to_js x962)|])
                             | None -> ());
                            x961))|])
    let (indexOf :
      ('tags, 'T) this ->
        searchElement:'T -> ?fromIndex:float -> unit -> float)
      =
      fun (x973 : ('tags, 'T) this) ->
        fun ~searchElement:(x969 : 'T) ->
          fun ?fromIndex:(x970 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x976 = this_to_js Obj.magic Obj.magic x973 in
                 Ojs.call (Ojs.get_prop_ascii x976 "indexOf") "apply"
                   [|x976;((let x971 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x971 "push" [|(Obj.magic x969)|]);
                            (match x970 with
                             | Some x972 ->
                                 ignore
                                   (Ojs.call x971 "push"
                                      [|(Ojs.float_to_js x972)|])
                             | None -> ());
                            x971))|])
    let (lastIndexOf :
      ('tags, 'T) this ->
        searchElement:'T -> ?fromIndex:float -> unit -> float)
      =
      fun (x981 : ('tags, 'T) this) ->
        fun ~searchElement:(x977 : 'T) ->
          fun ?fromIndex:(x978 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x984 = this_to_js Obj.magic Obj.magic x981 in
                 Ojs.call (Ojs.get_prop_ascii x984 "lastIndexOf") "apply"
                   [|x984;((let x979 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x979 "push" [|(Obj.magic x977)|]);
                            (match x978 with
                             | Some x980 ->
                                 ignore
                                   (Ojs.call x979 "push"
                                      [|(Ojs.float_to_js x980)|])
                             | None -> ());
                            x979))|])
    let (every :
      ('tags, 'T) this ->
        predicate:(value:'T -> index:float -> array:'T list -> bool) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x993 : ('tags, 'T) this) ->
        fun
          ~predicate:(x985 :
                       value:'T -> index:float -> array:'T list -> bool)
          ->
          fun ?thisArg:(x986 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x996 = this_to_js Obj.magic Obj.magic x993 in
                 Ojs.call (Ojs.get_prop_ascii x996 "every") "apply"
                   [|x996;((let x987 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x987 "push"
                                 [|(Ojs.fun_to_js 3
                                      (fun (x989 : Ojs.t) ->
                                         fun (x990 : Ojs.t) ->
                                           fun (x991 : Ojs.t) ->
                                             Ojs.bool_to_js
                                               (x985 ~value:(Obj.magic x989)
                                                  ~index:(Ojs.float_of_js
                                                            x990)
                                                  ~array:(Ojs.list_of_js
                                                            Obj.magic x991))))|]);
                            (match x986 with
                             | Some x988 ->
                                 ignore
                                   (Ojs.call x987 "push" [|(any_to_js x988)|])
                             | None -> ());
                            x987))|])
    let (every' :
      ('tags, 'T) this ->
        predicate:(value:'T -> index:float -> array:'T list -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x1005 : ('tags, 'T) this) ->
        fun
          ~predicate:(x997 :
                       value:'T -> index:float -> array:'T list -> unknown)
          ->
          fun ?thisArg:(x998 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x1008 = this_to_js Obj.magic Obj.magic x1005 in
                 Ojs.call (Ojs.get_prop_ascii x1008 "every") "apply"
                   [|x1008;((let x999 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x999 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x1001 : Ojs.t) ->
                                          fun (x1002 : Ojs.t) ->
                                            fun (x1003 : Ojs.t) ->
                                              unknown_to_js
                                                (x997
                                                   ~value:(Obj.magic x1001)
                                                   ~index:(Ojs.float_of_js
                                                             x1002)
                                                   ~array:(Ojs.list_of_js
                                                             Obj.magic x1003))))|]);
                             (match x998 with
                              | Some x1000 ->
                                  ignore
                                    (Ojs.call x999 "push"
                                       [|(any_to_js x1000)|])
                              | None -> ());
                             x999))|])
    let (some :
      ('tags, 'T) this ->
        predicate:(value:'T -> index:float -> array:'T list -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x1017 : ('tags, 'T) this) ->
        fun
          ~predicate:(x1009 :
                       value:'T -> index:float -> array:'T list -> unknown)
          ->
          fun ?thisArg:(x1010 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x1020 = this_to_js Obj.magic Obj.magic x1017 in
                 Ojs.call (Ojs.get_prop_ascii x1020 "some") "apply"
                   [|x1020;((let x1011 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1011 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x1013 : Ojs.t) ->
                                          fun (x1014 : Ojs.t) ->
                                            fun (x1015 : Ojs.t) ->
                                              unknown_to_js
                                                (x1009
                                                   ~value:(Obj.magic x1013)
                                                   ~index:(Ojs.float_of_js
                                                             x1014)
                                                   ~array:(Ojs.list_of_js
                                                             Obj.magic x1015))))|]);
                             (match x1010 with
                              | Some x1012 ->
                                  ignore
                                    (Ojs.call x1011 "push"
                                       [|(any_to_js x1012)|])
                              | None -> ());
                             x1011))|])
    let (forEach :
      ('tags, 'T) this ->
        callbackfn:(value:'T -> index:float -> array:'T list -> unit) ->
          ?thisArg:any -> unit -> unit)
      =
      fun (x1029 : ('tags, 'T) this) ->
        fun
          ~callbackfn:(x1021 :
                        value:'T -> index:float -> array:'T list -> unit)
          ->
          fun ?thisArg:(x1022 : any option) ->
            fun () ->
              ignore
                (let x1032 = this_to_js Obj.magic Obj.magic x1029 in
                 Ojs.call (Ojs.get_prop_ascii x1032 "forEach") "apply"
                   [|x1032;((let x1023 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1023 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x1025 : Ojs.t) ->
                                          fun (x1026 : Ojs.t) ->
                                            fun (x1027 : Ojs.t) ->
                                              x1021 ~value:(Obj.magic x1025)
                                                ~index:(Ojs.float_of_js x1026)
                                                ~array:(Ojs.list_of_js
                                                          Obj.magic x1027)))|]);
                             (match x1022 with
                              | Some x1024 ->
                                  ignore
                                    (Ojs.call x1023 "push"
                                       [|(any_to_js x1024)|])
                              | None -> ());
                             x1023))|])
    let (map :
      ('tags, 'T) this ->
        callbackfn:(value:'T -> index:float -> array:'T list -> 'U) ->
          ?thisArg:any -> unit -> 'U list)
      =
      fun (x1041 : ('tags, 'T) this) ->
        fun
          ~callbackfn:(x1033 :
                        value:'T -> index:float -> array:'T list -> 'U)
          ->
          fun ?thisArg:(x1034 : any option) ->
            fun () ->
              Ojs.list_of_js Obj.magic
                (let x1044 = this_to_js Obj.magic Obj.magic x1041 in
                 Ojs.call (Ojs.get_prop_ascii x1044 "map") "apply"
                   [|x1044;((let x1035 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1035 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x1037 : Ojs.t) ->
                                          fun (x1038 : Ojs.t) ->
                                            fun (x1039 : Ojs.t) ->
                                              Obj.magic
                                                (x1033
                                                   ~value:(Obj.magic x1037)
                                                   ~index:(Ojs.float_of_js
                                                             x1038)
                                                   ~array:(Ojs.list_of_js
                                                             Obj.magic x1039))))|]);
                             (match x1034 with
                              | Some x1036 ->
                                  ignore
                                    (Ojs.call x1035 "push"
                                       [|(any_to_js x1036)|])
                              | None -> ());
                             x1035))|])
    let (filter :
      ('tags, 'T) this ->
        predicate:(value:'T -> index:float -> array:'T list -> bool) ->
          ?thisArg:any -> unit -> 'S list)
      =
      fun (x1054 : ('tags, 'T) this) ->
        fun
          ~predicate:(x1046 :
                       value:'T -> index:float -> array:'T list -> bool)
          ->
          fun ?thisArg:(x1047 : any option) ->
            fun () ->
              Ojs.list_of_js Obj.magic
                (let x1057 = this_to_js Obj.magic Obj.magic x1054 in
                 Ojs.call (Ojs.get_prop_ascii x1057 "filter") "apply"
                   [|x1057;((let x1048 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1048 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x1050 : Ojs.t) ->
                                          fun (x1051 : Ojs.t) ->
                                            fun (x1052 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x1046
                                                   ~value:(Obj.magic x1050)
                                                   ~index:(Ojs.float_of_js
                                                             x1051)
                                                   ~array:(Ojs.list_of_js
                                                             Obj.magic x1052))))|]);
                             (match x1047 with
                              | Some x1049 ->
                                  ignore
                                    (Ojs.call x1048 "push"
                                       [|(any_to_js x1049)|])
                              | None -> ());
                             x1048))|])
    let (filter' :
      ('tags, 'T) this ->
        predicate:(value:'T -> index:float -> array:'T list -> unknown) ->
          ?thisArg:any -> unit -> 'T list)
      =
      fun (x1067 : ('tags, 'T) this) ->
        fun
          ~predicate:(x1059 :
                       value:'T -> index:float -> array:'T list -> unknown)
          ->
          fun ?thisArg:(x1060 : any option) ->
            fun () ->
              Ojs.list_of_js Obj.magic
                (let x1070 = this_to_js Obj.magic Obj.magic x1067 in
                 Ojs.call (Ojs.get_prop_ascii x1070 "filter") "apply"
                   [|x1070;((let x1061 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1061 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x1063 : Ojs.t) ->
                                          fun (x1064 : Ojs.t) ->
                                            fun (x1065 : Ojs.t) ->
                                              unknown_to_js
                                                (x1059
                                                   ~value:(Obj.magic x1063)
                                                   ~index:(Ojs.float_of_js
                                                             x1064)
                                                   ~array:(Ojs.list_of_js
                                                             Obj.magic x1065))))|]);
                             (match x1060 with
                              | Some x1062 ->
                                  ignore
                                    (Ojs.call x1061 "push"
                                       [|(any_to_js x1062)|])
                              | None -> ());
                             x1061))|])
    let (reduce :
      ('tags, 'T) this ->
        callbackfn:(previousValue:'T ->
                      currentValue:'T ->
                        currentIndex:float -> array:'T list -> 'T)
          -> 'T)
      =
      fun (x1078 : ('tags, 'T) this) ->
        fun
          ~callbackfn:(x1072 :
                        previousValue:'T ->
                          currentValue:'T ->
                            currentIndex:float -> array:'T list -> 'T)
          ->
          Obj.magic
            (Ojs.call (this_to_js Obj.magic Obj.magic x1078) "reduce"
               [|(Ojs.fun_to_js 4
                    (fun (x1073 : Ojs.t) ->
                       fun (x1074 : Ojs.t) ->
                         fun (x1075 : Ojs.t) ->
                           fun (x1076 : Ojs.t) ->
                             Obj.magic
                               (x1072 ~previousValue:(Obj.magic x1073)
                                  ~currentValue:(Obj.magic x1074)
                                  ~currentIndex:(Ojs.float_of_js x1075)
                                  ~array:(Ojs.list_of_js Obj.magic x1076))))|])
    let (reduce' :
      ('tags, 'T) this ->
        callbackfn:(previousValue:'T ->
                      currentValue:'T ->
                        currentIndex:float -> array:'T list -> 'T)
          -> initialValue:'T -> 'T)
      =
      fun (x1088 : ('tags, 'T) this) ->
        fun
          ~callbackfn:(x1081 :
                        previousValue:'T ->
                          currentValue:'T ->
                            currentIndex:float -> array:'T list -> 'T)
          ->
          fun ~initialValue:(x1087 : 'T) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic Obj.magic x1088) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x1082 : Ojs.t) ->
                         fun (x1083 : Ojs.t) ->
                           fun (x1084 : Ojs.t) ->
                             fun (x1085 : Ojs.t) ->
                               Obj.magic
                                 (x1081 ~previousValue:(Obj.magic x1082)
                                    ~currentValue:(Obj.magic x1083)
                                    ~currentIndex:(Ojs.float_of_js x1084)
                                    ~array:(Ojs.list_of_js Obj.magic x1085))));(
                   Obj.magic x1087)|])
    let (reduce'' :
      ('tags, 'T) this ->
        callbackfn:(previousValue:'U ->
                      currentValue:'T ->
                        currentIndex:float -> array:'T list -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x1098 : ('tags, 'T) this) ->
        fun
          ~callbackfn:(x1091 :
                        previousValue:'U ->
                          currentValue:'T ->
                            currentIndex:float -> array:'T list -> 'U)
          ->
          fun ~initialValue:(x1097 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic Obj.magic x1098) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x1092 : Ojs.t) ->
                         fun (x1093 : Ojs.t) ->
                           fun (x1094 : Ojs.t) ->
                             fun (x1095 : Ojs.t) ->
                               Obj.magic
                                 (x1091 ~previousValue:(Obj.magic x1092)
                                    ~currentValue:(Obj.magic x1093)
                                    ~currentIndex:(Ojs.float_of_js x1094)
                                    ~array:(Ojs.list_of_js Obj.magic x1095))));(
                   Obj.magic x1097)|])
    let (reduceRight :
      ('tags, 'T) this ->
        callbackfn:(previousValue:'T ->
                      currentValue:'T ->
                        currentIndex:float -> array:'T list -> 'T)
          -> 'T)
      =
      fun (x1107 : ('tags, 'T) this) ->
        fun
          ~callbackfn:(x1101 :
                        previousValue:'T ->
                          currentValue:'T ->
                            currentIndex:float -> array:'T list -> 'T)
          ->
          Obj.magic
            (Ojs.call (this_to_js Obj.magic Obj.magic x1107) "reduceRight"
               [|(Ojs.fun_to_js 4
                    (fun (x1102 : Ojs.t) ->
                       fun (x1103 : Ojs.t) ->
                         fun (x1104 : Ojs.t) ->
                           fun (x1105 : Ojs.t) ->
                             Obj.magic
                               (x1101 ~previousValue:(Obj.magic x1102)
                                  ~currentValue:(Obj.magic x1103)
                                  ~currentIndex:(Ojs.float_of_js x1104)
                                  ~array:(Ojs.list_of_js Obj.magic x1105))))|])
    let (reduceRight' :
      ('tags, 'T) this ->
        callbackfn:(previousValue:'T ->
                      currentValue:'T ->
                        currentIndex:float -> array:'T list -> 'T)
          -> initialValue:'T -> 'T)
      =
      fun (x1117 : ('tags, 'T) this) ->
        fun
          ~callbackfn:(x1110 :
                        previousValue:'T ->
                          currentValue:'T ->
                            currentIndex:float -> array:'T list -> 'T)
          ->
          fun ~initialValue:(x1116 : 'T) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic Obj.magic x1117) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x1111 : Ojs.t) ->
                         fun (x1112 : Ojs.t) ->
                           fun (x1113 : Ojs.t) ->
                             fun (x1114 : Ojs.t) ->
                               Obj.magic
                                 (x1110 ~previousValue:(Obj.magic x1111)
                                    ~currentValue:(Obj.magic x1112)
                                    ~currentIndex:(Ojs.float_of_js x1113)
                                    ~array:(Ojs.list_of_js Obj.magic x1114))));(
                   Obj.magic x1116)|])
    let (reduceRight'' :
      ('tags, 'T) this ->
        callbackfn:(previousValue:'U ->
                      currentValue:'T ->
                        currentIndex:float -> array:'T list -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x1127 : ('tags, 'T) this) ->
        fun
          ~callbackfn:(x1120 :
                        previousValue:'U ->
                          currentValue:'T ->
                            currentIndex:float -> array:'T list -> 'U)
          ->
          fun ~initialValue:(x1126 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic Obj.magic x1127) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x1121 : Ojs.t) ->
                         fun (x1122 : Ojs.t) ->
                           fun (x1123 : Ojs.t) ->
                             fun (x1124 : Ojs.t) ->
                               Obj.magic
                                 (x1120 ~previousValue:(Obj.magic x1121)
                                    ~currentValue:(Obj.magic x1122)
                                    ~currentIndex:(Ojs.float_of_js x1123)
                                    ~array:(Ojs.list_of_js Obj.magic x1124))));(
                   Obj.magic x1126)|])
    let (get : ('tags, 'T) this -> float -> 'T) =
      fun (x1130 : ('tags, 'T) this) ->
        fun (x1133 : float) ->
          Obj.magic
            (Ojs.get_prop (this_to_js Obj.magic Obj.magic x1130)
               (Ojs.float_to_js x1133))
    let cast_from = Obj.magic
    let (of_ml : 'T list -> 'T t) =
      fun (x1134 : 'T list) ->
        t_of_js Obj.magic (Ojs.list_to_js Obj.magic x1134)
    let (to_ml : 'T t -> 'T list) =
      fun (x1137 : 'T t) ->
        Ojs.list_of_js Obj.magic (t_to_js Obj.magic x1137)
  end
module TemplateStringsArray =
  struct
    type t =
      [ `ReadonlyArray of string  | `ReadonlyArray of string 
      | `TemplateStringsArray ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type tags =
      [ `ReadonlyArray of string  | `ReadonlyArray of string 
      | `TemplateStringsArray ]
    type 'tags this =
      'tags intf constraint 'tags = [> `TemplateStringsArray ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x1142 : Ojs.t) -> intf_of_js __tags_of_js x1142
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x1140 : __tags intf) -> intf_to_js __tags_to_js x1140
    let (get_raw : 'tags this -> string list) =
      fun (x1144 : 'tags this) ->
        Ojs.list_of_js Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x1144) "raw")
    let (create : raw:string list -> unit -> t) =
      fun ~raw:(x1147 : string list) ->
        fun () ->
          let x1148 = Ojs.empty_obj () in
          Ojs.set_prop_ascii x1148 "raw"
            (Ojs.list_to_js Ojs.string_to_js x1147);
          t_of_js x1148
    let cast_from = Obj.magic
  end
module SyntaxError =
  struct
    type t = [ `Error  | `SyntaxError ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type tags = [ `Error  | `SyntaxError ]
    type 'tags this = 'tags intf constraint 'tags = [> `SyntaxError ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x1152 : Ojs.t) -> intf_of_js __tags_of_js x1152
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x1150 : __tags intf) -> intf_to_js __tags_to_js x1150
    let (create : ?message:string -> ?options:ErrorOptions.t -> unit -> t) =
      fun ?message:(x1154 : string option) ->
        fun ?options:(x1155 : ErrorOptions.t option) ->
          fun () ->
            t_of_js
              (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "SyntaxError")
                 (let x1156 =
                    Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                  (match x1154 with
                   | Some x1158 ->
                       ignore
                         (Ojs.call x1156 "push" [|(Ojs.string_to_js x1158)|])
                   | None -> ());
                  (match x1155 with
                   | Some x1157 ->
                       ignore
                         (Ojs.call x1156 "push"
                            [|(ErrorOptions.t_to_js x1157)|])
                   | None -> ());
                  x1156))
    let (invoke : ?message:string -> ?options:ErrorOptions.t -> unit -> t) =
      fun ?message:(x1159 : string option) ->
        fun ?options:(x1160 : ErrorOptions.t option) ->
          fun () ->
            t_of_js
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "SyntaxError") "apply"
                 [|Ojs.null;((let x1161 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              (match x1159 with
                               | Some x1163 ->
                                   ignore
                                     (Ojs.call x1161 "push"
                                        [|(Ojs.string_to_js x1163)|])
                               | None -> ());
                              (match x1160 with
                               | Some x1162 ->
                                   ignore
                                     (Ojs.call x1161 "push"
                                        [|(ErrorOptions.t_to_js x1162)|])
                               | None -> ());
                              x1161))|])
    let (create' : ?message:string -> unit -> t) =
      fun ?message:(x1164 : string option) ->
        fun () ->
          t_of_js
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "SyntaxError")
               (let x1165 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x1164 with
                 | Some x1166 ->
                     ignore
                       (Ojs.call x1165 "push" [|(Ojs.string_to_js x1166)|])
                 | None -> ());
                x1165))
    let (invoke' : ?message:string -> unit -> t) =
      fun ?message:(x1167 : string option) ->
        fun () ->
          t_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "SyntaxError") "apply"
               [|Ojs.null;((let x1168 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x1167 with
                             | Some x1169 ->
                                 ignore
                                   (Ojs.call x1168 "push"
                                      [|(Ojs.string_to_js x1169)|])
                             | None -> ());
                            x1168))|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "SyntaxError")
             "prototype")
    let cast_from = Obj.magic
  end
module Symbol =
  struct
    type t = [ `Symbol ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type tags = [ `Symbol ]
    type 'tags this = 'tags intf constraint 'tags = [> `Symbol ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x1172 : Ojs.t) -> intf_of_js __tags_of_js x1172
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x1170 : __tags intf) -> intf_to_js __tags_to_js x1170
    let (get_description : 'tags this -> string option) =
      fun (x1174 : 'tags this) ->
        Ojs.option_of_js Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x1174) "description")
    let (toString : 'tags this -> string) =
      fun (x1177 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x1177) "toString" [||])
    let (valueOf : 'tags this -> symbol) =
      fun (x1179 : 'tags this) ->
        symbol_of_js (Ojs.call (this_to_js Obj.magic x1179) "valueOf" [||])
    let (metadata : unit -> symbol) =
      fun () ->
        symbol_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Symbol")
             "metadata")
    let (dispose : unit -> symbol) =
      fun () ->
        symbol_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Symbol")
             "dispose")
    let (asyncDispose : unit -> symbol) =
      fun () ->
        symbol_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Symbol")
             "asyncDispose")
    let (matchAll : unit -> symbol) =
      fun () ->
        symbol_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Symbol")
             "matchAll")
    let (asyncIterator : unit -> symbol) =
      fun () ->
        symbol_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Symbol")
             "asyncIterator")
    let (hasInstance : unit -> symbol) =
      fun () ->
        symbol_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Symbol")
             "hasInstance")
    let (isConcatSpreadable : unit -> symbol) =
      fun () ->
        symbol_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Symbol")
             "isConcatSpreadable")
    let (match_ : unit -> symbol) =
      fun () ->
        symbol_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Symbol")
             "match")
    let (replace : unit -> symbol) =
      fun () ->
        symbol_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Symbol")
             "replace")
    let (search : unit -> symbol) =
      fun () ->
        symbol_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Symbol")
             "search")
    let (species : unit -> symbol) =
      fun () ->
        symbol_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Symbol")
             "species")
    let (split : unit -> symbol) =
      fun () ->
        symbol_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Symbol")
             "split")
    let (toPrimitive : unit -> symbol) =
      fun () ->
        symbol_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Symbol")
             "toPrimitive")
    let (toStringTag : unit -> symbol) =
      fun () ->
        symbol_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Symbol")
             "toStringTag")
    let (unscopables : unit -> symbol) =
      fun () ->
        symbol_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Symbol")
             "unscopables")
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Symbol")
             "prototype")
    let (invoke :
      ?description:[ `U1 of string  | `U2 of float ] -> unit -> symbol) =
      fun ?description:(x1181 : [ `U1 of string  | `U2 of float ] option) ->
        fun () ->
          symbol_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "Symbol") "apply"
               [|Ojs.null;((let x1182 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x1181 with
                             | Some x1183 ->
                                 ignore
                                   (Ojs.call x1182 "push"
                                      [|((match x1183 with
                                          | `U1 x1184 ->
                                              Ojs.string_to_js x1184
                                          | `U2 x1185 ->
                                              Ojs.float_to_js x1185))|])
                             | None -> ());
                            x1182))|])
    let (for_ : string -> symbol) =
      fun (x1186 : string) ->
        symbol_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Symbol") "for"
             [|(Ojs.string_to_js x1186)|])
    let (keyFor : symbol -> string option) =
      fun (x1187 : symbol) ->
        Ojs.option_of_js Ojs.string_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Symbol") "keyFor"
             [|(symbol_to_js x1187)|])
    let (iterator : unit -> symbol) =
      fun () ->
        symbol_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Symbol")
             "iterator")
    let cast_from = Obj.magic
  end
module SuppressedError =
  struct
    type t = [ `Error  | `SuppressedError ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type tags = [ `Error  | `SuppressedError ]
    type 'tags this = 'tags intf constraint 'tags = [> `SuppressedError ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x1191 : Ojs.t) -> intf_of_js __tags_of_js x1191
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x1189 : __tags intf) -> intf_to_js __tags_to_js x1189
    let (get_error : 'tags this -> any) =
      fun (x1193 : 'tags this) ->
        any_of_js (Ojs.get_prop_ascii (this_to_js Obj.magic x1193) "error")
    let (set_error : 'tags this -> any -> unit) =
      fun (x1195 : 'tags this) ->
        fun (x1196 : any) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x1195) "error"
            (any_to_js x1196)
    let (get_suppressed : 'tags this -> any) =
      fun (x1198 : 'tags this) ->
        any_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x1198) "suppressed")
    let (set_suppressed : 'tags this -> any -> unit) =
      fun (x1200 : 'tags this) ->
        fun (x1201 : any) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x1200) "suppressed"
            (any_to_js x1201)
    let (create :
      error:any -> suppressed:any -> ?message:string -> unit -> t) =
      fun ~error:(x1203 : any) ->
        fun ~suppressed:(x1204 : any) ->
          fun ?message:(x1205 : string option) ->
            fun () ->
              t_of_js
                (Ojs.new_obj_arr
                   (Ojs.get_prop_ascii Ojs.global "SuppressedError")
                   (let x1206 =
                      Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                        [||] in
                    ignore (Ojs.call x1206 "push" [|(any_to_js x1203)|]);
                    ignore (Ojs.call x1206 "push" [|(any_to_js x1204)|]);
                    (match x1205 with
                     | Some x1207 ->
                         ignore
                           (Ojs.call x1206 "push"
                              [|(Ojs.string_to_js x1207)|])
                     | None -> ());
                    x1206))
    let (invoke :
      error:any -> suppressed:any -> ?message:string -> unit -> t) =
      fun ~error:(x1208 : any) ->
        fun ~suppressed:(x1209 : any) ->
          fun ?message:(x1210 : string option) ->
            fun () ->
              t_of_js
                (Ojs.call (Ojs.get_prop_ascii Ojs.global "SuppressedError")
                   "apply"
                   [|Ojs.null;((let x1211 =
                                  Ojs.new_obj
                                    (Ojs.get_prop_ascii Ojs.global "Array")
                                    [||] in
                                ignore
                                  (Ojs.call x1211 "push"
                                     [|(any_to_js x1208)|]);
                                ignore
                                  (Ojs.call x1211 "push"
                                     [|(any_to_js x1209)|]);
                                (match x1210 with
                                 | Some x1212 ->
                                     ignore
                                       (Ojs.call x1211 "push"
                                          [|(Ojs.string_to_js x1212)|])
                                 | None -> ());
                                x1211))|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "SuppressedError") "prototype")
    let (create' : error:any -> suppressed:any -> unit -> t) =
      fun ~error:(x1213 : any) ->
        fun ~suppressed:(x1214 : any) ->
          fun () ->
            let x1215 = Ojs.empty_obj () in
            Ojs.set_prop_ascii x1215 "error" (any_to_js x1213);
            Ojs.set_prop_ascii x1215 "suppressed" (any_to_js x1214);
            t_of_js x1215
    let cast_from = Obj.magic
  end
module Array =
  struct
    type 'T t = [ `Array of 'T ] intf
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun _T -> Obj.magic
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun _T -> Obj.magic
    type 'T tags = [ `Array of 'T ]
    type ('tags, 'T) this = 'tags intf constraint 'tags = [> `Array of 'T ]
    let rec this_of_js :
      'tags 'T .
        (Ojs.t -> 'tags) -> (Ojs.t -> 'T) -> Ojs.t -> ('tags, 'T) this
      =
      fun (type __tags) ->
        fun (type __T) ->
          fun (__tags_of_js : Ojs.t -> __tags) ->
            fun (__T_of_js : Ojs.t -> __T) ->
              fun (x1218 : Ojs.t) -> intf_of_js __tags_of_js x1218
    and this_to_js :
      'tags 'T .
        ('tags -> Ojs.t) -> ('T -> Ojs.t) -> ('tags, 'T) this -> Ojs.t
      =
      fun (type __tags) ->
        fun (type __T) ->
          fun (__tags_to_js : __tags -> Ojs.t) ->
            fun (__T_to_js : __T -> Ojs.t) ->
              fun (x1216 : __tags intf) -> intf_to_js __tags_to_js x1216
    let (findLast :
      ('tags, 'T) this ->
        predicate:(value:'T -> index:float -> array:'T list -> bool) ->
          ?thisArg:any -> unit -> 'S option)
      =
      fun (x1228 : ('tags, 'T) this) ->
        fun
          ~predicate:(x1220 :
                       value:'T -> index:float -> array:'T list -> bool)
          ->
          fun ?thisArg:(x1221 : any option) ->
            fun () ->
              Ojs.option_of_js Obj.magic
                (let x1231 = this_to_js Obj.magic Obj.magic x1228 in
                 Ojs.call (Ojs.get_prop_ascii x1231 "findLast") "apply"
                   [|x1231;((let x1222 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1222 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x1224 : Ojs.t) ->
                                          fun (x1225 : Ojs.t) ->
                                            fun (x1226 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x1220
                                                   ~value:(Obj.magic x1224)
                                                   ~index:(Ojs.float_of_js
                                                             x1225)
                                                   ~array:(Ojs.list_of_js
                                                             Obj.magic x1226))))|]);
                             (match x1221 with
                              | Some x1223 ->
                                  ignore
                                    (Ojs.call x1222 "push"
                                       [|(any_to_js x1223)|])
                              | None -> ());
                             x1222))|])
    let (findLast' :
      ('tags, 'T) this ->
        predicate:(value:'T -> index:float -> array:'T list -> unknown) ->
          ?thisArg:any -> unit -> 'T option)
      =
      fun (x1241 : ('tags, 'T) this) ->
        fun
          ~predicate:(x1233 :
                       value:'T -> index:float -> array:'T list -> unknown)
          ->
          fun ?thisArg:(x1234 : any option) ->
            fun () ->
              Ojs.option_of_js Obj.magic
                (let x1244 = this_to_js Obj.magic Obj.magic x1241 in
                 Ojs.call (Ojs.get_prop_ascii x1244 "findLast") "apply"
                   [|x1244;((let x1235 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1235 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x1237 : Ojs.t) ->
                                          fun (x1238 : Ojs.t) ->
                                            fun (x1239 : Ojs.t) ->
                                              unknown_to_js
                                                (x1233
                                                   ~value:(Obj.magic x1237)
                                                   ~index:(Ojs.float_of_js
                                                             x1238)
                                                   ~array:(Ojs.list_of_js
                                                             Obj.magic x1239))))|]);
                             (match x1234 with
                              | Some x1236 ->
                                  ignore
                                    (Ojs.call x1235 "push"
                                       [|(any_to_js x1236)|])
                              | None -> ());
                             x1235))|])
    let (findLastIndex :
      ('tags, 'T) this ->
        predicate:(value:'T -> index:float -> array:'T list -> unknown) ->
          ?thisArg:any -> unit -> float)
      =
      fun (x1254 : ('tags, 'T) this) ->
        fun
          ~predicate:(x1246 :
                       value:'T -> index:float -> array:'T list -> unknown)
          ->
          fun ?thisArg:(x1247 : any option) ->
            fun () ->
              Ojs.float_of_js
                (let x1257 = this_to_js Obj.magic Obj.magic x1254 in
                 Ojs.call (Ojs.get_prop_ascii x1257 "findLastIndex") "apply"
                   [|x1257;((let x1248 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1248 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x1250 : Ojs.t) ->
                                          fun (x1251 : Ojs.t) ->
                                            fun (x1252 : Ojs.t) ->
                                              unknown_to_js
                                                (x1246
                                                   ~value:(Obj.magic x1250)
                                                   ~index:(Ojs.float_of_js
                                                             x1251)
                                                   ~array:(Ojs.list_of_js
                                                             Obj.magic x1252))))|]);
                             (match x1247 with
                              | Some x1249 ->
                                  ignore
                                    (Ojs.call x1248 "push"
                                       [|(any_to_js x1249)|])
                              | None -> ());
                             x1248))|])
    let (toReversed : ('tags, 'T) this -> 'T list) =
      fun (x1258 : ('tags, 'T) this) ->
        Ojs.list_of_js Obj.magic
          (Ojs.call (this_to_js Obj.magic Obj.magic x1258) "toReversed" [||])
    let (toSorted :
      ('tags, 'T) this ->
        ?compareFn:(a:'T -> b:'T -> float) -> unit -> 'T list)
      =
      fun (x1267 : ('tags, 'T) this) ->
        fun ?compareFn:(x1262 : (a:'T -> b:'T -> float) option) ->
          fun () ->
            Ojs.list_of_js Obj.magic
              (let x1270 = this_to_js Obj.magic Obj.magic x1267 in
               Ojs.call (Ojs.get_prop_ascii x1270 "toSorted") "apply"
                 [|x1270;((let x1263 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x1262 with
                            | Some x1264 ->
                                ignore
                                  (Ojs.call x1263 "push"
                                     [|(Ojs.fun_to_js 2
                                          (fun (x1265 : Ojs.t) ->
                                             fun (x1266 : Ojs.t) ->
                                               Ojs.float_to_js
                                                 (x1264 ~a:(Obj.magic x1265)
                                                    ~b:(Obj.magic x1266))))|])
                            | None -> ());
                           x1263))|])
    let (toSpliced :
      ('tags, 'T) this ->
        start:float -> deleteCount:float -> items:'T list -> 'T list)
      =
      fun (x1277 : ('tags, 'T) this) ->
        fun ~start:(x1272 : float) ->
          fun ~deleteCount:(x1273 : float) ->
            fun ~items:(x1274 : 'T list) ->
              Ojs.list_of_js Obj.magic
                (let x1280 = this_to_js Obj.magic Obj.magic x1277 in
                 Ojs.call (Ojs.get_prop_ascii x1280 "toSpliced") "apply"
                   [|x1280;((let x1275 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1275 "push"
                                  [|(Ojs.float_to_js x1272)|]);
                             ignore
                               (Ojs.call x1275 "push"
                                  [|(Ojs.float_to_js x1273)|]);
                             List.iter
                               (fun (x1276 : 'T) ->
                                  ignore
                                    (Ojs.call x1275 "push"
                                       [|(Obj.magic x1276)|])) x1274;
                             x1275))|])
    let (toSpliced' :
      ('tags, 'T) this ->
        start:float -> ?deleteCount:float -> unit -> 'T list)
      =
      fun (x1286 : ('tags, 'T) this) ->
        fun ~start:(x1282 : float) ->
          fun ?deleteCount:(x1283 : float option) ->
            fun () ->
              Ojs.list_of_js Obj.magic
                (let x1289 = this_to_js Obj.magic Obj.magic x1286 in
                 Ojs.call (Ojs.get_prop_ascii x1289 "toSpliced") "apply"
                   [|x1289;((let x1284 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1284 "push"
                                  [|(Ojs.float_to_js x1282)|]);
                             (match x1283 with
                              | Some x1285 ->
                                  ignore
                                    (Ojs.call x1284 "push"
                                       [|(Ojs.float_to_js x1285)|])
                              | None -> ());
                             x1284))|])
    let (with_ : ('tags, 'T) this -> index:float -> value:'T -> 'T list) =
      fun (x1293 : ('tags, 'T) this) ->
        fun ~index:(x1291 : float) ->
          fun ~value:(x1292 : 'T) ->
            Ojs.list_of_js Obj.magic
              (Ojs.call (this_to_js Obj.magic Obj.magic x1293) "with"
                 [|(Ojs.float_to_js x1291);(Obj.magic x1292)|])
    let (at : ('tags, 'T) this -> index:float -> 'T option) =
      fun (x1298 : ('tags, 'T) this) ->
        fun ~index:(x1297 : float) ->
          Ojs.option_of_js Obj.magic
            (Ojs.call (this_to_js Obj.magic Obj.magic x1298) "at"
               [|(Ojs.float_to_js x1297)|])
    let (flatMap :
      ('tags, 'T) this ->
        callback:(this:'This ->
                    value:'T ->
                      index:float ->
                        array:'T list ->
                          [ `U1 of 'U  | `U2 of 'U ReadonlyArray.t ])
          -> ?thisArg:'This -> unit -> 'U list)
      =
      fun (x1314 : ('tags, 'T) this) ->
        fun
          ~callback:(x1302 :
                      this:'This ->
                        value:'T ->
                          index:float ->
                            array:'T list ->
                              [ `U1 of 'U  | `U2 of 'U ReadonlyArray.t ])
          ->
          fun ?thisArg:(x1303 : 'This option) ->
            fun () ->
              Ojs.list_of_js Obj.magic
                (let x1317 = this_to_js Obj.magic Obj.magic x1314 in
                 Ojs.call (Ojs.get_prop_ascii x1317 "flatMap") "apply"
                   [|x1317;((let x1304 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1304 "push"
                                  [|(Ojs.fun_to_js 4
                                       (fun (x1306 : Ojs.t) ->
                                          fun (x1307 : Ojs.t) ->
                                            fun (x1308 : Ojs.t) ->
                                              fun (x1309 : Ojs.t) ->
                                                match x1302
                                                        ~this:(Obj.magic
                                                                 x1306)
                                                        ~value:(Obj.magic
                                                                  x1307)
                                                        ~index:(Ojs.float_of_js
                                                                  x1308)
                                                        ~array:(Ojs.list_of_js
                                                                  Obj.magic
                                                                  x1309)
                                                with
                                                | `U1 x1311 ->
                                                    Obj.magic x1311
                                                | `U2 x1312 ->
                                                    ReadonlyArray.t_to_js
                                                      Obj.magic x1312))|]);
                             (match x1303 with
                              | Some x1305 ->
                                  ignore
                                    (Ojs.call x1304 "push"
                                       [|(Obj.magic x1305)|])
                              | None -> ());
                             x1304))|])
    let (flat :
      ('tags, 'T) this ->
        this:'A -> ?depth:'D -> unit -> ('A, 'D) FlatArray.t list)
      =
      fun (x1323 : ('tags, 'T) this) ->
        fun ~this:(x1319 : 'A) ->
          fun ?depth:(x1320 : 'D option) ->
            fun () ->
              Ojs.list_of_js
                (fun (x1327 : Ojs.t) ->
                   FlatArray.t_of_js Obj.magic Obj.magic x1327)
                (let x1326 = this_to_js Obj.magic Obj.magic x1323 in
                 Ojs.call (Ojs.get_prop_ascii x1326 "flat") "apply"
                   [|x1326;((let x1321 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1321 "push" [|(Obj.magic x1319)|]);
                             (match x1320 with
                              | Some x1322 ->
                                  ignore
                                    (Ojs.call x1321 "push"
                                       [|(Obj.magic x1322)|])
                              | None -> ());
                             x1321))|])
    let (includes :
      ('tags, 'T) this ->
        searchElement:'T -> ?fromIndex:float -> unit -> bool)
      =
      fun (x1334 : ('tags, 'T) this) ->
        fun ~searchElement:(x1330 : 'T) ->
          fun ?fromIndex:(x1331 : float option) ->
            fun () ->
              Ojs.bool_of_js
                (let x1337 = this_to_js Obj.magic Obj.magic x1334 in
                 Ojs.call (Ojs.get_prop_ascii x1337 "includes") "apply"
                   [|x1337;((let x1332 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1332 "push" [|(Obj.magic x1330)|]);
                             (match x1331 with
                              | Some x1333 ->
                                  ignore
                                    (Ojs.call x1332 "push"
                                       [|(Ojs.float_to_js x1333)|])
                              | None -> ());
                             x1332))|])
    let (entries : ('tags, 'T) this -> (float * 'T) IterableIterator.t) =
      fun (x1338 : ('tags, 'T) this) ->
        IterableIterator.t_of_js
          (fun (x1341 : Ojs.t) ->
             let x1342 = x1341 in
             ((Ojs.float_of_js (Ojs.array_get x1342 0)),
               (Obj.magic (Ojs.array_get x1342 1))))
          (Ojs.call (this_to_js Obj.magic Obj.magic x1338) "entries" [||])
    let (keys : ('tags, 'T) this -> float IterableIterator.t) =
      fun (x1343 : ('tags, 'T) this) ->
        IterableIterator.t_of_js Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic Obj.magic x1343) "keys" [||])
    let (values : ('tags, 'T) this -> 'T IterableIterator.t) =
      fun (x1347 : ('tags, 'T) this) ->
        IterableIterator.t_of_js Obj.magic
          (Ojs.call (this_to_js Obj.magic Obj.magic x1347) "values" [||])
    let (find :
      ('tags, 'T) this ->
        predicate:(value:'T -> index:float -> obj:'T list -> bool) ->
          ?thisArg:any -> unit -> 'S option)
      =
      fun (x1359 : ('tags, 'T) this) ->
        fun
          ~predicate:(x1351 : value:'T -> index:float -> obj:'T list -> bool)
          ->
          fun ?thisArg:(x1352 : any option) ->
            fun () ->
              Ojs.option_of_js Obj.magic
                (let x1362 = this_to_js Obj.magic Obj.magic x1359 in
                 Ojs.call (Ojs.get_prop_ascii x1362 "find") "apply"
                   [|x1362;((let x1353 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1353 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x1355 : Ojs.t) ->
                                          fun (x1356 : Ojs.t) ->
                                            fun (x1357 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x1351
                                                   ~value:(Obj.magic x1355)
                                                   ~index:(Ojs.float_of_js
                                                             x1356)
                                                   ~obj:(Ojs.list_of_js
                                                           Obj.magic x1357))))|]);
                             (match x1352 with
                              | Some x1354 ->
                                  ignore
                                    (Ojs.call x1353 "push"
                                       [|(any_to_js x1354)|])
                              | None -> ());
                             x1353))|])
    let (find' :
      ('tags, 'T) this ->
        predicate:(value:'T -> index:float -> obj:'T list -> unknown) ->
          ?thisArg:any -> unit -> 'T option)
      =
      fun (x1372 : ('tags, 'T) this) ->
        fun
          ~predicate:(x1364 :
                       value:'T -> index:float -> obj:'T list -> unknown)
          ->
          fun ?thisArg:(x1365 : any option) ->
            fun () ->
              Ojs.option_of_js Obj.magic
                (let x1375 = this_to_js Obj.magic Obj.magic x1372 in
                 Ojs.call (Ojs.get_prop_ascii x1375 "find") "apply"
                   [|x1375;((let x1366 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1366 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x1368 : Ojs.t) ->
                                          fun (x1369 : Ojs.t) ->
                                            fun (x1370 : Ojs.t) ->
                                              unknown_to_js
                                                (x1364
                                                   ~value:(Obj.magic x1368)
                                                   ~index:(Ojs.float_of_js
                                                             x1369)
                                                   ~obj:(Ojs.list_of_js
                                                           Obj.magic x1370))))|]);
                             (match x1365 with
                              | Some x1367 ->
                                  ignore
                                    (Ojs.call x1366 "push"
                                       [|(any_to_js x1367)|])
                              | None -> ());
                             x1366))|])
    let (findIndex :
      ('tags, 'T) this ->
        predicate:(value:'T -> index:float -> obj:'T list -> unknown) ->
          ?thisArg:any -> unit -> float)
      =
      fun (x1385 : ('tags, 'T) this) ->
        fun
          ~predicate:(x1377 :
                       value:'T -> index:float -> obj:'T list -> unknown)
          ->
          fun ?thisArg:(x1378 : any option) ->
            fun () ->
              Ojs.float_of_js
                (let x1388 = this_to_js Obj.magic Obj.magic x1385 in
                 Ojs.call (Ojs.get_prop_ascii x1388 "findIndex") "apply"
                   [|x1388;((let x1379 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1379 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x1381 : Ojs.t) ->
                                          fun (x1382 : Ojs.t) ->
                                            fun (x1383 : Ojs.t) ->
                                              unknown_to_js
                                                (x1377
                                                   ~value:(Obj.magic x1381)
                                                   ~index:(Ojs.float_of_js
                                                             x1382)
                                                   ~obj:(Ojs.list_of_js
                                                           Obj.magic x1383))))|]);
                             (match x1378 with
                              | Some x1380 ->
                                  ignore
                                    (Ojs.call x1379 "push"
                                       [|(any_to_js x1380)|])
                              | None -> ());
                             x1379))|])
    let (fill :
      ('tags, 'T) this ->
        value:'T -> ?start:float -> ?end_:float -> unit -> ('tags, 'T) this)
      =
      fun (x1395 : ('tags, 'T) this) ->
        fun ~value:(x1389 : 'T) ->
          fun ?start:(x1390 : float option) ->
            fun ?end_:(x1391 : float option) ->
              fun () ->
                this_of_js Obj.magic Obj.magic
                  (let x1398 = this_to_js Obj.magic Obj.magic x1395 in
                   Ojs.call (Ojs.get_prop_ascii x1398 "fill") "apply"
                     [|x1398;((let x1392 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x1392 "push" [|(Obj.magic x1389)|]);
                               (match x1390 with
                                | Some x1394 ->
                                    ignore
                                      (Ojs.call x1392 "push"
                                         [|(Ojs.float_to_js x1394)|])
                                | None -> ());
                               (match x1391 with
                                | Some x1393 ->
                                    ignore
                                      (Ojs.call x1392 "push"
                                         [|(Ojs.float_to_js x1393)|])
                                | None -> ());
                               x1392))|])
    let (copyWithin :
      ('tags, 'T) this ->
        target:float ->
          start:float -> ?end_:float -> unit -> ('tags, 'T) this)
      =
      fun (x1406 : ('tags, 'T) this) ->
        fun ~target:(x1401 : float) ->
          fun ~start:(x1402 : float) ->
            fun ?end_:(x1403 : float option) ->
              fun () ->
                this_of_js Obj.magic Obj.magic
                  (let x1409 = this_to_js Obj.magic Obj.magic x1406 in
                   Ojs.call (Ojs.get_prop_ascii x1409 "copyWithin") "apply"
                     [|x1409;((let x1404 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x1404 "push"
                                    [|(Ojs.float_to_js x1401)|]);
                               ignore
                                 (Ojs.call x1404 "push"
                                    [|(Ojs.float_to_js x1402)|]);
                               (match x1403 with
                                | Some x1405 ->
                                    ignore
                                      (Ojs.call x1404 "push"
                                         [|(Ojs.float_to_js x1405)|])
                                | None -> ());
                               x1404))|])
    let (get_length : ('tags, 'T) this -> float) =
      fun (x1412 : ('tags, 'T) this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic Obj.magic x1412) "length")
    let (set_length : ('tags, 'T) this -> float -> unit) =
      fun (x1415 : ('tags, 'T) this) ->
        fun (x1416 : float) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic Obj.magic x1415) "length"
            (Ojs.float_to_js x1416)
    let (toString : ('tags, 'T) this -> string) =
      fun (x1419 : ('tags, 'T) this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic Obj.magic x1419) "toString" [||])
    let (toLocaleString : ('tags, 'T) this -> string) =
      fun (x1422 : ('tags, 'T) this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic Obj.magic x1422) "toLocaleString"
             [||])
    let (pop : ('tags, 'T) this -> 'T option) =
      fun (x1425 : ('tags, 'T) this) ->
        Ojs.option_of_js Obj.magic
          (Ojs.call (this_to_js Obj.magic Obj.magic x1425) "pop" [||])
    let (push : ('tags, 'T) this -> items:'T list -> float) =
      fun (x1432 : ('tags, 'T) this) ->
        fun ~items:(x1429 : 'T list) ->
          Ojs.float_of_js
            (let x1435 = this_to_js Obj.magic Obj.magic x1432 in
             Ojs.call (Ojs.get_prop_ascii x1435 "push") "apply"
               [|x1435;((let x1430 =
                           Ojs.new_obj
                             (Ojs.get_prop_ascii Ojs.global "Array") 
                             [||] in
                         List.iter
                           (fun (x1431 : 'T) ->
                              ignore
                                (Ojs.call x1430 "push" [|(Obj.magic x1431)|]))
                           x1429;
                         x1430))|])
    let (concat : ('tags, 'T) this -> items:'T ConcatArray.t list -> 'T list)
      =
      fun (x1440 : ('tags, 'T) this) ->
        fun ~items:(x1436 : 'T ConcatArray.t list) ->
          Ojs.list_of_js Obj.magic
            (let x1443 = this_to_js Obj.magic Obj.magic x1440 in
             Ojs.call (Ojs.get_prop_ascii x1443 "concat") "apply"
               [|x1443;((let x1437 =
                           Ojs.new_obj
                             (Ojs.get_prop_ascii Ojs.global "Array") 
                             [||] in
                         List.iter
                           (fun (x1438 : 'T ConcatArray.t) ->
                              ignore
                                (Ojs.call x1437 "push"
                                   [|(ConcatArray.t_to_js Obj.magic x1438)|]))
                           x1436;
                         x1437))|])
    let (concat' :
      ('tags, 'T) this ->
        items:[ `U1 of 'T  | `U2 of 'T ConcatArray.t ] list -> 'T list)
      =
      fun (x1451 : ('tags, 'T) this) ->
        fun ~items:(x1445 : [ `U1 of 'T  | `U2 of 'T ConcatArray.t ] list) ->
          Ojs.list_of_js Obj.magic
            (let x1454 = this_to_js Obj.magic Obj.magic x1451 in
             Ojs.call (Ojs.get_prop_ascii x1454 "concat") "apply"
               [|x1454;((let x1446 =
                           Ojs.new_obj
                             (Ojs.get_prop_ascii Ojs.global "Array") 
                             [||] in
                         List.iter
                           (fun
                              (x1447 :
                                [ `U1 of 'T  | `U2 of 'T ConcatArray.t ])
                              ->
                              ignore
                                (Ojs.call x1446 "push"
                                   [|((match x1447 with
                                       | `U1 x1448 -> Obj.magic x1448
                                       | `U2 x1449 ->
                                           ConcatArray.t_to_js Obj.magic
                                             x1449))|])) x1445;
                         x1446))|])
    let (join : ('tags, 'T) this -> ?separator:string -> unit -> string) =
      fun (x1459 : ('tags, 'T) this) ->
        fun ?separator:(x1456 : string option) ->
          fun () ->
            Ojs.string_of_js
              (let x1462 = this_to_js Obj.magic Obj.magic x1459 in
               Ojs.call (Ojs.get_prop_ascii x1462 "join") "apply"
                 [|x1462;((let x1457 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x1456 with
                            | Some x1458 ->
                                ignore
                                  (Ojs.call x1457 "push"
                                     [|(Ojs.string_to_js x1458)|])
                            | None -> ());
                           x1457))|])
    let (reverse : ('tags, 'T) this -> 'T list) =
      fun (x1463 : ('tags, 'T) this) ->
        Ojs.list_of_js Obj.magic
          (Ojs.call (this_to_js Obj.magic Obj.magic x1463) "reverse" [||])
    let (shift : ('tags, 'T) this -> 'T option) =
      fun (x1467 : ('tags, 'T) this) ->
        Ojs.option_of_js Obj.magic
          (Ojs.call (this_to_js Obj.magic Obj.magic x1467) "shift" [||])
    let (slice :
      ('tags, 'T) this -> ?start:float -> ?end_:float -> unit -> 'T list) =
      fun (x1476 : ('tags, 'T) this) ->
        fun ?start:(x1471 : float option) ->
          fun ?end_:(x1472 : float option) ->
            fun () ->
              Ojs.list_of_js Obj.magic
                (let x1479 = this_to_js Obj.magic Obj.magic x1476 in
                 Ojs.call (Ojs.get_prop_ascii x1479 "slice") "apply"
                   [|x1479;((let x1473 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x1471 with
                              | Some x1475 ->
                                  ignore
                                    (Ojs.call x1473 "push"
                                       [|(Ojs.float_to_js x1475)|])
                              | None -> ());
                             (match x1472 with
                              | Some x1474 ->
                                  ignore
                                    (Ojs.call x1473 "push"
                                       [|(Ojs.float_to_js x1474)|])
                              | None -> ());
                             x1473))|])
    let (sort :
      ('tags, 'T) this ->
        ?compareFn:(a:'T -> b:'T -> float) -> unit -> ('tags, 'T) this)
      =
      fun (x1486 : ('tags, 'T) this) ->
        fun ?compareFn:(x1481 : (a:'T -> b:'T -> float) option) ->
          fun () ->
            this_of_js Obj.magic Obj.magic
              (let x1489 = this_to_js Obj.magic Obj.magic x1486 in
               Ojs.call (Ojs.get_prop_ascii x1489 "sort") "apply"
                 [|x1489;((let x1482 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x1481 with
                            | Some x1483 ->
                                ignore
                                  (Ojs.call x1482 "push"
                                     [|(Ojs.fun_to_js 2
                                          (fun (x1484 : Ojs.t) ->
                                             fun (x1485 : Ojs.t) ->
                                               Ojs.float_to_js
                                                 (x1483 ~a:(Obj.magic x1484)
                                                    ~b:(Obj.magic x1485))))|])
                            | None -> ());
                           x1482))|])
    let (splice :
      ('tags, 'T) this ->
        start:float -> ?deleteCount:float -> unit -> 'T list)
      =
      fun (x1496 : ('tags, 'T) this) ->
        fun ~start:(x1492 : float) ->
          fun ?deleteCount:(x1493 : float option) ->
            fun () ->
              Ojs.list_of_js Obj.magic
                (let x1499 = this_to_js Obj.magic Obj.magic x1496 in
                 Ojs.call (Ojs.get_prop_ascii x1499 "splice") "apply"
                   [|x1499;((let x1494 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1494 "push"
                                  [|(Ojs.float_to_js x1492)|]);
                             (match x1493 with
                              | Some x1495 ->
                                  ignore
                                    (Ojs.call x1494 "push"
                                       [|(Ojs.float_to_js x1495)|])
                              | None -> ());
                             x1494))|])
    let (splice' :
      ('tags, 'T) this ->
        start:float -> deleteCount:float -> items:'T list -> 'T list)
      =
      fun (x1506 : ('tags, 'T) this) ->
        fun ~start:(x1501 : float) ->
          fun ~deleteCount:(x1502 : float) ->
            fun ~items:(x1503 : 'T list) ->
              Ojs.list_of_js Obj.magic
                (let x1509 = this_to_js Obj.magic Obj.magic x1506 in
                 Ojs.call (Ojs.get_prop_ascii x1509 "splice") "apply"
                   [|x1509;((let x1504 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1504 "push"
                                  [|(Ojs.float_to_js x1501)|]);
                             ignore
                               (Ojs.call x1504 "push"
                                  [|(Ojs.float_to_js x1502)|]);
                             List.iter
                               (fun (x1505 : 'T) ->
                                  ignore
                                    (Ojs.call x1504 "push"
                                       [|(Obj.magic x1505)|])) x1503;
                             x1504))|])
    let (unshift : ('tags, 'T) this -> items:'T list -> float) =
      fun (x1514 : ('tags, 'T) this) ->
        fun ~items:(x1511 : 'T list) ->
          Ojs.float_of_js
            (let x1517 = this_to_js Obj.magic Obj.magic x1514 in
             Ojs.call (Ojs.get_prop_ascii x1517 "unshift") "apply"
               [|x1517;((let x1512 =
                           Ojs.new_obj
                             (Ojs.get_prop_ascii Ojs.global "Array") 
                             [||] in
                         List.iter
                           (fun (x1513 : 'T) ->
                              ignore
                                (Ojs.call x1512 "push" [|(Obj.magic x1513)|]))
                           x1511;
                         x1512))|])
    let (indexOf :
      ('tags, 'T) this ->
        searchElement:'T -> ?fromIndex:float -> unit -> float)
      =
      fun (x1522 : ('tags, 'T) this) ->
        fun ~searchElement:(x1518 : 'T) ->
          fun ?fromIndex:(x1519 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x1525 = this_to_js Obj.magic Obj.magic x1522 in
                 Ojs.call (Ojs.get_prop_ascii x1525 "indexOf") "apply"
                   [|x1525;((let x1520 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1520 "push" [|(Obj.magic x1518)|]);
                             (match x1519 with
                              | Some x1521 ->
                                  ignore
                                    (Ojs.call x1520 "push"
                                       [|(Ojs.float_to_js x1521)|])
                              | None -> ());
                             x1520))|])
    let (lastIndexOf :
      ('tags, 'T) this ->
        searchElement:'T -> ?fromIndex:float -> unit -> float)
      =
      fun (x1530 : ('tags, 'T) this) ->
        fun ~searchElement:(x1526 : 'T) ->
          fun ?fromIndex:(x1527 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x1533 = this_to_js Obj.magic Obj.magic x1530 in
                 Ojs.call (Ojs.get_prop_ascii x1533 "lastIndexOf") "apply"
                   [|x1533;((let x1528 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1528 "push" [|(Obj.magic x1526)|]);
                             (match x1527 with
                              | Some x1529 ->
                                  ignore
                                    (Ojs.call x1528 "push"
                                       [|(Ojs.float_to_js x1529)|])
                              | None -> ());
                             x1528))|])
    let (every :
      ('tags, 'T) this ->
        predicate:(value:'T -> index:float -> array:'T list -> bool) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x1542 : ('tags, 'T) this) ->
        fun
          ~predicate:(x1534 :
                       value:'T -> index:float -> array:'T list -> bool)
          ->
          fun ?thisArg:(x1535 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x1545 = this_to_js Obj.magic Obj.magic x1542 in
                 Ojs.call (Ojs.get_prop_ascii x1545 "every") "apply"
                   [|x1545;((let x1536 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1536 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x1538 : Ojs.t) ->
                                          fun (x1539 : Ojs.t) ->
                                            fun (x1540 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x1534
                                                   ~value:(Obj.magic x1538)
                                                   ~index:(Ojs.float_of_js
                                                             x1539)
                                                   ~array:(Ojs.list_of_js
                                                             Obj.magic x1540))))|]);
                             (match x1535 with
                              | Some x1537 ->
                                  ignore
                                    (Ojs.call x1536 "push"
                                       [|(any_to_js x1537)|])
                              | None -> ());
                             x1536))|])
    let (every' :
      ('tags, 'T) this ->
        predicate:(value:'T -> index:float -> array:'T list -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x1554 : ('tags, 'T) this) ->
        fun
          ~predicate:(x1546 :
                       value:'T -> index:float -> array:'T list -> unknown)
          ->
          fun ?thisArg:(x1547 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x1557 = this_to_js Obj.magic Obj.magic x1554 in
                 Ojs.call (Ojs.get_prop_ascii x1557 "every") "apply"
                   [|x1557;((let x1548 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1548 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x1550 : Ojs.t) ->
                                          fun (x1551 : Ojs.t) ->
                                            fun (x1552 : Ojs.t) ->
                                              unknown_to_js
                                                (x1546
                                                   ~value:(Obj.magic x1550)
                                                   ~index:(Ojs.float_of_js
                                                             x1551)
                                                   ~array:(Ojs.list_of_js
                                                             Obj.magic x1552))))|]);
                             (match x1547 with
                              | Some x1549 ->
                                  ignore
                                    (Ojs.call x1548 "push"
                                       [|(any_to_js x1549)|])
                              | None -> ());
                             x1548))|])
    let (some :
      ('tags, 'T) this ->
        predicate:(value:'T -> index:float -> array:'T list -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x1566 : ('tags, 'T) this) ->
        fun
          ~predicate:(x1558 :
                       value:'T -> index:float -> array:'T list -> unknown)
          ->
          fun ?thisArg:(x1559 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x1569 = this_to_js Obj.magic Obj.magic x1566 in
                 Ojs.call (Ojs.get_prop_ascii x1569 "some") "apply"
                   [|x1569;((let x1560 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1560 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x1562 : Ojs.t) ->
                                          fun (x1563 : Ojs.t) ->
                                            fun (x1564 : Ojs.t) ->
                                              unknown_to_js
                                                (x1558
                                                   ~value:(Obj.magic x1562)
                                                   ~index:(Ojs.float_of_js
                                                             x1563)
                                                   ~array:(Ojs.list_of_js
                                                             Obj.magic x1564))))|]);
                             (match x1559 with
                              | Some x1561 ->
                                  ignore
                                    (Ojs.call x1560 "push"
                                       [|(any_to_js x1561)|])
                              | None -> ());
                             x1560))|])
    let (forEach :
      ('tags, 'T) this ->
        callbackfn:(value:'T -> index:float -> array:'T list -> unit) ->
          ?thisArg:any -> unit -> unit)
      =
      fun (x1578 : ('tags, 'T) this) ->
        fun
          ~callbackfn:(x1570 :
                        value:'T -> index:float -> array:'T list -> unit)
          ->
          fun ?thisArg:(x1571 : any option) ->
            fun () ->
              ignore
                (let x1581 = this_to_js Obj.magic Obj.magic x1578 in
                 Ojs.call (Ojs.get_prop_ascii x1581 "forEach") "apply"
                   [|x1581;((let x1572 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1572 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x1574 : Ojs.t) ->
                                          fun (x1575 : Ojs.t) ->
                                            fun (x1576 : Ojs.t) ->
                                              x1570 ~value:(Obj.magic x1574)
                                                ~index:(Ojs.float_of_js x1575)
                                                ~array:(Ojs.list_of_js
                                                          Obj.magic x1576)))|]);
                             (match x1571 with
                              | Some x1573 ->
                                  ignore
                                    (Ojs.call x1572 "push"
                                       [|(any_to_js x1573)|])
                              | None -> ());
                             x1572))|])
    let (map :
      ('tags, 'T) this ->
        callbackfn:(value:'T -> index:float -> array:'T list -> 'U) ->
          ?thisArg:any -> unit -> 'U list)
      =
      fun (x1590 : ('tags, 'T) this) ->
        fun
          ~callbackfn:(x1582 :
                        value:'T -> index:float -> array:'T list -> 'U)
          ->
          fun ?thisArg:(x1583 : any option) ->
            fun () ->
              Ojs.list_of_js Obj.magic
                (let x1593 = this_to_js Obj.magic Obj.magic x1590 in
                 Ojs.call (Ojs.get_prop_ascii x1593 "map") "apply"
                   [|x1593;((let x1584 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1584 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x1586 : Ojs.t) ->
                                          fun (x1587 : Ojs.t) ->
                                            fun (x1588 : Ojs.t) ->
                                              Obj.magic
                                                (x1582
                                                   ~value:(Obj.magic x1586)
                                                   ~index:(Ojs.float_of_js
                                                             x1587)
                                                   ~array:(Ojs.list_of_js
                                                             Obj.magic x1588))))|]);
                             (match x1583 with
                              | Some x1585 ->
                                  ignore
                                    (Ojs.call x1584 "push"
                                       [|(any_to_js x1585)|])
                              | None -> ());
                             x1584))|])
    let (filter :
      ('tags, 'T) this ->
        predicate:(value:'T -> index:float -> array:'T list -> bool) ->
          ?thisArg:any -> unit -> 'S list)
      =
      fun (x1603 : ('tags, 'T) this) ->
        fun
          ~predicate:(x1595 :
                       value:'T -> index:float -> array:'T list -> bool)
          ->
          fun ?thisArg:(x1596 : any option) ->
            fun () ->
              Ojs.list_of_js Obj.magic
                (let x1606 = this_to_js Obj.magic Obj.magic x1603 in
                 Ojs.call (Ojs.get_prop_ascii x1606 "filter") "apply"
                   [|x1606;((let x1597 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1597 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x1599 : Ojs.t) ->
                                          fun (x1600 : Ojs.t) ->
                                            fun (x1601 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x1595
                                                   ~value:(Obj.magic x1599)
                                                   ~index:(Ojs.float_of_js
                                                             x1600)
                                                   ~array:(Ojs.list_of_js
                                                             Obj.magic x1601))))|]);
                             (match x1596 with
                              | Some x1598 ->
                                  ignore
                                    (Ojs.call x1597 "push"
                                       [|(any_to_js x1598)|])
                              | None -> ());
                             x1597))|])
    let (filter' :
      ('tags, 'T) this ->
        predicate:(value:'T -> index:float -> array:'T list -> unknown) ->
          ?thisArg:any -> unit -> 'T list)
      =
      fun (x1616 : ('tags, 'T) this) ->
        fun
          ~predicate:(x1608 :
                       value:'T -> index:float -> array:'T list -> unknown)
          ->
          fun ?thisArg:(x1609 : any option) ->
            fun () ->
              Ojs.list_of_js Obj.magic
                (let x1619 = this_to_js Obj.magic Obj.magic x1616 in
                 Ojs.call (Ojs.get_prop_ascii x1619 "filter") "apply"
                   [|x1619;((let x1610 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1610 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x1612 : Ojs.t) ->
                                          fun (x1613 : Ojs.t) ->
                                            fun (x1614 : Ojs.t) ->
                                              unknown_to_js
                                                (x1608
                                                   ~value:(Obj.magic x1612)
                                                   ~index:(Ojs.float_of_js
                                                             x1613)
                                                   ~array:(Ojs.list_of_js
                                                             Obj.magic x1614))))|]);
                             (match x1609 with
                              | Some x1611 ->
                                  ignore
                                    (Ojs.call x1610 "push"
                                       [|(any_to_js x1611)|])
                              | None -> ());
                             x1610))|])
    let (reduce :
      ('tags, 'T) this ->
        callbackfn:(previousValue:'T ->
                      currentValue:'T ->
                        currentIndex:float -> array:'T list -> 'T)
          -> 'T)
      =
      fun (x1627 : ('tags, 'T) this) ->
        fun
          ~callbackfn:(x1621 :
                        previousValue:'T ->
                          currentValue:'T ->
                            currentIndex:float -> array:'T list -> 'T)
          ->
          Obj.magic
            (Ojs.call (this_to_js Obj.magic Obj.magic x1627) "reduce"
               [|(Ojs.fun_to_js 4
                    (fun (x1622 : Ojs.t) ->
                       fun (x1623 : Ojs.t) ->
                         fun (x1624 : Ojs.t) ->
                           fun (x1625 : Ojs.t) ->
                             Obj.magic
                               (x1621 ~previousValue:(Obj.magic x1622)
                                  ~currentValue:(Obj.magic x1623)
                                  ~currentIndex:(Ojs.float_of_js x1624)
                                  ~array:(Ojs.list_of_js Obj.magic x1625))))|])
    let (reduce' :
      ('tags, 'T) this ->
        callbackfn:(previousValue:'T ->
                      currentValue:'T ->
                        currentIndex:float -> array:'T list -> 'T)
          -> initialValue:'T -> 'T)
      =
      fun (x1637 : ('tags, 'T) this) ->
        fun
          ~callbackfn:(x1630 :
                        previousValue:'T ->
                          currentValue:'T ->
                            currentIndex:float -> array:'T list -> 'T)
          ->
          fun ~initialValue:(x1636 : 'T) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic Obj.magic x1637) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x1631 : Ojs.t) ->
                         fun (x1632 : Ojs.t) ->
                           fun (x1633 : Ojs.t) ->
                             fun (x1634 : Ojs.t) ->
                               Obj.magic
                                 (x1630 ~previousValue:(Obj.magic x1631)
                                    ~currentValue:(Obj.magic x1632)
                                    ~currentIndex:(Ojs.float_of_js x1633)
                                    ~array:(Ojs.list_of_js Obj.magic x1634))));(
                   Obj.magic x1636)|])
    let (reduce'' :
      ('tags, 'T) this ->
        callbackfn:(previousValue:'U ->
                      currentValue:'T ->
                        currentIndex:float -> array:'T list -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x1647 : ('tags, 'T) this) ->
        fun
          ~callbackfn:(x1640 :
                        previousValue:'U ->
                          currentValue:'T ->
                            currentIndex:float -> array:'T list -> 'U)
          ->
          fun ~initialValue:(x1646 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic Obj.magic x1647) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x1641 : Ojs.t) ->
                         fun (x1642 : Ojs.t) ->
                           fun (x1643 : Ojs.t) ->
                             fun (x1644 : Ojs.t) ->
                               Obj.magic
                                 (x1640 ~previousValue:(Obj.magic x1641)
                                    ~currentValue:(Obj.magic x1642)
                                    ~currentIndex:(Ojs.float_of_js x1643)
                                    ~array:(Ojs.list_of_js Obj.magic x1644))));(
                   Obj.magic x1646)|])
    let (reduceRight :
      ('tags, 'T) this ->
        callbackfn:(previousValue:'T ->
                      currentValue:'T ->
                        currentIndex:float -> array:'T list -> 'T)
          -> 'T)
      =
      fun (x1656 : ('tags, 'T) this) ->
        fun
          ~callbackfn:(x1650 :
                        previousValue:'T ->
                          currentValue:'T ->
                            currentIndex:float -> array:'T list -> 'T)
          ->
          Obj.magic
            (Ojs.call (this_to_js Obj.magic Obj.magic x1656) "reduceRight"
               [|(Ojs.fun_to_js 4
                    (fun (x1651 : Ojs.t) ->
                       fun (x1652 : Ojs.t) ->
                         fun (x1653 : Ojs.t) ->
                           fun (x1654 : Ojs.t) ->
                             Obj.magic
                               (x1650 ~previousValue:(Obj.magic x1651)
                                  ~currentValue:(Obj.magic x1652)
                                  ~currentIndex:(Ojs.float_of_js x1653)
                                  ~array:(Ojs.list_of_js Obj.magic x1654))))|])
    let (reduceRight' :
      ('tags, 'T) this ->
        callbackfn:(previousValue:'T ->
                      currentValue:'T ->
                        currentIndex:float -> array:'T list -> 'T)
          -> initialValue:'T -> 'T)
      =
      fun (x1666 : ('tags, 'T) this) ->
        fun
          ~callbackfn:(x1659 :
                        previousValue:'T ->
                          currentValue:'T ->
                            currentIndex:float -> array:'T list -> 'T)
          ->
          fun ~initialValue:(x1665 : 'T) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic Obj.magic x1666) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x1660 : Ojs.t) ->
                         fun (x1661 : Ojs.t) ->
                           fun (x1662 : Ojs.t) ->
                             fun (x1663 : Ojs.t) ->
                               Obj.magic
                                 (x1659 ~previousValue:(Obj.magic x1660)
                                    ~currentValue:(Obj.magic x1661)
                                    ~currentIndex:(Ojs.float_of_js x1662)
                                    ~array:(Ojs.list_of_js Obj.magic x1663))));(
                   Obj.magic x1665)|])
    let (reduceRight'' :
      ('tags, 'T) this ->
        callbackfn:(previousValue:'U ->
                      currentValue:'T ->
                        currentIndex:float -> array:'T list -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x1676 : ('tags, 'T) this) ->
        fun
          ~callbackfn:(x1669 :
                        previousValue:'U ->
                          currentValue:'T ->
                            currentIndex:float -> array:'T list -> 'U)
          ->
          fun ~initialValue:(x1675 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic Obj.magic x1676) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x1670 : Ojs.t) ->
                         fun (x1671 : Ojs.t) ->
                           fun (x1672 : Ojs.t) ->
                             fun (x1673 : Ojs.t) ->
                               Obj.magic
                                 (x1669 ~previousValue:(Obj.magic x1670)
                                    ~currentValue:(Obj.magic x1671)
                                    ~currentIndex:(Ojs.float_of_js x1672)
                                    ~array:(Ojs.list_of_js Obj.magic x1673))));(
                   Obj.magic x1675)|])
    let (get : ('tags, 'T) this -> float -> 'T) =
      fun (x1679 : ('tags, 'T) this) ->
        fun (x1682 : float) ->
          Obj.magic
            (Ojs.get_prop (this_to_js Obj.magic Obj.magic x1679)
               (Ojs.float_to_js x1682))
    let (set : ('tags, 'T) this -> float -> 'T -> unit) =
      fun (x1683 : ('tags, 'T) this) ->
        fun (x1686 : float) ->
          fun (x1687 : 'T) ->
            Ojs.set_prop (this_to_js Obj.magic Obj.magic x1683)
              (Ojs.float_to_js x1686) (Obj.magic x1687)
    let (from : [ `U1 of 'T Iterable.t  | `U2 of 'T ArrayLike.t ] -> 'T list)
      =
      fun (x1688 : [ `U1 of 'T Iterable.t  | `U2 of 'T ArrayLike.t ]) ->
        Ojs.list_of_js Obj.magic
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Array") "from"
             [|((match x1688 with
                 | `U1 x1689 -> Iterable.t_to_js Obj.magic x1689
                 | `U2 x1691 -> ArrayLike.t_to_js Obj.magic x1691))|])
    let (from' :
      iterable:[ `U1 of 'T Iterable.t  | `U2 of 'T ArrayLike.t ] ->
        mapfn:(v:'T -> k:float -> 'U) -> ?thisArg:any -> unit -> 'U list)
      =
      fun
        ~iterable:(x1694 : [ `U1 of 'T Iterable.t  | `U2 of 'T ArrayLike.t ])
        ->
        fun ~mapfn:(x1695 : v:'T -> k:float -> 'U) ->
          fun ?thisArg:(x1696 : any option) ->
            fun () ->
              Ojs.list_of_js Obj.magic
                (let x1705 = Ojs.get_prop_ascii Ojs.global "Array" in
                 Ojs.call (Ojs.get_prop_ascii x1705 "from") "apply"
                   [|x1705;((let x1697 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1697 "push"
                                  [|((match x1694 with
                                      | `U1 x1701 ->
                                          Iterable.t_to_js Obj.magic x1701
                                      | `U2 x1703 ->
                                          ArrayLike.t_to_js Obj.magic x1703))|]);
                             ignore
                               (Ojs.call x1697 "push"
                                  [|(Ojs.fun_to_js 2
                                       (fun (x1699 : Ojs.t) ->
                                          fun (x1700 : Ojs.t) ->
                                            Obj.magic
                                              (x1695 ~v:(Obj.magic x1699)
                                                 ~k:(Ojs.float_of_js x1700))))|]);
                             (match x1696 with
                              | Some x1698 ->
                                  ignore
                                    (Ojs.call x1697 "push"
                                       [|(any_to_js x1698)|])
                              | None -> ());
                             x1697))|])
    let (from'' : 'T ArrayLike.t -> 'T list) =
      fun (x1707 : 'T ArrayLike.t) ->
        Ojs.list_of_js Obj.magic
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Array") "from"
             [|(ArrayLike.t_to_js Obj.magic x1707)|])
    let (from''' :
      arrayLike:'T ArrayLike.t ->
        mapfn:(v:'T -> k:float -> 'U) -> ?thisArg:any -> unit -> 'U list)
      =
      fun ~arrayLike:(x1710 : 'T ArrayLike.t) ->
        fun ~mapfn:(x1711 : v:'T -> k:float -> 'U) ->
          fun ?thisArg:(x1712 : any option) ->
            fun () ->
              Ojs.list_of_js Obj.magic
                (let x1718 = Ojs.get_prop_ascii Ojs.global "Array" in
                 Ojs.call (Ojs.get_prop_ascii x1718 "from") "apply"
                   [|x1718;((let x1713 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1713 "push"
                                  [|(ArrayLike.t_to_js Obj.magic x1710)|]);
                             ignore
                               (Ojs.call x1713 "push"
                                  [|(Ojs.fun_to_js 2
                                       (fun (x1715 : Ojs.t) ->
                                          fun (x1716 : Ojs.t) ->
                                            Obj.magic
                                              (x1711 ~v:(Obj.magic x1715)
                                                 ~k:(Ojs.float_of_js x1716))))|]);
                             (match x1712 with
                              | Some x1714 ->
                                  ignore
                                    (Ojs.call x1713 "push"
                                       [|(any_to_js x1714)|])
                              | None -> ());
                             x1713))|])
    let (of_ : 'T list -> 'T list) =
      fun (x1720 : 'T list) ->
        Ojs.list_of_js Obj.magic
          (let x1723 = Ojs.get_prop_ascii Ojs.global "Array" in
           Ojs.call (Ojs.get_prop_ascii x1723 "of") "apply"
             [|x1723;((let x1721 =
                         Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                           [||] in
                       List.iter
                         (fun (x1722 : 'T) ->
                            ignore
                              (Ojs.call x1721 "push" [|(Obj.magic x1722)|]))
                         x1720;
                       x1721))|])
    let (create : ?arrayLength:float -> unit -> any list) =
      fun ?arrayLength:(x1725 : float option) ->
        fun () ->
          Ojs.list_of_js any_of_js
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "Array")
               (let x1726 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x1725 with
                 | Some x1727 ->
                     ignore
                       (Ojs.call x1726 "push" [|(Ojs.float_to_js x1727)|])
                 | None -> ());
                x1726))
    let (create' : float -> 'T list) =
      fun (x1729 : float) ->
        Ojs.list_of_js Obj.magic
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
             [|(Ojs.float_to_js x1729)|])
    let (create'' : 'T list -> 'T list) =
      fun (x1731 : 'T list) ->
        Ojs.list_of_js Obj.magic
          (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "Array")
             (let x1732 =
                Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
              List.iter
                (fun (x1733 : 'T) ->
                   ignore (Ojs.call x1732 "push" [|(Obj.magic x1733)|]))
                x1731;
              x1732))
    let (invoke : ?arrayLength:float -> unit -> any list) =
      fun ?arrayLength:(x1735 : float option) ->
        fun () ->
          Ojs.list_of_js any_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "Array") "apply"
               [|Ojs.null;((let x1736 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x1735 with
                             | Some x1737 ->
                                 ignore
                                   (Ojs.call x1736 "push"
                                      [|(Ojs.float_to_js x1737)|])
                             | None -> ());
                            x1736))|])
    let (invoke' : float -> 'T list) =
      fun (x1739 : float) ->
        Ojs.list_of_js Obj.magic
          (Ojs.apply (Ojs.get_prop_ascii Ojs.global "Array")
             [|(Ojs.float_to_js x1739)|])
    let (invoke'' : 'T list -> 'T list) =
      fun (x1741 : 'T list) ->
        Ojs.list_of_js Obj.magic
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Array") "apply"
             [|Ojs.null;((let x1742 =
                            Ojs.new_obj
                              (Ojs.get_prop_ascii Ojs.global "Array") 
                              [||] in
                          List.iter
                            (fun (x1743 : 'T) ->
                               ignore
                                 (Ojs.call x1742 "push" [|(Obj.magic x1743)|]))
                            x1741;
                          x1742))|])
    let (isArray : any -> bool) =
      fun (x1745 : any) ->
        Ojs.bool_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Array") "isArray"
             [|(any_to_js x1745)|])
    let (prototype : unit -> any list) =
      fun () ->
        Ojs.list_of_js any_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Array")
             "prototype")
    let cast_from = Obj.magic
    let (of_ml : 'T list -> 'T t) =
      fun (x1747 : 'T list) ->
        t_of_js Obj.magic (Ojs.list_to_js Obj.magic x1747)
    let (to_ml : 'T t -> 'T list) =
      fun (x1750 : 'T t) ->
        Ojs.list_of_js Obj.magic (t_to_js Obj.magic x1750)
  end
module RegExpIndicesArray =
  struct
    module AnonymousInterface25 =
      struct
        type t = Ojs.t
        let rec t_of_js : Ojs.t -> t = fun (x1754 : Ojs.t) -> x1754
        and t_to_js : t -> Ojs.t = fun (x1753 : Ojs.t) -> x1753
        let (get : t -> string -> (float * float)) =
          fun (x1755 : t) ->
            fun (x1756 : string) ->
              let x1757 =
                Ojs.get_prop (t_to_js x1755) (Ojs.string_to_js x1756) in
              ((Ojs.float_of_js (Ojs.array_get x1757 0)),
                (Ojs.float_of_js (Ojs.array_get x1757 1)))
        let (set : t -> string -> (float * float) -> unit) =
          fun (x1758 : t) ->
            fun (x1759 : string) ->
              fun (x1760 : (float * float)) ->
                Ojs.set_prop (t_to_js x1758) (Ojs.string_to_js x1759)
                  (let (x1761, x1762) = x1760 in
                   let x1763 = Ojs.array_make 2 in
                   Ojs.array_set x1763 0 (Ojs.float_to_js x1761);
                   Ojs.array_set x1763 1 (Ojs.float_to_js x1762);
                   x1763)
      end
    type t =
      [ `Array of (float * float)  | `Array of (float * float) 
      | `RegExpIndicesArray ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type tags =
      [ `Array of (float * float)  | `Array of (float * float) 
      | `RegExpIndicesArray ]
    type 'tags this = 'tags intf constraint 'tags = [> `RegExpIndicesArray ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x1766 : Ojs.t) -> intf_of_js __tags_of_js x1766
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x1764 : __tags intf) -> intf_to_js __tags_to_js x1764
    let (get_groups : 'tags this -> AnonymousInterface25.t option) =
      fun (x1768 : 'tags this) ->
        Ojs.option_of_js AnonymousInterface25.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x1768) "groups")
    let (set_groups : 'tags this -> AnonymousInterface25.t -> unit) =
      fun (x1771 : 'tags this) ->
        fun (x1772 : AnonymousInterface25.t) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x1771) "groups"
            (AnonymousInterface25.t_to_js x1772)
    let (create : ?groups:AnonymousInterface25.t -> unit -> t) =
      fun ?groups:(x1774 : AnonymousInterface25.t option) ->
        fun () ->
          let x1775 = Ojs.empty_obj () in
          (match x1774 with
           | Some x1776 ->
               Ojs.set_prop_ascii x1775 "groups"
                 (AnonymousInterface25.t_to_js x1776)
           | None -> ());
          t_of_js x1775
    let cast_from = Obj.magic
  end
module RegExpMatchArray =
  struct
    module AnonymousInterface24 =
      struct
        type t = Ojs.t
        let rec t_of_js : Ojs.t -> t = fun (x1778 : Ojs.t) -> x1778
        and t_to_js : t -> Ojs.t = fun (x1777 : Ojs.t) -> x1777
        let (get : t -> string -> string) =
          fun (x1779 : t) ->
            fun (x1780 : string) ->
              Ojs.string_of_js
                (Ojs.get_prop (t_to_js x1779) (Ojs.string_to_js x1780))
        let (set : t -> string -> string -> unit) =
          fun (x1781 : t) ->
            fun (x1782 : string) ->
              fun (x1783 : string) ->
                Ojs.set_prop (t_to_js x1781) (Ojs.string_to_js x1782)
                  (Ojs.string_to_js x1783)
      end
    type t =
      [ `Array of string  | `Array of string  | `RegExpMatchArray ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type tags = [ `Array of string  | `Array of string  | `RegExpMatchArray ]
    type 'tags this = 'tags intf constraint 'tags = [> `RegExpMatchArray ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x1786 : Ojs.t) -> intf_of_js __tags_of_js x1786
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x1784 : __tags intf) -> intf_to_js __tags_to_js x1784
    let (get_indices : 'tags this -> RegExpIndicesArray.t option) =
      fun (x1788 : 'tags this) ->
        Ojs.option_of_js RegExpIndicesArray.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x1788) "indices")
    let (set_indices : 'tags this -> RegExpIndicesArray.t -> unit) =
      fun (x1791 : 'tags this) ->
        fun (x1792 : RegExpIndicesArray.t) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x1791) "indices"
            (RegExpIndicesArray.t_to_js x1792)
    let (get_groups : 'tags this -> AnonymousInterface24.t option) =
      fun (x1794 : 'tags this) ->
        Ojs.option_of_js AnonymousInterface24.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x1794) "groups")
    let (set_groups : 'tags this -> AnonymousInterface24.t -> unit) =
      fun (x1797 : 'tags this) ->
        fun (x1798 : AnonymousInterface24.t) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x1797) "groups"
            (AnonymousInterface24.t_to_js x1798)
    let (get_index : 'tags this -> float option) =
      fun (x1800 : 'tags this) ->
        Ojs.option_of_js Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x1800) "index")
    let (set_index : 'tags this -> float -> unit) =
      fun (x1803 : 'tags this) ->
        fun (x1804 : float) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x1803) "index"
            (Ojs.float_to_js x1804)
    let (get_input : 'tags this -> string option) =
      fun (x1806 : 'tags this) ->
        Ojs.option_of_js Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x1806) "input")
    let (set_input : 'tags this -> string -> unit) =
      fun (x1809 : 'tags this) ->
        fun (x1810 : string) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x1809) "input"
            (Ojs.string_to_js x1810)
    let (get_0 : 'tags this -> string) =
      fun (x1812 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x1812) "0")
    let (set_0 : 'tags this -> string -> unit) =
      fun (x1814 : 'tags this) ->
        fun (x1815 : string) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x1814) "0"
            (Ojs.string_to_js x1815)
    let (create :
      ?indices:RegExpIndicesArray.t ->
        ?groups:AnonymousInterface24.t ->
          ?index:float -> ?input:string -> _0:string -> unit -> t)
      =
      fun ?indices:(x1817 : RegExpIndicesArray.t option) ->
        fun ?groups:(x1818 : AnonymousInterface24.t option) ->
          fun ?index:(x1819 : float option) ->
            fun ?input:(x1820 : string option) ->
              fun ~_0:(x1821 : string) ->
                fun () ->
                  let x1822 = Ojs.empty_obj () in
                  (match x1817 with
                   | Some x1826 ->
                       Ojs.set_prop_ascii x1822 "indices"
                         (RegExpIndicesArray.t_to_js x1826)
                   | None -> ());
                  (match x1818 with
                   | Some x1825 ->
                       Ojs.set_prop_ascii x1822 "groups"
                         (AnonymousInterface24.t_to_js x1825)
                   | None -> ());
                  (match x1819 with
                   | Some x1824 ->
                       Ojs.set_prop_ascii x1822 "index"
                         (Ojs.float_to_js x1824)
                   | None -> ());
                  (match x1820 with
                   | Some x1823 ->
                       Ojs.set_prop_ascii x1822 "input"
                         (Ojs.string_to_js x1823)
                   | None -> ());
                  Ojs.set_prop_ascii x1822 "0" (Ojs.string_to_js x1821);
                  t_of_js x1822
    let cast_from = Obj.magic
  end
module RegExpExecArray =
  struct
    module AnonymousInterface24 =
      struct
        type t = Ojs.t
        let rec t_of_js : Ojs.t -> t = fun (x1828 : Ojs.t) -> x1828
        and t_to_js : t -> Ojs.t = fun (x1827 : Ojs.t) -> x1827
        let (get : t -> string -> string) =
          fun (x1829 : t) ->
            fun (x1830 : string) ->
              Ojs.string_of_js
                (Ojs.get_prop (t_to_js x1829) (Ojs.string_to_js x1830))
        let (set : t -> string -> string -> unit) =
          fun (x1831 : t) ->
            fun (x1832 : string) ->
              fun (x1833 : string) ->
                Ojs.set_prop (t_to_js x1831) (Ojs.string_to_js x1832)
                  (Ojs.string_to_js x1833)
      end
    type t =
      [ `Array of string  | `Array of string  | `RegExpExecArray ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type tags = [ `Array of string  | `Array of string  | `RegExpExecArray ]
    type 'tags this = 'tags intf constraint 'tags = [> `RegExpExecArray ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x1836 : Ojs.t) -> intf_of_js __tags_of_js x1836
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x1834 : __tags intf) -> intf_to_js __tags_to_js x1834
    let (get_indices : 'tags this -> RegExpIndicesArray.t option) =
      fun (x1838 : 'tags this) ->
        Ojs.option_of_js RegExpIndicesArray.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x1838) "indices")
    let (set_indices : 'tags this -> RegExpIndicesArray.t -> unit) =
      fun (x1841 : 'tags this) ->
        fun (x1842 : RegExpIndicesArray.t) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x1841) "indices"
            (RegExpIndicesArray.t_to_js x1842)
    let (get_groups : 'tags this -> AnonymousInterface24.t option) =
      fun (x1844 : 'tags this) ->
        Ojs.option_of_js AnonymousInterface24.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x1844) "groups")
    let (set_groups : 'tags this -> AnonymousInterface24.t -> unit) =
      fun (x1847 : 'tags this) ->
        fun (x1848 : AnonymousInterface24.t) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x1847) "groups"
            (AnonymousInterface24.t_to_js x1848)
    let (get_index : 'tags this -> float) =
      fun (x1850 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x1850) "index")
    let (set_index : 'tags this -> float -> unit) =
      fun (x1852 : 'tags this) ->
        fun (x1853 : float) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x1852) "index"
            (Ojs.float_to_js x1853)
    let (get_input : 'tags this -> string) =
      fun (x1855 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x1855) "input")
    let (set_input : 'tags this -> string -> unit) =
      fun (x1857 : 'tags this) ->
        fun (x1858 : string) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x1857) "input"
            (Ojs.string_to_js x1858)
    let (get_0 : 'tags this -> string) =
      fun (x1860 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x1860) "0")
    let (set_0 : 'tags this -> string -> unit) =
      fun (x1862 : 'tags this) ->
        fun (x1863 : string) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x1862) "0"
            (Ojs.string_to_js x1863)
    let (create :
      ?indices:RegExpIndicesArray.t ->
        ?groups:AnonymousInterface24.t ->
          index:float -> input:string -> _0:string -> unit -> t)
      =
      fun ?indices:(x1865 : RegExpIndicesArray.t option) ->
        fun ?groups:(x1866 : AnonymousInterface24.t option) ->
          fun ~index:(x1867 : float) ->
            fun ~input:(x1868 : string) ->
              fun ~_0:(x1869 : string) ->
                fun () ->
                  let x1870 = Ojs.empty_obj () in
                  (match x1865 with
                   | Some x1872 ->
                       Ojs.set_prop_ascii x1870 "indices"
                         (RegExpIndicesArray.t_to_js x1872)
                   | None -> ());
                  (match x1866 with
                   | Some x1871 ->
                       Ojs.set_prop_ascii x1870 "groups"
                         (AnonymousInterface24.t_to_js x1871)
                   | None -> ());
                  Ojs.set_prop_ascii x1870 "index" (Ojs.float_to_js x1867);
                  Ojs.set_prop_ascii x1870 "input" (Ojs.string_to_js x1868);
                  Ojs.set_prop_ascii x1870 "0" (Ojs.string_to_js x1869);
                  t_of_js x1870
    let cast_from = Obj.magic
  end
module RegExp =
  struct
    type t = [ `RegExp ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type tags = [ `RegExp ]
    type 'tags this = 'tags intf constraint 'tags = [> `RegExp ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x1875 : Ojs.t) -> intf_of_js __tags_of_js x1875
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x1873 : __tags intf) -> intf_to_js __tags_to_js x1873
    let (get_hasIndices : 'tags this -> bool) =
      fun (x1877 : 'tags this) ->
        Ojs.bool_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x1877) "hasIndices")
    let (get_dotAll : 'tags this -> bool) =
      fun (x1879 : 'tags this) ->
        Ojs.bool_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x1879) "dotAll")
    let (get_flags : 'tags this -> string) =
      fun (x1881 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x1881) "flags")
    let (get_sticky : 'tags this -> bool) =
      fun (x1883 : 'tags this) ->
        Ojs.bool_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x1883) "sticky")
    let (get_unicode : 'tags this -> bool) =
      fun (x1885 : 'tags this) ->
        Ojs.bool_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x1885) "unicode")
    let (exec : 'tags this -> string:string -> RegExpExecArray.t option) =
      fun (x1888 : 'tags this) ->
        fun ~string:(x1887 : string) ->
          Ojs.option_of_js RegExpExecArray.t_of_js
            (Ojs.call (this_to_js Obj.magic x1888) "exec"
               [|(Ojs.string_to_js x1887)|])
    let (test : 'tags this -> string:string -> bool) =
      fun (x1892 : 'tags this) ->
        fun ~string:(x1891 : string) ->
          Ojs.bool_of_js
            (Ojs.call (this_to_js Obj.magic x1892) "test"
               [|(Ojs.string_to_js x1891)|])
    let (get_source : 'tags this -> string) =
      fun (x1894 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x1894) "source")
    let (get_global : 'tags this -> bool) =
      fun (x1896 : 'tags this) ->
        Ojs.bool_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x1896) "global")
    let (get_ignoreCase : 'tags this -> bool) =
      fun (x1898 : 'tags this) ->
        Ojs.bool_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x1898) "ignoreCase")
    let (get_multiline : 'tags this -> bool) =
      fun (x1900 : 'tags this) ->
        Ojs.bool_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x1900) "multiline")
    let (get_lastIndex : 'tags this -> float) =
      fun (x1902 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x1902) "lastIndex")
    let (set_lastIndex : 'tags this -> float -> unit) =
      fun (x1904 : 'tags this) ->
        fun (x1905 : float) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x1904) "lastIndex"
            (Ojs.float_to_js x1905)
    let (compile :
      'tags this -> pattern:string -> ?flags:string -> unit -> 'tags this) =
      fun (x1911 : 'tags this) ->
        fun ~pattern:(x1907 : string) ->
          fun ?flags:(x1908 : string option) ->
            fun () ->
              this_of_js Obj.magic
                (let x1913 = this_to_js Obj.magic x1911 in
                 Ojs.call (Ojs.get_prop_ascii x1913 "compile") "apply"
                   [|x1913;((let x1909 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1909 "push"
                                  [|(Ojs.string_to_js x1907)|]);
                             (match x1908 with
                              | Some x1910 ->
                                  ignore
                                    (Ojs.call x1909 "push"
                                       [|(Ojs.string_to_js x1910)|])
                              | None -> ());
                             x1909))|])
    let (create :
      pattern:[ `U1 of t  | `U2 of string ] -> ?flags:string -> unit -> t) =
      fun ~pattern:(x1915 : [ `U1 of t  | `U2 of string ]) ->
        fun ?flags:(x1916 : string option) ->
          fun () ->
            t_of_js
              (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "RegExp")
                 (let x1917 =
                    Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                  ignore
                    (Ojs.call x1917 "push"
                       [|((match x1915 with
                           | `U1 x1919 -> t_to_js x1919
                           | `U2 x1920 -> Ojs.string_to_js x1920))|]);
                  (match x1916 with
                   | Some x1918 ->
                       ignore
                         (Ojs.call x1917 "push" [|(Ojs.string_to_js x1918)|])
                   | None -> ());
                  x1917))
    let (invoke :
      pattern:[ `U1 of t  | `U2 of string ] -> ?flags:string -> unit -> t) =
      fun ~pattern:(x1921 : [ `U1 of t  | `U2 of string ]) ->
        fun ?flags:(x1922 : string option) ->
          fun () ->
            t_of_js
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "RegExp") "apply"
                 [|Ojs.null;((let x1923 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x1923 "push"
                                   [|((match x1921 with
                                       | `U1 x1925 -> t_to_js x1925
                                       | `U2 x1926 -> Ojs.string_to_js x1926))|]);
                              (match x1922 with
                               | Some x1924 ->
                                   ignore
                                     (Ojs.call x1923 "push"
                                        [|(Ojs.string_to_js x1924)|])
                               | None -> ());
                              x1923))|])
    let (create' : [ `U1 of t  | `U2 of string ] -> t) =
      fun (x1927 : [ `U1 of t  | `U2 of string ]) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "RegExp")
             [|((match x1927 with
                 | `U1 x1928 -> t_to_js x1928
                 | `U2 x1929 -> Ojs.string_to_js x1929))|])
    let (create'' : pattern:string -> ?flags:string -> unit -> t) =
      fun ~pattern:(x1930 : string) ->
        fun ?flags:(x1931 : string option) ->
          fun () ->
            t_of_js
              (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "RegExp")
                 (let x1932 =
                    Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                  ignore (Ojs.call x1932 "push" [|(Ojs.string_to_js x1930)|]);
                  (match x1931 with
                   | Some x1933 ->
                       ignore
                         (Ojs.call x1932 "push" [|(Ojs.string_to_js x1933)|])
                   | None -> ());
                  x1932))
    let (invoke' : [ `U1 of t  | `U2 of string ] -> t) =
      fun (x1934 : [ `U1 of t  | `U2 of string ]) ->
        t_of_js
          (Ojs.apply (Ojs.get_prop_ascii Ojs.global "RegExp")
             [|((match x1934 with
                 | `U1 x1935 -> t_to_js x1935
                 | `U2 x1936 -> Ojs.string_to_js x1936))|])
    let (invoke'' : pattern:string -> ?flags:string -> unit -> t) =
      fun ~pattern:(x1937 : string) ->
        fun ?flags:(x1938 : string option) ->
          fun () ->
            t_of_js
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "RegExp") "apply"
                 [|Ojs.null;((let x1939 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x1939 "push"
                                   [|(Ojs.string_to_js x1937)|]);
                              (match x1938 with
                               | Some x1940 ->
                                   ignore
                                     (Ojs.call x1939 "push"
                                        [|(Ojs.string_to_js x1940)|])
                               | None -> ());
                              x1939))|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "RegExp")
             "prototype")
    let (_1 : unit -> string) =
      fun () ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "RegExp") "$1")
    let (_2 : unit -> string) =
      fun () ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "RegExp") "$2")
    let (_3 : unit -> string) =
      fun () ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "RegExp") "$3")
    let (_4 : unit -> string) =
      fun () ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "RegExp") "$4")
    let (_5 : unit -> string) =
      fun () ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "RegExp") "$5")
    let (_6 : unit -> string) =
      fun () ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "RegExp") "$6")
    let (_7 : unit -> string) =
      fun () ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "RegExp") "$7")
    let (_8 : unit -> string) =
      fun () ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "RegExp") "$8")
    let (_9 : unit -> string) =
      fun () ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "RegExp") "$9")
    let (input : unit -> string) =
      fun () ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "RegExp")
             "input")
    let (__ : unit -> string) =
      fun () ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "RegExp") "$_")
    let (lastMatch : unit -> string) =
      fun () ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "RegExp")
             "lastMatch")
    let (__' : unit -> string) =
      fun () ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "RegExp") "$&")
    let (lastParen : unit -> string) =
      fun () ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "RegExp")
             "lastParen")
    let (__'' : unit -> string) =
      fun () ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "RegExp") "$+")
    let (leftContext : unit -> string) =
      fun () ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "RegExp")
             "leftContext")
    let (__''' : unit -> string) =
      fun () ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "RegExp") "$`")
    let (rightContext : unit -> string) =
      fun () ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "RegExp")
             "rightContext")
    let (__'''' : unit -> string) =
      fun () ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "RegExp") "$'")
    let cast_from = Obj.magic
  end
module Pick =
  struct
    type ('T, 'K) t = any
    let rec t_of_js :
      'T 'K . (Ojs.t -> 'T) -> (Ojs.t -> 'K) -> Ojs.t -> ('T, 'K) t =
      fun (type __T) ->
        fun (type __K) ->
          fun (__T_of_js : Ojs.t -> __T) ->
            fun (__K_of_js : Ojs.t -> __K) ->
              fun (x1942 : Ojs.t) -> any_of_js x1942
    and t_to_js :
      'T 'K . ('T -> Ojs.t) -> ('K -> Ojs.t) -> ('T, 'K) t -> Ojs.t =
      fun (type __T) ->
        fun (type __K) ->
          fun (__T_to_js : __T -> Ojs.t) ->
            fun (__K_to_js : __K -> Ojs.t) ->
              fun (x1941 : any) -> any_to_js x1941
  end
module Exclude =
  struct
    type ('T, 'U) t = any
    let rec t_of_js :
      'T 'U . (Ojs.t -> 'T) -> (Ojs.t -> 'U) -> Ojs.t -> ('T, 'U) t =
      fun (type __T) ->
        fun (type __U) ->
          fun (__T_of_js : Ojs.t -> __T) ->
            fun (__U_of_js : Ojs.t -> __U) ->
              fun (x1944 : Ojs.t) -> any_of_js x1944
    and t_to_js :
      'T 'U . ('T -> Ojs.t) -> ('U -> Ojs.t) -> ('T, 'U) t -> Ojs.t =
      fun (type __T) ->
        fun (type __U) ->
          fun (__T_to_js : __T -> Ojs.t) ->
            fun (__U_to_js : __U -> Ojs.t) ->
              fun (x1943 : any) -> any_to_js x1943
  end
module rec
  Date:sig
         type t = [ `Date ] intf
         [@@@js.stop ]
         type tags = [ `Date ]
         [@@@js.start ]
         [@@@js.implem type tags = [ `Date ]]
         type 'tags this = 'tags intf constraint 'tags = [> `Date ]
         val t_to_js : t -> Ojs.t
         val t_of_js : Ojs.t -> t
         val toLocaleString :
           'tags this ->
             ?locales:Intl.LocalesArgument.t ->
               ?options:Intl.DateTimeFormatOptions.t -> unit -> string
         val toLocaleDateString :
           'tags this ->
             ?locales:Intl.LocalesArgument.t ->
               ?options:Intl.DateTimeFormatOptions.t -> unit -> string
         val toLocaleTimeString :
           'tags this ->
             ?locales:Intl.LocalesArgument.t ->
               ?options:Intl.DateTimeFormatOptions.t -> unit -> string
         val toLocaleString' :
           'tags this ->
             ?locales:[ `U1 of string  | `U2 of string list ] ->
               ?options:Intl.DateTimeFormatOptions.t -> unit -> string
         val toLocaleDateString' :
           'tags this ->
             ?locales:[ `U1 of string  | `U2 of string list ] ->
               ?options:Intl.DateTimeFormatOptions.t -> unit -> string
         val toLocaleTimeString' :
           'tags this ->
             ?locales:[ `U1 of string  | `U2 of string list ] ->
               ?options:Intl.DateTimeFormatOptions.t -> unit -> string
         val toString : 'tags this -> string
         val toDateString : 'tags this -> string
         val toTimeString : 'tags this -> string
         val toLocaleString'' : 'tags this -> string
         val toLocaleDateString'' : 'tags this -> string
         val toLocaleTimeString'' : 'tags this -> string
         val valueOf : 'tags this -> float
         val getTime : 'tags this -> float
         val getFullYear : 'tags this -> float
         val getUTCFullYear : 'tags this -> float
         val getMonth : 'tags this -> float
         val getUTCMonth : 'tags this -> float
         val getDate : 'tags this -> float
         val getUTCDate : 'tags this -> float
         val getDay : 'tags this -> float
         val getUTCDay : 'tags this -> float
         val getHours : 'tags this -> float
         val getUTCHours : 'tags this -> float
         val getMinutes : 'tags this -> float
         val getUTCMinutes : 'tags this -> float
         val getSeconds : 'tags this -> float
         val getUTCSeconds : 'tags this -> float
         val getMilliseconds : 'tags this -> float
         val getUTCMilliseconds : 'tags this -> float
         val getTimezoneOffset : 'tags this -> float
         val setTime : 'tags this -> time:float -> float
         val setMilliseconds : 'tags this -> ms:float -> float
         val setUTCMilliseconds : 'tags this -> ms:float -> float
         val setSeconds :
           'tags this -> sec:float -> ?ms:float -> unit -> float
         val setUTCSeconds :
           'tags this -> sec:float -> ?ms:float -> unit -> float
         val setMinutes :
           'tags this ->
             min:float -> ?sec:float -> ?ms:float -> unit -> float
         val setUTCMinutes :
           'tags this ->
             min:float -> ?sec:float -> ?ms:float -> unit -> float
         val setHours :
           'tags this ->
             hours:float ->
               ?min:float -> ?sec:float -> ?ms:float -> unit -> float
         val setUTCHours :
           'tags this ->
             hours:float ->
               ?min:float -> ?sec:float -> ?ms:float -> unit -> float
         val setDate : 'tags this -> date:float -> float
         val setUTCDate : 'tags this -> date:float -> float
         val setMonth :
           'tags this -> month:float -> ?date:float -> unit -> float
         val setUTCMonth :
           'tags this -> month:float -> ?date:float -> unit -> float
         val setFullYear :
           'tags this ->
             year:float -> ?month:float -> ?date:float -> unit -> float
         val setUTCFullYear :
           'tags this ->
             year:float -> ?month:float -> ?date:float -> unit -> float
         val toUTCString : 'tags this -> string
         val toISOString : 'tags this -> string
         val toJSON : 'tags this -> ?key:any -> unit -> string
         val utc :
           year:float ->
             ?monthIndex:float ->
               ?date:float ->
                 ?hours:float ->
                   ?minutes:float ->
                     ?seconds:float -> ?ms:float -> unit -> float
         val create : [ `U1 of float  | `U2 of string  | `U3 of t ] -> t
         val create' : unit -> t
         val create'' : [ `U1 of float  | `U2 of string ] -> t
         val create''' :
           year:float ->
             monthIndex:float ->
               ?date:float ->
                 ?hours:float ->
                   ?minutes:float -> ?seconds:float -> ?ms:float -> unit -> t
         val invoke : unit -> string
         val prototype : unit -> t
         val parse : string -> float
         val utc' :
           year:float ->
             monthIndex:float ->
               ?date:float ->
                 ?hours:float ->
                   ?minutes:float ->
                     ?seconds:float -> ?ms:float -> unit -> float
         val now : unit -> float
         val cast_from : 'tags this -> t
       end =
  struct
    type t = [ `Date ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type tags = [ `Date ]
    type 'tags this = 'tags intf constraint 'tags = [> `Date ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x1947 : Ojs.t) -> intf_of_js __tags_of_js x1947
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x1945 : __tags intf) -> intf_to_js __tags_to_js x1945
    let (toLocaleString :
      'tags this ->
        ?locales:Intl.LocalesArgument.t ->
          ?options:Intl.DateTimeFormatOptions.t -> unit -> string)
      =
      fun (x1954 : 'tags this) ->
        fun ?locales:(x1949 : Intl.LocalesArgument.t option) ->
          fun ?options:(x1950 : Intl.DateTimeFormatOptions.t option) ->
            fun () ->
              Ojs.string_of_js
                (let x1956 = this_to_js Obj.magic x1954 in
                 Ojs.call (Ojs.get_prop_ascii x1956 "toLocaleString") "apply"
                   [|x1956;((let x1951 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x1949 with
                              | Some x1953 ->
                                  ignore
                                    (Ojs.call x1951 "push"
                                       [|(Intl.LocalesArgument.t_to_js x1953)|])
                              | None -> ());
                             (match x1950 with
                              | Some x1952 ->
                                  ignore
                                    (Ojs.call x1951 "push"
                                       [|(Intl.DateTimeFormatOptions.t_to_js
                                            x1952)|])
                              | None -> ());
                             x1951))|])
    let (toLocaleDateString :
      'tags this ->
        ?locales:Intl.LocalesArgument.t ->
          ?options:Intl.DateTimeFormatOptions.t -> unit -> string)
      =
      fun (x1962 : 'tags this) ->
        fun ?locales:(x1957 : Intl.LocalesArgument.t option) ->
          fun ?options:(x1958 : Intl.DateTimeFormatOptions.t option) ->
            fun () ->
              Ojs.string_of_js
                (let x1964 = this_to_js Obj.magic x1962 in
                 Ojs.call (Ojs.get_prop_ascii x1964 "toLocaleDateString")
                   "apply"
                   [|x1964;((let x1959 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x1957 with
                              | Some x1961 ->
                                  ignore
                                    (Ojs.call x1959 "push"
                                       [|(Intl.LocalesArgument.t_to_js x1961)|])
                              | None -> ());
                             (match x1958 with
                              | Some x1960 ->
                                  ignore
                                    (Ojs.call x1959 "push"
                                       [|(Intl.DateTimeFormatOptions.t_to_js
                                            x1960)|])
                              | None -> ());
                             x1959))|])
    let (toLocaleTimeString :
      'tags this ->
        ?locales:Intl.LocalesArgument.t ->
          ?options:Intl.DateTimeFormatOptions.t -> unit -> string)
      =
      fun (x1970 : 'tags this) ->
        fun ?locales:(x1965 : Intl.LocalesArgument.t option) ->
          fun ?options:(x1966 : Intl.DateTimeFormatOptions.t option) ->
            fun () ->
              Ojs.string_of_js
                (let x1972 = this_to_js Obj.magic x1970 in
                 Ojs.call (Ojs.get_prop_ascii x1972 "toLocaleTimeString")
                   "apply"
                   [|x1972;((let x1967 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x1965 with
                              | Some x1969 ->
                                  ignore
                                    (Ojs.call x1967 "push"
                                       [|(Intl.LocalesArgument.t_to_js x1969)|])
                              | None -> ());
                             (match x1966 with
                              | Some x1968 ->
                                  ignore
                                    (Ojs.call x1967 "push"
                                       [|(Intl.DateTimeFormatOptions.t_to_js
                                            x1968)|])
                              | None -> ());
                             x1967))|])
    let (toLocaleString' :
      'tags this ->
        ?locales:[ `U1 of string  | `U2 of string list ] ->
          ?options:Intl.DateTimeFormatOptions.t -> unit -> string)
      =
      fun (x1981 : 'tags this) ->
        fun ?locales:(x1973 : [ `U1 of string  | `U2 of string list ] option)
          ->
          fun ?options:(x1974 : Intl.DateTimeFormatOptions.t option) ->
            fun () ->
              Ojs.string_of_js
                (let x1983 = this_to_js Obj.magic x1981 in
                 Ojs.call (Ojs.get_prop_ascii x1983 "toLocaleString") "apply"
                   [|x1983;((let x1975 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x1973 with
                              | Some x1977 ->
                                  ignore
                                    (Ojs.call x1975 "push"
                                       [|((match x1977 with
                                           | `U1 x1978 ->
                                               Ojs.string_to_js x1978
                                           | `U2 x1979 ->
                                               Ojs.list_to_js
                                                 Ojs.string_to_js x1979))|])
                              | None -> ());
                             (match x1974 with
                              | Some x1976 ->
                                  ignore
                                    (Ojs.call x1975 "push"
                                       [|(Intl.DateTimeFormatOptions.t_to_js
                                            x1976)|])
                              | None -> ());
                             x1975))|])
    let (toLocaleDateString' :
      'tags this ->
        ?locales:[ `U1 of string  | `U2 of string list ] ->
          ?options:Intl.DateTimeFormatOptions.t -> unit -> string)
      =
      fun (x1992 : 'tags this) ->
        fun ?locales:(x1984 : [ `U1 of string  | `U2 of string list ] option)
          ->
          fun ?options:(x1985 : Intl.DateTimeFormatOptions.t option) ->
            fun () ->
              Ojs.string_of_js
                (let x1994 = this_to_js Obj.magic x1992 in
                 Ojs.call (Ojs.get_prop_ascii x1994 "toLocaleDateString")
                   "apply"
                   [|x1994;((let x1986 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x1984 with
                              | Some x1988 ->
                                  ignore
                                    (Ojs.call x1986 "push"
                                       [|((match x1988 with
                                           | `U1 x1989 ->
                                               Ojs.string_to_js x1989
                                           | `U2 x1990 ->
                                               Ojs.list_to_js
                                                 Ojs.string_to_js x1990))|])
                              | None -> ());
                             (match x1985 with
                              | Some x1987 ->
                                  ignore
                                    (Ojs.call x1986 "push"
                                       [|(Intl.DateTimeFormatOptions.t_to_js
                                            x1987)|])
                              | None -> ());
                             x1986))|])
    let (toLocaleTimeString' :
      'tags this ->
        ?locales:[ `U1 of string  | `U2 of string list ] ->
          ?options:Intl.DateTimeFormatOptions.t -> unit -> string)
      =
      fun (x2003 : 'tags this) ->
        fun ?locales:(x1995 : [ `U1 of string  | `U2 of string list ] option)
          ->
          fun ?options:(x1996 : Intl.DateTimeFormatOptions.t option) ->
            fun () ->
              Ojs.string_of_js
                (let x2005 = this_to_js Obj.magic x2003 in
                 Ojs.call (Ojs.get_prop_ascii x2005 "toLocaleTimeString")
                   "apply"
                   [|x2005;((let x1997 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x1995 with
                              | Some x1999 ->
                                  ignore
                                    (Ojs.call x1997 "push"
                                       [|((match x1999 with
                                           | `U1 x2000 ->
                                               Ojs.string_to_js x2000
                                           | `U2 x2001 ->
                                               Ojs.list_to_js
                                                 Ojs.string_to_js x2001))|])
                              | None -> ());
                             (match x1996 with
                              | Some x1998 ->
                                  ignore
                                    (Ojs.call x1997 "push"
                                       [|(Intl.DateTimeFormatOptions.t_to_js
                                            x1998)|])
                              | None -> ());
                             x1997))|])
    let (toString : 'tags this -> string) =
      fun (x2006 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x2006) "toString" [||])
    let (toDateString : 'tags this -> string) =
      fun (x2008 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x2008) "toDateString" [||])
    let (toTimeString : 'tags this -> string) =
      fun (x2010 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x2010) "toTimeString" [||])
    let (toLocaleString'' : 'tags this -> string) =
      fun (x2012 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x2012) "toLocaleString" [||])
    let (toLocaleDateString'' : 'tags this -> string) =
      fun (x2014 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x2014) "toLocaleDateString" [||])
    let (toLocaleTimeString'' : 'tags this -> string) =
      fun (x2016 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x2016) "toLocaleTimeString" [||])
    let (valueOf : 'tags this -> float) =
      fun (x2018 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x2018) "valueOf" [||])
    let (getTime : 'tags this -> float) =
      fun (x2020 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x2020) "getTime" [||])
    let (getFullYear : 'tags this -> float) =
      fun (x2022 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x2022) "getFullYear" [||])
    let (getUTCFullYear : 'tags this -> float) =
      fun (x2024 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x2024) "getUTCFullYear" [||])
    let (getMonth : 'tags this -> float) =
      fun (x2026 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x2026) "getMonth" [||])
    let (getUTCMonth : 'tags this -> float) =
      fun (x2028 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x2028) "getUTCMonth" [||])
    let (getDate : 'tags this -> float) =
      fun (x2030 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x2030) "getDate" [||])
    let (getUTCDate : 'tags this -> float) =
      fun (x2032 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x2032) "getUTCDate" [||])
    let (getDay : 'tags this -> float) =
      fun (x2034 : 'tags this) ->
        Ojs.float_of_js (Ojs.call (this_to_js Obj.magic x2034) "getDay" [||])
    let (getUTCDay : 'tags this -> float) =
      fun (x2036 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x2036) "getUTCDay" [||])
    let (getHours : 'tags this -> float) =
      fun (x2038 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x2038) "getHours" [||])
    let (getUTCHours : 'tags this -> float) =
      fun (x2040 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x2040) "getUTCHours" [||])
    let (getMinutes : 'tags this -> float) =
      fun (x2042 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x2042) "getMinutes" [||])
    let (getUTCMinutes : 'tags this -> float) =
      fun (x2044 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x2044) "getUTCMinutes" [||])
    let (getSeconds : 'tags this -> float) =
      fun (x2046 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x2046) "getSeconds" [||])
    let (getUTCSeconds : 'tags this -> float) =
      fun (x2048 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x2048) "getUTCSeconds" [||])
    let (getMilliseconds : 'tags this -> float) =
      fun (x2050 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x2050) "getMilliseconds" [||])
    let (getUTCMilliseconds : 'tags this -> float) =
      fun (x2052 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x2052) "getUTCMilliseconds" [||])
    let (getTimezoneOffset : 'tags this -> float) =
      fun (x2054 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x2054) "getTimezoneOffset" [||])
    let (setTime : 'tags this -> time:float -> float) =
      fun (x2057 : 'tags this) ->
        fun ~time:(x2056 : float) ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x2057) "setTime"
               [|(Ojs.float_to_js x2056)|])
    let (setMilliseconds : 'tags this -> ms:float -> float) =
      fun (x2060 : 'tags this) ->
        fun ~ms:(x2059 : float) ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x2060) "setMilliseconds"
               [|(Ojs.float_to_js x2059)|])
    let (setUTCMilliseconds : 'tags this -> ms:float -> float) =
      fun (x2063 : 'tags this) ->
        fun ~ms:(x2062 : float) ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x2063) "setUTCMilliseconds"
               [|(Ojs.float_to_js x2062)|])
    let (setSeconds : 'tags this -> sec:float -> ?ms:float -> unit -> float)
      =
      fun (x2069 : 'tags this) ->
        fun ~sec:(x2065 : float) ->
          fun ?ms:(x2066 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x2071 = this_to_js Obj.magic x2069 in
                 Ojs.call (Ojs.get_prop_ascii x2071 "setSeconds") "apply"
                   [|x2071;((let x2067 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x2067 "push"
                                  [|(Ojs.float_to_js x2065)|]);
                             (match x2066 with
                              | Some x2068 ->
                                  ignore
                                    (Ojs.call x2067 "push"
                                       [|(Ojs.float_to_js x2068)|])
                              | None -> ());
                             x2067))|])
    let (setUTCSeconds :
      'tags this -> sec:float -> ?ms:float -> unit -> float) =
      fun (x2076 : 'tags this) ->
        fun ~sec:(x2072 : float) ->
          fun ?ms:(x2073 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x2078 = this_to_js Obj.magic x2076 in
                 Ojs.call (Ojs.get_prop_ascii x2078 "setUTCSeconds") "apply"
                   [|x2078;((let x2074 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x2074 "push"
                                  [|(Ojs.float_to_js x2072)|]);
                             (match x2073 with
                              | Some x2075 ->
                                  ignore
                                    (Ojs.call x2074 "push"
                                       [|(Ojs.float_to_js x2075)|])
                              | None -> ());
                             x2074))|])
    let (setMinutes :
      'tags this -> min:float -> ?sec:float -> ?ms:float -> unit -> float) =
      fun (x2085 : 'tags this) ->
        fun ~min:(x2079 : float) ->
          fun ?sec:(x2080 : float option) ->
            fun ?ms:(x2081 : float option) ->
              fun () ->
                Ojs.float_of_js
                  (let x2087 = this_to_js Obj.magic x2085 in
                   Ojs.call (Ojs.get_prop_ascii x2087 "setMinutes") "apply"
                     [|x2087;((let x2082 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x2082 "push"
                                    [|(Ojs.float_to_js x2079)|]);
                               (match x2080 with
                                | Some x2084 ->
                                    ignore
                                      (Ojs.call x2082 "push"
                                         [|(Ojs.float_to_js x2084)|])
                                | None -> ());
                               (match x2081 with
                                | Some x2083 ->
                                    ignore
                                      (Ojs.call x2082 "push"
                                         [|(Ojs.float_to_js x2083)|])
                                | None -> ());
                               x2082))|])
    let (setUTCMinutes :
      'tags this -> min:float -> ?sec:float -> ?ms:float -> unit -> float) =
      fun (x2094 : 'tags this) ->
        fun ~min:(x2088 : float) ->
          fun ?sec:(x2089 : float option) ->
            fun ?ms:(x2090 : float option) ->
              fun () ->
                Ojs.float_of_js
                  (let x2096 = this_to_js Obj.magic x2094 in
                   Ojs.call (Ojs.get_prop_ascii x2096 "setUTCMinutes")
                     "apply"
                     [|x2096;((let x2091 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x2091 "push"
                                    [|(Ojs.float_to_js x2088)|]);
                               (match x2089 with
                                | Some x2093 ->
                                    ignore
                                      (Ojs.call x2091 "push"
                                         [|(Ojs.float_to_js x2093)|])
                                | None -> ());
                               (match x2090 with
                                | Some x2092 ->
                                    ignore
                                      (Ojs.call x2091 "push"
                                         [|(Ojs.float_to_js x2092)|])
                                | None -> ());
                               x2091))|])
    let (setHours :
      'tags this ->
        hours:float -> ?min:float -> ?sec:float -> ?ms:float -> unit -> float)
      =
      fun (x2105 : 'tags this) ->
        fun ~hours:(x2097 : float) ->
          fun ?min:(x2098 : float option) ->
            fun ?sec:(x2099 : float option) ->
              fun ?ms:(x2100 : float option) ->
                fun () ->
                  Ojs.float_of_js
                    (let x2107 = this_to_js Obj.magic x2105 in
                     Ojs.call (Ojs.get_prop_ascii x2107 "setHours") "apply"
                       [|x2107;((let x2101 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x2101 "push"
                                      [|(Ojs.float_to_js x2097)|]);
                                 (match x2098 with
                                  | Some x2104 ->
                                      ignore
                                        (Ojs.call x2101 "push"
                                           [|(Ojs.float_to_js x2104)|])
                                  | None -> ());
                                 (match x2099 with
                                  | Some x2103 ->
                                      ignore
                                        (Ojs.call x2101 "push"
                                           [|(Ojs.float_to_js x2103)|])
                                  | None -> ());
                                 (match x2100 with
                                  | Some x2102 ->
                                      ignore
                                        (Ojs.call x2101 "push"
                                           [|(Ojs.float_to_js x2102)|])
                                  | None -> ());
                                 x2101))|])
    let (setUTCHours :
      'tags this ->
        hours:float -> ?min:float -> ?sec:float -> ?ms:float -> unit -> float)
      =
      fun (x2116 : 'tags this) ->
        fun ~hours:(x2108 : float) ->
          fun ?min:(x2109 : float option) ->
            fun ?sec:(x2110 : float option) ->
              fun ?ms:(x2111 : float option) ->
                fun () ->
                  Ojs.float_of_js
                    (let x2118 = this_to_js Obj.magic x2116 in
                     Ojs.call (Ojs.get_prop_ascii x2118 "setUTCHours")
                       "apply"
                       [|x2118;((let x2112 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x2112 "push"
                                      [|(Ojs.float_to_js x2108)|]);
                                 (match x2109 with
                                  | Some x2115 ->
                                      ignore
                                        (Ojs.call x2112 "push"
                                           [|(Ojs.float_to_js x2115)|])
                                  | None -> ());
                                 (match x2110 with
                                  | Some x2114 ->
                                      ignore
                                        (Ojs.call x2112 "push"
                                           [|(Ojs.float_to_js x2114)|])
                                  | None -> ());
                                 (match x2111 with
                                  | Some x2113 ->
                                      ignore
                                        (Ojs.call x2112 "push"
                                           [|(Ojs.float_to_js x2113)|])
                                  | None -> ());
                                 x2112))|])
    let (setDate : 'tags this -> date:float -> float) =
      fun (x2120 : 'tags this) ->
        fun ~date:(x2119 : float) ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x2120) "setDate"
               [|(Ojs.float_to_js x2119)|])
    let (setUTCDate : 'tags this -> date:float -> float) =
      fun (x2123 : 'tags this) ->
        fun ~date:(x2122 : float) ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x2123) "setUTCDate"
               [|(Ojs.float_to_js x2122)|])
    let (setMonth :
      'tags this -> month:float -> ?date:float -> unit -> float) =
      fun (x2129 : 'tags this) ->
        fun ~month:(x2125 : float) ->
          fun ?date:(x2126 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x2131 = this_to_js Obj.magic x2129 in
                 Ojs.call (Ojs.get_prop_ascii x2131 "setMonth") "apply"
                   [|x2131;((let x2127 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x2127 "push"
                                  [|(Ojs.float_to_js x2125)|]);
                             (match x2126 with
                              | Some x2128 ->
                                  ignore
                                    (Ojs.call x2127 "push"
                                       [|(Ojs.float_to_js x2128)|])
                              | None -> ());
                             x2127))|])
    let (setUTCMonth :
      'tags this -> month:float -> ?date:float -> unit -> float) =
      fun (x2136 : 'tags this) ->
        fun ~month:(x2132 : float) ->
          fun ?date:(x2133 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x2138 = this_to_js Obj.magic x2136 in
                 Ojs.call (Ojs.get_prop_ascii x2138 "setUTCMonth") "apply"
                   [|x2138;((let x2134 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x2134 "push"
                                  [|(Ojs.float_to_js x2132)|]);
                             (match x2133 with
                              | Some x2135 ->
                                  ignore
                                    (Ojs.call x2134 "push"
                                       [|(Ojs.float_to_js x2135)|])
                              | None -> ());
                             x2134))|])
    let (setFullYear :
      'tags this ->
        year:float -> ?month:float -> ?date:float -> unit -> float)
      =
      fun (x2145 : 'tags this) ->
        fun ~year:(x2139 : float) ->
          fun ?month:(x2140 : float option) ->
            fun ?date:(x2141 : float option) ->
              fun () ->
                Ojs.float_of_js
                  (let x2147 = this_to_js Obj.magic x2145 in
                   Ojs.call (Ojs.get_prop_ascii x2147 "setFullYear") "apply"
                     [|x2147;((let x2142 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x2142 "push"
                                    [|(Ojs.float_to_js x2139)|]);
                               (match x2140 with
                                | Some x2144 ->
                                    ignore
                                      (Ojs.call x2142 "push"
                                         [|(Ojs.float_to_js x2144)|])
                                | None -> ());
                               (match x2141 with
                                | Some x2143 ->
                                    ignore
                                      (Ojs.call x2142 "push"
                                         [|(Ojs.float_to_js x2143)|])
                                | None -> ());
                               x2142))|])
    let (setUTCFullYear :
      'tags this ->
        year:float -> ?month:float -> ?date:float -> unit -> float)
      =
      fun (x2154 : 'tags this) ->
        fun ~year:(x2148 : float) ->
          fun ?month:(x2149 : float option) ->
            fun ?date:(x2150 : float option) ->
              fun () ->
                Ojs.float_of_js
                  (let x2156 = this_to_js Obj.magic x2154 in
                   Ojs.call (Ojs.get_prop_ascii x2156 "setUTCFullYear")
                     "apply"
                     [|x2156;((let x2151 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x2151 "push"
                                    [|(Ojs.float_to_js x2148)|]);
                               (match x2149 with
                                | Some x2153 ->
                                    ignore
                                      (Ojs.call x2151 "push"
                                         [|(Ojs.float_to_js x2153)|])
                                | None -> ());
                               (match x2150 with
                                | Some x2152 ->
                                    ignore
                                      (Ojs.call x2151 "push"
                                         [|(Ojs.float_to_js x2152)|])
                                | None -> ());
                               x2151))|])
    let (toUTCString : 'tags this -> string) =
      fun (x2157 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x2157) "toUTCString" [||])
    let (toISOString : 'tags this -> string) =
      fun (x2159 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x2159) "toISOString" [||])
    let (toJSON : 'tags this -> ?key:any -> unit -> string) =
      fun (x2164 : 'tags this) ->
        fun ?key:(x2161 : any option) ->
          fun () ->
            Ojs.string_of_js
              (let x2166 = this_to_js Obj.magic x2164 in
               Ojs.call (Ojs.get_prop_ascii x2166 "toJSON") "apply"
                 [|x2166;((let x2162 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x2161 with
                            | Some x2163 ->
                                ignore
                                  (Ojs.call x2162 "push"
                                     [|(any_to_js x2163)|])
                            | None -> ());
                           x2162))|])
    let (utc :
      year:float ->
        ?monthIndex:float ->
          ?date:float ->
            ?hours:float ->
              ?minutes:float -> ?seconds:float -> ?ms:float -> unit -> float)
      =
      fun ~year:(x2167 : float) ->
        fun ?monthIndex:(x2168 : float option) ->
          fun ?date:(x2169 : float option) ->
            fun ?hours:(x2170 : float option) ->
              fun ?minutes:(x2171 : float option) ->
                fun ?seconds:(x2172 : float option) ->
                  fun ?ms:(x2173 : float option) ->
                    fun () ->
                      Ojs.float_of_js
                        (let x2181 = Ojs.get_prop_ascii Ojs.global "Date" in
                         Ojs.call (Ojs.get_prop_ascii x2181 "UTC") "apply"
                           [|x2181;((let x2174 =
                                       Ojs.new_obj
                                         (Ojs.get_prop_ascii Ojs.global
                                            "Array") [||] in
                                     ignore
                                       (Ojs.call x2174 "push"
                                          [|(Ojs.float_to_js x2167)|]);
                                     (match x2168 with
                                      | Some x2180 ->
                                          ignore
                                            (Ojs.call x2174 "push"
                                               [|(Ojs.float_to_js x2180)|])
                                      | None -> ());
                                     (match x2169 with
                                      | Some x2179 ->
                                          ignore
                                            (Ojs.call x2174 "push"
                                               [|(Ojs.float_to_js x2179)|])
                                      | None -> ());
                                     (match x2170 with
                                      | Some x2178 ->
                                          ignore
                                            (Ojs.call x2174 "push"
                                               [|(Ojs.float_to_js x2178)|])
                                      | None -> ());
                                     (match x2171 with
                                      | Some x2177 ->
                                          ignore
                                            (Ojs.call x2174 "push"
                                               [|(Ojs.float_to_js x2177)|])
                                      | None -> ());
                                     (match x2172 with
                                      | Some x2176 ->
                                          ignore
                                            (Ojs.call x2174 "push"
                                               [|(Ojs.float_to_js x2176)|])
                                      | None -> ());
                                     (match x2173 with
                                      | Some x2175 ->
                                          ignore
                                            (Ojs.call x2174 "push"
                                               [|(Ojs.float_to_js x2175)|])
                                      | None -> ());
                                     x2174))|])
    let (create : [ `U1 of float  | `U2 of string  | `U3 of t ] -> t) =
      fun (x2182 : [ `U1 of float  | `U2 of string  | `U3 of t ]) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Date")
             [|((match x2182 with
                 | `U1 x2183 -> Ojs.float_to_js x2183
                 | `U2 x2184 -> Ojs.string_to_js x2184
                 | `U3 x2185 -> t_to_js x2185))|])
    let (create' : unit -> t) =
      fun () ->
        t_of_js (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Date") [||])
    let (create'' : [ `U1 of float  | `U2 of string ] -> t) =
      fun (x2186 : [ `U1 of float  | `U2 of string ]) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Date")
             [|((match x2186 with
                 | `U1 x2187 -> Ojs.float_to_js x2187
                 | `U2 x2188 -> Ojs.string_to_js x2188))|])
    let (create''' :
      year:float ->
        monthIndex:float ->
          ?date:float ->
            ?hours:float ->
              ?minutes:float -> ?seconds:float -> ?ms:float -> unit -> t)
      =
      fun ~year:(x2189 : float) ->
        fun ~monthIndex:(x2190 : float) ->
          fun ?date:(x2191 : float option) ->
            fun ?hours:(x2192 : float option) ->
              fun ?minutes:(x2193 : float option) ->
                fun ?seconds:(x2194 : float option) ->
                  fun ?ms:(x2195 : float option) ->
                    fun () ->
                      t_of_js
                        (Ojs.new_obj_arr
                           (Ojs.get_prop_ascii Ojs.global "Date")
                           (let x2196 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x2196 "push"
                                 [|(Ojs.float_to_js x2189)|]);
                            ignore
                              (Ojs.call x2196 "push"
                                 [|(Ojs.float_to_js x2190)|]);
                            (match x2191 with
                             | Some x2201 ->
                                 ignore
                                   (Ojs.call x2196 "push"
                                      [|(Ojs.float_to_js x2201)|])
                             | None -> ());
                            (match x2192 with
                             | Some x2200 ->
                                 ignore
                                   (Ojs.call x2196 "push"
                                      [|(Ojs.float_to_js x2200)|])
                             | None -> ());
                            (match x2193 with
                             | Some x2199 ->
                                 ignore
                                   (Ojs.call x2196 "push"
                                      [|(Ojs.float_to_js x2199)|])
                             | None -> ());
                            (match x2194 with
                             | Some x2198 ->
                                 ignore
                                   (Ojs.call x2196 "push"
                                      [|(Ojs.float_to_js x2198)|])
                             | None -> ());
                            (match x2195 with
                             | Some x2197 ->
                                 ignore
                                   (Ojs.call x2196 "push"
                                      [|(Ojs.float_to_js x2197)|])
                             | None -> ());
                            x2196))
    let (invoke : unit -> string) =
      fun () ->
        Ojs.string_of_js
          (Ojs.apply (Ojs.get_prop_ascii Ojs.global "Date") [||])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Date")
             "prototype")
    let (parse : string -> float) =
      fun (x2202 : string) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Date") "parse"
             [|(Ojs.string_to_js x2202)|])
    let (utc' :
      year:float ->
        monthIndex:float ->
          ?date:float ->
            ?hours:float ->
              ?minutes:float -> ?seconds:float -> ?ms:float -> unit -> float)
      =
      fun ~year:(x2203 : float) ->
        fun ~monthIndex:(x2204 : float) ->
          fun ?date:(x2205 : float option) ->
            fun ?hours:(x2206 : float option) ->
              fun ?minutes:(x2207 : float option) ->
                fun ?seconds:(x2208 : float option) ->
                  fun ?ms:(x2209 : float option) ->
                    fun () ->
                      Ojs.float_of_js
                        (let x2216 = Ojs.get_prop_ascii Ojs.global "Date" in
                         Ojs.call (Ojs.get_prop_ascii x2216 "UTC") "apply"
                           [|x2216;((let x2210 =
                                       Ojs.new_obj
                                         (Ojs.get_prop_ascii Ojs.global
                                            "Array") [||] in
                                     ignore
                                       (Ojs.call x2210 "push"
                                          [|(Ojs.float_to_js x2203)|]);
                                     ignore
                                       (Ojs.call x2210 "push"
                                          [|(Ojs.float_to_js x2204)|]);
                                     (match x2205 with
                                      | Some x2215 ->
                                          ignore
                                            (Ojs.call x2210 "push"
                                               [|(Ojs.float_to_js x2215)|])
                                      | None -> ());
                                     (match x2206 with
                                      | Some x2214 ->
                                          ignore
                                            (Ojs.call x2210 "push"
                                               [|(Ojs.float_to_js x2214)|])
                                      | None -> ());
                                     (match x2207 with
                                      | Some x2213 ->
                                          ignore
                                            (Ojs.call x2210 "push"
                                               [|(Ojs.float_to_js x2213)|])
                                      | None -> ());
                                     (match x2208 with
                                      | Some x2212 ->
                                          ignore
                                            (Ojs.call x2210 "push"
                                               [|(Ojs.float_to_js x2212)|])
                                      | None -> ());
                                     (match x2209 with
                                      | Some x2211 ->
                                          ignore
                                            (Ojs.call x2210 "push"
                                               [|(Ojs.float_to_js x2211)|])
                                      | None -> ());
                                     x2210))|])
    let (now : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Date") "now" [||])
    let cast_from = Obj.magic
  end
 and
  Intl:sig
         module SegmentData :
         sig
           type t = [ `Intl_SegmentData ] intf
           [@@@js.stop ]
           type tags = [ `Intl_SegmentData ]
           [@@@js.start ]
           [@@@js.implem type tags = [ `Intl_SegmentData ]]
           type 'tags this =
             'tags intf constraint 'tags = [> `Intl_SegmentData ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val get_segment : 'tags this -> string
           val set_segment : 'tags this -> string -> unit
           val get_index : 'tags this -> float
           val set_index : 'tags this -> float -> unit
           val get_input : 'tags this -> string
           val set_input : 'tags this -> string -> unit
           val get_isWordLike : 'tags this -> bool option
           val set_isWordLike : 'tags this -> bool -> unit
           val create :
             segment:string ->
               index:float -> input:string -> ?isWordLike:bool -> unit -> t
           val cast_from : 'tags this -> t
         end
         module Segments :
         sig
           type t = [ `Intl_Segments ] intf
           [@@@js.stop ]
           type tags = [ `Intl_Segments ]
           [@@@js.start ]
           [@@@js.implem type tags = [ `Intl_Segments ]]
           type 'tags this =
             'tags intf constraint 'tags = [> `Intl_Segments ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val containing :
             'tags this -> ?codeUnitIndex:float -> unit -> SegmentData.t
           val cast_from : 'tags this -> t
         end
         module SegmenterOptions :
         sig
           type t = [ `Intl_SegmenterOptions ] intf
           [@@@js.stop ]
           type tags = [ `Intl_SegmenterOptions ]
           [@@@js.start ]
           [@@@js.implem type tags = [ `Intl_SegmenterOptions ]]
           type 'tags this =
             'tags intf constraint 'tags = [> `Intl_SegmenterOptions ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val get_localeMatcher :
             'tags this -> [ `L_s26_best_fit  | `L_s81_lookup ] option
           val set_localeMatcher :
             'tags this ->
               [ `Undefined of undefined  | `U1 of [ `L_s26_best_fit ] 
               | `U2 of [ `L_s81_lookup ] ] -> unit
           val get_granularity :
             'tags this ->
               [ `L_s120_sentence  | `L_s144_word  | `L_s65_grapheme ] option
           val set_granularity :
             'tags this ->
               [ `Undefined of undefined  | `U1 of [ `L_s65_grapheme ] 
               | `U2 of [ `L_s144_word ]  | `U3 of [ `L_s120_sentence ] ] ->
                 unit
           val create :
             ?localeMatcher:[ `L_s26_best_fit  | `L_s81_lookup ] ->
               ?granularity:[ `L_s120_sentence  | `L_s144_word 
                            | `L_s65_grapheme ]
                 -> unit -> t
           val cast_from : 'tags this -> t
         end
         module ResolvedSegmenterOptions :
         sig
           type t = [ `Intl_ResolvedSegmenterOptions ] intf
           [@@@js.stop ]
           type tags = [ `Intl_ResolvedSegmenterOptions ]
           [@@@js.start ]
           [@@@js.implem type tags = [ `Intl_ResolvedSegmenterOptions ]]
           type 'tags this =
             'tags intf constraint 'tags =
                         [> `Intl_ResolvedSegmenterOptions ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val get_locale : 'tags this -> string
           val set_locale : 'tags this -> string -> unit
           val get_granularity :
             'tags this ->
               [ `L_s120_sentence  | `L_s144_word  | `L_s65_grapheme ]
           val set_granularity :
             'tags this ->
               [ `U1 of [ `L_s65_grapheme ]  | `U2 of [ `L_s144_word ] 
               | `U3 of [ `L_s120_sentence ] ] -> unit
           val create :
             locale:string ->
               granularity:[ `L_s120_sentence  | `L_s144_word 
                           | `L_s65_grapheme ]
                 -> unit -> t
           val cast_from : 'tags this -> t
         end
         module BCP47LanguageTag :
         sig
           type t = string
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
         end
         module Segmenter :
         sig
           type t = [ `Intl_Segmenter ] intf
           [@@@js.stop ]
           type tags = [ `Intl_Segmenter ]
           [@@@js.start ]
           [@@@js.implem type tags = [ `Intl_Segmenter ]]
           type 'tags this =
             'tags intf constraint 'tags = [> `Intl_Segmenter ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val segment : 'tags this -> input:string -> Segments.t
           val resolvedOptions : 'tags this -> ResolvedSegmenterOptions.t
           val cast_from : 'tags this -> t
           val prototype : unit -> t
           val create :
             ?locales:[ `U1 of BCP47LanguageTag.t 
                      | `U2 of BCP47LanguageTag.t list ]
               -> ?options:SegmenterOptions.t -> unit -> t
           val supportedLocalesOf :
             locales:[ `U1 of BCP47LanguageTag.t 
                     | `U2 of BCP47LanguageTag.t list ]
               ->
               ?options:(SegmenterOptions.t, [ `L_s77_localeMatcher ]) Pick.t
                 -> unit -> BCP47LanguageTag.t list
         end
         module RelativeTimeFormatNumeric :
         sig
           type t = [ `L_s22_always  | `L_s23_auto ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
         end
         module UnicodeBCP47LocaleIdentifier :
         sig
           type t = string
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
         end
         module RelativeTimeFormatStyle :
         sig
           type t = [ `L_s122_short  | `L_s78_long  | `L_s92_narrow ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
         end
         module ResolvedRelativeTimeFormatOptions :
         sig
           type t = [ `Intl_ResolvedRelativeTimeFormatOptions ] intf
           [@@@js.stop ]
           type tags = [ `Intl_ResolvedRelativeTimeFormatOptions ]
           [@@@js.start ]
           [@@@js.implem
             type tags = [ `Intl_ResolvedRelativeTimeFormatOptions ]]
           type 'tags this =
             'tags intf constraint 'tags =
                         [> `Intl_ResolvedRelativeTimeFormatOptions ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val get_locale : 'tags this -> UnicodeBCP47LocaleIdentifier.t
           val set_locale :
             'tags this -> UnicodeBCP47LocaleIdentifier.t -> unit
           val get_style : 'tags this -> RelativeTimeFormatStyle.t
           val set_style : 'tags this -> RelativeTimeFormatStyle.t -> unit
           val get_numeric : 'tags this -> RelativeTimeFormatNumeric.t
           val set_numeric :
             'tags this -> RelativeTimeFormatNumeric.t -> unit
           val get_numberingSystem : 'tags this -> string
           val set_numberingSystem : 'tags this -> string -> unit
           val create :
             locale:UnicodeBCP47LocaleIdentifier.t ->
               style:RelativeTimeFormatStyle.t ->
                 numeric:RelativeTimeFormatNumeric.t ->
                   numberingSystem:string -> unit -> t
           val cast_from : 'tags this -> t
         end
         module RelativeTimeFormatUnit :
         sig
           type t =
             [ `L_s109_quarter  | `L_s110_quarters  | `L_s118_second 
             | `L_s119_seconds  | `L_s141_week  | `L_s143_weeks 
             | `L_s145_year  | `L_s146_years  | `L_s38_day  | `L_s40_days 
             | `L_s71_hour  | `L_s72_hours  | `L_s86_minute 
             | `L_s87_minutes  | `L_s88_month  | `L_s89_months ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
         end
         module RelativeTimeFormatUnitSingular :
         sig
           type t =
             [ `L_s109_quarter  | `L_s118_second  | `L_s141_week 
             | `L_s145_year  | `L_s38_day  | `L_s71_hour  | `L_s86_minute 
             | `L_s88_month ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
         end
         module ES2020NumberFormatPartType :
         sig
           type t =
             [ `L_s137_unit  | `L_s138_unknown  | `L_s33_compact 
             | `L_s55_exponentInteger  | `L_s56_exponentMinusSign 
             | `L_s57_exponentSeparator ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
         end
         module ES2018NumberFormatPartType :
         sig
           type t =
             [ `L_s103_percent  | `L_s104_percentSign  | `L_s108_plusSign 
             | `L_s130_symbol  | `L_s31_code  | `L_s36_currency 
             | `L_s41_decimal  | `L_s60_fraction  | `L_s66_group 
             | `L_s73_infinity  | `L_s74_integer  | `L_s76_literal 
             | `L_s85_minusSign  | `L_s90_name  | `L_s91_nan ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
         end
         module NumberFormatPartTypes :
         sig
           type t =
             [ `L_s103_percent  | `L_s104_percentSign  | `L_s108_plusSign 
             | `L_s130_symbol  | `L_s137_unit  | `L_s138_unknown 
             | `L_s31_code  | `L_s33_compact  | `L_s36_currency 
             | `L_s41_decimal  | `L_s55_exponentInteger 
             | `L_s56_exponentMinusSign  | `L_s57_exponentSeparator 
             | `L_s60_fraction  | `L_s66_group  | `L_s73_infinity 
             | `L_s74_integer  | `L_s76_literal  | `L_s85_minusSign 
             | `L_s90_name  | `L_s91_nan ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
         end
         module RelativeTimeFormatPart :
         sig
           module AnonymousInterface13 :
           sig
             type t = private Ojs.t
             val t_to_js : t -> Ojs.t
             val t_of_js : Ojs.t -> t
             val get_type :
               t -> (NumberFormatPartTypes.t, [ `L_s76_literal ]) Exclude.t
             val set_type :
               t ->
                 (NumberFormatPartTypes.t, [ `L_s76_literal ]) Exclude.t ->
                   unit
             val get_value : t -> string
             val set_value : t -> string -> unit
             val get_unit : t -> RelativeTimeFormatUnitSingular.t
             val set_unit : t -> RelativeTimeFormatUnitSingular.t -> unit
             val create :
               type_:(NumberFormatPartTypes.t, [ `L_s76_literal ]) Exclude.t
                 ->
                 value:string ->
                   unit:RelativeTimeFormatUnitSingular.t -> unit -> t
           end
           module AnonymousInterface11 :
           sig
             type t = private Ojs.t
             val t_to_js : t -> Ojs.t
             val t_of_js : Ojs.t -> t
             val get_type : t -> [ `L_s76_literal ]
             val set_type : t -> [ `L_s76_literal ] -> unit
             val get_value : t -> string
             val set_value : t -> string -> unit
             val create :
               type_:[ `L_s76_literal ] -> value:string -> unit -> t
           end
           type t = (AnonymousInterface11.t, AnonymousInterface13.t) union2
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
         end
         module RelativeTimeFormatLocaleMatcher :
         sig
           type t = [ `L_s26_best_fit  | `L_s81_lookup ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
         end
         module RelativeTimeFormatOptions :
         sig
           type t = [ `Intl_RelativeTimeFormatOptions ] intf
           [@@@js.stop ]
           type tags = [ `Intl_RelativeTimeFormatOptions ]
           [@@@js.start ]
           [@@@js.implem type tags = [ `Intl_RelativeTimeFormatOptions ]]
           type 'tags this =
             'tags intf constraint 'tags =
                         [> `Intl_RelativeTimeFormatOptions ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val get_localeMatcher :
             'tags this -> RelativeTimeFormatLocaleMatcher.t option
           val set_localeMatcher :
             'tags this -> RelativeTimeFormatLocaleMatcher.t -> unit
           val get_numeric : 'tags this -> RelativeTimeFormatNumeric.t option
           val set_numeric :
             'tags this -> RelativeTimeFormatNumeric.t -> unit
           val get_style : 'tags this -> RelativeTimeFormatStyle.t option
           val set_style : 'tags this -> RelativeTimeFormatStyle.t -> unit
           val create :
             ?localeMatcher:RelativeTimeFormatLocaleMatcher.t ->
               ?numeric:RelativeTimeFormatNumeric.t ->
                 ?style:RelativeTimeFormatStyle.t -> unit -> t
           val cast_from : 'tags this -> t
         end
         module RelativeTimeFormat :
         sig
           type t = [ `Intl_RelativeTimeFormat ] intf
           [@@@js.stop ]
           type tags = [ `Intl_RelativeTimeFormat ]
           [@@@js.start ]
           [@@@js.implem type tags = [ `Intl_RelativeTimeFormat ]]
           type 'tags this =
             'tags intf constraint 'tags = [> `Intl_RelativeTimeFormat ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val format :
             'tags this ->
               value:float -> unit:RelativeTimeFormatUnit.t -> string
           val formatToParts :
             'tags this ->
               value:float ->
                 unit:RelativeTimeFormatUnit.t ->
                   RelativeTimeFormatPart.t list
           val resolvedOptions :
             'tags this -> ResolvedRelativeTimeFormatOptions.t
           val cast_from : 'tags this -> t
           val create :
             ?locales:[ `U1 of UnicodeBCP47LocaleIdentifier.t 
                      | `U2 of UnicodeBCP47LocaleIdentifier.t list ]
               -> ?options:RelativeTimeFormatOptions.t -> unit -> t
           val supportedLocalesOf :
             ?locales:[ `U1 of UnicodeBCP47LocaleIdentifier.t 
                      | `U2 of UnicodeBCP47LocaleIdentifier.t list ]
               ->
               ?options:RelativeTimeFormatOptions.t ->
                 unit -> UnicodeBCP47LocaleIdentifier.t list
         end
         module PluralRuleType :
         sig
           type t = [ `L_s101_ordinal  | `L_s29_cardinal ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
         end
         module LDMLPluralRule :
         sig
           type t =
             [ `L_s100_one  | `L_s102_other  | `L_s135_two  | `L_s147_zero 
             | `L_s59_few  | `L_s83_many ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
         end
         module ResolvedPluralRulesOptions :
         sig
           type t = [ `Intl_ResolvedPluralRulesOptions ] intf
           [@@@js.stop ]
           type tags = [ `Intl_ResolvedPluralRulesOptions ]
           [@@@js.start ]
           [@@@js.implem type tags = [ `Intl_ResolvedPluralRulesOptions ]]
           type 'tags this =
             'tags intf constraint 'tags =
                         [> `Intl_ResolvedPluralRulesOptions ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val get_locale : 'tags this -> string
           val set_locale : 'tags this -> string -> unit
           val get_pluralCategories : 'tags this -> LDMLPluralRule.t list
           val set_pluralCategories :
             'tags this -> LDMLPluralRule.t list -> unit
           val get_type : 'tags this -> PluralRuleType.t
           val set_type : 'tags this -> PluralRuleType.t -> unit
           val get_minimumIntegerDigits : 'tags this -> float
           val set_minimumIntegerDigits : 'tags this -> float -> unit
           val get_minimumFractionDigits : 'tags this -> float
           val set_minimumFractionDigits : 'tags this -> float -> unit
           val get_maximumFractionDigits : 'tags this -> float
           val set_maximumFractionDigits : 'tags this -> float -> unit
           val get_minimumSignificantDigits : 'tags this -> float option
           val set_minimumSignificantDigits : 'tags this -> float -> unit
           val get_maximumSignificantDigits : 'tags this -> float option
           val set_maximumSignificantDigits : 'tags this -> float -> unit
           val create :
             locale:string ->
               pluralCategories:LDMLPluralRule.t list ->
                 type_:PluralRuleType.t ->
                   minimumIntegerDigits:float ->
                     minimumFractionDigits:float ->
                       maximumFractionDigits:float ->
                         ?minimumSignificantDigits:float ->
                           ?maximumSignificantDigits:float -> unit -> t
           val cast_from : 'tags this -> t
         end
         module PluralRulesOptions :
         sig
           type t = [ `Intl_PluralRulesOptions ] intf
           [@@@js.stop ]
           type tags = [ `Intl_PluralRulesOptions ]
           [@@@js.start ]
           [@@@js.implem type tags = [ `Intl_PluralRulesOptions ]]
           type 'tags this =
             'tags intf constraint 'tags = [> `Intl_PluralRulesOptions ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val get_localeMatcher :
             'tags this -> [ `L_s26_best_fit  | `L_s81_lookup ] option
           val set_localeMatcher :
             'tags this ->
               [ `Undefined of undefined  | `U1 of [ `L_s81_lookup ] 
               | `U2 of [ `L_s26_best_fit ] ] -> unit
           val get_type : 'tags this -> PluralRuleType.t option
           val set_type :
             'tags this ->
               [ `Undefined of undefined  | `U1 of PluralRuleType.t ] -> unit
           val get_minimumIntegerDigits : 'tags this -> float option
           val set_minimumIntegerDigits :
             'tags this ->
               [ `Undefined of undefined  | `U1 of float ] -> unit
           val get_minimumFractionDigits : 'tags this -> float option
           val set_minimumFractionDigits :
             'tags this ->
               [ `Undefined of undefined  | `U1 of float ] -> unit
           val get_maximumFractionDigits : 'tags this -> float option
           val set_maximumFractionDigits :
             'tags this ->
               [ `Undefined of undefined  | `U1 of float ] -> unit
           val get_minimumSignificantDigits : 'tags this -> float option
           val set_minimumSignificantDigits :
             'tags this ->
               [ `Undefined of undefined  | `U1 of float ] -> unit
           val get_maximumSignificantDigits : 'tags this -> float option
           val set_maximumSignificantDigits :
             'tags this ->
               [ `Undefined of undefined  | `U1 of float ] -> unit
           val create :
             ?localeMatcher:[ `L_s26_best_fit  | `L_s81_lookup ] ->
               ?type_:PluralRuleType.t ->
                 ?minimumIntegerDigits:float ->
                   ?minimumFractionDigits:float ->
                     ?maximumFractionDigits:float ->
                       ?minimumSignificantDigits:float ->
                         ?maximumSignificantDigits:float -> unit -> t
           val cast_from : 'tags this -> t
         end
         module PluralRules :
         sig
           module AnonymousInterface6 :
           sig
             type t = private Ojs.t
             val t_to_js : t -> Ojs.t
             val t_of_js : Ojs.t -> t
             val get_localeMatcher :
               t -> [ `L_s26_best_fit  | `L_s81_lookup ] option
             val set_localeMatcher :
               t ->
                 [ `U1 of [ `L_s81_lookup ]  | `U2 of [ `L_s26_best_fit ] ]
                   -> unit
             val create :
               ?localeMatcher:[ `L_s26_best_fit  | `L_s81_lookup ] ->
                 unit -> t
           end
           type t = [ `Intl_PluralRules ] intf
           [@@@js.stop ]
           type tags = [ `Intl_PluralRules ]
           [@@@js.start ]
           [@@@js.implem type tags = [ `Intl_PluralRules ]]
           type 'tags this =
             'tags intf constraint 'tags = [> `Intl_PluralRules ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val resolvedOptions : 'tags this -> ResolvedPluralRulesOptions.t
           val select : 'tags this -> n:float -> LDMLPluralRule.t
           val cast_from : 'tags this -> t
           val create :
             ?locales:[ `U1 of string  | `U2 of string list ] ->
               ?options:PluralRulesOptions.t -> unit -> t
           val invoke :
             ?locales:[ `U1 of string  | `U2 of string list ] ->
               ?options:PluralRulesOptions.t -> unit -> t
           val supportedLocalesOf :
             locales:[ `U1 of string  | `U2 of string list ] ->
               ?options:AnonymousInterface6.t -> unit -> string list
         end
         module ResolvedNumberFormatOptions :
         sig
           type t = [ `Intl_ResolvedNumberFormatOptions ] intf
           [@@@js.stop ]
           type tags = [ `Intl_ResolvedNumberFormatOptions ]
           [@@@js.start ]
           [@@@js.implem type tags = [ `Intl_ResolvedNumberFormatOptions ]]
           type 'tags this =
             'tags intf constraint 'tags =
                         [> `Intl_ResolvedNumberFormatOptions ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val get_compactDisplay :
             'tags this -> [ `L_s122_short  | `L_s78_long ] option
           val set_compactDisplay :
             'tags this ->
               [ `U1 of [ `L_s122_short ]  | `U2 of [ `L_s78_long ] ] -> unit
           val get_notation :
             'tags this ->
               [ `L_s114_scientific  | `L_s126_standard  | `L_s33_compact 
               | `L_s51_engineering ] option
           val set_notation :
             'tags this ->
               [ `U1 of [ `L_s126_standard ] 
               | `U2 of [ `L_s114_scientific ] 
               | `U3 of [ `L_s51_engineering ]  | `U4 of [ `L_s33_compact ] ]
                 -> unit
           val get_signDisplay :
             'tags this ->
               [ `L_s22_always  | `L_s23_auto  | `L_s54_exceptZero 
               | `L_s93_never ] option
           val set_signDisplay :
             'tags this ->
               [ `U1 of [ `L_s23_auto ]  | `U2 of [ `L_s93_never ] 
               | `U3 of [ `L_s22_always ]  | `U4 of [ `L_s54_exceptZero ] ]
                 -> unit
           val get_unit : 'tags this -> string option
           val set_unit : 'tags this -> string -> unit
           val get_unitDisplay :
             'tags this ->
               [ `L_s122_short  | `L_s78_long  | `L_s92_narrow ] option
           val set_unitDisplay :
             'tags this ->
               [ `U1 of [ `L_s122_short ]  | `U2 of [ `L_s78_long ] 
               | `U3 of [ `L_s92_narrow ] ] -> unit
           val get_currencyDisplay : 'tags this -> string option
           val set_currencyDisplay : 'tags this -> string -> unit
           val get_currencySign : 'tags this -> string option
           val set_currencySign : 'tags this -> string -> unit
           val get_locale : 'tags this -> string
           val set_locale : 'tags this -> string -> unit
           val get_numberingSystem : 'tags this -> string
           val set_numberingSystem : 'tags this -> string -> unit
           val get_style : 'tags this -> string
           val set_style : 'tags this -> string -> unit
           val get_currency : 'tags this -> string option
           val set_currency : 'tags this -> string -> unit
           val get_minimumIntegerDigits : 'tags this -> float
           val set_minimumIntegerDigits : 'tags this -> float -> unit
           val get_minimumFractionDigits : 'tags this -> float
           val set_minimumFractionDigits : 'tags this -> float -> unit
           val get_maximumFractionDigits : 'tags this -> float
           val set_maximumFractionDigits : 'tags this -> float -> unit
           val get_minimumSignificantDigits : 'tags this -> float option
           val set_minimumSignificantDigits : 'tags this -> float -> unit
           val get_maximumSignificantDigits : 'tags this -> float option
           val set_maximumSignificantDigits : 'tags this -> float -> unit
           val get_useGrouping : 'tags this -> bool
           val set_useGrouping : 'tags this -> bool -> unit
           val create :
             ?compactDisplay:[ `L_s122_short  | `L_s78_long ] ->
               ?notation:[ `L_s114_scientific  | `L_s126_standard 
                         | `L_s33_compact  | `L_s51_engineering ]
                 ->
                 ?signDisplay:[ `L_s22_always  | `L_s23_auto 
                              | `L_s54_exceptZero  | `L_s93_never ]
                   ->
                   ?unit:string ->
                     ?unitDisplay:[ `L_s122_short  | `L_s78_long 
                                  | `L_s92_narrow ]
                       ->
                       ?currencyDisplay:string ->
                         ?currencySign:string ->
                           locale:string ->
                             numberingSystem:string ->
                               style:string ->
                                 ?currency:string ->
                                   minimumIntegerDigits:float ->
                                     minimumFractionDigits:float ->
                                       maximumFractionDigits:float ->
                                         ?minimumSignificantDigits:float ->
                                           ?maximumSignificantDigits:float ->
                                             useGrouping:bool -> unit -> t
           val cast_from : 'tags this -> t
         end
         module NumberFormatPart :
         sig
           type t = [ `Intl_NumberFormatPart ] intf
           [@@@js.stop ]
           type tags = [ `Intl_NumberFormatPart ]
           [@@@js.start ]
           [@@@js.implem type tags = [ `Intl_NumberFormatPart ]]
           type 'tags this =
             'tags intf constraint 'tags = [> `Intl_NumberFormatPart ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val get_type : 'tags this -> NumberFormatPartTypes.t
           val set_type : 'tags this -> NumberFormatPartTypes.t -> unit
           val get_value : 'tags this -> string
           val set_value : 'tags this -> string -> unit
           val create :
             type_:NumberFormatPartTypes.t -> value:string -> unit -> t
           val cast_from : 'tags this -> t
         end
         module NumberRangeFormatPart :
         sig
           type t =
             [ `Intl_NumberFormatPart  | `Intl_NumberRangeFormatPart ] intf
           [@@@js.stop ]
           type tags =
             [ `Intl_NumberFormatPart  | `Intl_NumberRangeFormatPart ]
           [@@@js.start ]
           [@@@js.implem
             type tags =
               [ `Intl_NumberFormatPart  | `Intl_NumberRangeFormatPart ]]
           type 'tags this =
             'tags intf constraint 'tags = [> `Intl_NumberRangeFormatPart ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val get_source :
             'tags this ->
               [ `L_s121_shared  | `L_s127_startRange  | `L_s50_endRange ]
           val set_source :
             'tags this ->
               [ `U1 of [ `L_s127_startRange ]  | `U2 of [ `L_s50_endRange ] 
               | `U3 of [ `L_s121_shared ] ] -> unit
           val create :
             source:[ `L_s121_shared  | `L_s127_startRange 
                    | `L_s50_endRange ]
               -> unit -> t
           val cast_from : 'tags this -> t
         end
         module NumberFormatOptions :
         sig
           type t = [ `Intl_NumberFormatOptions ] intf
           [@@@js.stop ]
           type tags = [ `Intl_NumberFormatOptions ]
           [@@@js.start ]
           [@@@js.implem type tags = [ `Intl_NumberFormatOptions ]]
           type 'tags this =
             'tags intf constraint 'tags = [> `Intl_NumberFormatOptions ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val get_compactDisplay :
             'tags this -> [ `L_s122_short  | `L_s78_long ] option
           val set_compactDisplay :
             'tags this ->
               [ `Undefined of undefined  | `U1 of [ `L_s122_short ] 
               | `U2 of [ `L_s78_long ] ] -> unit
           val get_notation :
             'tags this ->
               [ `L_s114_scientific  | `L_s126_standard  | `L_s33_compact 
               | `L_s51_engineering ] option
           val set_notation :
             'tags this ->
               [ `Undefined of undefined  | `U1 of [ `L_s126_standard ] 
               | `U2 of [ `L_s114_scientific ] 
               | `U3 of [ `L_s51_engineering ]  | `U4 of [ `L_s33_compact ] ]
                 -> unit
           val get_signDisplay :
             'tags this ->
               [ `L_s22_always  | `L_s23_auto  | `L_s54_exceptZero 
               | `L_s93_never ] option
           val set_signDisplay :
             'tags this ->
               [ `Undefined of undefined  | `U1 of [ `L_s23_auto ] 
               | `U2 of [ `L_s93_never ]  | `U3 of [ `L_s22_always ] 
               | `U4 of [ `L_s54_exceptZero ] ] -> unit
           val get_unit : 'tags this -> string option
           val set_unit :
             'tags this ->
               [ `Undefined of undefined  | `U1 of string ] -> unit
           val get_unitDisplay :
             'tags this ->
               [ `L_s122_short  | `L_s78_long  | `L_s92_narrow ] option
           val set_unitDisplay :
             'tags this ->
               [ `Undefined of undefined  | `U1 of [ `L_s122_short ] 
               | `U2 of [ `L_s78_long ]  | `U3 of [ `L_s92_narrow ] ] -> 
                 unit
           val get_currencyDisplay : 'tags this -> string option
           val set_currencyDisplay :
             'tags this ->
               [ `Undefined of undefined  | `U1 of string ] -> unit
           val get_currencySign : 'tags this -> string option
           val set_currencySign :
             'tags this ->
               [ `Undefined of undefined  | `U1 of string ] -> unit
           val get_localeMatcher : 'tags this -> string option
           val set_localeMatcher :
             'tags this ->
               [ `Undefined of undefined  | `U1 of string ] -> unit
           val get_style : 'tags this -> string option
           val set_style :
             'tags this ->
               [ `Undefined of undefined  | `U1 of string ] -> unit
           val get_currency : 'tags this -> string option
           val set_currency :
             'tags this ->
               [ `Undefined of undefined  | `U1 of string ] -> unit
           val get_currencySign' : 'tags this -> string option
           val set_currencySign' :
             'tags this ->
               [ `Undefined of undefined  | `U1 of string ] -> unit
           val get_useGrouping : 'tags this -> bool option
           val set_useGrouping :
             'tags this -> [ `Undefined of undefined  | `U1 of bool ] -> unit
           val get_minimumIntegerDigits : 'tags this -> float option
           val set_minimumIntegerDigits :
             'tags this ->
               [ `Undefined of undefined  | `U1 of float ] -> unit
           val get_minimumFractionDigits : 'tags this -> float option
           val set_minimumFractionDigits :
             'tags this ->
               [ `Undefined of undefined  | `U1 of float ] -> unit
           val get_maximumFractionDigits : 'tags this -> float option
           val set_maximumFractionDigits :
             'tags this ->
               [ `Undefined of undefined  | `U1 of float ] -> unit
           val get_minimumSignificantDigits : 'tags this -> float option
           val set_minimumSignificantDigits :
             'tags this ->
               [ `Undefined of undefined  | `U1 of float ] -> unit
           val get_maximumSignificantDigits : 'tags this -> float option
           val set_maximumSignificantDigits :
             'tags this ->
               [ `Undefined of undefined  | `U1 of float ] -> unit
           val create :
             ?compactDisplay:[ `L_s122_short  | `L_s78_long ] ->
               ?notation:[ `L_s114_scientific  | `L_s126_standard 
                         | `L_s33_compact  | `L_s51_engineering ]
                 ->
                 ?signDisplay:[ `L_s22_always  | `L_s23_auto 
                              | `L_s54_exceptZero  | `L_s93_never ]
                   ->
                   ?unit:string ->
                     ?unitDisplay:[ `L_s122_short  | `L_s78_long 
                                  | `L_s92_narrow ]
                       ->
                       ?currencyDisplay:string ->
                         ?currencySign:string ->
                           ?localeMatcher:string ->
                             ?style:string ->
                               ?currency:string ->
                                 ?useGrouping:bool ->
                                   ?minimumIntegerDigits:float ->
                                     ?minimumFractionDigits:float ->
                                       ?maximumFractionDigits:float ->
                                         ?minimumSignificantDigits:float ->
                                           ?maximumSignificantDigits:float ->
                                             unit -> t
           val cast_from : 'tags this -> t
         end
         module NumberFormat :
         sig
           type t = [ `Intl_NumberFormat ] intf
           [@@@js.stop ]
           type tags = [ `Intl_NumberFormat ]
           [@@@js.start ]
           [@@@js.implem type tags = [ `Intl_NumberFormat ]]
           type 'tags this =
             'tags intf constraint 'tags = [> `Intl_NumberFormat ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val formatRange :
             'tags this ->
               start:[ `U1 of float  | `U2 of bigint ] ->
                 end_:[ `U1 of float  | `U2 of bigint ] -> string
           val formatRangeToParts :
             'tags this ->
               start:[ `U1 of float  | `U2 of bigint ] ->
                 end_:[ `U1 of float  | `U2 of bigint ] ->
                   NumberRangeFormatPart.t list
           val format :
             'tags this -> value:[ `U1 of float  | `U2 of bigint ] -> string
           val resolvedOptions : 'tags this -> ResolvedNumberFormatOptions.t
           val formatToParts :
             'tags this ->
               ?number:[ `U1 of float  | `U2 of bigint ] ->
                 unit -> NumberFormatPart.t list
           val format' : 'tags this -> value:float -> string
           val resolvedOptions' : 'tags this -> ResolvedNumberFormatOptions.t
           val cast_from : 'tags this -> t
           val create :
             ?locales:[ `U1 of string  | `U2 of string list ] ->
               ?options:NumberFormatOptions.t -> unit -> t
           val invoke :
             ?locales:[ `U1 of string  | `U2 of string list ] ->
               ?options:NumberFormatOptions.t -> unit -> t
           val supportedLocalesOf :
             locales:[ `U1 of string  | `U2 of string list ] ->
               ?options:NumberFormatOptions.t -> unit -> string list
           val prototype : unit -> t
         end
         module ListFormatType :
         sig
           type t =
             [ `L_s137_unit  | `L_s35_conjunction  | `L_s46_disjunction ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
         end
         module ListFormatStyle :
         sig
           type t = [ `L_s122_short  | `L_s78_long  | `L_s92_narrow ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
         end
         module ResolvedListFormatOptions :
         sig
           type t = [ `Intl_ResolvedListFormatOptions ] intf
           [@@@js.stop ]
           type tags = [ `Intl_ResolvedListFormatOptions ]
           [@@@js.start ]
           [@@@js.implem type tags = [ `Intl_ResolvedListFormatOptions ]]
           type 'tags this =
             'tags intf constraint 'tags =
                         [> `Intl_ResolvedListFormatOptions ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val get_locale : 'tags this -> string
           val set_locale : 'tags this -> string -> unit
           val get_style : 'tags this -> ListFormatStyle.t
           val set_style : 'tags this -> ListFormatStyle.t -> unit
           val get_type : 'tags this -> ListFormatType.t
           val set_type : 'tags this -> ListFormatType.t -> unit
           val create :
             locale:string ->
               style:ListFormatStyle.t -> type_:ListFormatType.t -> unit -> t
           val cast_from : 'tags this -> t
         end
         module ListFormatLocaleMatcher :
         sig
           type t = [ `L_s26_best_fit  | `L_s81_lookup ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
         end
         module ListFormatOptions :
         sig
           type t = [ `Intl_ListFormatOptions ] intf
           [@@@js.stop ]
           type tags = [ `Intl_ListFormatOptions ]
           [@@@js.start ]
           [@@@js.implem type tags = [ `Intl_ListFormatOptions ]]
           type 'tags this =
             'tags intf constraint 'tags = [> `Intl_ListFormatOptions ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val get_localeMatcher :
             'tags this -> ListFormatLocaleMatcher.t option
           val set_localeMatcher :
             'tags this ->
               [ `Undefined of undefined 
               | `U1 of ListFormatLocaleMatcher.t ] -> unit
           val get_type : 'tags this -> ListFormatType.t option
           val set_type :
             'tags this ->
               [ `Undefined of undefined  | `U1 of ListFormatType.t ] -> unit
           val get_style : 'tags this -> ListFormatStyle.t option
           val set_style :
             'tags this ->
               [ `Undefined of undefined  | `U1 of ListFormatStyle.t ] ->
                 unit
           val create :
             ?localeMatcher:ListFormatLocaleMatcher.t ->
               ?type_:ListFormatType.t ->
                 ?style:ListFormatStyle.t -> unit -> t
           val cast_from : 'tags this -> t
         end
         module ListFormat :
         sig
           module AnonymousInterface12 :
           sig
             type t = private Ojs.t
             val t_to_js : t -> Ojs.t
             val t_of_js : Ojs.t -> t
             val get_type : t -> [ `L_s48_element  | `L_s76_literal ]
             val set_type :
               t ->
                 [ `U1 of [ `L_s48_element ]  | `U2 of [ `L_s76_literal ] ]
                   -> unit
             val get_value : t -> string
             val set_value : t -> string -> unit
             val create :
               type_:[ `L_s48_element  | `L_s76_literal ] ->
                 value:string -> unit -> t
           end
           type t = [ `Intl_ListFormat ] intf
           [@@@js.stop ]
           type tags = [ `Intl_ListFormat ]
           [@@@js.start ]
           [@@@js.implem type tags = [ `Intl_ListFormat ]]
           type 'tags this =
             'tags intf constraint 'tags = [> `Intl_ListFormat ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val format : 'tags this -> list:string Iterable.t -> string
           val formatToParts :
             'tags this ->
               list:string Iterable.t -> AnonymousInterface12.t list
           val resolvedOptions : 'tags this -> ResolvedListFormatOptions.t
           val cast_from : 'tags this -> t
           val prototype : unit -> t
           val create :
             ?locales:[ `U1 of BCP47LanguageTag.t 
                      | `U2 of BCP47LanguageTag.t list ]
               -> ?options:ListFormatOptions.t -> unit -> t
           val supportedLocalesOf :
             locales:[ `U1 of BCP47LanguageTag.t 
                     | `U2 of BCP47LanguageTag.t list ]
               ->
               ?options:(ListFormatOptions.t, [ `L_s77_localeMatcher ])
                 Pick.t -> unit -> BCP47LanguageTag.t list
         end
         module DisplayNamesType :
         sig
           type t =
             [ `L_s112_region  | `L_s115_script  | `L_s28_calendar 
             | `L_s36_currency  | `L_s37_dateTimeField  | `L_s75_language ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
         end
         module DisplayNamesLanguageDisplay :
         sig
           type t = [ `L_s126_standard  | `L_s43_dialect ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
         end
         module DisplayNamesFallback :
         sig
           type t = [ `L_s31_code  | `L_s94_none ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
         end
         module ResolvedDisplayNamesOptions :
         sig
           type t = [ `Intl_ResolvedDisplayNamesOptions ] intf
           [@@@js.stop ]
           type tags = [ `Intl_ResolvedDisplayNamesOptions ]
           [@@@js.start ]
           [@@@js.implem type tags = [ `Intl_ResolvedDisplayNamesOptions ]]
           type 'tags this =
             'tags intf constraint 'tags =
                         [> `Intl_ResolvedDisplayNamesOptions ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val get_locale : 'tags this -> UnicodeBCP47LocaleIdentifier.t
           val set_locale :
             'tags this -> UnicodeBCP47LocaleIdentifier.t -> unit
           val get_style : 'tags this -> RelativeTimeFormatStyle.t
           val set_style : 'tags this -> RelativeTimeFormatStyle.t -> unit
           val get_type : 'tags this -> DisplayNamesType.t
           val set_type : 'tags this -> DisplayNamesType.t -> unit
           val get_fallback : 'tags this -> DisplayNamesFallback.t
           val set_fallback : 'tags this -> DisplayNamesFallback.t -> unit
           val get_languageDisplay :
             'tags this -> DisplayNamesLanguageDisplay.t option
           val set_languageDisplay :
             'tags this -> DisplayNamesLanguageDisplay.t -> unit
           val create :
             locale:UnicodeBCP47LocaleIdentifier.t ->
               style:RelativeTimeFormatStyle.t ->
                 type_:DisplayNamesType.t ->
                   fallback:DisplayNamesFallback.t ->
                     ?languageDisplay:DisplayNamesLanguageDisplay.t ->
                       unit -> t
           val cast_from : 'tags this -> t
         end
         module LocaleHourCycleKey :
         sig
           type t = [ `L_s67_h11  | `L_s68_h12  | `L_s69_h23  | `L_s70_h24 ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
         end
         module LocaleCollationCaseFirst :
         sig
           type t = [ `L_s139_upper  | `L_s58_false  | `L_s82_lower ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
         end
         module LocaleOptions :
         sig
           type t = [ `Intl_LocaleOptions ] intf
           [@@@js.stop ]
           type tags = [ `Intl_LocaleOptions ]
           [@@@js.start ]
           [@@@js.implem type tags = [ `Intl_LocaleOptions ]]
           type 'tags this =
             'tags intf constraint 'tags = [> `Intl_LocaleOptions ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val get_baseName : 'tags this -> string option
           val set_baseName : 'tags this -> string -> unit
           val get_calendar : 'tags this -> string option
           val set_calendar : 'tags this -> string -> unit
           val get_caseFirst :
             'tags this -> LocaleCollationCaseFirst.t option
           val set_caseFirst :
             'tags this -> LocaleCollationCaseFirst.t -> unit
           val get_collation : 'tags this -> string option
           val set_collation : 'tags this -> string -> unit
           val get_hourCycle : 'tags this -> LocaleHourCycleKey.t option
           val set_hourCycle : 'tags this -> LocaleHourCycleKey.t -> unit
           val get_language : 'tags this -> string option
           val set_language : 'tags this -> string -> unit
           val get_numberingSystem : 'tags this -> string option
           val set_numberingSystem : 'tags this -> string -> unit
           val get_numeric : 'tags this -> bool option
           val set_numeric : 'tags this -> bool -> unit
           val get_region : 'tags this -> string option
           val set_region : 'tags this -> string -> unit
           val get_script : 'tags this -> string option
           val set_script : 'tags this -> string -> unit
           val create :
             ?baseName:string ->
               ?calendar:string ->
                 ?caseFirst:LocaleCollationCaseFirst.t ->
                   ?collation:string ->
                     ?hourCycle:LocaleHourCycleKey.t ->
                       ?language:string ->
                         ?numberingSystem:string ->
                           ?numeric:bool ->
                             ?region:string -> ?script:string -> unit -> t
           val cast_from : 'tags this -> t
         end
         module Locale :
         sig
           type t = [ `Intl_Locale  | `Intl_LocaleOptions ] intf
           [@@@js.stop ]
           type tags = [ `Intl_Locale  | `Intl_LocaleOptions ]
           [@@@js.start ]
           [@@@js.implem type tags = [ `Intl_Locale  | `Intl_LocaleOptions ]]
           type 'tags this = 'tags intf constraint 'tags = [> `Intl_Locale ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val get_baseName : 'tags this -> string
           val set_baseName : 'tags this -> string -> unit
           val get_language : 'tags this -> string
           val set_language : 'tags this -> string -> unit
           val maximize : 'tags this -> t
           val minimize : 'tags this -> t
           val toString : 'tags this -> BCP47LanguageTag.t
           val cast_from : 'tags this -> t
           val create :
             tag:[ `U1 of BCP47LanguageTag.t  | `U2 of t ] ->
               ?options:LocaleOptions.t -> unit -> t
         end
         module LocalesArgument :
         sig
           type t =
             (Locale.t, UnicodeBCP47LocaleIdentifier.t,
               (Locale.t, UnicodeBCP47LocaleIdentifier.t) union2 list) union3
               option
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
         end
         module DisplayNamesOptions :
         sig
           type t = [ `Intl_DisplayNamesOptions ] intf
           [@@@js.stop ]
           type tags = [ `Intl_DisplayNamesOptions ]
           [@@@js.start ]
           [@@@js.implem type tags = [ `Intl_DisplayNamesOptions ]]
           type 'tags this =
             'tags intf constraint 'tags = [> `Intl_DisplayNamesOptions ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val get_localeMatcher :
             'tags this -> RelativeTimeFormatLocaleMatcher.t option
           val set_localeMatcher :
             'tags this -> RelativeTimeFormatLocaleMatcher.t -> unit
           val get_style : 'tags this -> RelativeTimeFormatStyle.t option
           val set_style : 'tags this -> RelativeTimeFormatStyle.t -> unit
           val get_type : 'tags this -> DisplayNamesType.t
           val set_type : 'tags this -> DisplayNamesType.t -> unit
           val get_languageDisplay :
             'tags this -> DisplayNamesLanguageDisplay.t option
           val set_languageDisplay :
             'tags this -> DisplayNamesLanguageDisplay.t -> unit
           val get_fallback : 'tags this -> DisplayNamesFallback.t option
           val set_fallback : 'tags this -> DisplayNamesFallback.t -> unit
           val create :
             ?localeMatcher:RelativeTimeFormatLocaleMatcher.t ->
               ?style:RelativeTimeFormatStyle.t ->
                 type_:DisplayNamesType.t ->
                   ?languageDisplay:DisplayNamesLanguageDisplay.t ->
                     ?fallback:DisplayNamesFallback.t -> unit -> t
           val cast_from : 'tags this -> t
         end
         module DisplayNames :
         sig
           module AnonymousInterface4 :
           sig
             type t = private Ojs.t
             val t_to_js : t -> Ojs.t
             val t_of_js : Ojs.t -> t
             val get_localeMatcher :
               t -> RelativeTimeFormatLocaleMatcher.t option
             val set_localeMatcher :
               t -> RelativeTimeFormatLocaleMatcher.t -> unit
             val create :
               ?localeMatcher:RelativeTimeFormatLocaleMatcher.t -> unit -> t
           end
           type t = [ `Intl_DisplayNames ] intf
           [@@@js.stop ]
           type tags = [ `Intl_DisplayNames ]
           [@@@js.start ]
           [@@@js.implem type tags = [ `Intl_DisplayNames ]]
           type 'tags this =
             'tags intf constraint 'tags = [> `Intl_DisplayNames ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val of_ : 'tags this -> code:string -> string option
           val resolvedOptions : 'tags this -> ResolvedDisplayNamesOptions.t
           val cast_from : 'tags this -> t
           val prototype : unit -> t
           val create :
             locales:LocalesArgument.t -> options:DisplayNamesOptions.t -> t
           val supportedLocalesOf :
             ?locales:LocalesArgument.t ->
               ?options:AnonymousInterface4.t ->
                 unit -> BCP47LanguageTag.t list
         end
         module DateTimeFormatPartTypesRegistry :
         sig
           type t = [ `Intl_DateTimeFormatPartTypesRegistry ] intf
           [@@@js.stop ]
           type tags = [ `Intl_DateTimeFormatPartTypesRegistry ]
           [@@@js.start ]
           [@@@js.implem
             type tags = [ `Intl_DateTimeFormatPartTypesRegistry ]]
           type 'tags this =
             'tags intf constraint 'tags =
                         [> `Intl_DateTimeFormatPartTypesRegistry ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val get_fractionalSecond : 'tags this -> any
           val set_fractionalSecond : 'tags this -> any -> unit
           val get_unknown : 'tags this -> any
           val set_unknown : 'tags this -> any -> unit
           val get_day : 'tags this -> any
           val set_day : 'tags this -> any -> unit
           val get_dayPeriod : 'tags this -> any
           val set_dayPeriod : 'tags this -> any -> unit
           val get_era : 'tags this -> any
           val set_era : 'tags this -> any -> unit
           val get_hour : 'tags this -> any
           val set_hour : 'tags this -> any -> unit
           val get_literal : 'tags this -> any
           val set_literal : 'tags this -> any -> unit
           val get_minute : 'tags this -> any
           val set_minute : 'tags this -> any -> unit
           val get_month : 'tags this -> any
           val set_month : 'tags this -> any -> unit
           val get_second : 'tags this -> any
           val set_second : 'tags this -> any -> unit
           val get_timeZoneName : 'tags this -> any
           val set_timeZoneName : 'tags this -> any -> unit
           val get_weekday : 'tags this -> any
           val set_weekday : 'tags this -> any -> unit
           val get_year : 'tags this -> any
           val set_year : 'tags this -> any -> unit
           val create :
             fractionalSecond:any ->
               unknown:any ->
                 day:any ->
                   dayPeriod:any ->
                     era:any ->
                       hour:any ->
                         literal:any ->
                           minute:any ->
                             month:any ->
                               second:any ->
                                 timeZoneName:any ->
                                   weekday:any -> year:any -> unit -> t
           val cast_from : 'tags this -> t
         end
         module ResolvedDateTimeFormatOptions :
         sig
           type t = [ `Intl_ResolvedDateTimeFormatOptions ] intf
           [@@@js.stop ]
           type tags = [ `Intl_ResolvedDateTimeFormatOptions ]
           [@@@js.start ]
           [@@@js.implem type tags = [ `Intl_ResolvedDateTimeFormatOptions ]]
           type 'tags this =
             'tags intf constraint 'tags =
                         [> `Intl_ResolvedDateTimeFormatOptions ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val get_formatMatcher :
             'tags this -> [ `L_s25_basic  | `L_s26_best_fit ] option
           val set_formatMatcher :
             'tags this ->
               [ `U1 of [ `L_s25_basic ]  | `U2 of [ `L_s26_best_fit ] ] ->
                 unit
           val get_dateStyle :
             'tags this ->
               [ `L_s122_short  | `L_s63_full  | `L_s78_long 
               | `L_s84_medium ] option
           val set_dateStyle :
             'tags this ->
               [ `U1 of [ `L_s63_full ]  | `U2 of [ `L_s78_long ] 
               | `U3 of [ `L_s84_medium ]  | `U4 of [ `L_s122_short ] ] ->
                 unit
           val get_timeStyle :
             'tags this ->
               [ `L_s122_short  | `L_s63_full  | `L_s78_long 
               | `L_s84_medium ] option
           val set_timeStyle :
             'tags this ->
               [ `U1 of [ `L_s63_full ]  | `U2 of [ `L_s78_long ] 
               | `U3 of [ `L_s84_medium ]  | `U4 of [ `L_s122_short ] ] ->
                 unit
           val get_hourCycle :
             'tags this ->
               [ `L_s67_h11  | `L_s68_h12  | `L_s69_h23  | `L_s70_h24 ]
                 option
           val set_hourCycle :
             'tags this ->
               [ `U1 of [ `L_s67_h11 ]  | `U2 of [ `L_s68_h12 ] 
               | `U3 of [ `L_s69_h23 ]  | `U4 of [ `L_s70_h24 ] ] -> 
                 unit
           val get_dayPeriod :
             'tags this ->
               [ `L_s122_short  | `L_s78_long  | `L_s92_narrow ] option
           val set_dayPeriod :
             'tags this ->
               [ `U1 of [ `L_s92_narrow ]  | `U2 of [ `L_s122_short ] 
               | `U3 of [ `L_s78_long ] ] -> unit
           val get_fractionalSecondDigits :
             'tags this -> [ `L_n_1  | `L_n_2  | `L_n_3 ] option
           val set_fractionalSecondDigits :
             'tags this ->
               [ `U1 of [ `L_n_1 ]  | `U2 of [ `L_n_2 ] 
               | `U3 of [ `L_n_3 ] ] -> unit
           val get_locale : 'tags this -> string
           val set_locale : 'tags this -> string -> unit
           val get_calendar : 'tags this -> string
           val set_calendar : 'tags this -> string -> unit
           val get_numberingSystem : 'tags this -> string
           val set_numberingSystem : 'tags this -> string -> unit
           val get_timeZone : 'tags this -> string
           val set_timeZone : 'tags this -> string -> unit
           val get_hour12 : 'tags this -> bool option
           val set_hour12 : 'tags this -> bool -> unit
           val get_weekday : 'tags this -> string option
           val set_weekday : 'tags this -> string -> unit
           val get_era : 'tags this -> string option
           val set_era : 'tags this -> string -> unit
           val get_year : 'tags this -> string option
           val set_year : 'tags this -> string -> unit
           val get_month : 'tags this -> string option
           val set_month : 'tags this -> string -> unit
           val get_day : 'tags this -> string option
           val set_day : 'tags this -> string -> unit
           val get_hour : 'tags this -> string option
           val set_hour : 'tags this -> string -> unit
           val get_minute : 'tags this -> string option
           val set_minute : 'tags this -> string -> unit
           val get_second : 'tags this -> string option
           val set_second : 'tags this -> string -> unit
           val get_timeZoneName : 'tags this -> string option
           val set_timeZoneName : 'tags this -> string -> unit
           val create :
             ?formatMatcher:[ `L_s25_basic  | `L_s26_best_fit ] ->
               ?dateStyle:[ `L_s122_short  | `L_s63_full  | `L_s78_long 
                          | `L_s84_medium ]
                 ->
                 ?timeStyle:[ `L_s122_short  | `L_s63_full  | `L_s78_long 
                            | `L_s84_medium ]
                   ->
                   ?hourCycle:[ `L_s67_h11  | `L_s68_h12  | `L_s69_h23 
                              | `L_s70_h24 ]
                     ->
                     ?dayPeriod:[ `L_s122_short  | `L_s78_long 
                                | `L_s92_narrow ]
                       ->
                       ?fractionalSecondDigits:[ `L_n_1  | `L_n_2  | `L_n_3 ]
                         ->
                         locale:string ->
                           calendar:string ->
                             numberingSystem:string ->
                               timeZone:string ->
                                 ?hour12:bool ->
                                   ?weekday:string ->
                                     ?era:string ->
                                       ?year:string ->
                                         ?month:string ->
                                           ?day:string ->
                                             ?hour:string ->
                                               ?minute:string ->
                                                 ?second:string ->
                                                   ?timeZoneName:string ->
                                                     unit -> t
           val cast_from : 'tags this -> t
         end
         module DateTimeFormatPartTypes :
         sig
           type t =
             [ `L_s118_second  | `L_s132_timeZoneName  | `L_s138_unknown 
             | `L_s142_weekday  | `L_s145_year  | `L_s38_day 
             | `L_s39_dayPeriod  | `L_s53_era  | `L_s61_fractionalSecond 
             | `L_s71_hour  | `L_s76_literal  | `L_s86_minute 
             | `L_s88_month ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
         end
         module DateTimeFormatPart :
         sig
           type t = [ `Intl_DateTimeFormatPart ] intf
           [@@@js.stop ]
           type tags = [ `Intl_DateTimeFormatPart ]
           [@@@js.start ]
           [@@@js.implem type tags = [ `Intl_DateTimeFormatPart ]]
           type 'tags this =
             'tags intf constraint 'tags = [> `Intl_DateTimeFormatPart ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val get_type : 'tags this -> DateTimeFormatPartTypes.t
           val set_type : 'tags this -> DateTimeFormatPartTypes.t -> unit
           val get_value : 'tags this -> string
           val set_value : 'tags this -> string -> unit
           val create :
             type_:DateTimeFormatPartTypes.t -> value:string -> unit -> t
           val cast_from : 'tags this -> t
         end
         module DateTimeRangeFormatPart :
         sig
           type t =
             [ `Intl_DateTimeFormatPart  | `Intl_DateTimeRangeFormatPart ]
               intf
           [@@@js.stop ]
           type tags =
             [ `Intl_DateTimeFormatPart  | `Intl_DateTimeRangeFormatPart ]
           [@@@js.start ]
           [@@@js.implem
             type tags =
               [ `Intl_DateTimeFormatPart  | `Intl_DateTimeRangeFormatPart ]]
           type 'tags this =
             'tags intf constraint 'tags = [> `Intl_DateTimeRangeFormatPart ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val get_source :
             'tags this ->
               [ `L_s121_shared  | `L_s127_startRange  | `L_s50_endRange ]
           val set_source :
             'tags this ->
               [ `U1 of [ `L_s127_startRange ]  | `U2 of [ `L_s50_endRange ] 
               | `U3 of [ `L_s121_shared ] ] -> unit
           val create :
             source:[ `L_s121_shared  | `L_s127_startRange 
                    | `L_s50_endRange ]
               -> unit -> t
           val cast_from : 'tags this -> t
         end
         module DateTimeFormatOptions :
         sig
           type t = [ `Intl_DateTimeFormatOptions ] intf
           [@@@js.stop ]
           type tags = [ `Intl_DateTimeFormatOptions ]
           [@@@js.start ]
           [@@@js.implem type tags = [ `Intl_DateTimeFormatOptions ]]
           type 'tags this =
             'tags intf constraint 'tags = [> `Intl_DateTimeFormatOptions ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val get_formatMatcher :
             'tags this -> [ `L_s25_basic  | `L_s26_best_fit ] option
           val set_formatMatcher :
             'tags this ->
               [ `Undefined of undefined  | `U1 of [ `L_s25_basic ] 
               | `U2 of [ `L_s26_best_fit ] ] -> unit
           val get_dateStyle :
             'tags this ->
               [ `L_s122_short  | `L_s63_full  | `L_s78_long 
               | `L_s84_medium ] option
           val set_dateStyle :
             'tags this ->
               [ `Undefined of undefined  | `U1 of [ `L_s63_full ] 
               | `U2 of [ `L_s78_long ]  | `U3 of [ `L_s84_medium ] 
               | `U4 of [ `L_s122_short ] ] -> unit
           val get_timeStyle :
             'tags this ->
               [ `L_s122_short  | `L_s63_full  | `L_s78_long 
               | `L_s84_medium ] option
           val set_timeStyle :
             'tags this ->
               [ `Undefined of undefined  | `U1 of [ `L_s63_full ] 
               | `U2 of [ `L_s78_long ]  | `U3 of [ `L_s84_medium ] 
               | `U4 of [ `L_s122_short ] ] -> unit
           val get_dayPeriod :
             'tags this ->
               [ `L_s122_short  | `L_s78_long  | `L_s92_narrow ] option
           val set_dayPeriod :
             'tags this ->
               [ `Undefined of undefined  | `U1 of [ `L_s92_narrow ] 
               | `U2 of [ `L_s122_short ]  | `U3 of [ `L_s78_long ] ] -> 
                 unit
           val get_fractionalSecondDigits :
             'tags this -> [ `L_n_1  | `L_n_2  | `L_n_3 ] option
           val set_fractionalSecondDigits :
             'tags this ->
               [ `Undefined of undefined  | `U1 of [ `L_n_1 ] 
               | `U2 of [ `L_n_2 ]  | `U3 of [ `L_n_3 ] ] -> unit
           val get_calendar : 'tags this -> string option
           val set_calendar :
             'tags this ->
               [ `Undefined of undefined  | `U1 of string ] -> unit
           val get_dayPeriod' :
             'tags this ->
               [ `L_s122_short  | `L_s78_long  | `L_s92_narrow ] option
           val set_dayPeriod' :
             'tags this ->
               [ `Undefined of undefined  | `U1 of [ `L_s92_narrow ] 
               | `U2 of [ `L_s122_short ]  | `U3 of [ `L_s78_long ] ] -> 
                 unit
           val get_numberingSystem : 'tags this -> string option
           val set_numberingSystem :
             'tags this ->
               [ `Undefined of undefined  | `U1 of string ] -> unit
           val get_dateStyle' :
             'tags this ->
               [ `L_s122_short  | `L_s63_full  | `L_s78_long 
               | `L_s84_medium ] option
           val set_dateStyle' :
             'tags this ->
               [ `Undefined of undefined  | `U1 of [ `L_s63_full ] 
               | `U2 of [ `L_s78_long ]  | `U3 of [ `L_s84_medium ] 
               | `U4 of [ `L_s122_short ] ] -> unit
           val get_timeStyle' :
             'tags this ->
               [ `L_s122_short  | `L_s63_full  | `L_s78_long 
               | `L_s84_medium ] option
           val set_timeStyle' :
             'tags this ->
               [ `Undefined of undefined  | `U1 of [ `L_s63_full ] 
               | `U2 of [ `L_s78_long ]  | `U3 of [ `L_s84_medium ] 
               | `U4 of [ `L_s122_short ] ] -> unit
           val get_hourCycle :
             'tags this ->
               [ `L_s67_h11  | `L_s68_h12  | `L_s69_h23  | `L_s70_h24 ]
                 option
           val set_hourCycle :
             'tags this ->
               [ `Undefined of undefined  | `U1 of [ `L_s67_h11 ] 
               | `U2 of [ `L_s68_h12 ]  | `U3 of [ `L_s69_h23 ] 
               | `U4 of [ `L_s70_h24 ] ] -> unit
           val get_localeMatcher :
             'tags this -> [ `L_s26_best_fit  | `L_s81_lookup ] option
           val set_localeMatcher :
             'tags this ->
               [ `Undefined of undefined  | `U1 of [ `L_s26_best_fit ] 
               | `U2 of [ `L_s81_lookup ] ] -> unit
           val get_weekday :
             'tags this ->
               [ `L_s122_short  | `L_s78_long  | `L_s92_narrow ] option
           val set_weekday :
             'tags this ->
               [ `Undefined of undefined  | `U1 of [ `L_s78_long ] 
               | `U2 of [ `L_s122_short ]  | `U3 of [ `L_s92_narrow ] ] ->
                 unit
           val get_era :
             'tags this ->
               [ `L_s122_short  | `L_s78_long  | `L_s92_narrow ] option
           val set_era :
             'tags this ->
               [ `Undefined of undefined  | `U1 of [ `L_s78_long ] 
               | `U2 of [ `L_s122_short ]  | `U3 of [ `L_s92_narrow ] ] ->
                 unit
           val get_year :
             'tags this -> [ `L_s0_2_digit  | `L_s98_numeric ] option
           val set_year :
             'tags this ->
               [ `Undefined of undefined  | `U1 of [ `L_s98_numeric ] 
               | `U2 of [ `L_s0_2_digit ] ] -> unit
           val get_month :
             'tags this ->
               [ `L_s0_2_digit  | `L_s122_short  | `L_s78_long 
               | `L_s92_narrow  | `L_s98_numeric ] option
           val set_month :
             'tags this ->
               [ `Undefined of undefined  | `U1 of [ `L_s98_numeric ] 
               | `U2 of [ `L_s0_2_digit ]  | `U3 of [ `L_s78_long ] 
               | `U4 of [ `L_s122_short ]  | `U5 of [ `L_s92_narrow ] ] ->
                 unit
           val get_day :
             'tags this -> [ `L_s0_2_digit  | `L_s98_numeric ] option
           val set_day :
             'tags this ->
               [ `Undefined of undefined  | `U1 of [ `L_s98_numeric ] 
               | `U2 of [ `L_s0_2_digit ] ] -> unit
           val get_hour :
             'tags this -> [ `L_s0_2_digit  | `L_s98_numeric ] option
           val set_hour :
             'tags this ->
               [ `Undefined of undefined  | `U1 of [ `L_s98_numeric ] 
               | `U2 of [ `L_s0_2_digit ] ] -> unit
           val get_minute :
             'tags this -> [ `L_s0_2_digit  | `L_s98_numeric ] option
           val set_minute :
             'tags this ->
               [ `Undefined of undefined  | `U1 of [ `L_s98_numeric ] 
               | `U2 of [ `L_s0_2_digit ] ] -> unit
           val get_second :
             'tags this -> [ `L_s0_2_digit  | `L_s98_numeric ] option
           val set_second :
             'tags this ->
               [ `Undefined of undefined  | `U1 of [ `L_s98_numeric ] 
               | `U2 of [ `L_s0_2_digit ] ] -> unit
           val get_timeZoneName :
             'tags this ->
               [ `L_s122_short  | `L_s123_shortGeneric 
               | `L_s124_shortOffset  | `L_s78_long  | `L_s79_longGeneric 
               | `L_s80_longOffset ] option
           val set_timeZoneName :
             'tags this ->
               [ `Undefined of undefined  | `U1 of [ `L_s122_short ] 
               | `U2 of [ `L_s78_long ]  | `U3 of [ `L_s124_shortOffset ] 
               | `U4 of [ `L_s80_longOffset ] 
               | `U5 of [ `L_s123_shortGeneric ] 
               | `U6 of [ `L_s79_longGeneric ] ] -> unit
           val get_formatMatcher' :
             'tags this -> [ `L_s25_basic  | `L_s26_best_fit ] option
           val set_formatMatcher' :
             'tags this ->
               [ `Undefined of undefined  | `U1 of [ `L_s26_best_fit ] 
               | `U2 of [ `L_s25_basic ] ] -> unit
           val get_hour12 : 'tags this -> bool option
           val set_hour12 :
             'tags this -> [ `Undefined of undefined  | `U1 of bool ] -> unit
           val get_timeZone : 'tags this -> string option
           val set_timeZone :
             'tags this ->
               [ `Undefined of undefined  | `U1 of string ] -> unit
           val create :
             ?formatMatcher:[ `L_s25_basic  | `L_s26_best_fit ] ->
               ?dateStyle:[ `L_s122_short  | `L_s63_full  | `L_s78_long 
                          | `L_s84_medium ]
                 ->
                 ?timeStyle:[ `L_s122_short  | `L_s63_full  | `L_s78_long 
                            | `L_s84_medium ]
                   ->
                   ?dayPeriod:[ `L_s122_short  | `L_s78_long 
                              | `L_s92_narrow ]
                     ->
                     ?fractionalSecondDigits:[ `L_n_1  | `L_n_2  | `L_n_3 ]
                       ->
                       ?calendar:string ->
                         ?numberingSystem:string ->
                           ?hourCycle:[ `L_s67_h11  | `L_s68_h12 
                                      | `L_s69_h23  | `L_s70_h24 ]
                             ->
                             ?localeMatcher:[ `L_s26_best_fit 
                                            | `L_s81_lookup ]
                               ->
                               ?weekday:[ `L_s122_short  | `L_s78_long 
                                        | `L_s92_narrow ]
                                 ->
                                 ?era:[ `L_s122_short  | `L_s78_long 
                                      | `L_s92_narrow ]
                                   ->
                                   ?year:[ `L_s0_2_digit  | `L_s98_numeric ]
                                     ->
                                     ?month:[ `L_s0_2_digit  | `L_s122_short 
                                            | `L_s78_long  | `L_s92_narrow 
                                            | `L_s98_numeric ]
                                       ->
                                       ?day:[ `L_s0_2_digit 
                                            | `L_s98_numeric ]
                                         ->
                                         ?hour:[ `L_s0_2_digit 
                                               | `L_s98_numeric ]
                                           ->
                                           ?minute:[ `L_s0_2_digit 
                                                   | `L_s98_numeric ]
                                             ->
                                             ?second:[ `L_s0_2_digit 
                                                     | `L_s98_numeric ]
                                               ->
                                               ?timeZoneName:[ `L_s122_short 
                                                             | `L_s123_shortGeneric
                                                                  | `L_s124_shortOffset
                                                                     | 
                                                               `L_s78_long 
                                                             | `L_s79_longGeneric
                                                                  | `L_s80_longOffset
                                                                    ]
                                                 ->
                                                 ?hour12:bool ->
                                                   ?timeZone:string ->
                                                     unit -> t
           val cast_from : 'tags this -> t
         end
         module DateTimeFormat :
         sig
           type t = [ `Intl_DateTimeFormat ] intf
           [@@@js.stop ]
           type tags = [ `Intl_DateTimeFormat ]
           [@@@js.start ]
           [@@@js.implem type tags = [ `Intl_DateTimeFormat ]]
           type 'tags this =
             'tags intf constraint 'tags = [> `Intl_DateTimeFormat ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val formatRange :
             'tags this ->
               startDate:[ `U1 of Date.t  | `U2 of float  | `U3 of bigint ]
                 ->
                 endDate:[ `U1 of Date.t  | `U2 of float  | `U3 of bigint ]
                   -> string
           val formatRangeToParts :
             'tags this ->
               startDate:[ `U1 of Date.t  | `U2 of float  | `U3 of bigint ]
                 ->
                 endDate:[ `U1 of Date.t  | `U2 of float  | `U3 of bigint ]
                   -> DateTimeRangeFormatPart.t list
           val formatToParts :
             'tags this ->
               ?date:[ `U1 of Date.t  | `U2 of float ] ->
                 unit -> DateTimeFormatPart.t list
           val format :
             'tags this ->
               ?date:[ `U1 of Date.t  | `U2 of float ] -> unit -> string
           val resolvedOptions :
             'tags this -> ResolvedDateTimeFormatOptions.t
           val cast_from : 'tags this -> t
           val create :
             ?locales:[ `U1 of string  | `U2 of string list ] ->
               ?options:DateTimeFormatOptions.t -> unit -> t
           val invoke :
             ?locales:[ `U1 of string  | `U2 of string list ] ->
               ?options:DateTimeFormatOptions.t -> unit -> t
           val supportedLocalesOf :
             locales:[ `U1 of string  | `U2 of string list ] ->
               ?options:DateTimeFormatOptions.t -> unit -> string list
           val prototype : unit -> t
         end
         module ResolvedCollatorOptions :
         sig
           type t = [ `Intl_ResolvedCollatorOptions ] intf
           [@@@js.stop ]
           type tags = [ `Intl_ResolvedCollatorOptions ]
           [@@@js.start ]
           [@@@js.implem type tags = [ `Intl_ResolvedCollatorOptions ]]
           type 'tags this =
             'tags intf constraint 'tags = [> `Intl_ResolvedCollatorOptions ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val get_locale : 'tags this -> string
           val set_locale : 'tags this -> string -> unit
           val get_usage : 'tags this -> string
           val set_usage : 'tags this -> string -> unit
           val get_sensitivity : 'tags this -> string
           val set_sensitivity : 'tags this -> string -> unit
           val get_ignorePunctuation : 'tags this -> bool
           val set_ignorePunctuation : 'tags this -> bool -> unit
           val get_collation : 'tags this -> string
           val set_collation : 'tags this -> string -> unit
           val get_caseFirst : 'tags this -> string
           val set_caseFirst : 'tags this -> string -> unit
           val get_numeric : 'tags this -> bool
           val set_numeric : 'tags this -> bool -> unit
           val create :
             locale:string ->
               usage:string ->
                 sensitivity:string ->
                   ignorePunctuation:bool ->
                     collation:string ->
                       caseFirst:string -> numeric:bool -> unit -> t
           val cast_from : 'tags this -> t
         end
         module CollatorOptions :
         sig
           type t = [ `Intl_CollatorOptions ] intf
           [@@@js.stop ]
           type tags = [ `Intl_CollatorOptions ]
           [@@@js.start ]
           [@@@js.implem type tags = [ `Intl_CollatorOptions ]]
           type 'tags this =
             'tags intf constraint 'tags = [> `Intl_CollatorOptions ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val get_usage :
             'tags this -> [ `L_s116_search  | `L_s125_sort ] option
           val set_usage :
             'tags this ->
               [ `Undefined of undefined  | `U1 of [ `L_s125_sort ] 
               | `U2 of [ `L_s116_search ] ] -> unit
           val get_localeMatcher :
             'tags this -> [ `L_s26_best_fit  | `L_s81_lookup ] option
           val set_localeMatcher :
             'tags this ->
               [ `Undefined of undefined  | `U1 of [ `L_s81_lookup ] 
               | `U2 of [ `L_s26_best_fit ] ] -> unit
           val get_numeric : 'tags this -> bool option
           val set_numeric :
             'tags this -> [ `Undefined of undefined  | `U1 of bool ] -> unit
           val get_caseFirst :
             'tags this ->
               [ `L_s139_upper  | `L_s58_false  | `L_s82_lower ] option
           val set_caseFirst :
             'tags this ->
               [ `Undefined of undefined  | `U1 of [ `L_s139_upper ] 
               | `U2 of [ `L_s82_lower ]  | `U3 of [ `L_s58_false ] ] -> 
                 unit
           val get_sensitivity :
             'tags this ->
               [ `L_s140_variant  | `L_s21_accent  | `L_s24_base 
               | `L_s30_case ] option
           val set_sensitivity :
             'tags this ->
               [ `Undefined of undefined  | `U1 of [ `L_s24_base ] 
               | `U2 of [ `L_s21_accent ]  | `U3 of [ `L_s30_case ] 
               | `U4 of [ `L_s140_variant ] ] -> unit
           val get_collation :
             'tags this ->
               [ `L_s105_phonebk  | `L_s106_phonetic  | `L_s107_pinyin 
               | `L_s111_reformed  | `L_s117_searchjl  | `L_s129_stroke 
               | `L_s134_trad  | `L_s136_unihan  | `L_s148_zhuyin 
               | `L_s27_big5han  | `L_s34_compat  | `L_s44_dict 
               | `L_s45_direct  | `L_s47_ducet  | `L_s49_emoji  | `L_s52_eor 
               | `L_s64_gb2312 ] option
           val set_collation :
             'tags this ->
               [ `Undefined of undefined  | `U1 of [ `L_s27_big5han ] 
               | `U2 of [ `L_s34_compat ]  | `U3 of [ `L_s44_dict ] 
               | `U4 of [ `L_s45_direct ]  | `U5 of [ `L_s47_ducet ] 
               | `U6 of [ `L_s49_emoji ]  | `U7 of [ `L_s52_eor ] 
               | `U8 of [ `L_s64_gb2312 ]  | `U9 of [ `L_s105_phonebk ] 
               | `U10 of [ `L_s106_phonetic ]  | `U11 of [ `L_s107_pinyin ] 
               | `U12 of [ `L_s111_reformed ] 
               | `U13 of [ `L_s117_searchjl ]  | `U14 of [ `L_s129_stroke ] 
               | `U15 of [ `L_s134_trad ]  | `U16 of [ `L_s136_unihan ] 
               | `U17 of [ `L_s148_zhuyin ] ] -> unit
           val get_ignorePunctuation : 'tags this -> bool option
           val set_ignorePunctuation :
             'tags this -> [ `Undefined of undefined  | `U1 of bool ] -> unit
           val create :
             ?usage:[ `L_s116_search  | `L_s125_sort ] ->
               ?localeMatcher:[ `L_s26_best_fit  | `L_s81_lookup ] ->
                 ?numeric:bool ->
                   ?caseFirst:[ `L_s139_upper  | `L_s58_false 
                              | `L_s82_lower ]
                     ->
                     ?sensitivity:[ `L_s140_variant  | `L_s21_accent 
                                  | `L_s24_base  | `L_s30_case ]
                       ->
                       ?collation:[ `L_s105_phonebk  | `L_s106_phonetic 
                                  | `L_s107_pinyin  | `L_s111_reformed 
                                  | `L_s117_searchjl  | `L_s129_stroke 
                                  | `L_s134_trad  | `L_s136_unihan 
                                  | `L_s148_zhuyin  | `L_s27_big5han 
                                  | `L_s34_compat  | `L_s44_dict 
                                  | `L_s45_direct  | `L_s47_ducet 
                                  | `L_s49_emoji  | `L_s52_eor 
                                  | `L_s64_gb2312 ]
                         -> ?ignorePunctuation:bool -> unit -> t
           val cast_from : 'tags this -> t
         end
         module Collator :
         sig
           type t = [ `Intl_Collator ] intf
           [@@@js.stop ]
           type tags = [ `Intl_Collator ]
           [@@@js.start ]
           [@@@js.implem type tags = [ `Intl_Collator ]]
           type 'tags this =
             'tags intf constraint 'tags = [> `Intl_Collator ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val compare : 'tags this -> x:string -> y:string -> float
           val resolvedOptions : 'tags this -> ResolvedCollatorOptions.t
           val cast_from : 'tags this -> t
           val create :
             ?locales:[ `U1 of string  | `U2 of string list ] ->
               ?options:CollatorOptions.t -> unit -> t
           val invoke :
             ?locales:[ `U1 of string  | `U2 of string list ] ->
               ?options:CollatorOptions.t -> unit -> t
           val supportedLocalesOf :
             locales:[ `U1 of string  | `U2 of string list ] ->
               ?options:CollatorOptions.t -> unit -> string list
         end
         val supportedValuesOf :
           [ `L_s131_timeZone  | `L_s137_unit  | `L_s28_calendar 
           | `L_s32_collation  | `L_s36_currency  | `L_s97_numberingSystem ]
             -> string list
       end =
  struct
    module SegmentData =
      struct
        type t = [ `Intl_SegmentData ] intf
        let rec t_of_js : Ojs.t -> t = Obj.magic
        and t_to_js : t -> Ojs.t = Obj.magic
        type tags = [ `Intl_SegmentData ]
        type 'tags this =
          'tags intf constraint 'tags = [> `Intl_SegmentData ]
        let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
          =
          fun (type __tags) ->
            fun (__tags_of_js : Ojs.t -> __tags) ->
              fun (x2219 : Ojs.t) -> intf_of_js __tags_of_js x2219
        and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
          fun (type __tags) ->
            fun (__tags_to_js : __tags -> Ojs.t) ->
              fun (x2217 : __tags intf) -> intf_to_js __tags_to_js x2217
        let (get_segment : 'tags this -> string) =
          fun (x2221 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2221) "segment")
        let (set_segment : 'tags this -> string -> unit) =
          fun (x2223 : 'tags this) ->
            fun (x2224 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2223) "segment"
                (Ojs.string_to_js x2224)
        let (get_index : 'tags this -> float) =
          fun (x2226 : 'tags this) ->
            Ojs.float_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2226) "index")
        let (set_index : 'tags this -> float -> unit) =
          fun (x2228 : 'tags this) ->
            fun (x2229 : float) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2228) "index"
                (Ojs.float_to_js x2229)
        let (get_input : 'tags this -> string) =
          fun (x2231 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2231) "input")
        let (set_input : 'tags this -> string -> unit) =
          fun (x2233 : 'tags this) ->
            fun (x2234 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2233) "input"
                (Ojs.string_to_js x2234)
        let (get_isWordLike : 'tags this -> bool option) =
          fun (x2236 : 'tags this) ->
            Ojs.option_of_js Ojs.bool_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2236) "isWordLike")
        let (set_isWordLike : 'tags this -> bool -> unit) =
          fun (x2239 : 'tags this) ->
            fun (x2240 : bool) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2239) "isWordLike"
                (Ojs.bool_to_js x2240)
        let (create :
          segment:string ->
            index:float -> input:string -> ?isWordLike:bool -> unit -> t)
          =
          fun ~segment:(x2242 : string) ->
            fun ~index:(x2243 : float) ->
              fun ~input:(x2244 : string) ->
                fun ?isWordLike:(x2245 : bool option) ->
                  fun () ->
                    let x2246 = Ojs.empty_obj () in
                    Ojs.set_prop_ascii x2246 "segment"
                      (Ojs.string_to_js x2242);
                    Ojs.set_prop_ascii x2246 "index" (Ojs.float_to_js x2243);
                    Ojs.set_prop_ascii x2246 "input" (Ojs.string_to_js x2244);
                    (match x2245 with
                     | Some x2247 ->
                         Ojs.set_prop_ascii x2246 "isWordLike"
                           (Ojs.bool_to_js x2247)
                     | None -> ());
                    t_of_js x2246
        let cast_from = Obj.magic
      end
    module Segments =
      struct
        type t = [ `Intl_Segments ] intf
        let rec t_of_js : Ojs.t -> t = Obj.magic
        and t_to_js : t -> Ojs.t = Obj.magic
        type tags = [ `Intl_Segments ]
        type 'tags this = 'tags intf constraint 'tags = [> `Intl_Segments ]
        let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
          =
          fun (type __tags) ->
            fun (__tags_of_js : Ojs.t -> __tags) ->
              fun (x2250 : Ojs.t) -> intf_of_js __tags_of_js x2250
        and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
          fun (type __tags) ->
            fun (__tags_to_js : __tags -> Ojs.t) ->
              fun (x2248 : __tags intf) -> intf_to_js __tags_to_js x2248
        let (containing :
          'tags this -> ?codeUnitIndex:float -> unit -> SegmentData.t) =
          fun (x2255 : 'tags this) ->
            fun ?codeUnitIndex:(x2252 : float option) ->
              fun () ->
                SegmentData.t_of_js
                  (let x2257 = this_to_js Obj.magic x2255 in
                   Ojs.call (Ojs.get_prop_ascii x2257 "containing") "apply"
                     [|x2257;((let x2253 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               (match x2252 with
                                | Some x2254 ->
                                    ignore
                                      (Ojs.call x2253 "push"
                                         [|(Ojs.float_to_js x2254)|])
                                | None -> ());
                               x2253))|])
        let cast_from = Obj.magic
      end
    module SegmenterOptions =
      struct
        type t = [ `Intl_SegmenterOptions ] intf
        let rec t_of_js : Ojs.t -> t = Obj.magic
        and t_to_js : t -> Ojs.t = Obj.magic
        type tags = [ `Intl_SegmenterOptions ]
        type 'tags this =
          'tags intf constraint 'tags = [> `Intl_SegmenterOptions ]
        let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
          =
          fun (type __tags) ->
            fun (__tags_of_js : Ojs.t -> __tags) ->
              fun (x2260 : Ojs.t) -> intf_of_js __tags_of_js x2260
        and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
          fun (type __tags) ->
            fun (__tags_to_js : __tags -> Ojs.t) ->
              fun (x2258 : __tags intf) -> intf_to_js __tags_to_js x2258
        let (get_localeMatcher :
          'tags this -> [ `L_s26_best_fit  | `L_s81_lookup ] option) =
          fun (x2262 : 'tags this) ->
            Ojs.option_of_js
              (fun (x2264 : Ojs.t) ->
                 let x2265 = x2264 in
                 match Ojs.string_of_js x2265 with
                 | "best fit" -> `L_s26_best_fit
                 | "lookup" -> `L_s81_lookup
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2262)
                 "localeMatcher")
        let (set_localeMatcher :
          'tags this ->
            [ `Undefined of undefined  | `U1 of [ `L_s26_best_fit ] 
            | `U2 of [ `L_s81_lookup ] ] -> unit)
          =
          fun (x2266 : 'tags this) ->
            fun
              (x2267 :
                [ `Undefined of undefined  | `U1 of [ `L_s26_best_fit ] 
                | `U2 of [ `L_s81_lookup ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2266) "localeMatcher"
                (match x2267 with
                 | `Undefined x2268 -> undefined_to_js x2268
                 | `U1 x2269 ->
                     (match x2269 with
                      | `L_s26_best_fit -> Ojs.string_to_js "best fit")
                 | `U2 x2270 ->
                     (match x2270 with
                      | `L_s81_lookup -> Ojs.string_to_js "lookup"))
        let (get_granularity :
          'tags this ->
            [ `L_s120_sentence  | `L_s144_word  | `L_s65_grapheme ] option)
          =
          fun (x2272 : 'tags this) ->
            Ojs.option_of_js
              (fun (x2274 : Ojs.t) ->
                 let x2275 = x2274 in
                 match Ojs.string_of_js x2275 with
                 | "sentence" -> `L_s120_sentence
                 | "word" -> `L_s144_word
                 | "grapheme" -> `L_s65_grapheme
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2272) "granularity")
        let (set_granularity :
          'tags this ->
            [ `Undefined of undefined  | `U1 of [ `L_s65_grapheme ] 
            | `U2 of [ `L_s144_word ]  | `U3 of [ `L_s120_sentence ] ] ->
              unit)
          =
          fun (x2276 : 'tags this) ->
            fun
              (x2277 :
                [ `Undefined of undefined  | `U1 of [ `L_s65_grapheme ] 
                | `U2 of [ `L_s144_word ]  | `U3 of [ `L_s120_sentence ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2276) "granularity"
                (match x2277 with
                 | `Undefined x2278 -> undefined_to_js x2278
                 | `U1 x2279 ->
                     (match x2279 with
                      | `L_s65_grapheme -> Ojs.string_to_js "grapheme")
                 | `U2 x2280 ->
                     (match x2280 with
                      | `L_s144_word -> Ojs.string_to_js "word")
                 | `U3 x2281 ->
                     (match x2281 with
                      | `L_s120_sentence -> Ojs.string_to_js "sentence"))
        let (create :
          ?localeMatcher:[ `L_s26_best_fit  | `L_s81_lookup ] ->
            ?granularity:[ `L_s120_sentence  | `L_s144_word 
                         | `L_s65_grapheme ]
              -> unit -> t)
          =
          fun
            ?localeMatcher:(x2283 :
                             [ `L_s26_best_fit  | `L_s81_lookup ] option)
            ->
            fun
              ?granularity:(x2284 :
                             [ `L_s120_sentence  | `L_s144_word 
                             | `L_s65_grapheme ] option)
              ->
              fun () ->
                let x2285 = Ojs.empty_obj () in
                (match x2283 with
                 | Some x2287 ->
                     Ojs.set_prop_ascii x2285 "localeMatcher"
                       (match x2287 with
                        | `L_s26_best_fit -> Ojs.string_to_js "best fit"
                        | `L_s81_lookup -> Ojs.string_to_js "lookup")
                 | None -> ());
                (match x2284 with
                 | Some x2286 ->
                     Ojs.set_prop_ascii x2285 "granularity"
                       (match x2286 with
                        | `L_s120_sentence -> Ojs.string_to_js "sentence"
                        | `L_s144_word -> Ojs.string_to_js "word"
                        | `L_s65_grapheme -> Ojs.string_to_js "grapheme")
                 | None -> ());
                t_of_js x2285
        let cast_from = Obj.magic
      end
    module ResolvedSegmenterOptions =
      struct
        type t = [ `Intl_ResolvedSegmenterOptions ] intf
        let rec t_of_js : Ojs.t -> t = Obj.magic
        and t_to_js : t -> Ojs.t = Obj.magic
        type tags = [ `Intl_ResolvedSegmenterOptions ]
        type 'tags this =
          'tags intf constraint 'tags = [> `Intl_ResolvedSegmenterOptions ]
        let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
          =
          fun (type __tags) ->
            fun (__tags_of_js : Ojs.t -> __tags) ->
              fun (x2290 : Ojs.t) -> intf_of_js __tags_of_js x2290
        and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
          fun (type __tags) ->
            fun (__tags_to_js : __tags -> Ojs.t) ->
              fun (x2288 : __tags intf) -> intf_to_js __tags_to_js x2288
        let (get_locale : 'tags this -> string) =
          fun (x2292 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2292) "locale")
        let (set_locale : 'tags this -> string -> unit) =
          fun (x2294 : 'tags this) ->
            fun (x2295 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2294) "locale"
                (Ojs.string_to_js x2295)
        let (get_granularity :
          'tags this ->
            [ `L_s120_sentence  | `L_s144_word  | `L_s65_grapheme ])
          =
          fun (x2297 : 'tags this) ->
            let x2299 =
              Ojs.get_prop_ascii (this_to_js Obj.magic x2297) "granularity" in
            match Ojs.string_of_js x2299 with
            | "sentence" -> `L_s120_sentence
            | "word" -> `L_s144_word
            | "grapheme" -> `L_s65_grapheme
            | _ -> assert false
        let (set_granularity :
          'tags this ->
            [ `U1 of [ `L_s65_grapheme ]  | `U2 of [ `L_s144_word ] 
            | `U3 of [ `L_s120_sentence ] ] -> unit)
          =
          fun (x2300 : 'tags this) ->
            fun
              (x2301 :
                [ `U1 of [ `L_s65_grapheme ]  | `U2 of [ `L_s144_word ] 
                | `U3 of [ `L_s120_sentence ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2300) "granularity"
                (match x2301 with
                 | `U1 x2302 ->
                     (match x2302 with
                      | `L_s65_grapheme -> Ojs.string_to_js "grapheme")
                 | `U2 x2303 ->
                     (match x2303 with
                      | `L_s144_word -> Ojs.string_to_js "word")
                 | `U3 x2304 ->
                     (match x2304 with
                      | `L_s120_sentence -> Ojs.string_to_js "sentence"))
        let (create :
          locale:string ->
            granularity:[ `L_s120_sentence  | `L_s144_word 
                        | `L_s65_grapheme ]
              -> unit -> t)
          =
          fun ~locale:(x2306 : string) ->
            fun
              ~granularity:(x2307 :
                             [ `L_s120_sentence  | `L_s144_word 
                             | `L_s65_grapheme ])
              ->
              fun () ->
                let x2308 = Ojs.empty_obj () in
                Ojs.set_prop_ascii x2308 "locale" (Ojs.string_to_js x2306);
                Ojs.set_prop_ascii x2308 "granularity"
                  (match x2307 with
                   | `L_s120_sentence -> Ojs.string_to_js "sentence"
                   | `L_s144_word -> Ojs.string_to_js "word"
                   | `L_s65_grapheme -> Ojs.string_to_js "grapheme");
                t_of_js x2308
        let cast_from = Obj.magic
      end
    module BCP47LanguageTag =
      struct
        type t = string
        let rec t_of_js : Ojs.t -> t =
          fun (x2310 : Ojs.t) -> Ojs.string_of_js x2310
        and t_to_js : t -> Ojs.t =
          fun (x2309 : string) -> Ojs.string_to_js x2309
      end
    module Segmenter =
      struct
        type t = [ `Intl_Segmenter ] intf
        let rec t_of_js : Ojs.t -> t = Obj.magic
        and t_to_js : t -> Ojs.t = Obj.magic
        type tags = [ `Intl_Segmenter ]
        type 'tags this = 'tags intf constraint 'tags = [> `Intl_Segmenter ]
        let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
          =
          fun (type __tags) ->
            fun (__tags_of_js : Ojs.t -> __tags) ->
              fun (x2313 : Ojs.t) -> intf_of_js __tags_of_js x2313
        and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
          fun (type __tags) ->
            fun (__tags_to_js : __tags -> Ojs.t) ->
              fun (x2311 : __tags intf) -> intf_to_js __tags_to_js x2311
        let (segment : 'tags this -> input:string -> Segments.t) =
          fun (x2316 : 'tags this) ->
            fun ~input:(x2315 : string) ->
              Segments.t_of_js
                (Ojs.call (this_to_js Obj.magic x2316) "segment"
                   [|(Ojs.string_to_js x2315)|])
        let (resolvedOptions : 'tags this -> ResolvedSegmenterOptions.t) =
          fun (x2318 : 'tags this) ->
            ResolvedSegmenterOptions.t_of_js
              (Ojs.call (this_to_js Obj.magic x2318) "resolvedOptions" [||])
        let cast_from = Obj.magic
        let (prototype : unit -> t) =
          fun () ->
            t_of_js
              (Ojs.get_prop_ascii
                 (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Intl")
                    "Segmenter") "prototype")
        let (create :
          ?locales:[ `U1 of BCP47LanguageTag.t 
                   | `U2 of BCP47LanguageTag.t list ]
            -> ?options:SegmenterOptions.t -> unit -> t)
          =
          fun
            ?locales:(x2320 :
                       [ `U1 of BCP47LanguageTag.t 
                       | `U2 of BCP47LanguageTag.t list ] option)
            ->
            fun ?options:(x2321 : SegmenterOptions.t option) ->
              fun () ->
                t_of_js
                  (Ojs.new_obj_arr
                     (Ojs.get_prop_ascii
                        (Ojs.get_prop_ascii Ojs.global "Intl") "Segmenter")
                     (let x2322 =
                        Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                          [||] in
                      (match x2320 with
                       | Some x2324 ->
                           ignore
                             (Ojs.call x2322 "push"
                                [|((match x2324 with
                                    | `U1 x2325 ->
                                        BCP47LanguageTag.t_to_js x2325
                                    | `U2 x2326 ->
                                        Ojs.list_to_js
                                          BCP47LanguageTag.t_to_js x2326))|])
                       | None -> ());
                      (match x2321 with
                       | Some x2323 ->
                           ignore
                             (Ojs.call x2322 "push"
                                [|(SegmenterOptions.t_to_js x2323)|])
                       | None -> ());
                      x2322))
        let (supportedLocalesOf :
          locales:[ `U1 of BCP47LanguageTag.t 
                  | `U2 of BCP47LanguageTag.t list ]
            ->
            ?options:(SegmenterOptions.t, [ `L_s77_localeMatcher ]) Pick.t ->
              unit -> BCP47LanguageTag.t list)
          =
          fun
            ~locales:(x2328 :
                       [ `U1 of BCP47LanguageTag.t 
                       | `U2 of BCP47LanguageTag.t list ])
            ->
            fun
              ?options:(x2329 :
                         (SegmenterOptions.t, [ `L_s77_localeMatcher ])
                           Pick.t option)
              ->
              fun () ->
                Ojs.list_of_js BCP47LanguageTag.t_of_js
                  (let x2337 =
                     Ojs.get_prop_ascii
                       (Ojs.get_prop_ascii Ojs.global "Intl") "Segmenter" in
                   Ojs.call (Ojs.get_prop_ascii x2337 "supportedLocalesOf")
                     "apply"
                     [|x2337;((let x2330 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x2330 "push"
                                    [|((match x2328 with
                                        | `U1 x2334 ->
                                            BCP47LanguageTag.t_to_js x2334
                                        | `U2 x2335 ->
                                            Ojs.list_to_js
                                              BCP47LanguageTag.t_to_js x2335))|]);
                               (match x2329 with
                                | Some x2331 ->
                                    ignore
                                      (Ojs.call x2330 "push"
                                         [|(Pick.t_to_js
                                              SegmenterOptions.t_to_js
                                              (fun
                                                 (x2333 :
                                                   [ `L_s77_localeMatcher ])
                                                 ->
                                                 match x2333 with
                                                 | `L_s77_localeMatcher ->
                                                     Ojs.string_to_js
                                                       "localeMatcher") x2331)|])
                                | None -> ());
                               x2330))|])
      end
    module RelativeTimeFormatNumeric =
      struct
        type t = [ `L_s22_always  | `L_s23_auto ]
        let rec t_of_js : Ojs.t -> t =
          fun (x2340 : Ojs.t) ->
            let x2341 = x2340 in
            match Ojs.string_of_js x2341 with
            | "always" -> `L_s22_always
            | "auto" -> `L_s23_auto
            | _ -> assert false
        and t_to_js : t -> Ojs.t =
          fun (x2339 : [ `L_s22_always  | `L_s23_auto ]) ->
            match x2339 with
            | `L_s22_always -> Ojs.string_to_js "always"
            | `L_s23_auto -> Ojs.string_to_js "auto"
      end
    module UnicodeBCP47LocaleIdentifier =
      struct
        type t = string
        let rec t_of_js : Ojs.t -> t =
          fun (x2343 : Ojs.t) -> Ojs.string_of_js x2343
        and t_to_js : t -> Ojs.t =
          fun (x2342 : string) -> Ojs.string_to_js x2342
      end
    module RelativeTimeFormatStyle =
      struct
        type t = [ `L_s122_short  | `L_s78_long  | `L_s92_narrow ]
        let rec t_of_js : Ojs.t -> t =
          fun (x2345 : Ojs.t) ->
            let x2346 = x2345 in
            match Ojs.string_of_js x2346 with
            | "short" -> `L_s122_short
            | "long" -> `L_s78_long
            | "narrow" -> `L_s92_narrow
            | _ -> assert false
        and t_to_js : t -> Ojs.t =
          fun (x2344 : [ `L_s122_short  | `L_s78_long  | `L_s92_narrow ]) ->
            match x2344 with
            | `L_s122_short -> Ojs.string_to_js "short"
            | `L_s78_long -> Ojs.string_to_js "long"
            | `L_s92_narrow -> Ojs.string_to_js "narrow"
      end
    module ResolvedRelativeTimeFormatOptions =
      struct
        type t = [ `Intl_ResolvedRelativeTimeFormatOptions ] intf
        let rec t_of_js : Ojs.t -> t = Obj.magic
        and t_to_js : t -> Ojs.t = Obj.magic
        type tags = [ `Intl_ResolvedRelativeTimeFormatOptions ]
        type 'tags this =
          'tags intf constraint 'tags =
                      [> `Intl_ResolvedRelativeTimeFormatOptions ]
        let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
          =
          fun (type __tags) ->
            fun (__tags_of_js : Ojs.t -> __tags) ->
              fun (x2349 : Ojs.t) -> intf_of_js __tags_of_js x2349
        and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
          fun (type __tags) ->
            fun (__tags_to_js : __tags -> Ojs.t) ->
              fun (x2347 : __tags intf) -> intf_to_js __tags_to_js x2347
        let (get_locale : 'tags this -> UnicodeBCP47LocaleIdentifier.t) =
          fun (x2351 : 'tags this) ->
            UnicodeBCP47LocaleIdentifier.t_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2351) "locale")
        let (set_locale :
          'tags this -> UnicodeBCP47LocaleIdentifier.t -> unit) =
          fun (x2353 : 'tags this) ->
            fun (x2354 : UnicodeBCP47LocaleIdentifier.t) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2353) "locale"
                (UnicodeBCP47LocaleIdentifier.t_to_js x2354)
        let (get_style : 'tags this -> RelativeTimeFormatStyle.t) =
          fun (x2356 : 'tags this) ->
            RelativeTimeFormatStyle.t_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2356) "style")
        let (set_style : 'tags this -> RelativeTimeFormatStyle.t -> unit) =
          fun (x2358 : 'tags this) ->
            fun (x2359 : RelativeTimeFormatStyle.t) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2358) "style"
                (RelativeTimeFormatStyle.t_to_js x2359)
        let (get_numeric : 'tags this -> RelativeTimeFormatNumeric.t) =
          fun (x2361 : 'tags this) ->
            RelativeTimeFormatNumeric.t_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2361) "numeric")
        let (set_numeric : 'tags this -> RelativeTimeFormatNumeric.t -> unit)
          =
          fun (x2363 : 'tags this) ->
            fun (x2364 : RelativeTimeFormatNumeric.t) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2363) "numeric"
                (RelativeTimeFormatNumeric.t_to_js x2364)
        let (get_numberingSystem : 'tags this -> string) =
          fun (x2366 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2366)
                 "numberingSystem")
        let (set_numberingSystem : 'tags this -> string -> unit) =
          fun (x2368 : 'tags this) ->
            fun (x2369 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2368)
                "numberingSystem" (Ojs.string_to_js x2369)
        let (create :
          locale:UnicodeBCP47LocaleIdentifier.t ->
            style:RelativeTimeFormatStyle.t ->
              numeric:RelativeTimeFormatNumeric.t ->
                numberingSystem:string -> unit -> t)
          =
          fun ~locale:(x2371 : UnicodeBCP47LocaleIdentifier.t) ->
            fun ~style:(x2372 : RelativeTimeFormatStyle.t) ->
              fun ~numeric:(x2373 : RelativeTimeFormatNumeric.t) ->
                fun ~numberingSystem:(x2374 : string) ->
                  fun () ->
                    let x2375 = Ojs.empty_obj () in
                    Ojs.set_prop_ascii x2375 "locale"
                      (UnicodeBCP47LocaleIdentifier.t_to_js x2371);
                    Ojs.set_prop_ascii x2375 "style"
                      (RelativeTimeFormatStyle.t_to_js x2372);
                    Ojs.set_prop_ascii x2375 "numeric"
                      (RelativeTimeFormatNumeric.t_to_js x2373);
                    Ojs.set_prop_ascii x2375 "numberingSystem"
                      (Ojs.string_to_js x2374);
                    t_of_js x2375
        let cast_from = Obj.magic
      end
    module RelativeTimeFormatUnit =
      struct
        type t =
          [ `L_s109_quarter  | `L_s110_quarters  | `L_s118_second 
          | `L_s119_seconds  | `L_s141_week  | `L_s143_weeks  | `L_s145_year 
          | `L_s146_years  | `L_s38_day  | `L_s40_days  | `L_s71_hour 
          | `L_s72_hours  | `L_s86_minute  | `L_s87_minutes  | `L_s88_month 
          | `L_s89_months ]
        let rec t_of_js : Ojs.t -> t =
          fun (x2377 : Ojs.t) ->
            let x2378 = x2377 in
            match Ojs.string_of_js x2378 with
            | "quarter" -> `L_s109_quarter
            | "quarters" -> `L_s110_quarters
            | "second" -> `L_s118_second
            | "seconds" -> `L_s119_seconds
            | "week" -> `L_s141_week
            | "weeks" -> `L_s143_weeks
            | "year" -> `L_s145_year
            | "years" -> `L_s146_years
            | "day" -> `L_s38_day
            | "days" -> `L_s40_days
            | "hour" -> `L_s71_hour
            | "hours" -> `L_s72_hours
            | "minute" -> `L_s86_minute
            | "minutes" -> `L_s87_minutes
            | "month" -> `L_s88_month
            | "months" -> `L_s89_months
            | _ -> assert false
        and t_to_js : t -> Ojs.t =
          fun
            (x2376 :
              [ `L_s109_quarter  | `L_s110_quarters  | `L_s118_second 
              | `L_s119_seconds  | `L_s141_week  | `L_s143_weeks 
              | `L_s145_year  | `L_s146_years  | `L_s38_day  | `L_s40_days 
              | `L_s71_hour  | `L_s72_hours  | `L_s86_minute 
              | `L_s87_minutes  | `L_s88_month  | `L_s89_months ])
            ->
            match x2376 with
            | `L_s109_quarter -> Ojs.string_to_js "quarter"
            | `L_s110_quarters -> Ojs.string_to_js "quarters"
            | `L_s118_second -> Ojs.string_to_js "second"
            | `L_s119_seconds -> Ojs.string_to_js "seconds"
            | `L_s141_week -> Ojs.string_to_js "week"
            | `L_s143_weeks -> Ojs.string_to_js "weeks"
            | `L_s145_year -> Ojs.string_to_js "year"
            | `L_s146_years -> Ojs.string_to_js "years"
            | `L_s38_day -> Ojs.string_to_js "day"
            | `L_s40_days -> Ojs.string_to_js "days"
            | `L_s71_hour -> Ojs.string_to_js "hour"
            | `L_s72_hours -> Ojs.string_to_js "hours"
            | `L_s86_minute -> Ojs.string_to_js "minute"
            | `L_s87_minutes -> Ojs.string_to_js "minutes"
            | `L_s88_month -> Ojs.string_to_js "month"
            | `L_s89_months -> Ojs.string_to_js "months"
      end
    module RelativeTimeFormatUnitSingular =
      struct
        type t =
          [ `L_s109_quarter  | `L_s118_second  | `L_s141_week 
          | `L_s145_year  | `L_s38_day  | `L_s71_hour  | `L_s86_minute 
          | `L_s88_month ]
        let rec t_of_js : Ojs.t -> t =
          fun (x2380 : Ojs.t) ->
            let x2381 = x2380 in
            match Ojs.string_of_js x2381 with
            | "quarter" -> `L_s109_quarter
            | "second" -> `L_s118_second
            | "week" -> `L_s141_week
            | "year" -> `L_s145_year
            | "day" -> `L_s38_day
            | "hour" -> `L_s71_hour
            | "minute" -> `L_s86_minute
            | "month" -> `L_s88_month
            | _ -> assert false
        and t_to_js : t -> Ojs.t =
          fun
            (x2379 :
              [ `L_s109_quarter  | `L_s118_second  | `L_s141_week 
              | `L_s145_year  | `L_s38_day  | `L_s71_hour  | `L_s86_minute 
              | `L_s88_month ])
            ->
            match x2379 with
            | `L_s109_quarter -> Ojs.string_to_js "quarter"
            | `L_s118_second -> Ojs.string_to_js "second"
            | `L_s141_week -> Ojs.string_to_js "week"
            | `L_s145_year -> Ojs.string_to_js "year"
            | `L_s38_day -> Ojs.string_to_js "day"
            | `L_s71_hour -> Ojs.string_to_js "hour"
            | `L_s86_minute -> Ojs.string_to_js "minute"
            | `L_s88_month -> Ojs.string_to_js "month"
      end
    module ES2020NumberFormatPartType =
      struct
        type t =
          [ `L_s137_unit  | `L_s138_unknown  | `L_s33_compact 
          | `L_s55_exponentInteger  | `L_s56_exponentMinusSign 
          | `L_s57_exponentSeparator ]
        let rec t_of_js : Ojs.t -> t =
          fun (x2383 : Ojs.t) ->
            let x2384 = x2383 in
            match Ojs.string_of_js x2384 with
            | "unit" -> `L_s137_unit
            | "unknown" -> `L_s138_unknown
            | "compact" -> `L_s33_compact
            | "exponentInteger" -> `L_s55_exponentInteger
            | "exponentMinusSign" -> `L_s56_exponentMinusSign
            | "exponentSeparator" -> `L_s57_exponentSeparator
            | _ -> assert false
        and t_to_js : t -> Ojs.t =
          fun
            (x2382 :
              [ `L_s137_unit  | `L_s138_unknown  | `L_s33_compact 
              | `L_s55_exponentInteger  | `L_s56_exponentMinusSign 
              | `L_s57_exponentSeparator ])
            ->
            match x2382 with
            | `L_s137_unit -> Ojs.string_to_js "unit"
            | `L_s138_unknown -> Ojs.string_to_js "unknown"
            | `L_s33_compact -> Ojs.string_to_js "compact"
            | `L_s55_exponentInteger -> Ojs.string_to_js "exponentInteger"
            | `L_s56_exponentMinusSign ->
                Ojs.string_to_js "exponentMinusSign"
            | `L_s57_exponentSeparator ->
                Ojs.string_to_js "exponentSeparator"
      end
    module ES2018NumberFormatPartType =
      struct
        type t =
          [ `L_s103_percent  | `L_s104_percentSign  | `L_s108_plusSign 
          | `L_s130_symbol  | `L_s31_code  | `L_s36_currency 
          | `L_s41_decimal  | `L_s60_fraction  | `L_s66_group 
          | `L_s73_infinity  | `L_s74_integer  | `L_s76_literal 
          | `L_s85_minusSign  | `L_s90_name  | `L_s91_nan ]
        let rec t_of_js : Ojs.t -> t =
          fun (x2386 : Ojs.t) ->
            let x2387 = x2386 in
            match Ojs.string_of_js x2387 with
            | "percent" -> `L_s103_percent
            | "percentSign" -> `L_s104_percentSign
            | "plusSign" -> `L_s108_plusSign
            | "symbol" -> `L_s130_symbol
            | "code" -> `L_s31_code
            | "currency" -> `L_s36_currency
            | "decimal" -> `L_s41_decimal
            | "fraction" -> `L_s60_fraction
            | "group" -> `L_s66_group
            | "infinity" -> `L_s73_infinity
            | "integer" -> `L_s74_integer
            | "literal" -> `L_s76_literal
            | "minusSign" -> `L_s85_minusSign
            | "name" -> `L_s90_name
            | "nan" -> `L_s91_nan
            | _ -> assert false
        and t_to_js : t -> Ojs.t =
          fun
            (x2385 :
              [ `L_s103_percent  | `L_s104_percentSign  | `L_s108_plusSign 
              | `L_s130_symbol  | `L_s31_code  | `L_s36_currency 
              | `L_s41_decimal  | `L_s60_fraction  | `L_s66_group 
              | `L_s73_infinity  | `L_s74_integer  | `L_s76_literal 
              | `L_s85_minusSign  | `L_s90_name  | `L_s91_nan ])
            ->
            match x2385 with
            | `L_s103_percent -> Ojs.string_to_js "percent"
            | `L_s104_percentSign -> Ojs.string_to_js "percentSign"
            | `L_s108_plusSign -> Ojs.string_to_js "plusSign"
            | `L_s130_symbol -> Ojs.string_to_js "symbol"
            | `L_s31_code -> Ojs.string_to_js "code"
            | `L_s36_currency -> Ojs.string_to_js "currency"
            | `L_s41_decimal -> Ojs.string_to_js "decimal"
            | `L_s60_fraction -> Ojs.string_to_js "fraction"
            | `L_s66_group -> Ojs.string_to_js "group"
            | `L_s73_infinity -> Ojs.string_to_js "infinity"
            | `L_s74_integer -> Ojs.string_to_js "integer"
            | `L_s76_literal -> Ojs.string_to_js "literal"
            | `L_s85_minusSign -> Ojs.string_to_js "minusSign"
            | `L_s90_name -> Ojs.string_to_js "name"
            | `L_s91_nan -> Ojs.string_to_js "nan"
      end
    module NumberFormatPartTypes =
      struct
        type t =
          [ `L_s103_percent  | `L_s104_percentSign  | `L_s108_plusSign 
          | `L_s130_symbol  | `L_s137_unit  | `L_s138_unknown  | `L_s31_code 
          | `L_s33_compact  | `L_s36_currency  | `L_s41_decimal 
          | `L_s55_exponentInteger  | `L_s56_exponentMinusSign 
          | `L_s57_exponentSeparator  | `L_s60_fraction  | `L_s66_group 
          | `L_s73_infinity  | `L_s74_integer  | `L_s76_literal 
          | `L_s85_minusSign  | `L_s90_name  | `L_s91_nan ]
        let rec t_of_js : Ojs.t -> t =
          fun (x2389 : Ojs.t) ->
            let x2390 = x2389 in
            match Ojs.string_of_js x2390 with
            | "percent" -> `L_s103_percent
            | "percentSign" -> `L_s104_percentSign
            | "plusSign" -> `L_s108_plusSign
            | "symbol" -> `L_s130_symbol
            | "unit" -> `L_s137_unit
            | "unknown" -> `L_s138_unknown
            | "code" -> `L_s31_code
            | "compact" -> `L_s33_compact
            | "currency" -> `L_s36_currency
            | "decimal" -> `L_s41_decimal
            | "exponentInteger" -> `L_s55_exponentInteger
            | "exponentMinusSign" -> `L_s56_exponentMinusSign
            | "exponentSeparator" -> `L_s57_exponentSeparator
            | "fraction" -> `L_s60_fraction
            | "group" -> `L_s66_group
            | "infinity" -> `L_s73_infinity
            | "integer" -> `L_s74_integer
            | "literal" -> `L_s76_literal
            | "minusSign" -> `L_s85_minusSign
            | "name" -> `L_s90_name
            | "nan" -> `L_s91_nan
            | _ -> assert false
        and t_to_js : t -> Ojs.t =
          fun
            (x2388 :
              [ `L_s103_percent  | `L_s104_percentSign  | `L_s108_plusSign 
              | `L_s130_symbol  | `L_s137_unit  | `L_s138_unknown 
              | `L_s31_code  | `L_s33_compact  | `L_s36_currency 
              | `L_s41_decimal  | `L_s55_exponentInteger 
              | `L_s56_exponentMinusSign  | `L_s57_exponentSeparator 
              | `L_s60_fraction  | `L_s66_group  | `L_s73_infinity 
              | `L_s74_integer  | `L_s76_literal  | `L_s85_minusSign 
              | `L_s90_name  | `L_s91_nan ])
            ->
            match x2388 with
            | `L_s103_percent -> Ojs.string_to_js "percent"
            | `L_s104_percentSign -> Ojs.string_to_js "percentSign"
            | `L_s108_plusSign -> Ojs.string_to_js "plusSign"
            | `L_s130_symbol -> Ojs.string_to_js "symbol"
            | `L_s137_unit -> Ojs.string_to_js "unit"
            | `L_s138_unknown -> Ojs.string_to_js "unknown"
            | `L_s31_code -> Ojs.string_to_js "code"
            | `L_s33_compact -> Ojs.string_to_js "compact"
            | `L_s36_currency -> Ojs.string_to_js "currency"
            | `L_s41_decimal -> Ojs.string_to_js "decimal"
            | `L_s55_exponentInteger -> Ojs.string_to_js "exponentInteger"
            | `L_s56_exponentMinusSign ->
                Ojs.string_to_js "exponentMinusSign"
            | `L_s57_exponentSeparator ->
                Ojs.string_to_js "exponentSeparator"
            | `L_s60_fraction -> Ojs.string_to_js "fraction"
            | `L_s66_group -> Ojs.string_to_js "group"
            | `L_s73_infinity -> Ojs.string_to_js "infinity"
            | `L_s74_integer -> Ojs.string_to_js "integer"
            | `L_s76_literal -> Ojs.string_to_js "literal"
            | `L_s85_minusSign -> Ojs.string_to_js "minusSign"
            | `L_s90_name -> Ojs.string_to_js "name"
            | `L_s91_nan -> Ojs.string_to_js "nan"
      end
    module RelativeTimeFormatPart =
      struct
        module AnonymousInterface13 =
          struct
            type t = Ojs.t
            let rec t_of_js : Ojs.t -> t = fun (x2392 : Ojs.t) -> x2392
            and t_to_js : t -> Ojs.t = fun (x2391 : Ojs.t) -> x2391
            let (get_type :
              t -> (NumberFormatPartTypes.t, [ `L_s76_literal ]) Exclude.t) =
              fun (x2393 : t) ->
                Exclude.t_of_js NumberFormatPartTypes.t_of_js
                  (fun (x2395 : Ojs.t) ->
                     let x2396 = x2395 in
                     match Ojs.string_of_js x2396 with
                     | "literal" -> `L_s76_literal
                     | _ -> assert false)
                  (Ojs.get_prop_ascii (t_to_js x2393) "type")
            let (set_type :
              t ->
                (NumberFormatPartTypes.t, [ `L_s76_literal ]) Exclude.t ->
                  unit)
              =
              fun (x2397 : t) ->
                fun
                  (x2398 :
                    (NumberFormatPartTypes.t, [ `L_s76_literal ]) Exclude.t)
                  ->
                  Ojs.set_prop_ascii (t_to_js x2397) "type"
                    (Exclude.t_to_js NumberFormatPartTypes.t_to_js
                       (fun (x2400 : [ `L_s76_literal ]) ->
                          match x2400 with
                          | `L_s76_literal -> Ojs.string_to_js "literal")
                       x2398)
            let (get_value : t -> string) =
              fun (x2401 : t) ->
                Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x2401) "value")
            let (set_value : t -> string -> unit) =
              fun (x2402 : t) ->
                fun (x2403 : string) ->
                  Ojs.set_prop_ascii (t_to_js x2402) "value"
                    (Ojs.string_to_js x2403)
            let (get_unit : t -> RelativeTimeFormatUnitSingular.t) =
              fun (x2404 : t) ->
                RelativeTimeFormatUnitSingular.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x2404) "unit")
            let (set_unit : t -> RelativeTimeFormatUnitSingular.t -> unit) =
              fun (x2405 : t) ->
                fun (x2406 : RelativeTimeFormatUnitSingular.t) ->
                  Ojs.set_prop_ascii (t_to_js x2405) "unit"
                    (RelativeTimeFormatUnitSingular.t_to_js x2406)
            let (create :
              type_:(NumberFormatPartTypes.t, [ `L_s76_literal ]) Exclude.t
                ->
                value:string ->
                  unit:RelativeTimeFormatUnitSingular.t -> unit -> t)
              =
              fun
                ~type_:(x2407 :
                         (NumberFormatPartTypes.t, [ `L_s76_literal ])
                           Exclude.t)
                ->
                fun ~value:(x2408 : string) ->
                  fun ~unit:(x2409 : RelativeTimeFormatUnitSingular.t) ->
                    fun () ->
                      let x2410 = Ojs.empty_obj () in
                      Ojs.set_prop_ascii x2410 "type"
                        (Exclude.t_to_js NumberFormatPartTypes.t_to_js
                           (fun (x2412 : [ `L_s76_literal ]) ->
                              match x2412 with
                              | `L_s76_literal -> Ojs.string_to_js "literal")
                           x2407);
                      Ojs.set_prop_ascii x2410 "value"
                        (Ojs.string_to_js x2408);
                      Ojs.set_prop_ascii x2410 "unit"
                        (RelativeTimeFormatUnitSingular.t_to_js x2409);
                      t_of_js x2410
          end
        module AnonymousInterface11 =
          struct
            type t = Ojs.t
            let rec t_of_js : Ojs.t -> t = fun (x2414 : Ojs.t) -> x2414
            and t_to_js : t -> Ojs.t = fun (x2413 : Ojs.t) -> x2413
            let (get_type : t -> [ `L_s76_literal ]) =
              fun (x2415 : t) ->
                let x2416 = Ojs.get_prop_ascii (t_to_js x2415) "type" in
                match Ojs.string_of_js x2416 with
                | "literal" -> `L_s76_literal
                | _ -> assert false
            let (set_type : t -> [ `L_s76_literal ] -> unit) =
              fun (x2417 : t) ->
                fun (x2418 : [ `L_s76_literal ]) ->
                  Ojs.set_prop_ascii (t_to_js x2417) "type"
                    (match x2418 with
                     | `L_s76_literal -> Ojs.string_to_js "literal")
            let (get_value : t -> string) =
              fun (x2419 : t) ->
                Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x2419) "value")
            let (set_value : t -> string -> unit) =
              fun (x2420 : t) ->
                fun (x2421 : string) ->
                  Ojs.set_prop_ascii (t_to_js x2420) "value"
                    (Ojs.string_to_js x2421)
            let (create :
              type_:[ `L_s76_literal ] -> value:string -> unit -> t) =
              fun ~type_:(x2422 : [ `L_s76_literal ]) ->
                fun ~value:(x2423 : string) ->
                  fun () ->
                    let x2424 = Ojs.empty_obj () in
                    Ojs.set_prop_ascii x2424 "type"
                      (match x2422 with
                       | `L_s76_literal -> Ojs.string_to_js "literal");
                    Ojs.set_prop_ascii x2424 "value" (Ojs.string_to_js x2423);
                    t_of_js x2424
          end
        type t = (AnonymousInterface11.t, AnonymousInterface13.t) union2
        let rec t_of_js : Ojs.t -> t =
          fun (x2428 : Ojs.t) ->
            union2_of_js AnonymousInterface11.t_of_js
              AnonymousInterface13.t_of_js x2428
        and t_to_js : t -> Ojs.t =
          fun
            (x2425 : (AnonymousInterface11.t, AnonymousInterface13.t) union2)
            ->
            union2_to_js AnonymousInterface11.t_to_js
              AnonymousInterface13.t_to_js x2425
      end
    module RelativeTimeFormatLocaleMatcher =
      struct
        type t = [ `L_s26_best_fit  | `L_s81_lookup ]
        let rec t_of_js : Ojs.t -> t =
          fun (x2432 : Ojs.t) ->
            let x2433 = x2432 in
            match Ojs.string_of_js x2433 with
            | "best fit" -> `L_s26_best_fit
            | "lookup" -> `L_s81_lookup
            | _ -> assert false
        and t_to_js : t -> Ojs.t =
          fun (x2431 : [ `L_s26_best_fit  | `L_s81_lookup ]) ->
            match x2431 with
            | `L_s26_best_fit -> Ojs.string_to_js "best fit"
            | `L_s81_lookup -> Ojs.string_to_js "lookup"
      end
    module RelativeTimeFormatOptions =
      struct
        type t = [ `Intl_RelativeTimeFormatOptions ] intf
        let rec t_of_js : Ojs.t -> t = Obj.magic
        and t_to_js : t -> Ojs.t = Obj.magic
        type tags = [ `Intl_RelativeTimeFormatOptions ]
        type 'tags this =
          'tags intf constraint 'tags = [> `Intl_RelativeTimeFormatOptions ]
        let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
          =
          fun (type __tags) ->
            fun (__tags_of_js : Ojs.t -> __tags) ->
              fun (x2436 : Ojs.t) -> intf_of_js __tags_of_js x2436
        and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
          fun (type __tags) ->
            fun (__tags_to_js : __tags -> Ojs.t) ->
              fun (x2434 : __tags intf) -> intf_to_js __tags_to_js x2434
        let (get_localeMatcher :
          'tags this -> RelativeTimeFormatLocaleMatcher.t option) =
          fun (x2438 : 'tags this) ->
            Ojs.option_of_js RelativeTimeFormatLocaleMatcher.t_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2438)
                 "localeMatcher")
        let (set_localeMatcher :
          'tags this -> RelativeTimeFormatLocaleMatcher.t -> unit) =
          fun (x2441 : 'tags this) ->
            fun (x2442 : RelativeTimeFormatLocaleMatcher.t) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2441) "localeMatcher"
                (RelativeTimeFormatLocaleMatcher.t_to_js x2442)
        let (get_numeric : 'tags this -> RelativeTimeFormatNumeric.t option)
          =
          fun (x2444 : 'tags this) ->
            Ojs.option_of_js RelativeTimeFormatNumeric.t_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2444) "numeric")
        let (set_numeric : 'tags this -> RelativeTimeFormatNumeric.t -> unit)
          =
          fun (x2447 : 'tags this) ->
            fun (x2448 : RelativeTimeFormatNumeric.t) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2447) "numeric"
                (RelativeTimeFormatNumeric.t_to_js x2448)
        let (get_style : 'tags this -> RelativeTimeFormatStyle.t option) =
          fun (x2450 : 'tags this) ->
            Ojs.option_of_js RelativeTimeFormatStyle.t_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2450) "style")
        let (set_style : 'tags this -> RelativeTimeFormatStyle.t -> unit) =
          fun (x2453 : 'tags this) ->
            fun (x2454 : RelativeTimeFormatStyle.t) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2453) "style"
                (RelativeTimeFormatStyle.t_to_js x2454)
        let (create :
          ?localeMatcher:RelativeTimeFormatLocaleMatcher.t ->
            ?numeric:RelativeTimeFormatNumeric.t ->
              ?style:RelativeTimeFormatStyle.t -> unit -> t)
          =
          fun
            ?localeMatcher:(x2456 : RelativeTimeFormatLocaleMatcher.t option)
            ->
            fun ?numeric:(x2457 : RelativeTimeFormatNumeric.t option) ->
              fun ?style:(x2458 : RelativeTimeFormatStyle.t option) ->
                fun () ->
                  let x2459 = Ojs.empty_obj () in
                  (match x2456 with
                   | Some x2462 ->
                       Ojs.set_prop_ascii x2459 "localeMatcher"
                         (RelativeTimeFormatLocaleMatcher.t_to_js x2462)
                   | None -> ());
                  (match x2457 with
                   | Some x2461 ->
                       Ojs.set_prop_ascii x2459 "numeric"
                         (RelativeTimeFormatNumeric.t_to_js x2461)
                   | None -> ());
                  (match x2458 with
                   | Some x2460 ->
                       Ojs.set_prop_ascii x2459 "style"
                         (RelativeTimeFormatStyle.t_to_js x2460)
                   | None -> ());
                  t_of_js x2459
        let cast_from = Obj.magic
      end
    module RelativeTimeFormat =
      struct
        type t = [ `Intl_RelativeTimeFormat ] intf
        let rec t_of_js : Ojs.t -> t = Obj.magic
        and t_to_js : t -> Ojs.t = Obj.magic
        type tags = [ `Intl_RelativeTimeFormat ]
        type 'tags this =
          'tags intf constraint 'tags = [> `Intl_RelativeTimeFormat ]
        let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
          =
          fun (type __tags) ->
            fun (__tags_of_js : Ojs.t -> __tags) ->
              fun (x2465 : Ojs.t) -> intf_of_js __tags_of_js x2465
        and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
          fun (type __tags) ->
            fun (__tags_to_js : __tags -> Ojs.t) ->
              fun (x2463 : __tags intf) -> intf_to_js __tags_to_js x2463
        let (format :
          'tags this ->
            value:float -> unit:RelativeTimeFormatUnit.t -> string)
          =
          fun (x2469 : 'tags this) ->
            fun ~value:(x2467 : float) ->
              fun ~unit:(x2468 : RelativeTimeFormatUnit.t) ->
                Ojs.string_of_js
                  (Ojs.call (this_to_js Obj.magic x2469) "format"
                     [|(Ojs.float_to_js x2467);(RelativeTimeFormatUnit.t_to_js
                                                  x2468)|])
        let (formatToParts :
          'tags this ->
            value:float ->
              unit:RelativeTimeFormatUnit.t -> RelativeTimeFormatPart.t list)
          =
          fun (x2473 : 'tags this) ->
            fun ~value:(x2471 : float) ->
              fun ~unit:(x2472 : RelativeTimeFormatUnit.t) ->
                Ojs.list_of_js RelativeTimeFormatPart.t_of_js
                  (Ojs.call (this_to_js Obj.magic x2473) "formatToParts"
                     [|(Ojs.float_to_js x2471);(RelativeTimeFormatUnit.t_to_js
                                                  x2472)|])
        let (resolvedOptions :
          'tags this -> ResolvedRelativeTimeFormatOptions.t) =
          fun (x2476 : 'tags this) ->
            ResolvedRelativeTimeFormatOptions.t_of_js
              (Ojs.call (this_to_js Obj.magic x2476) "resolvedOptions" [||])
        let cast_from = Obj.magic
        let (create :
          ?locales:[ `U1 of UnicodeBCP47LocaleIdentifier.t 
                   | `U2 of UnicodeBCP47LocaleIdentifier.t list ]
            -> ?options:RelativeTimeFormatOptions.t -> unit -> t)
          =
          fun
            ?locales:(x2478 :
                       [ `U1 of UnicodeBCP47LocaleIdentifier.t 
                       | `U2 of UnicodeBCP47LocaleIdentifier.t list ] option)
            ->
            fun ?options:(x2479 : RelativeTimeFormatOptions.t option) ->
              fun () ->
                t_of_js
                  (Ojs.new_obj_arr
                     (Ojs.get_prop_ascii
                        (Ojs.get_prop_ascii Ojs.global "Intl")
                        "RelativeTimeFormat")
                     (let x2480 =
                        Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                          [||] in
                      (match x2478 with
                       | Some x2482 ->
                           ignore
                             (Ojs.call x2480 "push"
                                [|((match x2482 with
                                    | `U1 x2483 ->
                                        UnicodeBCP47LocaleIdentifier.t_to_js
                                          x2483
                                    | `U2 x2484 ->
                                        Ojs.list_to_js
                                          UnicodeBCP47LocaleIdentifier.t_to_js
                                          x2484))|])
                       | None -> ());
                      (match x2479 with
                       | Some x2481 ->
                           ignore
                             (Ojs.call x2480 "push"
                                [|(RelativeTimeFormatOptions.t_to_js x2481)|])
                       | None -> ());
                      x2480))
        let (supportedLocalesOf :
          ?locales:[ `U1 of UnicodeBCP47LocaleIdentifier.t 
                   | `U2 of UnicodeBCP47LocaleIdentifier.t list ]
            ->
            ?options:RelativeTimeFormatOptions.t ->
              unit -> UnicodeBCP47LocaleIdentifier.t list)
          =
          fun
            ?locales:(x2486 :
                       [ `U1 of UnicodeBCP47LocaleIdentifier.t 
                       | `U2 of UnicodeBCP47LocaleIdentifier.t list ] option)
            ->
            fun ?options:(x2487 : RelativeTimeFormatOptions.t option) ->
              fun () ->
                Ojs.list_of_js UnicodeBCP47LocaleIdentifier.t_of_js
                  (let x2494 =
                     Ojs.get_prop_ascii
                       (Ojs.get_prop_ascii Ojs.global "Intl")
                       "RelativeTimeFormat" in
                   Ojs.call (Ojs.get_prop_ascii x2494 "supportedLocalesOf")
                     "apply"
                     [|x2494;((let x2488 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               (match x2486 with
                                | Some x2490 ->
                                    ignore
                                      (Ojs.call x2488 "push"
                                         [|((match x2490 with
                                             | `U1 x2491 ->
                                                 UnicodeBCP47LocaleIdentifier.t_to_js
                                                   x2491
                                             | `U2 x2492 ->
                                                 Ojs.list_to_js
                                                   UnicodeBCP47LocaleIdentifier.t_to_js
                                                   x2492))|])
                                | None -> ());
                               (match x2487 with
                                | Some x2489 ->
                                    ignore
                                      (Ojs.call x2488 "push"
                                         [|(RelativeTimeFormatOptions.t_to_js
                                              x2489)|])
                                | None -> ());
                               x2488))|])
      end
    module PluralRuleType =
      struct
        type t = [ `L_s101_ordinal  | `L_s29_cardinal ]
        let rec t_of_js : Ojs.t -> t =
          fun (x2497 : Ojs.t) ->
            let x2498 = x2497 in
            match Ojs.string_of_js x2498 with
            | "ordinal" -> `L_s101_ordinal
            | "cardinal" -> `L_s29_cardinal
            | _ -> assert false
        and t_to_js : t -> Ojs.t =
          fun (x2496 : [ `L_s101_ordinal  | `L_s29_cardinal ]) ->
            match x2496 with
            | `L_s101_ordinal -> Ojs.string_to_js "ordinal"
            | `L_s29_cardinal -> Ojs.string_to_js "cardinal"
      end
    module LDMLPluralRule =
      struct
        type t =
          [ `L_s100_one  | `L_s102_other  | `L_s135_two  | `L_s147_zero 
          | `L_s59_few  | `L_s83_many ]
        let rec t_of_js : Ojs.t -> t =
          fun (x2500 : Ojs.t) ->
            let x2501 = x2500 in
            match Ojs.string_of_js x2501 with
            | "one" -> `L_s100_one
            | "other" -> `L_s102_other
            | "two" -> `L_s135_two
            | "zero" -> `L_s147_zero
            | "few" -> `L_s59_few
            | "many" -> `L_s83_many
            | _ -> assert false
        and t_to_js : t -> Ojs.t =
          fun
            (x2499 :
              [ `L_s100_one  | `L_s102_other  | `L_s135_two  | `L_s147_zero 
              | `L_s59_few  | `L_s83_many ])
            ->
            match x2499 with
            | `L_s100_one -> Ojs.string_to_js "one"
            | `L_s102_other -> Ojs.string_to_js "other"
            | `L_s135_two -> Ojs.string_to_js "two"
            | `L_s147_zero -> Ojs.string_to_js "zero"
            | `L_s59_few -> Ojs.string_to_js "few"
            | `L_s83_many -> Ojs.string_to_js "many"
      end
    module ResolvedPluralRulesOptions =
      struct
        type t = [ `Intl_ResolvedPluralRulesOptions ] intf
        let rec t_of_js : Ojs.t -> t = Obj.magic
        and t_to_js : t -> Ojs.t = Obj.magic
        type tags = [ `Intl_ResolvedPluralRulesOptions ]
        type 'tags this =
          'tags intf constraint 'tags = [> `Intl_ResolvedPluralRulesOptions ]
        let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
          =
          fun (type __tags) ->
            fun (__tags_of_js : Ojs.t -> __tags) ->
              fun (x2504 : Ojs.t) -> intf_of_js __tags_of_js x2504
        and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
          fun (type __tags) ->
            fun (__tags_to_js : __tags -> Ojs.t) ->
              fun (x2502 : __tags intf) -> intf_to_js __tags_to_js x2502
        let (get_locale : 'tags this -> string) =
          fun (x2506 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2506) "locale")
        let (set_locale : 'tags this -> string -> unit) =
          fun (x2508 : 'tags this) ->
            fun (x2509 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2508) "locale"
                (Ojs.string_to_js x2509)
        let (get_pluralCategories : 'tags this -> LDMLPluralRule.t list) =
          fun (x2511 : 'tags this) ->
            Ojs.list_of_js LDMLPluralRule.t_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2511)
                 "pluralCategories")
        let (set_pluralCategories :
          'tags this -> LDMLPluralRule.t list -> unit) =
          fun (x2514 : 'tags this) ->
            fun (x2515 : LDMLPluralRule.t list) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2514)
                "pluralCategories"
                (Ojs.list_to_js LDMLPluralRule.t_to_js x2515)
        let (get_type : 'tags this -> PluralRuleType.t) =
          fun (x2518 : 'tags this) ->
            PluralRuleType.t_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2518) "type")
        let (set_type : 'tags this -> PluralRuleType.t -> unit) =
          fun (x2520 : 'tags this) ->
            fun (x2521 : PluralRuleType.t) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2520) "type"
                (PluralRuleType.t_to_js x2521)
        let (get_minimumIntegerDigits : 'tags this -> float) =
          fun (x2523 : 'tags this) ->
            Ojs.float_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2523)
                 "minimumIntegerDigits")
        let (set_minimumIntegerDigits : 'tags this -> float -> unit) =
          fun (x2525 : 'tags this) ->
            fun (x2526 : float) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2525)
                "minimumIntegerDigits" (Ojs.float_to_js x2526)
        let (get_minimumFractionDigits : 'tags this -> float) =
          fun (x2528 : 'tags this) ->
            Ojs.float_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2528)
                 "minimumFractionDigits")
        let (set_minimumFractionDigits : 'tags this -> float -> unit) =
          fun (x2530 : 'tags this) ->
            fun (x2531 : float) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2530)
                "minimumFractionDigits" (Ojs.float_to_js x2531)
        let (get_maximumFractionDigits : 'tags this -> float) =
          fun (x2533 : 'tags this) ->
            Ojs.float_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2533)
                 "maximumFractionDigits")
        let (set_maximumFractionDigits : 'tags this -> float -> unit) =
          fun (x2535 : 'tags this) ->
            fun (x2536 : float) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2535)
                "maximumFractionDigits" (Ojs.float_to_js x2536)
        let (get_minimumSignificantDigits : 'tags this -> float option) =
          fun (x2538 : 'tags this) ->
            Ojs.option_of_js Ojs.float_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2538)
                 "minimumSignificantDigits")
        let (set_minimumSignificantDigits : 'tags this -> float -> unit) =
          fun (x2541 : 'tags this) ->
            fun (x2542 : float) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2541)
                "minimumSignificantDigits" (Ojs.float_to_js x2542)
        let (get_maximumSignificantDigits : 'tags this -> float option) =
          fun (x2544 : 'tags this) ->
            Ojs.option_of_js Ojs.float_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2544)
                 "maximumSignificantDigits")
        let (set_maximumSignificantDigits : 'tags this -> float -> unit) =
          fun (x2547 : 'tags this) ->
            fun (x2548 : float) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2547)
                "maximumSignificantDigits" (Ojs.float_to_js x2548)
        let (create :
          locale:string ->
            pluralCategories:LDMLPluralRule.t list ->
              type_:PluralRuleType.t ->
                minimumIntegerDigits:float ->
                  minimumFractionDigits:float ->
                    maximumFractionDigits:float ->
                      ?minimumSignificantDigits:float ->
                        ?maximumSignificantDigits:float -> unit -> t)
          =
          fun ~locale:(x2550 : string) ->
            fun ~pluralCategories:(x2551 : LDMLPluralRule.t list) ->
              fun ~type_:(x2552 : PluralRuleType.t) ->
                fun ~minimumIntegerDigits:(x2553 : float) ->
                  fun ~minimumFractionDigits:(x2554 : float) ->
                    fun ~maximumFractionDigits:(x2555 : float) ->
                      fun ?minimumSignificantDigits:(x2556 : float option) ->
                        fun ?maximumSignificantDigits:(x2557 : float option)
                          ->
                          fun () ->
                            let x2558 = Ojs.empty_obj () in
                            Ojs.set_prop_ascii x2558 "locale"
                              (Ojs.string_to_js x2550);
                            Ojs.set_prop_ascii x2558 "pluralCategories"
                              (Ojs.list_to_js LDMLPluralRule.t_to_js x2551);
                            Ojs.set_prop_ascii x2558 "type"
                              (PluralRuleType.t_to_js x2552);
                            Ojs.set_prop_ascii x2558 "minimumIntegerDigits"
                              (Ojs.float_to_js x2553);
                            Ojs.set_prop_ascii x2558 "minimumFractionDigits"
                              (Ojs.float_to_js x2554);
                            Ojs.set_prop_ascii x2558 "maximumFractionDigits"
                              (Ojs.float_to_js x2555);
                            (match x2556 with
                             | Some x2560 ->
                                 Ojs.set_prop_ascii x2558
                                   "minimumSignificantDigits"
                                   (Ojs.float_to_js x2560)
                             | None -> ());
                            (match x2557 with
                             | Some x2559 ->
                                 Ojs.set_prop_ascii x2558
                                   "maximumSignificantDigits"
                                   (Ojs.float_to_js x2559)
                             | None -> ());
                            t_of_js x2558
        let cast_from = Obj.magic
      end
    module PluralRulesOptions =
      struct
        type t = [ `Intl_PluralRulesOptions ] intf
        let rec t_of_js : Ojs.t -> t = Obj.magic
        and t_to_js : t -> Ojs.t = Obj.magic
        type tags = [ `Intl_PluralRulesOptions ]
        type 'tags this =
          'tags intf constraint 'tags = [> `Intl_PluralRulesOptions ]
        let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
          =
          fun (type __tags) ->
            fun (__tags_of_js : Ojs.t -> __tags) ->
              fun (x2564 : Ojs.t) -> intf_of_js __tags_of_js x2564
        and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
          fun (type __tags) ->
            fun (__tags_to_js : __tags -> Ojs.t) ->
              fun (x2562 : __tags intf) -> intf_to_js __tags_to_js x2562
        let (get_localeMatcher :
          'tags this -> [ `L_s26_best_fit  | `L_s81_lookup ] option) =
          fun (x2566 : 'tags this) ->
            Ojs.option_of_js
              (fun (x2568 : Ojs.t) ->
                 let x2569 = x2568 in
                 match Ojs.string_of_js x2569 with
                 | "best fit" -> `L_s26_best_fit
                 | "lookup" -> `L_s81_lookup
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2566)
                 "localeMatcher")
        let (set_localeMatcher :
          'tags this ->
            [ `Undefined of undefined  | `U1 of [ `L_s81_lookup ] 
            | `U2 of [ `L_s26_best_fit ] ] -> unit)
          =
          fun (x2570 : 'tags this) ->
            fun
              (x2571 :
                [ `Undefined of undefined  | `U1 of [ `L_s81_lookup ] 
                | `U2 of [ `L_s26_best_fit ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2570) "localeMatcher"
                (match x2571 with
                 | `Undefined x2572 -> undefined_to_js x2572
                 | `U1 x2573 ->
                     (match x2573 with
                      | `L_s81_lookup -> Ojs.string_to_js "lookup")
                 | `U2 x2574 ->
                     (match x2574 with
                      | `L_s26_best_fit -> Ojs.string_to_js "best fit"))
        let (get_type : 'tags this -> PluralRuleType.t option) =
          fun (x2576 : 'tags this) ->
            Ojs.option_of_js PluralRuleType.t_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2576) "type")
        let (set_type :
          'tags this ->
            [ `Undefined of undefined  | `U1 of PluralRuleType.t ] -> unit)
          =
          fun (x2579 : 'tags this) ->
            fun
              (x2580 :
                [ `Undefined of undefined  | `U1 of PluralRuleType.t ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2579) "type"
                (match x2580 with
                 | `Undefined x2581 -> undefined_to_js x2581
                 | `U1 x2582 -> PluralRuleType.t_to_js x2582)
        let (get_minimumIntegerDigits : 'tags this -> float option) =
          fun (x2584 : 'tags this) ->
            Ojs.option_of_js Ojs.float_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2584)
                 "minimumIntegerDigits")
        let (set_minimumIntegerDigits :
          'tags this -> [ `Undefined of undefined  | `U1 of float ] -> unit)
          =
          fun (x2587 : 'tags this) ->
            fun (x2588 : [ `Undefined of undefined  | `U1 of float ]) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2587)
                "minimumIntegerDigits"
                (match x2588 with
                 | `Undefined x2589 -> undefined_to_js x2589
                 | `U1 x2590 -> Ojs.float_to_js x2590)
        let (get_minimumFractionDigits : 'tags this -> float option) =
          fun (x2592 : 'tags this) ->
            Ojs.option_of_js Ojs.float_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2592)
                 "minimumFractionDigits")
        let (set_minimumFractionDigits :
          'tags this -> [ `Undefined of undefined  | `U1 of float ] -> unit)
          =
          fun (x2595 : 'tags this) ->
            fun (x2596 : [ `Undefined of undefined  | `U1 of float ]) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2595)
                "minimumFractionDigits"
                (match x2596 with
                 | `Undefined x2597 -> undefined_to_js x2597
                 | `U1 x2598 -> Ojs.float_to_js x2598)
        let (get_maximumFractionDigits : 'tags this -> float option) =
          fun (x2600 : 'tags this) ->
            Ojs.option_of_js Ojs.float_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2600)
                 "maximumFractionDigits")
        let (set_maximumFractionDigits :
          'tags this -> [ `Undefined of undefined  | `U1 of float ] -> unit)
          =
          fun (x2603 : 'tags this) ->
            fun (x2604 : [ `Undefined of undefined  | `U1 of float ]) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2603)
                "maximumFractionDigits"
                (match x2604 with
                 | `Undefined x2605 -> undefined_to_js x2605
                 | `U1 x2606 -> Ojs.float_to_js x2606)
        let (get_minimumSignificantDigits : 'tags this -> float option) =
          fun (x2608 : 'tags this) ->
            Ojs.option_of_js Ojs.float_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2608)
                 "minimumSignificantDigits")
        let (set_minimumSignificantDigits :
          'tags this -> [ `Undefined of undefined  | `U1 of float ] -> unit)
          =
          fun (x2611 : 'tags this) ->
            fun (x2612 : [ `Undefined of undefined  | `U1 of float ]) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2611)
                "minimumSignificantDigits"
                (match x2612 with
                 | `Undefined x2613 -> undefined_to_js x2613
                 | `U1 x2614 -> Ojs.float_to_js x2614)
        let (get_maximumSignificantDigits : 'tags this -> float option) =
          fun (x2616 : 'tags this) ->
            Ojs.option_of_js Ojs.float_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2616)
                 "maximumSignificantDigits")
        let (set_maximumSignificantDigits :
          'tags this -> [ `Undefined of undefined  | `U1 of float ] -> unit)
          =
          fun (x2619 : 'tags this) ->
            fun (x2620 : [ `Undefined of undefined  | `U1 of float ]) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2619)
                "maximumSignificantDigits"
                (match x2620 with
                 | `Undefined x2621 -> undefined_to_js x2621
                 | `U1 x2622 -> Ojs.float_to_js x2622)
        let (create :
          ?localeMatcher:[ `L_s26_best_fit  | `L_s81_lookup ] ->
            ?type_:PluralRuleType.t ->
              ?minimumIntegerDigits:float ->
                ?minimumFractionDigits:float ->
                  ?maximumFractionDigits:float ->
                    ?minimumSignificantDigits:float ->
                      ?maximumSignificantDigits:float -> unit -> t)
          =
          fun
            ?localeMatcher:(x2624 :
                             [ `L_s26_best_fit  | `L_s81_lookup ] option)
            ->
            fun ?type_:(x2625 : PluralRuleType.t option) ->
              fun ?minimumIntegerDigits:(x2626 : float option) ->
                fun ?minimumFractionDigits:(x2627 : float option) ->
                  fun ?maximumFractionDigits:(x2628 : float option) ->
                    fun ?minimumSignificantDigits:(x2629 : float option) ->
                      fun ?maximumSignificantDigits:(x2630 : float option) ->
                        fun () ->
                          let x2631 = Ojs.empty_obj () in
                          (match x2624 with
                           | Some x2638 ->
                               Ojs.set_prop_ascii x2631 "localeMatcher"
                                 (match x2638 with
                                  | `L_s26_best_fit ->
                                      Ojs.string_to_js "best fit"
                                  | `L_s81_lookup ->
                                      Ojs.string_to_js "lookup")
                           | None -> ());
                          (match x2625 with
                           | Some x2637 ->
                               Ojs.set_prop_ascii x2631 "type"
                                 (PluralRuleType.t_to_js x2637)
                           | None -> ());
                          (match x2626 with
                           | Some x2636 ->
                               Ojs.set_prop_ascii x2631
                                 "minimumIntegerDigits"
                                 (Ojs.float_to_js x2636)
                           | None -> ());
                          (match x2627 with
                           | Some x2635 ->
                               Ojs.set_prop_ascii x2631
                                 "minimumFractionDigits"
                                 (Ojs.float_to_js x2635)
                           | None -> ());
                          (match x2628 with
                           | Some x2634 ->
                               Ojs.set_prop_ascii x2631
                                 "maximumFractionDigits"
                                 (Ojs.float_to_js x2634)
                           | None -> ());
                          (match x2629 with
                           | Some x2633 ->
                               Ojs.set_prop_ascii x2631
                                 "minimumSignificantDigits"
                                 (Ojs.float_to_js x2633)
                           | None -> ());
                          (match x2630 with
                           | Some x2632 ->
                               Ojs.set_prop_ascii x2631
                                 "maximumSignificantDigits"
                                 (Ojs.float_to_js x2632)
                           | None -> ());
                          t_of_js x2631
        let cast_from = Obj.magic
      end
    module PluralRules =
      struct
        module AnonymousInterface6 =
          struct
            type t = Ojs.t
            let rec t_of_js : Ojs.t -> t = fun (x2640 : Ojs.t) -> x2640
            and t_to_js : t -> Ojs.t = fun (x2639 : Ojs.t) -> x2639
            let (get_localeMatcher :
              t -> [ `L_s26_best_fit  | `L_s81_lookup ] option) =
              fun (x2641 : t) ->
                Ojs.option_of_js
                  (fun (x2642 : Ojs.t) ->
                     let x2643 = x2642 in
                     match Ojs.string_of_js x2643 with
                     | "best fit" -> `L_s26_best_fit
                     | "lookup" -> `L_s81_lookup
                     | _ -> assert false)
                  (Ojs.get_prop_ascii (t_to_js x2641) "localeMatcher")
            let (set_localeMatcher :
              t ->
                [ `U1 of [ `L_s81_lookup ]  | `U2 of [ `L_s26_best_fit ] ] ->
                  unit)
              =
              fun (x2644 : t) ->
                fun
                  (x2645 :
                    [ `U1 of [ `L_s81_lookup ] 
                    | `U2 of [ `L_s26_best_fit ] ])
                  ->
                  Ojs.set_prop_ascii (t_to_js x2644) "localeMatcher"
                    (match x2645 with
                     | `U1 x2646 ->
                         (match x2646 with
                          | `L_s81_lookup -> Ojs.string_to_js "lookup")
                     | `U2 x2647 ->
                         (match x2647 with
                          | `L_s26_best_fit -> Ojs.string_to_js "best fit"))
            let (create :
              ?localeMatcher:[ `L_s26_best_fit  | `L_s81_lookup ] ->
                unit -> t)
              =
              fun
                ?localeMatcher:(x2648 :
                                 [ `L_s26_best_fit  | `L_s81_lookup ] option)
                ->
                fun () ->
                  let x2649 = Ojs.empty_obj () in
                  (match x2648 with
                   | Some x2650 ->
                       Ojs.set_prop_ascii x2649 "localeMatcher"
                         (match x2650 with
                          | `L_s26_best_fit -> Ojs.string_to_js "best fit"
                          | `L_s81_lookup -> Ojs.string_to_js "lookup")
                   | None -> ());
                  t_of_js x2649
          end
        type t = [ `Intl_PluralRules ] intf
        let rec t_of_js : Ojs.t -> t = Obj.magic
        and t_to_js : t -> Ojs.t = Obj.magic
        type tags = [ `Intl_PluralRules ]
        type 'tags this =
          'tags intf constraint 'tags = [> `Intl_PluralRules ]
        let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
          =
          fun (type __tags) ->
            fun (__tags_of_js : Ojs.t -> __tags) ->
              fun (x2653 : Ojs.t) -> intf_of_js __tags_of_js x2653
        and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
          fun (type __tags) ->
            fun (__tags_to_js : __tags -> Ojs.t) ->
              fun (x2651 : __tags intf) -> intf_to_js __tags_to_js x2651
        let (resolvedOptions : 'tags this -> ResolvedPluralRulesOptions.t) =
          fun (x2655 : 'tags this) ->
            ResolvedPluralRulesOptions.t_of_js
              (Ojs.call (this_to_js Obj.magic x2655) "resolvedOptions" [||])
        let (select : 'tags this -> n:float -> LDMLPluralRule.t) =
          fun (x2658 : 'tags this) ->
            fun ~n:(x2657 : float) ->
              LDMLPluralRule.t_of_js
                (Ojs.call (this_to_js Obj.magic x2658) "select"
                   [|(Ojs.float_to_js x2657)|])
        let cast_from = Obj.magic
        let (create :
          ?locales:[ `U1 of string  | `U2 of string list ] ->
            ?options:PluralRulesOptions.t -> unit -> t)
          =
          fun
            ?locales:(x2660 : [ `U1 of string  | `U2 of string list ] option)
            ->
            fun ?options:(x2661 : PluralRulesOptions.t option) ->
              fun () ->
                t_of_js
                  (Ojs.new_obj_arr
                     (Ojs.get_prop_ascii
                        (Ojs.get_prop_ascii Ojs.global "Intl") "PluralRules")
                     (let x2662 =
                        Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                          [||] in
                      (match x2660 with
                       | Some x2664 ->
                           ignore
                             (Ojs.call x2662 "push"
                                [|((match x2664 with
                                    | `U1 x2665 -> Ojs.string_to_js x2665
                                    | `U2 x2666 ->
                                        Ojs.list_to_js Ojs.string_to_js x2666))|])
                       | None -> ());
                      (match x2661 with
                       | Some x2663 ->
                           ignore
                             (Ojs.call x2662 "push"
                                [|(PluralRulesOptions.t_to_js x2663)|])
                       | None -> ());
                      x2662))
        let (invoke :
          ?locales:[ `U1 of string  | `U2 of string list ] ->
            ?options:PluralRulesOptions.t -> unit -> t)
          =
          fun
            ?locales:(x2668 : [ `U1 of string  | `U2 of string list ] option)
            ->
            fun ?options:(x2669 : PluralRulesOptions.t option) ->
              fun () ->
                t_of_js
                  (Ojs.call
                     (Ojs.get_prop_ascii
                        (Ojs.get_prop_ascii Ojs.global "Intl") "PluralRules")
                     "apply"
                     [|Ojs.null;((let x2670 =
                                    Ojs.new_obj
                                      (Ojs.get_prop_ascii Ojs.global "Array")
                                      [||] in
                                  (match x2668 with
                                   | Some x2672 ->
                                       ignore
                                         (Ojs.call x2670 "push"
                                            [|((match x2672 with
                                                | `U1 x2673 ->
                                                    Ojs.string_to_js x2673
                                                | `U2 x2674 ->
                                                    Ojs.list_to_js
                                                      Ojs.string_to_js x2674))|])
                                   | None -> ());
                                  (match x2669 with
                                   | Some x2671 ->
                                       ignore
                                         (Ojs.call x2670 "push"
                                            [|(PluralRulesOptions.t_to_js
                                                 x2671)|])
                                   | None -> ());
                                  x2670))|])
        let (supportedLocalesOf :
          locales:[ `U1 of string  | `U2 of string list ] ->
            ?options:AnonymousInterface6.t -> unit -> string list)
          =
          fun ~locales:(x2676 : [ `U1 of string  | `U2 of string list ]) ->
            fun ?options:(x2677 : AnonymousInterface6.t option) ->
              fun () ->
                Ojs.list_of_js Ojs.string_of_js
                  (let x2683 =
                     Ojs.get_prop_ascii
                       (Ojs.get_prop_ascii Ojs.global "Intl") "PluralRules" in
                   Ojs.call (Ojs.get_prop_ascii x2683 "supportedLocalesOf")
                     "apply"
                     [|x2683;((let x2678 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x2678 "push"
                                    [|((match x2676 with
                                        | `U1 x2680 -> Ojs.string_to_js x2680
                                        | `U2 x2681 ->
                                            Ojs.list_to_js Ojs.string_to_js
                                              x2681))|]);
                               (match x2677 with
                                | Some x2679 ->
                                    ignore
                                      (Ojs.call x2678 "push"
                                         [|(AnonymousInterface6.t_to_js x2679)|])
                                | None -> ());
                               x2678))|])
      end
    module ResolvedNumberFormatOptions =
      struct
        type t = [ `Intl_ResolvedNumberFormatOptions ] intf
        let rec t_of_js : Ojs.t -> t = Obj.magic
        and t_to_js : t -> Ojs.t = Obj.magic
        type tags = [ `Intl_ResolvedNumberFormatOptions ]
        type 'tags this =
          'tags intf constraint 'tags =
                      [> `Intl_ResolvedNumberFormatOptions ]
        let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
          =
          fun (type __tags) ->
            fun (__tags_of_js : Ojs.t -> __tags) ->
              fun (x2687 : Ojs.t) -> intf_of_js __tags_of_js x2687
        and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
          fun (type __tags) ->
            fun (__tags_to_js : __tags -> Ojs.t) ->
              fun (x2685 : __tags intf) -> intf_to_js __tags_to_js x2685
        let (get_compactDisplay :
          'tags this -> [ `L_s122_short  | `L_s78_long ] option) =
          fun (x2689 : 'tags this) ->
            Ojs.option_of_js
              (fun (x2691 : Ojs.t) ->
                 let x2692 = x2691 in
                 match Ojs.string_of_js x2692 with
                 | "short" -> `L_s122_short
                 | "long" -> `L_s78_long
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2689)
                 "compactDisplay")
        let (set_compactDisplay :
          'tags this ->
            [ `U1 of [ `L_s122_short ]  | `U2 of [ `L_s78_long ] ] -> unit)
          =
          fun (x2693 : 'tags this) ->
            fun
              (x2694 :
                [ `U1 of [ `L_s122_short ]  | `U2 of [ `L_s78_long ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2693)
                "compactDisplay"
                (match x2694 with
                 | `U1 x2695 ->
                     (match x2695 with
                      | `L_s122_short -> Ojs.string_to_js "short")
                 | `U2 x2696 ->
                     (match x2696 with
                      | `L_s78_long -> Ojs.string_to_js "long"))
        let (get_notation :
          'tags this ->
            [ `L_s114_scientific  | `L_s126_standard  | `L_s33_compact 
            | `L_s51_engineering ] option)
          =
          fun (x2698 : 'tags this) ->
            Ojs.option_of_js
              (fun (x2700 : Ojs.t) ->
                 let x2701 = x2700 in
                 match Ojs.string_of_js x2701 with
                 | "scientific" -> `L_s114_scientific
                 | "standard" -> `L_s126_standard
                 | "compact" -> `L_s33_compact
                 | "engineering" -> `L_s51_engineering
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2698) "notation")
        let (set_notation :
          'tags this ->
            [ `U1 of [ `L_s126_standard ]  | `U2 of [ `L_s114_scientific ] 
            | `U3 of [ `L_s51_engineering ]  | `U4 of [ `L_s33_compact ] ] ->
              unit)
          =
          fun (x2702 : 'tags this) ->
            fun
              (x2703 :
                [ `U1 of [ `L_s126_standard ] 
                | `U2 of [ `L_s114_scientific ] 
                | `U3 of [ `L_s51_engineering ] 
                | `U4 of [ `L_s33_compact ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2702) "notation"
                (match x2703 with
                 | `U1 x2704 ->
                     (match x2704 with
                      | `L_s126_standard -> Ojs.string_to_js "standard")
                 | `U2 x2705 ->
                     (match x2705 with
                      | `L_s114_scientific -> Ojs.string_to_js "scientific")
                 | `U3 x2706 ->
                     (match x2706 with
                      | `L_s51_engineering -> Ojs.string_to_js "engineering")
                 | `U4 x2707 ->
                     (match x2707 with
                      | `L_s33_compact -> Ojs.string_to_js "compact"))
        let (get_signDisplay :
          'tags this ->
            [ `L_s22_always  | `L_s23_auto  | `L_s54_exceptZero 
            | `L_s93_never ] option)
          =
          fun (x2709 : 'tags this) ->
            Ojs.option_of_js
              (fun (x2711 : Ojs.t) ->
                 let x2712 = x2711 in
                 match Ojs.string_of_js x2712 with
                 | "always" -> `L_s22_always
                 | "auto" -> `L_s23_auto
                 | "exceptZero" -> `L_s54_exceptZero
                 | "never" -> `L_s93_never
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2709) "signDisplay")
        let (set_signDisplay :
          'tags this ->
            [ `U1 of [ `L_s23_auto ]  | `U2 of [ `L_s93_never ] 
            | `U3 of [ `L_s22_always ]  | `U4 of [ `L_s54_exceptZero ] ] ->
              unit)
          =
          fun (x2713 : 'tags this) ->
            fun
              (x2714 :
                [ `U1 of [ `L_s23_auto ]  | `U2 of [ `L_s93_never ] 
                | `U3 of [ `L_s22_always ]  | `U4 of [ `L_s54_exceptZero ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2713) "signDisplay"
                (match x2714 with
                 | `U1 x2715 ->
                     (match x2715 with
                      | `L_s23_auto -> Ojs.string_to_js "auto")
                 | `U2 x2716 ->
                     (match x2716 with
                      | `L_s93_never -> Ojs.string_to_js "never")
                 | `U3 x2717 ->
                     (match x2717 with
                      | `L_s22_always -> Ojs.string_to_js "always")
                 | `U4 x2718 ->
                     (match x2718 with
                      | `L_s54_exceptZero -> Ojs.string_to_js "exceptZero"))
        let (get_unit : 'tags this -> string option) =
          fun (x2720 : 'tags this) ->
            Ojs.option_of_js Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2720) "unit")
        let (set_unit : 'tags this -> string -> unit) =
          fun (x2723 : 'tags this) ->
            fun (x2724 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2723) "unit"
                (Ojs.string_to_js x2724)
        let (get_unitDisplay :
          'tags this ->
            [ `L_s122_short  | `L_s78_long  | `L_s92_narrow ] option)
          =
          fun (x2726 : 'tags this) ->
            Ojs.option_of_js
              (fun (x2728 : Ojs.t) ->
                 let x2729 = x2728 in
                 match Ojs.string_of_js x2729 with
                 | "short" -> `L_s122_short
                 | "long" -> `L_s78_long
                 | "narrow" -> `L_s92_narrow
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2726) "unitDisplay")
        let (set_unitDisplay :
          'tags this ->
            [ `U1 of [ `L_s122_short ]  | `U2 of [ `L_s78_long ] 
            | `U3 of [ `L_s92_narrow ] ] -> unit)
          =
          fun (x2730 : 'tags this) ->
            fun
              (x2731 :
                [ `U1 of [ `L_s122_short ]  | `U2 of [ `L_s78_long ] 
                | `U3 of [ `L_s92_narrow ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2730) "unitDisplay"
                (match x2731 with
                 | `U1 x2732 ->
                     (match x2732 with
                      | `L_s122_short -> Ojs.string_to_js "short")
                 | `U2 x2733 ->
                     (match x2733 with
                      | `L_s78_long -> Ojs.string_to_js "long")
                 | `U3 x2734 ->
                     (match x2734 with
                      | `L_s92_narrow -> Ojs.string_to_js "narrow"))
        let (get_currencyDisplay : 'tags this -> string option) =
          fun (x2736 : 'tags this) ->
            Ojs.option_of_js Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2736)
                 "currencyDisplay")
        let (set_currencyDisplay : 'tags this -> string -> unit) =
          fun (x2739 : 'tags this) ->
            fun (x2740 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2739)
                "currencyDisplay" (Ojs.string_to_js x2740)
        let (get_currencySign : 'tags this -> string option) =
          fun (x2742 : 'tags this) ->
            Ojs.option_of_js Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2742) "currencySign")
        let (set_currencySign : 'tags this -> string -> unit) =
          fun (x2745 : 'tags this) ->
            fun (x2746 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2745) "currencySign"
                (Ojs.string_to_js x2746)
        let (get_locale : 'tags this -> string) =
          fun (x2748 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2748) "locale")
        let (set_locale : 'tags this -> string -> unit) =
          fun (x2750 : 'tags this) ->
            fun (x2751 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2750) "locale"
                (Ojs.string_to_js x2751)
        let (get_numberingSystem : 'tags this -> string) =
          fun (x2753 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2753)
                 "numberingSystem")
        let (set_numberingSystem : 'tags this -> string -> unit) =
          fun (x2755 : 'tags this) ->
            fun (x2756 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2755)
                "numberingSystem" (Ojs.string_to_js x2756)
        let (get_style : 'tags this -> string) =
          fun (x2758 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2758) "style")
        let (set_style : 'tags this -> string -> unit) =
          fun (x2760 : 'tags this) ->
            fun (x2761 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2760) "style"
                (Ojs.string_to_js x2761)
        let (get_currency : 'tags this -> string option) =
          fun (x2763 : 'tags this) ->
            Ojs.option_of_js Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2763) "currency")
        let (set_currency : 'tags this -> string -> unit) =
          fun (x2766 : 'tags this) ->
            fun (x2767 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2766) "currency"
                (Ojs.string_to_js x2767)
        let (get_minimumIntegerDigits : 'tags this -> float) =
          fun (x2769 : 'tags this) ->
            Ojs.float_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2769)
                 "minimumIntegerDigits")
        let (set_minimumIntegerDigits : 'tags this -> float -> unit) =
          fun (x2771 : 'tags this) ->
            fun (x2772 : float) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2771)
                "minimumIntegerDigits" (Ojs.float_to_js x2772)
        let (get_minimumFractionDigits : 'tags this -> float) =
          fun (x2774 : 'tags this) ->
            Ojs.float_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2774)
                 "minimumFractionDigits")
        let (set_minimumFractionDigits : 'tags this -> float -> unit) =
          fun (x2776 : 'tags this) ->
            fun (x2777 : float) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2776)
                "minimumFractionDigits" (Ojs.float_to_js x2777)
        let (get_maximumFractionDigits : 'tags this -> float) =
          fun (x2779 : 'tags this) ->
            Ojs.float_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2779)
                 "maximumFractionDigits")
        let (set_maximumFractionDigits : 'tags this -> float -> unit) =
          fun (x2781 : 'tags this) ->
            fun (x2782 : float) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2781)
                "maximumFractionDigits" (Ojs.float_to_js x2782)
        let (get_minimumSignificantDigits : 'tags this -> float option) =
          fun (x2784 : 'tags this) ->
            Ojs.option_of_js Ojs.float_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2784)
                 "minimumSignificantDigits")
        let (set_minimumSignificantDigits : 'tags this -> float -> unit) =
          fun (x2787 : 'tags this) ->
            fun (x2788 : float) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2787)
                "minimumSignificantDigits" (Ojs.float_to_js x2788)
        let (get_maximumSignificantDigits : 'tags this -> float option) =
          fun (x2790 : 'tags this) ->
            Ojs.option_of_js Ojs.float_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2790)
                 "maximumSignificantDigits")
        let (set_maximumSignificantDigits : 'tags this -> float -> unit) =
          fun (x2793 : 'tags this) ->
            fun (x2794 : float) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2793)
                "maximumSignificantDigits" (Ojs.float_to_js x2794)
        let (get_useGrouping : 'tags this -> bool) =
          fun (x2796 : 'tags this) ->
            Ojs.bool_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2796) "useGrouping")
        let (set_useGrouping : 'tags this -> bool -> unit) =
          fun (x2798 : 'tags this) ->
            fun (x2799 : bool) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2798) "useGrouping"
                (Ojs.bool_to_js x2799)
        let (create :
          ?compactDisplay:[ `L_s122_short  | `L_s78_long ] ->
            ?notation:[ `L_s114_scientific  | `L_s126_standard 
                      | `L_s33_compact  | `L_s51_engineering ]
              ->
              ?signDisplay:[ `L_s22_always  | `L_s23_auto 
                           | `L_s54_exceptZero  | `L_s93_never ]
                ->
                ?unit:string ->
                  ?unitDisplay:[ `L_s122_short  | `L_s78_long 
                               | `L_s92_narrow ]
                    ->
                    ?currencyDisplay:string ->
                      ?currencySign:string ->
                        locale:string ->
                          numberingSystem:string ->
                            style:string ->
                              ?currency:string ->
                                minimumIntegerDigits:float ->
                                  minimumFractionDigits:float ->
                                    maximumFractionDigits:float ->
                                      ?minimumSignificantDigits:float ->
                                        ?maximumSignificantDigits:float ->
                                          useGrouping:bool -> unit -> t)
          =
          fun
            ?compactDisplay:(x2801 : [ `L_s122_short  | `L_s78_long ] option)
            ->
            fun
              ?notation:(x2802 :
                          [ `L_s114_scientific  | `L_s126_standard 
                          | `L_s33_compact  | `L_s51_engineering ] option)
              ->
              fun
                ?signDisplay:(x2803 :
                               [ `L_s22_always  | `L_s23_auto 
                               | `L_s54_exceptZero  | `L_s93_never ] option)
                ->
                fun ?unit:(x2804 : string option) ->
                  fun
                    ?unitDisplay:(x2805 :
                                   [ `L_s122_short  | `L_s78_long 
                                   | `L_s92_narrow ] option)
                    ->
                    fun ?currencyDisplay:(x2806 : string option) ->
                      fun ?currencySign:(x2807 : string option) ->
                        fun ~locale:(x2808 : string) ->
                          fun ~numberingSystem:(x2809 : string) ->
                            fun ~style:(x2810 : string) ->
                              fun ?currency:(x2811 : string option) ->
                                fun ~minimumIntegerDigits:(x2812 : float) ->
                                  fun ~minimumFractionDigits:(x2813 : float)
                                    ->
                                    fun
                                      ~maximumFractionDigits:(x2814 : float)
                                      ->
                                      fun
                                        ?minimumSignificantDigits:(x2815 :
                                                                    float
                                                                    option)
                                        ->
                                        fun
                                          ?maximumSignificantDigits:(x2816 :
                                                                    float
                                                                    option)
                                          ->
                                          fun ~useGrouping:(x2817 : bool) ->
                                            fun () ->
                                              let x2818 = Ojs.empty_obj () in
                                              (match x2801 with
                                               | Some x2828 ->
                                                   Ojs.set_prop_ascii x2818
                                                     "compactDisplay"
                                                     (match x2828 with
                                                      | `L_s122_short ->
                                                          Ojs.string_to_js
                                                            "short"
                                                      | `L_s78_long ->
                                                          Ojs.string_to_js
                                                            "long")
                                               | None -> ());
                                              (match x2802 with
                                               | Some x2827 ->
                                                   Ojs.set_prop_ascii x2818
                                                     "notation"
                                                     (match x2827 with
                                                      | `L_s114_scientific ->
                                                          Ojs.string_to_js
                                                            "scientific"
                                                      | `L_s126_standard ->
                                                          Ojs.string_to_js
                                                            "standard"
                                                      | `L_s33_compact ->
                                                          Ojs.string_to_js
                                                            "compact"
                                                      | `L_s51_engineering ->
                                                          Ojs.string_to_js
                                                            "engineering")
                                               | None -> ());
                                              (match x2803 with
                                               | Some x2826 ->
                                                   Ojs.set_prop_ascii x2818
                                                     "signDisplay"
                                                     (match x2826 with
                                                      | `L_s22_always ->
                                                          Ojs.string_to_js
                                                            "always"
                                                      | `L_s23_auto ->
                                                          Ojs.string_to_js
                                                            "auto"
                                                      | `L_s54_exceptZero ->
                                                          Ojs.string_to_js
                                                            "exceptZero"
                                                      | `L_s93_never ->
                                                          Ojs.string_to_js
                                                            "never")
                                               | None -> ());
                                              (match x2804 with
                                               | Some x2825 ->
                                                   Ojs.set_prop_ascii x2818
                                                     "unit"
                                                     (Ojs.string_to_js x2825)
                                               | None -> ());
                                              (match x2805 with
                                               | Some x2824 ->
                                                   Ojs.set_prop_ascii x2818
                                                     "unitDisplay"
                                                     (match x2824 with
                                                      | `L_s122_short ->
                                                          Ojs.string_to_js
                                                            "short"
                                                      | `L_s78_long ->
                                                          Ojs.string_to_js
                                                            "long"
                                                      | `L_s92_narrow ->
                                                          Ojs.string_to_js
                                                            "narrow")
                                               | None -> ());
                                              (match x2806 with
                                               | Some x2823 ->
                                                   Ojs.set_prop_ascii x2818
                                                     "currencyDisplay"
                                                     (Ojs.string_to_js x2823)
                                               | None -> ());
                                              (match x2807 with
                                               | Some x2822 ->
                                                   Ojs.set_prop_ascii x2818
                                                     "currencySign"
                                                     (Ojs.string_to_js x2822)
                                               | None -> ());
                                              Ojs.set_prop_ascii x2818
                                                "locale"
                                                (Ojs.string_to_js x2808);
                                              Ojs.set_prop_ascii x2818
                                                "numberingSystem"
                                                (Ojs.string_to_js x2809);
                                              Ojs.set_prop_ascii x2818
                                                "style"
                                                (Ojs.string_to_js x2810);
                                              (match x2811 with
                                               | Some x2821 ->
                                                   Ojs.set_prop_ascii x2818
                                                     "currency"
                                                     (Ojs.string_to_js x2821)
                                               | None -> ());
                                              Ojs.set_prop_ascii x2818
                                                "minimumIntegerDigits"
                                                (Ojs.float_to_js x2812);
                                              Ojs.set_prop_ascii x2818
                                                "minimumFractionDigits"
                                                (Ojs.float_to_js x2813);
                                              Ojs.set_prop_ascii x2818
                                                "maximumFractionDigits"
                                                (Ojs.float_to_js x2814);
                                              (match x2815 with
                                               | Some x2820 ->
                                                   Ojs.set_prop_ascii x2818
                                                     "minimumSignificantDigits"
                                                     (Ojs.float_to_js x2820)
                                               | None -> ());
                                              (match x2816 with
                                               | Some x2819 ->
                                                   Ojs.set_prop_ascii x2818
                                                     "maximumSignificantDigits"
                                                     (Ojs.float_to_js x2819)
                                               | None -> ());
                                              Ojs.set_prop_ascii x2818
                                                "useGrouping"
                                                (Ojs.bool_to_js x2817);
                                              t_of_js x2818
        let cast_from = Obj.magic
      end
    module NumberFormatPart =
      struct
        type t = [ `Intl_NumberFormatPart ] intf
        let rec t_of_js : Ojs.t -> t = Obj.magic
        and t_to_js : t -> Ojs.t = Obj.magic
        type tags = [ `Intl_NumberFormatPart ]
        type 'tags this =
          'tags intf constraint 'tags = [> `Intl_NumberFormatPart ]
        let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
          =
          fun (type __tags) ->
            fun (__tags_of_js : Ojs.t -> __tags) ->
              fun (x2831 : Ojs.t) -> intf_of_js __tags_of_js x2831
        and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
          fun (type __tags) ->
            fun (__tags_to_js : __tags -> Ojs.t) ->
              fun (x2829 : __tags intf) -> intf_to_js __tags_to_js x2829
        let (get_type : 'tags this -> NumberFormatPartTypes.t) =
          fun (x2833 : 'tags this) ->
            NumberFormatPartTypes.t_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2833) "type")
        let (set_type : 'tags this -> NumberFormatPartTypes.t -> unit) =
          fun (x2835 : 'tags this) ->
            fun (x2836 : NumberFormatPartTypes.t) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2835) "type"
                (NumberFormatPartTypes.t_to_js x2836)
        let (get_value : 'tags this -> string) =
          fun (x2838 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2838) "value")
        let (set_value : 'tags this -> string -> unit) =
          fun (x2840 : 'tags this) ->
            fun (x2841 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2840) "value"
                (Ojs.string_to_js x2841)
        let (create :
          type_:NumberFormatPartTypes.t -> value:string -> unit -> t) =
          fun ~type_:(x2843 : NumberFormatPartTypes.t) ->
            fun ~value:(x2844 : string) ->
              fun () ->
                let x2845 = Ojs.empty_obj () in
                Ojs.set_prop_ascii x2845 "type"
                  (NumberFormatPartTypes.t_to_js x2843);
                Ojs.set_prop_ascii x2845 "value" (Ojs.string_to_js x2844);
                t_of_js x2845
        let cast_from = Obj.magic
      end
    module NumberRangeFormatPart =
      struct
        type t =
          [ `Intl_NumberFormatPart  | `Intl_NumberRangeFormatPart ] intf
        let rec t_of_js : Ojs.t -> t = Obj.magic
        and t_to_js : t -> Ojs.t = Obj.magic
        type tags = [ `Intl_NumberFormatPart  | `Intl_NumberRangeFormatPart ]
        type 'tags this =
          'tags intf constraint 'tags = [> `Intl_NumberRangeFormatPart ]
        let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
          =
          fun (type __tags) ->
            fun (__tags_of_js : Ojs.t -> __tags) ->
              fun (x2848 : Ojs.t) -> intf_of_js __tags_of_js x2848
        and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
          fun (type __tags) ->
            fun (__tags_to_js : __tags -> Ojs.t) ->
              fun (x2846 : __tags intf) -> intf_to_js __tags_to_js x2846
        let (get_source :
          'tags this ->
            [ `L_s121_shared  | `L_s127_startRange  | `L_s50_endRange ])
          =
          fun (x2850 : 'tags this) ->
            let x2852 =
              Ojs.get_prop_ascii (this_to_js Obj.magic x2850) "source" in
            match Ojs.string_of_js x2852 with
            | "shared" -> `L_s121_shared
            | "startRange" -> `L_s127_startRange
            | "endRange" -> `L_s50_endRange
            | _ -> assert false
        let (set_source :
          'tags this ->
            [ `U1 of [ `L_s127_startRange ]  | `U2 of [ `L_s50_endRange ] 
            | `U3 of [ `L_s121_shared ] ] -> unit)
          =
          fun (x2853 : 'tags this) ->
            fun
              (x2854 :
                [ `U1 of [ `L_s127_startRange ] 
                | `U2 of [ `L_s50_endRange ]  | `U3 of [ `L_s121_shared ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2853) "source"
                (match x2854 with
                 | `U1 x2855 ->
                     (match x2855 with
                      | `L_s127_startRange -> Ojs.string_to_js "startRange")
                 | `U2 x2856 ->
                     (match x2856 with
                      | `L_s50_endRange -> Ojs.string_to_js "endRange")
                 | `U3 x2857 ->
                     (match x2857 with
                      | `L_s121_shared -> Ojs.string_to_js "shared"))
        let (create :
          source:[ `L_s121_shared  | `L_s127_startRange  | `L_s50_endRange ]
            -> unit -> t)
          =
          fun
            ~source:(x2859 :
                      [ `L_s121_shared  | `L_s127_startRange 
                      | `L_s50_endRange ])
            ->
            fun () ->
              let x2860 = Ojs.empty_obj () in
              Ojs.set_prop_ascii x2860 "source"
                (match x2859 with
                 | `L_s121_shared -> Ojs.string_to_js "shared"
                 | `L_s127_startRange -> Ojs.string_to_js "startRange"
                 | `L_s50_endRange -> Ojs.string_to_js "endRange");
              t_of_js x2860
        let cast_from = Obj.magic
      end
    module NumberFormatOptions =
      struct
        type t = [ `Intl_NumberFormatOptions ] intf
        let rec t_of_js : Ojs.t -> t = Obj.magic
        and t_to_js : t -> Ojs.t = Obj.magic
        type tags = [ `Intl_NumberFormatOptions ]
        type 'tags this =
          'tags intf constraint 'tags = [> `Intl_NumberFormatOptions ]
        let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
          =
          fun (type __tags) ->
            fun (__tags_of_js : Ojs.t -> __tags) ->
              fun (x2863 : Ojs.t) -> intf_of_js __tags_of_js x2863
        and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
          fun (type __tags) ->
            fun (__tags_to_js : __tags -> Ojs.t) ->
              fun (x2861 : __tags intf) -> intf_to_js __tags_to_js x2861
        let (get_compactDisplay :
          'tags this -> [ `L_s122_short  | `L_s78_long ] option) =
          fun (x2865 : 'tags this) ->
            Ojs.option_of_js
              (fun (x2867 : Ojs.t) ->
                 let x2868 = x2867 in
                 match Ojs.string_of_js x2868 with
                 | "short" -> `L_s122_short
                 | "long" -> `L_s78_long
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2865)
                 "compactDisplay")
        let (set_compactDisplay :
          'tags this ->
            [ `Undefined of undefined  | `U1 of [ `L_s122_short ] 
            | `U2 of [ `L_s78_long ] ] -> unit)
          =
          fun (x2869 : 'tags this) ->
            fun
              (x2870 :
                [ `Undefined of undefined  | `U1 of [ `L_s122_short ] 
                | `U2 of [ `L_s78_long ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2869)
                "compactDisplay"
                (match x2870 with
                 | `Undefined x2871 -> undefined_to_js x2871
                 | `U1 x2872 ->
                     (match x2872 with
                      | `L_s122_short -> Ojs.string_to_js "short")
                 | `U2 x2873 ->
                     (match x2873 with
                      | `L_s78_long -> Ojs.string_to_js "long"))
        let (get_notation :
          'tags this ->
            [ `L_s114_scientific  | `L_s126_standard  | `L_s33_compact 
            | `L_s51_engineering ] option)
          =
          fun (x2875 : 'tags this) ->
            Ojs.option_of_js
              (fun (x2877 : Ojs.t) ->
                 let x2878 = x2877 in
                 match Ojs.string_of_js x2878 with
                 | "scientific" -> `L_s114_scientific
                 | "standard" -> `L_s126_standard
                 | "compact" -> `L_s33_compact
                 | "engineering" -> `L_s51_engineering
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2875) "notation")
        let (set_notation :
          'tags this ->
            [ `Undefined of undefined  | `U1 of [ `L_s126_standard ] 
            | `U2 of [ `L_s114_scientific ]  | `U3 of [ `L_s51_engineering ] 
            | `U4 of [ `L_s33_compact ] ] -> unit)
          =
          fun (x2879 : 'tags this) ->
            fun
              (x2880 :
                [ `Undefined of undefined  | `U1 of [ `L_s126_standard ] 
                | `U2 of [ `L_s114_scientific ] 
                | `U3 of [ `L_s51_engineering ] 
                | `U4 of [ `L_s33_compact ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2879) "notation"
                (match x2880 with
                 | `Undefined x2881 -> undefined_to_js x2881
                 | `U1 x2882 ->
                     (match x2882 with
                      | `L_s126_standard -> Ojs.string_to_js "standard")
                 | `U2 x2883 ->
                     (match x2883 with
                      | `L_s114_scientific -> Ojs.string_to_js "scientific")
                 | `U3 x2884 ->
                     (match x2884 with
                      | `L_s51_engineering -> Ojs.string_to_js "engineering")
                 | `U4 x2885 ->
                     (match x2885 with
                      | `L_s33_compact -> Ojs.string_to_js "compact"))
        let (get_signDisplay :
          'tags this ->
            [ `L_s22_always  | `L_s23_auto  | `L_s54_exceptZero 
            | `L_s93_never ] option)
          =
          fun (x2887 : 'tags this) ->
            Ojs.option_of_js
              (fun (x2889 : Ojs.t) ->
                 let x2890 = x2889 in
                 match Ojs.string_of_js x2890 with
                 | "always" -> `L_s22_always
                 | "auto" -> `L_s23_auto
                 | "exceptZero" -> `L_s54_exceptZero
                 | "never" -> `L_s93_never
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2887) "signDisplay")
        let (set_signDisplay :
          'tags this ->
            [ `Undefined of undefined  | `U1 of [ `L_s23_auto ] 
            | `U2 of [ `L_s93_never ]  | `U3 of [ `L_s22_always ] 
            | `U4 of [ `L_s54_exceptZero ] ] -> unit)
          =
          fun (x2891 : 'tags this) ->
            fun
              (x2892 :
                [ `Undefined of undefined  | `U1 of [ `L_s23_auto ] 
                | `U2 of [ `L_s93_never ]  | `U3 of [ `L_s22_always ] 
                | `U4 of [ `L_s54_exceptZero ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2891) "signDisplay"
                (match x2892 with
                 | `Undefined x2893 -> undefined_to_js x2893
                 | `U1 x2894 ->
                     (match x2894 with
                      | `L_s23_auto -> Ojs.string_to_js "auto")
                 | `U2 x2895 ->
                     (match x2895 with
                      | `L_s93_never -> Ojs.string_to_js "never")
                 | `U3 x2896 ->
                     (match x2896 with
                      | `L_s22_always -> Ojs.string_to_js "always")
                 | `U4 x2897 ->
                     (match x2897 with
                      | `L_s54_exceptZero -> Ojs.string_to_js "exceptZero"))
        let (get_unit : 'tags this -> string option) =
          fun (x2899 : 'tags this) ->
            Ojs.option_of_js Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2899) "unit")
        let (set_unit :
          'tags this -> [ `Undefined of undefined  | `U1 of string ] -> unit)
          =
          fun (x2902 : 'tags this) ->
            fun (x2903 : [ `Undefined of undefined  | `U1 of string ]) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2902) "unit"
                (match x2903 with
                 | `Undefined x2904 -> undefined_to_js x2904
                 | `U1 x2905 -> Ojs.string_to_js x2905)
        let (get_unitDisplay :
          'tags this ->
            [ `L_s122_short  | `L_s78_long  | `L_s92_narrow ] option)
          =
          fun (x2907 : 'tags this) ->
            Ojs.option_of_js
              (fun (x2909 : Ojs.t) ->
                 let x2910 = x2909 in
                 match Ojs.string_of_js x2910 with
                 | "short" -> `L_s122_short
                 | "long" -> `L_s78_long
                 | "narrow" -> `L_s92_narrow
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2907) "unitDisplay")
        let (set_unitDisplay :
          'tags this ->
            [ `Undefined of undefined  | `U1 of [ `L_s122_short ] 
            | `U2 of [ `L_s78_long ]  | `U3 of [ `L_s92_narrow ] ] -> 
              unit)
          =
          fun (x2911 : 'tags this) ->
            fun
              (x2912 :
                [ `Undefined of undefined  | `U1 of [ `L_s122_short ] 
                | `U2 of [ `L_s78_long ]  | `U3 of [ `L_s92_narrow ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2911) "unitDisplay"
                (match x2912 with
                 | `Undefined x2913 -> undefined_to_js x2913
                 | `U1 x2914 ->
                     (match x2914 with
                      | `L_s122_short -> Ojs.string_to_js "short")
                 | `U2 x2915 ->
                     (match x2915 with
                      | `L_s78_long -> Ojs.string_to_js "long")
                 | `U3 x2916 ->
                     (match x2916 with
                      | `L_s92_narrow -> Ojs.string_to_js "narrow"))
        let (get_currencyDisplay : 'tags this -> string option) =
          fun (x2918 : 'tags this) ->
            Ojs.option_of_js Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2918)
                 "currencyDisplay")
        let (set_currencyDisplay :
          'tags this -> [ `Undefined of undefined  | `U1 of string ] -> unit)
          =
          fun (x2921 : 'tags this) ->
            fun (x2922 : [ `Undefined of undefined  | `U1 of string ]) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2921)
                "currencyDisplay"
                (match x2922 with
                 | `Undefined x2923 -> undefined_to_js x2923
                 | `U1 x2924 -> Ojs.string_to_js x2924)
        let (get_currencySign : 'tags this -> string option) =
          fun (x2926 : 'tags this) ->
            Ojs.option_of_js Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2926) "currencySign")
        let (set_currencySign :
          'tags this -> [ `Undefined of undefined  | `U1 of string ] -> unit)
          =
          fun (x2929 : 'tags this) ->
            fun (x2930 : [ `Undefined of undefined  | `U1 of string ]) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2929) "currencySign"
                (match x2930 with
                 | `Undefined x2931 -> undefined_to_js x2931
                 | `U1 x2932 -> Ojs.string_to_js x2932)
        let (get_localeMatcher : 'tags this -> string option) =
          fun (x2934 : 'tags this) ->
            Ojs.option_of_js Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2934)
                 "localeMatcher")
        let (set_localeMatcher :
          'tags this -> [ `Undefined of undefined  | `U1 of string ] -> unit)
          =
          fun (x2937 : 'tags this) ->
            fun (x2938 : [ `Undefined of undefined  | `U1 of string ]) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2937) "localeMatcher"
                (match x2938 with
                 | `Undefined x2939 -> undefined_to_js x2939
                 | `U1 x2940 -> Ojs.string_to_js x2940)
        let (get_style : 'tags this -> string option) =
          fun (x2942 : 'tags this) ->
            Ojs.option_of_js Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2942) "style")
        let (set_style :
          'tags this -> [ `Undefined of undefined  | `U1 of string ] -> unit)
          =
          fun (x2945 : 'tags this) ->
            fun (x2946 : [ `Undefined of undefined  | `U1 of string ]) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2945) "style"
                (match x2946 with
                 | `Undefined x2947 -> undefined_to_js x2947
                 | `U1 x2948 -> Ojs.string_to_js x2948)
        let (get_currency : 'tags this -> string option) =
          fun (x2950 : 'tags this) ->
            Ojs.option_of_js Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2950) "currency")
        let (set_currency :
          'tags this -> [ `Undefined of undefined  | `U1 of string ] -> unit)
          =
          fun (x2953 : 'tags this) ->
            fun (x2954 : [ `Undefined of undefined  | `U1 of string ]) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2953) "currency"
                (match x2954 with
                 | `Undefined x2955 -> undefined_to_js x2955
                 | `U1 x2956 -> Ojs.string_to_js x2956)
        let (get_currencySign' : 'tags this -> string option) =
          fun (x2958 : 'tags this) ->
            Ojs.option_of_js Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2958) "currencySign")
        let (set_currencySign' :
          'tags this -> [ `Undefined of undefined  | `U1 of string ] -> unit)
          =
          fun (x2961 : 'tags this) ->
            fun (x2962 : [ `Undefined of undefined  | `U1 of string ]) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2961) "currencySign"
                (match x2962 with
                 | `Undefined x2963 -> undefined_to_js x2963
                 | `U1 x2964 -> Ojs.string_to_js x2964)
        let (get_useGrouping : 'tags this -> bool option) =
          fun (x2966 : 'tags this) ->
            Ojs.option_of_js Ojs.bool_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2966) "useGrouping")
        let (set_useGrouping :
          'tags this -> [ `Undefined of undefined  | `U1 of bool ] -> unit) =
          fun (x2969 : 'tags this) ->
            fun (x2970 : [ `Undefined of undefined  | `U1 of bool ]) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2969) "useGrouping"
                (match x2970 with
                 | `Undefined x2971 -> undefined_to_js x2971
                 | `U1 x2972 -> Ojs.bool_to_js x2972)
        let (get_minimumIntegerDigits : 'tags this -> float option) =
          fun (x2974 : 'tags this) ->
            Ojs.option_of_js Ojs.float_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2974)
                 "minimumIntegerDigits")
        let (set_minimumIntegerDigits :
          'tags this -> [ `Undefined of undefined  | `U1 of float ] -> unit)
          =
          fun (x2977 : 'tags this) ->
            fun (x2978 : [ `Undefined of undefined  | `U1 of float ]) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2977)
                "minimumIntegerDigits"
                (match x2978 with
                 | `Undefined x2979 -> undefined_to_js x2979
                 | `U1 x2980 -> Ojs.float_to_js x2980)
        let (get_minimumFractionDigits : 'tags this -> float option) =
          fun (x2982 : 'tags this) ->
            Ojs.option_of_js Ojs.float_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2982)
                 "minimumFractionDigits")
        let (set_minimumFractionDigits :
          'tags this -> [ `Undefined of undefined  | `U1 of float ] -> unit)
          =
          fun (x2985 : 'tags this) ->
            fun (x2986 : [ `Undefined of undefined  | `U1 of float ]) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2985)
                "minimumFractionDigits"
                (match x2986 with
                 | `Undefined x2987 -> undefined_to_js x2987
                 | `U1 x2988 -> Ojs.float_to_js x2988)
        let (get_maximumFractionDigits : 'tags this -> float option) =
          fun (x2990 : 'tags this) ->
            Ojs.option_of_js Ojs.float_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2990)
                 "maximumFractionDigits")
        let (set_maximumFractionDigits :
          'tags this -> [ `Undefined of undefined  | `U1 of float ] -> unit)
          =
          fun (x2993 : 'tags this) ->
            fun (x2994 : [ `Undefined of undefined  | `U1 of float ]) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2993)
                "maximumFractionDigits"
                (match x2994 with
                 | `Undefined x2995 -> undefined_to_js x2995
                 | `U1 x2996 -> Ojs.float_to_js x2996)
        let (get_minimumSignificantDigits : 'tags this -> float option) =
          fun (x2998 : 'tags this) ->
            Ojs.option_of_js Ojs.float_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2998)
                 "minimumSignificantDigits")
        let (set_minimumSignificantDigits :
          'tags this -> [ `Undefined of undefined  | `U1 of float ] -> unit)
          =
          fun (x3001 : 'tags this) ->
            fun (x3002 : [ `Undefined of undefined  | `U1 of float ]) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3001)
                "minimumSignificantDigits"
                (match x3002 with
                 | `Undefined x3003 -> undefined_to_js x3003
                 | `U1 x3004 -> Ojs.float_to_js x3004)
        let (get_maximumSignificantDigits : 'tags this -> float option) =
          fun (x3006 : 'tags this) ->
            Ojs.option_of_js Ojs.float_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3006)
                 "maximumSignificantDigits")
        let (set_maximumSignificantDigits :
          'tags this -> [ `Undefined of undefined  | `U1 of float ] -> unit)
          =
          fun (x3009 : 'tags this) ->
            fun (x3010 : [ `Undefined of undefined  | `U1 of float ]) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3009)
                "maximumSignificantDigits"
                (match x3010 with
                 | `Undefined x3011 -> undefined_to_js x3011
                 | `U1 x3012 -> Ojs.float_to_js x3012)
        let (create :
          ?compactDisplay:[ `L_s122_short  | `L_s78_long ] ->
            ?notation:[ `L_s114_scientific  | `L_s126_standard 
                      | `L_s33_compact  | `L_s51_engineering ]
              ->
              ?signDisplay:[ `L_s22_always  | `L_s23_auto 
                           | `L_s54_exceptZero  | `L_s93_never ]
                ->
                ?unit:string ->
                  ?unitDisplay:[ `L_s122_short  | `L_s78_long 
                               | `L_s92_narrow ]
                    ->
                    ?currencyDisplay:string ->
                      ?currencySign:string ->
                        ?localeMatcher:string ->
                          ?style:string ->
                            ?currency:string ->
                              ?useGrouping:bool ->
                                ?minimumIntegerDigits:float ->
                                  ?minimumFractionDigits:float ->
                                    ?maximumFractionDigits:float ->
                                      ?minimumSignificantDigits:float ->
                                        ?maximumSignificantDigits:float ->
                                          unit -> t)
          =
          fun
            ?compactDisplay:(x3014 : [ `L_s122_short  | `L_s78_long ] option)
            ->
            fun
              ?notation:(x3015 :
                          [ `L_s114_scientific  | `L_s126_standard 
                          | `L_s33_compact  | `L_s51_engineering ] option)
              ->
              fun
                ?signDisplay:(x3016 :
                               [ `L_s22_always  | `L_s23_auto 
                               | `L_s54_exceptZero  | `L_s93_never ] option)
                ->
                fun ?unit:(x3017 : string option) ->
                  fun
                    ?unitDisplay:(x3018 :
                                   [ `L_s122_short  | `L_s78_long 
                                   | `L_s92_narrow ] option)
                    ->
                    fun ?currencyDisplay:(x3019 : string option) ->
                      fun ?currencySign:(x3020 : string option) ->
                        fun ?localeMatcher:(x3021 : string option) ->
                          fun ?style:(x3022 : string option) ->
                            fun ?currency:(x3023 : string option) ->
                              fun ?useGrouping:(x3024 : bool option) ->
                                fun
                                  ?minimumIntegerDigits:(x3025 :
                                                          float option)
                                  ->
                                  fun
                                    ?minimumFractionDigits:(x3026 :
                                                             float option)
                                    ->
                                    fun
                                      ?maximumFractionDigits:(x3027 :
                                                               float option)
                                      ->
                                      fun
                                        ?minimumSignificantDigits:(x3028 :
                                                                    float
                                                                    option)
                                        ->
                                        fun
                                          ?maximumSignificantDigits:(x3029 :
                                                                    float
                                                                    option)
                                          ->
                                          fun () ->
                                            let x3030 = Ojs.empty_obj () in
                                            (match x3014 with
                                             | Some x3046 ->
                                                 Ojs.set_prop_ascii x3030
                                                   "compactDisplay"
                                                   (match x3046 with
                                                    | `L_s122_short ->
                                                        Ojs.string_to_js
                                                          "short"
                                                    | `L_s78_long ->
                                                        Ojs.string_to_js
                                                          "long")
                                             | None -> ());
                                            (match x3015 with
                                             | Some x3045 ->
                                                 Ojs.set_prop_ascii x3030
                                                   "notation"
                                                   (match x3045 with
                                                    | `L_s114_scientific ->
                                                        Ojs.string_to_js
                                                          "scientific"
                                                    | `L_s126_standard ->
                                                        Ojs.string_to_js
                                                          "standard"
                                                    | `L_s33_compact ->
                                                        Ojs.string_to_js
                                                          "compact"
                                                    | `L_s51_engineering ->
                                                        Ojs.string_to_js
                                                          "engineering")
                                             | None -> ());
                                            (match x3016 with
                                             | Some x3044 ->
                                                 Ojs.set_prop_ascii x3030
                                                   "signDisplay"
                                                   (match x3044 with
                                                    | `L_s22_always ->
                                                        Ojs.string_to_js
                                                          "always"
                                                    | `L_s23_auto ->
                                                        Ojs.string_to_js
                                                          "auto"
                                                    | `L_s54_exceptZero ->
                                                        Ojs.string_to_js
                                                          "exceptZero"
                                                    | `L_s93_never ->
                                                        Ojs.string_to_js
                                                          "never")
                                             | None -> ());
                                            (match x3017 with
                                             | Some x3043 ->
                                                 Ojs.set_prop_ascii x3030
                                                   "unit"
                                                   (Ojs.string_to_js x3043)
                                             | None -> ());
                                            (match x3018 with
                                             | Some x3042 ->
                                                 Ojs.set_prop_ascii x3030
                                                   "unitDisplay"
                                                   (match x3042 with
                                                    | `L_s122_short ->
                                                        Ojs.string_to_js
                                                          "short"
                                                    | `L_s78_long ->
                                                        Ojs.string_to_js
                                                          "long"
                                                    | `L_s92_narrow ->
                                                        Ojs.string_to_js
                                                          "narrow")
                                             | None -> ());
                                            (match x3019 with
                                             | Some x3041 ->
                                                 Ojs.set_prop_ascii x3030
                                                   "currencyDisplay"
                                                   (Ojs.string_to_js x3041)
                                             | None -> ());
                                            (match x3020 with
                                             | Some x3040 ->
                                                 Ojs.set_prop_ascii x3030
                                                   "currencySign"
                                                   (Ojs.string_to_js x3040)
                                             | None -> ());
                                            (match x3021 with
                                             | Some x3039 ->
                                                 Ojs.set_prop_ascii x3030
                                                   "localeMatcher"
                                                   (Ojs.string_to_js x3039)
                                             | None -> ());
                                            (match x3022 with
                                             | Some x3038 ->
                                                 Ojs.set_prop_ascii x3030
                                                   "style"
                                                   (Ojs.string_to_js x3038)
                                             | None -> ());
                                            (match x3023 with
                                             | Some x3037 ->
                                                 Ojs.set_prop_ascii x3030
                                                   "currency"
                                                   (Ojs.string_to_js x3037)
                                             | None -> ());
                                            (match x3024 with
                                             | Some x3036 ->
                                                 Ojs.set_prop_ascii x3030
                                                   "useGrouping"
                                                   (Ojs.bool_to_js x3036)
                                             | None -> ());
                                            (match x3025 with
                                             | Some x3035 ->
                                                 Ojs.set_prop_ascii x3030
                                                   "minimumIntegerDigits"
                                                   (Ojs.float_to_js x3035)
                                             | None -> ());
                                            (match x3026 with
                                             | Some x3034 ->
                                                 Ojs.set_prop_ascii x3030
                                                   "minimumFractionDigits"
                                                   (Ojs.float_to_js x3034)
                                             | None -> ());
                                            (match x3027 with
                                             | Some x3033 ->
                                                 Ojs.set_prop_ascii x3030
                                                   "maximumFractionDigits"
                                                   (Ojs.float_to_js x3033)
                                             | None -> ());
                                            (match x3028 with
                                             | Some x3032 ->
                                                 Ojs.set_prop_ascii x3030
                                                   "minimumSignificantDigits"
                                                   (Ojs.float_to_js x3032)
                                             | None -> ());
                                            (match x3029 with
                                             | Some x3031 ->
                                                 Ojs.set_prop_ascii x3030
                                                   "maximumSignificantDigits"
                                                   (Ojs.float_to_js x3031)
                                             | None -> ());
                                            t_of_js x3030
        let cast_from = Obj.magic
      end
    module NumberFormat =
      struct
        type t = [ `Intl_NumberFormat ] intf
        let rec t_of_js : Ojs.t -> t = Obj.magic
        and t_to_js : t -> Ojs.t = Obj.magic
        type tags = [ `Intl_NumberFormat ]
        type 'tags this =
          'tags intf constraint 'tags = [> `Intl_NumberFormat ]
        let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
          =
          fun (type __tags) ->
            fun (__tags_of_js : Ojs.t -> __tags) ->
              fun (x3049 : Ojs.t) -> intf_of_js __tags_of_js x3049
        and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
          fun (type __tags) ->
            fun (__tags_to_js : __tags -> Ojs.t) ->
              fun (x3047 : __tags intf) -> intf_to_js __tags_to_js x3047
        let (formatRange :
          'tags this ->
            start:[ `U1 of float  | `U2 of bigint ] ->
              end_:[ `U1 of float  | `U2 of bigint ] -> string)
          =
          fun (x3057 : 'tags this) ->
            fun ~start:(x3051 : [ `U1 of float  | `U2 of bigint ]) ->
              fun ~end_:(x3054 : [ `U1 of float  | `U2 of bigint ]) ->
                Ojs.string_of_js
                  (Ojs.call (this_to_js Obj.magic x3057) "formatRange"
                     [|((match x3051 with
                         | `U1 x3052 -> Ojs.float_to_js x3052
                         | `U2 x3053 -> bigint_to_js x3053));((match x3054
                                                               with
                                                               | `U1 x3055 ->
                                                                   Ojs.float_to_js
                                                                    x3055
                                                               | `U2 x3056 ->
                                                                   bigint_to_js
                                                                    x3056))|])
        let (formatRangeToParts :
          'tags this ->
            start:[ `U1 of float  | `U2 of bigint ] ->
              end_:[ `U1 of float  | `U2 of bigint ] ->
                NumberRangeFormatPart.t list)
          =
          fun (x3065 : 'tags this) ->
            fun ~start:(x3059 : [ `U1 of float  | `U2 of bigint ]) ->
              fun ~end_:(x3062 : [ `U1 of float  | `U2 of bigint ]) ->
                Ojs.list_of_js NumberRangeFormatPart.t_of_js
                  (Ojs.call (this_to_js Obj.magic x3065) "formatRangeToParts"
                     [|((match x3059 with
                         | `U1 x3060 -> Ojs.float_to_js x3060
                         | `U2 x3061 -> bigint_to_js x3061));((match x3062
                                                               with
                                                               | `U1 x3063 ->
                                                                   Ojs.float_to_js
                                                                    x3063
                                                               | `U2 x3064 ->
                                                                   bigint_to_js
                                                                    x3064))|])
        let (format :
          'tags this -> value:[ `U1 of float  | `U2 of bigint ] -> string) =
          fun (x3071 : 'tags this) ->
            fun ~value:(x3068 : [ `U1 of float  | `U2 of bigint ]) ->
              Ojs.string_of_js
                (Ojs.call (this_to_js Obj.magic x3071) "format"
                   [|((match x3068 with
                       | `U1 x3069 -> Ojs.float_to_js x3069
                       | `U2 x3070 -> bigint_to_js x3070))|])
        let (resolvedOptions : 'tags this -> ResolvedNumberFormatOptions.t) =
          fun (x3073 : 'tags this) ->
            ResolvedNumberFormatOptions.t_of_js
              (Ojs.call (this_to_js Obj.magic x3073) "resolvedOptions" [||])
        let (formatToParts :
          'tags this ->
            ?number:[ `U1 of float  | `U2 of bigint ] ->
              unit -> NumberFormatPart.t list)
          =
          fun (x3080 : 'tags this) ->
            fun ?number:(x3075 : [ `U1 of float  | `U2 of bigint ] option) ->
              fun () ->
                Ojs.list_of_js NumberFormatPart.t_of_js
                  (let x3082 = this_to_js Obj.magic x3080 in
                   Ojs.call (Ojs.get_prop_ascii x3082 "formatToParts")
                     "apply"
                     [|x3082;((let x3076 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               (match x3075 with
                                | Some x3077 ->
                                    ignore
                                      (Ojs.call x3076 "push"
                                         [|((match x3077 with
                                             | `U1 x3078 ->
                                                 Ojs.float_to_js x3078
                                             | `U2 x3079 ->
                                                 bigint_to_js x3079))|])
                                | None -> ());
                               x3076))|])
        let (format' : 'tags this -> value:float -> string) =
          fun (x3085 : 'tags this) ->
            fun ~value:(x3084 : float) ->
              Ojs.string_of_js
                (Ojs.call (this_to_js Obj.magic x3085) "format"
                   [|(Ojs.float_to_js x3084)|])
        let (resolvedOptions' : 'tags this -> ResolvedNumberFormatOptions.t)
          =
          fun (x3087 : 'tags this) ->
            ResolvedNumberFormatOptions.t_of_js
              (Ojs.call (this_to_js Obj.magic x3087) "resolvedOptions" [||])
        let cast_from = Obj.magic
        let (create :
          ?locales:[ `U1 of string  | `U2 of string list ] ->
            ?options:NumberFormatOptions.t -> unit -> t)
          =
          fun
            ?locales:(x3089 : [ `U1 of string  | `U2 of string list ] option)
            ->
            fun ?options:(x3090 : NumberFormatOptions.t option) ->
              fun () ->
                t_of_js
                  (Ojs.new_obj_arr
                     (Ojs.get_prop_ascii
                        (Ojs.get_prop_ascii Ojs.global "Intl") "NumberFormat")
                     (let x3091 =
                        Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                          [||] in
                      (match x3089 with
                       | Some x3093 ->
                           ignore
                             (Ojs.call x3091 "push"
                                [|((match x3093 with
                                    | `U1 x3094 -> Ojs.string_to_js x3094
                                    | `U2 x3095 ->
                                        Ojs.list_to_js Ojs.string_to_js x3095))|])
                       | None -> ());
                      (match x3090 with
                       | Some x3092 ->
                           ignore
                             (Ojs.call x3091 "push"
                                [|(NumberFormatOptions.t_to_js x3092)|])
                       | None -> ());
                      x3091))
        let (invoke :
          ?locales:[ `U1 of string  | `U2 of string list ] ->
            ?options:NumberFormatOptions.t -> unit -> t)
          =
          fun
            ?locales:(x3097 : [ `U1 of string  | `U2 of string list ] option)
            ->
            fun ?options:(x3098 : NumberFormatOptions.t option) ->
              fun () ->
                t_of_js
                  (Ojs.call
                     (Ojs.get_prop_ascii
                        (Ojs.get_prop_ascii Ojs.global "Intl") "NumberFormat")
                     "apply"
                     [|Ojs.null;((let x3099 =
                                    Ojs.new_obj
                                      (Ojs.get_prop_ascii Ojs.global "Array")
                                      [||] in
                                  (match x3097 with
                                   | Some x3101 ->
                                       ignore
                                         (Ojs.call x3099 "push"
                                            [|((match x3101 with
                                                | `U1 x3102 ->
                                                    Ojs.string_to_js x3102
                                                | `U2 x3103 ->
                                                    Ojs.list_to_js
                                                      Ojs.string_to_js x3103))|])
                                   | None -> ());
                                  (match x3098 with
                                   | Some x3100 ->
                                       ignore
                                         (Ojs.call x3099 "push"
                                            [|(NumberFormatOptions.t_to_js
                                                 x3100)|])
                                   | None -> ());
                                  x3099))|])
        let (supportedLocalesOf :
          locales:[ `U1 of string  | `U2 of string list ] ->
            ?options:NumberFormatOptions.t -> unit -> string list)
          =
          fun ~locales:(x3105 : [ `U1 of string  | `U2 of string list ]) ->
            fun ?options:(x3106 : NumberFormatOptions.t option) ->
              fun () ->
                Ojs.list_of_js Ojs.string_of_js
                  (let x3112 =
                     Ojs.get_prop_ascii
                       (Ojs.get_prop_ascii Ojs.global "Intl") "NumberFormat" in
                   Ojs.call (Ojs.get_prop_ascii x3112 "supportedLocalesOf")
                     "apply"
                     [|x3112;((let x3107 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x3107 "push"
                                    [|((match x3105 with
                                        | `U1 x3109 -> Ojs.string_to_js x3109
                                        | `U2 x3110 ->
                                            Ojs.list_to_js Ojs.string_to_js
                                              x3110))|]);
                               (match x3106 with
                                | Some x3108 ->
                                    ignore
                                      (Ojs.call x3107 "push"
                                         [|(NumberFormatOptions.t_to_js x3108)|])
                                | None -> ());
                               x3107))|])
        let (prototype : unit -> t) =
          fun () ->
            t_of_js
              (Ojs.get_prop_ascii
                 (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Intl")
                    "NumberFormat") "prototype")
      end
    module ListFormatType =
      struct
        type t = [ `L_s137_unit  | `L_s35_conjunction  | `L_s46_disjunction ]
        let rec t_of_js : Ojs.t -> t =
          fun (x3115 : Ojs.t) ->
            let x3116 = x3115 in
            match Ojs.string_of_js x3116 with
            | "unit" -> `L_s137_unit
            | "conjunction" -> `L_s35_conjunction
            | "disjunction" -> `L_s46_disjunction
            | _ -> assert false
        and t_to_js : t -> Ojs.t =
          fun
            (x3114 :
              [ `L_s137_unit  | `L_s35_conjunction  | `L_s46_disjunction ])
            ->
            match x3114 with
            | `L_s137_unit -> Ojs.string_to_js "unit"
            | `L_s35_conjunction -> Ojs.string_to_js "conjunction"
            | `L_s46_disjunction -> Ojs.string_to_js "disjunction"
      end
    module ListFormatStyle =
      struct
        type t = [ `L_s122_short  | `L_s78_long  | `L_s92_narrow ]
        let rec t_of_js : Ojs.t -> t =
          fun (x3118 : Ojs.t) ->
            let x3119 = x3118 in
            match Ojs.string_of_js x3119 with
            | "short" -> `L_s122_short
            | "long" -> `L_s78_long
            | "narrow" -> `L_s92_narrow
            | _ -> assert false
        and t_to_js : t -> Ojs.t =
          fun (x3117 : [ `L_s122_short  | `L_s78_long  | `L_s92_narrow ]) ->
            match x3117 with
            | `L_s122_short -> Ojs.string_to_js "short"
            | `L_s78_long -> Ojs.string_to_js "long"
            | `L_s92_narrow -> Ojs.string_to_js "narrow"
      end
    module ResolvedListFormatOptions =
      struct
        type t = [ `Intl_ResolvedListFormatOptions ] intf
        let rec t_of_js : Ojs.t -> t = Obj.magic
        and t_to_js : t -> Ojs.t = Obj.magic
        type tags = [ `Intl_ResolvedListFormatOptions ]
        type 'tags this =
          'tags intf constraint 'tags = [> `Intl_ResolvedListFormatOptions ]
        let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
          =
          fun (type __tags) ->
            fun (__tags_of_js : Ojs.t -> __tags) ->
              fun (x3122 : Ojs.t) -> intf_of_js __tags_of_js x3122
        and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
          fun (type __tags) ->
            fun (__tags_to_js : __tags -> Ojs.t) ->
              fun (x3120 : __tags intf) -> intf_to_js __tags_to_js x3120
        let (get_locale : 'tags this -> string) =
          fun (x3124 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3124) "locale")
        let (set_locale : 'tags this -> string -> unit) =
          fun (x3126 : 'tags this) ->
            fun (x3127 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3126) "locale"
                (Ojs.string_to_js x3127)
        let (get_style : 'tags this -> ListFormatStyle.t) =
          fun (x3129 : 'tags this) ->
            ListFormatStyle.t_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3129) "style")
        let (set_style : 'tags this -> ListFormatStyle.t -> unit) =
          fun (x3131 : 'tags this) ->
            fun (x3132 : ListFormatStyle.t) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3131) "style"
                (ListFormatStyle.t_to_js x3132)
        let (get_type : 'tags this -> ListFormatType.t) =
          fun (x3134 : 'tags this) ->
            ListFormatType.t_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3134) "type")
        let (set_type : 'tags this -> ListFormatType.t -> unit) =
          fun (x3136 : 'tags this) ->
            fun (x3137 : ListFormatType.t) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3136) "type"
                (ListFormatType.t_to_js x3137)
        let (create :
          locale:string ->
            style:ListFormatStyle.t -> type_:ListFormatType.t -> unit -> t)
          =
          fun ~locale:(x3139 : string) ->
            fun ~style:(x3140 : ListFormatStyle.t) ->
              fun ~type_:(x3141 : ListFormatType.t) ->
                fun () ->
                  let x3142 = Ojs.empty_obj () in
                  Ojs.set_prop_ascii x3142 "locale" (Ojs.string_to_js x3139);
                  Ojs.set_prop_ascii x3142 "style"
                    (ListFormatStyle.t_to_js x3140);
                  Ojs.set_prop_ascii x3142 "type"
                    (ListFormatType.t_to_js x3141);
                  t_of_js x3142
        let cast_from = Obj.magic
      end
    module ListFormatLocaleMatcher =
      struct
        type t = [ `L_s26_best_fit  | `L_s81_lookup ]
        let rec t_of_js : Ojs.t -> t =
          fun (x3144 : Ojs.t) ->
            let x3145 = x3144 in
            match Ojs.string_of_js x3145 with
            | "best fit" -> `L_s26_best_fit
            | "lookup" -> `L_s81_lookup
            | _ -> assert false
        and t_to_js : t -> Ojs.t =
          fun (x3143 : [ `L_s26_best_fit  | `L_s81_lookup ]) ->
            match x3143 with
            | `L_s26_best_fit -> Ojs.string_to_js "best fit"
            | `L_s81_lookup -> Ojs.string_to_js "lookup"
      end
    module ListFormatOptions =
      struct
        type t = [ `Intl_ListFormatOptions ] intf
        let rec t_of_js : Ojs.t -> t = Obj.magic
        and t_to_js : t -> Ojs.t = Obj.magic
        type tags = [ `Intl_ListFormatOptions ]
        type 'tags this =
          'tags intf constraint 'tags = [> `Intl_ListFormatOptions ]
        let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
          =
          fun (type __tags) ->
            fun (__tags_of_js : Ojs.t -> __tags) ->
              fun (x3148 : Ojs.t) -> intf_of_js __tags_of_js x3148
        and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
          fun (type __tags) ->
            fun (__tags_to_js : __tags -> Ojs.t) ->
              fun (x3146 : __tags intf) -> intf_to_js __tags_to_js x3146
        let (get_localeMatcher :
          'tags this -> ListFormatLocaleMatcher.t option) =
          fun (x3150 : 'tags this) ->
            Ojs.option_of_js ListFormatLocaleMatcher.t_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3150)
                 "localeMatcher")
        let (set_localeMatcher :
          'tags this ->
            [ `Undefined of undefined  | `U1 of ListFormatLocaleMatcher.t ]
              -> unit)
          =
          fun (x3153 : 'tags this) ->
            fun
              (x3154 :
                [ `Undefined of undefined 
                | `U1 of ListFormatLocaleMatcher.t ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3153) "localeMatcher"
                (match x3154 with
                 | `Undefined x3155 -> undefined_to_js x3155
                 | `U1 x3156 -> ListFormatLocaleMatcher.t_to_js x3156)
        let (get_type : 'tags this -> ListFormatType.t option) =
          fun (x3158 : 'tags this) ->
            Ojs.option_of_js ListFormatType.t_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3158) "type")
        let (set_type :
          'tags this ->
            [ `Undefined of undefined  | `U1 of ListFormatType.t ] -> unit)
          =
          fun (x3161 : 'tags this) ->
            fun
              (x3162 :
                [ `Undefined of undefined  | `U1 of ListFormatType.t ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3161) "type"
                (match x3162 with
                 | `Undefined x3163 -> undefined_to_js x3163
                 | `U1 x3164 -> ListFormatType.t_to_js x3164)
        let (get_style : 'tags this -> ListFormatStyle.t option) =
          fun (x3166 : 'tags this) ->
            Ojs.option_of_js ListFormatStyle.t_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3166) "style")
        let (set_style :
          'tags this ->
            [ `Undefined of undefined  | `U1 of ListFormatStyle.t ] -> unit)
          =
          fun (x3169 : 'tags this) ->
            fun
              (x3170 :
                [ `Undefined of undefined  | `U1 of ListFormatStyle.t ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3169) "style"
                (match x3170 with
                 | `Undefined x3171 -> undefined_to_js x3171
                 | `U1 x3172 -> ListFormatStyle.t_to_js x3172)
        let (create :
          ?localeMatcher:ListFormatLocaleMatcher.t ->
            ?type_:ListFormatType.t -> ?style:ListFormatStyle.t -> unit -> t)
          =
          fun ?localeMatcher:(x3174 : ListFormatLocaleMatcher.t option) ->
            fun ?type_:(x3175 : ListFormatType.t option) ->
              fun ?style:(x3176 : ListFormatStyle.t option) ->
                fun () ->
                  let x3177 = Ojs.empty_obj () in
                  (match x3174 with
                   | Some x3180 ->
                       Ojs.set_prop_ascii x3177 "localeMatcher"
                         (ListFormatLocaleMatcher.t_to_js x3180)
                   | None -> ());
                  (match x3175 with
                   | Some x3179 ->
                       Ojs.set_prop_ascii x3177 "type"
                         (ListFormatType.t_to_js x3179)
                   | None -> ());
                  (match x3176 with
                   | Some x3178 ->
                       Ojs.set_prop_ascii x3177 "style"
                         (ListFormatStyle.t_to_js x3178)
                   | None -> ());
                  t_of_js x3177
        let cast_from = Obj.magic
      end
    module ListFormat =
      struct
        module AnonymousInterface12 =
          struct
            type t = Ojs.t
            let rec t_of_js : Ojs.t -> t = fun (x3182 : Ojs.t) -> x3182
            and t_to_js : t -> Ojs.t = fun (x3181 : Ojs.t) -> x3181
            let (get_type : t -> [ `L_s48_element  | `L_s76_literal ]) =
              fun (x3183 : t) ->
                let x3184 = Ojs.get_prop_ascii (t_to_js x3183) "type" in
                match Ojs.string_of_js x3184 with
                | "element" -> `L_s48_element
                | "literal" -> `L_s76_literal
                | _ -> assert false
            let (set_type :
              t ->
                [ `U1 of [ `L_s48_element ]  | `U2 of [ `L_s76_literal ] ] ->
                  unit)
              =
              fun (x3185 : t) ->
                fun
                  (x3186 :
                    [ `U1 of [ `L_s48_element ] 
                    | `U2 of [ `L_s76_literal ] ])
                  ->
                  Ojs.set_prop_ascii (t_to_js x3185) "type"
                    (match x3186 with
                     | `U1 x3187 ->
                         (match x3187 with
                          | `L_s48_element -> Ojs.string_to_js "element")
                     | `U2 x3188 ->
                         (match x3188 with
                          | `L_s76_literal -> Ojs.string_to_js "literal"))
            let (get_value : t -> string) =
              fun (x3189 : t) ->
                Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x3189) "value")
            let (set_value : t -> string -> unit) =
              fun (x3190 : t) ->
                fun (x3191 : string) ->
                  Ojs.set_prop_ascii (t_to_js x3190) "value"
                    (Ojs.string_to_js x3191)
            let (create :
              type_:[ `L_s48_element  | `L_s76_literal ] ->
                value:string -> unit -> t)
              =
              fun ~type_:(x3192 : [ `L_s48_element  | `L_s76_literal ]) ->
                fun ~value:(x3193 : string) ->
                  fun () ->
                    let x3194 = Ojs.empty_obj () in
                    Ojs.set_prop_ascii x3194 "type"
                      (match x3192 with
                       | `L_s48_element -> Ojs.string_to_js "element"
                       | `L_s76_literal -> Ojs.string_to_js "literal");
                    Ojs.set_prop_ascii x3194 "value" (Ojs.string_to_js x3193);
                    t_of_js x3194
          end
        type t = [ `Intl_ListFormat ] intf
        let rec t_of_js : Ojs.t -> t = Obj.magic
        and t_to_js : t -> Ojs.t = Obj.magic
        type tags = [ `Intl_ListFormat ]
        type 'tags this = 'tags intf constraint 'tags = [> `Intl_ListFormat ]
        let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
          =
          fun (type __tags) ->
            fun (__tags_of_js : Ojs.t -> __tags) ->
              fun (x3197 : Ojs.t) -> intf_of_js __tags_of_js x3197
        and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
          fun (type __tags) ->
            fun (__tags_to_js : __tags -> Ojs.t) ->
              fun (x3195 : __tags intf) -> intf_to_js __tags_to_js x3195
        let (format : 'tags this -> list:string Iterable.t -> string) =
          fun (x3201 : 'tags this) ->
            fun ~list:(x3199 : string Iterable.t) ->
              Ojs.string_of_js
                (Ojs.call (this_to_js Obj.magic x3201) "format"
                   [|(Iterable.t_to_js Ojs.string_to_js x3199)|])
        let (formatToParts :
          'tags this -> list:string Iterable.t -> AnonymousInterface12.t list)
          =
          fun (x3205 : 'tags this) ->
            fun ~list:(x3203 : string Iterable.t) ->
              Ojs.list_of_js AnonymousInterface12.t_of_js
                (Ojs.call (this_to_js Obj.magic x3205) "formatToParts"
                   [|(Iterable.t_to_js Ojs.string_to_js x3203)|])
        let (resolvedOptions : 'tags this -> ResolvedListFormatOptions.t) =
          fun (x3208 : 'tags this) ->
            ResolvedListFormatOptions.t_of_js
              (Ojs.call (this_to_js Obj.magic x3208) "resolvedOptions" [||])
        let cast_from = Obj.magic
        let (prototype : unit -> t) =
          fun () ->
            t_of_js
              (Ojs.get_prop_ascii
                 (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Intl")
                    "ListFormat") "prototype")
        let (create :
          ?locales:[ `U1 of BCP47LanguageTag.t 
                   | `U2 of BCP47LanguageTag.t list ]
            -> ?options:ListFormatOptions.t -> unit -> t)
          =
          fun
            ?locales:(x3210 :
                       [ `U1 of BCP47LanguageTag.t 
                       | `U2 of BCP47LanguageTag.t list ] option)
            ->
            fun ?options:(x3211 : ListFormatOptions.t option) ->
              fun () ->
                t_of_js
                  (Ojs.new_obj_arr
                     (Ojs.get_prop_ascii
                        (Ojs.get_prop_ascii Ojs.global "Intl") "ListFormat")
                     (let x3212 =
                        Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                          [||] in
                      (match x3210 with
                       | Some x3214 ->
                           ignore
                             (Ojs.call x3212 "push"
                                [|((match x3214 with
                                    | `U1 x3215 ->
                                        BCP47LanguageTag.t_to_js x3215
                                    | `U2 x3216 ->
                                        Ojs.list_to_js
                                          BCP47LanguageTag.t_to_js x3216))|])
                       | None -> ());
                      (match x3211 with
                       | Some x3213 ->
                           ignore
                             (Ojs.call x3212 "push"
                                [|(ListFormatOptions.t_to_js x3213)|])
                       | None -> ());
                      x3212))
        let (supportedLocalesOf :
          locales:[ `U1 of BCP47LanguageTag.t 
                  | `U2 of BCP47LanguageTag.t list ]
            ->
            ?options:(ListFormatOptions.t, [ `L_s77_localeMatcher ]) Pick.t
              -> unit -> BCP47LanguageTag.t list)
          =
          fun
            ~locales:(x3218 :
                       [ `U1 of BCP47LanguageTag.t 
                       | `U2 of BCP47LanguageTag.t list ])
            ->
            fun
              ?options:(x3219 :
                         (ListFormatOptions.t, [ `L_s77_localeMatcher ])
                           Pick.t option)
              ->
              fun () ->
                Ojs.list_of_js BCP47LanguageTag.t_of_js
                  (let x3227 =
                     Ojs.get_prop_ascii
                       (Ojs.get_prop_ascii Ojs.global "Intl") "ListFormat" in
                   Ojs.call (Ojs.get_prop_ascii x3227 "supportedLocalesOf")
                     "apply"
                     [|x3227;((let x3220 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x3220 "push"
                                    [|((match x3218 with
                                        | `U1 x3224 ->
                                            BCP47LanguageTag.t_to_js x3224
                                        | `U2 x3225 ->
                                            Ojs.list_to_js
                                              BCP47LanguageTag.t_to_js x3225))|]);
                               (match x3219 with
                                | Some x3221 ->
                                    ignore
                                      (Ojs.call x3220 "push"
                                         [|(Pick.t_to_js
                                              ListFormatOptions.t_to_js
                                              (fun
                                                 (x3223 :
                                                   [ `L_s77_localeMatcher ])
                                                 ->
                                                 match x3223 with
                                                 | `L_s77_localeMatcher ->
                                                     Ojs.string_to_js
                                                       "localeMatcher") x3221)|])
                                | None -> ());
                               x3220))|])
      end
    module DisplayNamesType =
      struct
        type t =
          [ `L_s112_region  | `L_s115_script  | `L_s28_calendar 
          | `L_s36_currency  | `L_s37_dateTimeField  | `L_s75_language ]
        let rec t_of_js : Ojs.t -> t =
          fun (x3230 : Ojs.t) ->
            let x3231 = x3230 in
            match Ojs.string_of_js x3231 with
            | "region" -> `L_s112_region
            | "script" -> `L_s115_script
            | "calendar" -> `L_s28_calendar
            | "currency" -> `L_s36_currency
            | "dateTimeField" -> `L_s37_dateTimeField
            | "language" -> `L_s75_language
            | _ -> assert false
        and t_to_js : t -> Ojs.t =
          fun
            (x3229 :
              [ `L_s112_region  | `L_s115_script  | `L_s28_calendar 
              | `L_s36_currency  | `L_s37_dateTimeField  | `L_s75_language ])
            ->
            match x3229 with
            | `L_s112_region -> Ojs.string_to_js "region"
            | `L_s115_script -> Ojs.string_to_js "script"
            | `L_s28_calendar -> Ojs.string_to_js "calendar"
            | `L_s36_currency -> Ojs.string_to_js "currency"
            | `L_s37_dateTimeField -> Ojs.string_to_js "dateTimeField"
            | `L_s75_language -> Ojs.string_to_js "language"
      end
    module DisplayNamesLanguageDisplay =
      struct
        type t = [ `L_s126_standard  | `L_s43_dialect ]
        let rec t_of_js : Ojs.t -> t =
          fun (x3233 : Ojs.t) ->
            let x3234 = x3233 in
            match Ojs.string_of_js x3234 with
            | "standard" -> `L_s126_standard
            | "dialect" -> `L_s43_dialect
            | _ -> assert false
        and t_to_js : t -> Ojs.t =
          fun (x3232 : [ `L_s126_standard  | `L_s43_dialect ]) ->
            match x3232 with
            | `L_s126_standard -> Ojs.string_to_js "standard"
            | `L_s43_dialect -> Ojs.string_to_js "dialect"
      end
    module DisplayNamesFallback =
      struct
        type t = [ `L_s31_code  | `L_s94_none ]
        let rec t_of_js : Ojs.t -> t =
          fun (x3236 : Ojs.t) ->
            let x3237 = x3236 in
            match Ojs.string_of_js x3237 with
            | "code" -> `L_s31_code
            | "none" -> `L_s94_none
            | _ -> assert false
        and t_to_js : t -> Ojs.t =
          fun (x3235 : [ `L_s31_code  | `L_s94_none ]) ->
            match x3235 with
            | `L_s31_code -> Ojs.string_to_js "code"
            | `L_s94_none -> Ojs.string_to_js "none"
      end
    module ResolvedDisplayNamesOptions =
      struct
        type t = [ `Intl_ResolvedDisplayNamesOptions ] intf
        let rec t_of_js : Ojs.t -> t = Obj.magic
        and t_to_js : t -> Ojs.t = Obj.magic
        type tags = [ `Intl_ResolvedDisplayNamesOptions ]
        type 'tags this =
          'tags intf constraint 'tags =
                      [> `Intl_ResolvedDisplayNamesOptions ]
        let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
          =
          fun (type __tags) ->
            fun (__tags_of_js : Ojs.t -> __tags) ->
              fun (x3240 : Ojs.t) -> intf_of_js __tags_of_js x3240
        and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
          fun (type __tags) ->
            fun (__tags_to_js : __tags -> Ojs.t) ->
              fun (x3238 : __tags intf) -> intf_to_js __tags_to_js x3238
        let (get_locale : 'tags this -> UnicodeBCP47LocaleIdentifier.t) =
          fun (x3242 : 'tags this) ->
            UnicodeBCP47LocaleIdentifier.t_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3242) "locale")
        let (set_locale :
          'tags this -> UnicodeBCP47LocaleIdentifier.t -> unit) =
          fun (x3244 : 'tags this) ->
            fun (x3245 : UnicodeBCP47LocaleIdentifier.t) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3244) "locale"
                (UnicodeBCP47LocaleIdentifier.t_to_js x3245)
        let (get_style : 'tags this -> RelativeTimeFormatStyle.t) =
          fun (x3247 : 'tags this) ->
            RelativeTimeFormatStyle.t_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3247) "style")
        let (set_style : 'tags this -> RelativeTimeFormatStyle.t -> unit) =
          fun (x3249 : 'tags this) ->
            fun (x3250 : RelativeTimeFormatStyle.t) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3249) "style"
                (RelativeTimeFormatStyle.t_to_js x3250)
        let (get_type : 'tags this -> DisplayNamesType.t) =
          fun (x3252 : 'tags this) ->
            DisplayNamesType.t_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3252) "type")
        let (set_type : 'tags this -> DisplayNamesType.t -> unit) =
          fun (x3254 : 'tags this) ->
            fun (x3255 : DisplayNamesType.t) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3254) "type"
                (DisplayNamesType.t_to_js x3255)
        let (get_fallback : 'tags this -> DisplayNamesFallback.t) =
          fun (x3257 : 'tags this) ->
            DisplayNamesFallback.t_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3257) "fallback")
        let (set_fallback : 'tags this -> DisplayNamesFallback.t -> unit) =
          fun (x3259 : 'tags this) ->
            fun (x3260 : DisplayNamesFallback.t) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3259) "fallback"
                (DisplayNamesFallback.t_to_js x3260)
        let (get_languageDisplay :
          'tags this -> DisplayNamesLanguageDisplay.t option) =
          fun (x3262 : 'tags this) ->
            Ojs.option_of_js DisplayNamesLanguageDisplay.t_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3262)
                 "languageDisplay")
        let (set_languageDisplay :
          'tags this -> DisplayNamesLanguageDisplay.t -> unit) =
          fun (x3265 : 'tags this) ->
            fun (x3266 : DisplayNamesLanguageDisplay.t) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3265)
                "languageDisplay" (DisplayNamesLanguageDisplay.t_to_js x3266)
        let (create :
          locale:UnicodeBCP47LocaleIdentifier.t ->
            style:RelativeTimeFormatStyle.t ->
              type_:DisplayNamesType.t ->
                fallback:DisplayNamesFallback.t ->
                  ?languageDisplay:DisplayNamesLanguageDisplay.t -> unit -> t)
          =
          fun ~locale:(x3268 : UnicodeBCP47LocaleIdentifier.t) ->
            fun ~style:(x3269 : RelativeTimeFormatStyle.t) ->
              fun ~type_:(x3270 : DisplayNamesType.t) ->
                fun ~fallback:(x3271 : DisplayNamesFallback.t) ->
                  fun
                    ?languageDisplay:(x3272 :
                                       DisplayNamesLanguageDisplay.t option)
                    ->
                    fun () ->
                      let x3273 = Ojs.empty_obj () in
                      Ojs.set_prop_ascii x3273 "locale"
                        (UnicodeBCP47LocaleIdentifier.t_to_js x3268);
                      Ojs.set_prop_ascii x3273 "style"
                        (RelativeTimeFormatStyle.t_to_js x3269);
                      Ojs.set_prop_ascii x3273 "type"
                        (DisplayNamesType.t_to_js x3270);
                      Ojs.set_prop_ascii x3273 "fallback"
                        (DisplayNamesFallback.t_to_js x3271);
                      (match x3272 with
                       | Some x3274 ->
                           Ojs.set_prop_ascii x3273 "languageDisplay"
                             (DisplayNamesLanguageDisplay.t_to_js x3274)
                       | None -> ());
                      t_of_js x3273
        let cast_from = Obj.magic
      end
    module LocaleHourCycleKey =
      struct
        type t = [ `L_s67_h11  | `L_s68_h12  | `L_s69_h23  | `L_s70_h24 ]
        let rec t_of_js : Ojs.t -> t =
          fun (x3276 : Ojs.t) ->
            let x3277 = x3276 in
            match Ojs.string_of_js x3277 with
            | "h11" -> `L_s67_h11
            | "h12" -> `L_s68_h12
            | "h23" -> `L_s69_h23
            | "h24" -> `L_s70_h24
            | _ -> assert false
        and t_to_js : t -> Ojs.t =
          fun
            (x3275 :
              [ `L_s67_h11  | `L_s68_h12  | `L_s69_h23  | `L_s70_h24 ])
            ->
            match x3275 with
            | `L_s67_h11 -> Ojs.string_to_js "h11"
            | `L_s68_h12 -> Ojs.string_to_js "h12"
            | `L_s69_h23 -> Ojs.string_to_js "h23"
            | `L_s70_h24 -> Ojs.string_to_js "h24"
      end
    module LocaleCollationCaseFirst =
      struct
        type t = [ `L_s139_upper  | `L_s58_false  | `L_s82_lower ]
        let rec t_of_js : Ojs.t -> t =
          fun (x3279 : Ojs.t) ->
            let x3280 = x3279 in
            match Ojs.string_of_js x3280 with
            | "upper" -> `L_s139_upper
            | "false" -> `L_s58_false
            | "lower" -> `L_s82_lower
            | _ -> assert false
        and t_to_js : t -> Ojs.t =
          fun (x3278 : [ `L_s139_upper  | `L_s58_false  | `L_s82_lower ]) ->
            match x3278 with
            | `L_s139_upper -> Ojs.string_to_js "upper"
            | `L_s58_false -> Ojs.string_to_js "false"
            | `L_s82_lower -> Ojs.string_to_js "lower"
      end
    module LocaleOptions =
      struct
        type t = [ `Intl_LocaleOptions ] intf
        let rec t_of_js : Ojs.t -> t = Obj.magic
        and t_to_js : t -> Ojs.t = Obj.magic
        type tags = [ `Intl_LocaleOptions ]
        type 'tags this =
          'tags intf constraint 'tags = [> `Intl_LocaleOptions ]
        let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
          =
          fun (type __tags) ->
            fun (__tags_of_js : Ojs.t -> __tags) ->
              fun (x3283 : Ojs.t) -> intf_of_js __tags_of_js x3283
        and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
          fun (type __tags) ->
            fun (__tags_to_js : __tags -> Ojs.t) ->
              fun (x3281 : __tags intf) -> intf_to_js __tags_to_js x3281
        let (get_baseName : 'tags this -> string option) =
          fun (x3285 : 'tags this) ->
            Ojs.option_of_js Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3285) "baseName")
        let (set_baseName : 'tags this -> string -> unit) =
          fun (x3288 : 'tags this) ->
            fun (x3289 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3288) "baseName"
                (Ojs.string_to_js x3289)
        let (get_calendar : 'tags this -> string option) =
          fun (x3291 : 'tags this) ->
            Ojs.option_of_js Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3291) "calendar")
        let (set_calendar : 'tags this -> string -> unit) =
          fun (x3294 : 'tags this) ->
            fun (x3295 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3294) "calendar"
                (Ojs.string_to_js x3295)
        let (get_caseFirst : 'tags this -> LocaleCollationCaseFirst.t option)
          =
          fun (x3297 : 'tags this) ->
            Ojs.option_of_js LocaleCollationCaseFirst.t_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3297) "caseFirst")
        let (set_caseFirst :
          'tags this -> LocaleCollationCaseFirst.t -> unit) =
          fun (x3300 : 'tags this) ->
            fun (x3301 : LocaleCollationCaseFirst.t) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3300) "caseFirst"
                (LocaleCollationCaseFirst.t_to_js x3301)
        let (get_collation : 'tags this -> string option) =
          fun (x3303 : 'tags this) ->
            Ojs.option_of_js Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3303) "collation")
        let (set_collation : 'tags this -> string -> unit) =
          fun (x3306 : 'tags this) ->
            fun (x3307 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3306) "collation"
                (Ojs.string_to_js x3307)
        let (get_hourCycle : 'tags this -> LocaleHourCycleKey.t option) =
          fun (x3309 : 'tags this) ->
            Ojs.option_of_js LocaleHourCycleKey.t_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3309) "hourCycle")
        let (set_hourCycle : 'tags this -> LocaleHourCycleKey.t -> unit) =
          fun (x3312 : 'tags this) ->
            fun (x3313 : LocaleHourCycleKey.t) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3312) "hourCycle"
                (LocaleHourCycleKey.t_to_js x3313)
        let (get_language : 'tags this -> string option) =
          fun (x3315 : 'tags this) ->
            Ojs.option_of_js Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3315) "language")
        let (set_language : 'tags this -> string -> unit) =
          fun (x3318 : 'tags this) ->
            fun (x3319 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3318) "language"
                (Ojs.string_to_js x3319)
        let (get_numberingSystem : 'tags this -> string option) =
          fun (x3321 : 'tags this) ->
            Ojs.option_of_js Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3321)
                 "numberingSystem")
        let (set_numberingSystem : 'tags this -> string -> unit) =
          fun (x3324 : 'tags this) ->
            fun (x3325 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3324)
                "numberingSystem" (Ojs.string_to_js x3325)
        let (get_numeric : 'tags this -> bool option) =
          fun (x3327 : 'tags this) ->
            Ojs.option_of_js Ojs.bool_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3327) "numeric")
        let (set_numeric : 'tags this -> bool -> unit) =
          fun (x3330 : 'tags this) ->
            fun (x3331 : bool) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3330) "numeric"
                (Ojs.bool_to_js x3331)
        let (get_region : 'tags this -> string option) =
          fun (x3333 : 'tags this) ->
            Ojs.option_of_js Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3333) "region")
        let (set_region : 'tags this -> string -> unit) =
          fun (x3336 : 'tags this) ->
            fun (x3337 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3336) "region"
                (Ojs.string_to_js x3337)
        let (get_script : 'tags this -> string option) =
          fun (x3339 : 'tags this) ->
            Ojs.option_of_js Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3339) "script")
        let (set_script : 'tags this -> string -> unit) =
          fun (x3342 : 'tags this) ->
            fun (x3343 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3342) "script"
                (Ojs.string_to_js x3343)
        let (create :
          ?baseName:string ->
            ?calendar:string ->
              ?caseFirst:LocaleCollationCaseFirst.t ->
                ?collation:string ->
                  ?hourCycle:LocaleHourCycleKey.t ->
                    ?language:string ->
                      ?numberingSystem:string ->
                        ?numeric:bool ->
                          ?region:string -> ?script:string -> unit -> t)
          =
          fun ?baseName:(x3345 : string option) ->
            fun ?calendar:(x3346 : string option) ->
              fun ?caseFirst:(x3347 : LocaleCollationCaseFirst.t option) ->
                fun ?collation:(x3348 : string option) ->
                  fun ?hourCycle:(x3349 : LocaleHourCycleKey.t option) ->
                    fun ?language:(x3350 : string option) ->
                      fun ?numberingSystem:(x3351 : string option) ->
                        fun ?numeric:(x3352 : bool option) ->
                          fun ?region:(x3353 : string option) ->
                            fun ?script:(x3354 : string option) ->
                              fun () ->
                                let x3355 = Ojs.empty_obj () in
                                (match x3345 with
                                 | Some x3365 ->
                                     Ojs.set_prop_ascii x3355 "baseName"
                                       (Ojs.string_to_js x3365)
                                 | None -> ());
                                (match x3346 with
                                 | Some x3364 ->
                                     Ojs.set_prop_ascii x3355 "calendar"
                                       (Ojs.string_to_js x3364)
                                 | None -> ());
                                (match x3347 with
                                 | Some x3363 ->
                                     Ojs.set_prop_ascii x3355 "caseFirst"
                                       (LocaleCollationCaseFirst.t_to_js
                                          x3363)
                                 | None -> ());
                                (match x3348 with
                                 | Some x3362 ->
                                     Ojs.set_prop_ascii x3355 "collation"
                                       (Ojs.string_to_js x3362)
                                 | None -> ());
                                (match x3349 with
                                 | Some x3361 ->
                                     Ojs.set_prop_ascii x3355 "hourCycle"
                                       (LocaleHourCycleKey.t_to_js x3361)
                                 | None -> ());
                                (match x3350 with
                                 | Some x3360 ->
                                     Ojs.set_prop_ascii x3355 "language"
                                       (Ojs.string_to_js x3360)
                                 | None -> ());
                                (match x3351 with
                                 | Some x3359 ->
                                     Ojs.set_prop_ascii x3355
                                       "numberingSystem"
                                       (Ojs.string_to_js x3359)
                                 | None -> ());
                                (match x3352 with
                                 | Some x3358 ->
                                     Ojs.set_prop_ascii x3355 "numeric"
                                       (Ojs.bool_to_js x3358)
                                 | None -> ());
                                (match x3353 with
                                 | Some x3357 ->
                                     Ojs.set_prop_ascii x3355 "region"
                                       (Ojs.string_to_js x3357)
                                 | None -> ());
                                (match x3354 with
                                 | Some x3356 ->
                                     Ojs.set_prop_ascii x3355 "script"
                                       (Ojs.string_to_js x3356)
                                 | None -> ());
                                t_of_js x3355
        let cast_from = Obj.magic
      end
    module Locale =
      struct
        type t = [ `Intl_Locale  | `Intl_LocaleOptions ] intf
        let rec t_of_js : Ojs.t -> t = Obj.magic
        and t_to_js : t -> Ojs.t = Obj.magic
        type tags = [ `Intl_Locale  | `Intl_LocaleOptions ]
        type 'tags this = 'tags intf constraint 'tags = [> `Intl_Locale ]
        let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
          =
          fun (type __tags) ->
            fun (__tags_of_js : Ojs.t -> __tags) ->
              fun (x3368 : Ojs.t) -> intf_of_js __tags_of_js x3368
        and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
          fun (type __tags) ->
            fun (__tags_to_js : __tags -> Ojs.t) ->
              fun (x3366 : __tags intf) -> intf_to_js __tags_to_js x3366
        let (get_baseName : 'tags this -> string) =
          fun (x3370 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3370) "baseName")
        let (set_baseName : 'tags this -> string -> unit) =
          fun (x3372 : 'tags this) ->
            fun (x3373 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3372) "baseName"
                (Ojs.string_to_js x3373)
        let (get_language : 'tags this -> string) =
          fun (x3375 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3375) "language")
        let (set_language : 'tags this -> string -> unit) =
          fun (x3377 : 'tags this) ->
            fun (x3378 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3377) "language"
                (Ojs.string_to_js x3378)
        let (maximize : 'tags this -> t) =
          fun (x3380 : 'tags this) ->
            t_of_js (Ojs.call (this_to_js Obj.magic x3380) "maximize" [||])
        let (minimize : 'tags this -> t) =
          fun (x3382 : 'tags this) ->
            t_of_js (Ojs.call (this_to_js Obj.magic x3382) "minimize" [||])
        let (toString : 'tags this -> BCP47LanguageTag.t) =
          fun (x3384 : 'tags this) ->
            BCP47LanguageTag.t_of_js
              (Ojs.call (this_to_js Obj.magic x3384) "toString" [||])
        let cast_from = Obj.magic
        let (create :
          tag:[ `U1 of BCP47LanguageTag.t  | `U2 of t ] ->
            ?options:LocaleOptions.t -> unit -> t)
          =
          fun ~tag:(x3386 : [ `U1 of BCP47LanguageTag.t  | `U2 of t ]) ->
            fun ?options:(x3387 : LocaleOptions.t option) ->
              fun () ->
                t_of_js
                  (Ojs.new_obj_arr
                     (Ojs.get_prop_ascii
                        (Ojs.get_prop_ascii Ojs.global "Intl") "Locale")
                     (let x3388 =
                        Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                          [||] in
                      ignore
                        (Ojs.call x3388 "push"
                           [|((match x3386 with
                               | `U1 x3390 -> BCP47LanguageTag.t_to_js x3390
                               | `U2 x3391 -> t_to_js x3391))|]);
                      (match x3387 with
                       | Some x3389 ->
                           ignore
                             (Ojs.call x3388 "push"
                                [|(LocaleOptions.t_to_js x3389)|])
                       | None -> ());
                      x3388))
      end
    module LocalesArgument =
      struct
        type t =
          (Locale.t, UnicodeBCP47LocaleIdentifier.t,
            (Locale.t, UnicodeBCP47LocaleIdentifier.t) union2 list) union3
            option
        let rec t_of_js : Ojs.t -> t =
          fun (x3400 : Ojs.t) ->
            Ojs.option_of_js
              (fun (x3401 : Ojs.t) ->
                 union3_of_js Locale.t_of_js
                   UnicodeBCP47LocaleIdentifier.t_of_js
                   (fun (x3404 : Ojs.t) ->
                      Ojs.list_of_js
                        (fun (x3405 : Ojs.t) ->
                           union2_of_js Locale.t_of_js
                             UnicodeBCP47LocaleIdentifier.t_of_js x3405)
                        x3404) x3401) x3400
        and t_to_js : t -> Ojs.t =
          fun
            (x3392 :
              (Locale.t, UnicodeBCP47LocaleIdentifier.t,
                (Locale.t, UnicodeBCP47LocaleIdentifier.t) union2 list)
                union3 option)
            ->
            Ojs.option_to_js
              (fun
                 (x3393 :
                   (Locale.t, UnicodeBCP47LocaleIdentifier.t,
                     (Locale.t, UnicodeBCP47LocaleIdentifier.t) union2 list)
                     union3)
                 ->
                 union3_to_js Locale.t_to_js
                   UnicodeBCP47LocaleIdentifier.t_to_js
                   (fun
                      (x3396 :
                        (Locale.t, UnicodeBCP47LocaleIdentifier.t) union2
                          list)
                      ->
                      Ojs.list_to_js
                        (fun
                           (x3397 :
                             (Locale.t, UnicodeBCP47LocaleIdentifier.t)
                               union2)
                           ->
                           union2_to_js Locale.t_to_js
                             UnicodeBCP47LocaleIdentifier.t_to_js x3397)
                        x3396) x3393) x3392
      end
    module DisplayNamesOptions =
      struct
        type t = [ `Intl_DisplayNamesOptions ] intf
        let rec t_of_js : Ojs.t -> t = Obj.magic
        and t_to_js : t -> Ojs.t = Obj.magic
        type tags = [ `Intl_DisplayNamesOptions ]
        type 'tags this =
          'tags intf constraint 'tags = [> `Intl_DisplayNamesOptions ]
        let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
          =
          fun (type __tags) ->
            fun (__tags_of_js : Ojs.t -> __tags) ->
              fun (x3410 : Ojs.t) -> intf_of_js __tags_of_js x3410
        and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
          fun (type __tags) ->
            fun (__tags_to_js : __tags -> Ojs.t) ->
              fun (x3408 : __tags intf) -> intf_to_js __tags_to_js x3408
        let (get_localeMatcher :
          'tags this -> RelativeTimeFormatLocaleMatcher.t option) =
          fun (x3412 : 'tags this) ->
            Ojs.option_of_js RelativeTimeFormatLocaleMatcher.t_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3412)
                 "localeMatcher")
        let (set_localeMatcher :
          'tags this -> RelativeTimeFormatLocaleMatcher.t -> unit) =
          fun (x3415 : 'tags this) ->
            fun (x3416 : RelativeTimeFormatLocaleMatcher.t) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3415) "localeMatcher"
                (RelativeTimeFormatLocaleMatcher.t_to_js x3416)
        let (get_style : 'tags this -> RelativeTimeFormatStyle.t option) =
          fun (x3418 : 'tags this) ->
            Ojs.option_of_js RelativeTimeFormatStyle.t_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3418) "style")
        let (set_style : 'tags this -> RelativeTimeFormatStyle.t -> unit) =
          fun (x3421 : 'tags this) ->
            fun (x3422 : RelativeTimeFormatStyle.t) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3421) "style"
                (RelativeTimeFormatStyle.t_to_js x3422)
        let (get_type : 'tags this -> DisplayNamesType.t) =
          fun (x3424 : 'tags this) ->
            DisplayNamesType.t_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3424) "type")
        let (set_type : 'tags this -> DisplayNamesType.t -> unit) =
          fun (x3426 : 'tags this) ->
            fun (x3427 : DisplayNamesType.t) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3426) "type"
                (DisplayNamesType.t_to_js x3427)
        let (get_languageDisplay :
          'tags this -> DisplayNamesLanguageDisplay.t option) =
          fun (x3429 : 'tags this) ->
            Ojs.option_of_js DisplayNamesLanguageDisplay.t_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3429)
                 "languageDisplay")
        let (set_languageDisplay :
          'tags this -> DisplayNamesLanguageDisplay.t -> unit) =
          fun (x3432 : 'tags this) ->
            fun (x3433 : DisplayNamesLanguageDisplay.t) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3432)
                "languageDisplay" (DisplayNamesLanguageDisplay.t_to_js x3433)
        let (get_fallback : 'tags this -> DisplayNamesFallback.t option) =
          fun (x3435 : 'tags this) ->
            Ojs.option_of_js DisplayNamesFallback.t_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3435) "fallback")
        let (set_fallback : 'tags this -> DisplayNamesFallback.t -> unit) =
          fun (x3438 : 'tags this) ->
            fun (x3439 : DisplayNamesFallback.t) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3438) "fallback"
                (DisplayNamesFallback.t_to_js x3439)
        let (create :
          ?localeMatcher:RelativeTimeFormatLocaleMatcher.t ->
            ?style:RelativeTimeFormatStyle.t ->
              type_:DisplayNamesType.t ->
                ?languageDisplay:DisplayNamesLanguageDisplay.t ->
                  ?fallback:DisplayNamesFallback.t -> unit -> t)
          =
          fun
            ?localeMatcher:(x3441 : RelativeTimeFormatLocaleMatcher.t option)
            ->
            fun ?style:(x3442 : RelativeTimeFormatStyle.t option) ->
              fun ~type_:(x3443 : DisplayNamesType.t) ->
                fun
                  ?languageDisplay:(x3444 :
                                     DisplayNamesLanguageDisplay.t option)
                  ->
                  fun ?fallback:(x3445 : DisplayNamesFallback.t option) ->
                    fun () ->
                      let x3446 = Ojs.empty_obj () in
                      (match x3441 with
                       | Some x3450 ->
                           Ojs.set_prop_ascii x3446 "localeMatcher"
                             (RelativeTimeFormatLocaleMatcher.t_to_js x3450)
                       | None -> ());
                      (match x3442 with
                       | Some x3449 ->
                           Ojs.set_prop_ascii x3446 "style"
                             (RelativeTimeFormatStyle.t_to_js x3449)
                       | None -> ());
                      Ojs.set_prop_ascii x3446 "type"
                        (DisplayNamesType.t_to_js x3443);
                      (match x3444 with
                       | Some x3448 ->
                           Ojs.set_prop_ascii x3446 "languageDisplay"
                             (DisplayNamesLanguageDisplay.t_to_js x3448)
                       | None -> ());
                      (match x3445 with
                       | Some x3447 ->
                           Ojs.set_prop_ascii x3446 "fallback"
                             (DisplayNamesFallback.t_to_js x3447)
                       | None -> ());
                      t_of_js x3446
        let cast_from = Obj.magic
      end
    module DisplayNames =
      struct
        module AnonymousInterface4 =
          struct
            type t = Ojs.t
            let rec t_of_js : Ojs.t -> t = fun (x3452 : Ojs.t) -> x3452
            and t_to_js : t -> Ojs.t = fun (x3451 : Ojs.t) -> x3451
            let (get_localeMatcher :
              t -> RelativeTimeFormatLocaleMatcher.t option) =
              fun (x3453 : t) ->
                Ojs.option_of_js RelativeTimeFormatLocaleMatcher.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x3453) "localeMatcher")
            let (set_localeMatcher :
              t -> RelativeTimeFormatLocaleMatcher.t -> unit) =
              fun (x3455 : t) ->
                fun (x3456 : RelativeTimeFormatLocaleMatcher.t) ->
                  Ojs.set_prop_ascii (t_to_js x3455) "localeMatcher"
                    (RelativeTimeFormatLocaleMatcher.t_to_js x3456)
            let (create :
              ?localeMatcher:RelativeTimeFormatLocaleMatcher.t -> unit -> t)
              =
              fun
                ?localeMatcher:(x3457 :
                                 RelativeTimeFormatLocaleMatcher.t option)
                ->
                fun () ->
                  let x3458 = Ojs.empty_obj () in
                  (match x3457 with
                   | Some x3459 ->
                       Ojs.set_prop_ascii x3458 "localeMatcher"
                         (RelativeTimeFormatLocaleMatcher.t_to_js x3459)
                   | None -> ());
                  t_of_js x3458
          end
        type t = [ `Intl_DisplayNames ] intf
        let rec t_of_js : Ojs.t -> t = Obj.magic
        and t_to_js : t -> Ojs.t = Obj.magic
        type tags = [ `Intl_DisplayNames ]
        type 'tags this =
          'tags intf constraint 'tags = [> `Intl_DisplayNames ]
        let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
          =
          fun (type __tags) ->
            fun (__tags_of_js : Ojs.t -> __tags) ->
              fun (x3462 : Ojs.t) -> intf_of_js __tags_of_js x3462
        and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
          fun (type __tags) ->
            fun (__tags_to_js : __tags -> Ojs.t) ->
              fun (x3460 : __tags intf) -> intf_to_js __tags_to_js x3460
        let (of_ : 'tags this -> code:string -> string option) =
          fun (x3465 : 'tags this) ->
            fun ~code:(x3464 : string) ->
              Ojs.option_of_js Ojs.string_of_js
                (Ojs.call (this_to_js Obj.magic x3465) "of"
                   [|(Ojs.string_to_js x3464)|])
        let (resolvedOptions : 'tags this -> ResolvedDisplayNamesOptions.t) =
          fun (x3468 : 'tags this) ->
            ResolvedDisplayNamesOptions.t_of_js
              (Ojs.call (this_to_js Obj.magic x3468) "resolvedOptions" [||])
        let cast_from = Obj.magic
        let (prototype : unit -> t) =
          fun () ->
            t_of_js
              (Ojs.get_prop_ascii
                 (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Intl")
                    "DisplayNames") "prototype")
        let (create :
          locales:LocalesArgument.t -> options:DisplayNamesOptions.t -> t) =
          fun ~locales:(x3470 : LocalesArgument.t) ->
            fun ~options:(x3471 : DisplayNamesOptions.t) ->
              t_of_js
                (Ojs.new_obj
                   (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Intl")
                      "DisplayNames")
                   [|(LocalesArgument.t_to_js x3470);(DisplayNamesOptions.t_to_js
                                                        x3471)|])
        let (supportedLocalesOf :
          ?locales:LocalesArgument.t ->
            ?options:AnonymousInterface4.t -> unit -> BCP47LanguageTag.t list)
          =
          fun ?locales:(x3472 : LocalesArgument.t option) ->
            fun ?options:(x3473 : AnonymousInterface4.t option) ->
              fun () ->
                Ojs.list_of_js BCP47LanguageTag.t_of_js
                  (let x3477 =
                     Ojs.get_prop_ascii
                       (Ojs.get_prop_ascii Ojs.global "Intl") "DisplayNames" in
                   Ojs.call (Ojs.get_prop_ascii x3477 "supportedLocalesOf")
                     "apply"
                     [|x3477;((let x3474 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               (match x3472 with
                                | Some x3476 ->
                                    ignore
                                      (Ojs.call x3474 "push"
                                         [|(LocalesArgument.t_to_js x3476)|])
                                | None -> ());
                               (match x3473 with
                                | Some x3475 ->
                                    ignore
                                      (Ojs.call x3474 "push"
                                         [|(AnonymousInterface4.t_to_js x3475)|])
                                | None -> ());
                               x3474))|])
      end
    module DateTimeFormatPartTypesRegistry =
      struct
        type t = [ `Intl_DateTimeFormatPartTypesRegistry ] intf
        let rec t_of_js : Ojs.t -> t = Obj.magic
        and t_to_js : t -> Ojs.t = Obj.magic
        type tags = [ `Intl_DateTimeFormatPartTypesRegistry ]
        type 'tags this =
          'tags intf constraint 'tags =
                      [> `Intl_DateTimeFormatPartTypesRegistry ]
        let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
          =
          fun (type __tags) ->
            fun (__tags_of_js : Ojs.t -> __tags) ->
              fun (x3481 : Ojs.t) -> intf_of_js __tags_of_js x3481
        and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
          fun (type __tags) ->
            fun (__tags_to_js : __tags -> Ojs.t) ->
              fun (x3479 : __tags intf) -> intf_to_js __tags_to_js x3479
        let (get_fractionalSecond : 'tags this -> any) =
          fun (x3483 : 'tags this) ->
            any_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3483)
                 "fractionalSecond")
        let (set_fractionalSecond : 'tags this -> any -> unit) =
          fun (x3485 : 'tags this) ->
            fun (x3486 : any) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3485)
                "fractionalSecond" (any_to_js x3486)
        let (get_unknown : 'tags this -> any) =
          fun (x3488 : 'tags this) ->
            any_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3488) "unknown")
        let (set_unknown : 'tags this -> any -> unit) =
          fun (x3490 : 'tags this) ->
            fun (x3491 : any) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3490) "unknown"
                (any_to_js x3491)
        let (get_day : 'tags this -> any) =
          fun (x3493 : 'tags this) ->
            any_of_js (Ojs.get_prop_ascii (this_to_js Obj.magic x3493) "day")
        let (set_day : 'tags this -> any -> unit) =
          fun (x3495 : 'tags this) ->
            fun (x3496 : any) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3495) "day"
                (any_to_js x3496)
        let (get_dayPeriod : 'tags this -> any) =
          fun (x3498 : 'tags this) ->
            any_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3498) "dayPeriod")
        let (set_dayPeriod : 'tags this -> any -> unit) =
          fun (x3500 : 'tags this) ->
            fun (x3501 : any) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3500) "dayPeriod"
                (any_to_js x3501)
        let (get_era : 'tags this -> any) =
          fun (x3503 : 'tags this) ->
            any_of_js (Ojs.get_prop_ascii (this_to_js Obj.magic x3503) "era")
        let (set_era : 'tags this -> any -> unit) =
          fun (x3505 : 'tags this) ->
            fun (x3506 : any) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3505) "era"
                (any_to_js x3506)
        let (get_hour : 'tags this -> any) =
          fun (x3508 : 'tags this) ->
            any_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3508) "hour")
        let (set_hour : 'tags this -> any -> unit) =
          fun (x3510 : 'tags this) ->
            fun (x3511 : any) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3510) "hour"
                (any_to_js x3511)
        let (get_literal : 'tags this -> any) =
          fun (x3513 : 'tags this) ->
            any_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3513) "literal")
        let (set_literal : 'tags this -> any -> unit) =
          fun (x3515 : 'tags this) ->
            fun (x3516 : any) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3515) "literal"
                (any_to_js x3516)
        let (get_minute : 'tags this -> any) =
          fun (x3518 : 'tags this) ->
            any_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3518) "minute")
        let (set_minute : 'tags this -> any -> unit) =
          fun (x3520 : 'tags this) ->
            fun (x3521 : any) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3520) "minute"
                (any_to_js x3521)
        let (get_month : 'tags this -> any) =
          fun (x3523 : 'tags this) ->
            any_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3523) "month")
        let (set_month : 'tags this -> any -> unit) =
          fun (x3525 : 'tags this) ->
            fun (x3526 : any) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3525) "month"
                (any_to_js x3526)
        let (get_second : 'tags this -> any) =
          fun (x3528 : 'tags this) ->
            any_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3528) "second")
        let (set_second : 'tags this -> any -> unit) =
          fun (x3530 : 'tags this) ->
            fun (x3531 : any) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3530) "second"
                (any_to_js x3531)
        let (get_timeZoneName : 'tags this -> any) =
          fun (x3533 : 'tags this) ->
            any_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3533) "timeZoneName")
        let (set_timeZoneName : 'tags this -> any -> unit) =
          fun (x3535 : 'tags this) ->
            fun (x3536 : any) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3535) "timeZoneName"
                (any_to_js x3536)
        let (get_weekday : 'tags this -> any) =
          fun (x3538 : 'tags this) ->
            any_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3538) "weekday")
        let (set_weekday : 'tags this -> any -> unit) =
          fun (x3540 : 'tags this) ->
            fun (x3541 : any) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3540) "weekday"
                (any_to_js x3541)
        let (get_year : 'tags this -> any) =
          fun (x3543 : 'tags this) ->
            any_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3543) "year")
        let (set_year : 'tags this -> any -> unit) =
          fun (x3545 : 'tags this) ->
            fun (x3546 : any) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3545) "year"
                (any_to_js x3546)
        let (create :
          fractionalSecond:any ->
            unknown:any ->
              day:any ->
                dayPeriod:any ->
                  era:any ->
                    hour:any ->
                      literal:any ->
                        minute:any ->
                          month:any ->
                            second:any ->
                              timeZoneName:any ->
                                weekday:any -> year:any -> unit -> t)
          =
          fun ~fractionalSecond:(x3548 : any) ->
            fun ~unknown:(x3549 : any) ->
              fun ~day:(x3550 : any) ->
                fun ~dayPeriod:(x3551 : any) ->
                  fun ~era:(x3552 : any) ->
                    fun ~hour:(x3553 : any) ->
                      fun ~literal:(x3554 : any) ->
                        fun ~minute:(x3555 : any) ->
                          fun ~month:(x3556 : any) ->
                            fun ~second:(x3557 : any) ->
                              fun ~timeZoneName:(x3558 : any) ->
                                fun ~weekday:(x3559 : any) ->
                                  fun ~year:(x3560 : any) ->
                                    fun () ->
                                      let x3561 = Ojs.empty_obj () in
                                      Ojs.set_prop_ascii x3561
                                        "fractionalSecond" (any_to_js x3548);
                                      Ojs.set_prop_ascii x3561 "unknown"
                                        (any_to_js x3549);
                                      Ojs.set_prop_ascii x3561 "day"
                                        (any_to_js x3550);
                                      Ojs.set_prop_ascii x3561 "dayPeriod"
                                        (any_to_js x3551);
                                      Ojs.set_prop_ascii x3561 "era"
                                        (any_to_js x3552);
                                      Ojs.set_prop_ascii x3561 "hour"
                                        (any_to_js x3553);
                                      Ojs.set_prop_ascii x3561 "literal"
                                        (any_to_js x3554);
                                      Ojs.set_prop_ascii x3561 "minute"
                                        (any_to_js x3555);
                                      Ojs.set_prop_ascii x3561 "month"
                                        (any_to_js x3556);
                                      Ojs.set_prop_ascii x3561 "second"
                                        (any_to_js x3557);
                                      Ojs.set_prop_ascii x3561 "timeZoneName"
                                        (any_to_js x3558);
                                      Ojs.set_prop_ascii x3561 "weekday"
                                        (any_to_js x3559);
                                      Ojs.set_prop_ascii x3561 "year"
                                        (any_to_js x3560);
                                      t_of_js x3561
        let cast_from = Obj.magic
      end
    module ResolvedDateTimeFormatOptions =
      struct
        type t = [ `Intl_ResolvedDateTimeFormatOptions ] intf
        let rec t_of_js : Ojs.t -> t = Obj.magic
        and t_to_js : t -> Ojs.t = Obj.magic
        type tags = [ `Intl_ResolvedDateTimeFormatOptions ]
        type 'tags this =
          'tags intf constraint 'tags =
                      [> `Intl_ResolvedDateTimeFormatOptions ]
        let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
          =
          fun (type __tags) ->
            fun (__tags_of_js : Ojs.t -> __tags) ->
              fun (x3564 : Ojs.t) -> intf_of_js __tags_of_js x3564
        and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
          fun (type __tags) ->
            fun (__tags_to_js : __tags -> Ojs.t) ->
              fun (x3562 : __tags intf) -> intf_to_js __tags_to_js x3562
        let (get_formatMatcher :
          'tags this -> [ `L_s25_basic  | `L_s26_best_fit ] option) =
          fun (x3566 : 'tags this) ->
            Ojs.option_of_js
              (fun (x3568 : Ojs.t) ->
                 let x3569 = x3568 in
                 match Ojs.string_of_js x3569 with
                 | "basic" -> `L_s25_basic
                 | "best fit" -> `L_s26_best_fit
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3566)
                 "formatMatcher")
        let (set_formatMatcher :
          'tags this ->
            [ `U1 of [ `L_s25_basic ]  | `U2 of [ `L_s26_best_fit ] ] -> unit)
          =
          fun (x3570 : 'tags this) ->
            fun
              (x3571 :
                [ `U1 of [ `L_s25_basic ]  | `U2 of [ `L_s26_best_fit ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3570) "formatMatcher"
                (match x3571 with
                 | `U1 x3572 ->
                     (match x3572 with
                      | `L_s25_basic -> Ojs.string_to_js "basic")
                 | `U2 x3573 ->
                     (match x3573 with
                      | `L_s26_best_fit -> Ojs.string_to_js "best fit"))
        let (get_dateStyle :
          'tags this ->
            [ `L_s122_short  | `L_s63_full  | `L_s78_long  | `L_s84_medium ]
              option)
          =
          fun (x3575 : 'tags this) ->
            Ojs.option_of_js
              (fun (x3577 : Ojs.t) ->
                 let x3578 = x3577 in
                 match Ojs.string_of_js x3578 with
                 | "short" -> `L_s122_short
                 | "full" -> `L_s63_full
                 | "long" -> `L_s78_long
                 | "medium" -> `L_s84_medium
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3575) "dateStyle")
        let (set_dateStyle :
          'tags this ->
            [ `U1 of [ `L_s63_full ]  | `U2 of [ `L_s78_long ] 
            | `U3 of [ `L_s84_medium ]  | `U4 of [ `L_s122_short ] ] -> 
              unit)
          =
          fun (x3579 : 'tags this) ->
            fun
              (x3580 :
                [ `U1 of [ `L_s63_full ]  | `U2 of [ `L_s78_long ] 
                | `U3 of [ `L_s84_medium ]  | `U4 of [ `L_s122_short ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3579) "dateStyle"
                (match x3580 with
                 | `U1 x3581 ->
                     (match x3581 with
                      | `L_s63_full -> Ojs.string_to_js "full")
                 | `U2 x3582 ->
                     (match x3582 with
                      | `L_s78_long -> Ojs.string_to_js "long")
                 | `U3 x3583 ->
                     (match x3583 with
                      | `L_s84_medium -> Ojs.string_to_js "medium")
                 | `U4 x3584 ->
                     (match x3584 with
                      | `L_s122_short -> Ojs.string_to_js "short"))
        let (get_timeStyle :
          'tags this ->
            [ `L_s122_short  | `L_s63_full  | `L_s78_long  | `L_s84_medium ]
              option)
          =
          fun (x3586 : 'tags this) ->
            Ojs.option_of_js
              (fun (x3588 : Ojs.t) ->
                 let x3589 = x3588 in
                 match Ojs.string_of_js x3589 with
                 | "short" -> `L_s122_short
                 | "full" -> `L_s63_full
                 | "long" -> `L_s78_long
                 | "medium" -> `L_s84_medium
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3586) "timeStyle")
        let (set_timeStyle :
          'tags this ->
            [ `U1 of [ `L_s63_full ]  | `U2 of [ `L_s78_long ] 
            | `U3 of [ `L_s84_medium ]  | `U4 of [ `L_s122_short ] ] -> 
              unit)
          =
          fun (x3590 : 'tags this) ->
            fun
              (x3591 :
                [ `U1 of [ `L_s63_full ]  | `U2 of [ `L_s78_long ] 
                | `U3 of [ `L_s84_medium ]  | `U4 of [ `L_s122_short ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3590) "timeStyle"
                (match x3591 with
                 | `U1 x3592 ->
                     (match x3592 with
                      | `L_s63_full -> Ojs.string_to_js "full")
                 | `U2 x3593 ->
                     (match x3593 with
                      | `L_s78_long -> Ojs.string_to_js "long")
                 | `U3 x3594 ->
                     (match x3594 with
                      | `L_s84_medium -> Ojs.string_to_js "medium")
                 | `U4 x3595 ->
                     (match x3595 with
                      | `L_s122_short -> Ojs.string_to_js "short"))
        let (get_hourCycle :
          'tags this ->
            [ `L_s67_h11  | `L_s68_h12  | `L_s69_h23  | `L_s70_h24 ] option)
          =
          fun (x3597 : 'tags this) ->
            Ojs.option_of_js
              (fun (x3599 : Ojs.t) ->
                 let x3600 = x3599 in
                 match Ojs.string_of_js x3600 with
                 | "h11" -> `L_s67_h11
                 | "h12" -> `L_s68_h12
                 | "h23" -> `L_s69_h23
                 | "h24" -> `L_s70_h24
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3597) "hourCycle")
        let (set_hourCycle :
          'tags this ->
            [ `U1 of [ `L_s67_h11 ]  | `U2 of [ `L_s68_h12 ] 
            | `U3 of [ `L_s69_h23 ]  | `U4 of [ `L_s70_h24 ] ] -> unit)
          =
          fun (x3601 : 'tags this) ->
            fun
              (x3602 :
                [ `U1 of [ `L_s67_h11 ]  | `U2 of [ `L_s68_h12 ] 
                | `U3 of [ `L_s69_h23 ]  | `U4 of [ `L_s70_h24 ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3601) "hourCycle"
                (match x3602 with
                 | `U1 x3603 ->
                     (match x3603 with | `L_s67_h11 -> Ojs.string_to_js "h11")
                 | `U2 x3604 ->
                     (match x3604 with | `L_s68_h12 -> Ojs.string_to_js "h12")
                 | `U3 x3605 ->
                     (match x3605 with | `L_s69_h23 -> Ojs.string_to_js "h23")
                 | `U4 x3606 ->
                     (match x3606 with | `L_s70_h24 -> Ojs.string_to_js "h24"))
        let (get_dayPeriod :
          'tags this ->
            [ `L_s122_short  | `L_s78_long  | `L_s92_narrow ] option)
          =
          fun (x3608 : 'tags this) ->
            Ojs.option_of_js
              (fun (x3610 : Ojs.t) ->
                 let x3611 = x3610 in
                 match Ojs.string_of_js x3611 with
                 | "short" -> `L_s122_short
                 | "long" -> `L_s78_long
                 | "narrow" -> `L_s92_narrow
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3608) "dayPeriod")
        let (set_dayPeriod :
          'tags this ->
            [ `U1 of [ `L_s92_narrow ]  | `U2 of [ `L_s122_short ] 
            | `U3 of [ `L_s78_long ] ] -> unit)
          =
          fun (x3612 : 'tags this) ->
            fun
              (x3613 :
                [ `U1 of [ `L_s92_narrow ]  | `U2 of [ `L_s122_short ] 
                | `U3 of [ `L_s78_long ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3612) "dayPeriod"
                (match x3613 with
                 | `U1 x3614 ->
                     (match x3614 with
                      | `L_s92_narrow -> Ojs.string_to_js "narrow")
                 | `U2 x3615 ->
                     (match x3615 with
                      | `L_s122_short -> Ojs.string_to_js "short")
                 | `U3 x3616 ->
                     (match x3616 with
                      | `L_s78_long -> Ojs.string_to_js "long"))
        let (get_fractionalSecondDigits :
          'tags this -> [ `L_n_1  | `L_n_2  | `L_n_3 ] option) =
          fun (x3618 : 'tags this) ->
            Ojs.option_of_js
              (fun (x3620 : Ojs.t) ->
                 let x3621 = x3620 in
                 match Ojs.int_of_js x3621 with
                 | 1 -> `L_n_1
                 | 2 -> `L_n_2
                 | 3 -> `L_n_3
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3618)
                 "fractionalSecondDigits")
        let (set_fractionalSecondDigits :
          'tags this ->
            [ `U1 of [ `L_n_1 ]  | `U2 of [ `L_n_2 ]  | `U3 of [ `L_n_3 ] ]
              -> unit)
          =
          fun (x3622 : 'tags this) ->
            fun
              (x3623 :
                [ `U1 of [ `L_n_1 ]  | `U2 of [ `L_n_2 ] 
                | `U3 of [ `L_n_3 ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3622)
                "fractionalSecondDigits"
                (match x3623 with
                 | `U1 x3624 ->
                     (match x3624 with | `L_n_1 -> Ojs.int_to_js 1)
                 | `U2 x3625 ->
                     (match x3625 with | `L_n_2 -> Ojs.int_to_js 2)
                 | `U3 x3626 ->
                     (match x3626 with | `L_n_3 -> Ojs.int_to_js 3))
        let (get_locale : 'tags this -> string) =
          fun (x3628 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3628) "locale")
        let (set_locale : 'tags this -> string -> unit) =
          fun (x3630 : 'tags this) ->
            fun (x3631 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3630) "locale"
                (Ojs.string_to_js x3631)
        let (get_calendar : 'tags this -> string) =
          fun (x3633 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3633) "calendar")
        let (set_calendar : 'tags this -> string -> unit) =
          fun (x3635 : 'tags this) ->
            fun (x3636 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3635) "calendar"
                (Ojs.string_to_js x3636)
        let (get_numberingSystem : 'tags this -> string) =
          fun (x3638 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3638)
                 "numberingSystem")
        let (set_numberingSystem : 'tags this -> string -> unit) =
          fun (x3640 : 'tags this) ->
            fun (x3641 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3640)
                "numberingSystem" (Ojs.string_to_js x3641)
        let (get_timeZone : 'tags this -> string) =
          fun (x3643 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3643) "timeZone")
        let (set_timeZone : 'tags this -> string -> unit) =
          fun (x3645 : 'tags this) ->
            fun (x3646 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3645) "timeZone"
                (Ojs.string_to_js x3646)
        let (get_hour12 : 'tags this -> bool option) =
          fun (x3648 : 'tags this) ->
            Ojs.option_of_js Ojs.bool_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3648) "hour12")
        let (set_hour12 : 'tags this -> bool -> unit) =
          fun (x3651 : 'tags this) ->
            fun (x3652 : bool) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3651) "hour12"
                (Ojs.bool_to_js x3652)
        let (get_weekday : 'tags this -> string option) =
          fun (x3654 : 'tags this) ->
            Ojs.option_of_js Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3654) "weekday")
        let (set_weekday : 'tags this -> string -> unit) =
          fun (x3657 : 'tags this) ->
            fun (x3658 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3657) "weekday"
                (Ojs.string_to_js x3658)
        let (get_era : 'tags this -> string option) =
          fun (x3660 : 'tags this) ->
            Ojs.option_of_js Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3660) "era")
        let (set_era : 'tags this -> string -> unit) =
          fun (x3663 : 'tags this) ->
            fun (x3664 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3663) "era"
                (Ojs.string_to_js x3664)
        let (get_year : 'tags this -> string option) =
          fun (x3666 : 'tags this) ->
            Ojs.option_of_js Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3666) "year")
        let (set_year : 'tags this -> string -> unit) =
          fun (x3669 : 'tags this) ->
            fun (x3670 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3669) "year"
                (Ojs.string_to_js x3670)
        let (get_month : 'tags this -> string option) =
          fun (x3672 : 'tags this) ->
            Ojs.option_of_js Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3672) "month")
        let (set_month : 'tags this -> string -> unit) =
          fun (x3675 : 'tags this) ->
            fun (x3676 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3675) "month"
                (Ojs.string_to_js x3676)
        let (get_day : 'tags this -> string option) =
          fun (x3678 : 'tags this) ->
            Ojs.option_of_js Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3678) "day")
        let (set_day : 'tags this -> string -> unit) =
          fun (x3681 : 'tags this) ->
            fun (x3682 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3681) "day"
                (Ojs.string_to_js x3682)
        let (get_hour : 'tags this -> string option) =
          fun (x3684 : 'tags this) ->
            Ojs.option_of_js Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3684) "hour")
        let (set_hour : 'tags this -> string -> unit) =
          fun (x3687 : 'tags this) ->
            fun (x3688 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3687) "hour"
                (Ojs.string_to_js x3688)
        let (get_minute : 'tags this -> string option) =
          fun (x3690 : 'tags this) ->
            Ojs.option_of_js Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3690) "minute")
        let (set_minute : 'tags this -> string -> unit) =
          fun (x3693 : 'tags this) ->
            fun (x3694 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3693) "minute"
                (Ojs.string_to_js x3694)
        let (get_second : 'tags this -> string option) =
          fun (x3696 : 'tags this) ->
            Ojs.option_of_js Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3696) "second")
        let (set_second : 'tags this -> string -> unit) =
          fun (x3699 : 'tags this) ->
            fun (x3700 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3699) "second"
                (Ojs.string_to_js x3700)
        let (get_timeZoneName : 'tags this -> string option) =
          fun (x3702 : 'tags this) ->
            Ojs.option_of_js Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3702) "timeZoneName")
        let (set_timeZoneName : 'tags this -> string -> unit) =
          fun (x3705 : 'tags this) ->
            fun (x3706 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3705) "timeZoneName"
                (Ojs.string_to_js x3706)
        let (create :
          ?formatMatcher:[ `L_s25_basic  | `L_s26_best_fit ] ->
            ?dateStyle:[ `L_s122_short  | `L_s63_full  | `L_s78_long 
                       | `L_s84_medium ]
              ->
              ?timeStyle:[ `L_s122_short  | `L_s63_full  | `L_s78_long 
                         | `L_s84_medium ]
                ->
                ?hourCycle:[ `L_s67_h11  | `L_s68_h12  | `L_s69_h23 
                           | `L_s70_h24 ]
                  ->
                  ?dayPeriod:[ `L_s122_short  | `L_s78_long 
                             | `L_s92_narrow ]
                    ->
                    ?fractionalSecondDigits:[ `L_n_1  | `L_n_2  | `L_n_3 ] ->
                      locale:string ->
                        calendar:string ->
                          numberingSystem:string ->
                            timeZone:string ->
                              ?hour12:bool ->
                                ?weekday:string ->
                                  ?era:string ->
                                    ?year:string ->
                                      ?month:string ->
                                        ?day:string ->
                                          ?hour:string ->
                                            ?minute:string ->
                                              ?second:string ->
                                                ?timeZoneName:string ->
                                                  unit -> t)
          =
          fun
            ?formatMatcher:(x3708 :
                             [ `L_s25_basic  | `L_s26_best_fit ] option)
            ->
            fun
              ?dateStyle:(x3709 :
                           [ `L_s122_short  | `L_s63_full  | `L_s78_long 
                           | `L_s84_medium ] option)
              ->
              fun
                ?timeStyle:(x3710 :
                             [ `L_s122_short  | `L_s63_full  | `L_s78_long 
                             | `L_s84_medium ] option)
                ->
                fun
                  ?hourCycle:(x3711 :
                               [ `L_s67_h11  | `L_s68_h12  | `L_s69_h23 
                               | `L_s70_h24 ] option)
                  ->
                  fun
                    ?dayPeriod:(x3712 :
                                 [ `L_s122_short  | `L_s78_long 
                                 | `L_s92_narrow ] option)
                    ->
                    fun
                      ?fractionalSecondDigits:(x3713 :
                                                [ `L_n_1  | `L_n_2 
                                                | `L_n_3 ] option)
                      ->
                      fun ~locale:(x3714 : string) ->
                        fun ~calendar:(x3715 : string) ->
                          fun ~numberingSystem:(x3716 : string) ->
                            fun ~timeZone:(x3717 : string) ->
                              fun ?hour12:(x3718 : bool option) ->
                                fun ?weekday:(x3719 : string option) ->
                                  fun ?era:(x3720 : string option) ->
                                    fun ?year:(x3721 : string option) ->
                                      fun ?month:(x3722 : string option) ->
                                        fun ?day:(x3723 : string option) ->
                                          fun ?hour:(x3724 : string option)
                                            ->
                                            fun
                                              ?minute:(x3725 : string option)
                                              ->
                                              fun
                                                ?second:(x3726 :
                                                          string option)
                                                ->
                                                fun
                                                  ?timeZoneName:(x3727 :
                                                                  string
                                                                    option)
                                                  ->
                                                  fun () ->
                                                    let x3728 =
                                                      Ojs.empty_obj () in
                                                    (match x3708 with
                                                     | Some x3744 ->
                                                         Ojs.set_prop_ascii
                                                           x3728
                                                           "formatMatcher"
                                                           (match x3744 with
                                                            | `L_s25_basic ->
                                                                Ojs.string_to_js
                                                                  "basic"
                                                            | `L_s26_best_fit
                                                                ->
                                                                Ojs.string_to_js
                                                                  "best fit")
                                                     | None -> ());
                                                    (match x3709 with
                                                     | Some x3743 ->
                                                         Ojs.set_prop_ascii
                                                           x3728 "dateStyle"
                                                           (match x3743 with
                                                            | `L_s122_short
                                                                ->
                                                                Ojs.string_to_js
                                                                  "short"
                                                            | `L_s63_full ->
                                                                Ojs.string_to_js
                                                                  "full"
                                                            | `L_s78_long ->
                                                                Ojs.string_to_js
                                                                  "long"
                                                            | `L_s84_medium
                                                                ->
                                                                Ojs.string_to_js
                                                                  "medium")
                                                     | None -> ());
                                                    (match x3710 with
                                                     | Some x3742 ->
                                                         Ojs.set_prop_ascii
                                                           x3728 "timeStyle"
                                                           (match x3742 with
                                                            | `L_s122_short
                                                                ->
                                                                Ojs.string_to_js
                                                                  "short"
                                                            | `L_s63_full ->
                                                                Ojs.string_to_js
                                                                  "full"
                                                            | `L_s78_long ->
                                                                Ojs.string_to_js
                                                                  "long"
                                                            | `L_s84_medium
                                                                ->
                                                                Ojs.string_to_js
                                                                  "medium")
                                                     | None -> ());
                                                    (match x3711 with
                                                     | Some x3741 ->
                                                         Ojs.set_prop_ascii
                                                           x3728 "hourCycle"
                                                           (match x3741 with
                                                            | `L_s67_h11 ->
                                                                Ojs.string_to_js
                                                                  "h11"
                                                            | `L_s68_h12 ->
                                                                Ojs.string_to_js
                                                                  "h12"
                                                            | `L_s69_h23 ->
                                                                Ojs.string_to_js
                                                                  "h23"
                                                            | `L_s70_h24 ->
                                                                Ojs.string_to_js
                                                                  "h24")
                                                     | None -> ());
                                                    (match x3712 with
                                                     | Some x3740 ->
                                                         Ojs.set_prop_ascii
                                                           x3728 "dayPeriod"
                                                           (match x3740 with
                                                            | `L_s122_short
                                                                ->
                                                                Ojs.string_to_js
                                                                  "short"
                                                            | `L_s78_long ->
                                                                Ojs.string_to_js
                                                                  "long"
                                                            | `L_s92_narrow
                                                                ->
                                                                Ojs.string_to_js
                                                                  "narrow")
                                                     | None -> ());
                                                    (match x3713 with
                                                     | Some x3739 ->
                                                         Ojs.set_prop_ascii
                                                           x3728
                                                           "fractionalSecondDigits"
                                                           (match x3739 with
                                                            | `L_n_1 ->
                                                                Ojs.int_to_js
                                                                  1
                                                            | `L_n_2 ->
                                                                Ojs.int_to_js
                                                                  2
                                                            | `L_n_3 ->
                                                                Ojs.int_to_js
                                                                  3)
                                                     | None -> ());
                                                    Ojs.set_prop_ascii x3728
                                                      "locale"
                                                      (Ojs.string_to_js x3714);
                                                    Ojs.set_prop_ascii x3728
                                                      "calendar"
                                                      (Ojs.string_to_js x3715);
                                                    Ojs.set_prop_ascii x3728
                                                      "numberingSystem"
                                                      (Ojs.string_to_js x3716);
                                                    Ojs.set_prop_ascii x3728
                                                      "timeZone"
                                                      (Ojs.string_to_js x3717);
                                                    (match x3718 with
                                                     | Some x3738 ->
                                                         Ojs.set_prop_ascii
                                                           x3728 "hour12"
                                                           (Ojs.bool_to_js
                                                              x3738)
                                                     | None -> ());
                                                    (match x3719 with
                                                     | Some x3737 ->
                                                         Ojs.set_prop_ascii
                                                           x3728 "weekday"
                                                           (Ojs.string_to_js
                                                              x3737)
                                                     | None -> ());
                                                    (match x3720 with
                                                     | Some x3736 ->
                                                         Ojs.set_prop_ascii
                                                           x3728 "era"
                                                           (Ojs.string_to_js
                                                              x3736)
                                                     | None -> ());
                                                    (match x3721 with
                                                     | Some x3735 ->
                                                         Ojs.set_prop_ascii
                                                           x3728 "year"
                                                           (Ojs.string_to_js
                                                              x3735)
                                                     | None -> ());
                                                    (match x3722 with
                                                     | Some x3734 ->
                                                         Ojs.set_prop_ascii
                                                           x3728 "month"
                                                           (Ojs.string_to_js
                                                              x3734)
                                                     | None -> ());
                                                    (match x3723 with
                                                     | Some x3733 ->
                                                         Ojs.set_prop_ascii
                                                           x3728 "day"
                                                           (Ojs.string_to_js
                                                              x3733)
                                                     | None -> ());
                                                    (match x3724 with
                                                     | Some x3732 ->
                                                         Ojs.set_prop_ascii
                                                           x3728 "hour"
                                                           (Ojs.string_to_js
                                                              x3732)
                                                     | None -> ());
                                                    (match x3725 with
                                                     | Some x3731 ->
                                                         Ojs.set_prop_ascii
                                                           x3728 "minute"
                                                           (Ojs.string_to_js
                                                              x3731)
                                                     | None -> ());
                                                    (match x3726 with
                                                     | Some x3730 ->
                                                         Ojs.set_prop_ascii
                                                           x3728 "second"
                                                           (Ojs.string_to_js
                                                              x3730)
                                                     | None -> ());
                                                    (match x3727 with
                                                     | Some x3729 ->
                                                         Ojs.set_prop_ascii
                                                           x3728
                                                           "timeZoneName"
                                                           (Ojs.string_to_js
                                                              x3729)
                                                     | None -> ());
                                                    t_of_js x3728
        let cast_from = Obj.magic
      end
    module DateTimeFormatPartTypes =
      struct
        type t =
          [ `L_s118_second  | `L_s132_timeZoneName  | `L_s138_unknown 
          | `L_s142_weekday  | `L_s145_year  | `L_s38_day 
          | `L_s39_dayPeriod  | `L_s53_era  | `L_s61_fractionalSecond 
          | `L_s71_hour  | `L_s76_literal  | `L_s86_minute  | `L_s88_month ]
        let rec t_of_js : Ojs.t -> t =
          fun (x3746 : Ojs.t) ->
            let x3747 = x3746 in
            match Ojs.string_of_js x3747 with
            | "second" -> `L_s118_second
            | "timeZoneName" -> `L_s132_timeZoneName
            | "unknown" -> `L_s138_unknown
            | "weekday" -> `L_s142_weekday
            | "year" -> `L_s145_year
            | "day" -> `L_s38_day
            | "dayPeriod" -> `L_s39_dayPeriod
            | "era" -> `L_s53_era
            | "fractionalSecond" -> `L_s61_fractionalSecond
            | "hour" -> `L_s71_hour
            | "literal" -> `L_s76_literal
            | "minute" -> `L_s86_minute
            | "month" -> `L_s88_month
            | _ -> assert false
        and t_to_js : t -> Ojs.t =
          fun
            (x3745 :
              [ `L_s118_second  | `L_s132_timeZoneName  | `L_s138_unknown 
              | `L_s142_weekday  | `L_s145_year  | `L_s38_day 
              | `L_s39_dayPeriod  | `L_s53_era  | `L_s61_fractionalSecond 
              | `L_s71_hour  | `L_s76_literal  | `L_s86_minute 
              | `L_s88_month ])
            ->
            match x3745 with
            | `L_s118_second -> Ojs.string_to_js "second"
            | `L_s132_timeZoneName -> Ojs.string_to_js "timeZoneName"
            | `L_s138_unknown -> Ojs.string_to_js "unknown"
            | `L_s142_weekday -> Ojs.string_to_js "weekday"
            | `L_s145_year -> Ojs.string_to_js "year"
            | `L_s38_day -> Ojs.string_to_js "day"
            | `L_s39_dayPeriod -> Ojs.string_to_js "dayPeriod"
            | `L_s53_era -> Ojs.string_to_js "era"
            | `L_s61_fractionalSecond -> Ojs.string_to_js "fractionalSecond"
            | `L_s71_hour -> Ojs.string_to_js "hour"
            | `L_s76_literal -> Ojs.string_to_js "literal"
            | `L_s86_minute -> Ojs.string_to_js "minute"
            | `L_s88_month -> Ojs.string_to_js "month"
      end
    module DateTimeFormatPart =
      struct
        type t = [ `Intl_DateTimeFormatPart ] intf
        let rec t_of_js : Ojs.t -> t = Obj.magic
        and t_to_js : t -> Ojs.t = Obj.magic
        type tags = [ `Intl_DateTimeFormatPart ]
        type 'tags this =
          'tags intf constraint 'tags = [> `Intl_DateTimeFormatPart ]
        let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
          =
          fun (type __tags) ->
            fun (__tags_of_js : Ojs.t -> __tags) ->
              fun (x3750 : Ojs.t) -> intf_of_js __tags_of_js x3750
        and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
          fun (type __tags) ->
            fun (__tags_to_js : __tags -> Ojs.t) ->
              fun (x3748 : __tags intf) -> intf_to_js __tags_to_js x3748
        let (get_type : 'tags this -> DateTimeFormatPartTypes.t) =
          fun (x3752 : 'tags this) ->
            DateTimeFormatPartTypes.t_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3752) "type")
        let (set_type : 'tags this -> DateTimeFormatPartTypes.t -> unit) =
          fun (x3754 : 'tags this) ->
            fun (x3755 : DateTimeFormatPartTypes.t) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3754) "type"
                (DateTimeFormatPartTypes.t_to_js x3755)
        let (get_value : 'tags this -> string) =
          fun (x3757 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3757) "value")
        let (set_value : 'tags this -> string -> unit) =
          fun (x3759 : 'tags this) ->
            fun (x3760 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3759) "value"
                (Ojs.string_to_js x3760)
        let (create :
          type_:DateTimeFormatPartTypes.t -> value:string -> unit -> t) =
          fun ~type_:(x3762 : DateTimeFormatPartTypes.t) ->
            fun ~value:(x3763 : string) ->
              fun () ->
                let x3764 = Ojs.empty_obj () in
                Ojs.set_prop_ascii x3764 "type"
                  (DateTimeFormatPartTypes.t_to_js x3762);
                Ojs.set_prop_ascii x3764 "value" (Ojs.string_to_js x3763);
                t_of_js x3764
        let cast_from = Obj.magic
      end
    module DateTimeRangeFormatPart =
      struct
        type t =
          [ `Intl_DateTimeFormatPart  | `Intl_DateTimeRangeFormatPart ] intf
        let rec t_of_js : Ojs.t -> t = Obj.magic
        and t_to_js : t -> Ojs.t = Obj.magic
        type tags =
          [ `Intl_DateTimeFormatPart  | `Intl_DateTimeRangeFormatPart ]
        type 'tags this =
          'tags intf constraint 'tags = [> `Intl_DateTimeRangeFormatPart ]
        let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
          =
          fun (type __tags) ->
            fun (__tags_of_js : Ojs.t -> __tags) ->
              fun (x3767 : Ojs.t) -> intf_of_js __tags_of_js x3767
        and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
          fun (type __tags) ->
            fun (__tags_to_js : __tags -> Ojs.t) ->
              fun (x3765 : __tags intf) -> intf_to_js __tags_to_js x3765
        let (get_source :
          'tags this ->
            [ `L_s121_shared  | `L_s127_startRange  | `L_s50_endRange ])
          =
          fun (x3769 : 'tags this) ->
            let x3771 =
              Ojs.get_prop_ascii (this_to_js Obj.magic x3769) "source" in
            match Ojs.string_of_js x3771 with
            | "shared" -> `L_s121_shared
            | "startRange" -> `L_s127_startRange
            | "endRange" -> `L_s50_endRange
            | _ -> assert false
        let (set_source :
          'tags this ->
            [ `U1 of [ `L_s127_startRange ]  | `U2 of [ `L_s50_endRange ] 
            | `U3 of [ `L_s121_shared ] ] -> unit)
          =
          fun (x3772 : 'tags this) ->
            fun
              (x3773 :
                [ `U1 of [ `L_s127_startRange ] 
                | `U2 of [ `L_s50_endRange ]  | `U3 of [ `L_s121_shared ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3772) "source"
                (match x3773 with
                 | `U1 x3774 ->
                     (match x3774 with
                      | `L_s127_startRange -> Ojs.string_to_js "startRange")
                 | `U2 x3775 ->
                     (match x3775 with
                      | `L_s50_endRange -> Ojs.string_to_js "endRange")
                 | `U3 x3776 ->
                     (match x3776 with
                      | `L_s121_shared -> Ojs.string_to_js "shared"))
        let (create :
          source:[ `L_s121_shared  | `L_s127_startRange  | `L_s50_endRange ]
            -> unit -> t)
          =
          fun
            ~source:(x3778 :
                      [ `L_s121_shared  | `L_s127_startRange 
                      | `L_s50_endRange ])
            ->
            fun () ->
              let x3779 = Ojs.empty_obj () in
              Ojs.set_prop_ascii x3779 "source"
                (match x3778 with
                 | `L_s121_shared -> Ojs.string_to_js "shared"
                 | `L_s127_startRange -> Ojs.string_to_js "startRange"
                 | `L_s50_endRange -> Ojs.string_to_js "endRange");
              t_of_js x3779
        let cast_from = Obj.magic
      end
    module DateTimeFormatOptions =
      struct
        type t = [ `Intl_DateTimeFormatOptions ] intf
        let rec t_of_js : Ojs.t -> t = Obj.magic
        and t_to_js : t -> Ojs.t = Obj.magic
        type tags = [ `Intl_DateTimeFormatOptions ]
        type 'tags this =
          'tags intf constraint 'tags = [> `Intl_DateTimeFormatOptions ]
        let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
          =
          fun (type __tags) ->
            fun (__tags_of_js : Ojs.t -> __tags) ->
              fun (x3782 : Ojs.t) -> intf_of_js __tags_of_js x3782
        and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
          fun (type __tags) ->
            fun (__tags_to_js : __tags -> Ojs.t) ->
              fun (x3780 : __tags intf) -> intf_to_js __tags_to_js x3780
        let (get_formatMatcher :
          'tags this -> [ `L_s25_basic  | `L_s26_best_fit ] option) =
          fun (x3784 : 'tags this) ->
            Ojs.option_of_js
              (fun (x3786 : Ojs.t) ->
                 let x3787 = x3786 in
                 match Ojs.string_of_js x3787 with
                 | "basic" -> `L_s25_basic
                 | "best fit" -> `L_s26_best_fit
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3784)
                 "formatMatcher")
        let (set_formatMatcher :
          'tags this ->
            [ `Undefined of undefined  | `U1 of [ `L_s25_basic ] 
            | `U2 of [ `L_s26_best_fit ] ] -> unit)
          =
          fun (x3788 : 'tags this) ->
            fun
              (x3789 :
                [ `Undefined of undefined  | `U1 of [ `L_s25_basic ] 
                | `U2 of [ `L_s26_best_fit ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3788) "formatMatcher"
                (match x3789 with
                 | `Undefined x3790 -> undefined_to_js x3790
                 | `U1 x3791 ->
                     (match x3791 with
                      | `L_s25_basic -> Ojs.string_to_js "basic")
                 | `U2 x3792 ->
                     (match x3792 with
                      | `L_s26_best_fit -> Ojs.string_to_js "best fit"))
        let (get_dateStyle :
          'tags this ->
            [ `L_s122_short  | `L_s63_full  | `L_s78_long  | `L_s84_medium ]
              option)
          =
          fun (x3794 : 'tags this) ->
            Ojs.option_of_js
              (fun (x3796 : Ojs.t) ->
                 let x3797 = x3796 in
                 match Ojs.string_of_js x3797 with
                 | "short" -> `L_s122_short
                 | "full" -> `L_s63_full
                 | "long" -> `L_s78_long
                 | "medium" -> `L_s84_medium
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3794) "dateStyle")
        let (set_dateStyle :
          'tags this ->
            [ `Undefined of undefined  | `U1 of [ `L_s63_full ] 
            | `U2 of [ `L_s78_long ]  | `U3 of [ `L_s84_medium ] 
            | `U4 of [ `L_s122_short ] ] -> unit)
          =
          fun (x3798 : 'tags this) ->
            fun
              (x3799 :
                [ `Undefined of undefined  | `U1 of [ `L_s63_full ] 
                | `U2 of [ `L_s78_long ]  | `U3 of [ `L_s84_medium ] 
                | `U4 of [ `L_s122_short ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3798) "dateStyle"
                (match x3799 with
                 | `Undefined x3800 -> undefined_to_js x3800
                 | `U1 x3801 ->
                     (match x3801 with
                      | `L_s63_full -> Ojs.string_to_js "full")
                 | `U2 x3802 ->
                     (match x3802 with
                      | `L_s78_long -> Ojs.string_to_js "long")
                 | `U3 x3803 ->
                     (match x3803 with
                      | `L_s84_medium -> Ojs.string_to_js "medium")
                 | `U4 x3804 ->
                     (match x3804 with
                      | `L_s122_short -> Ojs.string_to_js "short"))
        let (get_timeStyle :
          'tags this ->
            [ `L_s122_short  | `L_s63_full  | `L_s78_long  | `L_s84_medium ]
              option)
          =
          fun (x3806 : 'tags this) ->
            Ojs.option_of_js
              (fun (x3808 : Ojs.t) ->
                 let x3809 = x3808 in
                 match Ojs.string_of_js x3809 with
                 | "short" -> `L_s122_short
                 | "full" -> `L_s63_full
                 | "long" -> `L_s78_long
                 | "medium" -> `L_s84_medium
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3806) "timeStyle")
        let (set_timeStyle :
          'tags this ->
            [ `Undefined of undefined  | `U1 of [ `L_s63_full ] 
            | `U2 of [ `L_s78_long ]  | `U3 of [ `L_s84_medium ] 
            | `U4 of [ `L_s122_short ] ] -> unit)
          =
          fun (x3810 : 'tags this) ->
            fun
              (x3811 :
                [ `Undefined of undefined  | `U1 of [ `L_s63_full ] 
                | `U2 of [ `L_s78_long ]  | `U3 of [ `L_s84_medium ] 
                | `U4 of [ `L_s122_short ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3810) "timeStyle"
                (match x3811 with
                 | `Undefined x3812 -> undefined_to_js x3812
                 | `U1 x3813 ->
                     (match x3813 with
                      | `L_s63_full -> Ojs.string_to_js "full")
                 | `U2 x3814 ->
                     (match x3814 with
                      | `L_s78_long -> Ojs.string_to_js "long")
                 | `U3 x3815 ->
                     (match x3815 with
                      | `L_s84_medium -> Ojs.string_to_js "medium")
                 | `U4 x3816 ->
                     (match x3816 with
                      | `L_s122_short -> Ojs.string_to_js "short"))
        let (get_dayPeriod :
          'tags this ->
            [ `L_s122_short  | `L_s78_long  | `L_s92_narrow ] option)
          =
          fun (x3818 : 'tags this) ->
            Ojs.option_of_js
              (fun (x3820 : Ojs.t) ->
                 let x3821 = x3820 in
                 match Ojs.string_of_js x3821 with
                 | "short" -> `L_s122_short
                 | "long" -> `L_s78_long
                 | "narrow" -> `L_s92_narrow
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3818) "dayPeriod")
        let (set_dayPeriod :
          'tags this ->
            [ `Undefined of undefined  | `U1 of [ `L_s92_narrow ] 
            | `U2 of [ `L_s122_short ]  | `U3 of [ `L_s78_long ] ] -> 
              unit)
          =
          fun (x3822 : 'tags this) ->
            fun
              (x3823 :
                [ `Undefined of undefined  | `U1 of [ `L_s92_narrow ] 
                | `U2 of [ `L_s122_short ]  | `U3 of [ `L_s78_long ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3822) "dayPeriod"
                (match x3823 with
                 | `Undefined x3824 -> undefined_to_js x3824
                 | `U1 x3825 ->
                     (match x3825 with
                      | `L_s92_narrow -> Ojs.string_to_js "narrow")
                 | `U2 x3826 ->
                     (match x3826 with
                      | `L_s122_short -> Ojs.string_to_js "short")
                 | `U3 x3827 ->
                     (match x3827 with
                      | `L_s78_long -> Ojs.string_to_js "long"))
        let (get_fractionalSecondDigits :
          'tags this -> [ `L_n_1  | `L_n_2  | `L_n_3 ] option) =
          fun (x3829 : 'tags this) ->
            Ojs.option_of_js
              (fun (x3831 : Ojs.t) ->
                 let x3832 = x3831 in
                 match Ojs.int_of_js x3832 with
                 | 1 -> `L_n_1
                 | 2 -> `L_n_2
                 | 3 -> `L_n_3
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3829)
                 "fractionalSecondDigits")
        let (set_fractionalSecondDigits :
          'tags this ->
            [ `Undefined of undefined  | `U1 of [ `L_n_1 ] 
            | `U2 of [ `L_n_2 ]  | `U3 of [ `L_n_3 ] ] -> unit)
          =
          fun (x3833 : 'tags this) ->
            fun
              (x3834 :
                [ `Undefined of undefined  | `U1 of [ `L_n_1 ] 
                | `U2 of [ `L_n_2 ]  | `U3 of [ `L_n_3 ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3833)
                "fractionalSecondDigits"
                (match x3834 with
                 | `Undefined x3835 -> undefined_to_js x3835
                 | `U1 x3836 ->
                     (match x3836 with | `L_n_1 -> Ojs.int_to_js 1)
                 | `U2 x3837 ->
                     (match x3837 with | `L_n_2 -> Ojs.int_to_js 2)
                 | `U3 x3838 ->
                     (match x3838 with | `L_n_3 -> Ojs.int_to_js 3))
        let (get_calendar : 'tags this -> string option) =
          fun (x3840 : 'tags this) ->
            Ojs.option_of_js Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3840) "calendar")
        let (set_calendar :
          'tags this -> [ `Undefined of undefined  | `U1 of string ] -> unit)
          =
          fun (x3843 : 'tags this) ->
            fun (x3844 : [ `Undefined of undefined  | `U1 of string ]) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3843) "calendar"
                (match x3844 with
                 | `Undefined x3845 -> undefined_to_js x3845
                 | `U1 x3846 -> Ojs.string_to_js x3846)
        let (get_dayPeriod' :
          'tags this ->
            [ `L_s122_short  | `L_s78_long  | `L_s92_narrow ] option)
          =
          fun (x3848 : 'tags this) ->
            Ojs.option_of_js
              (fun (x3850 : Ojs.t) ->
                 let x3851 = x3850 in
                 match Ojs.string_of_js x3851 with
                 | "short" -> `L_s122_short
                 | "long" -> `L_s78_long
                 | "narrow" -> `L_s92_narrow
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3848) "dayPeriod")
        let (set_dayPeriod' :
          'tags this ->
            [ `Undefined of undefined  | `U1 of [ `L_s92_narrow ] 
            | `U2 of [ `L_s122_short ]  | `U3 of [ `L_s78_long ] ] -> 
              unit)
          =
          fun (x3852 : 'tags this) ->
            fun
              (x3853 :
                [ `Undefined of undefined  | `U1 of [ `L_s92_narrow ] 
                | `U2 of [ `L_s122_short ]  | `U3 of [ `L_s78_long ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3852) "dayPeriod"
                (match x3853 with
                 | `Undefined x3854 -> undefined_to_js x3854
                 | `U1 x3855 ->
                     (match x3855 with
                      | `L_s92_narrow -> Ojs.string_to_js "narrow")
                 | `U2 x3856 ->
                     (match x3856 with
                      | `L_s122_short -> Ojs.string_to_js "short")
                 | `U3 x3857 ->
                     (match x3857 with
                      | `L_s78_long -> Ojs.string_to_js "long"))
        let (get_numberingSystem : 'tags this -> string option) =
          fun (x3859 : 'tags this) ->
            Ojs.option_of_js Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3859)
                 "numberingSystem")
        let (set_numberingSystem :
          'tags this -> [ `Undefined of undefined  | `U1 of string ] -> unit)
          =
          fun (x3862 : 'tags this) ->
            fun (x3863 : [ `Undefined of undefined  | `U1 of string ]) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3862)
                "numberingSystem"
                (match x3863 with
                 | `Undefined x3864 -> undefined_to_js x3864
                 | `U1 x3865 -> Ojs.string_to_js x3865)
        let (get_dateStyle' :
          'tags this ->
            [ `L_s122_short  | `L_s63_full  | `L_s78_long  | `L_s84_medium ]
              option)
          =
          fun (x3867 : 'tags this) ->
            Ojs.option_of_js
              (fun (x3869 : Ojs.t) ->
                 let x3870 = x3869 in
                 match Ojs.string_of_js x3870 with
                 | "short" -> `L_s122_short
                 | "full" -> `L_s63_full
                 | "long" -> `L_s78_long
                 | "medium" -> `L_s84_medium
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3867) "dateStyle")
        let (set_dateStyle' :
          'tags this ->
            [ `Undefined of undefined  | `U1 of [ `L_s63_full ] 
            | `U2 of [ `L_s78_long ]  | `U3 of [ `L_s84_medium ] 
            | `U4 of [ `L_s122_short ] ] -> unit)
          =
          fun (x3871 : 'tags this) ->
            fun
              (x3872 :
                [ `Undefined of undefined  | `U1 of [ `L_s63_full ] 
                | `U2 of [ `L_s78_long ]  | `U3 of [ `L_s84_medium ] 
                | `U4 of [ `L_s122_short ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3871) "dateStyle"
                (match x3872 with
                 | `Undefined x3873 -> undefined_to_js x3873
                 | `U1 x3874 ->
                     (match x3874 with
                      | `L_s63_full -> Ojs.string_to_js "full")
                 | `U2 x3875 ->
                     (match x3875 with
                      | `L_s78_long -> Ojs.string_to_js "long")
                 | `U3 x3876 ->
                     (match x3876 with
                      | `L_s84_medium -> Ojs.string_to_js "medium")
                 | `U4 x3877 ->
                     (match x3877 with
                      | `L_s122_short -> Ojs.string_to_js "short"))
        let (get_timeStyle' :
          'tags this ->
            [ `L_s122_short  | `L_s63_full  | `L_s78_long  | `L_s84_medium ]
              option)
          =
          fun (x3879 : 'tags this) ->
            Ojs.option_of_js
              (fun (x3881 : Ojs.t) ->
                 let x3882 = x3881 in
                 match Ojs.string_of_js x3882 with
                 | "short" -> `L_s122_short
                 | "full" -> `L_s63_full
                 | "long" -> `L_s78_long
                 | "medium" -> `L_s84_medium
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3879) "timeStyle")
        let (set_timeStyle' :
          'tags this ->
            [ `Undefined of undefined  | `U1 of [ `L_s63_full ] 
            | `U2 of [ `L_s78_long ]  | `U3 of [ `L_s84_medium ] 
            | `U4 of [ `L_s122_short ] ] -> unit)
          =
          fun (x3883 : 'tags this) ->
            fun
              (x3884 :
                [ `Undefined of undefined  | `U1 of [ `L_s63_full ] 
                | `U2 of [ `L_s78_long ]  | `U3 of [ `L_s84_medium ] 
                | `U4 of [ `L_s122_short ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3883) "timeStyle"
                (match x3884 with
                 | `Undefined x3885 -> undefined_to_js x3885
                 | `U1 x3886 ->
                     (match x3886 with
                      | `L_s63_full -> Ojs.string_to_js "full")
                 | `U2 x3887 ->
                     (match x3887 with
                      | `L_s78_long -> Ojs.string_to_js "long")
                 | `U3 x3888 ->
                     (match x3888 with
                      | `L_s84_medium -> Ojs.string_to_js "medium")
                 | `U4 x3889 ->
                     (match x3889 with
                      | `L_s122_short -> Ojs.string_to_js "short"))
        let (get_hourCycle :
          'tags this ->
            [ `L_s67_h11  | `L_s68_h12  | `L_s69_h23  | `L_s70_h24 ] option)
          =
          fun (x3891 : 'tags this) ->
            Ojs.option_of_js
              (fun (x3893 : Ojs.t) ->
                 let x3894 = x3893 in
                 match Ojs.string_of_js x3894 with
                 | "h11" -> `L_s67_h11
                 | "h12" -> `L_s68_h12
                 | "h23" -> `L_s69_h23
                 | "h24" -> `L_s70_h24
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3891) "hourCycle")
        let (set_hourCycle :
          'tags this ->
            [ `Undefined of undefined  | `U1 of [ `L_s67_h11 ] 
            | `U2 of [ `L_s68_h12 ]  | `U3 of [ `L_s69_h23 ] 
            | `U4 of [ `L_s70_h24 ] ] -> unit)
          =
          fun (x3895 : 'tags this) ->
            fun
              (x3896 :
                [ `Undefined of undefined  | `U1 of [ `L_s67_h11 ] 
                | `U2 of [ `L_s68_h12 ]  | `U3 of [ `L_s69_h23 ] 
                | `U4 of [ `L_s70_h24 ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3895) "hourCycle"
                (match x3896 with
                 | `Undefined x3897 -> undefined_to_js x3897
                 | `U1 x3898 ->
                     (match x3898 with | `L_s67_h11 -> Ojs.string_to_js "h11")
                 | `U2 x3899 ->
                     (match x3899 with | `L_s68_h12 -> Ojs.string_to_js "h12")
                 | `U3 x3900 ->
                     (match x3900 with | `L_s69_h23 -> Ojs.string_to_js "h23")
                 | `U4 x3901 ->
                     (match x3901 with | `L_s70_h24 -> Ojs.string_to_js "h24"))
        let (get_localeMatcher :
          'tags this -> [ `L_s26_best_fit  | `L_s81_lookup ] option) =
          fun (x3903 : 'tags this) ->
            Ojs.option_of_js
              (fun (x3905 : Ojs.t) ->
                 let x3906 = x3905 in
                 match Ojs.string_of_js x3906 with
                 | "best fit" -> `L_s26_best_fit
                 | "lookup" -> `L_s81_lookup
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3903)
                 "localeMatcher")
        let (set_localeMatcher :
          'tags this ->
            [ `Undefined of undefined  | `U1 of [ `L_s26_best_fit ] 
            | `U2 of [ `L_s81_lookup ] ] -> unit)
          =
          fun (x3907 : 'tags this) ->
            fun
              (x3908 :
                [ `Undefined of undefined  | `U1 of [ `L_s26_best_fit ] 
                | `U2 of [ `L_s81_lookup ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3907) "localeMatcher"
                (match x3908 with
                 | `Undefined x3909 -> undefined_to_js x3909
                 | `U1 x3910 ->
                     (match x3910 with
                      | `L_s26_best_fit -> Ojs.string_to_js "best fit")
                 | `U2 x3911 ->
                     (match x3911 with
                      | `L_s81_lookup -> Ojs.string_to_js "lookup"))
        let (get_weekday :
          'tags this ->
            [ `L_s122_short  | `L_s78_long  | `L_s92_narrow ] option)
          =
          fun (x3913 : 'tags this) ->
            Ojs.option_of_js
              (fun (x3915 : Ojs.t) ->
                 let x3916 = x3915 in
                 match Ojs.string_of_js x3916 with
                 | "short" -> `L_s122_short
                 | "long" -> `L_s78_long
                 | "narrow" -> `L_s92_narrow
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3913) "weekday")
        let (set_weekday :
          'tags this ->
            [ `Undefined of undefined  | `U1 of [ `L_s78_long ] 
            | `U2 of [ `L_s122_short ]  | `U3 of [ `L_s92_narrow ] ] -> 
              unit)
          =
          fun (x3917 : 'tags this) ->
            fun
              (x3918 :
                [ `Undefined of undefined  | `U1 of [ `L_s78_long ] 
                | `U2 of [ `L_s122_short ]  | `U3 of [ `L_s92_narrow ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3917) "weekday"
                (match x3918 with
                 | `Undefined x3919 -> undefined_to_js x3919
                 | `U1 x3920 ->
                     (match x3920 with
                      | `L_s78_long -> Ojs.string_to_js "long")
                 | `U2 x3921 ->
                     (match x3921 with
                      | `L_s122_short -> Ojs.string_to_js "short")
                 | `U3 x3922 ->
                     (match x3922 with
                      | `L_s92_narrow -> Ojs.string_to_js "narrow"))
        let (get_era :
          'tags this ->
            [ `L_s122_short  | `L_s78_long  | `L_s92_narrow ] option)
          =
          fun (x3924 : 'tags this) ->
            Ojs.option_of_js
              (fun (x3926 : Ojs.t) ->
                 let x3927 = x3926 in
                 match Ojs.string_of_js x3927 with
                 | "short" -> `L_s122_short
                 | "long" -> `L_s78_long
                 | "narrow" -> `L_s92_narrow
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3924) "era")
        let (set_era :
          'tags this ->
            [ `Undefined of undefined  | `U1 of [ `L_s78_long ] 
            | `U2 of [ `L_s122_short ]  | `U3 of [ `L_s92_narrow ] ] -> 
              unit)
          =
          fun (x3928 : 'tags this) ->
            fun
              (x3929 :
                [ `Undefined of undefined  | `U1 of [ `L_s78_long ] 
                | `U2 of [ `L_s122_short ]  | `U3 of [ `L_s92_narrow ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3928) "era"
                (match x3929 with
                 | `Undefined x3930 -> undefined_to_js x3930
                 | `U1 x3931 ->
                     (match x3931 with
                      | `L_s78_long -> Ojs.string_to_js "long")
                 | `U2 x3932 ->
                     (match x3932 with
                      | `L_s122_short -> Ojs.string_to_js "short")
                 | `U3 x3933 ->
                     (match x3933 with
                      | `L_s92_narrow -> Ojs.string_to_js "narrow"))
        let (get_year :
          'tags this -> [ `L_s0_2_digit  | `L_s98_numeric ] option) =
          fun (x3935 : 'tags this) ->
            Ojs.option_of_js
              (fun (x3937 : Ojs.t) ->
                 let x3938 = x3937 in
                 match Ojs.string_of_js x3938 with
                 | "2-digit" -> `L_s0_2_digit
                 | "numeric" -> `L_s98_numeric
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3935) "year")
        let (set_year :
          'tags this ->
            [ `Undefined of undefined  | `U1 of [ `L_s98_numeric ] 
            | `U2 of [ `L_s0_2_digit ] ] -> unit)
          =
          fun (x3939 : 'tags this) ->
            fun
              (x3940 :
                [ `Undefined of undefined  | `U1 of [ `L_s98_numeric ] 
                | `U2 of [ `L_s0_2_digit ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3939) "year"
                (match x3940 with
                 | `Undefined x3941 -> undefined_to_js x3941
                 | `U1 x3942 ->
                     (match x3942 with
                      | `L_s98_numeric -> Ojs.string_to_js "numeric")
                 | `U2 x3943 ->
                     (match x3943 with
                      | `L_s0_2_digit -> Ojs.string_to_js "2-digit"))
        let (get_month :
          'tags this ->
            [ `L_s0_2_digit  | `L_s122_short  | `L_s78_long  | `L_s92_narrow 
            | `L_s98_numeric ] option)
          =
          fun (x3945 : 'tags this) ->
            Ojs.option_of_js
              (fun (x3947 : Ojs.t) ->
                 let x3948 = x3947 in
                 match Ojs.string_of_js x3948 with
                 | "2-digit" -> `L_s0_2_digit
                 | "short" -> `L_s122_short
                 | "long" -> `L_s78_long
                 | "narrow" -> `L_s92_narrow
                 | "numeric" -> `L_s98_numeric
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3945) "month")
        let (set_month :
          'tags this ->
            [ `Undefined of undefined  | `U1 of [ `L_s98_numeric ] 
            | `U2 of [ `L_s0_2_digit ]  | `U3 of [ `L_s78_long ] 
            | `U4 of [ `L_s122_short ]  | `U5 of [ `L_s92_narrow ] ] -> 
              unit)
          =
          fun (x3949 : 'tags this) ->
            fun
              (x3950 :
                [ `Undefined of undefined  | `U1 of [ `L_s98_numeric ] 
                | `U2 of [ `L_s0_2_digit ]  | `U3 of [ `L_s78_long ] 
                | `U4 of [ `L_s122_short ]  | `U5 of [ `L_s92_narrow ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3949) "month"
                (match x3950 with
                 | `Undefined x3951 -> undefined_to_js x3951
                 | `U1 x3952 ->
                     (match x3952 with
                      | `L_s98_numeric -> Ojs.string_to_js "numeric")
                 | `U2 x3953 ->
                     (match x3953 with
                      | `L_s0_2_digit -> Ojs.string_to_js "2-digit")
                 | `U3 x3954 ->
                     (match x3954 with
                      | `L_s78_long -> Ojs.string_to_js "long")
                 | `U4 x3955 ->
                     (match x3955 with
                      | `L_s122_short -> Ojs.string_to_js "short")
                 | `U5 x3956 ->
                     (match x3956 with
                      | `L_s92_narrow -> Ojs.string_to_js "narrow"))
        let (get_day :
          'tags this -> [ `L_s0_2_digit  | `L_s98_numeric ] option) =
          fun (x3958 : 'tags this) ->
            Ojs.option_of_js
              (fun (x3960 : Ojs.t) ->
                 let x3961 = x3960 in
                 match Ojs.string_of_js x3961 with
                 | "2-digit" -> `L_s0_2_digit
                 | "numeric" -> `L_s98_numeric
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3958) "day")
        let (set_day :
          'tags this ->
            [ `Undefined of undefined  | `U1 of [ `L_s98_numeric ] 
            | `U2 of [ `L_s0_2_digit ] ] -> unit)
          =
          fun (x3962 : 'tags this) ->
            fun
              (x3963 :
                [ `Undefined of undefined  | `U1 of [ `L_s98_numeric ] 
                | `U2 of [ `L_s0_2_digit ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3962) "day"
                (match x3963 with
                 | `Undefined x3964 -> undefined_to_js x3964
                 | `U1 x3965 ->
                     (match x3965 with
                      | `L_s98_numeric -> Ojs.string_to_js "numeric")
                 | `U2 x3966 ->
                     (match x3966 with
                      | `L_s0_2_digit -> Ojs.string_to_js "2-digit"))
        let (get_hour :
          'tags this -> [ `L_s0_2_digit  | `L_s98_numeric ] option) =
          fun (x3968 : 'tags this) ->
            Ojs.option_of_js
              (fun (x3970 : Ojs.t) ->
                 let x3971 = x3970 in
                 match Ojs.string_of_js x3971 with
                 | "2-digit" -> `L_s0_2_digit
                 | "numeric" -> `L_s98_numeric
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3968) "hour")
        let (set_hour :
          'tags this ->
            [ `Undefined of undefined  | `U1 of [ `L_s98_numeric ] 
            | `U2 of [ `L_s0_2_digit ] ] -> unit)
          =
          fun (x3972 : 'tags this) ->
            fun
              (x3973 :
                [ `Undefined of undefined  | `U1 of [ `L_s98_numeric ] 
                | `U2 of [ `L_s0_2_digit ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3972) "hour"
                (match x3973 with
                 | `Undefined x3974 -> undefined_to_js x3974
                 | `U1 x3975 ->
                     (match x3975 with
                      | `L_s98_numeric -> Ojs.string_to_js "numeric")
                 | `U2 x3976 ->
                     (match x3976 with
                      | `L_s0_2_digit -> Ojs.string_to_js "2-digit"))
        let (get_minute :
          'tags this -> [ `L_s0_2_digit  | `L_s98_numeric ] option) =
          fun (x3978 : 'tags this) ->
            Ojs.option_of_js
              (fun (x3980 : Ojs.t) ->
                 let x3981 = x3980 in
                 match Ojs.string_of_js x3981 with
                 | "2-digit" -> `L_s0_2_digit
                 | "numeric" -> `L_s98_numeric
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3978) "minute")
        let (set_minute :
          'tags this ->
            [ `Undefined of undefined  | `U1 of [ `L_s98_numeric ] 
            | `U2 of [ `L_s0_2_digit ] ] -> unit)
          =
          fun (x3982 : 'tags this) ->
            fun
              (x3983 :
                [ `Undefined of undefined  | `U1 of [ `L_s98_numeric ] 
                | `U2 of [ `L_s0_2_digit ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3982) "minute"
                (match x3983 with
                 | `Undefined x3984 -> undefined_to_js x3984
                 | `U1 x3985 ->
                     (match x3985 with
                      | `L_s98_numeric -> Ojs.string_to_js "numeric")
                 | `U2 x3986 ->
                     (match x3986 with
                      | `L_s0_2_digit -> Ojs.string_to_js "2-digit"))
        let (get_second :
          'tags this -> [ `L_s0_2_digit  | `L_s98_numeric ] option) =
          fun (x3988 : 'tags this) ->
            Ojs.option_of_js
              (fun (x3990 : Ojs.t) ->
                 let x3991 = x3990 in
                 match Ojs.string_of_js x3991 with
                 | "2-digit" -> `L_s0_2_digit
                 | "numeric" -> `L_s98_numeric
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3988) "second")
        let (set_second :
          'tags this ->
            [ `Undefined of undefined  | `U1 of [ `L_s98_numeric ] 
            | `U2 of [ `L_s0_2_digit ] ] -> unit)
          =
          fun (x3992 : 'tags this) ->
            fun
              (x3993 :
                [ `Undefined of undefined  | `U1 of [ `L_s98_numeric ] 
                | `U2 of [ `L_s0_2_digit ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3992) "second"
                (match x3993 with
                 | `Undefined x3994 -> undefined_to_js x3994
                 | `U1 x3995 ->
                     (match x3995 with
                      | `L_s98_numeric -> Ojs.string_to_js "numeric")
                 | `U2 x3996 ->
                     (match x3996 with
                      | `L_s0_2_digit -> Ojs.string_to_js "2-digit"))
        let (get_timeZoneName :
          'tags this ->
            [ `L_s122_short  | `L_s123_shortGeneric  | `L_s124_shortOffset 
            | `L_s78_long  | `L_s79_longGeneric  | `L_s80_longOffset ] option)
          =
          fun (x3998 : 'tags this) ->
            Ojs.option_of_js
              (fun (x4000 : Ojs.t) ->
                 let x4001 = x4000 in
                 match Ojs.string_of_js x4001 with
                 | "short" -> `L_s122_short
                 | "shortGeneric" -> `L_s123_shortGeneric
                 | "shortOffset" -> `L_s124_shortOffset
                 | "long" -> `L_s78_long
                 | "longGeneric" -> `L_s79_longGeneric
                 | "longOffset" -> `L_s80_longOffset
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3998) "timeZoneName")
        let (set_timeZoneName :
          'tags this ->
            [ `Undefined of undefined  | `U1 of [ `L_s122_short ] 
            | `U2 of [ `L_s78_long ]  | `U3 of [ `L_s124_shortOffset ] 
            | `U4 of [ `L_s80_longOffset ] 
            | `U5 of [ `L_s123_shortGeneric ] 
            | `U6 of [ `L_s79_longGeneric ] ] -> unit)
          =
          fun (x4002 : 'tags this) ->
            fun
              (x4003 :
                [ `Undefined of undefined  | `U1 of [ `L_s122_short ] 
                | `U2 of [ `L_s78_long ]  | `U3 of [ `L_s124_shortOffset ] 
                | `U4 of [ `L_s80_longOffset ] 
                | `U5 of [ `L_s123_shortGeneric ] 
                | `U6 of [ `L_s79_longGeneric ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x4002) "timeZoneName"
                (match x4003 with
                 | `Undefined x4004 -> undefined_to_js x4004
                 | `U1 x4005 ->
                     (match x4005 with
                      | `L_s122_short -> Ojs.string_to_js "short")
                 | `U2 x4006 ->
                     (match x4006 with
                      | `L_s78_long -> Ojs.string_to_js "long")
                 | `U3 x4007 ->
                     (match x4007 with
                      | `L_s124_shortOffset -> Ojs.string_to_js "shortOffset")
                 | `U4 x4008 ->
                     (match x4008 with
                      | `L_s80_longOffset -> Ojs.string_to_js "longOffset")
                 | `U5 x4009 ->
                     (match x4009 with
                      | `L_s123_shortGeneric ->
                          Ojs.string_to_js "shortGeneric")
                 | `U6 x4010 ->
                     (match x4010 with
                      | `L_s79_longGeneric -> Ojs.string_to_js "longGeneric"))
        let (get_formatMatcher' :
          'tags this -> [ `L_s25_basic  | `L_s26_best_fit ] option) =
          fun (x4012 : 'tags this) ->
            Ojs.option_of_js
              (fun (x4014 : Ojs.t) ->
                 let x4015 = x4014 in
                 match Ojs.string_of_js x4015 with
                 | "basic" -> `L_s25_basic
                 | "best fit" -> `L_s26_best_fit
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x4012)
                 "formatMatcher")
        let (set_formatMatcher' :
          'tags this ->
            [ `Undefined of undefined  | `U1 of [ `L_s26_best_fit ] 
            | `U2 of [ `L_s25_basic ] ] -> unit)
          =
          fun (x4016 : 'tags this) ->
            fun
              (x4017 :
                [ `Undefined of undefined  | `U1 of [ `L_s26_best_fit ] 
                | `U2 of [ `L_s25_basic ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x4016) "formatMatcher"
                (match x4017 with
                 | `Undefined x4018 -> undefined_to_js x4018
                 | `U1 x4019 ->
                     (match x4019 with
                      | `L_s26_best_fit -> Ojs.string_to_js "best fit")
                 | `U2 x4020 ->
                     (match x4020 with
                      | `L_s25_basic -> Ojs.string_to_js "basic"))
        let (get_hour12 : 'tags this -> bool option) =
          fun (x4022 : 'tags this) ->
            Ojs.option_of_js Ojs.bool_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x4022) "hour12")
        let (set_hour12 :
          'tags this -> [ `Undefined of undefined  | `U1 of bool ] -> unit) =
          fun (x4025 : 'tags this) ->
            fun (x4026 : [ `Undefined of undefined  | `U1 of bool ]) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x4025) "hour12"
                (match x4026 with
                 | `Undefined x4027 -> undefined_to_js x4027
                 | `U1 x4028 -> Ojs.bool_to_js x4028)
        let (get_timeZone : 'tags this -> string option) =
          fun (x4030 : 'tags this) ->
            Ojs.option_of_js Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x4030) "timeZone")
        let (set_timeZone :
          'tags this -> [ `Undefined of undefined  | `U1 of string ] -> unit)
          =
          fun (x4033 : 'tags this) ->
            fun (x4034 : [ `Undefined of undefined  | `U1 of string ]) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x4033) "timeZone"
                (match x4034 with
                 | `Undefined x4035 -> undefined_to_js x4035
                 | `U1 x4036 -> Ojs.string_to_js x4036)
        let (create :
          ?formatMatcher:[ `L_s25_basic  | `L_s26_best_fit ] ->
            ?dateStyle:[ `L_s122_short  | `L_s63_full  | `L_s78_long 
                       | `L_s84_medium ]
              ->
              ?timeStyle:[ `L_s122_short  | `L_s63_full  | `L_s78_long 
                         | `L_s84_medium ]
                ->
                ?dayPeriod:[ `L_s122_short  | `L_s78_long  | `L_s92_narrow ]
                  ->
                  ?fractionalSecondDigits:[ `L_n_1  | `L_n_2  | `L_n_3 ] ->
                    ?calendar:string ->
                      ?numberingSystem:string ->
                        ?hourCycle:[ `L_s67_h11  | `L_s68_h12  | `L_s69_h23 
                                   | `L_s70_h24 ]
                          ->
                          ?localeMatcher:[ `L_s26_best_fit  | `L_s81_lookup ]
                            ->
                            ?weekday:[ `L_s122_short  | `L_s78_long 
                                     | `L_s92_narrow ]
                              ->
                              ?era:[ `L_s122_short  | `L_s78_long 
                                   | `L_s92_narrow ]
                                ->
                                ?year:[ `L_s0_2_digit  | `L_s98_numeric ] ->
                                  ?month:[ `L_s0_2_digit  | `L_s122_short 
                                         | `L_s78_long  | `L_s92_narrow 
                                         | `L_s98_numeric ]
                                    ->
                                    ?day:[ `L_s0_2_digit  | `L_s98_numeric ]
                                      ->
                                      ?hour:[ `L_s0_2_digit 
                                            | `L_s98_numeric ]
                                        ->
                                        ?minute:[ `L_s0_2_digit 
                                                | `L_s98_numeric ]
                                          ->
                                          ?second:[ `L_s0_2_digit 
                                                  | `L_s98_numeric ]
                                            ->
                                            ?timeZoneName:[ `L_s122_short 
                                                          | `L_s123_shortGeneric
                                                               | `L_s124_shortOffset
                                                                    | 
                                                            `L_s78_long 
                                                          | `L_s79_longGeneric
                                                               | `L_s80_longOffset
                                                                   ]
                                              ->
                                              ?hour12:bool ->
                                                ?timeZone:string -> unit -> t)
          =
          fun
            ?formatMatcher:(x4038 :
                             [ `L_s25_basic  | `L_s26_best_fit ] option)
            ->
            fun
              ?dateStyle:(x4039 :
                           [ `L_s122_short  | `L_s63_full  | `L_s78_long 
                           | `L_s84_medium ] option)
              ->
              fun
                ?timeStyle:(x4040 :
                             [ `L_s122_short  | `L_s63_full  | `L_s78_long 
                             | `L_s84_medium ] option)
                ->
                fun
                  ?dayPeriod:(x4041 :
                               [ `L_s122_short  | `L_s78_long 
                               | `L_s92_narrow ] option)
                  ->
                  fun
                    ?fractionalSecondDigits:(x4042 :
                                              [ `L_n_1  | `L_n_2  | `L_n_3 ]
                                                option)
                    ->
                    fun ?calendar:(x4043 : string option) ->
                      fun ?numberingSystem:(x4044 : string option) ->
                        fun
                          ?hourCycle:(x4045 :
                                       [ `L_s67_h11  | `L_s68_h12 
                                       | `L_s69_h23  | `L_s70_h24 ] option)
                          ->
                          fun
                            ?localeMatcher:(x4046 :
                                             [ `L_s26_best_fit 
                                             | `L_s81_lookup ] option)
                            ->
                            fun
                              ?weekday:(x4047 :
                                         [ `L_s122_short  | `L_s78_long 
                                         | `L_s92_narrow ] option)
                              ->
                              fun
                                ?era:(x4048 :
                                       [ `L_s122_short  | `L_s78_long 
                                       | `L_s92_narrow ] option)
                                ->
                                fun
                                  ?year:(x4049 :
                                          [ `L_s0_2_digit  | `L_s98_numeric ]
                                            option)
                                  ->
                                  fun
                                    ?month:(x4050 :
                                             [ `L_s0_2_digit 
                                             | `L_s122_short  | `L_s78_long 
                                             | `L_s92_narrow 
                                             | `L_s98_numeric ] option)
                                    ->
                                    fun
                                      ?day:(x4051 :
                                             [ `L_s0_2_digit 
                                             | `L_s98_numeric ] option)
                                      ->
                                      fun
                                        ?hour:(x4052 :
                                                [ `L_s0_2_digit 
                                                | `L_s98_numeric ] option)
                                        ->
                                        fun
                                          ?minute:(x4053 :
                                                    [ `L_s0_2_digit 
                                                    | `L_s98_numeric ] option)
                                          ->
                                          fun
                                            ?second:(x4054 :
                                                      [ `L_s0_2_digit 
                                                      | `L_s98_numeric ]
                                                        option)
                                            ->
                                            fun
                                              ?timeZoneName:(x4055 :
                                                              [
                                                                `L_s122_short 
                                                              | `L_s123_shortGeneric
                                                                   | 
                                                                `L_s124_shortOffset
                                                                   | 
                                                                `L_s78_long 
                                                              | `L_s79_longGeneric
                                                                   | 
                                                                `L_s80_longOffset
                                                                  ]
                                                                option)
                                              ->
                                              fun
                                                ?hour12:(x4056 : bool option)
                                                ->
                                                fun
                                                  ?timeZone:(x4057 :
                                                              string option)
                                                  ->
                                                  fun () ->
                                                    let x4058 =
                                                      Ojs.empty_obj () in
                                                    (match x4038 with
                                                     | Some x4078 ->
                                                         Ojs.set_prop_ascii
                                                           x4058
                                                           "formatMatcher"
                                                           (match x4078 with
                                                            | `L_s25_basic ->
                                                                Ojs.string_to_js
                                                                  "basic"
                                                            | `L_s26_best_fit
                                                                ->
                                                                Ojs.string_to_js
                                                                  "best fit")
                                                     | None -> ());
                                                    (match x4039 with
                                                     | Some x4077 ->
                                                         Ojs.set_prop_ascii
                                                           x4058 "dateStyle"
                                                           (match x4077 with
                                                            | `L_s122_short
                                                                ->
                                                                Ojs.string_to_js
                                                                  "short"
                                                            | `L_s63_full ->
                                                                Ojs.string_to_js
                                                                  "full"
                                                            | `L_s78_long ->
                                                                Ojs.string_to_js
                                                                  "long"
                                                            | `L_s84_medium
                                                                ->
                                                                Ojs.string_to_js
                                                                  "medium")
                                                     | None -> ());
                                                    (match x4040 with
                                                     | Some x4076 ->
                                                         Ojs.set_prop_ascii
                                                           x4058 "timeStyle"
                                                           (match x4076 with
                                                            | `L_s122_short
                                                                ->
                                                                Ojs.string_to_js
                                                                  "short"
                                                            | `L_s63_full ->
                                                                Ojs.string_to_js
                                                                  "full"
                                                            | `L_s78_long ->
                                                                Ojs.string_to_js
                                                                  "long"
                                                            | `L_s84_medium
                                                                ->
                                                                Ojs.string_to_js
                                                                  "medium")
                                                     | None -> ());
                                                    (match x4041 with
                                                     | Some x4075 ->
                                                         Ojs.set_prop_ascii
                                                           x4058 "dayPeriod"
                                                           (match x4075 with
                                                            | `L_s122_short
                                                                ->
                                                                Ojs.string_to_js
                                                                  "short"
                                                            | `L_s78_long ->
                                                                Ojs.string_to_js
                                                                  "long"
                                                            | `L_s92_narrow
                                                                ->
                                                                Ojs.string_to_js
                                                                  "narrow")
                                                     | None -> ());
                                                    (match x4042 with
                                                     | Some x4074 ->
                                                         Ojs.set_prop_ascii
                                                           x4058
                                                           "fractionalSecondDigits"
                                                           (match x4074 with
                                                            | `L_n_1 ->
                                                                Ojs.int_to_js
                                                                  1
                                                            | `L_n_2 ->
                                                                Ojs.int_to_js
                                                                  2
                                                            | `L_n_3 ->
                                                                Ojs.int_to_js
                                                                  3)
                                                     | None -> ());
                                                    (match x4043 with
                                                     | Some x4073 ->
                                                         Ojs.set_prop_ascii
                                                           x4058 "calendar"
                                                           (Ojs.string_to_js
                                                              x4073)
                                                     | None -> ());
                                                    (match x4044 with
                                                     | Some x4072 ->
                                                         Ojs.set_prop_ascii
                                                           x4058
                                                           "numberingSystem"
                                                           (Ojs.string_to_js
                                                              x4072)
                                                     | None -> ());
                                                    (match x4045 with
                                                     | Some x4071 ->
                                                         Ojs.set_prop_ascii
                                                           x4058 "hourCycle"
                                                           (match x4071 with
                                                            | `L_s67_h11 ->
                                                                Ojs.string_to_js
                                                                  "h11"
                                                            | `L_s68_h12 ->
                                                                Ojs.string_to_js
                                                                  "h12"
                                                            | `L_s69_h23 ->
                                                                Ojs.string_to_js
                                                                  "h23"
                                                            | `L_s70_h24 ->
                                                                Ojs.string_to_js
                                                                  "h24")
                                                     | None -> ());
                                                    (match x4046 with
                                                     | Some x4070 ->
                                                         Ojs.set_prop_ascii
                                                           x4058
                                                           "localeMatcher"
                                                           (match x4070 with
                                                            | `L_s26_best_fit
                                                                ->
                                                                Ojs.string_to_js
                                                                  "best fit"
                                                            | `L_s81_lookup
                                                                ->
                                                                Ojs.string_to_js
                                                                  "lookup")
                                                     | None -> ());
                                                    (match x4047 with
                                                     | Some x4069 ->
                                                         Ojs.set_prop_ascii
                                                           x4058 "weekday"
                                                           (match x4069 with
                                                            | `L_s122_short
                                                                ->
                                                                Ojs.string_to_js
                                                                  "short"
                                                            | `L_s78_long ->
                                                                Ojs.string_to_js
                                                                  "long"
                                                            | `L_s92_narrow
                                                                ->
                                                                Ojs.string_to_js
                                                                  "narrow")
                                                     | None -> ());
                                                    (match x4048 with
                                                     | Some x4068 ->
                                                         Ojs.set_prop_ascii
                                                           x4058 "era"
                                                           (match x4068 with
                                                            | `L_s122_short
                                                                ->
                                                                Ojs.string_to_js
                                                                  "short"
                                                            | `L_s78_long ->
                                                                Ojs.string_to_js
                                                                  "long"
                                                            | `L_s92_narrow
                                                                ->
                                                                Ojs.string_to_js
                                                                  "narrow")
                                                     | None -> ());
                                                    (match x4049 with
                                                     | Some x4067 ->
                                                         Ojs.set_prop_ascii
                                                           x4058 "year"
                                                           (match x4067 with
                                                            | `L_s0_2_digit
                                                                ->
                                                                Ojs.string_to_js
                                                                  "2-digit"
                                                            | `L_s98_numeric
                                                                ->
                                                                Ojs.string_to_js
                                                                  "numeric")
                                                     | None -> ());
                                                    (match x4050 with
                                                     | Some x4066 ->
                                                         Ojs.set_prop_ascii
                                                           x4058 "month"
                                                           (match x4066 with
                                                            | `L_s0_2_digit
                                                                ->
                                                                Ojs.string_to_js
                                                                  "2-digit"
                                                            | `L_s122_short
                                                                ->
                                                                Ojs.string_to_js
                                                                  "short"
                                                            | `L_s78_long ->
                                                                Ojs.string_to_js
                                                                  "long"
                                                            | `L_s92_narrow
                                                                ->
                                                                Ojs.string_to_js
                                                                  "narrow"
                                                            | `L_s98_numeric
                                                                ->
                                                                Ojs.string_to_js
                                                                  "numeric")
                                                     | None -> ());
                                                    (match x4051 with
                                                     | Some x4065 ->
                                                         Ojs.set_prop_ascii
                                                           x4058 "day"
                                                           (match x4065 with
                                                            | `L_s0_2_digit
                                                                ->
                                                                Ojs.string_to_js
                                                                  "2-digit"
                                                            | `L_s98_numeric
                                                                ->
                                                                Ojs.string_to_js
                                                                  "numeric")
                                                     | None -> ());
                                                    (match x4052 with
                                                     | Some x4064 ->
                                                         Ojs.set_prop_ascii
                                                           x4058 "hour"
                                                           (match x4064 with
                                                            | `L_s0_2_digit
                                                                ->
                                                                Ojs.string_to_js
                                                                  "2-digit"
                                                            | `L_s98_numeric
                                                                ->
                                                                Ojs.string_to_js
                                                                  "numeric")
                                                     | None -> ());
                                                    (match x4053 with
                                                     | Some x4063 ->
                                                         Ojs.set_prop_ascii
                                                           x4058 "minute"
                                                           (match x4063 with
                                                            | `L_s0_2_digit
                                                                ->
                                                                Ojs.string_to_js
                                                                  "2-digit"
                                                            | `L_s98_numeric
                                                                ->
                                                                Ojs.string_to_js
                                                                  "numeric")
                                                     | None -> ());
                                                    (match x4054 with
                                                     | Some x4062 ->
                                                         Ojs.set_prop_ascii
                                                           x4058 "second"
                                                           (match x4062 with
                                                            | `L_s0_2_digit
                                                                ->
                                                                Ojs.string_to_js
                                                                  "2-digit"
                                                            | `L_s98_numeric
                                                                ->
                                                                Ojs.string_to_js
                                                                  "numeric")
                                                     | None -> ());
                                                    (match x4055 with
                                                     | Some x4061 ->
                                                         Ojs.set_prop_ascii
                                                           x4058
                                                           "timeZoneName"
                                                           (match x4061 with
                                                            | `L_s122_short
                                                                ->
                                                                Ojs.string_to_js
                                                                  "short"
                                                            | `L_s123_shortGeneric
                                                                ->
                                                                Ojs.string_to_js
                                                                  "shortGeneric"
                                                            | `L_s124_shortOffset
                                                                ->
                                                                Ojs.string_to_js
                                                                  "shortOffset"
                                                            | `L_s78_long ->
                                                                Ojs.string_to_js
                                                                  "long"
                                                            | `L_s79_longGeneric
                                                                ->
                                                                Ojs.string_to_js
                                                                  "longGeneric"
                                                            | `L_s80_longOffset
                                                                ->
                                                                Ojs.string_to_js
                                                                  "longOffset")
                                                     | None -> ());
                                                    (match x4056 with
                                                     | Some x4060 ->
                                                         Ojs.set_prop_ascii
                                                           x4058 "hour12"
                                                           (Ojs.bool_to_js
                                                              x4060)
                                                     | None -> ());
                                                    (match x4057 with
                                                     | Some x4059 ->
                                                         Ojs.set_prop_ascii
                                                           x4058 "timeZone"
                                                           (Ojs.string_to_js
                                                              x4059)
                                                     | None -> ());
                                                    t_of_js x4058
        let cast_from = Obj.magic
      end
    module DateTimeFormat =
      struct
        type t = [ `Intl_DateTimeFormat ] intf
        let rec t_of_js : Ojs.t -> t = Obj.magic
        and t_to_js : t -> Ojs.t = Obj.magic
        type tags = [ `Intl_DateTimeFormat ]
        type 'tags this =
          'tags intf constraint 'tags = [> `Intl_DateTimeFormat ]
        let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
          =
          fun (type __tags) ->
            fun (__tags_of_js : Ojs.t -> __tags) ->
              fun (x4081 : Ojs.t) -> intf_of_js __tags_of_js x4081
        and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
          fun (type __tags) ->
            fun (__tags_to_js : __tags -> Ojs.t) ->
              fun (x4079 : __tags intf) -> intf_to_js __tags_to_js x4079
        let (formatRange :
          'tags this ->
            startDate:[ `U1 of Date.t  | `U2 of float  | `U3 of bigint ] ->
              endDate:[ `U1 of Date.t  | `U2 of float  | `U3 of bigint ] ->
                string)
          =
          fun (x4091 : 'tags this) ->
            fun
              ~startDate:(x4083 :
                           [ `U1 of Date.t  | `U2 of float  | `U3 of bigint ])
              ->
              fun
                ~endDate:(x4087 :
                           [ `U1 of Date.t  | `U2 of float  | `U3 of bigint ])
                ->
                Ojs.string_of_js
                  (Ojs.call (this_to_js Obj.magic x4091) "formatRange"
                     [|((match x4083 with
                         | `U1 x4084 -> Date.t_to_js x4084
                         | `U2 x4085 -> Ojs.float_to_js x4085
                         | `U3 x4086 -> bigint_to_js x4086));((match x4087
                                                               with
                                                               | `U1 x4088 ->
                                                                   Date.t_to_js
                                                                    x4088
                                                               | `U2 x4089 ->
                                                                   Ojs.float_to_js
                                                                    x4089
                                                               | `U3 x4090 ->
                                                                   bigint_to_js
                                                                    x4090))|])
        let (formatRangeToParts :
          'tags this ->
            startDate:[ `U1 of Date.t  | `U2 of float  | `U3 of bigint ] ->
              endDate:[ `U1 of Date.t  | `U2 of float  | `U3 of bigint ] ->
                DateTimeRangeFormatPart.t list)
          =
          fun (x4101 : 'tags this) ->
            fun
              ~startDate:(x4093 :
                           [ `U1 of Date.t  | `U2 of float  | `U3 of bigint ])
              ->
              fun
                ~endDate:(x4097 :
                           [ `U1 of Date.t  | `U2 of float  | `U3 of bigint ])
                ->
                Ojs.list_of_js DateTimeRangeFormatPart.t_of_js
                  (Ojs.call (this_to_js Obj.magic x4101) "formatRangeToParts"
                     [|((match x4093 with
                         | `U1 x4094 -> Date.t_to_js x4094
                         | `U2 x4095 -> Ojs.float_to_js x4095
                         | `U3 x4096 -> bigint_to_js x4096));((match x4097
                                                               with
                                                               | `U1 x4098 ->
                                                                   Date.t_to_js
                                                                    x4098
                                                               | `U2 x4099 ->
                                                                   Ojs.float_to_js
                                                                    x4099
                                                               | `U3 x4100 ->
                                                                   bigint_to_js
                                                                    x4100))|])
        let (formatToParts :
          'tags this ->
            ?date:[ `U1 of Date.t  | `U2 of float ] ->
              unit -> DateTimeFormatPart.t list)
          =
          fun (x4109 : 'tags this) ->
            fun ?date:(x4104 : [ `U1 of Date.t  | `U2 of float ] option) ->
              fun () ->
                Ojs.list_of_js DateTimeFormatPart.t_of_js
                  (let x4111 = this_to_js Obj.magic x4109 in
                   Ojs.call (Ojs.get_prop_ascii x4111 "formatToParts")
                     "apply"
                     [|x4111;((let x4105 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               (match x4104 with
                                | Some x4106 ->
                                    ignore
                                      (Ojs.call x4105 "push"
                                         [|((match x4106 with
                                             | `U1 x4107 ->
                                                 Date.t_to_js x4107
                                             | `U2 x4108 ->
                                                 Ojs.float_to_js x4108))|])
                                | None -> ());
                               x4105))|])
        let (format :
          'tags this ->
            ?date:[ `U1 of Date.t  | `U2 of float ] -> unit -> string)
          =
          fun (x4118 : 'tags this) ->
            fun ?date:(x4113 : [ `U1 of Date.t  | `U2 of float ] option) ->
              fun () ->
                Ojs.string_of_js
                  (let x4120 = this_to_js Obj.magic x4118 in
                   Ojs.call (Ojs.get_prop_ascii x4120 "format") "apply"
                     [|x4120;((let x4114 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               (match x4113 with
                                | Some x4115 ->
                                    ignore
                                      (Ojs.call x4114 "push"
                                         [|((match x4115 with
                                             | `U1 x4116 ->
                                                 Date.t_to_js x4116
                                             | `U2 x4117 ->
                                                 Ojs.float_to_js x4117))|])
                                | None -> ());
                               x4114))|])
        let (resolvedOptions : 'tags this -> ResolvedDateTimeFormatOptions.t)
          =
          fun (x4121 : 'tags this) ->
            ResolvedDateTimeFormatOptions.t_of_js
              (Ojs.call (this_to_js Obj.magic x4121) "resolvedOptions" [||])
        let cast_from = Obj.magic
        let (create :
          ?locales:[ `U1 of string  | `U2 of string list ] ->
            ?options:DateTimeFormatOptions.t -> unit -> t)
          =
          fun
            ?locales:(x4123 : [ `U1 of string  | `U2 of string list ] option)
            ->
            fun ?options:(x4124 : DateTimeFormatOptions.t option) ->
              fun () ->
                t_of_js
                  (Ojs.new_obj_arr
                     (Ojs.get_prop_ascii
                        (Ojs.get_prop_ascii Ojs.global "Intl")
                        "DateTimeFormat")
                     (let x4125 =
                        Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                          [||] in
                      (match x4123 with
                       | Some x4127 ->
                           ignore
                             (Ojs.call x4125 "push"
                                [|((match x4127 with
                                    | `U1 x4128 -> Ojs.string_to_js x4128
                                    | `U2 x4129 ->
                                        Ojs.list_to_js Ojs.string_to_js x4129))|])
                       | None -> ());
                      (match x4124 with
                       | Some x4126 ->
                           ignore
                             (Ojs.call x4125 "push"
                                [|(DateTimeFormatOptions.t_to_js x4126)|])
                       | None -> ());
                      x4125))
        let (invoke :
          ?locales:[ `U1 of string  | `U2 of string list ] ->
            ?options:DateTimeFormatOptions.t -> unit -> t)
          =
          fun
            ?locales:(x4131 : [ `U1 of string  | `U2 of string list ] option)
            ->
            fun ?options:(x4132 : DateTimeFormatOptions.t option) ->
              fun () ->
                t_of_js
                  (Ojs.call
                     (Ojs.get_prop_ascii
                        (Ojs.get_prop_ascii Ojs.global "Intl")
                        "DateTimeFormat") "apply"
                     [|Ojs.null;((let x4133 =
                                    Ojs.new_obj
                                      (Ojs.get_prop_ascii Ojs.global "Array")
                                      [||] in
                                  (match x4131 with
                                   | Some x4135 ->
                                       ignore
                                         (Ojs.call x4133 "push"
                                            [|((match x4135 with
                                                | `U1 x4136 ->
                                                    Ojs.string_to_js x4136
                                                | `U2 x4137 ->
                                                    Ojs.list_to_js
                                                      Ojs.string_to_js x4137))|])
                                   | None -> ());
                                  (match x4132 with
                                   | Some x4134 ->
                                       ignore
                                         (Ojs.call x4133 "push"
                                            [|(DateTimeFormatOptions.t_to_js
                                                 x4134)|])
                                   | None -> ());
                                  x4133))|])
        let (supportedLocalesOf :
          locales:[ `U1 of string  | `U2 of string list ] ->
            ?options:DateTimeFormatOptions.t -> unit -> string list)
          =
          fun ~locales:(x4139 : [ `U1 of string  | `U2 of string list ]) ->
            fun ?options:(x4140 : DateTimeFormatOptions.t option) ->
              fun () ->
                Ojs.list_of_js Ojs.string_of_js
                  (let x4146 =
                     Ojs.get_prop_ascii
                       (Ojs.get_prop_ascii Ojs.global "Intl")
                       "DateTimeFormat" in
                   Ojs.call (Ojs.get_prop_ascii x4146 "supportedLocalesOf")
                     "apply"
                     [|x4146;((let x4141 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x4141 "push"
                                    [|((match x4139 with
                                        | `U1 x4143 -> Ojs.string_to_js x4143
                                        | `U2 x4144 ->
                                            Ojs.list_to_js Ojs.string_to_js
                                              x4144))|]);
                               (match x4140 with
                                | Some x4142 ->
                                    ignore
                                      (Ojs.call x4141 "push"
                                         [|(DateTimeFormatOptions.t_to_js
                                              x4142)|])
                                | None -> ());
                               x4141))|])
        let (prototype : unit -> t) =
          fun () ->
            t_of_js
              (Ojs.get_prop_ascii
                 (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Intl")
                    "DateTimeFormat") "prototype")
      end
    module ResolvedCollatorOptions =
      struct
        type t = [ `Intl_ResolvedCollatorOptions ] intf
        let rec t_of_js : Ojs.t -> t = Obj.magic
        and t_to_js : t -> Ojs.t = Obj.magic
        type tags = [ `Intl_ResolvedCollatorOptions ]
        type 'tags this =
          'tags intf constraint 'tags = [> `Intl_ResolvedCollatorOptions ]
        let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
          =
          fun (type __tags) ->
            fun (__tags_of_js : Ojs.t -> __tags) ->
              fun (x4150 : Ojs.t) -> intf_of_js __tags_of_js x4150
        and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
          fun (type __tags) ->
            fun (__tags_to_js : __tags -> Ojs.t) ->
              fun (x4148 : __tags intf) -> intf_to_js __tags_to_js x4148
        let (get_locale : 'tags this -> string) =
          fun (x4152 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x4152) "locale")
        let (set_locale : 'tags this -> string -> unit) =
          fun (x4154 : 'tags this) ->
            fun (x4155 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x4154) "locale"
                (Ojs.string_to_js x4155)
        let (get_usage : 'tags this -> string) =
          fun (x4157 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x4157) "usage")
        let (set_usage : 'tags this -> string -> unit) =
          fun (x4159 : 'tags this) ->
            fun (x4160 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x4159) "usage"
                (Ojs.string_to_js x4160)
        let (get_sensitivity : 'tags this -> string) =
          fun (x4162 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x4162) "sensitivity")
        let (set_sensitivity : 'tags this -> string -> unit) =
          fun (x4164 : 'tags this) ->
            fun (x4165 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x4164) "sensitivity"
                (Ojs.string_to_js x4165)
        let (get_ignorePunctuation : 'tags this -> bool) =
          fun (x4167 : 'tags this) ->
            Ojs.bool_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x4167)
                 "ignorePunctuation")
        let (set_ignorePunctuation : 'tags this -> bool -> unit) =
          fun (x4169 : 'tags this) ->
            fun (x4170 : bool) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x4169)
                "ignorePunctuation" (Ojs.bool_to_js x4170)
        let (get_collation : 'tags this -> string) =
          fun (x4172 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x4172) "collation")
        let (set_collation : 'tags this -> string -> unit) =
          fun (x4174 : 'tags this) ->
            fun (x4175 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x4174) "collation"
                (Ojs.string_to_js x4175)
        let (get_caseFirst : 'tags this -> string) =
          fun (x4177 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x4177) "caseFirst")
        let (set_caseFirst : 'tags this -> string -> unit) =
          fun (x4179 : 'tags this) ->
            fun (x4180 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x4179) "caseFirst"
                (Ojs.string_to_js x4180)
        let (get_numeric : 'tags this -> bool) =
          fun (x4182 : 'tags this) ->
            Ojs.bool_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x4182) "numeric")
        let (set_numeric : 'tags this -> bool -> unit) =
          fun (x4184 : 'tags this) ->
            fun (x4185 : bool) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x4184) "numeric"
                (Ojs.bool_to_js x4185)
        let (create :
          locale:string ->
            usage:string ->
              sensitivity:string ->
                ignorePunctuation:bool ->
                  collation:string ->
                    caseFirst:string -> numeric:bool -> unit -> t)
          =
          fun ~locale:(x4187 : string) ->
            fun ~usage:(x4188 : string) ->
              fun ~sensitivity:(x4189 : string) ->
                fun ~ignorePunctuation:(x4190 : bool) ->
                  fun ~collation:(x4191 : string) ->
                    fun ~caseFirst:(x4192 : string) ->
                      fun ~numeric:(x4193 : bool) ->
                        fun () ->
                          let x4194 = Ojs.empty_obj () in
                          Ojs.set_prop_ascii x4194 "locale"
                            (Ojs.string_to_js x4187);
                          Ojs.set_prop_ascii x4194 "usage"
                            (Ojs.string_to_js x4188);
                          Ojs.set_prop_ascii x4194 "sensitivity"
                            (Ojs.string_to_js x4189);
                          Ojs.set_prop_ascii x4194 "ignorePunctuation"
                            (Ojs.bool_to_js x4190);
                          Ojs.set_prop_ascii x4194 "collation"
                            (Ojs.string_to_js x4191);
                          Ojs.set_prop_ascii x4194 "caseFirst"
                            (Ojs.string_to_js x4192);
                          Ojs.set_prop_ascii x4194 "numeric"
                            (Ojs.bool_to_js x4193);
                          t_of_js x4194
        let cast_from = Obj.magic
      end
    module CollatorOptions =
      struct
        type t = [ `Intl_CollatorOptions ] intf
        let rec t_of_js : Ojs.t -> t = Obj.magic
        and t_to_js : t -> Ojs.t = Obj.magic
        type tags = [ `Intl_CollatorOptions ]
        type 'tags this =
          'tags intf constraint 'tags = [> `Intl_CollatorOptions ]
        let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
          =
          fun (type __tags) ->
            fun (__tags_of_js : Ojs.t -> __tags) ->
              fun (x4197 : Ojs.t) -> intf_of_js __tags_of_js x4197
        and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
          fun (type __tags) ->
            fun (__tags_to_js : __tags -> Ojs.t) ->
              fun (x4195 : __tags intf) -> intf_to_js __tags_to_js x4195
        let (get_usage :
          'tags this -> [ `L_s116_search  | `L_s125_sort ] option) =
          fun (x4199 : 'tags this) ->
            Ojs.option_of_js
              (fun (x4201 : Ojs.t) ->
                 let x4202 = x4201 in
                 match Ojs.string_of_js x4202 with
                 | "search" -> `L_s116_search
                 | "sort" -> `L_s125_sort
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x4199) "usage")
        let (set_usage :
          'tags this ->
            [ `Undefined of undefined  | `U1 of [ `L_s125_sort ] 
            | `U2 of [ `L_s116_search ] ] -> unit)
          =
          fun (x4203 : 'tags this) ->
            fun
              (x4204 :
                [ `Undefined of undefined  | `U1 of [ `L_s125_sort ] 
                | `U2 of [ `L_s116_search ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x4203) "usage"
                (match x4204 with
                 | `Undefined x4205 -> undefined_to_js x4205
                 | `U1 x4206 ->
                     (match x4206 with
                      | `L_s125_sort -> Ojs.string_to_js "sort")
                 | `U2 x4207 ->
                     (match x4207 with
                      | `L_s116_search -> Ojs.string_to_js "search"))
        let (get_localeMatcher :
          'tags this -> [ `L_s26_best_fit  | `L_s81_lookup ] option) =
          fun (x4209 : 'tags this) ->
            Ojs.option_of_js
              (fun (x4211 : Ojs.t) ->
                 let x4212 = x4211 in
                 match Ojs.string_of_js x4212 with
                 | "best fit" -> `L_s26_best_fit
                 | "lookup" -> `L_s81_lookup
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x4209)
                 "localeMatcher")
        let (set_localeMatcher :
          'tags this ->
            [ `Undefined of undefined  | `U1 of [ `L_s81_lookup ] 
            | `U2 of [ `L_s26_best_fit ] ] -> unit)
          =
          fun (x4213 : 'tags this) ->
            fun
              (x4214 :
                [ `Undefined of undefined  | `U1 of [ `L_s81_lookup ] 
                | `U2 of [ `L_s26_best_fit ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x4213) "localeMatcher"
                (match x4214 with
                 | `Undefined x4215 -> undefined_to_js x4215
                 | `U1 x4216 ->
                     (match x4216 with
                      | `L_s81_lookup -> Ojs.string_to_js "lookup")
                 | `U2 x4217 ->
                     (match x4217 with
                      | `L_s26_best_fit -> Ojs.string_to_js "best fit"))
        let (get_numeric : 'tags this -> bool option) =
          fun (x4219 : 'tags this) ->
            Ojs.option_of_js Ojs.bool_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x4219) "numeric")
        let (set_numeric :
          'tags this -> [ `Undefined of undefined  | `U1 of bool ] -> unit) =
          fun (x4222 : 'tags this) ->
            fun (x4223 : [ `Undefined of undefined  | `U1 of bool ]) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x4222) "numeric"
                (match x4223 with
                 | `Undefined x4224 -> undefined_to_js x4224
                 | `U1 x4225 -> Ojs.bool_to_js x4225)
        let (get_caseFirst :
          'tags this ->
            [ `L_s139_upper  | `L_s58_false  | `L_s82_lower ] option)
          =
          fun (x4227 : 'tags this) ->
            Ojs.option_of_js
              (fun (x4229 : Ojs.t) ->
                 let x4230 = x4229 in
                 match Ojs.string_of_js x4230 with
                 | "upper" -> `L_s139_upper
                 | "false" -> `L_s58_false
                 | "lower" -> `L_s82_lower
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x4227) "caseFirst")
        let (set_caseFirst :
          'tags this ->
            [ `Undefined of undefined  | `U1 of [ `L_s139_upper ] 
            | `U2 of [ `L_s82_lower ]  | `U3 of [ `L_s58_false ] ] -> 
              unit)
          =
          fun (x4231 : 'tags this) ->
            fun
              (x4232 :
                [ `Undefined of undefined  | `U1 of [ `L_s139_upper ] 
                | `U2 of [ `L_s82_lower ]  | `U3 of [ `L_s58_false ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x4231) "caseFirst"
                (match x4232 with
                 | `Undefined x4233 -> undefined_to_js x4233
                 | `U1 x4234 ->
                     (match x4234 with
                      | `L_s139_upper -> Ojs.string_to_js "upper")
                 | `U2 x4235 ->
                     (match x4235 with
                      | `L_s82_lower -> Ojs.string_to_js "lower")
                 | `U3 x4236 ->
                     (match x4236 with
                      | `L_s58_false -> Ojs.string_to_js "false"))
        let (get_sensitivity :
          'tags this ->
            [ `L_s140_variant  | `L_s21_accent  | `L_s24_base 
            | `L_s30_case ] option)
          =
          fun (x4238 : 'tags this) ->
            Ojs.option_of_js
              (fun (x4240 : Ojs.t) ->
                 let x4241 = x4240 in
                 match Ojs.string_of_js x4241 with
                 | "variant" -> `L_s140_variant
                 | "accent" -> `L_s21_accent
                 | "base" -> `L_s24_base
                 | "case" -> `L_s30_case
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x4238) "sensitivity")
        let (set_sensitivity :
          'tags this ->
            [ `Undefined of undefined  | `U1 of [ `L_s24_base ] 
            | `U2 of [ `L_s21_accent ]  | `U3 of [ `L_s30_case ] 
            | `U4 of [ `L_s140_variant ] ] -> unit)
          =
          fun (x4242 : 'tags this) ->
            fun
              (x4243 :
                [ `Undefined of undefined  | `U1 of [ `L_s24_base ] 
                | `U2 of [ `L_s21_accent ]  | `U3 of [ `L_s30_case ] 
                | `U4 of [ `L_s140_variant ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x4242) "sensitivity"
                (match x4243 with
                 | `Undefined x4244 -> undefined_to_js x4244
                 | `U1 x4245 ->
                     (match x4245 with
                      | `L_s24_base -> Ojs.string_to_js "base")
                 | `U2 x4246 ->
                     (match x4246 with
                      | `L_s21_accent -> Ojs.string_to_js "accent")
                 | `U3 x4247 ->
                     (match x4247 with
                      | `L_s30_case -> Ojs.string_to_js "case")
                 | `U4 x4248 ->
                     (match x4248 with
                      | `L_s140_variant -> Ojs.string_to_js "variant"))
        let (get_collation :
          'tags this ->
            [ `L_s105_phonebk  | `L_s106_phonetic  | `L_s107_pinyin 
            | `L_s111_reformed  | `L_s117_searchjl  | `L_s129_stroke 
            | `L_s134_trad  | `L_s136_unihan  | `L_s148_zhuyin 
            | `L_s27_big5han  | `L_s34_compat  | `L_s44_dict 
            | `L_s45_direct  | `L_s47_ducet  | `L_s49_emoji  | `L_s52_eor 
            | `L_s64_gb2312 ] option)
          =
          fun (x4250 : 'tags this) ->
            Ojs.option_of_js
              (fun (x4252 : Ojs.t) ->
                 let x4253 = x4252 in
                 match Ojs.string_of_js x4253 with
                 | "phonebk" -> `L_s105_phonebk
                 | "phonetic" -> `L_s106_phonetic
                 | "pinyin" -> `L_s107_pinyin
                 | "reformed" -> `L_s111_reformed
                 | "searchjl" -> `L_s117_searchjl
                 | "stroke" -> `L_s129_stroke
                 | "trad" -> `L_s134_trad
                 | "unihan" -> `L_s136_unihan
                 | "zhuyin" -> `L_s148_zhuyin
                 | "big5han" -> `L_s27_big5han
                 | "compat" -> `L_s34_compat
                 | "dict" -> `L_s44_dict
                 | "direct" -> `L_s45_direct
                 | "ducet" -> `L_s47_ducet
                 | "emoji" -> `L_s49_emoji
                 | "eor" -> `L_s52_eor
                 | "gb2312" -> `L_s64_gb2312
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x4250) "collation")
        let (set_collation :
          'tags this ->
            [ `Undefined of undefined  | `U1 of [ `L_s27_big5han ] 
            | `U2 of [ `L_s34_compat ]  | `U3 of [ `L_s44_dict ] 
            | `U4 of [ `L_s45_direct ]  | `U5 of [ `L_s47_ducet ] 
            | `U6 of [ `L_s49_emoji ]  | `U7 of [ `L_s52_eor ] 
            | `U8 of [ `L_s64_gb2312 ]  | `U9 of [ `L_s105_phonebk ] 
            | `U10 of [ `L_s106_phonetic ]  | `U11 of [ `L_s107_pinyin ] 
            | `U12 of [ `L_s111_reformed ]  | `U13 of [ `L_s117_searchjl ] 
            | `U14 of [ `L_s129_stroke ]  | `U15 of [ `L_s134_trad ] 
            | `U16 of [ `L_s136_unihan ]  | `U17 of [ `L_s148_zhuyin ] ] ->
              unit)
          =
          fun (x4254 : 'tags this) ->
            fun
              (x4255 :
                [ `Undefined of undefined  | `U1 of [ `L_s27_big5han ] 
                | `U2 of [ `L_s34_compat ]  | `U3 of [ `L_s44_dict ] 
                | `U4 of [ `L_s45_direct ]  | `U5 of [ `L_s47_ducet ] 
                | `U6 of [ `L_s49_emoji ]  | `U7 of [ `L_s52_eor ] 
                | `U8 of [ `L_s64_gb2312 ]  | `U9 of [ `L_s105_phonebk ] 
                | `U10 of [ `L_s106_phonetic ]  | `U11 of [ `L_s107_pinyin ] 
                | `U12 of [ `L_s111_reformed ] 
                | `U13 of [ `L_s117_searchjl ]  | `U14 of [ `L_s129_stroke ] 
                | `U15 of [ `L_s134_trad ]  | `U16 of [ `L_s136_unihan ] 
                | `U17 of [ `L_s148_zhuyin ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x4254) "collation"
                (match x4255 with
                 | `Undefined x4256 -> undefined_to_js x4256
                 | `U1 x4257 ->
                     (match x4257 with
                      | `L_s27_big5han -> Ojs.string_to_js "big5han")
                 | `U2 x4258 ->
                     (match x4258 with
                      | `L_s34_compat -> Ojs.string_to_js "compat")
                 | `U3 x4259 ->
                     (match x4259 with
                      | `L_s44_dict -> Ojs.string_to_js "dict")
                 | `U4 x4260 ->
                     (match x4260 with
                      | `L_s45_direct -> Ojs.string_to_js "direct")
                 | `U5 x4261 ->
                     (match x4261 with
                      | `L_s47_ducet -> Ojs.string_to_js "ducet")
                 | `U6 x4262 ->
                     (match x4262 with
                      | `L_s49_emoji -> Ojs.string_to_js "emoji")
                 | `U7 x4263 ->
                     (match x4263 with | `L_s52_eor -> Ojs.string_to_js "eor")
                 | `U8 x4264 ->
                     (match x4264 with
                      | `L_s64_gb2312 -> Ojs.string_to_js "gb2312")
                 | `U9 x4265 ->
                     (match x4265 with
                      | `L_s105_phonebk -> Ojs.string_to_js "phonebk")
                 | `U10 x4266 ->
                     (match x4266 with
                      | `L_s106_phonetic -> Ojs.string_to_js "phonetic")
                 | `U11 x4267 ->
                     (match x4267 with
                      | `L_s107_pinyin -> Ojs.string_to_js "pinyin")
                 | `U12 x4268 ->
                     (match x4268 with
                      | `L_s111_reformed -> Ojs.string_to_js "reformed")
                 | `U13 x4269 ->
                     (match x4269 with
                      | `L_s117_searchjl -> Ojs.string_to_js "searchjl")
                 | `U14 x4270 ->
                     (match x4270 with
                      | `L_s129_stroke -> Ojs.string_to_js "stroke")
                 | `U15 x4271 ->
                     (match x4271 with
                      | `L_s134_trad -> Ojs.string_to_js "trad")
                 | `U16 x4272 ->
                     (match x4272 with
                      | `L_s136_unihan -> Ojs.string_to_js "unihan")
                 | `U17 x4273 ->
                     (match x4273 with
                      | `L_s148_zhuyin -> Ojs.string_to_js "zhuyin"))
        let (get_ignorePunctuation : 'tags this -> bool option) =
          fun (x4275 : 'tags this) ->
            Ojs.option_of_js Ojs.bool_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x4275)
                 "ignorePunctuation")
        let (set_ignorePunctuation :
          'tags this -> [ `Undefined of undefined  | `U1 of bool ] -> unit) =
          fun (x4278 : 'tags this) ->
            fun (x4279 : [ `Undefined of undefined  | `U1 of bool ]) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x4278)
                "ignorePunctuation"
                (match x4279 with
                 | `Undefined x4280 -> undefined_to_js x4280
                 | `U1 x4281 -> Ojs.bool_to_js x4281)
        let (create :
          ?usage:[ `L_s116_search  | `L_s125_sort ] ->
            ?localeMatcher:[ `L_s26_best_fit  | `L_s81_lookup ] ->
              ?numeric:bool ->
                ?caseFirst:[ `L_s139_upper  | `L_s58_false  | `L_s82_lower ]
                  ->
                  ?sensitivity:[ `L_s140_variant  | `L_s21_accent 
                               | `L_s24_base  | `L_s30_case ]
                    ->
                    ?collation:[ `L_s105_phonebk  | `L_s106_phonetic 
                               | `L_s107_pinyin  | `L_s111_reformed 
                               | `L_s117_searchjl  | `L_s129_stroke 
                               | `L_s134_trad  | `L_s136_unihan 
                               | `L_s148_zhuyin  | `L_s27_big5han 
                               | `L_s34_compat  | `L_s44_dict 
                               | `L_s45_direct  | `L_s47_ducet 
                               | `L_s49_emoji  | `L_s52_eor 
                               | `L_s64_gb2312 ]
                      -> ?ignorePunctuation:bool -> unit -> t)
          =
          fun ?usage:(x4283 : [ `L_s116_search  | `L_s125_sort ] option) ->
            fun
              ?localeMatcher:(x4284 :
                               [ `L_s26_best_fit  | `L_s81_lookup ] option)
              ->
              fun ?numeric:(x4285 : bool option) ->
                fun
                  ?caseFirst:(x4286 :
                               [ `L_s139_upper  | `L_s58_false 
                               | `L_s82_lower ] option)
                  ->
                  fun
                    ?sensitivity:(x4287 :
                                   [ `L_s140_variant  | `L_s21_accent 
                                   | `L_s24_base  | `L_s30_case ] option)
                    ->
                    fun
                      ?collation:(x4288 :
                                   [ `L_s105_phonebk  | `L_s106_phonetic 
                                   | `L_s107_pinyin  | `L_s111_reformed 
                                   | `L_s117_searchjl  | `L_s129_stroke 
                                   | `L_s134_trad  | `L_s136_unihan 
                                   | `L_s148_zhuyin  | `L_s27_big5han 
                                   | `L_s34_compat  | `L_s44_dict 
                                   | `L_s45_direct  | `L_s47_ducet 
                                   | `L_s49_emoji  | `L_s52_eor 
                                   | `L_s64_gb2312 ] option)
                      ->
                      fun ?ignorePunctuation:(x4289 : bool option) ->
                        fun () ->
                          let x4290 = Ojs.empty_obj () in
                          (match x4283 with
                           | Some x4297 ->
                               Ojs.set_prop_ascii x4290 "usage"
                                 (match x4297 with
                                  | `L_s116_search ->
                                      Ojs.string_to_js "search"
                                  | `L_s125_sort -> Ojs.string_to_js "sort")
                           | None -> ());
                          (match x4284 with
                           | Some x4296 ->
                               Ojs.set_prop_ascii x4290 "localeMatcher"
                                 (match x4296 with
                                  | `L_s26_best_fit ->
                                      Ojs.string_to_js "best fit"
                                  | `L_s81_lookup ->
                                      Ojs.string_to_js "lookup")
                           | None -> ());
                          (match x4285 with
                           | Some x4295 ->
                               Ojs.set_prop_ascii x4290 "numeric"
                                 (Ojs.bool_to_js x4295)
                           | None -> ());
                          (match x4286 with
                           | Some x4294 ->
                               Ojs.set_prop_ascii x4290 "caseFirst"
                                 (match x4294 with
                                  | `L_s139_upper -> Ojs.string_to_js "upper"
                                  | `L_s58_false -> Ojs.string_to_js "false"
                                  | `L_s82_lower -> Ojs.string_to_js "lower")
                           | None -> ());
                          (match x4287 with
                           | Some x4293 ->
                               Ojs.set_prop_ascii x4290 "sensitivity"
                                 (match x4293 with
                                  | `L_s140_variant ->
                                      Ojs.string_to_js "variant"
                                  | `L_s21_accent ->
                                      Ojs.string_to_js "accent"
                                  | `L_s24_base -> Ojs.string_to_js "base"
                                  | `L_s30_case -> Ojs.string_to_js "case")
                           | None -> ());
                          (match x4288 with
                           | Some x4292 ->
                               Ojs.set_prop_ascii x4290 "collation"
                                 (match x4292 with
                                  | `L_s105_phonebk ->
                                      Ojs.string_to_js "phonebk"
                                  | `L_s106_phonetic ->
                                      Ojs.string_to_js "phonetic"
                                  | `L_s107_pinyin ->
                                      Ojs.string_to_js "pinyin"
                                  | `L_s111_reformed ->
                                      Ojs.string_to_js "reformed"
                                  | `L_s117_searchjl ->
                                      Ojs.string_to_js "searchjl"
                                  | `L_s129_stroke ->
                                      Ojs.string_to_js "stroke"
                                  | `L_s134_trad -> Ojs.string_to_js "trad"
                                  | `L_s136_unihan ->
                                      Ojs.string_to_js "unihan"
                                  | `L_s148_zhuyin ->
                                      Ojs.string_to_js "zhuyin"
                                  | `L_s27_big5han ->
                                      Ojs.string_to_js "big5han"
                                  | `L_s34_compat ->
                                      Ojs.string_to_js "compat"
                                  | `L_s44_dict -> Ojs.string_to_js "dict"
                                  | `L_s45_direct ->
                                      Ojs.string_to_js "direct"
                                  | `L_s47_ducet -> Ojs.string_to_js "ducet"
                                  | `L_s49_emoji -> Ojs.string_to_js "emoji"
                                  | `L_s52_eor -> Ojs.string_to_js "eor"
                                  | `L_s64_gb2312 ->
                                      Ojs.string_to_js "gb2312")
                           | None -> ());
                          (match x4289 with
                           | Some x4291 ->
                               Ojs.set_prop_ascii x4290 "ignorePunctuation"
                                 (Ojs.bool_to_js x4291)
                           | None -> ());
                          t_of_js x4290
        let cast_from = Obj.magic
      end
    module Collator =
      struct
        type t = [ `Intl_Collator ] intf
        let rec t_of_js : Ojs.t -> t = Obj.magic
        and t_to_js : t -> Ojs.t = Obj.magic
        type tags = [ `Intl_Collator ]
        type 'tags this = 'tags intf constraint 'tags = [> `Intl_Collator ]
        let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
          =
          fun (type __tags) ->
            fun (__tags_of_js : Ojs.t -> __tags) ->
              fun (x4300 : Ojs.t) -> intf_of_js __tags_of_js x4300
        and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
          fun (type __tags) ->
            fun (__tags_to_js : __tags -> Ojs.t) ->
              fun (x4298 : __tags intf) -> intf_to_js __tags_to_js x4298
        let (compare : 'tags this -> x:string -> y:string -> float) =
          fun (x4304 : 'tags this) ->
            fun ~x:(x4302 : string) ->
              fun ~y:(x4303 : string) ->
                Ojs.float_of_js
                  (Ojs.call (this_to_js Obj.magic x4304) "compare"
                     [|(Ojs.string_to_js x4302);(Ojs.string_to_js x4303)|])
        let (resolvedOptions : 'tags this -> ResolvedCollatorOptions.t) =
          fun (x4306 : 'tags this) ->
            ResolvedCollatorOptions.t_of_js
              (Ojs.call (this_to_js Obj.magic x4306) "resolvedOptions" [||])
        let cast_from = Obj.magic
        let (create :
          ?locales:[ `U1 of string  | `U2 of string list ] ->
            ?options:CollatorOptions.t -> unit -> t)
          =
          fun
            ?locales:(x4308 : [ `U1 of string  | `U2 of string list ] option)
            ->
            fun ?options:(x4309 : CollatorOptions.t option) ->
              fun () ->
                t_of_js
                  (Ojs.new_obj_arr
                     (Ojs.get_prop_ascii
                        (Ojs.get_prop_ascii Ojs.global "Intl") "Collator")
                     (let x4310 =
                        Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                          [||] in
                      (match x4308 with
                       | Some x4312 ->
                           ignore
                             (Ojs.call x4310 "push"
                                [|((match x4312 with
                                    | `U1 x4313 -> Ojs.string_to_js x4313
                                    | `U2 x4314 ->
                                        Ojs.list_to_js Ojs.string_to_js x4314))|])
                       | None -> ());
                      (match x4309 with
                       | Some x4311 ->
                           ignore
                             (Ojs.call x4310 "push"
                                [|(CollatorOptions.t_to_js x4311)|])
                       | None -> ());
                      x4310))
        let (invoke :
          ?locales:[ `U1 of string  | `U2 of string list ] ->
            ?options:CollatorOptions.t -> unit -> t)
          =
          fun
            ?locales:(x4316 : [ `U1 of string  | `U2 of string list ] option)
            ->
            fun ?options:(x4317 : CollatorOptions.t option) ->
              fun () ->
                t_of_js
                  (Ojs.call
                     (Ojs.get_prop_ascii
                        (Ojs.get_prop_ascii Ojs.global "Intl") "Collator")
                     "apply"
                     [|Ojs.null;((let x4318 =
                                    Ojs.new_obj
                                      (Ojs.get_prop_ascii Ojs.global "Array")
                                      [||] in
                                  (match x4316 with
                                   | Some x4320 ->
                                       ignore
                                         (Ojs.call x4318 "push"
                                            [|((match x4320 with
                                                | `U1 x4321 ->
                                                    Ojs.string_to_js x4321
                                                | `U2 x4322 ->
                                                    Ojs.list_to_js
                                                      Ojs.string_to_js x4322))|])
                                   | None -> ());
                                  (match x4317 with
                                   | Some x4319 ->
                                       ignore
                                         (Ojs.call x4318 "push"
                                            [|(CollatorOptions.t_to_js x4319)|])
                                   | None -> ());
                                  x4318))|])
        let (supportedLocalesOf :
          locales:[ `U1 of string  | `U2 of string list ] ->
            ?options:CollatorOptions.t -> unit -> string list)
          =
          fun ~locales:(x4324 : [ `U1 of string  | `U2 of string list ]) ->
            fun ?options:(x4325 : CollatorOptions.t option) ->
              fun () ->
                Ojs.list_of_js Ojs.string_of_js
                  (let x4331 =
                     Ojs.get_prop_ascii
                       (Ojs.get_prop_ascii Ojs.global "Intl") "Collator" in
                   Ojs.call (Ojs.get_prop_ascii x4331 "supportedLocalesOf")
                     "apply"
                     [|x4331;((let x4326 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x4326 "push"
                                    [|((match x4324 with
                                        | `U1 x4328 -> Ojs.string_to_js x4328
                                        | `U2 x4329 ->
                                            Ojs.list_to_js Ojs.string_to_js
                                              x4329))|]);
                               (match x4325 with
                                | Some x4327 ->
                                    ignore
                                      (Ojs.call x4326 "push"
                                         [|(CollatorOptions.t_to_js x4327)|])
                                | None -> ());
                               x4326))|])
      end
    let (supportedValuesOf :
      [ `L_s131_timeZone  | `L_s137_unit  | `L_s28_calendar 
      | `L_s32_collation  | `L_s36_currency  | `L_s97_numberingSystem ] ->
        string list)
      =
      fun
        (x4333 :
          [ `L_s131_timeZone  | `L_s137_unit  | `L_s28_calendar 
          | `L_s32_collation  | `L_s36_currency  | `L_s97_numberingSystem ])
        ->
        Ojs.list_of_js Ojs.string_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Intl")
             "supportedValuesOf"
             [|((match x4333 with
                 | `L_s131_timeZone -> Ojs.string_to_js "timeZone"
                 | `L_s137_unit -> Ojs.string_to_js "unit"
                 | `L_s28_calendar -> Ojs.string_to_js "calendar"
                 | `L_s32_collation -> Ojs.string_to_js "collation"
                 | `L_s36_currency -> Ojs.string_to_js "currency"
                 | `L_s97_numberingSystem ->
                     Ojs.string_to_js "numberingSystem"))|])
  end
module String =
  struct
    module AnonymousInterface31 =
      struct
        type t = Ojs.t
        let rec t_of_js : Ojs.t -> t = fun (x4336 : Ojs.t) -> x4336
        and t_to_js : t -> Ojs.t = fun (x4335 : Ojs.t) -> x4335
      end
    module AnonymousInterface30 =
      struct
        type t = Ojs.t
        let rec t_of_js : Ojs.t -> t = fun (x4338 : Ojs.t) -> x4338
        and t_to_js : t -> Ojs.t = fun (x4337 : Ojs.t) -> x4337
      end
    module AnonymousInterface29 =
      struct
        type t = Ojs.t
        let rec t_of_js : Ojs.t -> t = fun (x4340 : Ojs.t) -> x4340
        and t_to_js : t -> Ojs.t = fun (x4339 : Ojs.t) -> x4339
      end
    module AnonymousInterface28 =
      struct
        type t = Ojs.t
        let rec t_of_js : Ojs.t -> t = fun (x4342 : Ojs.t) -> x4342
        and t_to_js : t -> Ojs.t = fun (x4341 : Ojs.t) -> x4341
      end
    module AnonymousInterface27 =
      struct
        type t = Ojs.t
        let rec t_of_js : Ojs.t -> t = fun (x4344 : Ojs.t) -> x4344
        and t_to_js : t -> Ojs.t = fun (x4343 : Ojs.t) -> x4343
      end
    module AnonymousInterface10 =
      struct
        type t = Ojs.t
        let rec t_of_js : Ojs.t -> t = fun (x4346 : Ojs.t) -> x4346
        and t_to_js : t -> Ojs.t = fun (x4345 : Ojs.t) -> x4345
        let (get_raw : t -> (string ArrayLike.t, string list) union2) =
          fun (x4347 : t) ->
            union2_of_js
              (fun (x4348 : Ojs.t) ->
                 ArrayLike.t_of_js Ojs.string_of_js x4348)
              (fun (x4350 : Ojs.t) -> Ojs.list_of_js Ojs.string_of_js x4350)
              (Ojs.get_prop_ascii (t_to_js x4347) "raw")
        let (set_raw :
          t -> [ `U1 of string list  | `U2 of string ArrayLike.t ] -> unit) =
          fun (x4352 : t) ->
            fun (x4353 : [ `U1 of string list  | `U2 of string ArrayLike.t ])
              ->
              Ojs.set_prop_ascii (t_to_js x4352) "raw"
                (match x4353 with
                 | `U1 x4354 -> Ojs.list_to_js Ojs.string_to_js x4354
                 | `U2 x4356 -> ArrayLike.t_to_js Ojs.string_to_js x4356)
        let (create :
          raw:(string ArrayLike.t, string list) union2 -> unit -> t) =
          fun ~raw:(x4358 : (string ArrayLike.t, string list) union2) ->
            fun () ->
              let x4359 = Ojs.empty_obj () in
              Ojs.set_prop_ascii x4359 "raw"
                (union2_to_js
                   (fun (x4360 : string ArrayLike.t) ->
                      ArrayLike.t_to_js Ojs.string_to_js x4360)
                   (fun (x4362 : string list) ->
                      Ojs.list_to_js Ojs.string_to_js x4362) x4358);
              t_of_js x4359
      end
    type t = [ `String ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type tags = [ `String ]
    type 'tags this = 'tags intf constraint 'tags = [> `String ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x4366 : Ojs.t) -> intf_of_js __tags_of_js x4366
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x4364 : __tags intf) -> intf_to_js __tags_to_js x4364
    let (at : 'tags this -> index:float -> string option) =
      fun (x4369 : 'tags this) ->
        fun ~index:(x4368 : float) ->
          Ojs.option_of_js Ojs.string_of_js
            (Ojs.call (this_to_js Obj.magic x4369) "at"
               [|(Ojs.float_to_js x4368)|])
    let (replaceAll :
      'tags this ->
        searchValue:[ `U1 of string  | `U2 of RegExp.t ] ->
          replaceValue:string -> string)
      =
      fun (x4376 : 'tags this) ->
        fun ~searchValue:(x4372 : [ `U1 of string  | `U2 of RegExp.t ]) ->
          fun ~replaceValue:(x4375 : string) ->
            Ojs.string_of_js
              (Ojs.call (this_to_js Obj.magic x4376) "replaceAll"
                 [|((match x4372 with
                     | `U1 x4373 -> Ojs.string_to_js x4373
                     | `U2 x4374 -> RegExp.t_to_js x4374));(Ojs.string_to_js
                                                              x4375)|])
    let (replaceAll' :
      'tags this ->
        searchValue:[ `U1 of string  | `U2 of RegExp.t ] ->
          replacer:(substring:string -> args:any list -> string) -> string)
      =
      fun (x4384 : 'tags this) ->
        fun ~searchValue:(x4378 : [ `U1 of string  | `U2 of RegExp.t ]) ->
          fun ~replacer:(x4381 : substring:string -> args:any list -> string)
            ->
            Ojs.string_of_js
              (Ojs.call (this_to_js Obj.magic x4384) "replaceAll"
                 [|((match x4378 with
                     | `U1 x4379 -> Ojs.string_to_js x4379
                     | `U2 x4380 -> RegExp.t_to_js x4380));(Ojs.fun_to_js_args
                                                              (fun
                                                                 (x4382 : _)
                                                                 ->
                                                                 Ojs.string_to_js
                                                                   (x4381
                                                                    ~substring:(
                                                                    Ojs.string_of_js
                                                                    (Ojs.array_get
                                                                    x4382 0))
                                                                    ~args:(
                                                                    Ojs.list_of_js_from
                                                                    any_of_js
                                                                    x4382 1))))|])
    let (matchAll :
      'tags this -> regexp:RegExp.t -> RegExpMatchArray.t IterableIterator.t)
      =
      fun (x4387 : 'tags this) ->
        fun ~regexp:(x4386 : RegExp.t) ->
          IterableIterator.t_of_js RegExpMatchArray.t_of_js
            (Ojs.call (this_to_js Obj.magic x4387) "matchAll"
               [|(RegExp.t_to_js x4386)|])
    let (trimEnd : 'tags this -> string) =
      fun (x4390 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x4390) "trimEnd" [||])
    let (trimStart : 'tags this -> string) =
      fun (x4392 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x4392) "trimStart" [||])
    let (trimLeft : 'tags this -> string) =
      fun (x4394 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x4394) "trimLeft" [||])
    let (trimRight : 'tags this -> string) =
      fun (x4396 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x4396) "trimRight" [||])
    let (padStart :
      'tags this -> maxLength:float -> ?fillString:string -> unit -> string)
      =
      fun (x4402 : 'tags this) ->
        fun ~maxLength:(x4398 : float) ->
          fun ?fillString:(x4399 : string option) ->
            fun () ->
              Ojs.string_of_js
                (let x4404 = this_to_js Obj.magic x4402 in
                 Ojs.call (Ojs.get_prop_ascii x4404 "padStart") "apply"
                   [|x4404;((let x4400 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x4400 "push"
                                  [|(Ojs.float_to_js x4398)|]);
                             (match x4399 with
                              | Some x4401 ->
                                  ignore
                                    (Ojs.call x4400 "push"
                                       [|(Ojs.string_to_js x4401)|])
                              | None -> ());
                             x4400))|])
    let (padEnd :
      'tags this -> maxLength:float -> ?fillString:string -> unit -> string)
      =
      fun (x4409 : 'tags this) ->
        fun ~maxLength:(x4405 : float) ->
          fun ?fillString:(x4406 : string option) ->
            fun () ->
              Ojs.string_of_js
                (let x4411 = this_to_js Obj.magic x4409 in
                 Ojs.call (Ojs.get_prop_ascii x4411 "padEnd") "apply"
                   [|x4411;((let x4407 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x4407 "push"
                                  [|(Ojs.float_to_js x4405)|]);
                             (match x4406 with
                              | Some x4408 ->
                                  ignore
                                    (Ojs.call x4407 "push"
                                       [|(Ojs.string_to_js x4408)|])
                              | None -> ());
                             x4407))|])
    let (match_ :
      'tags this ->
        matcher:AnonymousInterface27.t -> RegExpMatchArray.t option)
      =
      fun (x4413 : 'tags this) ->
        fun ~matcher:(x4412 : AnonymousInterface27.t) ->
          Ojs.option_of_js RegExpMatchArray.t_of_js
            (Ojs.call (this_to_js Obj.magic x4413) "match"
               [|(AnonymousInterface27.t_to_js x4412)|])
    let (replace :
      'tags this ->
        searchValue:AnonymousInterface28.t -> replaceValue:string -> string)
      =
      fun (x4418 : 'tags this) ->
        fun ~searchValue:(x4416 : AnonymousInterface28.t) ->
          fun ~replaceValue:(x4417 : string) ->
            Ojs.string_of_js
              (Ojs.call (this_to_js Obj.magic x4418) "replace"
                 [|(AnonymousInterface28.t_to_js x4416);(Ojs.string_to_js
                                                           x4417)|])
    let (replace' :
      'tags this ->
        searchValue:AnonymousInterface29.t ->
          replacer:(substring:string -> args:any list -> string) -> string)
      =
      fun (x4424 : 'tags this) ->
        fun ~searchValue:(x4420 : AnonymousInterface29.t) ->
          fun ~replacer:(x4421 : substring:string -> args:any list -> string)
            ->
            Ojs.string_of_js
              (Ojs.call (this_to_js Obj.magic x4424) "replace"
                 [|(AnonymousInterface29.t_to_js x4420);(Ojs.fun_to_js_args
                                                           (fun (x4422 : _)
                                                              ->
                                                              Ojs.string_to_js
                                                                (x4421
                                                                   ~substring:(
                                                                   Ojs.string_of_js
                                                                    (Ojs.array_get
                                                                    x4422 0))
                                                                   ~args:(
                                                                   Ojs.list_of_js_from
                                                                    any_of_js
                                                                    x4422 1))))|])
    let (search : 'tags this -> searcher:AnonymousInterface30.t -> float) =
      fun (x4427 : 'tags this) ->
        fun ~searcher:(x4426 : AnonymousInterface30.t) ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x4427) "search"
               [|(AnonymousInterface30.t_to_js x4426)|])
    let (split :
      'tags this ->
        splitter:AnonymousInterface31.t ->
          ?limit:float -> unit -> string list)
      =
      fun (x4433 : 'tags this) ->
        fun ~splitter:(x4429 : AnonymousInterface31.t) ->
          fun ?limit:(x4430 : float option) ->
            fun () ->
              Ojs.list_of_js Ojs.string_of_js
                (let x4435 = this_to_js Obj.magic x4433 in
                 Ojs.call (Ojs.get_prop_ascii x4435 "split") "apply"
                   [|x4435;((let x4431 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x4431 "push"
                                  [|(AnonymousInterface31.t_to_js x4429)|]);
                             (match x4430 with
                              | Some x4432 ->
                                  ignore
                                    (Ojs.call x4431 "push"
                                       [|(Ojs.float_to_js x4432)|])
                              | None -> ());
                             x4431))|])
    let (codePointAt : 'tags this -> pos:float -> float option) =
      fun (x4438 : 'tags this) ->
        fun ~pos:(x4437 : float) ->
          Ojs.option_of_js Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x4438) "codePointAt"
               [|(Ojs.float_to_js x4437)|])
    let (includes :
      'tags this -> searchString:string -> ?position:float -> unit -> bool) =
      fun (x4445 : 'tags this) ->
        fun ~searchString:(x4441 : string) ->
          fun ?position:(x4442 : float option) ->
            fun () ->
              Ojs.bool_of_js
                (let x4447 = this_to_js Obj.magic x4445 in
                 Ojs.call (Ojs.get_prop_ascii x4447 "includes") "apply"
                   [|x4447;((let x4443 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x4443 "push"
                                  [|(Ojs.string_to_js x4441)|]);
                             (match x4442 with
                              | Some x4444 ->
                                  ignore
                                    (Ojs.call x4443 "push"
                                       [|(Ojs.float_to_js x4444)|])
                              | None -> ());
                             x4443))|])
    let (endsWith :
      'tags this -> searchString:string -> ?endPosition:float -> unit -> bool)
      =
      fun (x4452 : 'tags this) ->
        fun ~searchString:(x4448 : string) ->
          fun ?endPosition:(x4449 : float option) ->
            fun () ->
              Ojs.bool_of_js
                (let x4454 = this_to_js Obj.magic x4452 in
                 Ojs.call (Ojs.get_prop_ascii x4454 "endsWith") "apply"
                   [|x4454;((let x4450 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x4450 "push"
                                  [|(Ojs.string_to_js x4448)|]);
                             (match x4449 with
                              | Some x4451 ->
                                  ignore
                                    (Ojs.call x4450 "push"
                                       [|(Ojs.float_to_js x4451)|])
                              | None -> ());
                             x4450))|])
    let (normalize :
      'tags this ->
        form:[ `U1 of [ `L_s11_NFC ]  | `U2 of [ `L_s12_NFD ] 
             | `U3 of [ `L_s13_NFKC ]  | `U4 of [ `L_s14_NFKD ] ]
          -> string)
      =
      fun (x4460 : 'tags this) ->
        fun
          ~form:(x4455 :
                  [ `U1 of [ `L_s11_NFC ]  | `U2 of [ `L_s12_NFD ] 
                  | `U3 of [ `L_s13_NFKC ]  | `U4 of [ `L_s14_NFKD ] ])
          ->
          Ojs.string_of_js
            (Ojs.call (this_to_js Obj.magic x4460) "normalize"
               [|((match x4455 with
                   | `U1 x4456 ->
                       (match x4456 with
                        | `L_s11_NFC -> Ojs.string_to_js "NFC")
                   | `U2 x4457 ->
                       (match x4457 with
                        | `L_s12_NFD -> Ojs.string_to_js "NFD")
                   | `U3 x4458 ->
                       (match x4458 with
                        | `L_s13_NFKC -> Ojs.string_to_js "NFKC")
                   | `U4 x4459 ->
                       (match x4459 with
                        | `L_s14_NFKD -> Ojs.string_to_js "NFKD")))|])
    let (normalize' : 'tags this -> ?form:string -> unit -> string) =
      fun (x4465 : 'tags this) ->
        fun ?form:(x4462 : string option) ->
          fun () ->
            Ojs.string_of_js
              (let x4467 = this_to_js Obj.magic x4465 in
               Ojs.call (Ojs.get_prop_ascii x4467 "normalize") "apply"
                 [|x4467;((let x4463 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x4462 with
                            | Some x4464 ->
                                ignore
                                  (Ojs.call x4463 "push"
                                     [|(Ojs.string_to_js x4464)|])
                            | None -> ());
                           x4463))|])
    let (repeat : 'tags this -> count:float -> string) =
      fun (x4469 : 'tags this) ->
        fun ~count:(x4468 : float) ->
          Ojs.string_of_js
            (Ojs.call (this_to_js Obj.magic x4469) "repeat"
               [|(Ojs.float_to_js x4468)|])
    let (startsWith :
      'tags this -> searchString:string -> ?position:float -> unit -> bool) =
      fun (x4475 : 'tags this) ->
        fun ~searchString:(x4471 : string) ->
          fun ?position:(x4472 : float option) ->
            fun () ->
              Ojs.bool_of_js
                (let x4477 = this_to_js Obj.magic x4475 in
                 Ojs.call (Ojs.get_prop_ascii x4477 "startsWith") "apply"
                   [|x4477;((let x4473 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x4473 "push"
                                  [|(Ojs.string_to_js x4471)|]);
                             (match x4472 with
                              | Some x4474 ->
                                  ignore
                                    (Ojs.call x4473 "push"
                                       [|(Ojs.float_to_js x4474)|])
                              | None -> ());
                             x4473))|])
    let (anchor : 'tags this -> name:string -> string) =
      fun (x4479 : 'tags this) ->
        fun ~name:(x4478 : string) ->
          Ojs.string_of_js
            (Ojs.call (this_to_js Obj.magic x4479) "anchor"
               [|(Ojs.string_to_js x4478)|])
    let (big : 'tags this -> string) =
      fun (x4481 : 'tags this) ->
        Ojs.string_of_js (Ojs.call (this_to_js Obj.magic x4481) "big" [||])
    let (blink : 'tags this -> string) =
      fun (x4483 : 'tags this) ->
        Ojs.string_of_js (Ojs.call (this_to_js Obj.magic x4483) "blink" [||])
    let (bold : 'tags this -> string) =
      fun (x4485 : 'tags this) ->
        Ojs.string_of_js (Ojs.call (this_to_js Obj.magic x4485) "bold" [||])
    let (fixed : 'tags this -> string) =
      fun (x4487 : 'tags this) ->
        Ojs.string_of_js (Ojs.call (this_to_js Obj.magic x4487) "fixed" [||])
    let (fontcolor : 'tags this -> color:string -> string) =
      fun (x4490 : 'tags this) ->
        fun ~color:(x4489 : string) ->
          Ojs.string_of_js
            (Ojs.call (this_to_js Obj.magic x4490) "fontcolor"
               [|(Ojs.string_to_js x4489)|])
    let (fontsize : 'tags this -> size:float -> string) =
      fun (x4493 : 'tags this) ->
        fun ~size:(x4492 : float) ->
          Ojs.string_of_js
            (Ojs.call (this_to_js Obj.magic x4493) "fontsize"
               [|(Ojs.float_to_js x4492)|])
    let (fontsize' : 'tags this -> size:string -> string) =
      fun (x4496 : 'tags this) ->
        fun ~size:(x4495 : string) ->
          Ojs.string_of_js
            (Ojs.call (this_to_js Obj.magic x4496) "fontsize"
               [|(Ojs.string_to_js x4495)|])
    let (italics : 'tags this -> string) =
      fun (x4498 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x4498) "italics" [||])
    let (link : 'tags this -> url:string -> string) =
      fun (x4501 : 'tags this) ->
        fun ~url:(x4500 : string) ->
          Ojs.string_of_js
            (Ojs.call (this_to_js Obj.magic x4501) "link"
               [|(Ojs.string_to_js x4500)|])
    let (small : 'tags this -> string) =
      fun (x4503 : 'tags this) ->
        Ojs.string_of_js (Ojs.call (this_to_js Obj.magic x4503) "small" [||])
    let (strike : 'tags this -> string) =
      fun (x4505 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x4505) "strike" [||])
    let (sub : 'tags this -> string) =
      fun (x4507 : 'tags this) ->
        Ojs.string_of_js (Ojs.call (this_to_js Obj.magic x4507) "sub" [||])
    let (sup : 'tags this -> string) =
      fun (x4509 : 'tags this) ->
        Ojs.string_of_js (Ojs.call (this_to_js Obj.magic x4509) "sup" [||])
    let (localeCompare :
      'tags this ->
        that:string ->
          ?locales:[ `U1 of string  | `U2 of string list ] ->
            ?options:Intl.CollatorOptions.t -> unit -> float)
      =
      fun (x4520 : 'tags this) ->
        fun ~that:(x4511 : string) ->
          fun
            ?locales:(x4512 : [ `U1 of string  | `U2 of string list ] option)
            ->
            fun ?options:(x4513 : Intl.CollatorOptions.t option) ->
              fun () ->
                Ojs.float_of_js
                  (let x4522 = this_to_js Obj.magic x4520 in
                   Ojs.call (Ojs.get_prop_ascii x4522 "localeCompare")
                     "apply"
                     [|x4522;((let x4514 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x4514 "push"
                                    [|(Ojs.string_to_js x4511)|]);
                               (match x4512 with
                                | Some x4516 ->
                                    ignore
                                      (Ojs.call x4514 "push"
                                         [|((match x4516 with
                                             | `U1 x4517 ->
                                                 Ojs.string_to_js x4517
                                             | `U2 x4518 ->
                                                 Ojs.list_to_js
                                                   Ojs.string_to_js x4518))|])
                                | None -> ());
                               (match x4513 with
                                | Some x4515 ->
                                    ignore
                                      (Ojs.call x4514 "push"
                                         [|(Intl.CollatorOptions.t_to_js
                                              x4515)|])
                                | None -> ());
                               x4514))|])
    let (toString : 'tags this -> string) =
      fun (x4523 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x4523) "toString" [||])
    let (charAt : 'tags this -> pos:float -> string) =
      fun (x4526 : 'tags this) ->
        fun ~pos:(x4525 : float) ->
          Ojs.string_of_js
            (Ojs.call (this_to_js Obj.magic x4526) "charAt"
               [|(Ojs.float_to_js x4525)|])
    let (charCodeAt : 'tags this -> index:float -> float) =
      fun (x4529 : 'tags this) ->
        fun ~index:(x4528 : float) ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x4529) "charCodeAt"
               [|(Ojs.float_to_js x4528)|])
    let (concat : 'tags this -> strings:string list -> string) =
      fun (x4534 : 'tags this) ->
        fun ~strings:(x4531 : string list) ->
          Ojs.string_of_js
            (let x4536 = this_to_js Obj.magic x4534 in
             Ojs.call (Ojs.get_prop_ascii x4536 "concat") "apply"
               [|x4536;((let x4532 =
                           Ojs.new_obj
                             (Ojs.get_prop_ascii Ojs.global "Array") 
                             [||] in
                         List.iter
                           (fun (x4533 : string) ->
                              ignore
                                (Ojs.call x4532 "push"
                                   [|(Ojs.string_to_js x4533)|])) x4531;
                         x4532))|])
    let (indexOf :
      'tags this -> searchString:string -> ?position:float -> unit -> float)
      =
      fun (x4541 : 'tags this) ->
        fun ~searchString:(x4537 : string) ->
          fun ?position:(x4538 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x4543 = this_to_js Obj.magic x4541 in
                 Ojs.call (Ojs.get_prop_ascii x4543 "indexOf") "apply"
                   [|x4543;((let x4539 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x4539 "push"
                                  [|(Ojs.string_to_js x4537)|]);
                             (match x4538 with
                              | Some x4540 ->
                                  ignore
                                    (Ojs.call x4539 "push"
                                       [|(Ojs.float_to_js x4540)|])
                              | None -> ());
                             x4539))|])
    let (lastIndexOf :
      'tags this -> searchString:string -> ?position:float -> unit -> float)
      =
      fun (x4548 : 'tags this) ->
        fun ~searchString:(x4544 : string) ->
          fun ?position:(x4545 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x4550 = this_to_js Obj.magic x4548 in
                 Ojs.call (Ojs.get_prop_ascii x4550 "lastIndexOf") "apply"
                   [|x4550;((let x4546 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x4546 "push"
                                  [|(Ojs.string_to_js x4544)|]);
                             (match x4545 with
                              | Some x4547 ->
                                  ignore
                                    (Ojs.call x4546 "push"
                                       [|(Ojs.float_to_js x4547)|])
                              | None -> ());
                             x4546))|])
    let (localeCompare' : 'tags this -> that:string -> float) =
      fun (x4552 : 'tags this) ->
        fun ~that:(x4551 : string) ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x4552) "localeCompare"
               [|(Ojs.string_to_js x4551)|])
    let (match_' :
      'tags this ->
        regexp:[ `U1 of string  | `U2 of RegExp.t ] ->
          RegExpMatchArray.t option)
      =
      fun (x4557 : 'tags this) ->
        fun ~regexp:(x4554 : [ `U1 of string  | `U2 of RegExp.t ]) ->
          Ojs.option_of_js RegExpMatchArray.t_of_js
            (Ojs.call (this_to_js Obj.magic x4557) "match"
               [|((match x4554 with
                   | `U1 x4555 -> Ojs.string_to_js x4555
                   | `U2 x4556 -> RegExp.t_to_js x4556))|])
    let (replace'' :
      'tags this ->
        searchValue:[ `U1 of string  | `U2 of RegExp.t ] ->
          replaceValue:string -> string)
      =
      fun (x4564 : 'tags this) ->
        fun ~searchValue:(x4560 : [ `U1 of string  | `U2 of RegExp.t ]) ->
          fun ~replaceValue:(x4563 : string) ->
            Ojs.string_of_js
              (Ojs.call (this_to_js Obj.magic x4564) "replace"
                 [|((match x4560 with
                     | `U1 x4561 -> Ojs.string_to_js x4561
                     | `U2 x4562 -> RegExp.t_to_js x4562));(Ojs.string_to_js
                                                              x4563)|])
    let (replace''' :
      'tags this ->
        searchValue:[ `U1 of string  | `U2 of RegExp.t ] ->
          replacer:(substring:string -> args:any list -> string) -> string)
      =
      fun (x4572 : 'tags this) ->
        fun ~searchValue:(x4566 : [ `U1 of string  | `U2 of RegExp.t ]) ->
          fun ~replacer:(x4569 : substring:string -> args:any list -> string)
            ->
            Ojs.string_of_js
              (Ojs.call (this_to_js Obj.magic x4572) "replace"
                 [|((match x4566 with
                     | `U1 x4567 -> Ojs.string_to_js x4567
                     | `U2 x4568 -> RegExp.t_to_js x4568));(Ojs.fun_to_js_args
                                                              (fun
                                                                 (x4570 : _)
                                                                 ->
                                                                 Ojs.string_to_js
                                                                   (x4569
                                                                    ~substring:(
                                                                    Ojs.string_of_js
                                                                    (Ojs.array_get
                                                                    x4570 0))
                                                                    ~args:(
                                                                    Ojs.list_of_js_from
                                                                    any_of_js
                                                                    x4570 1))))|])
    let (search' :
      'tags this -> regexp:[ `U1 of string  | `U2 of RegExp.t ] -> float) =
      fun (x4577 : 'tags this) ->
        fun ~regexp:(x4574 : [ `U1 of string  | `U2 of RegExp.t ]) ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x4577) "search"
               [|((match x4574 with
                   | `U1 x4575 -> Ojs.string_to_js x4575
                   | `U2 x4576 -> RegExp.t_to_js x4576))|])
    let (slice : 'tags this -> ?start:float -> ?end_:float -> unit -> string)
      =
      fun (x4584 : 'tags this) ->
        fun ?start:(x4579 : float option) ->
          fun ?end_:(x4580 : float option) ->
            fun () ->
              Ojs.string_of_js
                (let x4586 = this_to_js Obj.magic x4584 in
                 Ojs.call (Ojs.get_prop_ascii x4586 "slice") "apply"
                   [|x4586;((let x4581 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x4579 with
                              | Some x4583 ->
                                  ignore
                                    (Ojs.call x4581 "push"
                                       [|(Ojs.float_to_js x4583)|])
                              | None -> ());
                             (match x4580 with
                              | Some x4582 ->
                                  ignore
                                    (Ojs.call x4581 "push"
                                       [|(Ojs.float_to_js x4582)|])
                              | None -> ());
                             x4581))|])
    let (split' :
      'tags this ->
        separator:[ `U1 of string  | `U2 of RegExp.t ] ->
          ?limit:float -> unit -> string list)
      =
      fun (x4593 : 'tags this) ->
        fun ~separator:(x4587 : [ `U1 of string  | `U2 of RegExp.t ]) ->
          fun ?limit:(x4588 : float option) ->
            fun () ->
              Ojs.list_of_js Ojs.string_of_js
                (let x4595 = this_to_js Obj.magic x4593 in
                 Ojs.call (Ojs.get_prop_ascii x4595 "split") "apply"
                   [|x4595;((let x4589 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x4589 "push"
                                  [|((match x4587 with
                                      | `U1 x4591 -> Ojs.string_to_js x4591
                                      | `U2 x4592 -> RegExp.t_to_js x4592))|]);
                             (match x4588 with
                              | Some x4590 ->
                                  ignore
                                    (Ojs.call x4589 "push"
                                       [|(Ojs.float_to_js x4590)|])
                              | None -> ());
                             x4589))|])
    let (substring :
      'tags this -> start:float -> ?end_:float -> unit -> string) =
      fun (x4601 : 'tags this) ->
        fun ~start:(x4597 : float) ->
          fun ?end_:(x4598 : float option) ->
            fun () ->
              Ojs.string_of_js
                (let x4603 = this_to_js Obj.magic x4601 in
                 Ojs.call (Ojs.get_prop_ascii x4603 "substring") "apply"
                   [|x4603;((let x4599 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x4599 "push"
                                  [|(Ojs.float_to_js x4597)|]);
                             (match x4598 with
                              | Some x4600 ->
                                  ignore
                                    (Ojs.call x4599 "push"
                                       [|(Ojs.float_to_js x4600)|])
                              | None -> ());
                             x4599))|])
    let (toLowerCase : 'tags this -> string) =
      fun (x4604 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x4604) "toLowerCase" [||])
    let (toLocaleLowerCase :
      'tags this ->
        ?locales:[ `U1 of string  | `U2 of string list ] -> unit -> string)
      =
      fun (x4612 : 'tags this) ->
        fun ?locales:(x4606 : [ `U1 of string  | `U2 of string list ] option)
          ->
          fun () ->
            Ojs.string_of_js
              (let x4614 = this_to_js Obj.magic x4612 in
               Ojs.call (Ojs.get_prop_ascii x4614 "toLocaleLowerCase")
                 "apply"
                 [|x4614;((let x4607 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x4606 with
                            | Some x4608 ->
                                ignore
                                  (Ojs.call x4607 "push"
                                     [|((match x4608 with
                                         | `U1 x4609 ->
                                             Ojs.string_to_js x4609
                                         | `U2 x4610 ->
                                             Ojs.list_to_js Ojs.string_to_js
                                               x4610))|])
                            | None -> ());
                           x4607))|])
    let (toUpperCase : 'tags this -> string) =
      fun (x4615 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x4615) "toUpperCase" [||])
    let (toLocaleUpperCase :
      'tags this ->
        ?locales:[ `U1 of string  | `U2 of string list ] -> unit -> string)
      =
      fun (x4623 : 'tags this) ->
        fun ?locales:(x4617 : [ `U1 of string  | `U2 of string list ] option)
          ->
          fun () ->
            Ojs.string_of_js
              (let x4625 = this_to_js Obj.magic x4623 in
               Ojs.call (Ojs.get_prop_ascii x4625 "toLocaleUpperCase")
                 "apply"
                 [|x4625;((let x4618 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x4617 with
                            | Some x4619 ->
                                ignore
                                  (Ojs.call x4618 "push"
                                     [|((match x4619 with
                                         | `U1 x4620 ->
                                             Ojs.string_to_js x4620
                                         | `U2 x4621 ->
                                             Ojs.list_to_js Ojs.string_to_js
                                               x4621))|])
                            | None -> ());
                           x4618))|])
    let (trim : 'tags this -> string) =
      fun (x4626 : 'tags this) ->
        Ojs.string_of_js (Ojs.call (this_to_js Obj.magic x4626) "trim" [||])
    let (get_length : 'tags this -> float) =
      fun (x4628 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x4628) "length")
    let (substr :
      'tags this -> from:float -> ?length:float -> unit -> string) =
      fun (x4634 : 'tags this) ->
        fun ~from:(x4630 : float) ->
          fun ?length:(x4631 : float option) ->
            fun () ->
              Ojs.string_of_js
                (let x4636 = this_to_js Obj.magic x4634 in
                 Ojs.call (Ojs.get_prop_ascii x4636 "substr") "apply"
                   [|x4636;((let x4632 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x4632 "push"
                                  [|(Ojs.float_to_js x4630)|]);
                             (match x4631 with
                              | Some x4633 ->
                                  ignore
                                    (Ojs.call x4632 "push"
                                       [|(Ojs.float_to_js x4633)|])
                              | None -> ());
                             x4632))|])
    let (valueOf : 'tags this -> string) =
      fun (x4637 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x4637) "valueOf" [||])
    let (get : 'tags this -> float -> string) =
      fun (x4639 : 'tags this) ->
        fun (x4641 : float) ->
          Ojs.string_of_js
            (Ojs.get_prop (this_to_js Obj.magic x4639)
               (Ojs.float_to_js x4641))
    let (fromCodePoint : float list -> string) =
      fun (x4642 : float list) ->
        Ojs.string_of_js
          (let x4645 = Ojs.get_prop_ascii Ojs.global "String" in
           Ojs.call (Ojs.get_prop_ascii x4645 "fromCodePoint") "apply"
             [|x4645;((let x4643 =
                         Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                           [||] in
                       List.iter
                         (fun (x4644 : float) ->
                            ignore
                              (Ojs.call x4643 "push"
                                 [|(Ojs.float_to_js x4644)|])) x4642;
                       x4643))|])
    let (raw :
      template:AnonymousInterface10.t -> substitutions:any list -> string) =
      fun ~template:(x4646 : AnonymousInterface10.t) ->
        fun ~substitutions:(x4647 : any list) ->
          Ojs.string_of_js
            (let x4650 = Ojs.get_prop_ascii Ojs.global "String" in
             Ojs.call (Ojs.get_prop_ascii x4650 "raw") "apply"
               [|x4650;((let x4648 =
                           Ojs.new_obj
                             (Ojs.get_prop_ascii Ojs.global "Array") 
                             [||] in
                         ignore
                           (Ojs.call x4648 "push"
                              [|(AnonymousInterface10.t_to_js x4646)|]);
                         List.iter
                           (fun (x4649 : any) ->
                              ignore
                                (Ojs.call x4648 "push" [|(any_to_js x4649)|]))
                           x4647;
                         x4648))|])
    let (create : ?value:any -> unit -> t) =
      fun ?value:(x4651 : any option) ->
        fun () ->
          t_of_js
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "String")
               (let x4652 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x4651 with
                 | Some x4653 ->
                     ignore (Ojs.call x4652 "push" [|(any_to_js x4653)|])
                 | None -> ());
                x4652))
    let (invoke : ?value:any -> unit -> string) =
      fun ?value:(x4654 : any option) ->
        fun () ->
          Ojs.string_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "String") "apply"
               [|Ojs.null;((let x4655 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x4654 with
                             | Some x4656 ->
                                 ignore
                                   (Ojs.call x4655 "push"
                                      [|(any_to_js x4656)|])
                             | None -> ());
                            x4655))|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "String")
             "prototype")
    let (fromCharCode : float list -> string) =
      fun (x4657 : float list) ->
        Ojs.string_of_js
          (let x4660 = Ojs.get_prop_ascii Ojs.global "String" in
           Ojs.call (Ojs.get_prop_ascii x4660 "fromCharCode") "apply"
             [|x4660;((let x4658 =
                         Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                           [||] in
                       List.iter
                         (fun (x4659 : float) ->
                            ignore
                              (Ojs.call x4658 "push"
                                 [|(Ojs.float_to_js x4659)|])) x4657;
                       x4658))|])
    let cast_from = Obj.magic
    let (of_ml : string -> t) =
      fun (x4661 : string) -> t_of_js (Ojs.string_to_js x4661)
    let (to_ml : t -> string) =
      fun (x4662 : t) ->
        Ojs.string_of_js (Ojs.call (t_to_js x4662) "valueOf" [||])
  end
module Set =
  struct
    type 'T t = [ `Set of 'T ] intf
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun _T -> Obj.magic
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun _T -> Obj.magic
    type 'T tags = [ `Set of 'T ]
    type ('tags, 'T) this = 'tags intf constraint 'tags = [> `Set of 'T ]
    let rec this_of_js :
      'tags 'T .
        (Ojs.t -> 'tags) -> (Ojs.t -> 'T) -> Ojs.t -> ('tags, 'T) this
      =
      fun (type __tags) ->
        fun (type __T) ->
          fun (__tags_of_js : Ojs.t -> __tags) ->
            fun (__T_of_js : Ojs.t -> __T) ->
              fun (x4665 : Ojs.t) -> intf_of_js __tags_of_js x4665
    and this_to_js :
      'tags 'T .
        ('tags -> Ojs.t) -> ('T -> Ojs.t) -> ('tags, 'T) this -> Ojs.t
      =
      fun (type __tags) ->
        fun (type __T) ->
          fun (__tags_to_js : __tags -> Ojs.t) ->
            fun (__T_to_js : __T -> Ojs.t) ->
              fun (x4663 : __tags intf) -> intf_to_js __tags_to_js x4663
    let (entries : ('tags, 'T) this -> ('T * 'T) IterableIterator.t) =
      fun (x4667 : ('tags, 'T) this) ->
        IterableIterator.t_of_js
          (fun (x4670 : Ojs.t) ->
             let x4671 = x4670 in
             ((Obj.magic (Ojs.array_get x4671 0)),
               (Obj.magic (Ojs.array_get x4671 1))))
          (Ojs.call (this_to_js Obj.magic Obj.magic x4667) "entries" [||])
    let (keys : ('tags, 'T) this -> 'T IterableIterator.t) =
      fun (x4672 : ('tags, 'T) this) ->
        IterableIterator.t_of_js Obj.magic
          (Ojs.call (this_to_js Obj.magic Obj.magic x4672) "keys" [||])
    let (values : ('tags, 'T) this -> 'T IterableIterator.t) =
      fun (x4676 : ('tags, 'T) this) ->
        IterableIterator.t_of_js Obj.magic
          (Ojs.call (this_to_js Obj.magic Obj.magic x4676) "values" [||])
    let (add : ('tags, 'T) this -> value:'T -> ('tags, 'T) this) =
      fun (x4681 : ('tags, 'T) this) ->
        fun ~value:(x4680 : 'T) ->
          this_of_js Obj.magic Obj.magic
            (Ojs.call (this_to_js Obj.magic Obj.magic x4681) "add"
               [|(Obj.magic x4680)|])
    let (clear : ('tags, 'T) this -> unit) =
      fun (x4686 : ('tags, 'T) this) ->
        ignore (Ojs.call (this_to_js Obj.magic Obj.magic x4686) "clear" [||])
    let (delete : ('tags, 'T) this -> value:'T -> bool) =
      fun (x4690 : ('tags, 'T) this) ->
        fun ~value:(x4689 : 'T) ->
          Ojs.bool_of_js
            (Ojs.call (this_to_js Obj.magic Obj.magic x4690) "delete"
               [|(Obj.magic x4689)|])
    let (forEach :
      ('tags, 'T) this ->
        callbackfn:(value:'T -> value2:'T -> set_:'T t -> unit) ->
          ?thisArg:any -> unit -> unit)
      =
      fun (x4701 : ('tags, 'T) this) ->
        fun ~callbackfn:(x4693 : value:'T -> value2:'T -> set_:'T t -> unit)
          ->
          fun ?thisArg:(x4694 : any option) ->
            fun () ->
              ignore
                (let x4704 = this_to_js Obj.magic Obj.magic x4701 in
                 Ojs.call (Ojs.get_prop_ascii x4704 "forEach") "apply"
                   [|x4704;((let x4695 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x4695 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x4697 : Ojs.t) ->
                                          fun (x4698 : Ojs.t) ->
                                            fun (x4699 : Ojs.t) ->
                                              x4693 ~value:(Obj.magic x4697)
                                                ~value2:(Obj.magic x4698)
                                                ~set_:(t_of_js Obj.magic
                                                         x4699)))|]);
                             (match x4694 with
                              | Some x4696 ->
                                  ignore
                                    (Ojs.call x4695 "push"
                                       [|(any_to_js x4696)|])
                              | None -> ());
                             x4695))|])
    let (has : ('tags, 'T) this -> value:'T -> bool) =
      fun (x4706 : ('tags, 'T) this) ->
        fun ~value:(x4705 : 'T) ->
          Ojs.bool_of_js
            (Ojs.call (this_to_js Obj.magic Obj.magic x4706) "has"
               [|(Obj.magic x4705)|])
    let (get_size : ('tags, 'T) this -> float) =
      fun (x4709 : ('tags, 'T) this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic Obj.magic x4709) "size")
    let (create : ?iterable:'T Iterable.t option -> unit -> 'T t) =
      fun ?iterable:(x4712 : 'T Iterable.t option option) ->
        fun () ->
          t_of_js Obj.magic
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "Set")
               (let x4713 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x4712 with
                 | Some x4714 ->
                     ignore
                       (Ojs.call x4713 "push"
                          [|(Ojs.option_to_js
                               (fun (x4715 : 'T Iterable.t) ->
                                  Iterable.t_to_js Obj.magic x4715) x4714)|])
                 | None -> ());
                x4713))
    let (create' : ?values:'T list option -> unit -> 'T t) =
      fun ?values:(x4718 : 'T list option option) ->
        fun () ->
          t_of_js Obj.magic
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "Set")
               (let x4719 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x4718 with
                 | Some x4720 ->
                     ignore
                       (Ojs.call x4719 "push"
                          [|(Ojs.option_to_js
                               (fun (x4721 : 'T list) ->
                                  Ojs.list_to_js Obj.magic x4721) x4720)|])
                 | None -> ());
                x4719))
    let (prototype : unit -> any t) =
      fun () ->
        t_of_js any_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Set")
             "prototype")
    let cast_from = Obj.magic
  end
module ReturnType =
  struct
    type 'T t = any
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun (type __T) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x4726 : Ojs.t) -> any_of_js x4726
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t =
      fun (type __T) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x4725 : any) -> any_to_js x4725
  end
module Required =
  struct
    type 'T t = any
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun (type __T) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x4728 : Ojs.t) -> any_of_js x4728
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t =
      fun (type __T) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x4727 : any) -> any_to_js x4727
  end
module ReferenceError =
  struct
    type t = [ `Error  | `ReferenceError ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type tags = [ `Error  | `ReferenceError ]
    type 'tags this = 'tags intf constraint 'tags = [> `ReferenceError ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x4731 : Ojs.t) -> intf_of_js __tags_of_js x4731
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x4729 : __tags intf) -> intf_to_js __tags_to_js x4729
    let (create : ?message:string -> ?options:ErrorOptions.t -> unit -> t) =
      fun ?message:(x4733 : string option) ->
        fun ?options:(x4734 : ErrorOptions.t option) ->
          fun () ->
            t_of_js
              (Ojs.new_obj_arr
                 (Ojs.get_prop_ascii Ojs.global "ReferenceError")
                 (let x4735 =
                    Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                  (match x4733 with
                   | Some x4737 ->
                       ignore
                         (Ojs.call x4735 "push" [|(Ojs.string_to_js x4737)|])
                   | None -> ());
                  (match x4734 with
                   | Some x4736 ->
                       ignore
                         (Ojs.call x4735 "push"
                            [|(ErrorOptions.t_to_js x4736)|])
                   | None -> ());
                  x4735))
    let (invoke : ?message:string -> ?options:ErrorOptions.t -> unit -> t) =
      fun ?message:(x4738 : string option) ->
        fun ?options:(x4739 : ErrorOptions.t option) ->
          fun () ->
            t_of_js
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "ReferenceError")
                 "apply"
                 [|Ojs.null;((let x4740 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              (match x4738 with
                               | Some x4742 ->
                                   ignore
                                     (Ojs.call x4740 "push"
                                        [|(Ojs.string_to_js x4742)|])
                               | None -> ());
                              (match x4739 with
                               | Some x4741 ->
                                   ignore
                                     (Ojs.call x4740 "push"
                                        [|(ErrorOptions.t_to_js x4741)|])
                               | None -> ());
                              x4740))|])
    let (create' : ?message:string -> unit -> t) =
      fun ?message:(x4743 : string option) ->
        fun () ->
          t_of_js
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "ReferenceError")
               (let x4744 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x4743 with
                 | Some x4745 ->
                     ignore
                       (Ojs.call x4744 "push" [|(Ojs.string_to_js x4745)|])
                 | None -> ());
                x4744))
    let (invoke' : ?message:string -> unit -> t) =
      fun ?message:(x4746 : string option) ->
        fun () ->
          t_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "ReferenceError")
               "apply"
               [|Ojs.null;((let x4747 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x4746 with
                             | Some x4748 ->
                                 ignore
                                   (Ojs.call x4747 "push"
                                      [|(Ojs.string_to_js x4748)|])
                             | None -> ());
                            x4747))|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "ReferenceError") "prototype")
    let cast_from = Obj.magic
  end
module Record =
  struct
    type ('K, 'T) t = any
    let rec t_of_js :
      'K 'T . (Ojs.t -> 'K) -> (Ojs.t -> 'T) -> Ojs.t -> ('K, 'T) t =
      fun (type __K) ->
        fun (type __T) ->
          fun (__K_of_js : Ojs.t -> __K) ->
            fun (__T_of_js : Ojs.t -> __T) ->
              fun (x4750 : Ojs.t) -> any_of_js x4750
    and t_to_js :
      'K 'T . ('K -> Ojs.t) -> ('T -> Ojs.t) -> ('K, 'T) t -> Ojs.t =
      fun (type __K) ->
        fun (type __T) ->
          fun (__K_to_js : __K -> Ojs.t) ->
            fun (__T_to_js : __T -> Ojs.t) ->
              fun (x4749 : any) -> any_to_js x4749
  end
module ReadonlySet =
  struct
    type 'T t = [ `ReadonlySet of 'T ] intf
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun _T -> Obj.magic
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun _T -> Obj.magic
    type 'T tags = [ `ReadonlySet of 'T ]
    type ('tags, 'T) this =
      'tags intf constraint 'tags = [> `ReadonlySet of 'T ]
    let rec this_of_js :
      'tags 'T .
        (Ojs.t -> 'tags) -> (Ojs.t -> 'T) -> Ojs.t -> ('tags, 'T) this
      =
      fun (type __tags) ->
        fun (type __T) ->
          fun (__tags_of_js : Ojs.t -> __tags) ->
            fun (__T_of_js : Ojs.t -> __T) ->
              fun (x4753 : Ojs.t) -> intf_of_js __tags_of_js x4753
    and this_to_js :
      'tags 'T .
        ('tags -> Ojs.t) -> ('T -> Ojs.t) -> ('tags, 'T) this -> Ojs.t
      =
      fun (type __tags) ->
        fun (type __T) ->
          fun (__tags_to_js : __tags -> Ojs.t) ->
            fun (__T_to_js : __T -> Ojs.t) ->
              fun (x4751 : __tags intf) -> intf_to_js __tags_to_js x4751
    let (entries : ('tags, 'T) this -> ('T * 'T) IterableIterator.t) =
      fun (x4755 : ('tags, 'T) this) ->
        IterableIterator.t_of_js
          (fun (x4758 : Ojs.t) ->
             let x4759 = x4758 in
             ((Obj.magic (Ojs.array_get x4759 0)),
               (Obj.magic (Ojs.array_get x4759 1))))
          (Ojs.call (this_to_js Obj.magic Obj.magic x4755) "entries" [||])
    let (keys : ('tags, 'T) this -> 'T IterableIterator.t) =
      fun (x4760 : ('tags, 'T) this) ->
        IterableIterator.t_of_js Obj.magic
          (Ojs.call (this_to_js Obj.magic Obj.magic x4760) "keys" [||])
    let (values : ('tags, 'T) this -> 'T IterableIterator.t) =
      fun (x4764 : ('tags, 'T) this) ->
        IterableIterator.t_of_js Obj.magic
          (Ojs.call (this_to_js Obj.magic Obj.magic x4764) "values" [||])
    let (forEach :
      ('tags, 'T) this ->
        callbackfn:(value:'T -> value2:'T -> set_:'T t -> unit) ->
          ?thisArg:any -> unit -> unit)
      =
      fun (x4776 : ('tags, 'T) this) ->
        fun ~callbackfn:(x4768 : value:'T -> value2:'T -> set_:'T t -> unit)
          ->
          fun ?thisArg:(x4769 : any option) ->
            fun () ->
              ignore
                (let x4779 = this_to_js Obj.magic Obj.magic x4776 in
                 Ojs.call (Ojs.get_prop_ascii x4779 "forEach") "apply"
                   [|x4779;((let x4770 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x4770 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x4772 : Ojs.t) ->
                                          fun (x4773 : Ojs.t) ->
                                            fun (x4774 : Ojs.t) ->
                                              x4768 ~value:(Obj.magic x4772)
                                                ~value2:(Obj.magic x4773)
                                                ~set_:(t_of_js Obj.magic
                                                         x4774)))|]);
                             (match x4769 with
                              | Some x4771 ->
                                  ignore
                                    (Ojs.call x4770 "push"
                                       [|(any_to_js x4771)|])
                              | None -> ());
                             x4770))|])
    let (has : ('tags, 'T) this -> value:'T -> bool) =
      fun (x4781 : ('tags, 'T) this) ->
        fun ~value:(x4780 : 'T) ->
          Ojs.bool_of_js
            (Ojs.call (this_to_js Obj.magic Obj.magic x4781) "has"
               [|(Obj.magic x4780)|])
    let (get_size : ('tags, 'T) this -> float) =
      fun (x4784 : ('tags, 'T) this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic Obj.magic x4784) "size")
    let cast_from = Obj.magic
  end
module ReadonlyMap =
  struct
    type ('K, 'V) t = [ `ReadonlyMap of ('K * 'V) ] intf
    let rec t_of_js :
      'K 'V . (Ojs.t -> 'K) -> (Ojs.t -> 'V) -> Ojs.t -> ('K, 'V) t =
      fun _K -> fun _V -> Obj.magic
    and t_to_js :
      'K 'V . ('K -> Ojs.t) -> ('V -> Ojs.t) -> ('K, 'V) t -> Ojs.t =
      fun _K -> fun _V -> Obj.magic
    type ('K, 'V) tags = [ `ReadonlyMap of ('K * 'V) ]
    type ('tags, 'K, 'V) this =
      'tags intf constraint 'tags = [> `ReadonlyMap of ('K * 'V) ]
    let rec this_of_js :
      'tags 'K 'V .
        (Ojs.t -> 'tags) ->
          (Ojs.t -> 'K) -> (Ojs.t -> 'V) -> Ojs.t -> ('tags, 'K, 'V) this
      =
      fun (type __tags) ->
        fun (type __K) ->
          fun (type __V) ->
            fun (__tags_of_js : Ojs.t -> __tags) ->
              fun (__K_of_js : Ojs.t -> __K) ->
                fun (__V_of_js : Ojs.t -> __V) ->
                  fun (x4789 : Ojs.t) -> intf_of_js __tags_of_js x4789
    and this_to_js :
      'tags 'K 'V .
        ('tags -> Ojs.t) ->
          ('K -> Ojs.t) -> ('V -> Ojs.t) -> ('tags, 'K, 'V) this -> Ojs.t
      =
      fun (type __tags) ->
        fun (type __K) ->
          fun (type __V) ->
            fun (__tags_to_js : __tags -> Ojs.t) ->
              fun (__K_to_js : __K -> Ojs.t) ->
                fun (__V_to_js : __V -> Ojs.t) ->
                  fun (x4787 : __tags intf) -> intf_to_js __tags_to_js x4787
    let (entries : ('tags, 'K, 'V) this -> ('K * 'V) IterableIterator.t) =
      fun (x4791 : ('tags, 'K, 'V) this) ->
        IterableIterator.t_of_js
          (fun (x4795 : Ojs.t) ->
             let x4796 = x4795 in
             ((Obj.magic (Ojs.array_get x4796 0)),
               (Obj.magic (Ojs.array_get x4796 1))))
          (Ojs.call (this_to_js Obj.magic Obj.magic Obj.magic x4791)
             "entries" [||])
    let (keys : ('tags, 'K, 'V) this -> 'K IterableIterator.t) =
      fun (x4797 : ('tags, 'K, 'V) this) ->
        IterableIterator.t_of_js Obj.magic
          (Ojs.call (this_to_js Obj.magic Obj.magic Obj.magic x4797) "keys"
             [||])
    let (values : ('tags, 'K, 'V) this -> 'V IterableIterator.t) =
      fun (x4802 : ('tags, 'K, 'V) this) ->
        IterableIterator.t_of_js Obj.magic
          (Ojs.call (this_to_js Obj.magic Obj.magic Obj.magic x4802) "values"
             [||])
    let (forEach :
      ('tags, 'K, 'V) this ->
        callbackfn:(value:'V -> key:'K -> map:('K, 'V) t -> unit) ->
          ?thisArg:any -> unit -> unit)
      =
      fun (x4816 : ('tags, 'K, 'V) this) ->
        fun
          ~callbackfn:(x4807 : value:'V -> key:'K -> map:('K, 'V) t -> unit)
          ->
          fun ?thisArg:(x4808 : any option) ->
            fun () ->
              ignore
                (let x4820 = this_to_js Obj.magic Obj.magic Obj.magic x4816 in
                 Ojs.call (Ojs.get_prop_ascii x4820 "forEach") "apply"
                   [|x4820;((let x4809 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x4809 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x4811 : Ojs.t) ->
                                          fun (x4812 : Ojs.t) ->
                                            fun (x4813 : Ojs.t) ->
                                              x4807 ~value:(Obj.magic x4811)
                                                ~key:(Obj.magic x4812)
                                                ~map:(t_of_js Obj.magic
                                                        Obj.magic x4813)))|]);
                             (match x4808 with
                              | Some x4810 ->
                                  ignore
                                    (Ojs.call x4809 "push"
                                       [|(any_to_js x4810)|])
                              | None -> ());
                             x4809))|])
    let (get_ : ('tags, 'K, 'V) this -> key:'K -> 'V option) =
      fun (x4822 : ('tags, 'K, 'V) this) ->
        fun ~key:(x4821 : 'K) ->
          Ojs.option_of_js Obj.magic
            (Ojs.call (this_to_js Obj.magic Obj.magic Obj.magic x4822) "get"
               [|(Obj.magic x4821)|])
    let (has : ('tags, 'K, 'V) this -> key:'K -> bool) =
      fun (x4828 : ('tags, 'K, 'V) this) ->
        fun ~key:(x4827 : 'K) ->
          Ojs.bool_of_js
            (Ojs.call (this_to_js Obj.magic Obj.magic Obj.magic x4828) "has"
               [|(Obj.magic x4827)|])
    let (get_size : ('tags, 'K, 'V) this -> float) =
      fun (x4832 : ('tags, 'K, 'V) this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii
             (this_to_js Obj.magic Obj.magic Obj.magic x4832) "size")
    let cast_from = Obj.magic
  end
module RangeError =
  struct
    type t = [ `Error  | `RangeError ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type tags = [ `Error  | `RangeError ]
    type 'tags this = 'tags intf constraint 'tags = [> `RangeError ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x4838 : Ojs.t) -> intf_of_js __tags_of_js x4838
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x4836 : __tags intf) -> intf_to_js __tags_to_js x4836
    let (create : ?message:string -> ?options:ErrorOptions.t -> unit -> t) =
      fun ?message:(x4840 : string option) ->
        fun ?options:(x4841 : ErrorOptions.t option) ->
          fun () ->
            t_of_js
              (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "RangeError")
                 (let x4842 =
                    Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                  (match x4840 with
                   | Some x4844 ->
                       ignore
                         (Ojs.call x4842 "push" [|(Ojs.string_to_js x4844)|])
                   | None -> ());
                  (match x4841 with
                   | Some x4843 ->
                       ignore
                         (Ojs.call x4842 "push"
                            [|(ErrorOptions.t_to_js x4843)|])
                   | None -> ());
                  x4842))
    let (invoke : ?message:string -> ?options:ErrorOptions.t -> unit -> t) =
      fun ?message:(x4845 : string option) ->
        fun ?options:(x4846 : ErrorOptions.t option) ->
          fun () ->
            t_of_js
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "RangeError") "apply"
                 [|Ojs.null;((let x4847 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              (match x4845 with
                               | Some x4849 ->
                                   ignore
                                     (Ojs.call x4847 "push"
                                        [|(Ojs.string_to_js x4849)|])
                               | None -> ());
                              (match x4846 with
                               | Some x4848 ->
                                   ignore
                                     (Ojs.call x4847 "push"
                                        [|(ErrorOptions.t_to_js x4848)|])
                               | None -> ());
                              x4847))|])
    let (create' : ?message:string -> unit -> t) =
      fun ?message:(x4850 : string option) ->
        fun () ->
          t_of_js
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "RangeError")
               (let x4851 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x4850 with
                 | Some x4852 ->
                     ignore
                       (Ojs.call x4851 "push" [|(Ojs.string_to_js x4852)|])
                 | None -> ());
                x4851))
    let (invoke' : ?message:string -> unit -> t) =
      fun ?message:(x4853 : string option) ->
        fun () ->
          t_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "RangeError") "apply"
               [|Ojs.null;((let x4854 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x4853 with
                             | Some x4855 ->
                                 ignore
                                   (Ojs.call x4854 "push"
                                      [|(Ojs.string_to_js x4855)|])
                             | None -> ());
                            x4854))|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "RangeError")
             "prototype")
    let cast_from = Obj.magic
  end
module PropertyDescriptor =
  struct
    type t = [ `PropertyDescriptor ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type tags = [ `PropertyDescriptor ]
    type 'tags this = 'tags intf constraint 'tags = [> `PropertyDescriptor ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x4858 : Ojs.t) -> intf_of_js __tags_of_js x4858
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x4856 : __tags intf) -> intf_to_js __tags_to_js x4856
    let (get_configurable : 'tags this -> bool option) =
      fun (x4860 : 'tags this) ->
        Ojs.option_of_js Ojs.bool_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x4860) "configurable")
    let (set_configurable : 'tags this -> bool -> unit) =
      fun (x4863 : 'tags this) ->
        fun (x4864 : bool) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x4863) "configurable"
            (Ojs.bool_to_js x4864)
    let (get_enumerable : 'tags this -> bool option) =
      fun (x4866 : 'tags this) ->
        Ojs.option_of_js Ojs.bool_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x4866) "enumerable")
    let (set_enumerable : 'tags this -> bool -> unit) =
      fun (x4869 : 'tags this) ->
        fun (x4870 : bool) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x4869) "enumerable"
            (Ojs.bool_to_js x4870)
    let (get_value : 'tags this -> any option) =
      fun (x4872 : 'tags this) ->
        Ojs.option_of_js any_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x4872) "value")
    let (set_value : 'tags this -> any -> unit) =
      fun (x4875 : 'tags this) ->
        fun (x4876 : any) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x4875) "value"
            (any_to_js x4876)
    let (get_writable : 'tags this -> bool option) =
      fun (x4878 : 'tags this) ->
        Ojs.option_of_js Ojs.bool_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x4878) "writable")
    let (set_writable : 'tags this -> bool -> unit) =
      fun (x4881 : 'tags this) ->
        fun (x4882 : bool) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x4881) "writable"
            (Ojs.bool_to_js x4882)
    let (get_ : 'tags this -> any) =
      fun (x4884 : 'tags this) ->
        any_of_js (Ojs.call (this_to_js Obj.magic x4884) "get" [||])
    let (set_ : 'tags this -> v:any -> unit) =
      fun (x4887 : 'tags this) ->
        fun ~v:(x4886 : any) ->
          ignore
            (Ojs.call (this_to_js Obj.magic x4887) "set"
               [|(any_to_js x4886)|])
    let cast_from = Obj.magic
  end
module Function =
  struct
    type t = [ `Function ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type tags = [ `Function ]
    type 'tags this = 'tags intf constraint 'tags = [> `Function ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x4891 : Ojs.t) -> intf_of_js __tags_of_js x4891
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x4889 : __tags intf) -> intf_to_js __tags_to_js x4889
    let (get_name : 'tags this -> string) =
      fun (x4893 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x4893) "name")
    let (apply_ :
      'tags this -> this:t -> thisArg:any -> ?argArray:any -> unit -> any) =
      fun (x4900 : 'tags this) ->
        fun ~this:(x4895 : t) ->
          fun ~thisArg:(x4896 : any) ->
            fun ?argArray:(x4897 : any option) ->
              fun () ->
                any_of_js
                  (let x4902 = this_to_js Obj.magic x4900 in
                   Ojs.call (Ojs.get_prop_ascii x4902 "apply") "apply"
                     [|x4902;((let x4898 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x4898 "push" [|(t_to_js x4895)|]);
                               ignore
                                 (Ojs.call x4898 "push" [|(any_to_js x4896)|]);
                               (match x4897 with
                                | Some x4899 ->
                                    ignore
                                      (Ojs.call x4898 "push"
                                         [|(any_to_js x4899)|])
                                | None -> ());
                               x4898))|])
    let (call :
      'tags this -> this:t -> thisArg:any -> argArray:any list -> any) =
      fun (x4908 : 'tags this) ->
        fun ~this:(x4903 : t) ->
          fun ~thisArg:(x4904 : any) ->
            fun ~argArray:(x4905 : any list) ->
              any_of_js
                (let x4910 = this_to_js Obj.magic x4908 in
                 Ojs.call (Ojs.get_prop_ascii x4910 "call") "apply"
                   [|x4910;((let x4906 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x4906 "push" [|(t_to_js x4903)|]);
                             ignore
                               (Ojs.call x4906 "push" [|(any_to_js x4904)|]);
                             List.iter
                               (fun (x4907 : any) ->
                                  ignore
                                    (Ojs.call x4906 "push"
                                       [|(any_to_js x4907)|])) x4905;
                             x4906))|])
    let (bind :
      'tags this -> this:t -> thisArg:any -> argArray:any list -> any) =
      fun (x4916 : 'tags this) ->
        fun ~this:(x4911 : t) ->
          fun ~thisArg:(x4912 : any) ->
            fun ~argArray:(x4913 : any list) ->
              any_of_js
                (let x4918 = this_to_js Obj.magic x4916 in
                 Ojs.call (Ojs.get_prop_ascii x4918 "bind") "apply"
                   [|x4918;((let x4914 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x4914 "push" [|(t_to_js x4911)|]);
                             ignore
                               (Ojs.call x4914 "push" [|(any_to_js x4912)|]);
                             List.iter
                               (fun (x4915 : any) ->
                                  ignore
                                    (Ojs.call x4914 "push"
                                       [|(any_to_js x4915)|])) x4913;
                             x4914))|])
    let (toString : 'tags this -> string) =
      fun (x4919 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x4919) "toString" [||])
    let (get_prototype : 'tags this -> any) =
      fun (x4921 : 'tags this) ->
        any_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x4921) "prototype")
    let (set_prototype : 'tags this -> any -> unit) =
      fun (x4923 : 'tags this) ->
        fun (x4924 : any) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x4923) "prototype"
            (any_to_js x4924)
    let (get_length : 'tags this -> float) =
      fun (x4926 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x4926) "length")
    let (get_arguments : 'tags this -> any) =
      fun (x4928 : 'tags this) ->
        any_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x4928) "arguments")
    let (set_arguments : 'tags this -> any -> unit) =
      fun (x4930 : 'tags this) ->
        fun (x4931 : any) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x4930) "arguments"
            (any_to_js x4931)
    let (get_caller : 'tags this -> t) =
      fun (x4933 : 'tags this) ->
        t_of_js (Ojs.get_prop_ascii (this_to_js Obj.magic x4933) "caller")
    let (set_caller : 'tags this -> t -> unit) =
      fun (x4935 : 'tags this) ->
        fun (x4936 : t) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x4935) "caller"
            (t_to_js x4936)
    let (create : string list -> t) =
      fun (x4938 : string list) ->
        t_of_js
          (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "Function")
             (let x4939 =
                Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
              List.iter
                (fun (x4940 : string) ->
                   ignore
                     (Ojs.call x4939 "push" [|(Ojs.string_to_js x4940)|]))
                x4938;
              x4939))
    let (invoke : string list -> t) =
      fun (x4941 : string list) ->
        t_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Function") "apply"
             [|Ojs.null;((let x4942 =
                            Ojs.new_obj
                              (Ojs.get_prop_ascii Ojs.global "Array") 
                              [||] in
                          List.iter
                            (fun (x4943 : string) ->
                               ignore
                                 (Ojs.call x4942 "push"
                                    [|(Ojs.string_to_js x4943)|])) x4941;
                          x4942))|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Function")
             "prototype")
    let cast_from = Obj.magic
  end
module ProxyHandler =
  struct
    type 'T t = [ `ProxyHandler of 'T ] intf
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun _T -> Obj.magic
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun _T -> Obj.magic
    type 'T tags = [ `ProxyHandler of 'T ]
    type ('tags, 'T) this =
      'tags intf constraint 'tags = [> `ProxyHandler of 'T ]
    let rec this_of_js :
      'tags 'T .
        (Ojs.t -> 'tags) -> (Ojs.t -> 'T) -> Ojs.t -> ('tags, 'T) this
      =
      fun (type __tags) ->
        fun (type __T) ->
          fun (__tags_of_js : Ojs.t -> __tags) ->
            fun (__T_of_js : Ojs.t -> __T) ->
              fun (x4946 : Ojs.t) -> intf_of_js __tags_of_js x4946
    and this_to_js :
      'tags 'T .
        ('tags -> Ojs.t) -> ('T -> Ojs.t) -> ('tags, 'T) this -> Ojs.t
      =
      fun (type __tags) ->
        fun (type __T) ->
          fun (__tags_to_js : __tags -> Ojs.t) ->
            fun (__T_to_js : __T -> Ojs.t) ->
              fun (x4944 : __tags intf) -> intf_to_js __tags_to_js x4944
    let (apply_ :
      ('tags, 'T) this ->
        target:'T -> thisArg:any -> argArray:any list -> any)
      =
      fun (x4952 : ('tags, 'T) this) ->
        fun ~target:(x4948 : 'T) ->
          fun ~thisArg:(x4949 : any) ->
            fun ~argArray:(x4950 : any list) ->
              any_of_js
                (Ojs.call (this_to_js Obj.magic Obj.magic x4952) "apply"
                   [|(Obj.magic x4948);(any_to_js x4949);(Ojs.list_to_js
                                                            any_to_js x4950)|])
    let (construct :
      ('tags, 'T) this ->
        target:'T ->
          argArray:any list -> newTarget:Function.t -> untyped_object)
      =
      fun (x4959 : ('tags, 'T) this) ->
        fun ~target:(x4955 : 'T) ->
          fun ~argArray:(x4956 : any list) ->
            fun ~newTarget:(x4958 : Function.t) ->
              untyped_object_of_js
                (Ojs.call (this_to_js Obj.magic Obj.magic x4959) "construct"
                   [|(Obj.magic x4955);(Ojs.list_to_js any_to_js x4956);(
                     Function.t_to_js x4958)|])
    let (defineProperty :
      ('tags, 'T) this ->
        target:'T ->
          property:[ `U1 of string  | `U2 of symbol ] ->
            attributes:PropertyDescriptor.t -> bool)
      =
      fun (x4967 : ('tags, 'T) this) ->
        fun ~target:(x4962 : 'T) ->
          fun ~property:(x4963 : [ `U1 of string  | `U2 of symbol ]) ->
            fun ~attributes:(x4966 : PropertyDescriptor.t) ->
              Ojs.bool_of_js
                (Ojs.call (this_to_js Obj.magic Obj.magic x4967)
                   "defineProperty"
                   [|(Obj.magic x4962);((match x4963 with
                                         | `U1 x4964 ->
                                             Ojs.string_to_js x4964
                                         | `U2 x4965 -> symbol_to_js x4965));(
                     PropertyDescriptor.t_to_js x4966)|])
    let (deleteProperty :
      ('tags, 'T) this ->
        target:'T -> p:[ `U1 of string  | `U2 of symbol ] -> bool)
      =
      fun (x4974 : ('tags, 'T) this) ->
        fun ~target:(x4970 : 'T) ->
          fun ~p:(x4971 : [ `U1 of string  | `U2 of symbol ]) ->
            Ojs.bool_of_js
              (Ojs.call (this_to_js Obj.magic Obj.magic x4974)
                 "deleteProperty"
                 [|(Obj.magic x4970);((match x4971 with
                                       | `U1 x4972 -> Ojs.string_to_js x4972
                                       | `U2 x4973 -> symbol_to_js x4973))|])
    let (get_ :
      ('tags, 'T) this ->
        target:'T ->
          p:[ `U1 of string  | `U2 of symbol ] -> receiver:any -> any)
      =
      fun (x4982 : ('tags, 'T) this) ->
        fun ~target:(x4977 : 'T) ->
          fun ~p:(x4978 : [ `U1 of string  | `U2 of symbol ]) ->
            fun ~receiver:(x4981 : any) ->
              any_of_js
                (Ojs.call (this_to_js Obj.magic Obj.magic x4982) "get"
                   [|(Obj.magic x4977);((match x4978 with
                                         | `U1 x4979 ->
                                             Ojs.string_to_js x4979
                                         | `U2 x4980 -> symbol_to_js x4980));(
                     any_to_js x4981)|])
    let (getOwnPropertyDescriptor :
      ('tags, 'T) this ->
        target:'T ->
          p:[ `U1 of string  | `U2 of symbol ] -> PropertyDescriptor.t option)
      =
      fun (x4989 : ('tags, 'T) this) ->
        fun ~target:(x4985 : 'T) ->
          fun ~p:(x4986 : [ `U1 of string  | `U2 of symbol ]) ->
            Ojs.option_of_js PropertyDescriptor.t_of_js
              (Ojs.call (this_to_js Obj.magic Obj.magic x4989)
                 "getOwnPropertyDescriptor"
                 [|(Obj.magic x4985);((match x4986 with
                                       | `U1 x4987 -> Ojs.string_to_js x4987
                                       | `U2 x4988 -> symbol_to_js x4988))|])
    let (getPrototypeOf :
      ('tags, 'T) this -> target:'T -> untyped_object option) =
      fun (x4994 : ('tags, 'T) this) ->
        fun ~target:(x4993 : 'T) ->
          Ojs.option_of_js untyped_object_of_js
            (Ojs.call (this_to_js Obj.magic Obj.magic x4994) "getPrototypeOf"
               [|(Obj.magic x4993)|])
    let (has :
      ('tags, 'T) this ->
        target:'T -> p:[ `U1 of string  | `U2 of symbol ] -> bool)
      =
      fun (x5002 : ('tags, 'T) this) ->
        fun ~target:(x4998 : 'T) ->
          fun ~p:(x4999 : [ `U1 of string  | `U2 of symbol ]) ->
            Ojs.bool_of_js
              (Ojs.call (this_to_js Obj.magic Obj.magic x5002) "has"
                 [|(Obj.magic x4998);((match x4999 with
                                       | `U1 x5000 -> Ojs.string_to_js x5000
                                       | `U2 x5001 -> symbol_to_js x5001))|])
    let (isExtensible : ('tags, 'T) this -> target:'T -> bool) =
      fun (x5006 : ('tags, 'T) this) ->
        fun ~target:(x5005 : 'T) ->
          Ojs.bool_of_js
            (Ojs.call (this_to_js Obj.magic Obj.magic x5006) "isExtensible"
               [|(Obj.magic x5005)|])
    let (ownKeys :
      ('tags, 'T) this ->
        target:'T ->
          [ `String of string  | `Symbol of symbol ] Primitive.t ArrayLike.t)
      =
      fun (x5010 : ('tags, 'T) this) ->
        fun ~target:(x5009 : 'T) ->
          ArrayLike.t_of_js
            (fun (x5013 : Ojs.t) ->
               Primitive.t_of_js
                 (fun (x5014 : Ojs.t) ->
                    let x5015 = x5014 in
                    match Ojs.string_of_js (Ojs.get_prop_ascii x5015 "dummy")
                    with
                    | "String" -> `String (Ojs.string_of_js x5015)
                    | "Symbol" -> `Symbol (symbol_of_js x5015)
                    | _ -> assert false) x5013)
            (Ojs.call (this_to_js Obj.magic Obj.magic x5010) "ownKeys"
               [|(Obj.magic x5009)|])
    let (preventExtensions : ('tags, 'T) this -> target:'T -> bool) =
      fun (x5017 : ('tags, 'T) this) ->
        fun ~target:(x5016 : 'T) ->
          Ojs.bool_of_js
            (Ojs.call (this_to_js Obj.magic Obj.magic x5017)
               "preventExtensions" [|(Obj.magic x5016)|])
    let (set_ :
      ('tags, 'T) this ->
        target:'T ->
          p:[ `U1 of string  | `U2 of symbol ] ->
            newValue:any -> receiver:any -> bool)
      =
      fun (x5026 : ('tags, 'T) this) ->
        fun ~target:(x5020 : 'T) ->
          fun ~p:(x5021 : [ `U1 of string  | `U2 of symbol ]) ->
            fun ~newValue:(x5024 : any) ->
              fun ~receiver:(x5025 : any) ->
                Ojs.bool_of_js
                  (Ojs.call (this_to_js Obj.magic Obj.magic x5026) "set"
                     [|(Obj.magic x5020);((match x5021 with
                                           | `U1 x5022 ->
                                               Ojs.string_to_js x5022
                                           | `U2 x5023 -> symbol_to_js x5023));(
                       any_to_js x5024);(any_to_js x5025)|])
    let (setPrototypeOf :
      ('tags, 'T) this -> target:'T -> v:untyped_object option -> bool) =
      fun (x5032 : ('tags, 'T) this) ->
        fun ~target:(x5029 : 'T) ->
          fun ~v:(x5030 : untyped_object option) ->
            Ojs.bool_of_js
              (Ojs.call (this_to_js Obj.magic Obj.magic x5032)
                 "setPrototypeOf"
                 [|(Obj.magic x5029);(Ojs.option_to_js untyped_object_to_js
                                        x5030)|])
    let cast_from = Obj.magic
  end
module ProxyStatic =
  struct
    module AnonymousInterface43 =
      struct
        type 'T t = Ojs.t
        let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
          fun (type __T) ->
            fun (__T_of_js : Ojs.t -> __T) -> fun (x5036 : Ojs.t) -> x5036
        and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t =
          fun (type __T) ->
            fun (__T_to_js : __T -> Ojs.t) -> fun (x5035 : Ojs.t) -> x5035
        let (get_proxy : 'T t -> 'T) =
          fun (x5037 : 'T t) ->
            Obj.magic (Ojs.get_prop_ascii (t_to_js Obj.magic x5037) "proxy")
        let (set_proxy : 'T t -> 'T -> unit) =
          fun (x5039 : 'T t) ->
            fun (x5040 : 'T) ->
              Ojs.set_prop_ascii (t_to_js Obj.magic x5039) "proxy"
                (Obj.magic x5040)
        let (revoke : 'T t -> unit) =
          fun (x5042 : 'T t) ->
            ignore (Ojs.call (t_to_js Obj.magic x5042) "revoke" [||])
        let (create : proxy:'T -> revoke:(unit -> unit) -> unit -> 'T t) =
          fun ~proxy:(x5044 : 'T) ->
            fun ~revoke:(x5045 : unit -> unit) ->
              fun () ->
                let x5046 = Ojs.empty_obj () in
                Ojs.set_prop_ascii x5046 "proxy" (Obj.magic x5044);
                Ojs.set_prop_ascii x5046 "revoke"
                  (Ojs.fun_to_js 1 (fun _ -> x5045 ()));
                t_of_js Obj.magic x5046
        module Make(T:Ojs.T) =
          struct
            type 'T parent = 'T t
            let rec parent_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T parent =
              fun (type __T) ->
                fun (__T_of_js : Ojs.t -> __T) ->
                  fun (x5050 : Ojs.t) -> t_of_js __T_of_js x5050
            and parent_to_js : 'T . ('T -> Ojs.t) -> 'T parent -> Ojs.t =
              fun (type __T) ->
                fun (__T_to_js : __T -> Ojs.t) ->
                  fun (x5048 : __T t) -> t_to_js __T_to_js x5048
            type t = T.t parent
            let rec t_of_js : Ojs.t -> t =
              fun (x5054 : Ojs.t) -> parent_of_js T.t_of_js x5054
            and t_to_js : t -> Ojs.t =
              fun (x5052 : T.t parent) -> parent_to_js T.t_to_js x5052
            let (get_proxy : t -> T.t) =
              fun (x5056 : t) ->
                T.t_of_js (Ojs.get_prop_ascii (t_to_js x5056) "proxy")
            let (set_proxy : t -> T.t -> unit) =
              fun (x5057 : t) ->
                fun (x5058 : T.t) ->
                  Ojs.set_prop_ascii (t_to_js x5057) "proxy"
                    (T.t_to_js x5058)
            let (revoke : t -> unit) =
              fun (x5059 : t) ->
                ignore (Ojs.call (t_to_js x5059) "revoke" [||])
          end
      end
    let (revocable :
      target:'T -> handler:'T ProxyHandler.t -> 'T AnonymousInterface43.t) =
      fun ~target:(x5060 : 'T) ->
        fun ~handler:(x5061 : 'T ProxyHandler.t) ->
          AnonymousInterface43.t_of_js Obj.magic
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "Proxy") "revocable"
               [|(Obj.magic x5060);(ProxyHandler.t_to_js Obj.magic x5061)|])
    let (create : target:'T -> handler:'T ProxyHandler.t -> 'T) =
      fun ~target:(x5064 : 'T) ->
        fun ~handler:(x5065 : 'T ProxyHandler.t) ->
          Obj.magic
            (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Proxy")
               [|(Obj.magic x5064);(ProxyHandler.t_to_js Obj.magic x5065)|])
  end
module ProxyConstructor =
  struct
    module AnonymousInterface43 =
      struct
        type 'T t = Ojs.t
        let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
          fun (type __T) ->
            fun (__T_of_js : Ojs.t -> __T) -> fun (x5068 : Ojs.t) -> x5068
        and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t =
          fun (type __T) ->
            fun (__T_to_js : __T -> Ojs.t) -> fun (x5067 : Ojs.t) -> x5067
        let (get_proxy : 'T t -> 'T) =
          fun (x5069 : 'T t) ->
            Obj.magic (Ojs.get_prop_ascii (t_to_js Obj.magic x5069) "proxy")
        let (set_proxy : 'T t -> 'T -> unit) =
          fun (x5071 : 'T t) ->
            fun (x5072 : 'T) ->
              Ojs.set_prop_ascii (t_to_js Obj.magic x5071) "proxy"
                (Obj.magic x5072)
        let (revoke : 'T t -> unit) =
          fun (x5074 : 'T t) ->
            ignore (Ojs.call (t_to_js Obj.magic x5074) "revoke" [||])
        let (create : proxy:'T -> revoke:(unit -> unit) -> unit -> 'T t) =
          fun ~proxy:(x5076 : 'T) ->
            fun ~revoke:(x5077 : unit -> unit) ->
              fun () ->
                let x5078 = Ojs.empty_obj () in
                Ojs.set_prop_ascii x5078 "proxy" (Obj.magic x5076);
                Ojs.set_prop_ascii x5078 "revoke"
                  (Ojs.fun_to_js 1 (fun _ -> x5077 ()));
                t_of_js Obj.magic x5078
        module Make(T:Ojs.T) =
          struct
            type 'T parent = 'T t
            let rec parent_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T parent =
              fun (type __T) ->
                fun (__T_of_js : Ojs.t -> __T) ->
                  fun (x5082 : Ojs.t) -> t_of_js __T_of_js x5082
            and parent_to_js : 'T . ('T -> Ojs.t) -> 'T parent -> Ojs.t =
              fun (type __T) ->
                fun (__T_to_js : __T -> Ojs.t) ->
                  fun (x5080 : __T t) -> t_to_js __T_to_js x5080
            type t = T.t parent
            let rec t_of_js : Ojs.t -> t =
              fun (x5086 : Ojs.t) -> parent_of_js T.t_of_js x5086
            and t_to_js : t -> Ojs.t =
              fun (x5084 : T.t parent) -> parent_to_js T.t_to_js x5084
            let (get_proxy : t -> T.t) =
              fun (x5088 : t) ->
                T.t_of_js (Ojs.get_prop_ascii (t_to_js x5088) "proxy")
            let (set_proxy : t -> T.t -> unit) =
              fun (x5089 : t) ->
                fun (x5090 : T.t) ->
                  Ojs.set_prop_ascii (t_to_js x5089) "proxy"
                    (T.t_to_js x5090)
            let (revoke : t -> unit) =
              fun (x5091 : t) ->
                ignore (Ojs.call (t_to_js x5091) "revoke" [||])
          end
      end
    type t = [ `ProxyConstructor ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type tags = [ `ProxyConstructor ]
    type 'tags this = 'tags intf constraint 'tags = [> `ProxyConstructor ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x5094 : Ojs.t) -> intf_of_js __tags_of_js x5094
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x5092 : __tags intf) -> intf_to_js __tags_to_js x5092
    let (revocable :
      'tags this ->
        target:'T -> handler:'T ProxyHandler.t -> 'T AnonymousInterface43.t)
      =
      fun (x5099 : 'tags this) ->
        fun ~target:(x5096 : 'T) ->
          fun ~handler:(x5097 : 'T ProxyHandler.t) ->
            AnonymousInterface43.t_of_js Obj.magic
              (Ojs.call (this_to_js Obj.magic x5099) "revocable"
                 [|(Obj.magic x5096);(ProxyHandler.t_to_js Obj.magic x5097)|])
    let (create : 'tags this -> target:'T -> handler:'T ProxyHandler.t -> 'T)
      =
      fun (x5105 : 'tags this) ->
        fun ~target:(x5102 : 'T) ->
          fun ~handler:(x5103 : 'T ProxyHandler.t) ->
            Obj.magic
              (Ojs.new_obj (this_to_js Obj.magic x5105)
                 [|(Obj.magic x5102);(ProxyHandler.t_to_js Obj.magic x5103)|])
    let cast_from = Obj.magic
  end
module PromiseLike =
  struct
    type 'T t = [ `PromiseLike of 'T ] intf
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun _T -> Obj.magic
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun _T -> Obj.magic
    type 'T tags = [ `PromiseLike of 'T ]
    type ('tags, 'T) this =
      'tags intf constraint 'tags = [> `PromiseLike of 'T ]
    let rec this_of_js :
      'tags 'T .
        (Ojs.t -> 'tags) -> (Ojs.t -> 'T) -> Ojs.t -> ('tags, 'T) this
      =
      fun (type __tags) ->
        fun (type __T) ->
          fun (__tags_of_js : Ojs.t -> __tags) ->
            fun (__T_of_js : Ojs.t -> __T) ->
              fun (x5109 : Ojs.t) -> intf_of_js __tags_of_js x5109
    and this_to_js :
      'tags 'T .
        ('tags -> Ojs.t) -> ('T -> Ojs.t) -> ('tags, 'T) this -> Ojs.t
      =
      fun (type __tags) ->
        fun (type __T) ->
          fun (__tags_to_js : __tags -> Ojs.t) ->
            fun (__T_to_js : __T -> Ojs.t) ->
              fun (x5107 : __tags intf) -> intf_to_js __tags_to_js x5107
    let (then_ :
      ('tags, 'T) this ->
        ?onfulfilled:[ `Null  | `Undefined of undefined 
                     | `U1 of
                         'T -> [ `U1 of 'TResult1  | `U2 of 'TResult1 t ] ]
          ->
          ?onrejected:[ `Null  | `Undefined of undefined 
                      | `U1 of
                          any -> [ `U1 of 'TResult2  | `U2 of 'TResult2 t ] ]
            -> unit -> ('TResult1, 'TResult2) union2 t)
      =
      fun (x5128 : ('tags, 'T) this) ->
        fun
          ?onfulfilled:(x5111 :
                         [ `Null  | `Undefined of undefined 
                         | `U1 of
                             'T -> [ `U1 of 'TResult1  | `U2 of 'TResult1 t ] ]
                           option)
          ->
          fun
            ?onrejected:(x5112 :
                          [ `Null  | `Undefined of undefined 
                          | `U1 of
                              any ->
                                [ `U1 of 'TResult2  | `U2 of 'TResult2 t ]
                              ]
                            option)
            ->
            fun () ->
              t_of_js
                (fun (x5132 : Ojs.t) ->
                   union2_of_js Obj.magic Obj.magic x5132)
                (let x5131 = this_to_js Obj.magic Obj.magic x5128 in
                 Ojs.call (Ojs.get_prop_ascii x5131 "then") "apply"
                   [|x5131;((let x5113 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x5111 with
                              | Some x5121 ->
                                  ignore
                                    (Ojs.call x5113 "push"
                                       [|((match x5121 with
                                           | `Null -> Ojs.null
                                           | `Undefined x5122 ->
                                               undefined_to_js x5122
                                           | `U1 x5123 ->
                                               Ojs.fun_to_js 1
                                                 (fun (x5124 : Ojs.t) ->
                                                    match x5123
                                                            (Obj.magic x5124)
                                                    with
                                                    | `U1 x5125 ->
                                                        Obj.magic x5125
                                                    | `U2 x5126 ->
                                                        t_to_js Obj.magic
                                                          x5126)))|])
                              | None -> ());
                             (match x5112 with
                              | Some x5114 ->
                                  ignore
                                    (Ojs.call x5113 "push"
                                       [|((match x5114 with
                                           | `Null -> Ojs.null
                                           | `Undefined x5115 ->
                                               undefined_to_js x5115
                                           | `U1 x5116 ->
                                               Ojs.fun_to_js 1
                                                 (fun (x5117 : Ojs.t) ->
                                                    match x5116
                                                            (any_of_js x5117)
                                                    with
                                                    | `U1 x5118 ->
                                                        Obj.magic x5118
                                                    | `U2 x5119 ->
                                                        t_to_js Obj.magic
                                                          x5119)))|])
                              | None -> ());
                             x5113))|])
    let cast_from = Obj.magic
  end
module PromiseConstructorLike =
  struct
    module AnonymousInterface17 =
      struct
        type t = Ojs.t
        let rec t_of_js : Ojs.t -> t = fun (x5136 : Ojs.t) -> x5136
        and t_to_js : t -> Ojs.t = fun (x5135 : Ojs.t) -> x5135
        let (create :
          t ->
            executor:(resolve:([ `U1 of 'T  | `U2 of 'T PromiseLike.t ] ->
                                 unit)
                        -> reject:(?reason:any -> unit -> unit) -> unit)
              -> 'T PromiseLike.t)
          =
          fun (x5147 : t) ->
            fun
              ~executor:(x5137 :
                          resolve:([ `U1 of 'T  | `U2 of 'T PromiseLike.t ]
                                     -> unit)
                            -> reject:(?reason:any -> unit -> unit) -> unit)
              ->
              PromiseLike.t_of_js Obj.magic
                (Ojs.new_obj (t_to_js x5147)
                   [|(Ojs.fun_to_js 2
                        (fun (x5138 : Ojs.t) ->
                           fun (x5143 : Ojs.t) ->
                             x5137
                               ~resolve:(fun
                                           (x5139 :
                                             [ `U1 of 'T 
                                             | `U2 of 'T PromiseLike.t ])
                                           ->
                                           ignore
                                             (Ojs.apply x5138
                                                [|((match x5139 with
                                                    | `U1 x5140 ->
                                                        Obj.magic x5140
                                                    | `U2 x5141 ->
                                                        PromiseLike.t_to_js
                                                          Obj.magic x5141))|]))
                               ~reject:(fun ?reason:(x5144 : any option) ->
                                          fun () ->
                                            ignore
                                              (Ojs.call x5143 "apply"
                                                 [|Ojs.null;((let x5145 =
                                                                Ojs.new_obj
                                                                  (Ojs.get_prop_ascii
                                                                    Ojs.global
                                                                    "Array")
                                                                  [||] in
                                                              (match x5144
                                                               with
                                                               | Some x5146
                                                                   ->
                                                                   ignore
                                                                    (Ojs.call
                                                                    x5145
                                                                    "push"
                                                                    [|(
                                                                    any_to_js
                                                                    x5146)|])
                                                               | None -> ());
                                                              x5145))|]))))|])
      end
    type t = AnonymousInterface17.t
    let rec t_of_js : Ojs.t -> t =
      fun (x5150 : Ojs.t) -> AnonymousInterface17.t_of_js x5150
    and t_to_js : t -> Ojs.t =
      fun (x5149 : AnonymousInterface17.t) ->
        AnonymousInterface17.t_to_js x5149
  end
module Partial =
  struct
    type 'T t = any
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun (type __T) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x5152 : Ojs.t) -> any_of_js x5152
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t =
      fun (type __T) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x5151 : any) -> any_to_js x5151
  end
module Parameters =
  struct
    type 'T t = any
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun (type __T) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x5154 : Ojs.t) -> any_of_js x5154
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t =
      fun (type __T) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x5153 : any) -> any_to_js x5153
  end
module Omit =
  struct
    type ('T, 'K) t = ('T, (any, 'K) Exclude.t) Pick.t
    let rec t_of_js :
      'T 'K . (Ojs.t -> 'T) -> (Ojs.t -> 'K) -> Ojs.t -> ('T, 'K) t =
      fun (type __T) ->
        fun (type __K) ->
          fun (__T_of_js : Ojs.t -> __T) ->
            fun (__K_of_js : Ojs.t -> __K) ->
              fun (x5160 : Ojs.t) ->
                Pick.t_of_js __T_of_js
                  (fun (x5162 : Ojs.t) ->
                     Exclude.t_of_js any_of_js __K_of_js x5162) x5160
    and t_to_js :
      'T 'K . ('T -> Ojs.t) -> ('K -> Ojs.t) -> ('T, 'K) t -> Ojs.t =
      fun (type __T) ->
        fun (type __K) ->
          fun (__T_to_js : __T -> Ojs.t) ->
            fun (__K_to_js : __K -> Ojs.t) ->
              fun (x5155 : (__T, (any, __K) Exclude.t) Pick.t) ->
                Pick.t_to_js __T_to_js
                  (fun (x5157 : (any, __K) Exclude.t) ->
                     Exclude.t_to_js any_to_js __K_to_js x5157) x5155
  end
module PropertyKey =
  struct
    type t =
      [ `Number of float  | `String of string  | `Symbol of symbol ]
        Primitive.t
    let rec t_of_js : Ojs.t -> t =
      fun (x5170 : Ojs.t) ->
        Primitive.t_of_js
          (fun (x5171 : Ojs.t) ->
             let x5172 = x5171 in
             match Ojs.string_of_js (Ojs.get_prop_ascii x5172 "dummy") with
             | "Number" -> `Number (Ojs.float_of_js x5172)
             | "String" -> `String (Ojs.string_of_js x5172)
             | "Symbol" -> `Symbol (symbol_of_js x5172)
             | _ -> assert false) x5170
    and t_to_js : t -> Ojs.t =
      fun
        (x5165 :
          [ `Number of float  | `String of string  | `Symbol of symbol ]
            Primitive.t)
        ->
        Primitive.t_to_js
          (fun
             (x5166 :
               [ `Number of float  | `String of string  | `Symbol of symbol ])
             ->
             match x5166 with
             | `Number x5167 -> Ojs.float_to_js x5167
             | `String x5168 -> Ojs.string_to_js x5168
             | `Symbol x5169 -> symbol_to_js x5169) x5165
  end
module PropertyDescriptorMap =
  struct
    type t = [ `PropertyDescriptorMap ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type tags = [ `PropertyDescriptorMap ]
    type 'tags this =
      'tags intf constraint 'tags = [> `PropertyDescriptorMap ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x5175 : Ojs.t) -> intf_of_js __tags_of_js x5175
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x5173 : __tags intf) -> intf_to_js __tags_to_js x5173
    let (get : 'tags this -> PropertyKey.t -> PropertyDescriptor.t) =
      fun (x5177 : 'tags this) ->
        fun (x5179 : PropertyKey.t) ->
          PropertyDescriptor.t_of_js
            (Ojs.get_prop (this_to_js Obj.magic x5177)
               (PropertyKey.t_to_js x5179))
    let (set : 'tags this -> PropertyKey.t -> PropertyDescriptor.t -> unit) =
      fun (x5180 : 'tags this) ->
        fun (x5182 : PropertyKey.t) ->
          fun (x5183 : PropertyDescriptor.t) ->
            Ojs.set_prop (this_to_js Obj.magic x5180)
              (PropertyKey.t_to_js x5182) (PropertyDescriptor.t_to_js x5183)
    let cast_from = Obj.magic
  end
module ThisType =
  struct
    type 'T t = [ `ThisType of 'T ] intf
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun _T -> Obj.magic
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun _T -> Obj.magic
    type 'T tags = [ `ThisType of 'T ]
    type ('tags, 'T) this =
      'tags intf constraint 'tags = [> `ThisType of 'T ]
    let rec this_of_js :
      'tags 'T .
        (Ojs.t -> 'tags) -> (Ojs.t -> 'T) -> Ojs.t -> ('tags, 'T) this
      =
      fun (type __tags) ->
        fun (type __T) ->
          fun (__tags_of_js : Ojs.t -> __tags) ->
            fun (__T_of_js : Ojs.t -> __T) ->
              fun (x5186 : Ojs.t) -> intf_of_js __tags_of_js x5186
    and this_to_js :
      'tags 'T .
        ('tags -> Ojs.t) -> ('T -> Ojs.t) -> ('tags, 'T) this -> Ojs.t
      =
      fun (type __tags) ->
        fun (type __T) ->
          fun (__tags_to_js : __tags -> Ojs.t) ->
            fun (__T_to_js : __T -> Ojs.t) ->
              fun (x5184 : __tags intf) -> intf_to_js __tags_to_js x5184
    let cast_from = Obj.magic
  end
module Readonly =
  struct
    type 'T t = any
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun (type __T) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x5189 : Ojs.t) -> any_of_js x5189
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t =
      fun (type __T) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x5188 : any) -> any_to_js x5188
  end
module Object =
  struct
    module AnonymousInterface52 =
      struct
        type 'U t = Ojs.t
        let rec t_of_js : 'U . (Ojs.t -> 'U) -> Ojs.t -> 'U t =
          fun (type __U) ->
            fun (__U_of_js : Ojs.t -> __U) -> fun (x5191 : Ojs.t) -> x5191
        and t_to_js : 'U . ('U -> Ojs.t) -> 'U t -> Ojs.t =
          fun (type __U) ->
            fun (__U_to_js : __U -> Ojs.t) -> fun (x5190 : Ojs.t) -> x5190
        let (get : 'U t -> string -> ('U, untyped_object) union2 option) =
          fun (x5192 : 'U t) ->
            fun (x5194 : string) ->
              Ojs.option_of_js
                (fun (x5195 : Ojs.t) ->
                   union2_of_js Obj.magic untyped_object_of_js x5195)
                (Ojs.get_prop (t_to_js Obj.magic x5192)
                   (Ojs.string_to_js x5194))
        let (set :
          'U t ->
            string ->
              [ `Null  | `Undefined of undefined  | `U1 of 'U 
              | `U2 of untyped_object ] -> unit)
          =
          fun (x5198 : 'U t) ->
            fun (x5200 : string) ->
              fun
                (x5201 :
                  [ `Null  | `Undefined of undefined  | `U1 of 'U 
                  | `U2 of untyped_object ])
                ->
                Ojs.set_prop (t_to_js Obj.magic x5198)
                  (Ojs.string_to_js x5200)
                  (match x5201 with
                   | `Null -> Ojs.null
                   | `Undefined x5202 -> undefined_to_js x5202
                   | `U1 x5203 -> Obj.magic x5203
                   | `U2 x5204 -> untyped_object_to_js x5204)
        module Make(U:Ojs.T) =
          struct
            type 'U parent = 'U t
            let rec parent_of_js : 'U . (Ojs.t -> 'U) -> Ojs.t -> 'U parent =
              fun (type __U) ->
                fun (__U_of_js : Ojs.t -> __U) ->
                  fun (x5207 : Ojs.t) -> t_of_js __U_of_js x5207
            and parent_to_js : 'U . ('U -> Ojs.t) -> 'U parent -> Ojs.t =
              fun (type __U) ->
                fun (__U_to_js : __U -> Ojs.t) ->
                  fun (x5205 : __U t) -> t_to_js __U_to_js x5205
            type t = U.t parent
            let rec t_of_js : Ojs.t -> t =
              fun (x5211 : Ojs.t) -> parent_of_js U.t_of_js x5211
            and t_to_js : t -> Ojs.t =
              fun (x5209 : U.t parent) -> parent_to_js U.t_to_js x5209
            let (get : t -> string -> (U.t, untyped_object) union2 option) =
              fun (x5213 : t) ->
                fun (x5214 : string) ->
                  Ojs.option_of_js
                    (fun (x5215 : Ojs.t) ->
                       union2_of_js U.t_of_js untyped_object_of_js x5215)
                    (Ojs.get_prop (t_to_js x5213) (Ojs.string_to_js x5214))
            let (set :
              t ->
                string ->
                  [ `Null  | `Undefined of undefined  | `U1 of U.t 
                  | `U2 of untyped_object ] -> unit)
              =
              fun (x5218 : t) ->
                fun (x5219 : string) ->
                  fun
                    (x5220 :
                      [ `Null  | `Undefined of undefined  | `U1 of U.t 
                      | `U2 of untyped_object ])
                    ->
                    Ojs.set_prop (t_to_js x5218) (Ojs.string_to_js x5219)
                      (match x5220 with
                       | `Null -> Ojs.null
                       | `Undefined x5221 -> undefined_to_js x5221
                       | `U1 x5222 -> U.t_to_js x5222
                       | `U2 x5223 -> untyped_object_to_js x5223)
          end
      end
    module AnonymousInterface50 =
      struct
        type 'T t = Ojs.t
        let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
          fun (type __T) ->
            fun (__T_of_js : Ojs.t -> __T) -> fun (x5225 : Ojs.t) -> x5225
        and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t =
          fun (type __T) ->
            fun (__T_to_js : __T -> Ojs.t) -> fun (x5224 : Ojs.t) -> x5224
        let (get : 'T t -> string -> 'T) =
          fun (x5226 : 'T t) ->
            fun (x5228 : string) ->
              Obj.magic
                (Ojs.get_prop (t_to_js Obj.magic x5226)
                   (Ojs.string_to_js x5228))
        let (set : 'T t -> string -> 'T -> unit) =
          fun (x5229 : 'T t) ->
            fun (x5231 : string) ->
              fun (x5232 : 'T) ->
                Ojs.set_prop (t_to_js Obj.magic x5229)
                  (Ojs.string_to_js x5231) (Obj.magic x5232)
        module Make(T:Ojs.T) =
          struct
            type 'T parent = 'T t
            let rec parent_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T parent =
              fun (type __T) ->
                fun (__T_of_js : Ojs.t -> __T) ->
                  fun (x5235 : Ojs.t) -> t_of_js __T_of_js x5235
            and parent_to_js : 'T . ('T -> Ojs.t) -> 'T parent -> Ojs.t =
              fun (type __T) ->
                fun (__T_to_js : __T -> Ojs.t) ->
                  fun (x5233 : __T t) -> t_to_js __T_to_js x5233
            type t = T.t parent
            let rec t_of_js : Ojs.t -> t =
              fun (x5239 : Ojs.t) -> parent_of_js T.t_of_js x5239
            and t_to_js : t -> Ojs.t =
              fun (x5237 : T.t parent) -> parent_to_js T.t_to_js x5237
            let (get : t -> string -> T.t) =
              fun (x5241 : t) ->
                fun (x5242 : string) ->
                  T.t_of_js
                    (Ojs.get_prop (t_to_js x5241) (Ojs.string_to_js x5242))
            let (set : t -> string -> T.t -> unit) =
              fun (x5243 : t) ->
                fun (x5244 : string) ->
                  fun (x5245 : T.t) ->
                    Ojs.set_prop (t_to_js x5243) (Ojs.string_to_js x5244)
                      (T.t_to_js x5245)
          end
      end
    module AnonymousInterface47 =
      struct
        type 'T t = Ojs.t
        let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
          fun (type __T) ->
            fun (__T_of_js : Ojs.t -> __T) -> fun (x5247 : Ojs.t) -> x5247
        and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t =
          fun (type __T) ->
            fun (__T_to_js : __T -> Ojs.t) -> fun (x5246 : Ojs.t) -> x5246
        let (get : 'T t -> string -> 'T) =
          fun (x5248 : 'T t) ->
            fun (x5250 : string) ->
              Obj.magic
                (Ojs.get_prop (t_to_js Obj.magic x5248)
                   (Ojs.string_to_js x5250))
        let (set : 'T t -> string -> 'T -> unit) =
          fun (x5251 : 'T t) ->
            fun (x5253 : string) ->
              fun (x5254 : 'T) ->
                Ojs.set_prop (t_to_js Obj.magic x5251)
                  (Ojs.string_to_js x5253) (Obj.magic x5254)
        module Make(T:Ojs.T) =
          struct
            type 'T parent = 'T t
            let rec parent_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T parent =
              fun (type __T) ->
                fun (__T_of_js : Ojs.t -> __T) ->
                  fun (x5257 : Ojs.t) -> t_of_js __T_of_js x5257
            and parent_to_js : 'T . ('T -> Ojs.t) -> 'T parent -> Ojs.t =
              fun (type __T) ->
                fun (__T_to_js : __T -> Ojs.t) ->
                  fun (x5255 : __T t) -> t_to_js __T_to_js x5255
            type t = T.t parent
            let rec t_of_js : Ojs.t -> t =
              fun (x5261 : Ojs.t) -> parent_of_js T.t_of_js x5261
            and t_to_js : t -> Ojs.t =
              fun (x5259 : T.t parent) -> parent_to_js T.t_to_js x5259
            let (get : t -> string -> T.t) =
              fun (x5263 : t) ->
                fun (x5264 : string) ->
                  T.t_of_js
                    (Ojs.get_prop (t_to_js x5263) (Ojs.string_to_js x5264))
            let (set : t -> string -> T.t -> unit) =
              fun (x5265 : t) ->
                fun (x5266 : string) ->
                  fun (x5267 : T.t) ->
                    Ojs.set_prop (t_to_js x5265) (Ojs.string_to_js x5266)
                      (T.t_to_js x5267)
          end
      end
    module AnonymousInterface26 =
      struct
        type t = Ojs.t
        let rec t_of_js : Ojs.t -> t = fun (x5269 : Ojs.t) -> x5269
        and t_to_js : t -> Ojs.t = fun (x5268 : Ojs.t) -> x5268
        let (get : t -> string -> PropertyDescriptor.t) =
          fun (x5270 : t) ->
            fun (x5271 : string) ->
              PropertyDescriptor.t_of_js
                (Ojs.get_prop (t_to_js x5270) (Ojs.string_to_js x5271))
        let (set : t -> string -> PropertyDescriptor.t -> unit) =
          fun (x5272 : t) ->
            fun (x5273 : string) ->
              fun (x5274 : PropertyDescriptor.t) ->
                Ojs.set_prop (t_to_js x5272) (Ojs.string_to_js x5273)
                  (PropertyDescriptor.t_to_js x5274)
      end
    type t = [ `Object ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type tags = [ `Object ]
    type 'tags this = 'tags intf constraint 'tags = [> `Object ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x5277 : Ojs.t) -> intf_of_js __tags_of_js x5277
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x5275 : __tags intf) -> intf_to_js __tags_to_js x5275
    let (get_constructor : 'tags this -> Function.t) =
      fun (x5279 : 'tags this) ->
        Function.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x5279) "constructor")
    let (set_constructor : 'tags this -> Function.t -> unit) =
      fun (x5281 : 'tags this) ->
        fun (x5282 : Function.t) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x5281) "constructor"
            (Function.t_to_js x5282)
    let (toString : 'tags this -> string) =
      fun (x5284 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x5284) "toString" [||])
    let (toLocaleString : 'tags this -> string) =
      fun (x5286 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x5286) "toLocaleString" [||])
    let (valueOf : 'tags this -> t) =
      fun (x5288 : 'tags this) ->
        t_of_js (Ojs.call (this_to_js Obj.magic x5288) "valueOf" [||])
    let (hasOwnProperty : 'tags this -> v:PropertyKey.t -> bool) =
      fun (x5291 : 'tags this) ->
        fun ~v:(x5290 : PropertyKey.t) ->
          Ojs.bool_of_js
            (Ojs.call (this_to_js Obj.magic x5291) "hasOwnProperty"
               [|(PropertyKey.t_to_js x5290)|])
    let (isPrototypeOf : 'tags this -> v:t -> bool) =
      fun (x5294 : 'tags this) ->
        fun ~v:(x5293 : t) ->
          Ojs.bool_of_js
            (Ojs.call (this_to_js Obj.magic x5294) "isPrototypeOf"
               [|(t_to_js x5293)|])
    let (propertyIsEnumerable : 'tags this -> v:PropertyKey.t -> bool) =
      fun (x5297 : 'tags this) ->
        fun ~v:(x5296 : PropertyKey.t) ->
          Ojs.bool_of_js
            (Ojs.call (this_to_js Obj.magic x5297) "propertyIsEnumerable"
               [|(PropertyKey.t_to_js x5296)|])
    let (hasOwn : o:untyped_object -> v:PropertyKey.t -> bool) =
      fun ~o:(x5299 : untyped_object) ->
        fun ~v:(x5300 : PropertyKey.t) ->
          Ojs.bool_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "hasOwn"
               [|(untyped_object_to_js x5299);(PropertyKey.t_to_js x5300)|])
    let (fromEntries :
      (PropertyKey.t * 'T) Iterable.t -> 'T AnonymousInterface47.t) =
      fun (x5301 : (PropertyKey.t * 'T) Iterable.t) ->
        AnonymousInterface47.t_of_js Obj.magic
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "fromEntries"
             [|(Iterable.t_to_js
                  (fun (x5302 : (PropertyKey.t * 'T)) ->
                     let (x5303, x5304) = x5302 in
                     let x5305 = Ojs.array_make 2 in
                     Ojs.array_set x5305 0 (PropertyKey.t_to_js x5303);
                     Ojs.array_set x5305 1 (Obj.magic x5304);
                     x5305) x5301)|])
    let (fromEntries' : any list Iterable.t -> any) =
      fun (x5307 : any list Iterable.t) ->
        any_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "fromEntries"
             [|(Iterable.t_to_js
                  (fun (x5308 : any list) -> Ojs.list_to_js any_to_js x5308)
                  x5307)|])
    let (values :
      [ `U1 of 'T AnonymousInterface50.t  | `U2 of 'T ArrayLike.t ] ->
        'T list)
      =
      fun
        (x5310 :
          [ `U1 of 'T AnonymousInterface50.t  | `U2 of 'T ArrayLike.t ])
        ->
        Ojs.list_of_js Obj.magic
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "values"
             [|((match x5310 with
                 | `U1 x5311 -> AnonymousInterface50.t_to_js Obj.magic x5311
                 | `U2 x5313 -> ArrayLike.t_to_js Obj.magic x5313))|])
    let (values' : untyped_object -> any list) =
      fun (x5316 : untyped_object) ->
        Ojs.list_of_js any_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "values"
             [|(untyped_object_to_js x5316)|])
    let (entries :
      [ `U1 of 'T AnonymousInterface50.t  | `U2 of 'T ArrayLike.t ] ->
        (string * 'T) list)
      =
      fun
        (x5318 :
          [ `U1 of 'T AnonymousInterface50.t  | `U2 of 'T ArrayLike.t ])
        ->
        Ojs.list_of_js
          (fun (x5323 : Ojs.t) ->
             let x5324 = x5323 in
             ((Ojs.string_of_js (Ojs.array_get x5324 0)),
               (Obj.magic (Ojs.array_get x5324 1))))
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "entries"
             [|((match x5318 with
                 | `U1 x5319 -> AnonymousInterface50.t_to_js Obj.magic x5319
                 | `U2 x5321 -> ArrayLike.t_to_js Obj.magic x5321))|])
    let (entries' : untyped_object -> (string * any) list) =
      fun (x5325 : untyped_object) ->
        Ojs.list_of_js
          (fun (x5326 : Ojs.t) ->
             let x5327 = x5326 in
             ((Ojs.string_of_js (Ojs.array_get x5327 0)),
               (any_of_js (Ojs.array_get x5327 1))))
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "entries"
             [|(untyped_object_to_js x5325)|])
    let (getOwnPropertyDescriptors :
      'T -> (any, AnonymousInterface26.t) intersection2) =
      fun (x5328 : 'T) ->
        intersection2_of_js any_of_js AnonymousInterface26.t_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object")
             "getOwnPropertyDescriptors" [|(Obj.magic x5328)|])
    let (assign : target:'T -> source:'U -> ('T, 'U) intersection2) =
      fun ~target:(x5331 : 'T) ->
        fun ~source:(x5332 : 'U) ->
          intersection2_of_js Obj.magic Obj.magic
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "assign"
               [|(Obj.magic x5331);(Obj.magic x5332)|])
    let (assign' :
      target:'T -> source1:'U -> source2:'V -> ('T, 'U, 'V) intersection3) =
      fun ~target:(x5335 : 'T) ->
        fun ~source1:(x5336 : 'U) ->
          fun ~source2:(x5337 : 'V) ->
            intersection3_of_js Obj.magic Obj.magic Obj.magic
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "assign"
                 [|(Obj.magic x5335);(Obj.magic x5336);(Obj.magic x5337)|])
    let (assign'' :
      target:'T ->
        source1:'U ->
          source2:'V -> source3:'W -> ('T, 'U, 'V, 'W) intersection4)
      =
      fun ~target:(x5341 : 'T) ->
        fun ~source1:(x5342 : 'U) ->
          fun ~source2:(x5343 : 'V) ->
            fun ~source3:(x5344 : 'W) ->
              intersection4_of_js Obj.magic Obj.magic Obj.magic Obj.magic
                (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "assign"
                   [|(Obj.magic x5341);(Obj.magic x5342);(Obj.magic x5343);(
                     Obj.magic x5344)|])
    let (assign''' : target:untyped_object -> sources:any list -> any) =
      fun ~target:(x5349 : untyped_object) ->
        fun ~sources:(x5350 : any list) ->
          any_of_js
            (let x5353 = Ojs.get_prop_ascii Ojs.global "Object" in
             Ojs.call (Ojs.get_prop_ascii x5353 "assign") "apply"
               [|x5353;((let x5351 =
                           Ojs.new_obj
                             (Ojs.get_prop_ascii Ojs.global "Array") 
                             [||] in
                         ignore
                           (Ojs.call x5351 "push"
                              [|(untyped_object_to_js x5349)|]);
                         List.iter
                           (fun (x5352 : any) ->
                              ignore
                                (Ojs.call x5351 "push" [|(any_to_js x5352)|]))
                           x5350;
                         x5351))|])
    let (getOwnPropertySymbols : any -> symbol list) =
      fun (x5354 : any) ->
        Ojs.list_of_js symbol_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object")
             "getOwnPropertySymbols" [|(any_to_js x5354)|])
    let (keys : untyped_object -> string list) =
      fun (x5356 : untyped_object) ->
        Ojs.list_of_js Ojs.string_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "keys"
             [|(untyped_object_to_js x5356)|])
    let (is : value1:any -> value2:any -> bool) =
      fun ~value1:(x5358 : any) ->
        fun ~value2:(x5359 : any) ->
          Ojs.bool_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "is"
               [|(any_to_js x5358);(any_to_js x5359)|])
    let (setPrototypeOf : o:any -> proto:untyped_object option -> any) =
      fun ~o:(x5360 : any) ->
        fun ~proto:(x5361 : untyped_object option) ->
          any_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object")
               "setPrototypeOf"
               [|(any_to_js x5360);(Ojs.option_to_js untyped_object_to_js
                                      x5361)|])
    let (create : ?value:any -> unit -> t) =
      fun ?value:(x5363 : any option) ->
        fun () ->
          t_of_js
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "Object")
               (let x5364 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x5363 with
                 | Some x5365 ->
                     ignore (Ojs.call x5364 "push" [|(any_to_js x5365)|])
                 | None -> ());
                x5364))
    let (invoke : unit -> any) =
      fun () ->
        any_of_js (Ojs.apply (Ojs.get_prop_ascii Ojs.global "Object") [||])
    let (invoke' : any -> any) =
      fun (x5366 : any) ->
        any_of_js
          (Ojs.apply (Ojs.get_prop_ascii Ojs.global "Object")
             [|(any_to_js x5366)|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Object")
             "prototype")
    let (getPrototypeOf : any -> any) =
      fun (x5367 : any) ->
        any_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "getPrototypeOf"
             [|(any_to_js x5367)|])
    let (getOwnPropertyDescriptor :
      o:any -> p:PropertyKey.t -> PropertyDescriptor.t option) =
      fun ~o:(x5368 : any) ->
        fun ~p:(x5369 : PropertyKey.t) ->
          Ojs.option_of_js PropertyDescriptor.t_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object")
               "getOwnPropertyDescriptor"
               [|(any_to_js x5368);(PropertyKey.t_to_js x5369)|])
    let (getOwnPropertyNames : any -> string list) =
      fun (x5371 : any) ->
        Ojs.list_of_js Ojs.string_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object")
             "getOwnPropertyNames" [|(any_to_js x5371)|])
    let (create_ : untyped_object option -> any) =
      fun (x5373 : untyped_object option) ->
        any_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "create"
             [|(Ojs.option_to_js untyped_object_to_js x5373)|])
    let (create_' :
      o:untyped_object option ->
        properties:(PropertyDescriptorMap.t, any ThisType.t) intersection2 ->
          any)
      =
      fun ~o:(x5375 : untyped_object option) ->
        fun
          ~properties:(x5377 :
                        (PropertyDescriptorMap.t, any ThisType.t)
                          intersection2)
          ->
          any_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "create"
               [|(Ojs.option_to_js untyped_object_to_js x5375);(intersection2_to_js
                                                                  PropertyDescriptorMap.t_to_js
                                                                  (fun
                                                                    (x5379 :
                                                                    any
                                                                    ThisType.t)
                                                                    ->
                                                                    ThisType.t_to_js
                                                                    any_to_js
                                                                    x5379)
                                                                  x5377)|])
    let (defineProperty :
      o:'T ->
        p:PropertyKey.t ->
          attributes:(PropertyDescriptor.t, any ThisType.t) intersection2 ->
            'T)
      =
      fun ~o:(x5381 : 'T) ->
        fun ~p:(x5382 : PropertyKey.t) ->
          fun
            ~attributes:(x5383 :
                          (PropertyDescriptor.t, any ThisType.t)
                            intersection2)
            ->
            Obj.magic
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object")
                 "defineProperty"
                 [|(Obj.magic x5381);(PropertyKey.t_to_js x5382);(intersection2_to_js
                                                                    PropertyDescriptor.t_to_js
                                                                    (
                                                                    fun
                                                                    (x5385 :
                                                                    any
                                                                    ThisType.t)
                                                                    ->
                                                                    ThisType.t_to_js
                                                                    any_to_js
                                                                    x5385)
                                                                    x5383)|])
    let (defineProperties :
      o:'T ->
        properties:(PropertyDescriptorMap.t, any ThisType.t) intersection2 ->
          'T)
      =
      fun ~o:(x5387 : 'T) ->
        fun
          ~properties:(x5388 :
                        (PropertyDescriptorMap.t, any ThisType.t)
                          intersection2)
          ->
          Obj.magic
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object")
               "defineProperties"
               [|(Obj.magic x5387);(intersection2_to_js
                                      PropertyDescriptorMap.t_to_js
                                      (fun (x5390 : any ThisType.t) ->
                                         ThisType.t_to_js any_to_js x5390)
                                      x5388)|])
    let (seal : 'T -> 'T) =
      fun (x5392 : 'T) ->
        Obj.magic
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "seal"
             [|(Obj.magic x5392)|])
    let (freeze : 'T -> 'T) =
      fun (x5393 : 'T) ->
        Obj.magic
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "freeze"
             [|(Obj.magic x5393)|])
    let (freeze' : 'T -> 'T Readonly.t) =
      fun (x5394 : 'T) ->
        Readonly.t_of_js Obj.magic
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "freeze"
             [|(Obj.magic x5394)|])
    let (freeze'' : 'T -> 'T Readonly.t) =
      fun (x5396 : 'T) ->
        Readonly.t_of_js Obj.magic
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "freeze"
             [|(Obj.magic x5396)|])
    let (preventExtensions : 'T -> 'T) =
      fun (x5398 : 'T) ->
        Obj.magic
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object")
             "preventExtensions" [|(Obj.magic x5398)|])
    let (isSealed : any -> bool) =
      fun (x5399 : any) ->
        Ojs.bool_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "isSealed"
             [|(any_to_js x5399)|])
    let (isFrozen : any -> bool) =
      fun (x5400 : any) ->
        Ojs.bool_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "isFrozen"
             [|(any_to_js x5400)|])
    let (isExtensible : any -> bool) =
      fun (x5401 : any) ->
        Ojs.bool_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "isExtensible"
             [|(any_to_js x5401)|])
    let (keys' : untyped_object -> string list) =
      fun (x5402 : untyped_object) ->
        Ojs.list_of_js Ojs.string_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "keys"
             [|(untyped_object_to_js x5402)|])
    let cast_from = Obj.magic
  end
module Number =
  struct
    type t = [ `Number ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type tags = [ `Number ]
    type 'tags this = 'tags intf constraint 'tags = [> `Number ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x5406 : Ojs.t) -> intf_of_js __tags_of_js x5406
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x5404 : __tags intf) -> intf_to_js __tags_to_js x5404
    let (toLocaleString :
      'tags this ->
        ?locales:Intl.LocalesArgument.t ->
          ?options:Intl.NumberFormatOptions.t -> unit -> string)
      =
      fun (x5413 : 'tags this) ->
        fun ?locales:(x5408 : Intl.LocalesArgument.t option) ->
          fun ?options:(x5409 : Intl.NumberFormatOptions.t option) ->
            fun () ->
              Ojs.string_of_js
                (let x5415 = this_to_js Obj.magic x5413 in
                 Ojs.call (Ojs.get_prop_ascii x5415 "toLocaleString") "apply"
                   [|x5415;((let x5410 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x5408 with
                              | Some x5412 ->
                                  ignore
                                    (Ojs.call x5410 "push"
                                       [|(Intl.LocalesArgument.t_to_js x5412)|])
                              | None -> ());
                             (match x5409 with
                              | Some x5411 ->
                                  ignore
                                    (Ojs.call x5410 "push"
                                       [|(Intl.NumberFormatOptions.t_to_js
                                            x5411)|])
                              | None -> ());
                             x5410))|])
    let (toLocaleString' :
      'tags this ->
        ?locales:[ `U1 of string  | `U2 of string list ] ->
          ?options:Intl.NumberFormatOptions.t -> unit -> string)
      =
      fun (x5424 : 'tags this) ->
        fun ?locales:(x5416 : [ `U1 of string  | `U2 of string list ] option)
          ->
          fun ?options:(x5417 : Intl.NumberFormatOptions.t option) ->
            fun () ->
              Ojs.string_of_js
                (let x5426 = this_to_js Obj.magic x5424 in
                 Ojs.call (Ojs.get_prop_ascii x5426 "toLocaleString") "apply"
                   [|x5426;((let x5418 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x5416 with
                              | Some x5420 ->
                                  ignore
                                    (Ojs.call x5418 "push"
                                       [|((match x5420 with
                                           | `U1 x5421 ->
                                               Ojs.string_to_js x5421
                                           | `U2 x5422 ->
                                               Ojs.list_to_js
                                                 Ojs.string_to_js x5422))|])
                              | None -> ());
                             (match x5417 with
                              | Some x5419 ->
                                  ignore
                                    (Ojs.call x5418 "push"
                                       [|(Intl.NumberFormatOptions.t_to_js
                                            x5419)|])
                              | None -> ());
                             x5418))|])
    let (toString : 'tags this -> ?radix:float -> unit -> string) =
      fun (x5430 : 'tags this) ->
        fun ?radix:(x5427 : float option) ->
          fun () ->
            Ojs.string_of_js
              (let x5432 = this_to_js Obj.magic x5430 in
               Ojs.call (Ojs.get_prop_ascii x5432 "toString") "apply"
                 [|x5432;((let x5428 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x5427 with
                            | Some x5429 ->
                                ignore
                                  (Ojs.call x5428 "push"
                                     [|(Ojs.float_to_js x5429)|])
                            | None -> ());
                           x5428))|])
    let (toFixed : 'tags this -> ?fractionDigits:float -> unit -> string) =
      fun (x5436 : 'tags this) ->
        fun ?fractionDigits:(x5433 : float option) ->
          fun () ->
            Ojs.string_of_js
              (let x5438 = this_to_js Obj.magic x5436 in
               Ojs.call (Ojs.get_prop_ascii x5438 "toFixed") "apply"
                 [|x5438;((let x5434 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x5433 with
                            | Some x5435 ->
                                ignore
                                  (Ojs.call x5434 "push"
                                     [|(Ojs.float_to_js x5435)|])
                            | None -> ());
                           x5434))|])
    let (toExponential :
      'tags this -> ?fractionDigits:float -> unit -> string) =
      fun (x5442 : 'tags this) ->
        fun ?fractionDigits:(x5439 : float option) ->
          fun () ->
            Ojs.string_of_js
              (let x5444 = this_to_js Obj.magic x5442 in
               Ojs.call (Ojs.get_prop_ascii x5444 "toExponential") "apply"
                 [|x5444;((let x5440 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x5439 with
                            | Some x5441 ->
                                ignore
                                  (Ojs.call x5440 "push"
                                     [|(Ojs.float_to_js x5441)|])
                            | None -> ());
                           x5440))|])
    let (toPrecision : 'tags this -> ?precision:float -> unit -> string) =
      fun (x5448 : 'tags this) ->
        fun ?precision:(x5445 : float option) ->
          fun () ->
            Ojs.string_of_js
              (let x5450 = this_to_js Obj.magic x5448 in
               Ojs.call (Ojs.get_prop_ascii x5450 "toPrecision") "apply"
                 [|x5450;((let x5446 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x5445 with
                            | Some x5447 ->
                                ignore
                                  (Ojs.call x5446 "push"
                                     [|(Ojs.float_to_js x5447)|])
                            | None -> ());
                           x5446))|])
    let (valueOf : 'tags this -> float) =
      fun (x5451 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x5451) "valueOf" [||])
    let (epsilon : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Number")
             "EPSILON")
    let (isFinite : unknown -> bool) =
      fun (x5453 : unknown) ->
        Ojs.bool_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Number") "isFinite"
             [|(unknown_to_js x5453)|])
    let (isInteger : unknown -> bool) =
      fun (x5454 : unknown) ->
        Ojs.bool_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Number") "isInteger"
             [|(unknown_to_js x5454)|])
    let (isNaN : unknown -> bool) =
      fun (x5455 : unknown) ->
        Ojs.bool_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Number") "isNaN"
             [|(unknown_to_js x5455)|])
    let (isSafeInteger : unknown -> bool) =
      fun (x5456 : unknown) ->
        Ojs.bool_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Number") "isSafeInteger"
             [|(unknown_to_js x5456)|])
    let (max_safe_integer : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Number")
             "MAX_SAFE_INTEGER")
    let (min_safe_integer : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Number")
             "MIN_SAFE_INTEGER")
    let (parseFloat : string -> float) =
      fun (x5457 : string) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Number") "parseFloat"
             [|(Ojs.string_to_js x5457)|])
    let (parseInt : string:string -> ?radix:float -> unit -> float) =
      fun ~string:(x5458 : string) ->
        fun ?radix:(x5459 : float option) ->
          fun () ->
            Ojs.float_of_js
              (let x5462 = Ojs.get_prop_ascii Ojs.global "Number" in
               Ojs.call (Ojs.get_prop_ascii x5462 "parseInt") "apply"
                 [|x5462;((let x5460 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           ignore
                             (Ojs.call x5460 "push"
                                [|(Ojs.string_to_js x5458)|]);
                           (match x5459 with
                            | Some x5461 ->
                                ignore
                                  (Ojs.call x5460 "push"
                                     [|(Ojs.float_to_js x5461)|])
                            | None -> ());
                           x5460))|])
    let (create : ?value:any -> unit -> t) =
      fun ?value:(x5463 : any option) ->
        fun () ->
          t_of_js
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "Number")
               (let x5464 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x5463 with
                 | Some x5465 ->
                     ignore (Ojs.call x5464 "push" [|(any_to_js x5465)|])
                 | None -> ());
                x5464))
    let (invoke : ?value:any -> unit -> float) =
      fun ?value:(x5466 : any option) ->
        fun () ->
          Ojs.float_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "Number") "apply"
               [|Ojs.null;((let x5467 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x5466 with
                             | Some x5468 ->
                                 ignore
                                   (Ojs.call x5467 "push"
                                      [|(any_to_js x5468)|])
                             | None -> ());
                            x5467))|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Number")
             "prototype")
    let (max_value : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Number")
             "MAX_VALUE")
    let (min_value : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Number")
             "MIN_VALUE")
    let (nan : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Number") "NaN")
    let (negative_infinity : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Number")
             "NEGATIVE_INFINITY")
    let (positive_infinity : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Number")
             "POSITIVE_INFINITY")
    let cast_from = Obj.magic
    let (of_ml : float -> t) =
      fun (x5469 : float) -> t_of_js (Ojs.float_to_js x5469)
    let (to_ml : t -> float) =
      fun (x5470 : t) ->
        Ojs.float_of_js (Ojs.call (t_to_js x5470) "valueOf" [||])
  end
module NonNullable =
  struct
    type 'T t = ('T, untyped_object) intersection2
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun (type __T) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x5474 : Ojs.t) ->
            intersection2_of_js __T_of_js untyped_object_of_js x5474
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t =
      fun (type __T) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x5471 : (__T, untyped_object) intersection2) ->
            intersection2_to_js __T_to_js untyped_object_to_js x5471
  end
module NewableFunction =
  struct
    module AnonymousInterface45 =
      struct
        type 'T t = Ojs.t
        let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
          fun (type __T) ->
            fun (__T_of_js : Ojs.t -> __T) -> fun (x5478 : Ojs.t) -> x5478
        and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t =
          fun (type __T) ->
            fun (__T_to_js : __T -> Ojs.t) -> fun (x5477 : Ojs.t) -> x5477
        let (create : 'T t -> 'T) =
          fun (x5479 : 'T t) ->
            Obj.magic (Ojs.new_obj (t_to_js Obj.magic x5479) [||])
        module Make(T:Ojs.T) =
          struct
            type 'T parent = 'T t
            let rec parent_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T parent =
              fun (type __T) ->
                fun (__T_of_js : Ojs.t -> __T) ->
                  fun (x5483 : Ojs.t) -> t_of_js __T_of_js x5483
            and parent_to_js : 'T . ('T -> Ojs.t) -> 'T parent -> Ojs.t =
              fun (type __T) ->
                fun (__T_to_js : __T -> Ojs.t) ->
                  fun (x5481 : __T t) -> t_to_js __T_to_js x5481
            type t = T.t parent
            let rec t_of_js : Ojs.t -> t =
              fun (x5487 : Ojs.t) -> parent_of_js T.t_of_js x5487
            and t_to_js : t -> Ojs.t =
              fun (x5485 : T.t parent) -> parent_to_js T.t_to_js x5485
            let (create : t -> T.t) =
              fun (x5489 : t) -> T.t_of_js (Ojs.new_obj (t_to_js x5489) [||])
          end
      end
    module AnonymousInterface41 =
      struct
        type 'R t = Ojs.t
        let rec t_of_js : 'R . (Ojs.t -> 'R) -> Ojs.t -> 'R t =
          fun (type __R) ->
            fun (__R_of_js : Ojs.t -> __R) -> fun (x5491 : Ojs.t) -> x5491
        and t_to_js : 'R . ('R -> Ojs.t) -> 'R t -> Ojs.t =
          fun (type __R) ->
            fun (__R_to_js : __R -> Ojs.t) -> fun (x5490 : Ojs.t) -> x5490
        let (create : 'R t -> args:any list -> 'R) =
          fun (x5495 : 'R t) ->
            fun ~args:(x5492 : any list) ->
              Obj.magic
                (Ojs.new_obj_arr (t_to_js Obj.magic x5495)
                   (let x5493 =
                      Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                        [||] in
                    List.iter
                      (fun (x5494 : any) ->
                         ignore (Ojs.call x5493 "push" [|(any_to_js x5494)|]))
                      x5492;
                    x5493))
        module Make(R:Ojs.T) =
          struct
            type 'R parent = 'R t
            let rec parent_of_js : 'R . (Ojs.t -> 'R) -> Ojs.t -> 'R parent =
              fun (type __R) ->
                fun (__R_of_js : Ojs.t -> __R) ->
                  fun (x5499 : Ojs.t) -> t_of_js __R_of_js x5499
            and parent_to_js : 'R . ('R -> Ojs.t) -> 'R parent -> Ojs.t =
              fun (type __R) ->
                fun (__R_to_js : __R -> Ojs.t) ->
                  fun (x5497 : __R t) -> t_to_js __R_to_js x5497
            type t = R.t parent
            let rec t_of_js : Ojs.t -> t =
              fun (x5503 : Ojs.t) -> parent_of_js R.t_of_js x5503
            and t_to_js : t -> Ojs.t =
              fun (x5501 : R.t parent) -> parent_to_js R.t_to_js x5501
            let (create : t -> args:any list -> R.t) =
              fun (x5508 : t) ->
                fun ~args:(x5505 : any list) ->
                  R.t_of_js
                    (Ojs.new_obj_arr (t_to_js x5508)
                       (let x5506 =
                          Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                            [||] in
                        List.iter
                          (fun (x5507 : any) ->
                             ignore
                               (Ojs.call x5506 "push" [|(any_to_js x5507)|]))
                          x5505;
                        x5506))
          end
      end
    module AnonymousInterface39 =
      struct
        type ('B, 'R) t = Ojs.t
        let rec t_of_js :
          'B 'R . (Ojs.t -> 'B) -> (Ojs.t -> 'R) -> Ojs.t -> ('B, 'R) t =
          fun (type __B) ->
            fun (type __R) ->
              fun (__B_of_js : Ojs.t -> __B) ->
                fun (__R_of_js : Ojs.t -> __R) ->
                  fun (x5510 : Ojs.t) -> x5510
        and t_to_js :
          'B 'R . ('B -> Ojs.t) -> ('R -> Ojs.t) -> ('B, 'R) t -> Ojs.t =
          fun (type __B) ->
            fun (type __R) ->
              fun (__B_to_js : __B -> Ojs.t) ->
                fun (__R_to_js : __R -> Ojs.t) ->
                  fun (x5509 : Ojs.t) -> x5509
        let (create : ('B, 'R) t -> args:any list -> 'R) =
          fun (x5514 : ('B, 'R) t) ->
            fun ~args:(x5511 : any list) ->
              Obj.magic
                (Ojs.new_obj_arr (t_to_js Obj.magic Obj.magic x5514)
                   (let x5512 =
                      Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                        [||] in
                    List.iter
                      (fun (x5513 : any) ->
                         ignore (Ojs.call x5512 "push" [|(any_to_js x5513)|]))
                      x5511;
                    x5512))
        module Make(B:Ojs.T)(R:Ojs.T) =
          struct
            type ('B, 'R) parent = ('B, 'R) t
            let rec parent_of_js :
              'B 'R .
                (Ojs.t -> 'B) -> (Ojs.t -> 'R) -> Ojs.t -> ('B, 'R) parent
              =
              fun (type __B) ->
                fun (type __R) ->
                  fun (__B_of_js : Ojs.t -> __B) ->
                    fun (__R_of_js : Ojs.t -> __R) ->
                      fun (x5520 : Ojs.t) ->
                        t_of_js __B_of_js __R_of_js x5520
            and parent_to_js :
              'B 'R .
                ('B -> Ojs.t) -> ('R -> Ojs.t) -> ('B, 'R) parent -> Ojs.t
              =
              fun (type __B) ->
                fun (type __R) ->
                  fun (__B_to_js : __B -> Ojs.t) ->
                    fun (__R_to_js : __R -> Ojs.t) ->
                      fun (x5517 : (__B, __R) t) ->
                        t_to_js __B_to_js __R_to_js x5517
            type t = (B.t, R.t) parent
            let rec t_of_js : Ojs.t -> t =
              fun (x5526 : Ojs.t) -> parent_of_js B.t_of_js R.t_of_js x5526
            and t_to_js : t -> Ojs.t =
              fun (x5523 : (B.t, R.t) parent) ->
                parent_to_js B.t_to_js R.t_to_js x5523
            let (create : t -> args:any list -> R.t) =
              fun (x5532 : t) ->
                fun ~args:(x5529 : any list) ->
                  R.t_of_js
                    (Ojs.new_obj_arr (t_to_js x5532)
                       (let x5530 =
                          Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                            [||] in
                        List.iter
                          (fun (x5531 : any) ->
                             ignore
                               (Ojs.call x5530 "push" [|(any_to_js x5531)|]))
                          x5529;
                        x5530))
          end
      end
    module AnonymousInterface37 =
      struct
        type ('A, 'T) t = Ojs.t
        let rec t_of_js :
          'A 'T . (Ojs.t -> 'A) -> (Ojs.t -> 'T) -> Ojs.t -> ('A, 'T) t =
          fun (type __A) ->
            fun (type __T) ->
              fun (__A_of_js : Ojs.t -> __A) ->
                fun (__T_of_js : Ojs.t -> __T) ->
                  fun (x5534 : Ojs.t) -> x5534
        and t_to_js :
          'A 'T . ('A -> Ojs.t) -> ('T -> Ojs.t) -> ('A, 'T) t -> Ojs.t =
          fun (type __A) ->
            fun (type __T) ->
              fun (__A_to_js : __A -> Ojs.t) ->
                fun (__T_to_js : __T -> Ojs.t) ->
                  fun (x5533 : Ojs.t) -> x5533
        let (create : ('A, 'T) t -> args:any list -> 'T) =
          fun (x5538 : ('A, 'T) t) ->
            fun ~args:(x5535 : any list) ->
              Obj.magic
                (Ojs.new_obj_arr (t_to_js Obj.magic Obj.magic x5538)
                   (let x5536 =
                      Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                        [||] in
                    List.iter
                      (fun (x5537 : any) ->
                         ignore (Ojs.call x5536 "push" [|(any_to_js x5537)|]))
                      x5535;
                    x5536))
        module Make(A:Ojs.T)(T:Ojs.T) =
          struct
            type ('A, 'T) parent = ('A, 'T) t
            let rec parent_of_js :
              'A 'T .
                (Ojs.t -> 'A) -> (Ojs.t -> 'T) -> Ojs.t -> ('A, 'T) parent
              =
              fun (type __A) ->
                fun (type __T) ->
                  fun (__A_of_js : Ojs.t -> __A) ->
                    fun (__T_of_js : Ojs.t -> __T) ->
                      fun (x5544 : Ojs.t) ->
                        t_of_js __A_of_js __T_of_js x5544
            and parent_to_js :
              'A 'T .
                ('A -> Ojs.t) -> ('T -> Ojs.t) -> ('A, 'T) parent -> Ojs.t
              =
              fun (type __A) ->
                fun (type __T) ->
                  fun (__A_to_js : __A -> Ojs.t) ->
                    fun (__T_to_js : __T -> Ojs.t) ->
                      fun (x5541 : (__A, __T) t) ->
                        t_to_js __A_to_js __T_to_js x5541
            type t = (A.t, T.t) parent
            let rec t_of_js : Ojs.t -> t =
              fun (x5550 : Ojs.t) -> parent_of_js A.t_of_js T.t_of_js x5550
            and t_to_js : t -> Ojs.t =
              fun (x5547 : (A.t, T.t) parent) ->
                parent_to_js A.t_to_js T.t_to_js x5547
            let (create : t -> args:any list -> T.t) =
              fun (x5556 : t) ->
                fun ~args:(x5553 : any list) ->
                  T.t_of_js
                    (Ojs.new_obj_arr (t_to_js x5556)
                       (let x5554 =
                          Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                            [||] in
                        List.iter
                          (fun (x5555 : any) ->
                             ignore
                               (Ojs.call x5554 "push" [|(any_to_js x5555)|]))
                          x5553;
                        x5554))
          end
      end
    type t = [ `Function  | `Function  | `NewableFunction ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type tags = [ `Function  | `Function  | `NewableFunction ]
    type 'tags this = 'tags intf constraint 'tags = [> `NewableFunction ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x5559 : Ojs.t) -> intf_of_js __tags_of_js x5559
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x5557 : __tags intf) -> intf_to_js __tags_to_js x5557
    let (apply_ :
      'tags this -> this:'T AnonymousInterface45.t -> thisArg:'T -> unit) =
      fun (x5564 : 'tags this) ->
        fun ~this:(x5561 : 'T AnonymousInterface45.t) ->
          fun ~thisArg:(x5563 : 'T) ->
            ignore
              (Ojs.call (this_to_js Obj.magic x5564) "apply"
                 [|(AnonymousInterface45.t_to_js Obj.magic x5561);(Obj.magic
                                                                    x5563)|])
    let (apply_' :
      'tags this ->
        this:('A, 'T) AnonymousInterface37.t -> thisArg:'T -> args:'A -> unit)
      =
      fun (x5571 : 'tags this) ->
        fun ~this:(x5566 : ('A, 'T) AnonymousInterface37.t) ->
          fun ~thisArg:(x5569 : 'T) ->
            fun ~args:(x5570 : 'A) ->
              ignore
                (Ojs.call (this_to_js Obj.magic x5571) "apply"
                   [|(AnonymousInterface37.t_to_js Obj.magic Obj.magic x5566);(
                     Obj.magic x5569);(Obj.magic x5570)|])
    let (call :
      'tags this ->
        this:('A, 'T) AnonymousInterface37.t ->
          thisArg:'T -> args:any list -> unit)
      =
      fun (x5580 : 'tags this) ->
        fun ~this:(x5573 : ('A, 'T) AnonymousInterface37.t) ->
          fun ~thisArg:(x5574 : 'T) ->
            fun ~args:(x5575 : any list) ->
              ignore
                (let x5582 = this_to_js Obj.magic x5580 in
                 Ojs.call (Ojs.get_prop_ascii x5582 "call") "apply"
                   [|x5582;((let x5576 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x5576 "push"
                                  [|(AnonymousInterface37.t_to_js Obj.magic
                                       Obj.magic x5573)|]);
                             ignore
                               (Ojs.call x5576 "push" [|(Obj.magic x5574)|]);
                             List.iter
                               (fun (x5577 : any) ->
                                  ignore
                                    (Ojs.call x5576 "push"
                                       [|(any_to_js x5577)|])) x5575;
                             x5576))|])
    let (bind : 'tags this -> this:'T -> thisArg:any -> 'T) =
      fun (x5585 : 'tags this) ->
        fun ~this:(x5583 : 'T) ->
          fun ~thisArg:(x5584 : any) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic x5585) "bind"
                 [|(Obj.magic x5583);(any_to_js x5584)|])
    let (bind' :
      'tags this ->
        this:'R AnonymousInterface41.t ->
          thisArg:any -> args:any list -> ('B, 'R) AnonymousInterface39.t)
      =
      fun (x5593 : 'tags this) ->
        fun ~this:(x5587 : 'R AnonymousInterface41.t) ->
          fun ~thisArg:(x5588 : any) ->
            fun ~args:(x5589 : any list) ->
              AnonymousInterface39.t_of_js Obj.magic Obj.magic
                (let x5595 = this_to_js Obj.magic x5593 in
                 Ojs.call (Ojs.get_prop_ascii x5595 "bind") "apply"
                   [|x5595;((let x5590 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x5590 "push"
                                  [|(AnonymousInterface41.t_to_js Obj.magic
                                       x5587)|]);
                             ignore
                               (Ojs.call x5590 "push" [|(any_to_js x5588)|]);
                             List.iter
                               (fun (x5591 : any) ->
                                  ignore
                                    (Ojs.call x5590 "push"
                                       [|(any_to_js x5591)|])) x5589;
                             x5590))|])
    let cast_from = Obj.magic
  end
module Math =
  struct
    let (clz32 : float -> float) =
      fun (x5598 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "clz32"
             [|(Ojs.float_to_js x5598)|])
    let (imul : x:float -> y:float -> float) =
      fun ~x:(x5599 : float) ->
        fun ~y:(x5600 : float) ->
          Ojs.float_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "imul"
               [|(Ojs.float_to_js x5599);(Ojs.float_to_js x5600)|])
    let (sign : float -> float) =
      fun (x5601 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "sign"
             [|(Ojs.float_to_js x5601)|])
    let (log10 : float -> float) =
      fun (x5602 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "log10"
             [|(Ojs.float_to_js x5602)|])
    let (log2 : float -> float) =
      fun (x5603 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "log2"
             [|(Ojs.float_to_js x5603)|])
    let (log1p : float -> float) =
      fun (x5604 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "log1p"
             [|(Ojs.float_to_js x5604)|])
    let (expm1 : float -> float) =
      fun (x5605 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "expm1"
             [|(Ojs.float_to_js x5605)|])
    let (cosh : float -> float) =
      fun (x5606 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "cosh"
             [|(Ojs.float_to_js x5606)|])
    let (sinh : float -> float) =
      fun (x5607 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "sinh"
             [|(Ojs.float_to_js x5607)|])
    let (tanh : float -> float) =
      fun (x5608 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "tanh"
             [|(Ojs.float_to_js x5608)|])
    let (acosh : float -> float) =
      fun (x5609 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "acosh"
             [|(Ojs.float_to_js x5609)|])
    let (asinh : float -> float) =
      fun (x5610 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "asinh"
             [|(Ojs.float_to_js x5610)|])
    let (atanh : float -> float) =
      fun (x5611 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "atanh"
             [|(Ojs.float_to_js x5611)|])
    let (hypot : float list -> float) =
      fun (x5612 : float list) ->
        Ojs.float_of_js
          (let x5615 = Ojs.get_prop_ascii Ojs.global "Math" in
           Ojs.call (Ojs.get_prop_ascii x5615 "hypot") "apply"
             [|x5615;((let x5613 =
                         Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                           [||] in
                       List.iter
                         (fun (x5614 : float) ->
                            ignore
                              (Ojs.call x5613 "push"
                                 [|(Ojs.float_to_js x5614)|])) x5612;
                       x5613))|])
    let (trunc : float -> float) =
      fun (x5616 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "trunc"
             [|(Ojs.float_to_js x5616)|])
    let (fround : float -> float) =
      fun (x5617 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "fround"
             [|(Ojs.float_to_js x5617)|])
    let (cbrt : float -> float) =
      fun (x5618 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "cbrt"
             [|(Ojs.float_to_js x5618)|])
    let (e : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Math") "E")
    let (ln10 : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Math") "LN10")
    let (ln2 : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Math") "LN2")
    let (log2e : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Math") "LOG2E")
    let (log10e : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Math") "LOG10E")
    let (pi : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Math") "PI")
    let (sqrt1_2 : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Math")
             "SQRT1_2")
    let (sqrt2 : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Math") "SQRT2")
    let (abs : float -> float) =
      fun (x5619 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "abs"
             [|(Ojs.float_to_js x5619)|])
    let (acos : float -> float) =
      fun (x5620 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "acos"
             [|(Ojs.float_to_js x5620)|])
    let (asin : float -> float) =
      fun (x5621 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "asin"
             [|(Ojs.float_to_js x5621)|])
    let (atan : float -> float) =
      fun (x5622 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "atan"
             [|(Ojs.float_to_js x5622)|])
    let (atan2 : y:float -> x:float -> float) =
      fun ~y:(x5623 : float) ->
        fun ~x:(x5624 : float) ->
          Ojs.float_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "atan2"
               [|(Ojs.float_to_js x5623);(Ojs.float_to_js x5624)|])
    let (ceil : float -> float) =
      fun (x5625 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "ceil"
             [|(Ojs.float_to_js x5625)|])
    let (cos : float -> float) =
      fun (x5626 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "cos"
             [|(Ojs.float_to_js x5626)|])
    let (exp : float -> float) =
      fun (x5627 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "exp"
             [|(Ojs.float_to_js x5627)|])
    let (floor : float -> float) =
      fun (x5628 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "floor"
             [|(Ojs.float_to_js x5628)|])
    let (log : float -> float) =
      fun (x5629 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "log"
             [|(Ojs.float_to_js x5629)|])
    let (max : float list -> float) =
      fun (x5630 : float list) ->
        Ojs.float_of_js
          (let x5633 = Ojs.get_prop_ascii Ojs.global "Math" in
           Ojs.call (Ojs.get_prop_ascii x5633 "max") "apply"
             [|x5633;((let x5631 =
                         Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                           [||] in
                       List.iter
                         (fun (x5632 : float) ->
                            ignore
                              (Ojs.call x5631 "push"
                                 [|(Ojs.float_to_js x5632)|])) x5630;
                       x5631))|])
    let (min : float list -> float) =
      fun (x5634 : float list) ->
        Ojs.float_of_js
          (let x5637 = Ojs.get_prop_ascii Ojs.global "Math" in
           Ojs.call (Ojs.get_prop_ascii x5637 "min") "apply"
             [|x5637;((let x5635 =
                         Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                           [||] in
                       List.iter
                         (fun (x5636 : float) ->
                            ignore
                              (Ojs.call x5635 "push"
                                 [|(Ojs.float_to_js x5636)|])) x5634;
                       x5635))|])
    let (pow : x:float -> y:float -> float) =
      fun ~x:(x5638 : float) ->
        fun ~y:(x5639 : float) ->
          Ojs.float_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "pow"
               [|(Ojs.float_to_js x5638);(Ojs.float_to_js x5639)|])
    let (random : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "random" [||])
    let (round : float -> float) =
      fun (x5640 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "round"
             [|(Ojs.float_to_js x5640)|])
    let (sin : float -> float) =
      fun (x5641 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "sin"
             [|(Ojs.float_to_js x5641)|])
    let (sqrt : float -> float) =
      fun (x5642 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "sqrt"
             [|(Ojs.float_to_js x5642)|])
    let (tan : float -> float) =
      fun (x5643 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "tan"
             [|(Ojs.float_to_js x5643)|])
  end
module Map =
  struct
    type ('K, 'V) t = [ `Map of ('K * 'V) ] intf
    let rec t_of_js :
      'K 'V . (Ojs.t -> 'K) -> (Ojs.t -> 'V) -> Ojs.t -> ('K, 'V) t =
      fun _K -> fun _V -> Obj.magic
    and t_to_js :
      'K 'V . ('K -> Ojs.t) -> ('V -> Ojs.t) -> ('K, 'V) t -> Ojs.t =
      fun _K -> fun _V -> Obj.magic
    type ('K, 'V) tags = [ `Map of ('K * 'V) ]
    type ('tags, 'K, 'V) this =
      'tags intf constraint 'tags = [> `Map of ('K * 'V) ]
    let rec this_of_js :
      'tags 'K 'V .
        (Ojs.t -> 'tags) ->
          (Ojs.t -> 'K) -> (Ojs.t -> 'V) -> Ojs.t -> ('tags, 'K, 'V) this
      =
      fun (type __tags) ->
        fun (type __K) ->
          fun (type __V) ->
            fun (__tags_of_js : Ojs.t -> __tags) ->
              fun (__K_of_js : Ojs.t -> __K) ->
                fun (__V_of_js : Ojs.t -> __V) ->
                  fun (x5646 : Ojs.t) -> intf_of_js __tags_of_js x5646
    and this_to_js :
      'tags 'K 'V .
        ('tags -> Ojs.t) ->
          ('K -> Ojs.t) -> ('V -> Ojs.t) -> ('tags, 'K, 'V) this -> Ojs.t
      =
      fun (type __tags) ->
        fun (type __K) ->
          fun (type __V) ->
            fun (__tags_to_js : __tags -> Ojs.t) ->
              fun (__K_to_js : __K -> Ojs.t) ->
                fun (__V_to_js : __V -> Ojs.t) ->
                  fun (x5644 : __tags intf) -> intf_to_js __tags_to_js x5644
    let (entries : ('tags, 'K, 'V) this -> ('K * 'V) IterableIterator.t) =
      fun (x5648 : ('tags, 'K, 'V) this) ->
        IterableIterator.t_of_js
          (fun (x5652 : Ojs.t) ->
             let x5653 = x5652 in
             ((Obj.magic (Ojs.array_get x5653 0)),
               (Obj.magic (Ojs.array_get x5653 1))))
          (Ojs.call (this_to_js Obj.magic Obj.magic Obj.magic x5648)
             "entries" [||])
    let (keys : ('tags, 'K, 'V) this -> 'K IterableIterator.t) =
      fun (x5654 : ('tags, 'K, 'V) this) ->
        IterableIterator.t_of_js Obj.magic
          (Ojs.call (this_to_js Obj.magic Obj.magic Obj.magic x5654) "keys"
             [||])
    let (values : ('tags, 'K, 'V) this -> 'V IterableIterator.t) =
      fun (x5659 : ('tags, 'K, 'V) this) ->
        IterableIterator.t_of_js Obj.magic
          (Ojs.call (this_to_js Obj.magic Obj.magic Obj.magic x5659) "values"
             [||])
    let (clear : ('tags, 'K, 'V) this -> unit) =
      fun (x5664 : ('tags, 'K, 'V) this) ->
        ignore
          (Ojs.call (this_to_js Obj.magic Obj.magic Obj.magic x5664) "clear"
             [||])
    let (delete : ('tags, 'K, 'V) this -> key:'K -> bool) =
      fun (x5669 : ('tags, 'K, 'V) this) ->
        fun ~key:(x5668 : 'K) ->
          Ojs.bool_of_js
            (Ojs.call (this_to_js Obj.magic Obj.magic Obj.magic x5669)
               "delete" [|(Obj.magic x5668)|])
    let (forEach :
      ('tags, 'K, 'V) this ->
        callbackfn:(value:'V -> key:'K -> map:('K, 'V) t -> unit) ->
          ?thisArg:any -> unit -> unit)
      =
      fun (x5682 : ('tags, 'K, 'V) this) ->
        fun
          ~callbackfn:(x5673 : value:'V -> key:'K -> map:('K, 'V) t -> unit)
          ->
          fun ?thisArg:(x5674 : any option) ->
            fun () ->
              ignore
                (let x5686 = this_to_js Obj.magic Obj.magic Obj.magic x5682 in
                 Ojs.call (Ojs.get_prop_ascii x5686 "forEach") "apply"
                   [|x5686;((let x5675 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x5675 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x5677 : Ojs.t) ->
                                          fun (x5678 : Ojs.t) ->
                                            fun (x5679 : Ojs.t) ->
                                              x5673 ~value:(Obj.magic x5677)
                                                ~key:(Obj.magic x5678)
                                                ~map:(t_of_js Obj.magic
                                                        Obj.magic x5679)))|]);
                             (match x5674 with
                              | Some x5676 ->
                                  ignore
                                    (Ojs.call x5675 "push"
                                       [|(any_to_js x5676)|])
                              | None -> ());
                             x5675))|])
    let (get_ : ('tags, 'K, 'V) this -> key:'K -> 'V option) =
      fun (x5688 : ('tags, 'K, 'V) this) ->
        fun ~key:(x5687 : 'K) ->
          Ojs.option_of_js Obj.magic
            (Ojs.call (this_to_js Obj.magic Obj.magic Obj.magic x5688) "get"
               [|(Obj.magic x5687)|])
    let (has : ('tags, 'K, 'V) this -> key:'K -> bool) =
      fun (x5694 : ('tags, 'K, 'V) this) ->
        fun ~key:(x5693 : 'K) ->
          Ojs.bool_of_js
            (Ojs.call (this_to_js Obj.magic Obj.magic Obj.magic x5694) "has"
               [|(Obj.magic x5693)|])
    let (set_ :
      ('tags, 'K, 'V) this -> key:'K -> value:'V -> ('tags, 'K, 'V) this) =
      fun (x5700 : ('tags, 'K, 'V) this) ->
        fun ~key:(x5698 : 'K) ->
          fun ~value:(x5699 : 'V) ->
            this_of_js Obj.magic Obj.magic Obj.magic
              (Ojs.call (this_to_js Obj.magic Obj.magic Obj.magic x5700)
                 "set" [|(Obj.magic x5698);(Obj.magic x5699)|])
    let (get_size : ('tags, 'K, 'V) this -> float) =
      fun (x5707 : ('tags, 'K, 'V) this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii
             (this_to_js Obj.magic Obj.magic Obj.magic x5707) "size")
    let (create : unit -> (any, any) t) =
      fun () ->
        t_of_js any_of_js any_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Map") [||])
    let (create' :
      ?iterable:('K * 'V) Iterable.t option -> unit -> ('K, 'V) t) =
      fun ?iterable:(x5713 : ('K * 'V) Iterable.t option option) ->
        fun () ->
          t_of_js Obj.magic Obj.magic
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "Map")
               (let x5714 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x5713 with
                 | Some x5715 ->
                     ignore
                       (Ojs.call x5714 "push"
                          [|(Ojs.option_to_js
                               (fun (x5716 : ('K * 'V) Iterable.t) ->
                                  Iterable.t_to_js
                                    (fun (x5717 : ('K * 'V)) ->
                                       let (x5718, x5719) = x5717 in
                                       let x5720 = Ojs.array_make 2 in
                                       Ojs.array_set x5720 0
                                         (Obj.magic x5718);
                                       Ojs.array_set x5720 1
                                         (Obj.magic x5719);
                                       x5720) x5716) x5715)|])
                 | None -> ());
                x5714))
    let (create'' : unit -> (any, any) t) =
      fun () ->
        t_of_js any_of_js any_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Map") [||])
    let (create''' : ?entries:('K * 'V) list option -> unit -> ('K, 'V) t) =
      fun ?entries:(x5725 : ('K * 'V) list option option) ->
        fun () ->
          t_of_js Obj.magic Obj.magic
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "Map")
               (let x5726 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x5725 with
                 | Some x5727 ->
                     ignore
                       (Ojs.call x5726 "push"
                          [|(Ojs.option_to_js
                               (fun (x5728 : ('K * 'V) list) ->
                                  Ojs.list_to_js
                                    (fun (x5729 : ('K * 'V)) ->
                                       let (x5730, x5731) = x5729 in
                                       let x5732 = Ojs.array_make 2 in
                                       Ojs.array_set x5732 0
                                         (Obj.magic x5730);
                                       Ojs.array_set x5732 1
                                         (Obj.magic x5731);
                                       x5732) x5728) x5727)|])
                 | None -> ());
                x5726))
    let (prototype : unit -> (any, any) t) =
      fun () ->
        t_of_js any_of_js any_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Map")
             "prototype")
    let cast_from = Obj.magic
  end
module Lowercase =
  struct
    type 'S t = Ojs.t
    let rec t_of_js : 'S . (Ojs.t -> 'S) -> Ojs.t -> 'S t =
      fun (type __S) ->
        fun (__S_of_js : Ojs.t -> __S) -> fun (x5738 : Ojs.t) -> x5738
    and t_to_js : 'S . ('S -> Ojs.t) -> 'S t -> Ojs.t =
      fun (type __S) ->
        fun (__S_to_js : __S -> Ojs.t) -> fun (x5737 : Ojs.t) -> x5737
  end
module JSON =
  struct
    let (parse :
      text:string ->
        ?reviver:(this:any -> key:string -> value:any -> any) -> unit -> any)
      =
      fun ~text:(x5739 : string) ->
        fun
          ?reviver:(x5740 :
                     (this:any -> key:string -> value:any -> any) option)
          ->
          fun () ->
            any_of_js
              (let x5746 = Ojs.get_prop_ascii Ojs.global "JSON" in
               Ojs.call (Ojs.get_prop_ascii x5746 "parse") "apply"
                 [|x5746;((let x5741 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           ignore
                             (Ojs.call x5741 "push"
                                [|(Ojs.string_to_js x5739)|]);
                           (match x5740 with
                            | Some x5742 ->
                                ignore
                                  (Ojs.call x5741 "push"
                                     [|(Ojs.fun_to_js 3
                                          (fun (x5743 : Ojs.t) ->
                                             fun (x5744 : Ojs.t) ->
                                               fun (x5745 : Ojs.t) ->
                                                 any_to_js
                                                   (x5742
                                                      ~this:(any_of_js x5743)
                                                      ~key:(Ojs.string_of_js
                                                              x5744)
                                                      ~value:(any_of_js x5745))))|])
                            | None -> ());
                           x5741))|])
    let (stringify :
      value:any ->
        ?replacer:(this:any -> key:string -> value:any -> any) ->
          ?space:[ `U1 of string  | `U2 of float ] -> unit -> string)
      =
      fun ~value:(x5747 : any) ->
        fun
          ?replacer:(x5748 :
                      (this:any -> key:string -> value:any -> any) option)
          ->
          fun ?space:(x5749 : [ `U1 of string  | `U2 of float ] option) ->
            fun () ->
              Ojs.string_of_js
                (let x5758 = Ojs.get_prop_ascii Ojs.global "JSON" in
                 Ojs.call (Ojs.get_prop_ascii x5758 "stringify") "apply"
                   [|x5758;((let x5750 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x5750 "push" [|(any_to_js x5747)|]);
                             (match x5748 with
                              | Some x5754 ->
                                  ignore
                                    (Ojs.call x5750 "push"
                                       [|(Ojs.fun_to_js 3
                                            (fun (x5755 : Ojs.t) ->
                                               fun (x5756 : Ojs.t) ->
                                                 fun (x5757 : Ojs.t) ->
                                                   any_to_js
                                                     (x5754
                                                        ~this:(any_of_js
                                                                 x5755)
                                                        ~key:(Ojs.string_of_js
                                                                x5756)
                                                        ~value:(any_of_js
                                                                  x5757))))|])
                              | None -> ());
                             (match x5749 with
                              | Some x5751 ->
                                  ignore
                                    (Ojs.call x5750 "push"
                                       [|((match x5751 with
                                           | `U1 x5752 ->
                                               Ojs.string_to_js x5752
                                           | `U2 x5753 ->
                                               Ojs.float_to_js x5753))|])
                              | None -> ());
                             x5750))|])
    let (stringify' :
      value:any ->
        ?replacer:[ `U1 of float  | `U2 of string ] list option ->
          ?space:[ `U1 of string  | `U2 of float ] -> unit -> string)
      =
      fun ~value:(x5759 : any) ->
        fun
          ?replacer:(x5760 :
                      [ `U1 of float  | `U2 of string ] list option option)
          ->
          fun ?space:(x5761 : [ `U1 of string  | `U2 of float ] option) ->
            fun () ->
              Ojs.string_of_js
                (let x5771 = Ojs.get_prop_ascii Ojs.global "JSON" in
                 Ojs.call (Ojs.get_prop_ascii x5771 "stringify") "apply"
                   [|x5771;((let x5762 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x5762 "push" [|(any_to_js x5759)|]);
                             (match x5760 with
                              | Some x5766 ->
                                  ignore
                                    (Ojs.call x5762 "push"
                                       [|(Ojs.option_to_js
                                            (fun
                                               (x5767 :
                                                 [ `U1 of float 
                                                 | `U2 of string ] list)
                                               ->
                                               Ojs.list_to_js
                                                 (fun
                                                    (x5768 :
                                                      [ `U1 of float 
                                                      | `U2 of string ])
                                                    ->
                                                    match x5768 with
                                                    | `U1 x5769 ->
                                                        Ojs.float_to_js x5769
                                                    | `U2 x5770 ->
                                                        Ojs.string_to_js
                                                          x5770) x5767) x5766)|])
                              | None -> ());
                             (match x5761 with
                              | Some x5763 ->
                                  ignore
                                    (Ojs.call x5762 "push"
                                       [|((match x5763 with
                                           | `U1 x5764 ->
                                               Ojs.string_to_js x5764
                                           | `U2 x5765 ->
                                               Ojs.float_to_js x5765))|])
                              | None -> ());
                             x5762))|])
  end
module TypedPropertyDescriptor =
  struct
    type 'T t = [ `TypedPropertyDescriptor of 'T ] intf
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun _T -> Obj.magic
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun _T -> Obj.magic
    type 'T tags = [ `TypedPropertyDescriptor of 'T ]
    type ('tags, 'T) this =
      'tags intf constraint 'tags = [> `TypedPropertyDescriptor of 'T ]
    let rec this_of_js :
      'tags 'T .
        (Ojs.t -> 'tags) -> (Ojs.t -> 'T) -> Ojs.t -> ('tags, 'T) this
      =
      fun (type __tags) ->
        fun (type __T) ->
          fun (__tags_of_js : Ojs.t -> __tags) ->
            fun (__T_of_js : Ojs.t -> __T) ->
              fun (x5774 : Ojs.t) -> intf_of_js __tags_of_js x5774
    and this_to_js :
      'tags 'T .
        ('tags -> Ojs.t) -> ('T -> Ojs.t) -> ('tags, 'T) this -> Ojs.t
      =
      fun (type __tags) ->
        fun (type __T) ->
          fun (__tags_to_js : __tags -> Ojs.t) ->
            fun (__T_to_js : __T -> Ojs.t) ->
              fun (x5772 : __tags intf) -> intf_to_js __tags_to_js x5772
    let (get_enumerable : ('tags, 'T) this -> bool option) =
      fun (x5776 : ('tags, 'T) this) ->
        Ojs.option_of_js Ojs.bool_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic Obj.magic x5776)
             "enumerable")
    let (set_enumerable : ('tags, 'T) this -> bool -> unit) =
      fun (x5780 : ('tags, 'T) this) ->
        fun (x5781 : bool) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic Obj.magic x5780)
            "enumerable" (Ojs.bool_to_js x5781)
    let (get_configurable : ('tags, 'T) this -> bool option) =
      fun (x5784 : ('tags, 'T) this) ->
        Ojs.option_of_js Ojs.bool_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic Obj.magic x5784)
             "configurable")
    let (set_configurable : ('tags, 'T) this -> bool -> unit) =
      fun (x5788 : ('tags, 'T) this) ->
        fun (x5789 : bool) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic Obj.magic x5788)
            "configurable" (Ojs.bool_to_js x5789)
    let (get_writable : ('tags, 'T) this -> bool option) =
      fun (x5792 : ('tags, 'T) this) ->
        Ojs.option_of_js Ojs.bool_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic Obj.magic x5792)
             "writable")
    let (set_writable : ('tags, 'T) this -> bool -> unit) =
      fun (x5796 : ('tags, 'T) this) ->
        fun (x5797 : bool) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic Obj.magic x5796)
            "writable" (Ojs.bool_to_js x5797)
    let (get_value : ('tags, 'T) this -> 'T option) =
      fun (x5800 : ('tags, 'T) this) ->
        Ojs.option_of_js Obj.magic
          (Ojs.get_prop_ascii (this_to_js Obj.magic Obj.magic x5800) "value")
    let (set_value : ('tags, 'T) this -> 'T -> unit) =
      fun (x5804 : ('tags, 'T) this) ->
        fun (x5805 : 'T) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic Obj.magic x5804) "value"
            (Obj.magic x5805)
    let (get_get : ('tags, 'T) this -> (unit -> 'T) option) =
      fun (x5808 : ('tags, 'T) this) ->
        Ojs.option_of_js
          (fun (x5811 : Ojs.t) -> fun () -> Obj.magic (Ojs.apply x5811 [||]))
          (Ojs.get_prop_ascii (this_to_js Obj.magic Obj.magic x5808) "get")
    let (set_get : ('tags, 'T) this -> (unit -> 'T) -> unit) =
      fun (x5812 : ('tags, 'T) this) ->
        fun (x5813 : unit -> 'T) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic Obj.magic x5812) "get"
            (Ojs.fun_to_js 1 (fun _ -> Obj.magic (x5813 ())))
    let (get_set : ('tags, 'T) this -> ('T -> unit) option) =
      fun (x5816 : ('tags, 'T) this) ->
        Ojs.option_of_js
          (fun (x5819 : Ojs.t) ->
             fun (x5820 : 'T) ->
               ignore (Ojs.apply x5819 [|(Obj.magic x5820)|]))
          (Ojs.get_prop_ascii (this_to_js Obj.magic Obj.magic x5816) "set")
    let (set_set : ('tags, 'T) this -> ('T -> unit) -> unit) =
      fun (x5821 : ('tags, 'T) this) ->
        fun (x5822 : 'T -> unit) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic Obj.magic x5821) "set"
            (Ojs.fun_to_js 1 (fun (x5823 : Ojs.t) -> x5822 (Obj.magic x5823)))
    let (create :
      ?enumerable:bool ->
        ?configurable:bool ->
          ?writable:bool ->
            ?value:'T ->
              ?get_:(unit -> 'T) -> ?set_:('T -> unit) -> unit -> 'T t)
      =
      fun ?enumerable:(x5826 : bool option) ->
        fun ?configurable:(x5827 : bool option) ->
          fun ?writable:(x5828 : bool option) ->
            fun ?value:(x5829 : 'T option) ->
              fun ?get_:(x5830 : (unit -> 'T) option) ->
                fun ?set_:(x5831 : ('T -> unit) option) ->
                  fun () ->
                    let x5832 = Ojs.empty_obj () in
                    (match x5826 with
                     | Some x5840 ->
                         Ojs.set_prop_ascii x5832 "enumerable"
                           (Ojs.bool_to_js x5840)
                     | None -> ());
                    (match x5827 with
                     | Some x5839 ->
                         Ojs.set_prop_ascii x5832 "configurable"
                           (Ojs.bool_to_js x5839)
                     | None -> ());
                    (match x5828 with
                     | Some x5838 ->
                         Ojs.set_prop_ascii x5832 "writable"
                           (Ojs.bool_to_js x5838)
                     | None -> ());
                    (match x5829 with
                     | Some x5837 ->
                         Ojs.set_prop_ascii x5832 "value" (Obj.magic x5837)
                     | None -> ());
                    (match x5830 with
                     | Some x5836 ->
                         Ojs.set_prop_ascii x5832 "get"
                           (Ojs.fun_to_js 1 (fun _ -> Obj.magic (x5836 ())))
                     | None -> ());
                    (match x5831 with
                     | Some x5834 ->
                         Ojs.set_prop_ascii x5832 "set"
                           (Ojs.fun_to_js 1
                              (fun (x5835 : Ojs.t) -> x5834 (Obj.magic x5835)))
                     | None -> ());
                    t_of_js Obj.magic x5832
    let cast_from = Obj.magic
  end
module Reflect =
  struct
    module AnonymousInterface34 =
      struct
        type ('A, 'R) t = Ojs.t
        let rec t_of_js :
          'A 'R . (Ojs.t -> 'A) -> (Ojs.t -> 'R) -> Ojs.t -> ('A, 'R) t =
          fun (type __A) ->
            fun (type __R) ->
              fun (__A_of_js : Ojs.t -> __A) ->
                fun (__R_of_js : Ojs.t -> __R) ->
                  fun (x5842 : Ojs.t) -> x5842
        and t_to_js :
          'A 'R . ('A -> Ojs.t) -> ('R -> Ojs.t) -> ('A, 'R) t -> Ojs.t =
          fun (type __A) ->
            fun (type __R) ->
              fun (__A_to_js : __A -> Ojs.t) ->
                fun (__R_to_js : __R -> Ojs.t) ->
                  fun (x5841 : Ojs.t) -> x5841
        let (create : ('A, 'R) t -> args:any list -> 'R) =
          fun (x5846 : ('A, 'R) t) ->
            fun ~args:(x5843 : any list) ->
              Obj.magic
                (Ojs.new_obj_arr (t_to_js Obj.magic Obj.magic x5846)
                   (let x5844 =
                      Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                        [||] in
                    List.iter
                      (fun (x5845 : any) ->
                         ignore (Ojs.call x5844 "push" [|(any_to_js x5845)|]))
                      x5843;
                    x5844))
        module Make(A:Ojs.T)(R:Ojs.T) =
          struct
            type ('A, 'R) parent = ('A, 'R) t
            let rec parent_of_js :
              'A 'R .
                (Ojs.t -> 'A) -> (Ojs.t -> 'R) -> Ojs.t -> ('A, 'R) parent
              =
              fun (type __A) ->
                fun (type __R) ->
                  fun (__A_of_js : Ojs.t -> __A) ->
                    fun (__R_of_js : Ojs.t -> __R) ->
                      fun (x5852 : Ojs.t) ->
                        t_of_js __A_of_js __R_of_js x5852
            and parent_to_js :
              'A 'R .
                ('A -> Ojs.t) -> ('R -> Ojs.t) -> ('A, 'R) parent -> Ojs.t
              =
              fun (type __A) ->
                fun (type __R) ->
                  fun (__A_to_js : __A -> Ojs.t) ->
                    fun (__R_to_js : __R -> Ojs.t) ->
                      fun (x5849 : (__A, __R) t) ->
                        t_to_js __A_to_js __R_to_js x5849
            type t = (A.t, R.t) parent
            let rec t_of_js : Ojs.t -> t =
              fun (x5858 : Ojs.t) -> parent_of_js A.t_of_js R.t_of_js x5858
            and t_to_js : t -> Ojs.t =
              fun (x5855 : (A.t, R.t) parent) ->
                parent_to_js A.t_to_js R.t_to_js x5855
            let (create : t -> args:any list -> R.t) =
              fun (x5864 : t) ->
                fun ~args:(x5861 : any list) ->
                  R.t_of_js
                    (Ojs.new_obj_arr (t_to_js x5864)
                       (let x5862 =
                          Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                            [||] in
                        List.iter
                          (fun (x5863 : any) ->
                             ignore
                               (Ojs.call x5862 "push" [|(any_to_js x5863)|]))
                          x5861;
                        x5862))
          end
      end
    module AnonymousInterface16 =
      struct
        type t = Ojs.t
        let rec t_of_js : Ojs.t -> t = fun (x5866 : Ojs.t) -> x5866
        and t_to_js : t -> Ojs.t = fun (x5865 : Ojs.t) -> x5865
        let (create : t -> args:any list -> any) =
          fun (x5870 : t) ->
            fun ~args:(x5867 : any list) ->
              any_of_js
                (Ojs.new_obj_arr (t_to_js x5870)
                   (let x5868 =
                      Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                        [||] in
                    List.iter
                      (fun (x5869 : any) ->
                         ignore (Ojs.call x5868 "push" [|(any_to_js x5869)|]))
                      x5867;
                    x5868))
      end
    let (apply_ :
      target:(this:'T -> args:any list -> 'R) ->
        thisArgument:'T -> argumentsList:'A Readonly.t -> 'R)
      =
      fun ~target:(x5871 : this:'T -> args:any list -> 'R) ->
        fun ~thisArgument:(x5874 : 'T) ->
          fun ~argumentsList:(x5875 : 'A Readonly.t) ->
            Obj.magic
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "Reflect") "apply"
                 [|(Ojs.fun_to_js_args
                      (fun (x5872 : _) ->
                         Obj.magic
                           (x5871 ~this:(Obj.magic (Ojs.array_get x5872 0))
                              ~args:(Ojs.list_of_js_from any_of_js x5872 1))));(
                   Obj.magic x5874);(Readonly.t_to_js Obj.magic x5875)|])
    let (apply_' :
      target:Function.t ->
        thisArgument:any -> argumentsList:any ArrayLike.t -> any)
      =
      fun ~target:(x5877 : Function.t) ->
        fun ~thisArgument:(x5878 : any) ->
          fun ~argumentsList:(x5879 : any ArrayLike.t) ->
            any_of_js
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "Reflect") "apply"
                 [|(Function.t_to_js x5877);(any_to_js x5878);(ArrayLike.t_to_js
                                                                 any_to_js
                                                                 x5879)|])
    let (construct :
      target:('A, 'R) AnonymousInterface34.t ->
        argumentsList:'A Readonly.t ->
          ?newTarget:AnonymousInterface16.t -> unit -> 'R)
      =
      fun ~target:(x5881 : ('A, 'R) AnonymousInterface34.t) ->
        fun ~argumentsList:(x5882 : 'A Readonly.t) ->
          fun ?newTarget:(x5883 : AnonymousInterface16.t option) ->
            fun () ->
              Obj.magic
                (let x5889 = Ojs.get_prop_ascii Ojs.global "Reflect" in
                 Ojs.call (Ojs.get_prop_ascii x5889 "construct") "apply"
                   [|x5889;((let x5884 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x5884 "push"
                                  [|(AnonymousInterface34.t_to_js Obj.magic
                                       Obj.magic x5881)|]);
                             ignore
                               (Ojs.call x5884 "push"
                                  [|(Readonly.t_to_js Obj.magic x5882)|]);
                             (match x5883 with
                              | Some x5885 ->
                                  ignore
                                    (Ojs.call x5884 "push"
                                       [|(AnonymousInterface16.t_to_js x5885)|])
                              | None -> ());
                             x5884))|])
    let (construct' :
      target:Function.t ->
        argumentsList:any ArrayLike.t -> ?newTarget:Function.t -> unit -> any)
      =
      fun ~target:(x5890 : Function.t) ->
        fun ~argumentsList:(x5891 : any ArrayLike.t) ->
          fun ?newTarget:(x5892 : Function.t option) ->
            fun () ->
              any_of_js
                (let x5896 = Ojs.get_prop_ascii Ojs.global "Reflect" in
                 Ojs.call (Ojs.get_prop_ascii x5896 "construct") "apply"
                   [|x5896;((let x5893 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x5893 "push"
                                  [|(Function.t_to_js x5890)|]);
                             ignore
                               (Ojs.call x5893 "push"
                                  [|(ArrayLike.t_to_js any_to_js x5891)|]);
                             (match x5892 with
                              | Some x5894 ->
                                  ignore
                                    (Ojs.call x5893 "push"
                                       [|(Function.t_to_js x5894)|])
                              | None -> ());
                             x5893))|])
    let (defineProperty :
      target:untyped_object ->
        propertyKey:PropertyKey.t ->
          attributes:(PropertyDescriptor.t, any ThisType.t) intersection2 ->
            bool)
      =
      fun ~target:(x5897 : untyped_object) ->
        fun ~propertyKey:(x5898 : PropertyKey.t) ->
          fun
            ~attributes:(x5899 :
                          (PropertyDescriptor.t, any ThisType.t)
                            intersection2)
            ->
            Ojs.bool_of_js
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "Reflect")
                 "defineProperty"
                 [|(untyped_object_to_js x5897);(PropertyKey.t_to_js x5898);(
                   intersection2_to_js PropertyDescriptor.t_to_js
                     (fun (x5901 : any ThisType.t) ->
                        ThisType.t_to_js any_to_js x5901) x5899)|])
    let (deleteProperty :
      target:untyped_object -> propertyKey:PropertyKey.t -> bool) =
      fun ~target:(x5903 : untyped_object) ->
        fun ~propertyKey:(x5904 : PropertyKey.t) ->
          Ojs.bool_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "Reflect")
               "deleteProperty"
               [|(untyped_object_to_js x5903);(PropertyKey.t_to_js x5904)|])
    let (get_ :
      target:'T -> propertyKey:'P -> ?receiver:unknown -> unit -> any) =
      fun ~target:(x5905 : 'T) ->
        fun ~propertyKey:(x5906 : 'P) ->
          fun ?receiver:(x5907 : unknown option) ->
            fun () ->
              any_of_js
                (let x5910 = Ojs.get_prop_ascii Ojs.global "Reflect" in
                 Ojs.call (Ojs.get_prop_ascii x5910 "get") "apply"
                   [|x5910;((let x5908 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x5908 "push" [|(Obj.magic x5905)|]);
                             ignore
                               (Ojs.call x5908 "push" [|(Obj.magic x5906)|]);
                             (match x5907 with
                              | Some x5909 ->
                                  ignore
                                    (Ojs.call x5908 "push"
                                       [|(unknown_to_js x5909)|])
                              | None -> ());
                             x5908))|])
    let (getOwnPropertyDescriptor :
      target:'T -> propertyKey:'P -> any TypedPropertyDescriptor.t option) =
      fun ~target:(x5911 : 'T) ->
        fun ~propertyKey:(x5912 : 'P) ->
          Ojs.option_of_js
            (fun (x5913 : Ojs.t) ->
               TypedPropertyDescriptor.t_of_js any_of_js x5913)
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "Reflect")
               "getOwnPropertyDescriptor"
               [|(Obj.magic x5911);(Obj.magic x5912)|])
    let (getPrototypeOf : untyped_object -> untyped_object option) =
      fun (x5915 : untyped_object) ->
        Ojs.option_of_js untyped_object_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Reflect")
             "getPrototypeOf" [|(untyped_object_to_js x5915)|])
    let (has : target:untyped_object -> propertyKey:PropertyKey.t -> bool) =
      fun ~target:(x5917 : untyped_object) ->
        fun ~propertyKey:(x5918 : PropertyKey.t) ->
          Ojs.bool_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "Reflect") "has"
               [|(untyped_object_to_js x5917);(PropertyKey.t_to_js x5918)|])
    let (isExtensible : untyped_object -> bool) =
      fun (x5919 : untyped_object) ->
        Ojs.bool_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Reflect") "isExtensible"
             [|(untyped_object_to_js x5919)|])
    let (ownKeys :
      untyped_object ->
        [ `String of string  | `Symbol of symbol ] Primitive.t list)
      =
      fun (x5920 : untyped_object) ->
        Ojs.list_of_js
          (fun (x5921 : Ojs.t) ->
             Primitive.t_of_js
               (fun (x5922 : Ojs.t) ->
                  let x5923 = x5922 in
                  match Ojs.string_of_js (Ojs.get_prop_ascii x5923 "dummy")
                  with
                  | "String" -> `String (Ojs.string_of_js x5923)
                  | "Symbol" -> `Symbol (symbol_of_js x5923)
                  | _ -> assert false) x5921)
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Reflect") "ownKeys"
             [|(untyped_object_to_js x5920)|])
    let (preventExtensions : untyped_object -> bool) =
      fun (x5924 : untyped_object) ->
        Ojs.bool_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Reflect")
             "preventExtensions" [|(untyped_object_to_js x5924)|])
    let (set_ :
      target:'T ->
        propertyKey:'P -> value:any -> ?receiver:any -> unit -> bool)
      =
      fun ~target:(x5925 : 'T) ->
        fun ~propertyKey:(x5926 : 'P) ->
          fun ~value:(x5927 : any) ->
            fun ?receiver:(x5928 : any option) ->
              fun () ->
                Ojs.bool_of_js
                  (let x5931 = Ojs.get_prop_ascii Ojs.global "Reflect" in
                   Ojs.call (Ojs.get_prop_ascii x5931 "set") "apply"
                     [|x5931;((let x5929 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x5929 "push" [|(Obj.magic x5925)|]);
                               ignore
                                 (Ojs.call x5929 "push" [|(Obj.magic x5926)|]);
                               ignore
                                 (Ojs.call x5929 "push" [|(any_to_js x5927)|]);
                               (match x5928 with
                                | Some x5930 ->
                                    ignore
                                      (Ojs.call x5929 "push"
                                         [|(any_to_js x5930)|])
                                | None -> ());
                               x5929))|])
    let (set_' :
      target:untyped_object ->
        propertyKey:PropertyKey.t ->
          value:any -> ?receiver:any -> unit -> bool)
      =
      fun ~target:(x5932 : untyped_object) ->
        fun ~propertyKey:(x5933 : PropertyKey.t) ->
          fun ~value:(x5934 : any) ->
            fun ?receiver:(x5935 : any option) ->
              fun () ->
                Ojs.bool_of_js
                  (let x5938 = Ojs.get_prop_ascii Ojs.global "Reflect" in
                   Ojs.call (Ojs.get_prop_ascii x5938 "set") "apply"
                     [|x5938;((let x5936 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x5936 "push"
                                    [|(untyped_object_to_js x5932)|]);
                               ignore
                                 (Ojs.call x5936 "push"
                                    [|(PropertyKey.t_to_js x5933)|]);
                               ignore
                                 (Ojs.call x5936 "push" [|(any_to_js x5934)|]);
                               (match x5935 with
                                | Some x5937 ->
                                    ignore
                                      (Ojs.call x5936 "push"
                                         [|(any_to_js x5937)|])
                                | None -> ());
                               x5936))|])
    let (setPrototypeOf :
      target:untyped_object -> proto:untyped_object option -> bool) =
      fun ~target:(x5939 : untyped_object) ->
        fun ~proto:(x5940 : untyped_object option) ->
          Ojs.bool_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "Reflect")
               "setPrototypeOf"
               [|(untyped_object_to_js x5939);(Ojs.option_to_js
                                                 untyped_object_to_js x5940)|])
  end
module InstanceType =
  struct
    module AnonymousInterface16 =
      struct
        type t = Ojs.t
        let rec t_of_js : Ojs.t -> t = fun (x5943 : Ojs.t) -> x5943
        and t_to_js : t -> Ojs.t = fun (x5942 : Ojs.t) -> x5942
        let (create : t -> args:any list -> any) =
          fun (x5947 : t) ->
            fun ~args:(x5944 : any list) ->
              any_of_js
                (Ojs.new_obj_arr (t_to_js x5947)
                   (let x5945 =
                      Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                        [||] in
                    List.iter
                      (fun (x5946 : any) ->
                         ignore (Ojs.call x5945 "push" [|(any_to_js x5946)|]))
                      x5944;
                    x5945))
      end
    type 'T t = any
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun (type __T) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x5949 : Ojs.t) -> any_of_js x5949
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t =
      fun (type __T) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x5948 : any) -> any_to_js x5948
  end
module ImportMeta =
  struct
    type t = [ `ImportMeta ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type tags = [ `ImportMeta ]
    type 'tags this = 'tags intf constraint 'tags = [> `ImportMeta ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x5952 : Ojs.t) -> intf_of_js __tags_of_js x5952
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x5950 : __tags intf) -> intf_to_js __tags_to_js x5950
    let cast_from = Obj.magic
  end
module ImportAttributes =
  struct
    type t = [ `ImportAttributes ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type tags = [ `ImportAttributes ]
    type 'tags this = 'tags intf constraint 'tags = [> `ImportAttributes ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x5956 : Ojs.t) -> intf_of_js __tags_of_js x5956
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x5954 : __tags intf) -> intf_to_js __tags_to_js x5954
    let (get : 'tags this -> string -> string) =
      fun (x5958 : 'tags this) ->
        fun (x5960 : string) ->
          Ojs.string_of_js
            (Ojs.get_prop (this_to_js Obj.magic x5958)
               (Ojs.string_to_js x5960))
    let (set : 'tags this -> string -> string -> unit) =
      fun (x5961 : 'tags this) ->
        fun (x5963 : string) ->
          fun (x5964 : string) ->
            Ojs.set_prop (this_to_js Obj.magic x5961)
              (Ojs.string_to_js x5963) (Ojs.string_to_js x5964)
    let cast_from = Obj.magic
  end
module ImportAssertions =
  struct
    type t = [ `ImportAssertions ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type tags = [ `ImportAssertions ]
    type 'tags this = 'tags intf constraint 'tags = [> `ImportAssertions ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x5967 : Ojs.t) -> intf_of_js __tags_of_js x5967
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x5965 : __tags intf) -> intf_to_js __tags_to_js x5965
    let (get : 'tags this -> string -> string) =
      fun (x5969 : 'tags this) ->
        fun (x5971 : string) ->
          Ojs.string_of_js
            (Ojs.get_prop (this_to_js Obj.magic x5969)
               (Ojs.string_to_js x5971))
    let (set : 'tags this -> string -> string -> unit) =
      fun (x5972 : 'tags this) ->
        fun (x5974 : string) ->
          fun (x5975 : string) ->
            Ojs.set_prop (this_to_js Obj.magic x5972)
              (Ojs.string_to_js x5974) (Ojs.string_to_js x5975)
    let cast_from = Obj.magic
  end
module ImportCallOptions =
  struct
    type t = [ `ImportCallOptions ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type tags = [ `ImportCallOptions ]
    type 'tags this = 'tags intf constraint 'tags = [> `ImportCallOptions ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x5978 : Ojs.t) -> intf_of_js __tags_of_js x5978
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x5976 : __tags intf) -> intf_to_js __tags_to_js x5976
    let (get_assert : 'tags this -> ImportAssertions.t option) =
      fun (x5980 : 'tags this) ->
        Ojs.option_of_js ImportAssertions.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x5980) "assert")
    let (set_assert : 'tags this -> ImportAssertions.t -> unit) =
      fun (x5983 : 'tags this) ->
        fun (x5984 : ImportAssertions.t) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x5983) "assert"
            (ImportAssertions.t_to_js x5984)
    let (get_with : 'tags this -> ImportAttributes.t option) =
      fun (x5986 : 'tags this) ->
        Ojs.option_of_js ImportAttributes.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x5986) "with")
    let (set_with : 'tags this -> ImportAttributes.t -> unit) =
      fun (x5989 : 'tags this) ->
        fun (x5990 : ImportAttributes.t) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x5989) "with"
            (ImportAttributes.t_to_js x5990)
    let (create :
      ?assert_:ImportAssertions.t -> ?with_:ImportAttributes.t -> unit -> t)
      =
      fun ?assert_:(x5992 : ImportAssertions.t option) ->
        fun ?with_:(x5993 : ImportAttributes.t option) ->
          fun () ->
            let x5994 = Ojs.empty_obj () in
            (match x5992 with
             | Some x5996 ->
                 Ojs.set_prop_ascii x5994 "assert"
                   (ImportAssertions.t_to_js x5996)
             | None -> ());
            (match x5993 with
             | Some x5995 ->
                 Ojs.set_prop_ascii x5994 "with"
                   (ImportAttributes.t_to_js x5995)
             | None -> ());
            t_of_js x5994
    let cast_from = Obj.magic
  end
module IArguments =
  struct
    type t = [ `IArguments ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type tags = [ `IArguments ]
    type 'tags this = 'tags intf constraint 'tags = [> `IArguments ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x5999 : Ojs.t) -> intf_of_js __tags_of_js x5999
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x5997 : __tags intf) -> intf_to_js __tags_to_js x5997
    let (get : 'tags this -> float -> any) =
      fun (x6001 : 'tags this) ->
        fun (x6003 : float) ->
          any_of_js
            (Ojs.get_prop (this_to_js Obj.magic x6001)
               (Ojs.float_to_js x6003))
    let (set : 'tags this -> float -> any -> unit) =
      fun (x6004 : 'tags this) ->
        fun (x6006 : float) ->
          fun (x6007 : any) ->
            Ojs.set_prop (this_to_js Obj.magic x6004) (Ojs.float_to_js x6006)
              (any_to_js x6007)
    let (get_length : 'tags this -> float) =
      fun (x6008 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6008) "length")
    let (set_length : 'tags this -> float -> unit) =
      fun (x6010 : 'tags this) ->
        fun (x6011 : float) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x6010) "length"
            (Ojs.float_to_js x6011)
    let (get_callee : 'tags this -> Function.t) =
      fun (x6013 : 'tags this) ->
        Function.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6013) "callee")
    let (set_callee : 'tags this -> Function.t -> unit) =
      fun (x6015 : 'tags this) ->
        fun (x6016 : Function.t) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x6015) "callee"
            (Function.t_to_js x6016)
    let cast_from = Obj.magic
  end
module Generator =
  struct
    type ('T, 'TReturn, 'TNext) t =
      [ `Generator of ('T * 'TReturn * 'TNext) 
      | `Iterator of ('T * 'TReturn * 'TNext) ] intf
    let rec t_of_js :
      'T 'TReturn 'TNext .
        (Ojs.t -> 'T) ->
          (Ojs.t -> 'TReturn) ->
            (Ojs.t -> 'TNext) -> Ojs.t -> ('T, 'TReturn, 'TNext) t
      = fun _T -> fun _TReturn -> fun _TNext -> Obj.magic
    and t_to_js :
      'T 'TReturn 'TNext .
        ('T -> Ojs.t) ->
          ('TReturn -> Ojs.t) ->
            ('TNext -> Ojs.t) -> ('T, 'TReturn, 'TNext) t -> Ojs.t
      = fun _T -> fun _TReturn -> fun _TNext -> Obj.magic
    type ('T, 'TReturn) t_2 = ('T, 'TReturn, unknown) t
    let rec t_2_of_js :
      'T 'TReturn .
        (Ojs.t -> 'T) -> (Ojs.t -> 'TReturn) -> Ojs.t -> ('T, 'TReturn) t_2
      =
      fun (type __T) ->
        fun (type __TReturn) ->
          fun (__T_of_js : Ojs.t -> __T) ->
            fun (__TReturn_of_js : Ojs.t -> __TReturn) ->
              fun (x6022 : Ojs.t) ->
                t_of_js __T_of_js __TReturn_of_js unknown_of_js x6022
    and t_2_to_js :
      'T 'TReturn .
        ('T -> Ojs.t) -> ('TReturn -> Ojs.t) -> ('T, 'TReturn) t_2 -> Ojs.t
      =
      fun (type __T) ->
        fun (type __TReturn) ->
          fun (__T_to_js : __T -> Ojs.t) ->
            fun (__TReturn_to_js : __TReturn -> Ojs.t) ->
              fun (x6018 : (__T, __TReturn, unknown) t) ->
                t_to_js __T_to_js __TReturn_to_js unknown_to_js x6018
    type 'T t_1 = ('T, any, unknown) t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 =
      fun (type __T) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x6030 : Ojs.t) ->
            t_of_js __T_of_js any_of_js unknown_of_js x6030
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t =
      fun (type __T) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x6026 : (__T, any, unknown) t) ->
            t_to_js __T_to_js any_to_js unknown_to_js x6026
    type t_0 = (unknown, any, unknown) t
    let rec t_0_of_js : Ojs.t -> t_0 =
      fun (x6038 : Ojs.t) ->
        t_of_js unknown_of_js any_of_js unknown_of_js x6038
    and t_0_to_js : t_0 -> Ojs.t =
      fun (x6034 : (unknown, any, unknown) t) ->
        t_to_js unknown_to_js any_to_js unknown_to_js x6034
    type ('T, 'TReturn, 'TNext) tags =
      [ `Generator of ('T * 'TReturn * 'TNext) 
      | `Iterator of ('T * 'TReturn * 'TNext) ]
    type ('T, 'TReturn) tags_2 = ('T, 'TReturn, unknown) tags
    type 'T tags_1 = ('T, any, unknown) tags
    type tags_0 = (unknown, any, unknown) tags
    type ('tags, 'T, 'TReturn, 'TNext) this =
      'tags intf constraint 'tags =
                  [> `Generator of ('T * 'TReturn * 'TNext) ]
    let rec this_of_js :
      'tags 'T 'TReturn 'TNext .
        (Ojs.t -> 'tags) ->
          (Ojs.t -> 'T) ->
            (Ojs.t -> 'TReturn) ->
              (Ojs.t -> 'TNext) ->
                Ojs.t -> ('tags, 'T, 'TReturn, 'TNext) this
      =
      fun (type __tags) ->
        fun (type __T) ->
          fun (type __TReturn) ->
            fun (type __TNext) ->
              fun (__tags_of_js : Ojs.t -> __tags) ->
                fun (__T_of_js : Ojs.t -> __T) ->
                  fun (__TReturn_of_js : Ojs.t -> __TReturn) ->
                    fun (__TNext_of_js : Ojs.t -> __TNext) ->
                      fun (x6044 : Ojs.t) -> intf_of_js __tags_of_js x6044
    and this_to_js :
      'tags 'T 'TReturn 'TNext .
        ('tags -> Ojs.t) ->
          ('T -> Ojs.t) ->
            ('TReturn -> Ojs.t) ->
              ('TNext -> Ojs.t) ->
                ('tags, 'T, 'TReturn, 'TNext) this -> Ojs.t
      =
      fun (type __tags) ->
        fun (type __T) ->
          fun (type __TReturn) ->
            fun (type __TNext) ->
              fun (__tags_to_js : __tags -> Ojs.t) ->
                fun (__T_to_js : __T -> Ojs.t) ->
                  fun (__TReturn_to_js : __TReturn -> Ojs.t) ->
                    fun (__TNext_to_js : __TNext -> Ojs.t) ->
                      fun (x6042 : __tags intf) ->
                        intf_to_js __tags_to_js x6042
    let (next :
      ('tags, 'T, 'TReturn, 'TNext) this ->
        args:any list -> ('T, 'TReturn) IteratorResult.t)
      =
      fun (x6049 : ('tags, 'T, 'TReturn, 'TNext) this) ->
        fun ~args:(x6046 : any list) ->
          IteratorResult.t_of_js Obj.magic Obj.magic
            (let x6054 =
               this_to_js Obj.magic Obj.magic Obj.magic Obj.magic x6049 in
             Ojs.call (Ojs.get_prop_ascii x6054 "next") "apply"
               [|x6054;((let x6047 =
                           Ojs.new_obj
                             (Ojs.get_prop_ascii Ojs.global "Array") 
                             [||] in
                         List.iter
                           (fun (x6048 : any) ->
                              ignore
                                (Ojs.call x6047 "push" [|(any_to_js x6048)|]))
                           x6046;
                         x6047))|])
    let (return :
      ('tags, 'T, 'TReturn, 'TNext) this ->
        value:'TReturn -> ('T, 'TReturn) IteratorResult.t)
      =
      fun (x6058 : ('tags, 'T, 'TReturn, 'TNext) this) ->
        fun ~value:(x6057 : 'TReturn) ->
          IteratorResult.t_of_js Obj.magic Obj.magic
            (Ojs.call
               (this_to_js Obj.magic Obj.magic Obj.magic Obj.magic x6058)
               "return" [|(Obj.magic x6057)|])
    let (throw :
      ('tags, 'T, 'TReturn, 'TNext) this ->
        e:any -> ('T, 'TReturn) IteratorResult.t)
      =
      fun (x6066 : ('tags, 'T, 'TReturn, 'TNext) this) ->
        fun ~e:(x6065 : any) ->
          IteratorResult.t_of_js Obj.magic Obj.magic
            (Ojs.call
               (this_to_js Obj.magic Obj.magic Obj.magic Obj.magic x6066)
               "throw" [|(any_to_js x6065)|])
    let cast_from = Obj.magic
  end
module GeneratorFunction =
  struct
    type t = [ `GeneratorFunction ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type tags = [ `GeneratorFunction ]
    type 'tags this = 'tags intf constraint 'tags = [> `GeneratorFunction ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x6075 : Ojs.t) -> intf_of_js __tags_of_js x6075
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x6073 : __tags intf) -> intf_to_js __tags_to_js x6073
    let (create : 'tags this -> args:any list -> Generator.t_0) =
      fun (x6080 : 'tags this) ->
        fun ~args:(x6077 : any list) ->
          Generator.t_0_of_js
            (Ojs.new_obj_arr (this_to_js Obj.magic x6080)
               (let x6078 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                List.iter
                  (fun (x6079 : any) ->
                     ignore (Ojs.call x6078 "push" [|(any_to_js x6079)|]))
                  x6077;
                x6078))
    let (apply : 'tags this -> args:any list -> Generator.t_0) =
      fun (x6085 : 'tags this) ->
        fun ~args:(x6082 : any list) ->
          Generator.t_0_of_js
            (Ojs.call (this_to_js Obj.magic x6085) "apply"
               [|Ojs.null;((let x6083 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            List.iter
                              (fun (x6084 : any) ->
                                 ignore
                                   (Ojs.call x6083 "push"
                                      [|(any_to_js x6084)|])) x6082;
                            x6083))|])
    let (get_length : 'tags this -> float) =
      fun (x6087 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6087) "length")
    let (get_name : 'tags this -> string) =
      fun (x6089 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6089) "name")
    let (get_prototype : 'tags this -> Generator.t_0) =
      fun (x6091 : 'tags this) ->
        Generator.t_0_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6091) "prototype")
    let cast_from = Obj.magic
  end
module GeneratorFunctionConstructor =
  struct
    type t = [ `GeneratorFunctionConstructor ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type tags = [ `GeneratorFunctionConstructor ]
    type 'tags this =
      'tags intf constraint 'tags = [> `GeneratorFunctionConstructor ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x6095 : Ojs.t) -> intf_of_js __tags_of_js x6095
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x6093 : __tags intf) -> intf_to_js __tags_to_js x6093
    let (create : 'tags this -> args:string list -> GeneratorFunction.t) =
      fun (x6100 : 'tags this) ->
        fun ~args:(x6097 : string list) ->
          GeneratorFunction.t_of_js
            (Ojs.new_obj_arr (this_to_js Obj.magic x6100)
               (let x6098 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                List.iter
                  (fun (x6099 : string) ->
                     ignore
                       (Ojs.call x6098 "push" [|(Ojs.string_to_js x6099)|]))
                  x6097;
                x6098))
    let (apply : 'tags this -> args:string list -> GeneratorFunction.t) =
      fun (x6105 : 'tags this) ->
        fun ~args:(x6102 : string list) ->
          GeneratorFunction.t_of_js
            (Ojs.call (this_to_js Obj.magic x6105) "apply"
               [|Ojs.null;((let x6103 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            List.iter
                              (fun (x6104 : string) ->
                                 ignore
                                   (Ojs.call x6103 "push"
                                      [|(Ojs.string_to_js x6104)|])) x6102;
                            x6103))|])
    let (get_length : 'tags this -> float) =
      fun (x6107 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6107) "length")
    let (get_name : 'tags this -> string) =
      fun (x6109 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6109) "name")
    let (get_prototype : 'tags this -> GeneratorFunction.t) =
      fun (x6111 : 'tags this) ->
        GeneratorFunction.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6111) "prototype")
    let cast_from = Obj.magic
  end
module Float64Array =
  struct
    type t = [ `Float64Array ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type tags = [ `Float64Array ]
    type 'tags this = 'tags intf constraint 'tags = [> `Float64Array ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x6115 : Ojs.t) -> intf_of_js __tags_of_js x6115
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x6113 : __tags intf) -> intf_to_js __tags_to_js x6113
    let (findLast :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> bool) ->
          ?thisArg:any -> unit -> 'S option)
      =
      fun (x6124 : 'tags this) ->
        fun
          ~predicate:(x6117 : value:float -> index:float -> array:t -> bool)
          ->
          fun ?thisArg:(x6118 : any option) ->
            fun () ->
              Ojs.option_of_js Obj.magic
                (let x6126 = this_to_js Obj.magic x6124 in
                 Ojs.call (Ojs.get_prop_ascii x6126 "findLast") "apply"
                   [|x6126;((let x6119 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6119 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x6121 : Ojs.t) ->
                                          fun (x6122 : Ojs.t) ->
                                            fun (x6123 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x6117
                                                   ~value:(Ojs.float_of_js
                                                             x6121)
                                                   ~index:(Ojs.float_of_js
                                                             x6122)
                                                   ~array:(t_of_js x6123))))|]);
                             (match x6118 with
                              | Some x6120 ->
                                  ignore
                                    (Ojs.call x6119 "push"
                                       [|(any_to_js x6120)|])
                              | None -> ());
                             x6119))|])
    let (findLast' :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> float option)
      =
      fun (x6135 : 'tags this) ->
        fun
          ~predicate:(x6128 :
                       value:float -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x6129 : any option) ->
            fun () ->
              Ojs.option_of_js Ojs.float_of_js
                (let x6137 = this_to_js Obj.magic x6135 in
                 Ojs.call (Ojs.get_prop_ascii x6137 "findLast") "apply"
                   [|x6137;((let x6130 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6130 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x6132 : Ojs.t) ->
                                          fun (x6133 : Ojs.t) ->
                                            fun (x6134 : Ojs.t) ->
                                              unknown_to_js
                                                (x6128
                                                   ~value:(Ojs.float_of_js
                                                             x6132)
                                                   ~index:(Ojs.float_of_js
                                                             x6133)
                                                   ~array:(t_of_js x6134))))|]);
                             (match x6129 with
                              | Some x6131 ->
                                  ignore
                                    (Ojs.call x6130 "push"
                                       [|(any_to_js x6131)|])
                              | None -> ());
                             x6130))|])
    let (findLastIndex :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> float)
      =
      fun (x6146 : 'tags this) ->
        fun
          ~predicate:(x6139 :
                       value:float -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x6140 : any option) ->
            fun () ->
              Ojs.float_of_js
                (let x6148 = this_to_js Obj.magic x6146 in
                 Ojs.call (Ojs.get_prop_ascii x6148 "findLastIndex") "apply"
                   [|x6148;((let x6141 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6141 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x6143 : Ojs.t) ->
                                          fun (x6144 : Ojs.t) ->
                                            fun (x6145 : Ojs.t) ->
                                              unknown_to_js
                                                (x6139
                                                   ~value:(Ojs.float_of_js
                                                             x6143)
                                                   ~index:(Ojs.float_of_js
                                                             x6144)
                                                   ~array:(t_of_js x6145))))|]);
                             (match x6140 with
                              | Some x6142 ->
                                  ignore
                                    (Ojs.call x6141 "push"
                                       [|(any_to_js x6142)|])
                              | None -> ());
                             x6141))|])
    let (toReversed : 'tags this -> t) =
      fun (x6149 : 'tags this) ->
        t_of_js (Ojs.call (this_to_js Obj.magic x6149) "toReversed" [||])
    let (toSorted :
      'tags this -> ?compareFn:(a:float -> b:float -> float) -> unit -> t) =
      fun (x6156 : 'tags this) ->
        fun ?compareFn:(x6151 : (a:float -> b:float -> float) option) ->
          fun () ->
            t_of_js
              (let x6158 = this_to_js Obj.magic x6156 in
               Ojs.call (Ojs.get_prop_ascii x6158 "toSorted") "apply"
                 [|x6158;((let x6152 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x6151 with
                            | Some x6153 ->
                                ignore
                                  (Ojs.call x6152 "push"
                                     [|(Ojs.fun_to_js 2
                                          (fun (x6154 : Ojs.t) ->
                                             fun (x6155 : Ojs.t) ->
                                               Ojs.float_to_js
                                                 (x6153
                                                    ~a:(Ojs.float_of_js x6154)
                                                    ~b:(Ojs.float_of_js x6155))))|])
                            | None -> ());
                           x6152))|])
    let (with_ : 'tags this -> index:float -> value:float -> t) =
      fun (x6161 : 'tags this) ->
        fun ~index:(x6159 : float) ->
          fun ~value:(x6160 : float) ->
            t_of_js
              (Ojs.call (this_to_js Obj.magic x6161) "with"
                 [|(Ojs.float_to_js x6159);(Ojs.float_to_js x6160)|])
    let (at : 'tags this -> index:float -> float option) =
      fun (x6164 : 'tags this) ->
        fun ~index:(x6163 : float) ->
          Ojs.option_of_js Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x6164) "at"
               [|(Ojs.float_to_js x6163)|])
    let (includes :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> bool)
      =
      fun (x6171 : 'tags this) ->
        fun ~searchElement:(x6167 : float) ->
          fun ?fromIndex:(x6168 : float option) ->
            fun () ->
              Ojs.bool_of_js
                (let x6173 = this_to_js Obj.magic x6171 in
                 Ojs.call (Ojs.get_prop_ascii x6173 "includes") "apply"
                   [|x6173;((let x6169 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6169 "push"
                                  [|(Ojs.float_to_js x6167)|]);
                             (match x6168 with
                              | Some x6170 ->
                                  ignore
                                    (Ojs.call x6169 "push"
                                       [|(Ojs.float_to_js x6170)|])
                              | None -> ());
                             x6169))|])
    let (entries : 'tags this -> (float * float) IterableIterator.t) =
      fun (x6174 : 'tags this) ->
        IterableIterator.t_of_js
          (fun (x6176 : Ojs.t) ->
             let x6177 = x6176 in
             ((Ojs.float_of_js (Ojs.array_get x6177 0)),
               (Ojs.float_of_js (Ojs.array_get x6177 1))))
          (Ojs.call (this_to_js Obj.magic x6174) "entries" [||])
    let (keys : 'tags this -> float IterableIterator.t) =
      fun (x6178 : 'tags this) ->
        IterableIterator.t_of_js Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x6178) "keys" [||])
    let (values : 'tags this -> float IterableIterator.t) =
      fun (x6181 : 'tags this) ->
        IterableIterator.t_of_js Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x6181) "values" [||])
    let (get_BYTES_PER_ELEMENT : 'tags this -> float) =
      fun (x6184 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6184)
             "BYTES_PER_ELEMENT")
    let (get_buffer : 'tags this -> ArrayBufferLike.t) =
      fun (x6186 : 'tags this) ->
        ArrayBufferLike.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6186) "buffer")
    let (get_byteLength : 'tags this -> float) =
      fun (x6188 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6188) "byteLength")
    let (get_byteOffset : 'tags this -> float) =
      fun (x6190 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6190) "byteOffset")
    let (copyWithin :
      'tags this ->
        target:float -> start:float -> ?end_:float -> unit -> 'tags this)
      =
      fun (x6197 : 'tags this) ->
        fun ~target:(x6192 : float) ->
          fun ~start:(x6193 : float) ->
            fun ?end_:(x6194 : float option) ->
              fun () ->
                this_of_js Obj.magic
                  (let x6199 = this_to_js Obj.magic x6197 in
                   Ojs.call (Ojs.get_prop_ascii x6199 "copyWithin") "apply"
                     [|x6199;((let x6195 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x6195 "push"
                                    [|(Ojs.float_to_js x6192)|]);
                               ignore
                                 (Ojs.call x6195 "push"
                                    [|(Ojs.float_to_js x6193)|]);
                               (match x6194 with
                                | Some x6196 ->
                                    ignore
                                      (Ojs.call x6195 "push"
                                         [|(Ojs.float_to_js x6196)|])
                                | None -> ());
                               x6195))|])
    let (every :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x6208 : 'tags this) ->
        fun
          ~predicate:(x6201 :
                       value:float -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x6202 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x6210 = this_to_js Obj.magic x6208 in
                 Ojs.call (Ojs.get_prop_ascii x6210 "every") "apply"
                   [|x6210;((let x6203 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6203 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x6205 : Ojs.t) ->
                                          fun (x6206 : Ojs.t) ->
                                            fun (x6207 : Ojs.t) ->
                                              unknown_to_js
                                                (x6201
                                                   ~value:(Ojs.float_of_js
                                                             x6205)
                                                   ~index:(Ojs.float_of_js
                                                             x6206)
                                                   ~array:(t_of_js x6207))))|]);
                             (match x6202 with
                              | Some x6204 ->
                                  ignore
                                    (Ojs.call x6203 "push"
                                       [|(any_to_js x6204)|])
                              | None -> ());
                             x6203))|])
    let (fill :
      'tags this ->
        value:float -> ?start:float -> ?end_:float -> unit -> 'tags this)
      =
      fun (x6217 : 'tags this) ->
        fun ~value:(x6211 : float) ->
          fun ?start:(x6212 : float option) ->
            fun ?end_:(x6213 : float option) ->
              fun () ->
                this_of_js Obj.magic
                  (let x6219 = this_to_js Obj.magic x6217 in
                   Ojs.call (Ojs.get_prop_ascii x6219 "fill") "apply"
                     [|x6219;((let x6214 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x6214 "push"
                                    [|(Ojs.float_to_js x6211)|]);
                               (match x6212 with
                                | Some x6216 ->
                                    ignore
                                      (Ojs.call x6214 "push"
                                         [|(Ojs.float_to_js x6216)|])
                                | None -> ());
                               (match x6213 with
                                | Some x6215 ->
                                    ignore
                                      (Ojs.call x6214 "push"
                                         [|(Ojs.float_to_js x6215)|])
                                | None -> ());
                               x6214))|])
    let (filter :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> any) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x6228 : 'tags this) ->
        fun ~predicate:(x6221 : value:float -> index:float -> array:t -> any)
          ->
          fun ?thisArg:(x6222 : any option) ->
            fun () ->
              t_of_js
                (let x6230 = this_to_js Obj.magic x6228 in
                 Ojs.call (Ojs.get_prop_ascii x6230 "filter") "apply"
                   [|x6230;((let x6223 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6223 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x6225 : Ojs.t) ->
                                          fun (x6226 : Ojs.t) ->
                                            fun (x6227 : Ojs.t) ->
                                              any_to_js
                                                (x6221
                                                   ~value:(Ojs.float_of_js
                                                             x6225)
                                                   ~index:(Ojs.float_of_js
                                                             x6226)
                                                   ~array:(t_of_js x6227))))|]);
                             (match x6222 with
                              | Some x6224 ->
                                  ignore
                                    (Ojs.call x6223 "push"
                                       [|(any_to_js x6224)|])
                              | None -> ());
                             x6223))|])
    let (find :
      'tags this ->
        predicate:(value:float -> index:float -> obj:t -> bool) ->
          ?thisArg:any -> unit -> float option)
      =
      fun (x6238 : 'tags this) ->
        fun ~predicate:(x6231 : value:float -> index:float -> obj:t -> bool)
          ->
          fun ?thisArg:(x6232 : any option) ->
            fun () ->
              Ojs.option_of_js Ojs.float_of_js
                (let x6240 = this_to_js Obj.magic x6238 in
                 Ojs.call (Ojs.get_prop_ascii x6240 "find") "apply"
                   [|x6240;((let x6233 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6233 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x6235 : Ojs.t) ->
                                          fun (x6236 : Ojs.t) ->
                                            fun (x6237 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x6231
                                                   ~value:(Ojs.float_of_js
                                                             x6235)
                                                   ~index:(Ojs.float_of_js
                                                             x6236)
                                                   ~obj:(t_of_js x6237))))|]);
                             (match x6232 with
                              | Some x6234 ->
                                  ignore
                                    (Ojs.call x6233 "push"
                                       [|(any_to_js x6234)|])
                              | None -> ());
                             x6233))|])
    let (findIndex :
      'tags this ->
        predicate:(value:float -> index:float -> obj:t -> bool) ->
          ?thisArg:any -> unit -> float)
      =
      fun (x6249 : 'tags this) ->
        fun ~predicate:(x6242 : value:float -> index:float -> obj:t -> bool)
          ->
          fun ?thisArg:(x6243 : any option) ->
            fun () ->
              Ojs.float_of_js
                (let x6251 = this_to_js Obj.magic x6249 in
                 Ojs.call (Ojs.get_prop_ascii x6251 "findIndex") "apply"
                   [|x6251;((let x6244 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6244 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x6246 : Ojs.t) ->
                                          fun (x6247 : Ojs.t) ->
                                            fun (x6248 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x6242
                                                   ~value:(Ojs.float_of_js
                                                             x6246)
                                                   ~index:(Ojs.float_of_js
                                                             x6247)
                                                   ~obj:(t_of_js x6248))))|]);
                             (match x6243 with
                              | Some x6245 ->
                                  ignore
                                    (Ojs.call x6244 "push"
                                       [|(any_to_js x6245)|])
                              | None -> ());
                             x6244))|])
    let (forEach :
      'tags this ->
        callbackfn:(value:float -> index:float -> array:t -> unit) ->
          ?thisArg:any -> unit -> unit)
      =
      fun (x6259 : 'tags this) ->
        fun
          ~callbackfn:(x6252 : value:float -> index:float -> array:t -> unit)
          ->
          fun ?thisArg:(x6253 : any option) ->
            fun () ->
              ignore
                (let x6261 = this_to_js Obj.magic x6259 in
                 Ojs.call (Ojs.get_prop_ascii x6261 "forEach") "apply"
                   [|x6261;((let x6254 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6254 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x6256 : Ojs.t) ->
                                          fun (x6257 : Ojs.t) ->
                                            fun (x6258 : Ojs.t) ->
                                              x6252
                                                ~value:(Ojs.float_of_js x6256)
                                                ~index:(Ojs.float_of_js x6257)
                                                ~array:(t_of_js x6258)))|]);
                             (match x6253 with
                              | Some x6255 ->
                                  ignore
                                    (Ojs.call x6254 "push"
                                       [|(any_to_js x6255)|])
                              | None -> ());
                             x6254))|])
    let (indexOf :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> float)
      =
      fun (x6266 : 'tags this) ->
        fun ~searchElement:(x6262 : float) ->
          fun ?fromIndex:(x6263 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x6268 = this_to_js Obj.magic x6266 in
                 Ojs.call (Ojs.get_prop_ascii x6268 "indexOf") "apply"
                   [|x6268;((let x6264 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6264 "push"
                                  [|(Ojs.float_to_js x6262)|]);
                             (match x6263 with
                              | Some x6265 ->
                                  ignore
                                    (Ojs.call x6264 "push"
                                       [|(Ojs.float_to_js x6265)|])
                              | None -> ());
                             x6264))|])
    let (join : 'tags this -> ?separator:string -> unit -> string) =
      fun (x6272 : 'tags this) ->
        fun ?separator:(x6269 : string option) ->
          fun () ->
            Ojs.string_of_js
              (let x6274 = this_to_js Obj.magic x6272 in
               Ojs.call (Ojs.get_prop_ascii x6274 "join") "apply"
                 [|x6274;((let x6270 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x6269 with
                            | Some x6271 ->
                                ignore
                                  (Ojs.call x6270 "push"
                                     [|(Ojs.string_to_js x6271)|])
                            | None -> ());
                           x6270))|])
    let (lastIndexOf :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> float)
      =
      fun (x6279 : 'tags this) ->
        fun ~searchElement:(x6275 : float) ->
          fun ?fromIndex:(x6276 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x6281 = this_to_js Obj.magic x6279 in
                 Ojs.call (Ojs.get_prop_ascii x6281 "lastIndexOf") "apply"
                   [|x6281;((let x6277 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6277 "push"
                                  [|(Ojs.float_to_js x6275)|]);
                             (match x6276 with
                              | Some x6278 ->
                                  ignore
                                    (Ojs.call x6277 "push"
                                       [|(Ojs.float_to_js x6278)|])
                              | None -> ());
                             x6277))|])
    let (get_length : 'tags this -> float) =
      fun (x6282 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6282) "length")
    let (map :
      'tags this ->
        callbackfn:(value:float -> index:float -> array:t -> float) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x6291 : 'tags this) ->
        fun
          ~callbackfn:(x6284 :
                        value:float -> index:float -> array:t -> float)
          ->
          fun ?thisArg:(x6285 : any option) ->
            fun () ->
              t_of_js
                (let x6293 = this_to_js Obj.magic x6291 in
                 Ojs.call (Ojs.get_prop_ascii x6293 "map") "apply"
                   [|x6293;((let x6286 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6286 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x6288 : Ojs.t) ->
                                          fun (x6289 : Ojs.t) ->
                                            fun (x6290 : Ojs.t) ->
                                              Ojs.float_to_js
                                                (x6284
                                                   ~value:(Ojs.float_of_js
                                                             x6288)
                                                   ~index:(Ojs.float_of_js
                                                             x6289)
                                                   ~array:(t_of_js x6290))))|]);
                             (match x6285 with
                              | Some x6287 ->
                                  ignore
                                    (Ojs.call x6286 "push"
                                       [|(any_to_js x6287)|])
                              | None -> ());
                             x6286))|])
    let (reduce :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> float)
      =
      fun (x6299 : 'tags this) ->
        fun
          ~callbackfn:(x6294 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x6299) "reduce"
               [|(Ojs.fun_to_js 4
                    (fun (x6295 : Ojs.t) ->
                       fun (x6296 : Ojs.t) ->
                         fun (x6297 : Ojs.t) ->
                           fun (x6298 : Ojs.t) ->
                             Ojs.float_to_js
                               (x6294 ~previousValue:(Ojs.float_of_js x6295)
                                  ~currentValue:(Ojs.float_of_js x6296)
                                  ~currentIndex:(Ojs.float_of_js x6297)
                                  ~array:(t_of_js x6298))))|])
    let (reduce' :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> initialValue:float -> float)
      =
      fun (x6307 : 'tags this) ->
        fun
          ~callbackfn:(x6301 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          fun ~initialValue:(x6306 : float) ->
            Ojs.float_of_js
              (Ojs.call (this_to_js Obj.magic x6307) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x6302 : Ojs.t) ->
                         fun (x6303 : Ojs.t) ->
                           fun (x6304 : Ojs.t) ->
                             fun (x6305 : Ojs.t) ->
                               Ojs.float_to_js
                                 (x6301
                                    ~previousValue:(Ojs.float_of_js x6302)
                                    ~currentValue:(Ojs.float_of_js x6303)
                                    ~currentIndex:(Ojs.float_of_js x6304)
                                    ~array:(t_of_js x6305))));(Ojs.float_to_js
                                                                 x6306)|])
    let (reduce'' :
      'tags this ->
        callbackfn:(previousValue:'U ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x6315 : 'tags this) ->
        fun
          ~callbackfn:(x6309 :
                        previousValue:'U ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x6314 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic x6315) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x6310 : Ojs.t) ->
                         fun (x6311 : Ojs.t) ->
                           fun (x6312 : Ojs.t) ->
                             fun (x6313 : Ojs.t) ->
                               Obj.magic
                                 (x6309 ~previousValue:(Obj.magic x6310)
                                    ~currentValue:(Ojs.float_of_js x6311)
                                    ~currentIndex:(Ojs.float_of_js x6312)
                                    ~array:(t_of_js x6313))));(Obj.magic
                                                                 x6314)|])
    let (reduceRight :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> float)
      =
      fun (x6322 : 'tags this) ->
        fun
          ~callbackfn:(x6317 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x6322) "reduceRight"
               [|(Ojs.fun_to_js 4
                    (fun (x6318 : Ojs.t) ->
                       fun (x6319 : Ojs.t) ->
                         fun (x6320 : Ojs.t) ->
                           fun (x6321 : Ojs.t) ->
                             Ojs.float_to_js
                               (x6317 ~previousValue:(Ojs.float_of_js x6318)
                                  ~currentValue:(Ojs.float_of_js x6319)
                                  ~currentIndex:(Ojs.float_of_js x6320)
                                  ~array:(t_of_js x6321))))|])
    let (reduceRight' :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> initialValue:float -> float)
      =
      fun (x6330 : 'tags this) ->
        fun
          ~callbackfn:(x6324 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          fun ~initialValue:(x6329 : float) ->
            Ojs.float_of_js
              (Ojs.call (this_to_js Obj.magic x6330) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x6325 : Ojs.t) ->
                         fun (x6326 : Ojs.t) ->
                           fun (x6327 : Ojs.t) ->
                             fun (x6328 : Ojs.t) ->
                               Ojs.float_to_js
                                 (x6324
                                    ~previousValue:(Ojs.float_of_js x6325)
                                    ~currentValue:(Ojs.float_of_js x6326)
                                    ~currentIndex:(Ojs.float_of_js x6327)
                                    ~array:(t_of_js x6328))));(Ojs.float_to_js
                                                                 x6329)|])
    let (reduceRight'' :
      'tags this ->
        callbackfn:(previousValue:'U ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x6338 : 'tags this) ->
        fun
          ~callbackfn:(x6332 :
                        previousValue:'U ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x6337 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic x6338) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x6333 : Ojs.t) ->
                         fun (x6334 : Ojs.t) ->
                           fun (x6335 : Ojs.t) ->
                             fun (x6336 : Ojs.t) ->
                               Obj.magic
                                 (x6332 ~previousValue:(Obj.magic x6333)
                                    ~currentValue:(Ojs.float_of_js x6334)
                                    ~currentIndex:(Ojs.float_of_js x6335)
                                    ~array:(t_of_js x6336))));(Obj.magic
                                                                 x6337)|])
    let (reverse : 'tags this -> t) =
      fun (x6340 : 'tags this) ->
        t_of_js (Ojs.call (this_to_js Obj.magic x6340) "reverse" [||])
    let (set_ :
      'tags this -> array:float ArrayLike.t -> ?offset:float -> unit -> unit)
      =
      fun (x6347 : 'tags this) ->
        fun ~array:(x6342 : float ArrayLike.t) ->
          fun ?offset:(x6343 : float option) ->
            fun () ->
              ignore
                (let x6349 = this_to_js Obj.magic x6347 in
                 Ojs.call (Ojs.get_prop_ascii x6349 "set") "apply"
                   [|x6349;((let x6344 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6344 "push"
                                  [|(ArrayLike.t_to_js Ojs.float_to_js x6342)|]);
                             (match x6343 with
                              | Some x6345 ->
                                  ignore
                                    (Ojs.call x6344 "push"
                                       [|(Ojs.float_to_js x6345)|])
                              | None -> ());
                             x6344))|])
    let (slice : 'tags this -> ?start:float -> ?end_:float -> unit -> t) =
      fun (x6355 : 'tags this) ->
        fun ?start:(x6350 : float option) ->
          fun ?end_:(x6351 : float option) ->
            fun () ->
              t_of_js
                (let x6357 = this_to_js Obj.magic x6355 in
                 Ojs.call (Ojs.get_prop_ascii x6357 "slice") "apply"
                   [|x6357;((let x6352 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x6350 with
                              | Some x6354 ->
                                  ignore
                                    (Ojs.call x6352 "push"
                                       [|(Ojs.float_to_js x6354)|])
                              | None -> ());
                             (match x6351 with
                              | Some x6353 ->
                                  ignore
                                    (Ojs.call x6352 "push"
                                       [|(Ojs.float_to_js x6353)|])
                              | None -> ());
                             x6352))|])
    let (some :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x6365 : 'tags this) ->
        fun
          ~predicate:(x6358 :
                       value:float -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x6359 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x6367 = this_to_js Obj.magic x6365 in
                 Ojs.call (Ojs.get_prop_ascii x6367 "some") "apply"
                   [|x6367;((let x6360 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6360 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x6362 : Ojs.t) ->
                                          fun (x6363 : Ojs.t) ->
                                            fun (x6364 : Ojs.t) ->
                                              unknown_to_js
                                                (x6358
                                                   ~value:(Ojs.float_of_js
                                                             x6362)
                                                   ~index:(Ojs.float_of_js
                                                             x6363)
                                                   ~array:(t_of_js x6364))))|]);
                             (match x6359 with
                              | Some x6361 ->
                                  ignore
                                    (Ojs.call x6360 "push"
                                       [|(any_to_js x6361)|])
                              | None -> ());
                             x6360))|])
    let (sort :
      'tags this ->
        ?compareFn:(a:float -> b:float -> float) -> unit -> 'tags this)
      =
      fun (x6373 : 'tags this) ->
        fun ?compareFn:(x6368 : (a:float -> b:float -> float) option) ->
          fun () ->
            this_of_js Obj.magic
              (let x6375 = this_to_js Obj.magic x6373 in
               Ojs.call (Ojs.get_prop_ascii x6375 "sort") "apply"
                 [|x6375;((let x6369 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x6368 with
                            | Some x6370 ->
                                ignore
                                  (Ojs.call x6369 "push"
                                     [|(Ojs.fun_to_js 2
                                          (fun (x6371 : Ojs.t) ->
                                             fun (x6372 : Ojs.t) ->
                                               Ojs.float_to_js
                                                 (x6370
                                                    ~a:(Ojs.float_of_js x6371)
                                                    ~b:(Ojs.float_of_js x6372))))|])
                            | None -> ());
                           x6369))|])
    let (subarray : 'tags this -> ?begin_:float -> ?end_:float -> unit -> t)
      =
      fun (x6382 : 'tags this) ->
        fun ?begin_:(x6377 : float option) ->
          fun ?end_:(x6378 : float option) ->
            fun () ->
              t_of_js
                (let x6384 = this_to_js Obj.magic x6382 in
                 Ojs.call (Ojs.get_prop_ascii x6384 "subarray") "apply"
                   [|x6384;((let x6379 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x6377 with
                              | Some x6381 ->
                                  ignore
                                    (Ojs.call x6379 "push"
                                       [|(Ojs.float_to_js x6381)|])
                              | None -> ());
                             (match x6378 with
                              | Some x6380 ->
                                  ignore
                                    (Ojs.call x6379 "push"
                                       [|(Ojs.float_to_js x6380)|])
                              | None -> ());
                             x6379))|])
    let (toLocaleString : 'tags this -> string) =
      fun (x6385 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x6385) "toLocaleString" [||])
    let (toString : 'tags this -> string) =
      fun (x6387 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x6387) "toString" [||])
    let (valueOf : 'tags this -> t) =
      fun (x6389 : 'tags this) ->
        t_of_js (Ojs.call (this_to_js Obj.magic x6389) "valueOf" [||])
    let (get : 'tags this -> float -> float) =
      fun (x6391 : 'tags this) ->
        fun (x6393 : float) ->
          Ojs.float_of_js
            (Ojs.get_prop (this_to_js Obj.magic x6391)
               (Ojs.float_to_js x6393))
    let (set : 'tags this -> float -> float -> unit) =
      fun (x6394 : 'tags this) ->
        fun (x6396 : float) ->
          fun (x6397 : float) ->
            Ojs.set_prop (this_to_js Obj.magic x6394) (Ojs.float_to_js x6396)
              (Ojs.float_to_js x6397)
    let (create : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Float64Array") [||])
    let (create' : float Iterable.t -> t) =
      fun (x6398 : float Iterable.t) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Float64Array")
             [|(Iterable.t_to_js Ojs.float_to_js x6398)|])
    let (from :
      arrayLike:float Iterable.t ->
        ?mapfn:(v:float -> k:float -> float) -> ?thisArg:any -> unit -> t)
      =
      fun ~arrayLike:(x6400 : float Iterable.t) ->
        fun ?mapfn:(x6401 : (v:float -> k:float -> float) option) ->
          fun ?thisArg:(x6402 : any option) ->
            fun () ->
              t_of_js
                (let x6409 = Ojs.get_prop_ascii Ojs.global "Float64Array" in
                 Ojs.call (Ojs.get_prop_ascii x6409 "from") "apply"
                   [|x6409;((let x6403 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6403 "push"
                                  [|(Iterable.t_to_js Ojs.float_to_js x6400)|]);
                             (match x6401 with
                              | Some x6405 ->
                                  ignore
                                    (Ojs.call x6403 "push"
                                       [|(Ojs.fun_to_js 2
                                            (fun (x6406 : Ojs.t) ->
                                               fun (x6407 : Ojs.t) ->
                                                 Ojs.float_to_js
                                                   (x6405
                                                      ~v:(Ojs.float_of_js
                                                            x6406)
                                                      ~k:(Ojs.float_of_js
                                                            x6407))))|])
                              | None -> ());
                             (match x6402 with
                              | Some x6404 ->
                                  ignore
                                    (Ojs.call x6403 "push"
                                       [|(any_to_js x6404)|])
                              | None -> ());
                             x6403))|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Float64Array")
             "prototype")
    let (create'' : float -> t) =
      fun (x6410 : float) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Float64Array")
             [|(Ojs.float_to_js x6410)|])
    let (create''' :
      [ `U1 of float ArrayLike.t  | `U2 of ArrayBufferLike.t ] -> t) =
      fun (x6411 : [ `U1 of float ArrayLike.t  | `U2 of ArrayBufferLike.t ])
        ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Float64Array")
             [|((match x6411 with
                 | `U1 x6412 -> ArrayLike.t_to_js Ojs.float_to_js x6412
                 | `U2 x6414 -> ArrayBufferLike.t_to_js x6414))|])
    let (create'''' :
      buffer:ArrayBufferLike.t ->
        ?byteOffset:float -> ?length:float -> unit -> t)
      =
      fun ~buffer:(x6415 : ArrayBufferLike.t) ->
        fun ?byteOffset:(x6416 : float option) ->
          fun ?length:(x6417 : float option) ->
            fun () ->
              t_of_js
                (Ojs.new_obj_arr
                   (Ojs.get_prop_ascii Ojs.global "Float64Array")
                   (let x6418 =
                      Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                        [||] in
                    ignore
                      (Ojs.call x6418 "push"
                         [|(ArrayBufferLike.t_to_js x6415)|]);
                    (match x6416 with
                     | Some x6420 ->
                         ignore
                           (Ojs.call x6418 "push" [|(Ojs.float_to_js x6420)|])
                     | None -> ());
                    (match x6417 with
                     | Some x6419 ->
                         ignore
                           (Ojs.call x6418 "push" [|(Ojs.float_to_js x6419)|])
                     | None -> ());
                    x6418))
    let (bytes_per_element : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Float64Array")
             "BYTES_PER_ELEMENT")
    let (of_ : float list -> t) =
      fun (x6421 : float list) ->
        t_of_js
          (let x6424 = Ojs.get_prop_ascii Ojs.global "Float64Array" in
           Ojs.call (Ojs.get_prop_ascii x6424 "of") "apply"
             [|x6424;((let x6422 =
                         Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                           [||] in
                       List.iter
                         (fun (x6423 : float) ->
                            ignore
                              (Ojs.call x6422 "push"
                                 [|(Ojs.float_to_js x6423)|])) x6421;
                       x6422))|])
    let (from' : float ArrayLike.t -> t) =
      fun (x6425 : float ArrayLike.t) ->
        t_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Float64Array") "from"
             [|(ArrayLike.t_to_js Ojs.float_to_js x6425)|])
    let (from'' :
      arrayLike:'T ArrayLike.t ->
        mapfn:(v:'T -> k:float -> float) -> ?thisArg:any -> unit -> t)
      =
      fun ~arrayLike:(x6427 : 'T ArrayLike.t) ->
        fun ~mapfn:(x6428 : v:'T -> k:float -> float) ->
          fun ?thisArg:(x6429 : any option) ->
            fun () ->
              t_of_js
                (let x6435 = Ojs.get_prop_ascii Ojs.global "Float64Array" in
                 Ojs.call (Ojs.get_prop_ascii x6435 "from") "apply"
                   [|x6435;((let x6430 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6430 "push"
                                  [|(ArrayLike.t_to_js Obj.magic x6427)|]);
                             ignore
                               (Ojs.call x6430 "push"
                                  [|(Ojs.fun_to_js 2
                                       (fun (x6432 : Ojs.t) ->
                                          fun (x6433 : Ojs.t) ->
                                            Ojs.float_to_js
                                              (x6428 ~v:(Obj.magic x6432)
                                                 ~k:(Ojs.float_of_js x6433))))|]);
                             (match x6429 with
                              | Some x6431 ->
                                  ignore
                                    (Ojs.call x6430 "push"
                                       [|(any_to_js x6431)|])
                              | None -> ());
                             x6430))|])
    let cast_from = Obj.magic
  end
module Float32Array =
  struct
    type t = [ `Float32Array ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type tags = [ `Float32Array ]
    type 'tags this = 'tags intf constraint 'tags = [> `Float32Array ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x6438 : Ojs.t) -> intf_of_js __tags_of_js x6438
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x6436 : __tags intf) -> intf_to_js __tags_to_js x6436
    let (findLast :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> bool) ->
          ?thisArg:any -> unit -> 'S option)
      =
      fun (x6447 : 'tags this) ->
        fun
          ~predicate:(x6440 : value:float -> index:float -> array:t -> bool)
          ->
          fun ?thisArg:(x6441 : any option) ->
            fun () ->
              Ojs.option_of_js Obj.magic
                (let x6449 = this_to_js Obj.magic x6447 in
                 Ojs.call (Ojs.get_prop_ascii x6449 "findLast") "apply"
                   [|x6449;((let x6442 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6442 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x6444 : Ojs.t) ->
                                          fun (x6445 : Ojs.t) ->
                                            fun (x6446 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x6440
                                                   ~value:(Ojs.float_of_js
                                                             x6444)
                                                   ~index:(Ojs.float_of_js
                                                             x6445)
                                                   ~array:(t_of_js x6446))))|]);
                             (match x6441 with
                              | Some x6443 ->
                                  ignore
                                    (Ojs.call x6442 "push"
                                       [|(any_to_js x6443)|])
                              | None -> ());
                             x6442))|])
    let (findLast' :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> float option)
      =
      fun (x6458 : 'tags this) ->
        fun
          ~predicate:(x6451 :
                       value:float -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x6452 : any option) ->
            fun () ->
              Ojs.option_of_js Ojs.float_of_js
                (let x6460 = this_to_js Obj.magic x6458 in
                 Ojs.call (Ojs.get_prop_ascii x6460 "findLast") "apply"
                   [|x6460;((let x6453 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6453 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x6455 : Ojs.t) ->
                                          fun (x6456 : Ojs.t) ->
                                            fun (x6457 : Ojs.t) ->
                                              unknown_to_js
                                                (x6451
                                                   ~value:(Ojs.float_of_js
                                                             x6455)
                                                   ~index:(Ojs.float_of_js
                                                             x6456)
                                                   ~array:(t_of_js x6457))))|]);
                             (match x6452 with
                              | Some x6454 ->
                                  ignore
                                    (Ojs.call x6453 "push"
                                       [|(any_to_js x6454)|])
                              | None -> ());
                             x6453))|])
    let (findLastIndex :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> float)
      =
      fun (x6469 : 'tags this) ->
        fun
          ~predicate:(x6462 :
                       value:float -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x6463 : any option) ->
            fun () ->
              Ojs.float_of_js
                (let x6471 = this_to_js Obj.magic x6469 in
                 Ojs.call (Ojs.get_prop_ascii x6471 "findLastIndex") "apply"
                   [|x6471;((let x6464 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6464 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x6466 : Ojs.t) ->
                                          fun (x6467 : Ojs.t) ->
                                            fun (x6468 : Ojs.t) ->
                                              unknown_to_js
                                                (x6462
                                                   ~value:(Ojs.float_of_js
                                                             x6466)
                                                   ~index:(Ojs.float_of_js
                                                             x6467)
                                                   ~array:(t_of_js x6468))))|]);
                             (match x6463 with
                              | Some x6465 ->
                                  ignore
                                    (Ojs.call x6464 "push"
                                       [|(any_to_js x6465)|])
                              | None -> ());
                             x6464))|])
    let (toReversed : 'tags this -> t) =
      fun (x6472 : 'tags this) ->
        t_of_js (Ojs.call (this_to_js Obj.magic x6472) "toReversed" [||])
    let (toSorted :
      'tags this -> ?compareFn:(a:float -> b:float -> float) -> unit -> t) =
      fun (x6479 : 'tags this) ->
        fun ?compareFn:(x6474 : (a:float -> b:float -> float) option) ->
          fun () ->
            t_of_js
              (let x6481 = this_to_js Obj.magic x6479 in
               Ojs.call (Ojs.get_prop_ascii x6481 "toSorted") "apply"
                 [|x6481;((let x6475 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x6474 with
                            | Some x6476 ->
                                ignore
                                  (Ojs.call x6475 "push"
                                     [|(Ojs.fun_to_js 2
                                          (fun (x6477 : Ojs.t) ->
                                             fun (x6478 : Ojs.t) ->
                                               Ojs.float_to_js
                                                 (x6476
                                                    ~a:(Ojs.float_of_js x6477)
                                                    ~b:(Ojs.float_of_js x6478))))|])
                            | None -> ());
                           x6475))|])
    let (with_ : 'tags this -> index:float -> value:float -> t) =
      fun (x6484 : 'tags this) ->
        fun ~index:(x6482 : float) ->
          fun ~value:(x6483 : float) ->
            t_of_js
              (Ojs.call (this_to_js Obj.magic x6484) "with"
                 [|(Ojs.float_to_js x6482);(Ojs.float_to_js x6483)|])
    let (at : 'tags this -> index:float -> float option) =
      fun (x6487 : 'tags this) ->
        fun ~index:(x6486 : float) ->
          Ojs.option_of_js Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x6487) "at"
               [|(Ojs.float_to_js x6486)|])
    let (includes :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> bool)
      =
      fun (x6494 : 'tags this) ->
        fun ~searchElement:(x6490 : float) ->
          fun ?fromIndex:(x6491 : float option) ->
            fun () ->
              Ojs.bool_of_js
                (let x6496 = this_to_js Obj.magic x6494 in
                 Ojs.call (Ojs.get_prop_ascii x6496 "includes") "apply"
                   [|x6496;((let x6492 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6492 "push"
                                  [|(Ojs.float_to_js x6490)|]);
                             (match x6491 with
                              | Some x6493 ->
                                  ignore
                                    (Ojs.call x6492 "push"
                                       [|(Ojs.float_to_js x6493)|])
                              | None -> ());
                             x6492))|])
    let (entries : 'tags this -> (float * float) IterableIterator.t) =
      fun (x6497 : 'tags this) ->
        IterableIterator.t_of_js
          (fun (x6499 : Ojs.t) ->
             let x6500 = x6499 in
             ((Ojs.float_of_js (Ojs.array_get x6500 0)),
               (Ojs.float_of_js (Ojs.array_get x6500 1))))
          (Ojs.call (this_to_js Obj.magic x6497) "entries" [||])
    let (keys : 'tags this -> float IterableIterator.t) =
      fun (x6501 : 'tags this) ->
        IterableIterator.t_of_js Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x6501) "keys" [||])
    let (values : 'tags this -> float IterableIterator.t) =
      fun (x6504 : 'tags this) ->
        IterableIterator.t_of_js Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x6504) "values" [||])
    let (get_BYTES_PER_ELEMENT : 'tags this -> float) =
      fun (x6507 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6507)
             "BYTES_PER_ELEMENT")
    let (get_buffer : 'tags this -> ArrayBufferLike.t) =
      fun (x6509 : 'tags this) ->
        ArrayBufferLike.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6509) "buffer")
    let (get_byteLength : 'tags this -> float) =
      fun (x6511 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6511) "byteLength")
    let (get_byteOffset : 'tags this -> float) =
      fun (x6513 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6513) "byteOffset")
    let (copyWithin :
      'tags this ->
        target:float -> start:float -> ?end_:float -> unit -> 'tags this)
      =
      fun (x6520 : 'tags this) ->
        fun ~target:(x6515 : float) ->
          fun ~start:(x6516 : float) ->
            fun ?end_:(x6517 : float option) ->
              fun () ->
                this_of_js Obj.magic
                  (let x6522 = this_to_js Obj.magic x6520 in
                   Ojs.call (Ojs.get_prop_ascii x6522 "copyWithin") "apply"
                     [|x6522;((let x6518 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x6518 "push"
                                    [|(Ojs.float_to_js x6515)|]);
                               ignore
                                 (Ojs.call x6518 "push"
                                    [|(Ojs.float_to_js x6516)|]);
                               (match x6517 with
                                | Some x6519 ->
                                    ignore
                                      (Ojs.call x6518 "push"
                                         [|(Ojs.float_to_js x6519)|])
                                | None -> ());
                               x6518))|])
    let (every :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x6531 : 'tags this) ->
        fun
          ~predicate:(x6524 :
                       value:float -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x6525 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x6533 = this_to_js Obj.magic x6531 in
                 Ojs.call (Ojs.get_prop_ascii x6533 "every") "apply"
                   [|x6533;((let x6526 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6526 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x6528 : Ojs.t) ->
                                          fun (x6529 : Ojs.t) ->
                                            fun (x6530 : Ojs.t) ->
                                              unknown_to_js
                                                (x6524
                                                   ~value:(Ojs.float_of_js
                                                             x6528)
                                                   ~index:(Ojs.float_of_js
                                                             x6529)
                                                   ~array:(t_of_js x6530))))|]);
                             (match x6525 with
                              | Some x6527 ->
                                  ignore
                                    (Ojs.call x6526 "push"
                                       [|(any_to_js x6527)|])
                              | None -> ());
                             x6526))|])
    let (fill :
      'tags this ->
        value:float -> ?start:float -> ?end_:float -> unit -> 'tags this)
      =
      fun (x6540 : 'tags this) ->
        fun ~value:(x6534 : float) ->
          fun ?start:(x6535 : float option) ->
            fun ?end_:(x6536 : float option) ->
              fun () ->
                this_of_js Obj.magic
                  (let x6542 = this_to_js Obj.magic x6540 in
                   Ojs.call (Ojs.get_prop_ascii x6542 "fill") "apply"
                     [|x6542;((let x6537 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x6537 "push"
                                    [|(Ojs.float_to_js x6534)|]);
                               (match x6535 with
                                | Some x6539 ->
                                    ignore
                                      (Ojs.call x6537 "push"
                                         [|(Ojs.float_to_js x6539)|])
                                | None -> ());
                               (match x6536 with
                                | Some x6538 ->
                                    ignore
                                      (Ojs.call x6537 "push"
                                         [|(Ojs.float_to_js x6538)|])
                                | None -> ());
                               x6537))|])
    let (filter :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> any) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x6551 : 'tags this) ->
        fun ~predicate:(x6544 : value:float -> index:float -> array:t -> any)
          ->
          fun ?thisArg:(x6545 : any option) ->
            fun () ->
              t_of_js
                (let x6553 = this_to_js Obj.magic x6551 in
                 Ojs.call (Ojs.get_prop_ascii x6553 "filter") "apply"
                   [|x6553;((let x6546 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6546 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x6548 : Ojs.t) ->
                                          fun (x6549 : Ojs.t) ->
                                            fun (x6550 : Ojs.t) ->
                                              any_to_js
                                                (x6544
                                                   ~value:(Ojs.float_of_js
                                                             x6548)
                                                   ~index:(Ojs.float_of_js
                                                             x6549)
                                                   ~array:(t_of_js x6550))))|]);
                             (match x6545 with
                              | Some x6547 ->
                                  ignore
                                    (Ojs.call x6546 "push"
                                       [|(any_to_js x6547)|])
                              | None -> ());
                             x6546))|])
    let (find :
      'tags this ->
        predicate:(value:float -> index:float -> obj:t -> bool) ->
          ?thisArg:any -> unit -> float option)
      =
      fun (x6561 : 'tags this) ->
        fun ~predicate:(x6554 : value:float -> index:float -> obj:t -> bool)
          ->
          fun ?thisArg:(x6555 : any option) ->
            fun () ->
              Ojs.option_of_js Ojs.float_of_js
                (let x6563 = this_to_js Obj.magic x6561 in
                 Ojs.call (Ojs.get_prop_ascii x6563 "find") "apply"
                   [|x6563;((let x6556 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6556 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x6558 : Ojs.t) ->
                                          fun (x6559 : Ojs.t) ->
                                            fun (x6560 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x6554
                                                   ~value:(Ojs.float_of_js
                                                             x6558)
                                                   ~index:(Ojs.float_of_js
                                                             x6559)
                                                   ~obj:(t_of_js x6560))))|]);
                             (match x6555 with
                              | Some x6557 ->
                                  ignore
                                    (Ojs.call x6556 "push"
                                       [|(any_to_js x6557)|])
                              | None -> ());
                             x6556))|])
    let (findIndex :
      'tags this ->
        predicate:(value:float -> index:float -> obj:t -> bool) ->
          ?thisArg:any -> unit -> float)
      =
      fun (x6572 : 'tags this) ->
        fun ~predicate:(x6565 : value:float -> index:float -> obj:t -> bool)
          ->
          fun ?thisArg:(x6566 : any option) ->
            fun () ->
              Ojs.float_of_js
                (let x6574 = this_to_js Obj.magic x6572 in
                 Ojs.call (Ojs.get_prop_ascii x6574 "findIndex") "apply"
                   [|x6574;((let x6567 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6567 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x6569 : Ojs.t) ->
                                          fun (x6570 : Ojs.t) ->
                                            fun (x6571 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x6565
                                                   ~value:(Ojs.float_of_js
                                                             x6569)
                                                   ~index:(Ojs.float_of_js
                                                             x6570)
                                                   ~obj:(t_of_js x6571))))|]);
                             (match x6566 with
                              | Some x6568 ->
                                  ignore
                                    (Ojs.call x6567 "push"
                                       [|(any_to_js x6568)|])
                              | None -> ());
                             x6567))|])
    let (forEach :
      'tags this ->
        callbackfn:(value:float -> index:float -> array:t -> unit) ->
          ?thisArg:any -> unit -> unit)
      =
      fun (x6582 : 'tags this) ->
        fun
          ~callbackfn:(x6575 : value:float -> index:float -> array:t -> unit)
          ->
          fun ?thisArg:(x6576 : any option) ->
            fun () ->
              ignore
                (let x6584 = this_to_js Obj.magic x6582 in
                 Ojs.call (Ojs.get_prop_ascii x6584 "forEach") "apply"
                   [|x6584;((let x6577 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6577 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x6579 : Ojs.t) ->
                                          fun (x6580 : Ojs.t) ->
                                            fun (x6581 : Ojs.t) ->
                                              x6575
                                                ~value:(Ojs.float_of_js x6579)
                                                ~index:(Ojs.float_of_js x6580)
                                                ~array:(t_of_js x6581)))|]);
                             (match x6576 with
                              | Some x6578 ->
                                  ignore
                                    (Ojs.call x6577 "push"
                                       [|(any_to_js x6578)|])
                              | None -> ());
                             x6577))|])
    let (indexOf :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> float)
      =
      fun (x6589 : 'tags this) ->
        fun ~searchElement:(x6585 : float) ->
          fun ?fromIndex:(x6586 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x6591 = this_to_js Obj.magic x6589 in
                 Ojs.call (Ojs.get_prop_ascii x6591 "indexOf") "apply"
                   [|x6591;((let x6587 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6587 "push"
                                  [|(Ojs.float_to_js x6585)|]);
                             (match x6586 with
                              | Some x6588 ->
                                  ignore
                                    (Ojs.call x6587 "push"
                                       [|(Ojs.float_to_js x6588)|])
                              | None -> ());
                             x6587))|])
    let (join : 'tags this -> ?separator:string -> unit -> string) =
      fun (x6595 : 'tags this) ->
        fun ?separator:(x6592 : string option) ->
          fun () ->
            Ojs.string_of_js
              (let x6597 = this_to_js Obj.magic x6595 in
               Ojs.call (Ojs.get_prop_ascii x6597 "join") "apply"
                 [|x6597;((let x6593 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x6592 with
                            | Some x6594 ->
                                ignore
                                  (Ojs.call x6593 "push"
                                     [|(Ojs.string_to_js x6594)|])
                            | None -> ());
                           x6593))|])
    let (lastIndexOf :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> float)
      =
      fun (x6602 : 'tags this) ->
        fun ~searchElement:(x6598 : float) ->
          fun ?fromIndex:(x6599 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x6604 = this_to_js Obj.magic x6602 in
                 Ojs.call (Ojs.get_prop_ascii x6604 "lastIndexOf") "apply"
                   [|x6604;((let x6600 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6600 "push"
                                  [|(Ojs.float_to_js x6598)|]);
                             (match x6599 with
                              | Some x6601 ->
                                  ignore
                                    (Ojs.call x6600 "push"
                                       [|(Ojs.float_to_js x6601)|])
                              | None -> ());
                             x6600))|])
    let (get_length : 'tags this -> float) =
      fun (x6605 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6605) "length")
    let (map :
      'tags this ->
        callbackfn:(value:float -> index:float -> array:t -> float) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x6614 : 'tags this) ->
        fun
          ~callbackfn:(x6607 :
                        value:float -> index:float -> array:t -> float)
          ->
          fun ?thisArg:(x6608 : any option) ->
            fun () ->
              t_of_js
                (let x6616 = this_to_js Obj.magic x6614 in
                 Ojs.call (Ojs.get_prop_ascii x6616 "map") "apply"
                   [|x6616;((let x6609 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6609 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x6611 : Ojs.t) ->
                                          fun (x6612 : Ojs.t) ->
                                            fun (x6613 : Ojs.t) ->
                                              Ojs.float_to_js
                                                (x6607
                                                   ~value:(Ojs.float_of_js
                                                             x6611)
                                                   ~index:(Ojs.float_of_js
                                                             x6612)
                                                   ~array:(t_of_js x6613))))|]);
                             (match x6608 with
                              | Some x6610 ->
                                  ignore
                                    (Ojs.call x6609 "push"
                                       [|(any_to_js x6610)|])
                              | None -> ());
                             x6609))|])
    let (reduce :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> float)
      =
      fun (x6622 : 'tags this) ->
        fun
          ~callbackfn:(x6617 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x6622) "reduce"
               [|(Ojs.fun_to_js 4
                    (fun (x6618 : Ojs.t) ->
                       fun (x6619 : Ojs.t) ->
                         fun (x6620 : Ojs.t) ->
                           fun (x6621 : Ojs.t) ->
                             Ojs.float_to_js
                               (x6617 ~previousValue:(Ojs.float_of_js x6618)
                                  ~currentValue:(Ojs.float_of_js x6619)
                                  ~currentIndex:(Ojs.float_of_js x6620)
                                  ~array:(t_of_js x6621))))|])
    let (reduce' :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> initialValue:float -> float)
      =
      fun (x6630 : 'tags this) ->
        fun
          ~callbackfn:(x6624 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          fun ~initialValue:(x6629 : float) ->
            Ojs.float_of_js
              (Ojs.call (this_to_js Obj.magic x6630) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x6625 : Ojs.t) ->
                         fun (x6626 : Ojs.t) ->
                           fun (x6627 : Ojs.t) ->
                             fun (x6628 : Ojs.t) ->
                               Ojs.float_to_js
                                 (x6624
                                    ~previousValue:(Ojs.float_of_js x6625)
                                    ~currentValue:(Ojs.float_of_js x6626)
                                    ~currentIndex:(Ojs.float_of_js x6627)
                                    ~array:(t_of_js x6628))));(Ojs.float_to_js
                                                                 x6629)|])
    let (reduce'' :
      'tags this ->
        callbackfn:(previousValue:'U ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x6638 : 'tags this) ->
        fun
          ~callbackfn:(x6632 :
                        previousValue:'U ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x6637 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic x6638) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x6633 : Ojs.t) ->
                         fun (x6634 : Ojs.t) ->
                           fun (x6635 : Ojs.t) ->
                             fun (x6636 : Ojs.t) ->
                               Obj.magic
                                 (x6632 ~previousValue:(Obj.magic x6633)
                                    ~currentValue:(Ojs.float_of_js x6634)
                                    ~currentIndex:(Ojs.float_of_js x6635)
                                    ~array:(t_of_js x6636))));(Obj.magic
                                                                 x6637)|])
    let (reduceRight :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> float)
      =
      fun (x6645 : 'tags this) ->
        fun
          ~callbackfn:(x6640 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x6645) "reduceRight"
               [|(Ojs.fun_to_js 4
                    (fun (x6641 : Ojs.t) ->
                       fun (x6642 : Ojs.t) ->
                         fun (x6643 : Ojs.t) ->
                           fun (x6644 : Ojs.t) ->
                             Ojs.float_to_js
                               (x6640 ~previousValue:(Ojs.float_of_js x6641)
                                  ~currentValue:(Ojs.float_of_js x6642)
                                  ~currentIndex:(Ojs.float_of_js x6643)
                                  ~array:(t_of_js x6644))))|])
    let (reduceRight' :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> initialValue:float -> float)
      =
      fun (x6653 : 'tags this) ->
        fun
          ~callbackfn:(x6647 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          fun ~initialValue:(x6652 : float) ->
            Ojs.float_of_js
              (Ojs.call (this_to_js Obj.magic x6653) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x6648 : Ojs.t) ->
                         fun (x6649 : Ojs.t) ->
                           fun (x6650 : Ojs.t) ->
                             fun (x6651 : Ojs.t) ->
                               Ojs.float_to_js
                                 (x6647
                                    ~previousValue:(Ojs.float_of_js x6648)
                                    ~currentValue:(Ojs.float_of_js x6649)
                                    ~currentIndex:(Ojs.float_of_js x6650)
                                    ~array:(t_of_js x6651))));(Ojs.float_to_js
                                                                 x6652)|])
    let (reduceRight'' :
      'tags this ->
        callbackfn:(previousValue:'U ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x6661 : 'tags this) ->
        fun
          ~callbackfn:(x6655 :
                        previousValue:'U ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x6660 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic x6661) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x6656 : Ojs.t) ->
                         fun (x6657 : Ojs.t) ->
                           fun (x6658 : Ojs.t) ->
                             fun (x6659 : Ojs.t) ->
                               Obj.magic
                                 (x6655 ~previousValue:(Obj.magic x6656)
                                    ~currentValue:(Ojs.float_of_js x6657)
                                    ~currentIndex:(Ojs.float_of_js x6658)
                                    ~array:(t_of_js x6659))));(Obj.magic
                                                                 x6660)|])
    let (reverse : 'tags this -> t) =
      fun (x6663 : 'tags this) ->
        t_of_js (Ojs.call (this_to_js Obj.magic x6663) "reverse" [||])
    let (set_ :
      'tags this -> array:float ArrayLike.t -> ?offset:float -> unit -> unit)
      =
      fun (x6670 : 'tags this) ->
        fun ~array:(x6665 : float ArrayLike.t) ->
          fun ?offset:(x6666 : float option) ->
            fun () ->
              ignore
                (let x6672 = this_to_js Obj.magic x6670 in
                 Ojs.call (Ojs.get_prop_ascii x6672 "set") "apply"
                   [|x6672;((let x6667 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6667 "push"
                                  [|(ArrayLike.t_to_js Ojs.float_to_js x6665)|]);
                             (match x6666 with
                              | Some x6668 ->
                                  ignore
                                    (Ojs.call x6667 "push"
                                       [|(Ojs.float_to_js x6668)|])
                              | None -> ());
                             x6667))|])
    let (slice : 'tags this -> ?start:float -> ?end_:float -> unit -> t) =
      fun (x6678 : 'tags this) ->
        fun ?start:(x6673 : float option) ->
          fun ?end_:(x6674 : float option) ->
            fun () ->
              t_of_js
                (let x6680 = this_to_js Obj.magic x6678 in
                 Ojs.call (Ojs.get_prop_ascii x6680 "slice") "apply"
                   [|x6680;((let x6675 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x6673 with
                              | Some x6677 ->
                                  ignore
                                    (Ojs.call x6675 "push"
                                       [|(Ojs.float_to_js x6677)|])
                              | None -> ());
                             (match x6674 with
                              | Some x6676 ->
                                  ignore
                                    (Ojs.call x6675 "push"
                                       [|(Ojs.float_to_js x6676)|])
                              | None -> ());
                             x6675))|])
    let (some :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x6688 : 'tags this) ->
        fun
          ~predicate:(x6681 :
                       value:float -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x6682 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x6690 = this_to_js Obj.magic x6688 in
                 Ojs.call (Ojs.get_prop_ascii x6690 "some") "apply"
                   [|x6690;((let x6683 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6683 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x6685 : Ojs.t) ->
                                          fun (x6686 : Ojs.t) ->
                                            fun (x6687 : Ojs.t) ->
                                              unknown_to_js
                                                (x6681
                                                   ~value:(Ojs.float_of_js
                                                             x6685)
                                                   ~index:(Ojs.float_of_js
                                                             x6686)
                                                   ~array:(t_of_js x6687))))|]);
                             (match x6682 with
                              | Some x6684 ->
                                  ignore
                                    (Ojs.call x6683 "push"
                                       [|(any_to_js x6684)|])
                              | None -> ());
                             x6683))|])
    let (sort :
      'tags this ->
        ?compareFn:(a:float -> b:float -> float) -> unit -> 'tags this)
      =
      fun (x6696 : 'tags this) ->
        fun ?compareFn:(x6691 : (a:float -> b:float -> float) option) ->
          fun () ->
            this_of_js Obj.magic
              (let x6698 = this_to_js Obj.magic x6696 in
               Ojs.call (Ojs.get_prop_ascii x6698 "sort") "apply"
                 [|x6698;((let x6692 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x6691 with
                            | Some x6693 ->
                                ignore
                                  (Ojs.call x6692 "push"
                                     [|(Ojs.fun_to_js 2
                                          (fun (x6694 : Ojs.t) ->
                                             fun (x6695 : Ojs.t) ->
                                               Ojs.float_to_js
                                                 (x6693
                                                    ~a:(Ojs.float_of_js x6694)
                                                    ~b:(Ojs.float_of_js x6695))))|])
                            | None -> ());
                           x6692))|])
    let (subarray : 'tags this -> ?begin_:float -> ?end_:float -> unit -> t)
      =
      fun (x6705 : 'tags this) ->
        fun ?begin_:(x6700 : float option) ->
          fun ?end_:(x6701 : float option) ->
            fun () ->
              t_of_js
                (let x6707 = this_to_js Obj.magic x6705 in
                 Ojs.call (Ojs.get_prop_ascii x6707 "subarray") "apply"
                   [|x6707;((let x6702 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x6700 with
                              | Some x6704 ->
                                  ignore
                                    (Ojs.call x6702 "push"
                                       [|(Ojs.float_to_js x6704)|])
                              | None -> ());
                             (match x6701 with
                              | Some x6703 ->
                                  ignore
                                    (Ojs.call x6702 "push"
                                       [|(Ojs.float_to_js x6703)|])
                              | None -> ());
                             x6702))|])
    let (toLocaleString : 'tags this -> string) =
      fun (x6708 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x6708) "toLocaleString" [||])
    let (toString : 'tags this -> string) =
      fun (x6710 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x6710) "toString" [||])
    let (valueOf : 'tags this -> t) =
      fun (x6712 : 'tags this) ->
        t_of_js (Ojs.call (this_to_js Obj.magic x6712) "valueOf" [||])
    let (get : 'tags this -> float -> float) =
      fun (x6714 : 'tags this) ->
        fun (x6716 : float) ->
          Ojs.float_of_js
            (Ojs.get_prop (this_to_js Obj.magic x6714)
               (Ojs.float_to_js x6716))
    let (set : 'tags this -> float -> float -> unit) =
      fun (x6717 : 'tags this) ->
        fun (x6719 : float) ->
          fun (x6720 : float) ->
            Ojs.set_prop (this_to_js Obj.magic x6717) (Ojs.float_to_js x6719)
              (Ojs.float_to_js x6720)
    let (create : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Float32Array") [||])
    let (create' : float Iterable.t -> t) =
      fun (x6721 : float Iterable.t) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Float32Array")
             [|(Iterable.t_to_js Ojs.float_to_js x6721)|])
    let (from :
      arrayLike:float Iterable.t ->
        ?mapfn:(v:float -> k:float -> float) -> ?thisArg:any -> unit -> t)
      =
      fun ~arrayLike:(x6723 : float Iterable.t) ->
        fun ?mapfn:(x6724 : (v:float -> k:float -> float) option) ->
          fun ?thisArg:(x6725 : any option) ->
            fun () ->
              t_of_js
                (let x6732 = Ojs.get_prop_ascii Ojs.global "Float32Array" in
                 Ojs.call (Ojs.get_prop_ascii x6732 "from") "apply"
                   [|x6732;((let x6726 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6726 "push"
                                  [|(Iterable.t_to_js Ojs.float_to_js x6723)|]);
                             (match x6724 with
                              | Some x6728 ->
                                  ignore
                                    (Ojs.call x6726 "push"
                                       [|(Ojs.fun_to_js 2
                                            (fun (x6729 : Ojs.t) ->
                                               fun (x6730 : Ojs.t) ->
                                                 Ojs.float_to_js
                                                   (x6728
                                                      ~v:(Ojs.float_of_js
                                                            x6729)
                                                      ~k:(Ojs.float_of_js
                                                            x6730))))|])
                              | None -> ());
                             (match x6725 with
                              | Some x6727 ->
                                  ignore
                                    (Ojs.call x6726 "push"
                                       [|(any_to_js x6727)|])
                              | None -> ());
                             x6726))|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Float32Array")
             "prototype")
    let (create'' : float -> t) =
      fun (x6733 : float) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Float32Array")
             [|(Ojs.float_to_js x6733)|])
    let (create''' :
      [ `U1 of float ArrayLike.t  | `U2 of ArrayBufferLike.t ] -> t) =
      fun (x6734 : [ `U1 of float ArrayLike.t  | `U2 of ArrayBufferLike.t ])
        ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Float32Array")
             [|((match x6734 with
                 | `U1 x6735 -> ArrayLike.t_to_js Ojs.float_to_js x6735
                 | `U2 x6737 -> ArrayBufferLike.t_to_js x6737))|])
    let (create'''' :
      buffer:ArrayBufferLike.t ->
        ?byteOffset:float -> ?length:float -> unit -> t)
      =
      fun ~buffer:(x6738 : ArrayBufferLike.t) ->
        fun ?byteOffset:(x6739 : float option) ->
          fun ?length:(x6740 : float option) ->
            fun () ->
              t_of_js
                (Ojs.new_obj_arr
                   (Ojs.get_prop_ascii Ojs.global "Float32Array")
                   (let x6741 =
                      Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                        [||] in
                    ignore
                      (Ojs.call x6741 "push"
                         [|(ArrayBufferLike.t_to_js x6738)|]);
                    (match x6739 with
                     | Some x6743 ->
                         ignore
                           (Ojs.call x6741 "push" [|(Ojs.float_to_js x6743)|])
                     | None -> ());
                    (match x6740 with
                     | Some x6742 ->
                         ignore
                           (Ojs.call x6741 "push" [|(Ojs.float_to_js x6742)|])
                     | None -> ());
                    x6741))
    let (bytes_per_element : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Float32Array")
             "BYTES_PER_ELEMENT")
    let (of_ : float list -> t) =
      fun (x6744 : float list) ->
        t_of_js
          (let x6747 = Ojs.get_prop_ascii Ojs.global "Float32Array" in
           Ojs.call (Ojs.get_prop_ascii x6747 "of") "apply"
             [|x6747;((let x6745 =
                         Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                           [||] in
                       List.iter
                         (fun (x6746 : float) ->
                            ignore
                              (Ojs.call x6745 "push"
                                 [|(Ojs.float_to_js x6746)|])) x6744;
                       x6745))|])
    let (from' : float ArrayLike.t -> t) =
      fun (x6748 : float ArrayLike.t) ->
        t_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Float32Array") "from"
             [|(ArrayLike.t_to_js Ojs.float_to_js x6748)|])
    let (from'' :
      arrayLike:'T ArrayLike.t ->
        mapfn:(v:'T -> k:float -> float) -> ?thisArg:any -> unit -> t)
      =
      fun ~arrayLike:(x6750 : 'T ArrayLike.t) ->
        fun ~mapfn:(x6751 : v:'T -> k:float -> float) ->
          fun ?thisArg:(x6752 : any option) ->
            fun () ->
              t_of_js
                (let x6758 = Ojs.get_prop_ascii Ojs.global "Float32Array" in
                 Ojs.call (Ojs.get_prop_ascii x6758 "from") "apply"
                   [|x6758;((let x6753 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6753 "push"
                                  [|(ArrayLike.t_to_js Obj.magic x6750)|]);
                             ignore
                               (Ojs.call x6753 "push"
                                  [|(Ojs.fun_to_js 2
                                       (fun (x6755 : Ojs.t) ->
                                          fun (x6756 : Ojs.t) ->
                                            Ojs.float_to_js
                                              (x6751 ~v:(Obj.magic x6755)
                                                 ~k:(Ojs.float_of_js x6756))))|]);
                             (match x6752 with
                              | Some x6754 ->
                                  ignore
                                    (Ojs.call x6753 "push"
                                       [|(any_to_js x6754)|])
                              | None -> ());
                             x6753))|])
    let cast_from = Obj.magic
  end
module FinalizationRegistry =
  struct
    type 'T t = [ `FinalizationRegistry of 'T ] intf
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun _T -> Obj.magic
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun _T -> Obj.magic
    type 'T tags = [ `FinalizationRegistry of 'T ]
    type ('tags, 'T) this =
      'tags intf constraint 'tags = [> `FinalizationRegistry of 'T ]
    let rec this_of_js :
      'tags 'T .
        (Ojs.t -> 'tags) -> (Ojs.t -> 'T) -> Ojs.t -> ('tags, 'T) this
      =
      fun (type __tags) ->
        fun (type __T) ->
          fun (__tags_of_js : Ojs.t -> __tags) ->
            fun (__T_of_js : Ojs.t -> __T) ->
              fun (x6761 : Ojs.t) -> intf_of_js __tags_of_js x6761
    and this_to_js :
      'tags 'T .
        ('tags -> Ojs.t) -> ('T -> Ojs.t) -> ('tags, 'T) this -> Ojs.t
      =
      fun (type __tags) ->
        fun (type __T) ->
          fun (__tags_to_js : __tags -> Ojs.t) ->
            fun (__T_to_js : __T -> Ojs.t) ->
              fun (x6759 : __tags intf) -> intf_to_js __tags_to_js x6759
    let (register :
      ('tags, 'T) this ->
        target:WeakKey.t ->
          heldValue:'T -> ?unregisterToken:WeakKey.t -> unit -> unit)
      =
      fun (x6768 : ('tags, 'T) this) ->
        fun ~target:(x6763 : WeakKey.t) ->
          fun ~heldValue:(x6764 : 'T) ->
            fun ?unregisterToken:(x6765 : WeakKey.t option) ->
              fun () ->
                ignore
                  (let x6771 = this_to_js Obj.magic Obj.magic x6768 in
                   Ojs.call (Ojs.get_prop_ascii x6771 "register") "apply"
                     [|x6771;((let x6766 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x6766 "push"
                                    [|(WeakKey.t_to_js x6763)|]);
                               ignore
                                 (Ojs.call x6766 "push" [|(Obj.magic x6764)|]);
                               (match x6765 with
                                | Some x6767 ->
                                    ignore
                                      (Ojs.call x6766 "push"
                                         [|(WeakKey.t_to_js x6767)|])
                                | None -> ());
                               x6766))|])
    let (unregister : ('tags, 'T) this -> unregisterToken:WeakKey.t -> unit)
      =
      fun (x6773 : ('tags, 'T) this) ->
        fun ~unregisterToken:(x6772 : WeakKey.t) ->
          ignore
            (Ojs.call (this_to_js Obj.magic Obj.magic x6773) "unregister"
               [|(WeakKey.t_to_js x6772)|])
    let (prototype : unit -> any t) =
      fun () ->
        t_of_js any_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "FinalizationRegistry")
             "prototype")
    let (create : ('T -> unit) -> 'T t) =
      fun (x6777 : 'T -> unit) ->
        t_of_js Obj.magic
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "FinalizationRegistry")
             [|(Ojs.fun_to_js 1
                  (fun (x6778 : Ojs.t) -> x6777 (Obj.magic x6778)))|])
    let cast_from = Obj.magic
  end
module Extract =
  struct
    type ('T, 'U) t = any
    let rec t_of_js :
      'T 'U . (Ojs.t -> 'T) -> (Ojs.t -> 'U) -> Ojs.t -> ('T, 'U) t =
      fun (type __T) ->
        fun (type __U) ->
          fun (__T_of_js : Ojs.t -> __T) ->
            fun (__U_of_js : Ojs.t -> __U) ->
              fun (x6781 : Ojs.t) -> any_of_js x6781
    and t_to_js :
      'T 'U . ('T -> Ojs.t) -> ('U -> Ojs.t) -> ('T, 'U) t -> Ojs.t =
      fun (type __T) ->
        fun (type __U) ->
          fun (__T_to_js : __T -> Ojs.t) ->
            fun (__U_to_js : __U -> Ojs.t) ->
              fun (x6780 : any) -> any_to_js x6780
  end
module EvalError =
  struct
    type t = [ `Error  | `EvalError ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type tags = [ `Error  | `EvalError ]
    type 'tags this = 'tags intf constraint 'tags = [> `EvalError ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x6784 : Ojs.t) -> intf_of_js __tags_of_js x6784
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x6782 : __tags intf) -> intf_to_js __tags_to_js x6782
    let (create : ?message:string -> ?options:ErrorOptions.t -> unit -> t) =
      fun ?message:(x6786 : string option) ->
        fun ?options:(x6787 : ErrorOptions.t option) ->
          fun () ->
            t_of_js
              (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "EvalError")
                 (let x6788 =
                    Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                  (match x6786 with
                   | Some x6790 ->
                       ignore
                         (Ojs.call x6788 "push" [|(Ojs.string_to_js x6790)|])
                   | None -> ());
                  (match x6787 with
                   | Some x6789 ->
                       ignore
                         (Ojs.call x6788 "push"
                            [|(ErrorOptions.t_to_js x6789)|])
                   | None -> ());
                  x6788))
    let (invoke : ?message:string -> ?options:ErrorOptions.t -> unit -> t) =
      fun ?message:(x6791 : string option) ->
        fun ?options:(x6792 : ErrorOptions.t option) ->
          fun () ->
            t_of_js
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "EvalError") "apply"
                 [|Ojs.null;((let x6793 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              (match x6791 with
                               | Some x6795 ->
                                   ignore
                                     (Ojs.call x6793 "push"
                                        [|(Ojs.string_to_js x6795)|])
                               | None -> ());
                              (match x6792 with
                               | Some x6794 ->
                                   ignore
                                     (Ojs.call x6793 "push"
                                        [|(ErrorOptions.t_to_js x6794)|])
                               | None -> ());
                              x6793))|])
    let (create' : ?message:string -> unit -> t) =
      fun ?message:(x6796 : string option) ->
        fun () ->
          t_of_js
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "EvalError")
               (let x6797 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x6796 with
                 | Some x6798 ->
                     ignore
                       (Ojs.call x6797 "push" [|(Ojs.string_to_js x6798)|])
                 | None -> ());
                x6797))
    let (invoke' : ?message:string -> unit -> t) =
      fun ?message:(x6799 : string option) ->
        fun () ->
          t_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "EvalError") "apply"
               [|Ojs.null;((let x6800 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x6799 with
                             | Some x6801 ->
                                 ignore
                                   (Ojs.call x6800 "push"
                                      [|(Ojs.string_to_js x6801)|])
                             | None -> ());
                            x6800))|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "EvalError")
             "prototype")
    let cast_from = Obj.magic
  end
module Disposable =
  struct
    type t = [ `Disposable ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type tags = [ `Disposable ]
    type 'tags this = 'tags intf constraint 'tags = [> `Disposable ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x6804 : Ojs.t) -> intf_of_js __tags_of_js x6804
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x6802 : __tags intf) -> intf_to_js __tags_to_js x6802
    let cast_from = Obj.magic
  end
module DisposableStack =
  struct
    type t = [ `DisposableStack ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type tags = [ `DisposableStack ]
    type 'tags this = 'tags intf constraint 'tags = [> `DisposableStack ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x6808 : Ojs.t) -> intf_of_js __tags_of_js x6808
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x6806 : __tags intf) -> intf_to_js __tags_to_js x6806
    let (get_disposed : 'tags this -> bool) =
      fun (x6810 : 'tags this) ->
        Ojs.bool_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6810) "disposed")
    let (dispose : 'tags this -> unit) =
      fun (x6812 : 'tags this) ->
        ignore (Ojs.call (this_to_js Obj.magic x6812) "dispose" [||])
    let (use : 'tags this -> value:'T -> 'T) =
      fun (x6815 : 'tags this) ->
        fun ~value:(x6814 : 'T) ->
          Obj.magic
            (Ojs.call (this_to_js Obj.magic x6815) "use"
               [|(Obj.magic x6814)|])
    let (adopt : 'tags this -> value:'T -> onDispose:('T -> unit) -> 'T) =
      fun (x6820 : 'tags this) ->
        fun ~value:(x6817 : 'T) ->
          fun ~onDispose:(x6818 : 'T -> unit) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic x6820) "adopt"
                 [|(Obj.magic x6817);(Ojs.fun_to_js 1
                                        (fun (x6819 : Ojs.t) ->
                                           x6818 (Obj.magic x6819)))|])
    let (defer : 'tags this -> onDispose:(unit -> unit) -> unit) =
      fun (x6823 : 'tags this) ->
        fun ~onDispose:(x6822 : unit -> unit) ->
          ignore
            (Ojs.call (this_to_js Obj.magic x6823) "defer"
               [|(Ojs.fun_to_js 1 (fun _ -> x6822 ()))|])
    let (move : 'tags this -> t) =
      fun (x6825 : 'tags this) ->
        t_of_js (Ojs.call (this_to_js Obj.magic x6825) "move" [||])
    let (create : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "DisposableStack") [||])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "DisposableStack") "prototype")
    let cast_from = Obj.magic
  end
module DataView =
  struct
    module AnonymousInterface0 =
      struct
        type t = Ojs.t
        let rec t_of_js : Ojs.t -> t = fun (x6828 : Ojs.t) -> x6828
        and t_to_js : t -> Ojs.t = fun (x6827 : Ojs.t) -> x6827
        let (get_BYTES_PER_ELEMENT : t -> never option) =
          fun (x6829 : t) ->
            Ojs.option_of_js never_of_js
              (Ojs.get_prop_ascii (t_to_js x6829) "BYTES_PER_ELEMENT")
        let (set_BYTES_PER_ELEMENT : t -> never -> unit) =
          fun (x6831 : t) ->
            fun (x6832 : never) ->
              Ojs.set_prop_ascii (t_to_js x6831) "BYTES_PER_ELEMENT"
                (never_to_js x6832)
        let (create : ?bytes_per_element:never -> unit -> t) =
          fun ?bytes_per_element:(x6833 : never option) ->
            fun () ->
              let x6834 = Ojs.empty_obj () in
              (match x6833 with
               | Some x6835 ->
                   Ojs.set_prop_ascii x6834 "BYTES_PER_ELEMENT"
                     (never_to_js x6835)
               | None -> ());
              t_of_js x6834
      end
    type t = [ `DataView ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type tags = [ `DataView ]
    type 'tags this = 'tags intf constraint 'tags = [> `DataView ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x6838 : Ojs.t) -> intf_of_js __tags_of_js x6838
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x6836 : __tags intf) -> intf_to_js __tags_to_js x6836
    let (getBigInt64 :
      'tags this -> byteOffset:float -> ?littleEndian:bool -> unit -> bigint)
      =
      fun (x6844 : 'tags this) ->
        fun ~byteOffset:(x6840 : float) ->
          fun ?littleEndian:(x6841 : bool option) ->
            fun () ->
              bigint_of_js
                (let x6846 = this_to_js Obj.magic x6844 in
                 Ojs.call (Ojs.get_prop_ascii x6846 "getBigInt64") "apply"
                   [|x6846;((let x6842 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6842 "push"
                                  [|(Ojs.float_to_js x6840)|]);
                             (match x6841 with
                              | Some x6843 ->
                                  ignore
                                    (Ojs.call x6842 "push"
                                       [|(Ojs.bool_to_js x6843)|])
                              | None -> ());
                             x6842))|])
    let (getBigUint64 :
      'tags this -> byteOffset:float -> ?littleEndian:bool -> unit -> bigint)
      =
      fun (x6851 : 'tags this) ->
        fun ~byteOffset:(x6847 : float) ->
          fun ?littleEndian:(x6848 : bool option) ->
            fun () ->
              bigint_of_js
                (let x6853 = this_to_js Obj.magic x6851 in
                 Ojs.call (Ojs.get_prop_ascii x6853 "getBigUint64") "apply"
                   [|x6853;((let x6849 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6849 "push"
                                  [|(Ojs.float_to_js x6847)|]);
                             (match x6848 with
                              | Some x6850 ->
                                  ignore
                                    (Ojs.call x6849 "push"
                                       [|(Ojs.bool_to_js x6850)|])
                              | None -> ());
                             x6849))|])
    let (setBigInt64 :
      'tags this ->
        byteOffset:float ->
          value:bigint -> ?littleEndian:bool -> unit -> unit)
      =
      fun (x6859 : 'tags this) ->
        fun ~byteOffset:(x6854 : float) ->
          fun ~value:(x6855 : bigint) ->
            fun ?littleEndian:(x6856 : bool option) ->
              fun () ->
                ignore
                  (let x6861 = this_to_js Obj.magic x6859 in
                   Ojs.call (Ojs.get_prop_ascii x6861 "setBigInt64") "apply"
                     [|x6861;((let x6857 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x6857 "push"
                                    [|(Ojs.float_to_js x6854)|]);
                               ignore
                                 (Ojs.call x6857 "push"
                                    [|(bigint_to_js x6855)|]);
                               (match x6856 with
                                | Some x6858 ->
                                    ignore
                                      (Ojs.call x6857 "push"
                                         [|(Ojs.bool_to_js x6858)|])
                                | None -> ());
                               x6857))|])
    let (setBigUint64 :
      'tags this ->
        byteOffset:float ->
          value:bigint -> ?littleEndian:bool -> unit -> unit)
      =
      fun (x6867 : 'tags this) ->
        fun ~byteOffset:(x6862 : float) ->
          fun ~value:(x6863 : bigint) ->
            fun ?littleEndian:(x6864 : bool option) ->
              fun () ->
                ignore
                  (let x6869 = this_to_js Obj.magic x6867 in
                   Ojs.call (Ojs.get_prop_ascii x6869 "setBigUint64") "apply"
                     [|x6869;((let x6865 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x6865 "push"
                                    [|(Ojs.float_to_js x6862)|]);
                               ignore
                                 (Ojs.call x6865 "push"
                                    [|(bigint_to_js x6863)|]);
                               (match x6864 with
                                | Some x6866 ->
                                    ignore
                                      (Ojs.call x6865 "push"
                                         [|(Ojs.bool_to_js x6866)|])
                                | None -> ());
                               x6865))|])
    let (get_buffer : 'tags this -> ArrayBuffer.t) =
      fun (x6870 : 'tags this) ->
        ArrayBuffer.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6870) "buffer")
    let (get_byteLength : 'tags this -> float) =
      fun (x6872 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6872) "byteLength")
    let (get_byteOffset : 'tags this -> float) =
      fun (x6874 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6874) "byteOffset")
    let (getFloat32 :
      'tags this -> byteOffset:float -> ?littleEndian:bool -> unit -> float)
      =
      fun (x6880 : 'tags this) ->
        fun ~byteOffset:(x6876 : float) ->
          fun ?littleEndian:(x6877 : bool option) ->
            fun () ->
              Ojs.float_of_js
                (let x6882 = this_to_js Obj.magic x6880 in
                 Ojs.call (Ojs.get_prop_ascii x6882 "getFloat32") "apply"
                   [|x6882;((let x6878 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6878 "push"
                                  [|(Ojs.float_to_js x6876)|]);
                             (match x6877 with
                              | Some x6879 ->
                                  ignore
                                    (Ojs.call x6878 "push"
                                       [|(Ojs.bool_to_js x6879)|])
                              | None -> ());
                             x6878))|])
    let (getFloat64 :
      'tags this -> byteOffset:float -> ?littleEndian:bool -> unit -> float)
      =
      fun (x6887 : 'tags this) ->
        fun ~byteOffset:(x6883 : float) ->
          fun ?littleEndian:(x6884 : bool option) ->
            fun () ->
              Ojs.float_of_js
                (let x6889 = this_to_js Obj.magic x6887 in
                 Ojs.call (Ojs.get_prop_ascii x6889 "getFloat64") "apply"
                   [|x6889;((let x6885 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6885 "push"
                                  [|(Ojs.float_to_js x6883)|]);
                             (match x6884 with
                              | Some x6886 ->
                                  ignore
                                    (Ojs.call x6885 "push"
                                       [|(Ojs.bool_to_js x6886)|])
                              | None -> ());
                             x6885))|])
    let (getInt8 : 'tags this -> byteOffset:float -> float) =
      fun (x6891 : 'tags this) ->
        fun ~byteOffset:(x6890 : float) ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x6891) "getInt8"
               [|(Ojs.float_to_js x6890)|])
    let (getInt16 :
      'tags this -> byteOffset:float -> ?littleEndian:bool -> unit -> float)
      =
      fun (x6897 : 'tags this) ->
        fun ~byteOffset:(x6893 : float) ->
          fun ?littleEndian:(x6894 : bool option) ->
            fun () ->
              Ojs.float_of_js
                (let x6899 = this_to_js Obj.magic x6897 in
                 Ojs.call (Ojs.get_prop_ascii x6899 "getInt16") "apply"
                   [|x6899;((let x6895 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6895 "push"
                                  [|(Ojs.float_to_js x6893)|]);
                             (match x6894 with
                              | Some x6896 ->
                                  ignore
                                    (Ojs.call x6895 "push"
                                       [|(Ojs.bool_to_js x6896)|])
                              | None -> ());
                             x6895))|])
    let (getInt32 :
      'tags this -> byteOffset:float -> ?littleEndian:bool -> unit -> float)
      =
      fun (x6904 : 'tags this) ->
        fun ~byteOffset:(x6900 : float) ->
          fun ?littleEndian:(x6901 : bool option) ->
            fun () ->
              Ojs.float_of_js
                (let x6906 = this_to_js Obj.magic x6904 in
                 Ojs.call (Ojs.get_prop_ascii x6906 "getInt32") "apply"
                   [|x6906;((let x6902 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6902 "push"
                                  [|(Ojs.float_to_js x6900)|]);
                             (match x6901 with
                              | Some x6903 ->
                                  ignore
                                    (Ojs.call x6902 "push"
                                       [|(Ojs.bool_to_js x6903)|])
                              | None -> ());
                             x6902))|])
    let (getUint8 : 'tags this -> byteOffset:float -> float) =
      fun (x6908 : 'tags this) ->
        fun ~byteOffset:(x6907 : float) ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x6908) "getUint8"
               [|(Ojs.float_to_js x6907)|])
    let (getUint16 :
      'tags this -> byteOffset:float -> ?littleEndian:bool -> unit -> float)
      =
      fun (x6914 : 'tags this) ->
        fun ~byteOffset:(x6910 : float) ->
          fun ?littleEndian:(x6911 : bool option) ->
            fun () ->
              Ojs.float_of_js
                (let x6916 = this_to_js Obj.magic x6914 in
                 Ojs.call (Ojs.get_prop_ascii x6916 "getUint16") "apply"
                   [|x6916;((let x6912 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6912 "push"
                                  [|(Ojs.float_to_js x6910)|]);
                             (match x6911 with
                              | Some x6913 ->
                                  ignore
                                    (Ojs.call x6912 "push"
                                       [|(Ojs.bool_to_js x6913)|])
                              | None -> ());
                             x6912))|])
    let (getUint32 :
      'tags this -> byteOffset:float -> ?littleEndian:bool -> unit -> float)
      =
      fun (x6921 : 'tags this) ->
        fun ~byteOffset:(x6917 : float) ->
          fun ?littleEndian:(x6918 : bool option) ->
            fun () ->
              Ojs.float_of_js
                (let x6923 = this_to_js Obj.magic x6921 in
                 Ojs.call (Ojs.get_prop_ascii x6923 "getUint32") "apply"
                   [|x6923;((let x6919 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6919 "push"
                                  [|(Ojs.float_to_js x6917)|]);
                             (match x6918 with
                              | Some x6920 ->
                                  ignore
                                    (Ojs.call x6919 "push"
                                       [|(Ojs.bool_to_js x6920)|])
                              | None -> ());
                             x6919))|])
    let (setFloat32 :
      'tags this ->
        byteOffset:float -> value:float -> ?littleEndian:bool -> unit -> unit)
      =
      fun (x6929 : 'tags this) ->
        fun ~byteOffset:(x6924 : float) ->
          fun ~value:(x6925 : float) ->
            fun ?littleEndian:(x6926 : bool option) ->
              fun () ->
                ignore
                  (let x6931 = this_to_js Obj.magic x6929 in
                   Ojs.call (Ojs.get_prop_ascii x6931 "setFloat32") "apply"
                     [|x6931;((let x6927 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x6927 "push"
                                    [|(Ojs.float_to_js x6924)|]);
                               ignore
                                 (Ojs.call x6927 "push"
                                    [|(Ojs.float_to_js x6925)|]);
                               (match x6926 with
                                | Some x6928 ->
                                    ignore
                                      (Ojs.call x6927 "push"
                                         [|(Ojs.bool_to_js x6928)|])
                                | None -> ());
                               x6927))|])
    let (setFloat64 :
      'tags this ->
        byteOffset:float -> value:float -> ?littleEndian:bool -> unit -> unit)
      =
      fun (x6937 : 'tags this) ->
        fun ~byteOffset:(x6932 : float) ->
          fun ~value:(x6933 : float) ->
            fun ?littleEndian:(x6934 : bool option) ->
              fun () ->
                ignore
                  (let x6939 = this_to_js Obj.magic x6937 in
                   Ojs.call (Ojs.get_prop_ascii x6939 "setFloat64") "apply"
                     [|x6939;((let x6935 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x6935 "push"
                                    [|(Ojs.float_to_js x6932)|]);
                               ignore
                                 (Ojs.call x6935 "push"
                                    [|(Ojs.float_to_js x6933)|]);
                               (match x6934 with
                                | Some x6936 ->
                                    ignore
                                      (Ojs.call x6935 "push"
                                         [|(Ojs.bool_to_js x6936)|])
                                | None -> ());
                               x6935))|])
    let (setInt8 : 'tags this -> byteOffset:float -> value:float -> unit) =
      fun (x6942 : 'tags this) ->
        fun ~byteOffset:(x6940 : float) ->
          fun ~value:(x6941 : float) ->
            ignore
              (Ojs.call (this_to_js Obj.magic x6942) "setInt8"
                 [|(Ojs.float_to_js x6940);(Ojs.float_to_js x6941)|])
    let (setInt16 :
      'tags this ->
        byteOffset:float -> value:float -> ?littleEndian:bool -> unit -> unit)
      =
      fun (x6949 : 'tags this) ->
        fun ~byteOffset:(x6944 : float) ->
          fun ~value:(x6945 : float) ->
            fun ?littleEndian:(x6946 : bool option) ->
              fun () ->
                ignore
                  (let x6951 = this_to_js Obj.magic x6949 in
                   Ojs.call (Ojs.get_prop_ascii x6951 "setInt16") "apply"
                     [|x6951;((let x6947 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x6947 "push"
                                    [|(Ojs.float_to_js x6944)|]);
                               ignore
                                 (Ojs.call x6947 "push"
                                    [|(Ojs.float_to_js x6945)|]);
                               (match x6946 with
                                | Some x6948 ->
                                    ignore
                                      (Ojs.call x6947 "push"
                                         [|(Ojs.bool_to_js x6948)|])
                                | None -> ());
                               x6947))|])
    let (setInt32 :
      'tags this ->
        byteOffset:float -> value:float -> ?littleEndian:bool -> unit -> unit)
      =
      fun (x6957 : 'tags this) ->
        fun ~byteOffset:(x6952 : float) ->
          fun ~value:(x6953 : float) ->
            fun ?littleEndian:(x6954 : bool option) ->
              fun () ->
                ignore
                  (let x6959 = this_to_js Obj.magic x6957 in
                   Ojs.call (Ojs.get_prop_ascii x6959 "setInt32") "apply"
                     [|x6959;((let x6955 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x6955 "push"
                                    [|(Ojs.float_to_js x6952)|]);
                               ignore
                                 (Ojs.call x6955 "push"
                                    [|(Ojs.float_to_js x6953)|]);
                               (match x6954 with
                                | Some x6956 ->
                                    ignore
                                      (Ojs.call x6955 "push"
                                         [|(Ojs.bool_to_js x6956)|])
                                | None -> ());
                               x6955))|])
    let (setUint8 : 'tags this -> byteOffset:float -> value:float -> unit) =
      fun (x6962 : 'tags this) ->
        fun ~byteOffset:(x6960 : float) ->
          fun ~value:(x6961 : float) ->
            ignore
              (Ojs.call (this_to_js Obj.magic x6962) "setUint8"
                 [|(Ojs.float_to_js x6960);(Ojs.float_to_js x6961)|])
    let (setUint16 :
      'tags this ->
        byteOffset:float -> value:float -> ?littleEndian:bool -> unit -> unit)
      =
      fun (x6969 : 'tags this) ->
        fun ~byteOffset:(x6964 : float) ->
          fun ~value:(x6965 : float) ->
            fun ?littleEndian:(x6966 : bool option) ->
              fun () ->
                ignore
                  (let x6971 = this_to_js Obj.magic x6969 in
                   Ojs.call (Ojs.get_prop_ascii x6971 "setUint16") "apply"
                     [|x6971;((let x6967 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x6967 "push"
                                    [|(Ojs.float_to_js x6964)|]);
                               ignore
                                 (Ojs.call x6967 "push"
                                    [|(Ojs.float_to_js x6965)|]);
                               (match x6966 with
                                | Some x6968 ->
                                    ignore
                                      (Ojs.call x6967 "push"
                                         [|(Ojs.bool_to_js x6968)|])
                                | None -> ());
                               x6967))|])
    let (setUint32 :
      'tags this ->
        byteOffset:float -> value:float -> ?littleEndian:bool -> unit -> unit)
      =
      fun (x6977 : 'tags this) ->
        fun ~byteOffset:(x6972 : float) ->
          fun ~value:(x6973 : float) ->
            fun ?littleEndian:(x6974 : bool option) ->
              fun () ->
                ignore
                  (let x6979 = this_to_js Obj.magic x6977 in
                   Ojs.call (Ojs.get_prop_ascii x6979 "setUint32") "apply"
                     [|x6979;((let x6975 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x6975 "push"
                                    [|(Ojs.float_to_js x6972)|]);
                               ignore
                                 (Ojs.call x6975 "push"
                                    [|(Ojs.float_to_js x6973)|]);
                               (match x6974 with
                                | Some x6976 ->
                                    ignore
                                      (Ojs.call x6975 "push"
                                         [|(Ojs.bool_to_js x6976)|])
                                | None -> ());
                               x6975))|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "DataView")
             "prototype")
    let (create :
      buffer:(ArrayBufferLike.t, AnonymousInterface0.t) intersection2 ->
        ?byteOffset:float -> ?byteLength:float -> unit -> t)
      =
      fun
        ~buffer:(x6980 :
                  (ArrayBufferLike.t, AnonymousInterface0.t) intersection2)
        ->
        fun ?byteOffset:(x6981 : float option) ->
          fun ?byteLength:(x6982 : float option) ->
            fun () ->
              t_of_js
                (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "DataView")
                   (let x6983 =
                      Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                        [||] in
                    ignore
                      (Ojs.call x6983 "push"
                         [|(intersection2_to_js ArrayBufferLike.t_to_js
                              AnonymousInterface0.t_to_js x6980)|]);
                    (match x6981 with
                     | Some x6985 ->
                         ignore
                           (Ojs.call x6983 "push" [|(Ojs.float_to_js x6985)|])
                     | None -> ());
                    (match x6982 with
                     | Some x6984 ->
                         ignore
                           (Ojs.call x6983 "push" [|(Ojs.float_to_js x6984)|])
                     | None -> ());
                    x6983))
    let cast_from = Obj.magic
  end
module ConstructorParameters =
  struct
    module AnonymousInterface16 =
      struct
        type t = Ojs.t
        let rec t_of_js : Ojs.t -> t = fun (x6989 : Ojs.t) -> x6989
        and t_to_js : t -> Ojs.t = fun (x6988 : Ojs.t) -> x6988
        let (create : t -> args:any list -> any) =
          fun (x6993 : t) ->
            fun ~args:(x6990 : any list) ->
              any_of_js
                (Ojs.new_obj_arr (t_to_js x6993)
                   (let x6991 =
                      Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                        [||] in
                    List.iter
                      (fun (x6992 : any) ->
                         ignore (Ojs.call x6991 "push" [|(any_to_js x6992)|]))
                      x6990;
                    x6991))
      end
    type 'T t = any
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun (type __T) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x6995 : Ojs.t) -> any_of_js x6995
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t =
      fun (type __T) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x6994 : any) -> any_to_js x6994
  end
module Capitalize =
  struct
    type 'S t = Ojs.t
    let rec t_of_js : 'S . (Ojs.t -> 'S) -> Ojs.t -> 'S t =
      fun (type __S) ->
        fun (__S_of_js : Ojs.t -> __S) -> fun (x6997 : Ojs.t) -> x6997
    and t_to_js : 'S . ('S -> Ojs.t) -> 'S t -> Ojs.t =
      fun (type __S) ->
        fun (__S_to_js : __S -> Ojs.t) -> fun (x6996 : Ojs.t) -> x6996
  end
module ThisParameterType =
  struct
    type 'T t = any
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun (type __T) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x6999 : Ojs.t) -> any_of_js x6999
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t =
      fun (type __T) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x6998 : any) -> any_to_js x6998
  end
module OmitThisParameter =
  struct
    type 'T t = any
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun (type __T) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x7001 : Ojs.t) -> any_of_js x7001
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t =
      fun (type __T) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x7000 : any) -> any_to_js x7000
  end
module CallableFunction =
  struct
    type t = [ `CallableFunction  | `Function  | `Function ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type tags = [ `CallableFunction  | `Function  | `Function ]
    type 'tags this = 'tags intf constraint 'tags = [> `CallableFunction ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x7004 : Ojs.t) -> intf_of_js __tags_of_js x7004
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x7002 : __tags intf) -> intf_to_js __tags_to_js x7002
    let (apply_ : 'tags this -> this:('T -> 'R) -> thisArg:'T -> 'R) =
      fun (x7009 : 'tags this) ->
        fun ~this:(x7006 : 'T -> 'R) ->
          fun ~thisArg:(x7008 : 'T) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic x7009) "apply"
                 [|(Ojs.fun_to_js 1
                      (fun (x7007 : Ojs.t) ->
                         Obj.magic (x7006 (Obj.magic x7007))));(Obj.magic
                                                                  x7008)|])
    let (apply_' :
      'tags this ->
        this:(this:'T -> args:any list -> 'R) -> thisArg:'T -> args:'A -> 'R)
      =
      fun (x7016 : 'tags this) ->
        fun ~this:(x7011 : this:'T -> args:any list -> 'R) ->
          fun ~thisArg:(x7014 : 'T) ->
            fun ~args:(x7015 : 'A) ->
              Obj.magic
                (Ojs.call (this_to_js Obj.magic x7016) "apply"
                   [|(Ojs.fun_to_js_args
                        (fun (x7012 : _) ->
                           Obj.magic
                             (x7011 ~this:(Obj.magic (Ojs.array_get x7012 0))
                                ~args:(Ojs.list_of_js_from any_of_js x7012 1))));(
                     Obj.magic x7014);(Obj.magic x7015)|])
    let (call :
      'tags this ->
        this:(this:'T -> args:any list -> 'R) ->
          thisArg:'T -> args:any list -> 'R)
      =
      fun (x7025 : 'tags this) ->
        fun ~this:(x7018 : this:'T -> args:any list -> 'R) ->
          fun ~thisArg:(x7019 : 'T) ->
            fun ~args:(x7020 : any list) ->
              Obj.magic
                (let x7027 = this_to_js Obj.magic x7025 in
                 Ojs.call (Ojs.get_prop_ascii x7027 "call") "apply"
                   [|x7027;((let x7021 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7021 "push"
                                  [|(Ojs.fun_to_js_args
                                       (fun (x7023 : _) ->
                                          Obj.magic
                                            (x7018
                                               ~this:(Obj.magic
                                                        (Ojs.array_get x7023
                                                           0))
                                               ~args:(Ojs.list_of_js_from
                                                        any_of_js x7023 1))))|]);
                             ignore
                               (Ojs.call x7021 "push" [|(Obj.magic x7019)|]);
                             List.iter
                               (fun (x7022 : any) ->
                                  ignore
                                    (Ojs.call x7021 "push"
                                       [|(any_to_js x7022)|])) x7020;
                             x7021))|])
    let (bind :
      'tags this ->
        this:'T -> thisArg:'T ThisParameterType.t -> 'T OmitThisParameter.t)
      =
      fun (x7031 : 'tags this) ->
        fun ~this:(x7028 : 'T) ->
          fun ~thisArg:(x7029 : 'T ThisParameterType.t) ->
            OmitThisParameter.t_of_js Obj.magic
              (Ojs.call (this_to_js Obj.magic x7031) "bind"
                 [|(Obj.magic x7028);(ThisParameterType.t_to_js Obj.magic
                                        x7029)|])
    let (bind' :
      'tags this ->
        this:(this:'T -> args:any list -> 'R) ->
          thisArg:'T -> args:any list -> any list -> 'R)
      =
      fun (x7041 : 'tags this) ->
        fun ~this:(x7034 : this:'T -> args:any list -> 'R) ->
          fun ~thisArg:(x7035 : 'T) ->
            fun ~args:(x7036 : any list) ->
              fun (x7044 : any list) ->
                Obj.magic
                  (Ojs.call
                     (let x7043 = this_to_js Obj.magic x7041 in
                      Ojs.call (Ojs.get_prop_ascii x7043 "bind") "apply"
                        [|x7043;((let x7037 =
                                    Ojs.new_obj
                                      (Ojs.get_prop_ascii Ojs.global "Array")
                                      [||] in
                                  ignore
                                    (Ojs.call x7037 "push"
                                       [|(Ojs.fun_to_js_args
                                            (fun (x7039 : _) ->
                                               Obj.magic
                                                 (x7034
                                                    ~this:(Obj.magic
                                                             (Ojs.array_get
                                                                x7039 0))
                                                    ~args:(Ojs.list_of_js_from
                                                             any_of_js x7039
                                                             1))))|]);
                                  ignore
                                    (Ojs.call x7037 "push"
                                       [|(Obj.magic x7035)|]);
                                  List.iter
                                    (fun (x7038 : any) ->
                                       ignore
                                         (Ojs.call x7037 "push"
                                            [|(any_to_js x7038)|])) x7036;
                                  x7037))|]) "apply"
                     [|Ojs.null;((let x7045 =
                                    Ojs.new_obj
                                      (Ojs.get_prop_ascii Ojs.global "Array")
                                      [||] in
                                  List.iter
                                    (fun (x7046 : any) ->
                                       ignore
                                         (Ojs.call x7045 "push"
                                            [|(any_to_js x7046)|])) x7044;
                                  x7045))|])
    let cast_from = Obj.magic
  end
module Boolean =
  struct
    type t = [ `Boolean ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type tags = [ `Boolean ]
    type 'tags this = 'tags intf constraint 'tags = [> `Boolean ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x7049 : Ojs.t) -> intf_of_js __tags_of_js x7049
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x7047 : __tags intf) -> intf_to_js __tags_to_js x7047
    let (valueOf : 'tags this -> bool) =
      fun (x7051 : 'tags this) ->
        Ojs.bool_of_js (Ojs.call (this_to_js Obj.magic x7051) "valueOf" [||])
    let (create : ?value:any -> unit -> t) =
      fun ?value:(x7053 : any option) ->
        fun () ->
          t_of_js
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "Boolean")
               (let x7054 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x7053 with
                 | Some x7055 ->
                     ignore (Ojs.call x7054 "push" [|(any_to_js x7055)|])
                 | None -> ());
                x7054))
    let (invoke : ?value:'T -> unit -> bool) =
      fun ?value:(x7056 : 'T option) ->
        fun () ->
          Ojs.bool_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "Boolean") "apply"
               [|Ojs.null;((let x7057 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x7056 with
                             | Some x7058 ->
                                 ignore
                                   (Ojs.call x7057 "push"
                                      [|(Obj.magic x7058)|])
                             | None -> ());
                            x7057))|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Boolean")
             "prototype")
    let cast_from = Obj.magic
    let (of_ml : bool -> t) =
      fun (x7059 : bool) -> t_of_js (Ojs.bool_to_js x7059)
    let (to_ml : t -> bool) =
      fun (x7060 : t) ->
        Ojs.bool_of_js (Ojs.call (t_to_js x7060) "valueOf" [||])
  end
module BigIntToLocaleStringOptions =
  struct
    type t = [ `BigIntToLocaleStringOptions ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type tags = [ `BigIntToLocaleStringOptions ]
    type 'tags this =
      'tags intf constraint 'tags = [> `BigIntToLocaleStringOptions ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x7063 : Ojs.t) -> intf_of_js __tags_of_js x7063
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x7061 : __tags intf) -> intf_to_js __tags_to_js x7061
    let (get_localeMatcher : 'tags this -> string option) =
      fun (x7065 : 'tags this) ->
        Ojs.option_of_js Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x7065) "localeMatcher")
    let (set_localeMatcher : 'tags this -> string -> unit) =
      fun (x7068 : 'tags this) ->
        fun (x7069 : string) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x7068) "localeMatcher"
            (Ojs.string_to_js x7069)
    let (get_style : 'tags this -> string option) =
      fun (x7071 : 'tags this) ->
        Ojs.option_of_js Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x7071) "style")
    let (set_style : 'tags this -> string -> unit) =
      fun (x7074 : 'tags this) ->
        fun (x7075 : string) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x7074) "style"
            (Ojs.string_to_js x7075)
    let (get_numberingSystem : 'tags this -> string option) =
      fun (x7077 : 'tags this) ->
        Ojs.option_of_js Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x7077) "numberingSystem")
    let (set_numberingSystem : 'tags this -> string -> unit) =
      fun (x7080 : 'tags this) ->
        fun (x7081 : string) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x7080) "numberingSystem"
            (Ojs.string_to_js x7081)
    let (get_unit : 'tags this -> string option) =
      fun (x7083 : 'tags this) ->
        Ojs.option_of_js Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x7083) "unit")
    let (set_unit : 'tags this -> string -> unit) =
      fun (x7086 : 'tags this) ->
        fun (x7087 : string) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x7086) "unit"
            (Ojs.string_to_js x7087)
    let (get_unitDisplay : 'tags this -> string option) =
      fun (x7089 : 'tags this) ->
        Ojs.option_of_js Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x7089) "unitDisplay")
    let (set_unitDisplay : 'tags this -> string -> unit) =
      fun (x7092 : 'tags this) ->
        fun (x7093 : string) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x7092) "unitDisplay"
            (Ojs.string_to_js x7093)
    let (get_currency : 'tags this -> string option) =
      fun (x7095 : 'tags this) ->
        Ojs.option_of_js Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x7095) "currency")
    let (set_currency : 'tags this -> string -> unit) =
      fun (x7098 : 'tags this) ->
        fun (x7099 : string) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x7098) "currency"
            (Ojs.string_to_js x7099)
    let (get_currencyDisplay : 'tags this -> string option) =
      fun (x7101 : 'tags this) ->
        Ojs.option_of_js Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x7101) "currencyDisplay")
    let (set_currencyDisplay : 'tags this -> string -> unit) =
      fun (x7104 : 'tags this) ->
        fun (x7105 : string) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x7104) "currencyDisplay"
            (Ojs.string_to_js x7105)
    let (get_useGrouping : 'tags this -> bool option) =
      fun (x7107 : 'tags this) ->
        Ojs.option_of_js Ojs.bool_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x7107) "useGrouping")
    let (set_useGrouping : 'tags this -> bool -> unit) =
      fun (x7110 : 'tags this) ->
        fun (x7111 : bool) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x7110) "useGrouping"
            (Ojs.bool_to_js x7111)
    let (get_minimumIntegerDigits :
      'tags this ->
        [ `L_n_1  | `L_n_10  | `L_n_11  | `L_n_12  | `L_n_13  | `L_n_14 
        | `L_n_15  | `L_n_16  | `L_n_17  | `L_n_18  | `L_n_19  | `L_n_2 
        | `L_n_20  | `L_n_21  | `L_n_3  | `L_n_4  | `L_n_5  | `L_n_6 
        | `L_n_7  | `L_n_8  | `L_n_9 ] option)
      =
      fun (x7113 : 'tags this) ->
        Ojs.option_of_js
          (fun (x7115 : Ojs.t) ->
             let x7116 = x7115 in
             match Ojs.int_of_js x7116 with
             | 1 -> `L_n_1
             | 10 -> `L_n_10
             | 11 -> `L_n_11
             | 12 -> `L_n_12
             | 13 -> `L_n_13
             | 14 -> `L_n_14
             | 15 -> `L_n_15
             | 16 -> `L_n_16
             | 17 -> `L_n_17
             | 18 -> `L_n_18
             | 19 -> `L_n_19
             | 2 -> `L_n_2
             | 20 -> `L_n_20
             | 21 -> `L_n_21
             | 3 -> `L_n_3
             | 4 -> `L_n_4
             | 5 -> `L_n_5
             | 6 -> `L_n_6
             | 7 -> `L_n_7
             | 8 -> `L_n_8
             | 9 -> `L_n_9
             | _ -> assert false)
          (Ojs.get_prop_ascii (this_to_js Obj.magic x7113)
             "minimumIntegerDigits")
    let (set_minimumIntegerDigits :
      'tags this ->
        [ `U1 of [ `L_n_1 ]  | `U2 of [ `L_n_2 ]  | `U3 of [ `L_n_3 ] 
        | `U4 of [ `L_n_4 ]  | `U5 of [ `L_n_5 ]  | `U6 of [ `L_n_6 ] 
        | `U7 of [ `L_n_7 ]  | `U8 of [ `L_n_8 ]  | `U9 of [ `L_n_9 ] 
        | `U10 of [ `L_n_10 ]  | `U11 of [ `L_n_11 ]  | `U12 of [ `L_n_12 ] 
        | `U13 of [ `L_n_13 ]  | `U14 of [ `L_n_14 ]  | `U15 of [ `L_n_15 ] 
        | `U16 of [ `L_n_16 ]  | `U17 of [ `L_n_17 ]  | `U18 of [ `L_n_18 ] 
        | `U19 of [ `L_n_19 ]  | `U20 of [ `L_n_20 ]  | `U21 of [ `L_n_21 ] ]
          -> unit)
      =
      fun (x7117 : 'tags this) ->
        fun
          (x7118 :
            [ `U1 of [ `L_n_1 ]  | `U2 of [ `L_n_2 ]  | `U3 of [ `L_n_3 ] 
            | `U4 of [ `L_n_4 ]  | `U5 of [ `L_n_5 ]  | `U6 of [ `L_n_6 ] 
            | `U7 of [ `L_n_7 ]  | `U8 of [ `L_n_8 ]  | `U9 of [ `L_n_9 ] 
            | `U10 of [ `L_n_10 ]  | `U11 of [ `L_n_11 ] 
            | `U12 of [ `L_n_12 ]  | `U13 of [ `L_n_13 ] 
            | `U14 of [ `L_n_14 ]  | `U15 of [ `L_n_15 ] 
            | `U16 of [ `L_n_16 ]  | `U17 of [ `L_n_17 ] 
            | `U18 of [ `L_n_18 ]  | `U19 of [ `L_n_19 ] 
            | `U20 of [ `L_n_20 ]  | `U21 of [ `L_n_21 ] ])
          ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x7117)
            "minimumIntegerDigits"
            (match x7118 with
             | `U1 x7119 -> (match x7119 with | `L_n_1 -> Ojs.int_to_js 1)
             | `U2 x7120 -> (match x7120 with | `L_n_2 -> Ojs.int_to_js 2)
             | `U3 x7121 -> (match x7121 with | `L_n_3 -> Ojs.int_to_js 3)
             | `U4 x7122 -> (match x7122 with | `L_n_4 -> Ojs.int_to_js 4)
             | `U5 x7123 -> (match x7123 with | `L_n_5 -> Ojs.int_to_js 5)
             | `U6 x7124 -> (match x7124 with | `L_n_6 -> Ojs.int_to_js 6)
             | `U7 x7125 -> (match x7125 with | `L_n_7 -> Ojs.int_to_js 7)
             | `U8 x7126 -> (match x7126 with | `L_n_8 -> Ojs.int_to_js 8)
             | `U9 x7127 -> (match x7127 with | `L_n_9 -> Ojs.int_to_js 9)
             | `U10 x7128 -> (match x7128 with | `L_n_10 -> Ojs.int_to_js 10)
             | `U11 x7129 -> (match x7129 with | `L_n_11 -> Ojs.int_to_js 11)
             | `U12 x7130 -> (match x7130 with | `L_n_12 -> Ojs.int_to_js 12)
             | `U13 x7131 -> (match x7131 with | `L_n_13 -> Ojs.int_to_js 13)
             | `U14 x7132 -> (match x7132 with | `L_n_14 -> Ojs.int_to_js 14)
             | `U15 x7133 -> (match x7133 with | `L_n_15 -> Ojs.int_to_js 15)
             | `U16 x7134 -> (match x7134 with | `L_n_16 -> Ojs.int_to_js 16)
             | `U17 x7135 -> (match x7135 with | `L_n_17 -> Ojs.int_to_js 17)
             | `U18 x7136 -> (match x7136 with | `L_n_18 -> Ojs.int_to_js 18)
             | `U19 x7137 -> (match x7137 with | `L_n_19 -> Ojs.int_to_js 19)
             | `U20 x7138 -> (match x7138 with | `L_n_20 -> Ojs.int_to_js 20)
             | `U21 x7139 -> (match x7139 with | `L_n_21 -> Ojs.int_to_js 21))
    let (get_minimumFractionDigits :
      'tags this ->
        [ `L_n_0  | `L_n_1  | `L_n_10  | `L_n_11  | `L_n_12  | `L_n_13 
        | `L_n_14  | `L_n_15  | `L_n_16  | `L_n_17  | `L_n_18  | `L_n_19 
        | `L_n_2  | `L_n_20  | `L_n_3  | `L_n_4  | `L_n_5  | `L_n_6 
        | `L_n_7  | `L_n_8  | `L_n_9 ] option)
      =
      fun (x7141 : 'tags this) ->
        Ojs.option_of_js
          (fun (x7143 : Ojs.t) ->
             let x7144 = x7143 in
             match Ojs.int_of_js x7144 with
             | 0 -> `L_n_0
             | 1 -> `L_n_1
             | 10 -> `L_n_10
             | 11 -> `L_n_11
             | 12 -> `L_n_12
             | 13 -> `L_n_13
             | 14 -> `L_n_14
             | 15 -> `L_n_15
             | 16 -> `L_n_16
             | 17 -> `L_n_17
             | 18 -> `L_n_18
             | 19 -> `L_n_19
             | 2 -> `L_n_2
             | 20 -> `L_n_20
             | 3 -> `L_n_3
             | 4 -> `L_n_4
             | 5 -> `L_n_5
             | 6 -> `L_n_6
             | 7 -> `L_n_7
             | 8 -> `L_n_8
             | 9 -> `L_n_9
             | _ -> assert false)
          (Ojs.get_prop_ascii (this_to_js Obj.magic x7141)
             "minimumFractionDigits")
    let (set_minimumFractionDigits :
      'tags this ->
        [ `U1 of [ `L_n_0 ]  | `U2 of [ `L_n_1 ]  | `U3 of [ `L_n_2 ] 
        | `U4 of [ `L_n_3 ]  | `U5 of [ `L_n_4 ]  | `U6 of [ `L_n_5 ] 
        | `U7 of [ `L_n_6 ]  | `U8 of [ `L_n_7 ]  | `U9 of [ `L_n_8 ] 
        | `U10 of [ `L_n_9 ]  | `U11 of [ `L_n_10 ]  | `U12 of [ `L_n_11 ] 
        | `U13 of [ `L_n_12 ]  | `U14 of [ `L_n_13 ]  | `U15 of [ `L_n_14 ] 
        | `U16 of [ `L_n_15 ]  | `U17 of [ `L_n_16 ]  | `U18 of [ `L_n_17 ] 
        | `U19 of [ `L_n_18 ]  | `U20 of [ `L_n_19 ]  | `U21 of [ `L_n_20 ] ]
          -> unit)
      =
      fun (x7145 : 'tags this) ->
        fun
          (x7146 :
            [ `U1 of [ `L_n_0 ]  | `U2 of [ `L_n_1 ]  | `U3 of [ `L_n_2 ] 
            | `U4 of [ `L_n_3 ]  | `U5 of [ `L_n_4 ]  | `U6 of [ `L_n_5 ] 
            | `U7 of [ `L_n_6 ]  | `U8 of [ `L_n_7 ]  | `U9 of [ `L_n_8 ] 
            | `U10 of [ `L_n_9 ]  | `U11 of [ `L_n_10 ] 
            | `U12 of [ `L_n_11 ]  | `U13 of [ `L_n_12 ] 
            | `U14 of [ `L_n_13 ]  | `U15 of [ `L_n_14 ] 
            | `U16 of [ `L_n_15 ]  | `U17 of [ `L_n_16 ] 
            | `U18 of [ `L_n_17 ]  | `U19 of [ `L_n_18 ] 
            | `U20 of [ `L_n_19 ]  | `U21 of [ `L_n_20 ] ])
          ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x7145)
            "minimumFractionDigits"
            (match x7146 with
             | `U1 x7147 -> (match x7147 with | `L_n_0 -> Ojs.int_to_js 0)
             | `U2 x7148 -> (match x7148 with | `L_n_1 -> Ojs.int_to_js 1)
             | `U3 x7149 -> (match x7149 with | `L_n_2 -> Ojs.int_to_js 2)
             | `U4 x7150 -> (match x7150 with | `L_n_3 -> Ojs.int_to_js 3)
             | `U5 x7151 -> (match x7151 with | `L_n_4 -> Ojs.int_to_js 4)
             | `U6 x7152 -> (match x7152 with | `L_n_5 -> Ojs.int_to_js 5)
             | `U7 x7153 -> (match x7153 with | `L_n_6 -> Ojs.int_to_js 6)
             | `U8 x7154 -> (match x7154 with | `L_n_7 -> Ojs.int_to_js 7)
             | `U9 x7155 -> (match x7155 with | `L_n_8 -> Ojs.int_to_js 8)
             | `U10 x7156 -> (match x7156 with | `L_n_9 -> Ojs.int_to_js 9)
             | `U11 x7157 -> (match x7157 with | `L_n_10 -> Ojs.int_to_js 10)
             | `U12 x7158 -> (match x7158 with | `L_n_11 -> Ojs.int_to_js 11)
             | `U13 x7159 -> (match x7159 with | `L_n_12 -> Ojs.int_to_js 12)
             | `U14 x7160 -> (match x7160 with | `L_n_13 -> Ojs.int_to_js 13)
             | `U15 x7161 -> (match x7161 with | `L_n_14 -> Ojs.int_to_js 14)
             | `U16 x7162 -> (match x7162 with | `L_n_15 -> Ojs.int_to_js 15)
             | `U17 x7163 -> (match x7163 with | `L_n_16 -> Ojs.int_to_js 16)
             | `U18 x7164 -> (match x7164 with | `L_n_17 -> Ojs.int_to_js 17)
             | `U19 x7165 -> (match x7165 with | `L_n_18 -> Ojs.int_to_js 18)
             | `U20 x7166 -> (match x7166 with | `L_n_19 -> Ojs.int_to_js 19)
             | `U21 x7167 -> (match x7167 with | `L_n_20 -> Ojs.int_to_js 20))
    let (get_maximumFractionDigits :
      'tags this ->
        [ `L_n_0  | `L_n_1  | `L_n_10  | `L_n_11  | `L_n_12  | `L_n_13 
        | `L_n_14  | `L_n_15  | `L_n_16  | `L_n_17  | `L_n_18  | `L_n_19 
        | `L_n_2  | `L_n_20  | `L_n_3  | `L_n_4  | `L_n_5  | `L_n_6 
        | `L_n_7  | `L_n_8  | `L_n_9 ] option)
      =
      fun (x7169 : 'tags this) ->
        Ojs.option_of_js
          (fun (x7171 : Ojs.t) ->
             let x7172 = x7171 in
             match Ojs.int_of_js x7172 with
             | 0 -> `L_n_0
             | 1 -> `L_n_1
             | 10 -> `L_n_10
             | 11 -> `L_n_11
             | 12 -> `L_n_12
             | 13 -> `L_n_13
             | 14 -> `L_n_14
             | 15 -> `L_n_15
             | 16 -> `L_n_16
             | 17 -> `L_n_17
             | 18 -> `L_n_18
             | 19 -> `L_n_19
             | 2 -> `L_n_2
             | 20 -> `L_n_20
             | 3 -> `L_n_3
             | 4 -> `L_n_4
             | 5 -> `L_n_5
             | 6 -> `L_n_6
             | 7 -> `L_n_7
             | 8 -> `L_n_8
             | 9 -> `L_n_9
             | _ -> assert false)
          (Ojs.get_prop_ascii (this_to_js Obj.magic x7169)
             "maximumFractionDigits")
    let (set_maximumFractionDigits :
      'tags this ->
        [ `U1 of [ `L_n_0 ]  | `U2 of [ `L_n_1 ]  | `U3 of [ `L_n_2 ] 
        | `U4 of [ `L_n_3 ]  | `U5 of [ `L_n_4 ]  | `U6 of [ `L_n_5 ] 
        | `U7 of [ `L_n_6 ]  | `U8 of [ `L_n_7 ]  | `U9 of [ `L_n_8 ] 
        | `U10 of [ `L_n_9 ]  | `U11 of [ `L_n_10 ]  | `U12 of [ `L_n_11 ] 
        | `U13 of [ `L_n_12 ]  | `U14 of [ `L_n_13 ]  | `U15 of [ `L_n_14 ] 
        | `U16 of [ `L_n_15 ]  | `U17 of [ `L_n_16 ]  | `U18 of [ `L_n_17 ] 
        | `U19 of [ `L_n_18 ]  | `U20 of [ `L_n_19 ]  | `U21 of [ `L_n_20 ] ]
          -> unit)
      =
      fun (x7173 : 'tags this) ->
        fun
          (x7174 :
            [ `U1 of [ `L_n_0 ]  | `U2 of [ `L_n_1 ]  | `U3 of [ `L_n_2 ] 
            | `U4 of [ `L_n_3 ]  | `U5 of [ `L_n_4 ]  | `U6 of [ `L_n_5 ] 
            | `U7 of [ `L_n_6 ]  | `U8 of [ `L_n_7 ]  | `U9 of [ `L_n_8 ] 
            | `U10 of [ `L_n_9 ]  | `U11 of [ `L_n_10 ] 
            | `U12 of [ `L_n_11 ]  | `U13 of [ `L_n_12 ] 
            | `U14 of [ `L_n_13 ]  | `U15 of [ `L_n_14 ] 
            | `U16 of [ `L_n_15 ]  | `U17 of [ `L_n_16 ] 
            | `U18 of [ `L_n_17 ]  | `U19 of [ `L_n_18 ] 
            | `U20 of [ `L_n_19 ]  | `U21 of [ `L_n_20 ] ])
          ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x7173)
            "maximumFractionDigits"
            (match x7174 with
             | `U1 x7175 -> (match x7175 with | `L_n_0 -> Ojs.int_to_js 0)
             | `U2 x7176 -> (match x7176 with | `L_n_1 -> Ojs.int_to_js 1)
             | `U3 x7177 -> (match x7177 with | `L_n_2 -> Ojs.int_to_js 2)
             | `U4 x7178 -> (match x7178 with | `L_n_3 -> Ojs.int_to_js 3)
             | `U5 x7179 -> (match x7179 with | `L_n_4 -> Ojs.int_to_js 4)
             | `U6 x7180 -> (match x7180 with | `L_n_5 -> Ojs.int_to_js 5)
             | `U7 x7181 -> (match x7181 with | `L_n_6 -> Ojs.int_to_js 6)
             | `U8 x7182 -> (match x7182 with | `L_n_7 -> Ojs.int_to_js 7)
             | `U9 x7183 -> (match x7183 with | `L_n_8 -> Ojs.int_to_js 8)
             | `U10 x7184 -> (match x7184 with | `L_n_9 -> Ojs.int_to_js 9)
             | `U11 x7185 -> (match x7185 with | `L_n_10 -> Ojs.int_to_js 10)
             | `U12 x7186 -> (match x7186 with | `L_n_11 -> Ojs.int_to_js 11)
             | `U13 x7187 -> (match x7187 with | `L_n_12 -> Ojs.int_to_js 12)
             | `U14 x7188 -> (match x7188 with | `L_n_13 -> Ojs.int_to_js 13)
             | `U15 x7189 -> (match x7189 with | `L_n_14 -> Ojs.int_to_js 14)
             | `U16 x7190 -> (match x7190 with | `L_n_15 -> Ojs.int_to_js 15)
             | `U17 x7191 -> (match x7191 with | `L_n_16 -> Ojs.int_to_js 16)
             | `U18 x7192 -> (match x7192 with | `L_n_17 -> Ojs.int_to_js 17)
             | `U19 x7193 -> (match x7193 with | `L_n_18 -> Ojs.int_to_js 18)
             | `U20 x7194 -> (match x7194 with | `L_n_19 -> Ojs.int_to_js 19)
             | `U21 x7195 -> (match x7195 with | `L_n_20 -> Ojs.int_to_js 20))
    let (get_minimumSignificantDigits :
      'tags this ->
        [ `L_n_1  | `L_n_10  | `L_n_11  | `L_n_12  | `L_n_13  | `L_n_14 
        | `L_n_15  | `L_n_16  | `L_n_17  | `L_n_18  | `L_n_19  | `L_n_2 
        | `L_n_20  | `L_n_21  | `L_n_3  | `L_n_4  | `L_n_5  | `L_n_6 
        | `L_n_7  | `L_n_8  | `L_n_9 ] option)
      =
      fun (x7197 : 'tags this) ->
        Ojs.option_of_js
          (fun (x7199 : Ojs.t) ->
             let x7200 = x7199 in
             match Ojs.int_of_js x7200 with
             | 1 -> `L_n_1
             | 10 -> `L_n_10
             | 11 -> `L_n_11
             | 12 -> `L_n_12
             | 13 -> `L_n_13
             | 14 -> `L_n_14
             | 15 -> `L_n_15
             | 16 -> `L_n_16
             | 17 -> `L_n_17
             | 18 -> `L_n_18
             | 19 -> `L_n_19
             | 2 -> `L_n_2
             | 20 -> `L_n_20
             | 21 -> `L_n_21
             | 3 -> `L_n_3
             | 4 -> `L_n_4
             | 5 -> `L_n_5
             | 6 -> `L_n_6
             | 7 -> `L_n_7
             | 8 -> `L_n_8
             | 9 -> `L_n_9
             | _ -> assert false)
          (Ojs.get_prop_ascii (this_to_js Obj.magic x7197)
             "minimumSignificantDigits")
    let (set_minimumSignificantDigits :
      'tags this ->
        [ `U1 of [ `L_n_1 ]  | `U2 of [ `L_n_2 ]  | `U3 of [ `L_n_3 ] 
        | `U4 of [ `L_n_4 ]  | `U5 of [ `L_n_5 ]  | `U6 of [ `L_n_6 ] 
        | `U7 of [ `L_n_7 ]  | `U8 of [ `L_n_8 ]  | `U9 of [ `L_n_9 ] 
        | `U10 of [ `L_n_10 ]  | `U11 of [ `L_n_11 ]  | `U12 of [ `L_n_12 ] 
        | `U13 of [ `L_n_13 ]  | `U14 of [ `L_n_14 ]  | `U15 of [ `L_n_15 ] 
        | `U16 of [ `L_n_16 ]  | `U17 of [ `L_n_17 ]  | `U18 of [ `L_n_18 ] 
        | `U19 of [ `L_n_19 ]  | `U20 of [ `L_n_20 ]  | `U21 of [ `L_n_21 ] ]
          -> unit)
      =
      fun (x7201 : 'tags this) ->
        fun
          (x7202 :
            [ `U1 of [ `L_n_1 ]  | `U2 of [ `L_n_2 ]  | `U3 of [ `L_n_3 ] 
            | `U4 of [ `L_n_4 ]  | `U5 of [ `L_n_5 ]  | `U6 of [ `L_n_6 ] 
            | `U7 of [ `L_n_7 ]  | `U8 of [ `L_n_8 ]  | `U9 of [ `L_n_9 ] 
            | `U10 of [ `L_n_10 ]  | `U11 of [ `L_n_11 ] 
            | `U12 of [ `L_n_12 ]  | `U13 of [ `L_n_13 ] 
            | `U14 of [ `L_n_14 ]  | `U15 of [ `L_n_15 ] 
            | `U16 of [ `L_n_16 ]  | `U17 of [ `L_n_17 ] 
            | `U18 of [ `L_n_18 ]  | `U19 of [ `L_n_19 ] 
            | `U20 of [ `L_n_20 ]  | `U21 of [ `L_n_21 ] ])
          ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x7201)
            "minimumSignificantDigits"
            (match x7202 with
             | `U1 x7203 -> (match x7203 with | `L_n_1 -> Ojs.int_to_js 1)
             | `U2 x7204 -> (match x7204 with | `L_n_2 -> Ojs.int_to_js 2)
             | `U3 x7205 -> (match x7205 with | `L_n_3 -> Ojs.int_to_js 3)
             | `U4 x7206 -> (match x7206 with | `L_n_4 -> Ojs.int_to_js 4)
             | `U5 x7207 -> (match x7207 with | `L_n_5 -> Ojs.int_to_js 5)
             | `U6 x7208 -> (match x7208 with | `L_n_6 -> Ojs.int_to_js 6)
             | `U7 x7209 -> (match x7209 with | `L_n_7 -> Ojs.int_to_js 7)
             | `U8 x7210 -> (match x7210 with | `L_n_8 -> Ojs.int_to_js 8)
             | `U9 x7211 -> (match x7211 with | `L_n_9 -> Ojs.int_to_js 9)
             | `U10 x7212 -> (match x7212 with | `L_n_10 -> Ojs.int_to_js 10)
             | `U11 x7213 -> (match x7213 with | `L_n_11 -> Ojs.int_to_js 11)
             | `U12 x7214 -> (match x7214 with | `L_n_12 -> Ojs.int_to_js 12)
             | `U13 x7215 -> (match x7215 with | `L_n_13 -> Ojs.int_to_js 13)
             | `U14 x7216 -> (match x7216 with | `L_n_14 -> Ojs.int_to_js 14)
             | `U15 x7217 -> (match x7217 with | `L_n_15 -> Ojs.int_to_js 15)
             | `U16 x7218 -> (match x7218 with | `L_n_16 -> Ojs.int_to_js 16)
             | `U17 x7219 -> (match x7219 with | `L_n_17 -> Ojs.int_to_js 17)
             | `U18 x7220 -> (match x7220 with | `L_n_18 -> Ojs.int_to_js 18)
             | `U19 x7221 -> (match x7221 with | `L_n_19 -> Ojs.int_to_js 19)
             | `U20 x7222 -> (match x7222 with | `L_n_20 -> Ojs.int_to_js 20)
             | `U21 x7223 -> (match x7223 with | `L_n_21 -> Ojs.int_to_js 21))
    let (get_maximumSignificantDigits :
      'tags this ->
        [ `L_n_1  | `L_n_10  | `L_n_11  | `L_n_12  | `L_n_13  | `L_n_14 
        | `L_n_15  | `L_n_16  | `L_n_17  | `L_n_18  | `L_n_19  | `L_n_2 
        | `L_n_20  | `L_n_21  | `L_n_3  | `L_n_4  | `L_n_5  | `L_n_6 
        | `L_n_7  | `L_n_8  | `L_n_9 ] option)
      =
      fun (x7225 : 'tags this) ->
        Ojs.option_of_js
          (fun (x7227 : Ojs.t) ->
             let x7228 = x7227 in
             match Ojs.int_of_js x7228 with
             | 1 -> `L_n_1
             | 10 -> `L_n_10
             | 11 -> `L_n_11
             | 12 -> `L_n_12
             | 13 -> `L_n_13
             | 14 -> `L_n_14
             | 15 -> `L_n_15
             | 16 -> `L_n_16
             | 17 -> `L_n_17
             | 18 -> `L_n_18
             | 19 -> `L_n_19
             | 2 -> `L_n_2
             | 20 -> `L_n_20
             | 21 -> `L_n_21
             | 3 -> `L_n_3
             | 4 -> `L_n_4
             | 5 -> `L_n_5
             | 6 -> `L_n_6
             | 7 -> `L_n_7
             | 8 -> `L_n_8
             | 9 -> `L_n_9
             | _ -> assert false)
          (Ojs.get_prop_ascii (this_to_js Obj.magic x7225)
             "maximumSignificantDigits")
    let (set_maximumSignificantDigits :
      'tags this ->
        [ `U1 of [ `L_n_1 ]  | `U2 of [ `L_n_2 ]  | `U3 of [ `L_n_3 ] 
        | `U4 of [ `L_n_4 ]  | `U5 of [ `L_n_5 ]  | `U6 of [ `L_n_6 ] 
        | `U7 of [ `L_n_7 ]  | `U8 of [ `L_n_8 ]  | `U9 of [ `L_n_9 ] 
        | `U10 of [ `L_n_10 ]  | `U11 of [ `L_n_11 ]  | `U12 of [ `L_n_12 ] 
        | `U13 of [ `L_n_13 ]  | `U14 of [ `L_n_14 ]  | `U15 of [ `L_n_15 ] 
        | `U16 of [ `L_n_16 ]  | `U17 of [ `L_n_17 ]  | `U18 of [ `L_n_18 ] 
        | `U19 of [ `L_n_19 ]  | `U20 of [ `L_n_20 ]  | `U21 of [ `L_n_21 ] ]
          -> unit)
      =
      fun (x7229 : 'tags this) ->
        fun
          (x7230 :
            [ `U1 of [ `L_n_1 ]  | `U2 of [ `L_n_2 ]  | `U3 of [ `L_n_3 ] 
            | `U4 of [ `L_n_4 ]  | `U5 of [ `L_n_5 ]  | `U6 of [ `L_n_6 ] 
            | `U7 of [ `L_n_7 ]  | `U8 of [ `L_n_8 ]  | `U9 of [ `L_n_9 ] 
            | `U10 of [ `L_n_10 ]  | `U11 of [ `L_n_11 ] 
            | `U12 of [ `L_n_12 ]  | `U13 of [ `L_n_13 ] 
            | `U14 of [ `L_n_14 ]  | `U15 of [ `L_n_15 ] 
            | `U16 of [ `L_n_16 ]  | `U17 of [ `L_n_17 ] 
            | `U18 of [ `L_n_18 ]  | `U19 of [ `L_n_19 ] 
            | `U20 of [ `L_n_20 ]  | `U21 of [ `L_n_21 ] ])
          ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x7229)
            "maximumSignificantDigits"
            (match x7230 with
             | `U1 x7231 -> (match x7231 with | `L_n_1 -> Ojs.int_to_js 1)
             | `U2 x7232 -> (match x7232 with | `L_n_2 -> Ojs.int_to_js 2)
             | `U3 x7233 -> (match x7233 with | `L_n_3 -> Ojs.int_to_js 3)
             | `U4 x7234 -> (match x7234 with | `L_n_4 -> Ojs.int_to_js 4)
             | `U5 x7235 -> (match x7235 with | `L_n_5 -> Ojs.int_to_js 5)
             | `U6 x7236 -> (match x7236 with | `L_n_6 -> Ojs.int_to_js 6)
             | `U7 x7237 -> (match x7237 with | `L_n_7 -> Ojs.int_to_js 7)
             | `U8 x7238 -> (match x7238 with | `L_n_8 -> Ojs.int_to_js 8)
             | `U9 x7239 -> (match x7239 with | `L_n_9 -> Ojs.int_to_js 9)
             | `U10 x7240 -> (match x7240 with | `L_n_10 -> Ojs.int_to_js 10)
             | `U11 x7241 -> (match x7241 with | `L_n_11 -> Ojs.int_to_js 11)
             | `U12 x7242 -> (match x7242 with | `L_n_12 -> Ojs.int_to_js 12)
             | `U13 x7243 -> (match x7243 with | `L_n_13 -> Ojs.int_to_js 13)
             | `U14 x7244 -> (match x7244 with | `L_n_14 -> Ojs.int_to_js 14)
             | `U15 x7245 -> (match x7245 with | `L_n_15 -> Ojs.int_to_js 15)
             | `U16 x7246 -> (match x7246 with | `L_n_16 -> Ojs.int_to_js 16)
             | `U17 x7247 -> (match x7247 with | `L_n_17 -> Ojs.int_to_js 17)
             | `U18 x7248 -> (match x7248 with | `L_n_18 -> Ojs.int_to_js 18)
             | `U19 x7249 -> (match x7249 with | `L_n_19 -> Ojs.int_to_js 19)
             | `U20 x7250 -> (match x7250 with | `L_n_20 -> Ojs.int_to_js 20)
             | `U21 x7251 -> (match x7251 with | `L_n_21 -> Ojs.int_to_js 21))
    let (get_notation : 'tags this -> string option) =
      fun (x7253 : 'tags this) ->
        Ojs.option_of_js Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x7253) "notation")
    let (set_notation : 'tags this -> string -> unit) =
      fun (x7256 : 'tags this) ->
        fun (x7257 : string) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x7256) "notation"
            (Ojs.string_to_js x7257)
    let (get_compactDisplay : 'tags this -> string option) =
      fun (x7259 : 'tags this) ->
        Ojs.option_of_js Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x7259) "compactDisplay")
    let (set_compactDisplay : 'tags this -> string -> unit) =
      fun (x7262 : 'tags this) ->
        fun (x7263 : string) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x7262) "compactDisplay"
            (Ojs.string_to_js x7263)
    let (create :
      ?localeMatcher:string ->
        ?style:string ->
          ?numberingSystem:string ->
            ?unit:string ->
              ?unitDisplay:string ->
                ?currency:string ->
                  ?currencyDisplay:string ->
                    ?useGrouping:bool ->
                      ?minimumIntegerDigits:[ `L_n_1  | `L_n_10  | `L_n_11 
                                            | `L_n_12  | `L_n_13  | `L_n_14 
                                            | `L_n_15  | `L_n_16  | `L_n_17 
                                            | `L_n_18  | `L_n_19  | `L_n_2 
                                            | `L_n_20  | `L_n_21  | `L_n_3 
                                            | `L_n_4  | `L_n_5  | `L_n_6 
                                            | `L_n_7  | `L_n_8  | `L_n_9 ]
                        ->
                        ?minimumFractionDigits:[ `L_n_0  | `L_n_1  | 
                                                 `L_n_10 
                                               | `L_n_11  | `L_n_12 
                                               | `L_n_13  | `L_n_14 
                                               | `L_n_15  | `L_n_16 
                                               | `L_n_17  | `L_n_18 
                                               | `L_n_19  | `L_n_2 
                                               | `L_n_20  | `L_n_3  | 
                                                 `L_n_4 
                                               | `L_n_5  | `L_n_6  | 
                                                 `L_n_7 
                                               | `L_n_8  | `L_n_9 ]
                          ->
                          ?maximumFractionDigits:[ `L_n_0  | `L_n_1 
                                                 | `L_n_10  | `L_n_11 
                                                 | `L_n_12  | `L_n_13 
                                                 | `L_n_14  | `L_n_15 
                                                 | `L_n_16  | `L_n_17 
                                                 | `L_n_18  | `L_n_19 
                                                 | `L_n_2  | `L_n_20 
                                                 | `L_n_3  | `L_n_4 
                                                 | `L_n_5  | `L_n_6 
                                                 | `L_n_7  | `L_n_8 
                                                 | `L_n_9 ]
                            ->
                            ?minimumSignificantDigits:[ `L_n_1  | `L_n_10 
                                                      | `L_n_11  | `L_n_12 
                                                      | `L_n_13  | `L_n_14 
                                                      | `L_n_15  | `L_n_16 
                                                      | `L_n_17  | `L_n_18 
                                                      | `L_n_19  | `L_n_2 
                                                      | `L_n_20  | `L_n_21 
                                                      | `L_n_3  | `L_n_4 
                                                      | `L_n_5  | `L_n_6 
                                                      | `L_n_7  | `L_n_8 
                                                      | `L_n_9 ]
                              ->
                              ?maximumSignificantDigits:[ `L_n_1  | `L_n_10 
                                                        | `L_n_11  | 
                                                          `L_n_12 
                                                        | `L_n_13  | 
                                                          `L_n_14 
                                                        | `L_n_15  | 
                                                          `L_n_16 
                                                        | `L_n_17  | 
                                                          `L_n_18 
                                                        | `L_n_19  | 
                                                          `L_n_2 
                                                        | `L_n_20  | 
                                                          `L_n_21 
                                                        | `L_n_3  | `L_n_4 
                                                        | `L_n_5  | `L_n_6 
                                                        | `L_n_7  | `L_n_8 
                                                        | `L_n_9 ]
                                ->
                                ?notation:string ->
                                  ?compactDisplay:string -> unit -> t)
      =
      fun ?localeMatcher:(x7265 : string option) ->
        fun ?style:(x7266 : string option) ->
          fun ?numberingSystem:(x7267 : string option) ->
            fun ?unit:(x7268 : string option) ->
              fun ?unitDisplay:(x7269 : string option) ->
                fun ?currency:(x7270 : string option) ->
                  fun ?currencyDisplay:(x7271 : string option) ->
                    fun ?useGrouping:(x7272 : bool option) ->
                      fun
                        ?minimumIntegerDigits:(x7273 :
                                                [ `L_n_1  | `L_n_10 
                                                | `L_n_11  | `L_n_12 
                                                | `L_n_13  | `L_n_14 
                                                | `L_n_15  | `L_n_16 
                                                | `L_n_17  | `L_n_18 
                                                | `L_n_19  | `L_n_2 
                                                | `L_n_20  | `L_n_21 
                                                | `L_n_3  | `L_n_4  | 
                                                  `L_n_5 
                                                | `L_n_6  | `L_n_7  | 
                                                  `L_n_8 
                                                | `L_n_9 ] option)
                        ->
                        fun
                          ?minimumFractionDigits:(x7274 :
                                                   [ `L_n_0  | `L_n_1 
                                                   | `L_n_10  | `L_n_11 
                                                   | `L_n_12  | `L_n_13 
                                                   | `L_n_14  | `L_n_15 
                                                   | `L_n_16  | `L_n_17 
                                                   | `L_n_18  | `L_n_19 
                                                   | `L_n_2  | `L_n_20 
                                                   | `L_n_3  | `L_n_4 
                                                   | `L_n_5  | `L_n_6 
                                                   | `L_n_7  | `L_n_8 
                                                   | `L_n_9 ] option)
                          ->
                          fun
                            ?maximumFractionDigits:(x7275 :
                                                     [ `L_n_0  | `L_n_1 
                                                     | `L_n_10  | `L_n_11 
                                                     | `L_n_12  | `L_n_13 
                                                     | `L_n_14  | `L_n_15 
                                                     | `L_n_16  | `L_n_17 
                                                     | `L_n_18  | `L_n_19 
                                                     | `L_n_2  | `L_n_20 
                                                     | `L_n_3  | `L_n_4 
                                                     | `L_n_5  | `L_n_6 
                                                     | `L_n_7  | `L_n_8 
                                                     | `L_n_9 ] option)
                            ->
                            fun
                              ?minimumSignificantDigits:(x7276 :
                                                          [ `L_n_1 
                                                          | `L_n_10 
                                                          | `L_n_11 
                                                          | `L_n_12 
                                                          | `L_n_13 
                                                          | `L_n_14 
                                                          | `L_n_15 
                                                          | `L_n_16 
                                                          | `L_n_17 
                                                          | `L_n_18 
                                                          | `L_n_19 
                                                          | `L_n_2 
                                                          | `L_n_20 
                                                          | `L_n_21 
                                                          | `L_n_3  | 
                                                            `L_n_4 
                                                          | `L_n_5  | 
                                                            `L_n_6 
                                                          | `L_n_7  | 
                                                            `L_n_8 
                                                          | `L_n_9 ] option)
                              ->
                              fun
                                ?maximumSignificantDigits:(x7277 :
                                                            [ `L_n_1 
                                                            | `L_n_10 
                                                            | `L_n_11 
                                                            | `L_n_12 
                                                            | `L_n_13 
                                                            | `L_n_14 
                                                            | `L_n_15 
                                                            | `L_n_16 
                                                            | `L_n_17 
                                                            | `L_n_18 
                                                            | `L_n_19 
                                                            | `L_n_2 
                                                            | `L_n_20 
                                                            | `L_n_21 
                                                            | `L_n_3 
                                                            | `L_n_4 
                                                            | `L_n_5 
                                                            | `L_n_6 
                                                            | `L_n_7 
                                                            | `L_n_8 
                                                            | `L_n_9 ] option)
                                ->
                                fun ?notation:(x7278 : string option) ->
                                  fun ?compactDisplay:(x7279 : string option)
                                    ->
                                    fun () ->
                                      let x7280 = Ojs.empty_obj () in
                                      (match x7265 with
                                       | Some x7295 ->
                                           Ojs.set_prop_ascii x7280
                                             "localeMatcher"
                                             (Ojs.string_to_js x7295)
                                       | None -> ());
                                      (match x7266 with
                                       | Some x7294 ->
                                           Ojs.set_prop_ascii x7280 "style"
                                             (Ojs.string_to_js x7294)
                                       | None -> ());
                                      (match x7267 with
                                       | Some x7293 ->
                                           Ojs.set_prop_ascii x7280
                                             "numberingSystem"
                                             (Ojs.string_to_js x7293)
                                       | None -> ());
                                      (match x7268 with
                                       | Some x7292 ->
                                           Ojs.set_prop_ascii x7280 "unit"
                                             (Ojs.string_to_js x7292)
                                       | None -> ());
                                      (match x7269 with
                                       | Some x7291 ->
                                           Ojs.set_prop_ascii x7280
                                             "unitDisplay"
                                             (Ojs.string_to_js x7291)
                                       | None -> ());
                                      (match x7270 with
                                       | Some x7290 ->
                                           Ojs.set_prop_ascii x7280
                                             "currency"
                                             (Ojs.string_to_js x7290)
                                       | None -> ());
                                      (match x7271 with
                                       | Some x7289 ->
                                           Ojs.set_prop_ascii x7280
                                             "currencyDisplay"
                                             (Ojs.string_to_js x7289)
                                       | None -> ());
                                      (match x7272 with
                                       | Some x7288 ->
                                           Ojs.set_prop_ascii x7280
                                             "useGrouping"
                                             (Ojs.bool_to_js x7288)
                                       | None -> ());
                                      (match x7273 with
                                       | Some x7287 ->
                                           Ojs.set_prop_ascii x7280
                                             "minimumIntegerDigits"
                                             (match x7287 with
                                              | `L_n_1 -> Ojs.int_to_js 1
                                              | `L_n_10 -> Ojs.int_to_js 10
                                              | `L_n_11 -> Ojs.int_to_js 11
                                              | `L_n_12 -> Ojs.int_to_js 12
                                              | `L_n_13 -> Ojs.int_to_js 13
                                              | `L_n_14 -> Ojs.int_to_js 14
                                              | `L_n_15 -> Ojs.int_to_js 15
                                              | `L_n_16 -> Ojs.int_to_js 16
                                              | `L_n_17 -> Ojs.int_to_js 17
                                              | `L_n_18 -> Ojs.int_to_js 18
                                              | `L_n_19 -> Ojs.int_to_js 19
                                              | `L_n_2 -> Ojs.int_to_js 2
                                              | `L_n_20 -> Ojs.int_to_js 20
                                              | `L_n_21 -> Ojs.int_to_js 21
                                              | `L_n_3 -> Ojs.int_to_js 3
                                              | `L_n_4 -> Ojs.int_to_js 4
                                              | `L_n_5 -> Ojs.int_to_js 5
                                              | `L_n_6 -> Ojs.int_to_js 6
                                              | `L_n_7 -> Ojs.int_to_js 7
                                              | `L_n_8 -> Ojs.int_to_js 8
                                              | `L_n_9 -> Ojs.int_to_js 9)
                                       | None -> ());
                                      (match x7274 with
                                       | Some x7286 ->
                                           Ojs.set_prop_ascii x7280
                                             "minimumFractionDigits"
                                             (match x7286 with
                                              | `L_n_0 -> Ojs.int_to_js 0
                                              | `L_n_1 -> Ojs.int_to_js 1
                                              | `L_n_10 -> Ojs.int_to_js 10
                                              | `L_n_11 -> Ojs.int_to_js 11
                                              | `L_n_12 -> Ojs.int_to_js 12
                                              | `L_n_13 -> Ojs.int_to_js 13
                                              | `L_n_14 -> Ojs.int_to_js 14
                                              | `L_n_15 -> Ojs.int_to_js 15
                                              | `L_n_16 -> Ojs.int_to_js 16
                                              | `L_n_17 -> Ojs.int_to_js 17
                                              | `L_n_18 -> Ojs.int_to_js 18
                                              | `L_n_19 -> Ojs.int_to_js 19
                                              | `L_n_2 -> Ojs.int_to_js 2
                                              | `L_n_20 -> Ojs.int_to_js 20
                                              | `L_n_3 -> Ojs.int_to_js 3
                                              | `L_n_4 -> Ojs.int_to_js 4
                                              | `L_n_5 -> Ojs.int_to_js 5
                                              | `L_n_6 -> Ojs.int_to_js 6
                                              | `L_n_7 -> Ojs.int_to_js 7
                                              | `L_n_8 -> Ojs.int_to_js 8
                                              | `L_n_9 -> Ojs.int_to_js 9)
                                       | None -> ());
                                      (match x7275 with
                                       | Some x7285 ->
                                           Ojs.set_prop_ascii x7280
                                             "maximumFractionDigits"
                                             (match x7285 with
                                              | `L_n_0 -> Ojs.int_to_js 0
                                              | `L_n_1 -> Ojs.int_to_js 1
                                              | `L_n_10 -> Ojs.int_to_js 10
                                              | `L_n_11 -> Ojs.int_to_js 11
                                              | `L_n_12 -> Ojs.int_to_js 12
                                              | `L_n_13 -> Ojs.int_to_js 13
                                              | `L_n_14 -> Ojs.int_to_js 14
                                              | `L_n_15 -> Ojs.int_to_js 15
                                              | `L_n_16 -> Ojs.int_to_js 16
                                              | `L_n_17 -> Ojs.int_to_js 17
                                              | `L_n_18 -> Ojs.int_to_js 18
                                              | `L_n_19 -> Ojs.int_to_js 19
                                              | `L_n_2 -> Ojs.int_to_js 2
                                              | `L_n_20 -> Ojs.int_to_js 20
                                              | `L_n_3 -> Ojs.int_to_js 3
                                              | `L_n_4 -> Ojs.int_to_js 4
                                              | `L_n_5 -> Ojs.int_to_js 5
                                              | `L_n_6 -> Ojs.int_to_js 6
                                              | `L_n_7 -> Ojs.int_to_js 7
                                              | `L_n_8 -> Ojs.int_to_js 8
                                              | `L_n_9 -> Ojs.int_to_js 9)
                                       | None -> ());
                                      (match x7276 with
                                       | Some x7284 ->
                                           Ojs.set_prop_ascii x7280
                                             "minimumSignificantDigits"
                                             (match x7284 with
                                              | `L_n_1 -> Ojs.int_to_js 1
                                              | `L_n_10 -> Ojs.int_to_js 10
                                              | `L_n_11 -> Ojs.int_to_js 11
                                              | `L_n_12 -> Ojs.int_to_js 12
                                              | `L_n_13 -> Ojs.int_to_js 13
                                              | `L_n_14 -> Ojs.int_to_js 14
                                              | `L_n_15 -> Ojs.int_to_js 15
                                              | `L_n_16 -> Ojs.int_to_js 16
                                              | `L_n_17 -> Ojs.int_to_js 17
                                              | `L_n_18 -> Ojs.int_to_js 18
                                              | `L_n_19 -> Ojs.int_to_js 19
                                              | `L_n_2 -> Ojs.int_to_js 2
                                              | `L_n_20 -> Ojs.int_to_js 20
                                              | `L_n_21 -> Ojs.int_to_js 21
                                              | `L_n_3 -> Ojs.int_to_js 3
                                              | `L_n_4 -> Ojs.int_to_js 4
                                              | `L_n_5 -> Ojs.int_to_js 5
                                              | `L_n_6 -> Ojs.int_to_js 6
                                              | `L_n_7 -> Ojs.int_to_js 7
                                              | `L_n_8 -> Ojs.int_to_js 8
                                              | `L_n_9 -> Ojs.int_to_js 9)
                                       | None -> ());
                                      (match x7277 with
                                       | Some x7283 ->
                                           Ojs.set_prop_ascii x7280
                                             "maximumSignificantDigits"
                                             (match x7283 with
                                              | `L_n_1 -> Ojs.int_to_js 1
                                              | `L_n_10 -> Ojs.int_to_js 10
                                              | `L_n_11 -> Ojs.int_to_js 11
                                              | `L_n_12 -> Ojs.int_to_js 12
                                              | `L_n_13 -> Ojs.int_to_js 13
                                              | `L_n_14 -> Ojs.int_to_js 14
                                              | `L_n_15 -> Ojs.int_to_js 15
                                              | `L_n_16 -> Ojs.int_to_js 16
                                              | `L_n_17 -> Ojs.int_to_js 17
                                              | `L_n_18 -> Ojs.int_to_js 18
                                              | `L_n_19 -> Ojs.int_to_js 19
                                              | `L_n_2 -> Ojs.int_to_js 2
                                              | `L_n_20 -> Ojs.int_to_js 20
                                              | `L_n_21 -> Ojs.int_to_js 21
                                              | `L_n_3 -> Ojs.int_to_js 3
                                              | `L_n_4 -> Ojs.int_to_js 4
                                              | `L_n_5 -> Ojs.int_to_js 5
                                              | `L_n_6 -> Ojs.int_to_js 6
                                              | `L_n_7 -> Ojs.int_to_js 7
                                              | `L_n_8 -> Ojs.int_to_js 8
                                              | `L_n_9 -> Ojs.int_to_js 9)
                                       | None -> ());
                                      (match x7278 with
                                       | Some x7282 ->
                                           Ojs.set_prop_ascii x7280
                                             "notation"
                                             (Ojs.string_to_js x7282)
                                       | None -> ());
                                      (match x7279 with
                                       | Some x7281 ->
                                           Ojs.set_prop_ascii x7280
                                             "compactDisplay"
                                             (Ojs.string_to_js x7281)
                                       | None -> ());
                                      t_of_js x7280
    let cast_from = Obj.magic
  end
module BigInt =
  struct
    type t = [ `BigInt ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type tags = [ `BigInt ]
    type 'tags this = 'tags intf constraint 'tags = [> `BigInt ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x7298 : Ojs.t) -> intf_of_js __tags_of_js x7298
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x7296 : __tags intf) -> intf_to_js __tags_to_js x7296
    let (toString : 'tags this -> ?radix:float -> unit -> string) =
      fun (x7303 : 'tags this) ->
        fun ?radix:(x7300 : float option) ->
          fun () ->
            Ojs.string_of_js
              (let x7305 = this_to_js Obj.magic x7303 in
               Ojs.call (Ojs.get_prop_ascii x7305 "toString") "apply"
                 [|x7305;((let x7301 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x7300 with
                            | Some x7302 ->
                                ignore
                                  (Ojs.call x7301 "push"
                                     [|(Ojs.float_to_js x7302)|])
                            | None -> ());
                           x7301))|])
    let (toLocaleString :
      'tags this ->
        ?locales:Intl.LocalesArgument.t ->
          ?options:BigIntToLocaleStringOptions.t -> unit -> string)
      =
      fun (x7311 : 'tags this) ->
        fun ?locales:(x7306 : Intl.LocalesArgument.t option) ->
          fun ?options:(x7307 : BigIntToLocaleStringOptions.t option) ->
            fun () ->
              Ojs.string_of_js
                (let x7313 = this_to_js Obj.magic x7311 in
                 Ojs.call (Ojs.get_prop_ascii x7313 "toLocaleString") "apply"
                   [|x7313;((let x7308 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x7306 with
                              | Some x7310 ->
                                  ignore
                                    (Ojs.call x7308 "push"
                                       [|(Intl.LocalesArgument.t_to_js x7310)|])
                              | None -> ());
                             (match x7307 with
                              | Some x7309 ->
                                  ignore
                                    (Ojs.call x7308 "push"
                                       [|(BigIntToLocaleStringOptions.t_to_js
                                            x7309)|])
                              | None -> ());
                             x7308))|])
    let (valueOf : 'tags this -> bigint) =
      fun (x7314 : 'tags this) ->
        bigint_of_js (Ojs.call (this_to_js Obj.magic x7314) "valueOf" [||])
    let (invoke :
      [ `U1 of bigint  | `U2 of bool  | `U3 of float  | `U4 of string ] ->
        bigint)
      =
      fun
        (x7316 :
          [ `U1 of bigint  | `U2 of bool  | `U3 of float  | `U4 of string ])
        ->
        bigint_of_js
          (Ojs.apply (Ojs.get_prop_ascii Ojs.global "BigInt")
             [|((match x7316 with
                 | `U1 x7317 -> bigint_to_js x7317
                 | `U2 x7318 -> Ojs.bool_to_js x7318
                 | `U3 x7319 -> Ojs.float_to_js x7319
                 | `U4 x7320 -> Ojs.string_to_js x7320))|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "BigInt")
             "prototype")
    let (asIntN : bits:float -> int:bigint -> bigint) =
      fun ~bits:(x7321 : float) ->
        fun ~int:(x7322 : bigint) ->
          bigint_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "BigInt") "asIntN"
               [|(Ojs.float_to_js x7321);(bigint_to_js x7322)|])
    let (asUintN : bits:float -> int:bigint -> bigint) =
      fun ~bits:(x7323 : float) ->
        fun ~int:(x7324 : bigint) ->
          bigint_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "BigInt") "asUintN"
               [|(Ojs.float_to_js x7323);(bigint_to_js x7324)|])
    let cast_from = Obj.magic
  end
module Uint32Array =
  struct
    type t = [ `Uint32Array ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type tags = [ `Uint32Array ]
    type 'tags this = 'tags intf constraint 'tags = [> `Uint32Array ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x7327 : Ojs.t) -> intf_of_js __tags_of_js x7327
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x7325 : __tags intf) -> intf_to_js __tags_to_js x7325
    let (findLast :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> bool) ->
          ?thisArg:any -> unit -> 'S option)
      =
      fun (x7336 : 'tags this) ->
        fun
          ~predicate:(x7329 : value:float -> index:float -> array:t -> bool)
          ->
          fun ?thisArg:(x7330 : any option) ->
            fun () ->
              Ojs.option_of_js Obj.magic
                (let x7338 = this_to_js Obj.magic x7336 in
                 Ojs.call (Ojs.get_prop_ascii x7338 "findLast") "apply"
                   [|x7338;((let x7331 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7331 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x7333 : Ojs.t) ->
                                          fun (x7334 : Ojs.t) ->
                                            fun (x7335 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x7329
                                                   ~value:(Ojs.float_of_js
                                                             x7333)
                                                   ~index:(Ojs.float_of_js
                                                             x7334)
                                                   ~array:(t_of_js x7335))))|]);
                             (match x7330 with
                              | Some x7332 ->
                                  ignore
                                    (Ojs.call x7331 "push"
                                       [|(any_to_js x7332)|])
                              | None -> ());
                             x7331))|])
    let (findLast' :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> float option)
      =
      fun (x7347 : 'tags this) ->
        fun
          ~predicate:(x7340 :
                       value:float -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x7341 : any option) ->
            fun () ->
              Ojs.option_of_js Ojs.float_of_js
                (let x7349 = this_to_js Obj.magic x7347 in
                 Ojs.call (Ojs.get_prop_ascii x7349 "findLast") "apply"
                   [|x7349;((let x7342 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7342 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x7344 : Ojs.t) ->
                                          fun (x7345 : Ojs.t) ->
                                            fun (x7346 : Ojs.t) ->
                                              unknown_to_js
                                                (x7340
                                                   ~value:(Ojs.float_of_js
                                                             x7344)
                                                   ~index:(Ojs.float_of_js
                                                             x7345)
                                                   ~array:(t_of_js x7346))))|]);
                             (match x7341 with
                              | Some x7343 ->
                                  ignore
                                    (Ojs.call x7342 "push"
                                       [|(any_to_js x7343)|])
                              | None -> ());
                             x7342))|])
    let (findLastIndex :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> float)
      =
      fun (x7358 : 'tags this) ->
        fun
          ~predicate:(x7351 :
                       value:float -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x7352 : any option) ->
            fun () ->
              Ojs.float_of_js
                (let x7360 = this_to_js Obj.magic x7358 in
                 Ojs.call (Ojs.get_prop_ascii x7360 "findLastIndex") "apply"
                   [|x7360;((let x7353 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7353 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x7355 : Ojs.t) ->
                                          fun (x7356 : Ojs.t) ->
                                            fun (x7357 : Ojs.t) ->
                                              unknown_to_js
                                                (x7351
                                                   ~value:(Ojs.float_of_js
                                                             x7355)
                                                   ~index:(Ojs.float_of_js
                                                             x7356)
                                                   ~array:(t_of_js x7357))))|]);
                             (match x7352 with
                              | Some x7354 ->
                                  ignore
                                    (Ojs.call x7353 "push"
                                       [|(any_to_js x7354)|])
                              | None -> ());
                             x7353))|])
    let (toReversed : 'tags this -> t) =
      fun (x7361 : 'tags this) ->
        t_of_js (Ojs.call (this_to_js Obj.magic x7361) "toReversed" [||])
    let (toSorted :
      'tags this -> ?compareFn:(a:float -> b:float -> float) -> unit -> t) =
      fun (x7368 : 'tags this) ->
        fun ?compareFn:(x7363 : (a:float -> b:float -> float) option) ->
          fun () ->
            t_of_js
              (let x7370 = this_to_js Obj.magic x7368 in
               Ojs.call (Ojs.get_prop_ascii x7370 "toSorted") "apply"
                 [|x7370;((let x7364 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x7363 with
                            | Some x7365 ->
                                ignore
                                  (Ojs.call x7364 "push"
                                     [|(Ojs.fun_to_js 2
                                          (fun (x7366 : Ojs.t) ->
                                             fun (x7367 : Ojs.t) ->
                                               Ojs.float_to_js
                                                 (x7365
                                                    ~a:(Ojs.float_of_js x7366)
                                                    ~b:(Ojs.float_of_js x7367))))|])
                            | None -> ());
                           x7364))|])
    let (with_ : 'tags this -> index:float -> value:float -> t) =
      fun (x7373 : 'tags this) ->
        fun ~index:(x7371 : float) ->
          fun ~value:(x7372 : float) ->
            t_of_js
              (Ojs.call (this_to_js Obj.magic x7373) "with"
                 [|(Ojs.float_to_js x7371);(Ojs.float_to_js x7372)|])
    let (at : 'tags this -> index:float -> float option) =
      fun (x7376 : 'tags this) ->
        fun ~index:(x7375 : float) ->
          Ojs.option_of_js Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x7376) "at"
               [|(Ojs.float_to_js x7375)|])
    let (includes :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> bool)
      =
      fun (x7383 : 'tags this) ->
        fun ~searchElement:(x7379 : float) ->
          fun ?fromIndex:(x7380 : float option) ->
            fun () ->
              Ojs.bool_of_js
                (let x7385 = this_to_js Obj.magic x7383 in
                 Ojs.call (Ojs.get_prop_ascii x7385 "includes") "apply"
                   [|x7385;((let x7381 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7381 "push"
                                  [|(Ojs.float_to_js x7379)|]);
                             (match x7380 with
                              | Some x7382 ->
                                  ignore
                                    (Ojs.call x7381 "push"
                                       [|(Ojs.float_to_js x7382)|])
                              | None -> ());
                             x7381))|])
    let (entries : 'tags this -> (float * float) IterableIterator.t) =
      fun (x7386 : 'tags this) ->
        IterableIterator.t_of_js
          (fun (x7388 : Ojs.t) ->
             let x7389 = x7388 in
             ((Ojs.float_of_js (Ojs.array_get x7389 0)),
               (Ojs.float_of_js (Ojs.array_get x7389 1))))
          (Ojs.call (this_to_js Obj.magic x7386) "entries" [||])
    let (keys : 'tags this -> float IterableIterator.t) =
      fun (x7390 : 'tags this) ->
        IterableIterator.t_of_js Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x7390) "keys" [||])
    let (values : 'tags this -> float IterableIterator.t) =
      fun (x7393 : 'tags this) ->
        IterableIterator.t_of_js Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x7393) "values" [||])
    let (get_BYTES_PER_ELEMENT : 'tags this -> float) =
      fun (x7396 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x7396)
             "BYTES_PER_ELEMENT")
    let (get_buffer : 'tags this -> ArrayBufferLike.t) =
      fun (x7398 : 'tags this) ->
        ArrayBufferLike.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x7398) "buffer")
    let (get_byteLength : 'tags this -> float) =
      fun (x7400 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x7400) "byteLength")
    let (get_byteOffset : 'tags this -> float) =
      fun (x7402 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x7402) "byteOffset")
    let (copyWithin :
      'tags this ->
        target:float -> start:float -> ?end_:float -> unit -> 'tags this)
      =
      fun (x7409 : 'tags this) ->
        fun ~target:(x7404 : float) ->
          fun ~start:(x7405 : float) ->
            fun ?end_:(x7406 : float option) ->
              fun () ->
                this_of_js Obj.magic
                  (let x7411 = this_to_js Obj.magic x7409 in
                   Ojs.call (Ojs.get_prop_ascii x7411 "copyWithin") "apply"
                     [|x7411;((let x7407 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x7407 "push"
                                    [|(Ojs.float_to_js x7404)|]);
                               ignore
                                 (Ojs.call x7407 "push"
                                    [|(Ojs.float_to_js x7405)|]);
                               (match x7406 with
                                | Some x7408 ->
                                    ignore
                                      (Ojs.call x7407 "push"
                                         [|(Ojs.float_to_js x7408)|])
                                | None -> ());
                               x7407))|])
    let (every :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x7420 : 'tags this) ->
        fun
          ~predicate:(x7413 :
                       value:float -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x7414 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x7422 = this_to_js Obj.magic x7420 in
                 Ojs.call (Ojs.get_prop_ascii x7422 "every") "apply"
                   [|x7422;((let x7415 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7415 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x7417 : Ojs.t) ->
                                          fun (x7418 : Ojs.t) ->
                                            fun (x7419 : Ojs.t) ->
                                              unknown_to_js
                                                (x7413
                                                   ~value:(Ojs.float_of_js
                                                             x7417)
                                                   ~index:(Ojs.float_of_js
                                                             x7418)
                                                   ~array:(t_of_js x7419))))|]);
                             (match x7414 with
                              | Some x7416 ->
                                  ignore
                                    (Ojs.call x7415 "push"
                                       [|(any_to_js x7416)|])
                              | None -> ());
                             x7415))|])
    let (fill :
      'tags this ->
        value:float -> ?start:float -> ?end_:float -> unit -> 'tags this)
      =
      fun (x7429 : 'tags this) ->
        fun ~value:(x7423 : float) ->
          fun ?start:(x7424 : float option) ->
            fun ?end_:(x7425 : float option) ->
              fun () ->
                this_of_js Obj.magic
                  (let x7431 = this_to_js Obj.magic x7429 in
                   Ojs.call (Ojs.get_prop_ascii x7431 "fill") "apply"
                     [|x7431;((let x7426 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x7426 "push"
                                    [|(Ojs.float_to_js x7423)|]);
                               (match x7424 with
                                | Some x7428 ->
                                    ignore
                                      (Ojs.call x7426 "push"
                                         [|(Ojs.float_to_js x7428)|])
                                | None -> ());
                               (match x7425 with
                                | Some x7427 ->
                                    ignore
                                      (Ojs.call x7426 "push"
                                         [|(Ojs.float_to_js x7427)|])
                                | None -> ());
                               x7426))|])
    let (filter :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> any) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x7440 : 'tags this) ->
        fun ~predicate:(x7433 : value:float -> index:float -> array:t -> any)
          ->
          fun ?thisArg:(x7434 : any option) ->
            fun () ->
              t_of_js
                (let x7442 = this_to_js Obj.magic x7440 in
                 Ojs.call (Ojs.get_prop_ascii x7442 "filter") "apply"
                   [|x7442;((let x7435 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7435 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x7437 : Ojs.t) ->
                                          fun (x7438 : Ojs.t) ->
                                            fun (x7439 : Ojs.t) ->
                                              any_to_js
                                                (x7433
                                                   ~value:(Ojs.float_of_js
                                                             x7437)
                                                   ~index:(Ojs.float_of_js
                                                             x7438)
                                                   ~array:(t_of_js x7439))))|]);
                             (match x7434 with
                              | Some x7436 ->
                                  ignore
                                    (Ojs.call x7435 "push"
                                       [|(any_to_js x7436)|])
                              | None -> ());
                             x7435))|])
    let (find :
      'tags this ->
        predicate:(value:float -> index:float -> obj:t -> bool) ->
          ?thisArg:any -> unit -> float option)
      =
      fun (x7450 : 'tags this) ->
        fun ~predicate:(x7443 : value:float -> index:float -> obj:t -> bool)
          ->
          fun ?thisArg:(x7444 : any option) ->
            fun () ->
              Ojs.option_of_js Ojs.float_of_js
                (let x7452 = this_to_js Obj.magic x7450 in
                 Ojs.call (Ojs.get_prop_ascii x7452 "find") "apply"
                   [|x7452;((let x7445 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7445 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x7447 : Ojs.t) ->
                                          fun (x7448 : Ojs.t) ->
                                            fun (x7449 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x7443
                                                   ~value:(Ojs.float_of_js
                                                             x7447)
                                                   ~index:(Ojs.float_of_js
                                                             x7448)
                                                   ~obj:(t_of_js x7449))))|]);
                             (match x7444 with
                              | Some x7446 ->
                                  ignore
                                    (Ojs.call x7445 "push"
                                       [|(any_to_js x7446)|])
                              | None -> ());
                             x7445))|])
    let (findIndex :
      'tags this ->
        predicate:(value:float -> index:float -> obj:t -> bool) ->
          ?thisArg:any -> unit -> float)
      =
      fun (x7461 : 'tags this) ->
        fun ~predicate:(x7454 : value:float -> index:float -> obj:t -> bool)
          ->
          fun ?thisArg:(x7455 : any option) ->
            fun () ->
              Ojs.float_of_js
                (let x7463 = this_to_js Obj.magic x7461 in
                 Ojs.call (Ojs.get_prop_ascii x7463 "findIndex") "apply"
                   [|x7463;((let x7456 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7456 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x7458 : Ojs.t) ->
                                          fun (x7459 : Ojs.t) ->
                                            fun (x7460 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x7454
                                                   ~value:(Ojs.float_of_js
                                                             x7458)
                                                   ~index:(Ojs.float_of_js
                                                             x7459)
                                                   ~obj:(t_of_js x7460))))|]);
                             (match x7455 with
                              | Some x7457 ->
                                  ignore
                                    (Ojs.call x7456 "push"
                                       [|(any_to_js x7457)|])
                              | None -> ());
                             x7456))|])
    let (forEach :
      'tags this ->
        callbackfn:(value:float -> index:float -> array:t -> unit) ->
          ?thisArg:any -> unit -> unit)
      =
      fun (x7471 : 'tags this) ->
        fun
          ~callbackfn:(x7464 : value:float -> index:float -> array:t -> unit)
          ->
          fun ?thisArg:(x7465 : any option) ->
            fun () ->
              ignore
                (let x7473 = this_to_js Obj.magic x7471 in
                 Ojs.call (Ojs.get_prop_ascii x7473 "forEach") "apply"
                   [|x7473;((let x7466 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7466 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x7468 : Ojs.t) ->
                                          fun (x7469 : Ojs.t) ->
                                            fun (x7470 : Ojs.t) ->
                                              x7464
                                                ~value:(Ojs.float_of_js x7468)
                                                ~index:(Ojs.float_of_js x7469)
                                                ~array:(t_of_js x7470)))|]);
                             (match x7465 with
                              | Some x7467 ->
                                  ignore
                                    (Ojs.call x7466 "push"
                                       [|(any_to_js x7467)|])
                              | None -> ());
                             x7466))|])
    let (indexOf :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> float)
      =
      fun (x7478 : 'tags this) ->
        fun ~searchElement:(x7474 : float) ->
          fun ?fromIndex:(x7475 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x7480 = this_to_js Obj.magic x7478 in
                 Ojs.call (Ojs.get_prop_ascii x7480 "indexOf") "apply"
                   [|x7480;((let x7476 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7476 "push"
                                  [|(Ojs.float_to_js x7474)|]);
                             (match x7475 with
                              | Some x7477 ->
                                  ignore
                                    (Ojs.call x7476 "push"
                                       [|(Ojs.float_to_js x7477)|])
                              | None -> ());
                             x7476))|])
    let (join : 'tags this -> ?separator:string -> unit -> string) =
      fun (x7484 : 'tags this) ->
        fun ?separator:(x7481 : string option) ->
          fun () ->
            Ojs.string_of_js
              (let x7486 = this_to_js Obj.magic x7484 in
               Ojs.call (Ojs.get_prop_ascii x7486 "join") "apply"
                 [|x7486;((let x7482 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x7481 with
                            | Some x7483 ->
                                ignore
                                  (Ojs.call x7482 "push"
                                     [|(Ojs.string_to_js x7483)|])
                            | None -> ());
                           x7482))|])
    let (lastIndexOf :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> float)
      =
      fun (x7491 : 'tags this) ->
        fun ~searchElement:(x7487 : float) ->
          fun ?fromIndex:(x7488 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x7493 = this_to_js Obj.magic x7491 in
                 Ojs.call (Ojs.get_prop_ascii x7493 "lastIndexOf") "apply"
                   [|x7493;((let x7489 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7489 "push"
                                  [|(Ojs.float_to_js x7487)|]);
                             (match x7488 with
                              | Some x7490 ->
                                  ignore
                                    (Ojs.call x7489 "push"
                                       [|(Ojs.float_to_js x7490)|])
                              | None -> ());
                             x7489))|])
    let (get_length : 'tags this -> float) =
      fun (x7494 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x7494) "length")
    let (map :
      'tags this ->
        callbackfn:(value:float -> index:float -> array:t -> float) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x7503 : 'tags this) ->
        fun
          ~callbackfn:(x7496 :
                        value:float -> index:float -> array:t -> float)
          ->
          fun ?thisArg:(x7497 : any option) ->
            fun () ->
              t_of_js
                (let x7505 = this_to_js Obj.magic x7503 in
                 Ojs.call (Ojs.get_prop_ascii x7505 "map") "apply"
                   [|x7505;((let x7498 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7498 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x7500 : Ojs.t) ->
                                          fun (x7501 : Ojs.t) ->
                                            fun (x7502 : Ojs.t) ->
                                              Ojs.float_to_js
                                                (x7496
                                                   ~value:(Ojs.float_of_js
                                                             x7500)
                                                   ~index:(Ojs.float_of_js
                                                             x7501)
                                                   ~array:(t_of_js x7502))))|]);
                             (match x7497 with
                              | Some x7499 ->
                                  ignore
                                    (Ojs.call x7498 "push"
                                       [|(any_to_js x7499)|])
                              | None -> ());
                             x7498))|])
    let (reduce :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> float)
      =
      fun (x7511 : 'tags this) ->
        fun
          ~callbackfn:(x7506 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x7511) "reduce"
               [|(Ojs.fun_to_js 4
                    (fun (x7507 : Ojs.t) ->
                       fun (x7508 : Ojs.t) ->
                         fun (x7509 : Ojs.t) ->
                           fun (x7510 : Ojs.t) ->
                             Ojs.float_to_js
                               (x7506 ~previousValue:(Ojs.float_of_js x7507)
                                  ~currentValue:(Ojs.float_of_js x7508)
                                  ~currentIndex:(Ojs.float_of_js x7509)
                                  ~array:(t_of_js x7510))))|])
    let (reduce' :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> initialValue:float -> float)
      =
      fun (x7519 : 'tags this) ->
        fun
          ~callbackfn:(x7513 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          fun ~initialValue:(x7518 : float) ->
            Ojs.float_of_js
              (Ojs.call (this_to_js Obj.magic x7519) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x7514 : Ojs.t) ->
                         fun (x7515 : Ojs.t) ->
                           fun (x7516 : Ojs.t) ->
                             fun (x7517 : Ojs.t) ->
                               Ojs.float_to_js
                                 (x7513
                                    ~previousValue:(Ojs.float_of_js x7514)
                                    ~currentValue:(Ojs.float_of_js x7515)
                                    ~currentIndex:(Ojs.float_of_js x7516)
                                    ~array:(t_of_js x7517))));(Ojs.float_to_js
                                                                 x7518)|])
    let (reduce'' :
      'tags this ->
        callbackfn:(previousValue:'U ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x7527 : 'tags this) ->
        fun
          ~callbackfn:(x7521 :
                        previousValue:'U ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x7526 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic x7527) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x7522 : Ojs.t) ->
                         fun (x7523 : Ojs.t) ->
                           fun (x7524 : Ojs.t) ->
                             fun (x7525 : Ojs.t) ->
                               Obj.magic
                                 (x7521 ~previousValue:(Obj.magic x7522)
                                    ~currentValue:(Ojs.float_of_js x7523)
                                    ~currentIndex:(Ojs.float_of_js x7524)
                                    ~array:(t_of_js x7525))));(Obj.magic
                                                                 x7526)|])
    let (reduceRight :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> float)
      =
      fun (x7534 : 'tags this) ->
        fun
          ~callbackfn:(x7529 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x7534) "reduceRight"
               [|(Ojs.fun_to_js 4
                    (fun (x7530 : Ojs.t) ->
                       fun (x7531 : Ojs.t) ->
                         fun (x7532 : Ojs.t) ->
                           fun (x7533 : Ojs.t) ->
                             Ojs.float_to_js
                               (x7529 ~previousValue:(Ojs.float_of_js x7530)
                                  ~currentValue:(Ojs.float_of_js x7531)
                                  ~currentIndex:(Ojs.float_of_js x7532)
                                  ~array:(t_of_js x7533))))|])
    let (reduceRight' :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> initialValue:float -> float)
      =
      fun (x7542 : 'tags this) ->
        fun
          ~callbackfn:(x7536 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          fun ~initialValue:(x7541 : float) ->
            Ojs.float_of_js
              (Ojs.call (this_to_js Obj.magic x7542) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x7537 : Ojs.t) ->
                         fun (x7538 : Ojs.t) ->
                           fun (x7539 : Ojs.t) ->
                             fun (x7540 : Ojs.t) ->
                               Ojs.float_to_js
                                 (x7536
                                    ~previousValue:(Ojs.float_of_js x7537)
                                    ~currentValue:(Ojs.float_of_js x7538)
                                    ~currentIndex:(Ojs.float_of_js x7539)
                                    ~array:(t_of_js x7540))));(Ojs.float_to_js
                                                                 x7541)|])
    let (reduceRight'' :
      'tags this ->
        callbackfn:(previousValue:'U ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x7550 : 'tags this) ->
        fun
          ~callbackfn:(x7544 :
                        previousValue:'U ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x7549 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic x7550) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x7545 : Ojs.t) ->
                         fun (x7546 : Ojs.t) ->
                           fun (x7547 : Ojs.t) ->
                             fun (x7548 : Ojs.t) ->
                               Obj.magic
                                 (x7544 ~previousValue:(Obj.magic x7545)
                                    ~currentValue:(Ojs.float_of_js x7546)
                                    ~currentIndex:(Ojs.float_of_js x7547)
                                    ~array:(t_of_js x7548))));(Obj.magic
                                                                 x7549)|])
    let (reverse : 'tags this -> t) =
      fun (x7552 : 'tags this) ->
        t_of_js (Ojs.call (this_to_js Obj.magic x7552) "reverse" [||])
    let (set_ :
      'tags this -> array:float ArrayLike.t -> ?offset:float -> unit -> unit)
      =
      fun (x7559 : 'tags this) ->
        fun ~array:(x7554 : float ArrayLike.t) ->
          fun ?offset:(x7555 : float option) ->
            fun () ->
              ignore
                (let x7561 = this_to_js Obj.magic x7559 in
                 Ojs.call (Ojs.get_prop_ascii x7561 "set") "apply"
                   [|x7561;((let x7556 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7556 "push"
                                  [|(ArrayLike.t_to_js Ojs.float_to_js x7554)|]);
                             (match x7555 with
                              | Some x7557 ->
                                  ignore
                                    (Ojs.call x7556 "push"
                                       [|(Ojs.float_to_js x7557)|])
                              | None -> ());
                             x7556))|])
    let (slice : 'tags this -> ?start:float -> ?end_:float -> unit -> t) =
      fun (x7567 : 'tags this) ->
        fun ?start:(x7562 : float option) ->
          fun ?end_:(x7563 : float option) ->
            fun () ->
              t_of_js
                (let x7569 = this_to_js Obj.magic x7567 in
                 Ojs.call (Ojs.get_prop_ascii x7569 "slice") "apply"
                   [|x7569;((let x7564 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x7562 with
                              | Some x7566 ->
                                  ignore
                                    (Ojs.call x7564 "push"
                                       [|(Ojs.float_to_js x7566)|])
                              | None -> ());
                             (match x7563 with
                              | Some x7565 ->
                                  ignore
                                    (Ojs.call x7564 "push"
                                       [|(Ojs.float_to_js x7565)|])
                              | None -> ());
                             x7564))|])
    let (some :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x7577 : 'tags this) ->
        fun
          ~predicate:(x7570 :
                       value:float -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x7571 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x7579 = this_to_js Obj.magic x7577 in
                 Ojs.call (Ojs.get_prop_ascii x7579 "some") "apply"
                   [|x7579;((let x7572 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7572 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x7574 : Ojs.t) ->
                                          fun (x7575 : Ojs.t) ->
                                            fun (x7576 : Ojs.t) ->
                                              unknown_to_js
                                                (x7570
                                                   ~value:(Ojs.float_of_js
                                                             x7574)
                                                   ~index:(Ojs.float_of_js
                                                             x7575)
                                                   ~array:(t_of_js x7576))))|]);
                             (match x7571 with
                              | Some x7573 ->
                                  ignore
                                    (Ojs.call x7572 "push"
                                       [|(any_to_js x7573)|])
                              | None -> ());
                             x7572))|])
    let (sort :
      'tags this ->
        ?compareFn:(a:float -> b:float -> float) -> unit -> 'tags this)
      =
      fun (x7585 : 'tags this) ->
        fun ?compareFn:(x7580 : (a:float -> b:float -> float) option) ->
          fun () ->
            this_of_js Obj.magic
              (let x7587 = this_to_js Obj.magic x7585 in
               Ojs.call (Ojs.get_prop_ascii x7587 "sort") "apply"
                 [|x7587;((let x7581 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x7580 with
                            | Some x7582 ->
                                ignore
                                  (Ojs.call x7581 "push"
                                     [|(Ojs.fun_to_js 2
                                          (fun (x7583 : Ojs.t) ->
                                             fun (x7584 : Ojs.t) ->
                                               Ojs.float_to_js
                                                 (x7582
                                                    ~a:(Ojs.float_of_js x7583)
                                                    ~b:(Ojs.float_of_js x7584))))|])
                            | None -> ());
                           x7581))|])
    let (subarray : 'tags this -> ?begin_:float -> ?end_:float -> unit -> t)
      =
      fun (x7594 : 'tags this) ->
        fun ?begin_:(x7589 : float option) ->
          fun ?end_:(x7590 : float option) ->
            fun () ->
              t_of_js
                (let x7596 = this_to_js Obj.magic x7594 in
                 Ojs.call (Ojs.get_prop_ascii x7596 "subarray") "apply"
                   [|x7596;((let x7591 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x7589 with
                              | Some x7593 ->
                                  ignore
                                    (Ojs.call x7591 "push"
                                       [|(Ojs.float_to_js x7593)|])
                              | None -> ());
                             (match x7590 with
                              | Some x7592 ->
                                  ignore
                                    (Ojs.call x7591 "push"
                                       [|(Ojs.float_to_js x7592)|])
                              | None -> ());
                             x7591))|])
    let (toLocaleString : 'tags this -> string) =
      fun (x7597 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x7597) "toLocaleString" [||])
    let (toString : 'tags this -> string) =
      fun (x7599 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x7599) "toString" [||])
    let (valueOf : 'tags this -> t) =
      fun (x7601 : 'tags this) ->
        t_of_js (Ojs.call (this_to_js Obj.magic x7601) "valueOf" [||])
    let (get : 'tags this -> float -> float) =
      fun (x7603 : 'tags this) ->
        fun (x7605 : float) ->
          Ojs.float_of_js
            (Ojs.get_prop (this_to_js Obj.magic x7603)
               (Ojs.float_to_js x7605))
    let (set : 'tags this -> float -> float -> unit) =
      fun (x7606 : 'tags this) ->
        fun (x7608 : float) ->
          fun (x7609 : float) ->
            Ojs.set_prop (this_to_js Obj.magic x7606) (Ojs.float_to_js x7608)
              (Ojs.float_to_js x7609)
    let (create : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Uint32Array") [||])
    let (create' : float Iterable.t -> t) =
      fun (x7610 : float Iterable.t) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Uint32Array")
             [|(Iterable.t_to_js Ojs.float_to_js x7610)|])
    let (from :
      arrayLike:float Iterable.t ->
        ?mapfn:(v:float -> k:float -> float) -> ?thisArg:any -> unit -> t)
      =
      fun ~arrayLike:(x7612 : float Iterable.t) ->
        fun ?mapfn:(x7613 : (v:float -> k:float -> float) option) ->
          fun ?thisArg:(x7614 : any option) ->
            fun () ->
              t_of_js
                (let x7621 = Ojs.get_prop_ascii Ojs.global "Uint32Array" in
                 Ojs.call (Ojs.get_prop_ascii x7621 "from") "apply"
                   [|x7621;((let x7615 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7615 "push"
                                  [|(Iterable.t_to_js Ojs.float_to_js x7612)|]);
                             (match x7613 with
                              | Some x7617 ->
                                  ignore
                                    (Ojs.call x7615 "push"
                                       [|(Ojs.fun_to_js 2
                                            (fun (x7618 : Ojs.t) ->
                                               fun (x7619 : Ojs.t) ->
                                                 Ojs.float_to_js
                                                   (x7617
                                                      ~v:(Ojs.float_of_js
                                                            x7618)
                                                      ~k:(Ojs.float_of_js
                                                            x7619))))|])
                              | None -> ());
                             (match x7614 with
                              | Some x7616 ->
                                  ignore
                                    (Ojs.call x7615 "push"
                                       [|(any_to_js x7616)|])
                              | None -> ());
                             x7615))|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Uint32Array")
             "prototype")
    let (create'' : float -> t) =
      fun (x7622 : float) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Uint32Array")
             [|(Ojs.float_to_js x7622)|])
    let (create''' :
      [ `U1 of float ArrayLike.t  | `U2 of ArrayBufferLike.t ] -> t) =
      fun (x7623 : [ `U1 of float ArrayLike.t  | `U2 of ArrayBufferLike.t ])
        ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Uint32Array")
             [|((match x7623 with
                 | `U1 x7624 -> ArrayLike.t_to_js Ojs.float_to_js x7624
                 | `U2 x7626 -> ArrayBufferLike.t_to_js x7626))|])
    let (create'''' :
      buffer:ArrayBufferLike.t ->
        ?byteOffset:float -> ?length:float -> unit -> t)
      =
      fun ~buffer:(x7627 : ArrayBufferLike.t) ->
        fun ?byteOffset:(x7628 : float option) ->
          fun ?length:(x7629 : float option) ->
            fun () ->
              t_of_js
                (Ojs.new_obj_arr
                   (Ojs.get_prop_ascii Ojs.global "Uint32Array")
                   (let x7630 =
                      Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                        [||] in
                    ignore
                      (Ojs.call x7630 "push"
                         [|(ArrayBufferLike.t_to_js x7627)|]);
                    (match x7628 with
                     | Some x7632 ->
                         ignore
                           (Ojs.call x7630 "push" [|(Ojs.float_to_js x7632)|])
                     | None -> ());
                    (match x7629 with
                     | Some x7631 ->
                         ignore
                           (Ojs.call x7630 "push" [|(Ojs.float_to_js x7631)|])
                     | None -> ());
                    x7630))
    let (bytes_per_element : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Uint32Array")
             "BYTES_PER_ELEMENT")
    let (of_ : float list -> t) =
      fun (x7633 : float list) ->
        t_of_js
          (let x7636 = Ojs.get_prop_ascii Ojs.global "Uint32Array" in
           Ojs.call (Ojs.get_prop_ascii x7636 "of") "apply"
             [|x7636;((let x7634 =
                         Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                           [||] in
                       List.iter
                         (fun (x7635 : float) ->
                            ignore
                              (Ojs.call x7634 "push"
                                 [|(Ojs.float_to_js x7635)|])) x7633;
                       x7634))|])
    let (from' : float ArrayLike.t -> t) =
      fun (x7637 : float ArrayLike.t) ->
        t_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Uint32Array") "from"
             [|(ArrayLike.t_to_js Ojs.float_to_js x7637)|])
    let (from'' :
      arrayLike:'T ArrayLike.t ->
        mapfn:(v:'T -> k:float -> float) -> ?thisArg:any -> unit -> t)
      =
      fun ~arrayLike:(x7639 : 'T ArrayLike.t) ->
        fun ~mapfn:(x7640 : v:'T -> k:float -> float) ->
          fun ?thisArg:(x7641 : any option) ->
            fun () ->
              t_of_js
                (let x7647 = Ojs.get_prop_ascii Ojs.global "Uint32Array" in
                 Ojs.call (Ojs.get_prop_ascii x7647 "from") "apply"
                   [|x7647;((let x7642 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7642 "push"
                                  [|(ArrayLike.t_to_js Obj.magic x7639)|]);
                             ignore
                               (Ojs.call x7642 "push"
                                  [|(Ojs.fun_to_js 2
                                       (fun (x7644 : Ojs.t) ->
                                          fun (x7645 : Ojs.t) ->
                                            Ojs.float_to_js
                                              (x7640 ~v:(Obj.magic x7644)
                                                 ~k:(Ojs.float_of_js x7645))))|]);
                             (match x7641 with
                              | Some x7643 ->
                                  ignore
                                    (Ojs.call x7642 "push"
                                       [|(any_to_js x7643)|])
                              | None -> ());
                             x7642))|])
    let cast_from = Obj.magic
  end
module Uint16Array =
  struct
    type t = [ `Uint16Array ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type tags = [ `Uint16Array ]
    type 'tags this = 'tags intf constraint 'tags = [> `Uint16Array ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x7650 : Ojs.t) -> intf_of_js __tags_of_js x7650
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x7648 : __tags intf) -> intf_to_js __tags_to_js x7648
    let (findLast :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> bool) ->
          ?thisArg:any -> unit -> 'S option)
      =
      fun (x7659 : 'tags this) ->
        fun
          ~predicate:(x7652 : value:float -> index:float -> array:t -> bool)
          ->
          fun ?thisArg:(x7653 : any option) ->
            fun () ->
              Ojs.option_of_js Obj.magic
                (let x7661 = this_to_js Obj.magic x7659 in
                 Ojs.call (Ojs.get_prop_ascii x7661 "findLast") "apply"
                   [|x7661;((let x7654 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7654 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x7656 : Ojs.t) ->
                                          fun (x7657 : Ojs.t) ->
                                            fun (x7658 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x7652
                                                   ~value:(Ojs.float_of_js
                                                             x7656)
                                                   ~index:(Ojs.float_of_js
                                                             x7657)
                                                   ~array:(t_of_js x7658))))|]);
                             (match x7653 with
                              | Some x7655 ->
                                  ignore
                                    (Ojs.call x7654 "push"
                                       [|(any_to_js x7655)|])
                              | None -> ());
                             x7654))|])
    let (findLast' :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> float option)
      =
      fun (x7670 : 'tags this) ->
        fun
          ~predicate:(x7663 :
                       value:float -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x7664 : any option) ->
            fun () ->
              Ojs.option_of_js Ojs.float_of_js
                (let x7672 = this_to_js Obj.magic x7670 in
                 Ojs.call (Ojs.get_prop_ascii x7672 "findLast") "apply"
                   [|x7672;((let x7665 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7665 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x7667 : Ojs.t) ->
                                          fun (x7668 : Ojs.t) ->
                                            fun (x7669 : Ojs.t) ->
                                              unknown_to_js
                                                (x7663
                                                   ~value:(Ojs.float_of_js
                                                             x7667)
                                                   ~index:(Ojs.float_of_js
                                                             x7668)
                                                   ~array:(t_of_js x7669))))|]);
                             (match x7664 with
                              | Some x7666 ->
                                  ignore
                                    (Ojs.call x7665 "push"
                                       [|(any_to_js x7666)|])
                              | None -> ());
                             x7665))|])
    let (findLastIndex :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> float)
      =
      fun (x7681 : 'tags this) ->
        fun
          ~predicate:(x7674 :
                       value:float -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x7675 : any option) ->
            fun () ->
              Ojs.float_of_js
                (let x7683 = this_to_js Obj.magic x7681 in
                 Ojs.call (Ojs.get_prop_ascii x7683 "findLastIndex") "apply"
                   [|x7683;((let x7676 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7676 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x7678 : Ojs.t) ->
                                          fun (x7679 : Ojs.t) ->
                                            fun (x7680 : Ojs.t) ->
                                              unknown_to_js
                                                (x7674
                                                   ~value:(Ojs.float_of_js
                                                             x7678)
                                                   ~index:(Ojs.float_of_js
                                                             x7679)
                                                   ~array:(t_of_js x7680))))|]);
                             (match x7675 with
                              | Some x7677 ->
                                  ignore
                                    (Ojs.call x7676 "push"
                                       [|(any_to_js x7677)|])
                              | None -> ());
                             x7676))|])
    let (toReversed : 'tags this -> t) =
      fun (x7684 : 'tags this) ->
        t_of_js (Ojs.call (this_to_js Obj.magic x7684) "toReversed" [||])
    let (toSorted :
      'tags this -> ?compareFn:(a:float -> b:float -> float) -> unit -> t) =
      fun (x7691 : 'tags this) ->
        fun ?compareFn:(x7686 : (a:float -> b:float -> float) option) ->
          fun () ->
            t_of_js
              (let x7693 = this_to_js Obj.magic x7691 in
               Ojs.call (Ojs.get_prop_ascii x7693 "toSorted") "apply"
                 [|x7693;((let x7687 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x7686 with
                            | Some x7688 ->
                                ignore
                                  (Ojs.call x7687 "push"
                                     [|(Ojs.fun_to_js 2
                                          (fun (x7689 : Ojs.t) ->
                                             fun (x7690 : Ojs.t) ->
                                               Ojs.float_to_js
                                                 (x7688
                                                    ~a:(Ojs.float_of_js x7689)
                                                    ~b:(Ojs.float_of_js x7690))))|])
                            | None -> ());
                           x7687))|])
    let (with_ : 'tags this -> index:float -> value:float -> t) =
      fun (x7696 : 'tags this) ->
        fun ~index:(x7694 : float) ->
          fun ~value:(x7695 : float) ->
            t_of_js
              (Ojs.call (this_to_js Obj.magic x7696) "with"
                 [|(Ojs.float_to_js x7694);(Ojs.float_to_js x7695)|])
    let (at : 'tags this -> index:float -> float option) =
      fun (x7699 : 'tags this) ->
        fun ~index:(x7698 : float) ->
          Ojs.option_of_js Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x7699) "at"
               [|(Ojs.float_to_js x7698)|])
    let (includes :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> bool)
      =
      fun (x7706 : 'tags this) ->
        fun ~searchElement:(x7702 : float) ->
          fun ?fromIndex:(x7703 : float option) ->
            fun () ->
              Ojs.bool_of_js
                (let x7708 = this_to_js Obj.magic x7706 in
                 Ojs.call (Ojs.get_prop_ascii x7708 "includes") "apply"
                   [|x7708;((let x7704 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7704 "push"
                                  [|(Ojs.float_to_js x7702)|]);
                             (match x7703 with
                              | Some x7705 ->
                                  ignore
                                    (Ojs.call x7704 "push"
                                       [|(Ojs.float_to_js x7705)|])
                              | None -> ());
                             x7704))|])
    let (entries : 'tags this -> (float * float) IterableIterator.t) =
      fun (x7709 : 'tags this) ->
        IterableIterator.t_of_js
          (fun (x7711 : Ojs.t) ->
             let x7712 = x7711 in
             ((Ojs.float_of_js (Ojs.array_get x7712 0)),
               (Ojs.float_of_js (Ojs.array_get x7712 1))))
          (Ojs.call (this_to_js Obj.magic x7709) "entries" [||])
    let (keys : 'tags this -> float IterableIterator.t) =
      fun (x7713 : 'tags this) ->
        IterableIterator.t_of_js Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x7713) "keys" [||])
    let (values : 'tags this -> float IterableIterator.t) =
      fun (x7716 : 'tags this) ->
        IterableIterator.t_of_js Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x7716) "values" [||])
    let (get_BYTES_PER_ELEMENT : 'tags this -> float) =
      fun (x7719 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x7719)
             "BYTES_PER_ELEMENT")
    let (get_buffer : 'tags this -> ArrayBufferLike.t) =
      fun (x7721 : 'tags this) ->
        ArrayBufferLike.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x7721) "buffer")
    let (get_byteLength : 'tags this -> float) =
      fun (x7723 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x7723) "byteLength")
    let (get_byteOffset : 'tags this -> float) =
      fun (x7725 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x7725) "byteOffset")
    let (copyWithin :
      'tags this ->
        target:float -> start:float -> ?end_:float -> unit -> 'tags this)
      =
      fun (x7732 : 'tags this) ->
        fun ~target:(x7727 : float) ->
          fun ~start:(x7728 : float) ->
            fun ?end_:(x7729 : float option) ->
              fun () ->
                this_of_js Obj.magic
                  (let x7734 = this_to_js Obj.magic x7732 in
                   Ojs.call (Ojs.get_prop_ascii x7734 "copyWithin") "apply"
                     [|x7734;((let x7730 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x7730 "push"
                                    [|(Ojs.float_to_js x7727)|]);
                               ignore
                                 (Ojs.call x7730 "push"
                                    [|(Ojs.float_to_js x7728)|]);
                               (match x7729 with
                                | Some x7731 ->
                                    ignore
                                      (Ojs.call x7730 "push"
                                         [|(Ojs.float_to_js x7731)|])
                                | None -> ());
                               x7730))|])
    let (every :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x7743 : 'tags this) ->
        fun
          ~predicate:(x7736 :
                       value:float -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x7737 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x7745 = this_to_js Obj.magic x7743 in
                 Ojs.call (Ojs.get_prop_ascii x7745 "every") "apply"
                   [|x7745;((let x7738 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7738 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x7740 : Ojs.t) ->
                                          fun (x7741 : Ojs.t) ->
                                            fun (x7742 : Ojs.t) ->
                                              unknown_to_js
                                                (x7736
                                                   ~value:(Ojs.float_of_js
                                                             x7740)
                                                   ~index:(Ojs.float_of_js
                                                             x7741)
                                                   ~array:(t_of_js x7742))))|]);
                             (match x7737 with
                              | Some x7739 ->
                                  ignore
                                    (Ojs.call x7738 "push"
                                       [|(any_to_js x7739)|])
                              | None -> ());
                             x7738))|])
    let (fill :
      'tags this ->
        value:float -> ?start:float -> ?end_:float -> unit -> 'tags this)
      =
      fun (x7752 : 'tags this) ->
        fun ~value:(x7746 : float) ->
          fun ?start:(x7747 : float option) ->
            fun ?end_:(x7748 : float option) ->
              fun () ->
                this_of_js Obj.magic
                  (let x7754 = this_to_js Obj.magic x7752 in
                   Ojs.call (Ojs.get_prop_ascii x7754 "fill") "apply"
                     [|x7754;((let x7749 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x7749 "push"
                                    [|(Ojs.float_to_js x7746)|]);
                               (match x7747 with
                                | Some x7751 ->
                                    ignore
                                      (Ojs.call x7749 "push"
                                         [|(Ojs.float_to_js x7751)|])
                                | None -> ());
                               (match x7748 with
                                | Some x7750 ->
                                    ignore
                                      (Ojs.call x7749 "push"
                                         [|(Ojs.float_to_js x7750)|])
                                | None -> ());
                               x7749))|])
    let (filter :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> any) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x7763 : 'tags this) ->
        fun ~predicate:(x7756 : value:float -> index:float -> array:t -> any)
          ->
          fun ?thisArg:(x7757 : any option) ->
            fun () ->
              t_of_js
                (let x7765 = this_to_js Obj.magic x7763 in
                 Ojs.call (Ojs.get_prop_ascii x7765 "filter") "apply"
                   [|x7765;((let x7758 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7758 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x7760 : Ojs.t) ->
                                          fun (x7761 : Ojs.t) ->
                                            fun (x7762 : Ojs.t) ->
                                              any_to_js
                                                (x7756
                                                   ~value:(Ojs.float_of_js
                                                             x7760)
                                                   ~index:(Ojs.float_of_js
                                                             x7761)
                                                   ~array:(t_of_js x7762))))|]);
                             (match x7757 with
                              | Some x7759 ->
                                  ignore
                                    (Ojs.call x7758 "push"
                                       [|(any_to_js x7759)|])
                              | None -> ());
                             x7758))|])
    let (find :
      'tags this ->
        predicate:(value:float -> index:float -> obj:t -> bool) ->
          ?thisArg:any -> unit -> float option)
      =
      fun (x7773 : 'tags this) ->
        fun ~predicate:(x7766 : value:float -> index:float -> obj:t -> bool)
          ->
          fun ?thisArg:(x7767 : any option) ->
            fun () ->
              Ojs.option_of_js Ojs.float_of_js
                (let x7775 = this_to_js Obj.magic x7773 in
                 Ojs.call (Ojs.get_prop_ascii x7775 "find") "apply"
                   [|x7775;((let x7768 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7768 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x7770 : Ojs.t) ->
                                          fun (x7771 : Ojs.t) ->
                                            fun (x7772 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x7766
                                                   ~value:(Ojs.float_of_js
                                                             x7770)
                                                   ~index:(Ojs.float_of_js
                                                             x7771)
                                                   ~obj:(t_of_js x7772))))|]);
                             (match x7767 with
                              | Some x7769 ->
                                  ignore
                                    (Ojs.call x7768 "push"
                                       [|(any_to_js x7769)|])
                              | None -> ());
                             x7768))|])
    let (findIndex :
      'tags this ->
        predicate:(value:float -> index:float -> obj:t -> bool) ->
          ?thisArg:any -> unit -> float)
      =
      fun (x7784 : 'tags this) ->
        fun ~predicate:(x7777 : value:float -> index:float -> obj:t -> bool)
          ->
          fun ?thisArg:(x7778 : any option) ->
            fun () ->
              Ojs.float_of_js
                (let x7786 = this_to_js Obj.magic x7784 in
                 Ojs.call (Ojs.get_prop_ascii x7786 "findIndex") "apply"
                   [|x7786;((let x7779 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7779 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x7781 : Ojs.t) ->
                                          fun (x7782 : Ojs.t) ->
                                            fun (x7783 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x7777
                                                   ~value:(Ojs.float_of_js
                                                             x7781)
                                                   ~index:(Ojs.float_of_js
                                                             x7782)
                                                   ~obj:(t_of_js x7783))))|]);
                             (match x7778 with
                              | Some x7780 ->
                                  ignore
                                    (Ojs.call x7779 "push"
                                       [|(any_to_js x7780)|])
                              | None -> ());
                             x7779))|])
    let (forEach :
      'tags this ->
        callbackfn:(value:float -> index:float -> array:t -> unit) ->
          ?thisArg:any -> unit -> unit)
      =
      fun (x7794 : 'tags this) ->
        fun
          ~callbackfn:(x7787 : value:float -> index:float -> array:t -> unit)
          ->
          fun ?thisArg:(x7788 : any option) ->
            fun () ->
              ignore
                (let x7796 = this_to_js Obj.magic x7794 in
                 Ojs.call (Ojs.get_prop_ascii x7796 "forEach") "apply"
                   [|x7796;((let x7789 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7789 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x7791 : Ojs.t) ->
                                          fun (x7792 : Ojs.t) ->
                                            fun (x7793 : Ojs.t) ->
                                              x7787
                                                ~value:(Ojs.float_of_js x7791)
                                                ~index:(Ojs.float_of_js x7792)
                                                ~array:(t_of_js x7793)))|]);
                             (match x7788 with
                              | Some x7790 ->
                                  ignore
                                    (Ojs.call x7789 "push"
                                       [|(any_to_js x7790)|])
                              | None -> ());
                             x7789))|])
    let (indexOf :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> float)
      =
      fun (x7801 : 'tags this) ->
        fun ~searchElement:(x7797 : float) ->
          fun ?fromIndex:(x7798 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x7803 = this_to_js Obj.magic x7801 in
                 Ojs.call (Ojs.get_prop_ascii x7803 "indexOf") "apply"
                   [|x7803;((let x7799 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7799 "push"
                                  [|(Ojs.float_to_js x7797)|]);
                             (match x7798 with
                              | Some x7800 ->
                                  ignore
                                    (Ojs.call x7799 "push"
                                       [|(Ojs.float_to_js x7800)|])
                              | None -> ());
                             x7799))|])
    let (join : 'tags this -> ?separator:string -> unit -> string) =
      fun (x7807 : 'tags this) ->
        fun ?separator:(x7804 : string option) ->
          fun () ->
            Ojs.string_of_js
              (let x7809 = this_to_js Obj.magic x7807 in
               Ojs.call (Ojs.get_prop_ascii x7809 "join") "apply"
                 [|x7809;((let x7805 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x7804 with
                            | Some x7806 ->
                                ignore
                                  (Ojs.call x7805 "push"
                                     [|(Ojs.string_to_js x7806)|])
                            | None -> ());
                           x7805))|])
    let (lastIndexOf :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> float)
      =
      fun (x7814 : 'tags this) ->
        fun ~searchElement:(x7810 : float) ->
          fun ?fromIndex:(x7811 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x7816 = this_to_js Obj.magic x7814 in
                 Ojs.call (Ojs.get_prop_ascii x7816 "lastIndexOf") "apply"
                   [|x7816;((let x7812 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7812 "push"
                                  [|(Ojs.float_to_js x7810)|]);
                             (match x7811 with
                              | Some x7813 ->
                                  ignore
                                    (Ojs.call x7812 "push"
                                       [|(Ojs.float_to_js x7813)|])
                              | None -> ());
                             x7812))|])
    let (get_length : 'tags this -> float) =
      fun (x7817 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x7817) "length")
    let (map :
      'tags this ->
        callbackfn:(value:float -> index:float -> array:t -> float) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x7826 : 'tags this) ->
        fun
          ~callbackfn:(x7819 :
                        value:float -> index:float -> array:t -> float)
          ->
          fun ?thisArg:(x7820 : any option) ->
            fun () ->
              t_of_js
                (let x7828 = this_to_js Obj.magic x7826 in
                 Ojs.call (Ojs.get_prop_ascii x7828 "map") "apply"
                   [|x7828;((let x7821 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7821 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x7823 : Ojs.t) ->
                                          fun (x7824 : Ojs.t) ->
                                            fun (x7825 : Ojs.t) ->
                                              Ojs.float_to_js
                                                (x7819
                                                   ~value:(Ojs.float_of_js
                                                             x7823)
                                                   ~index:(Ojs.float_of_js
                                                             x7824)
                                                   ~array:(t_of_js x7825))))|]);
                             (match x7820 with
                              | Some x7822 ->
                                  ignore
                                    (Ojs.call x7821 "push"
                                       [|(any_to_js x7822)|])
                              | None -> ());
                             x7821))|])
    let (reduce :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> float)
      =
      fun (x7834 : 'tags this) ->
        fun
          ~callbackfn:(x7829 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x7834) "reduce"
               [|(Ojs.fun_to_js 4
                    (fun (x7830 : Ojs.t) ->
                       fun (x7831 : Ojs.t) ->
                         fun (x7832 : Ojs.t) ->
                           fun (x7833 : Ojs.t) ->
                             Ojs.float_to_js
                               (x7829 ~previousValue:(Ojs.float_of_js x7830)
                                  ~currentValue:(Ojs.float_of_js x7831)
                                  ~currentIndex:(Ojs.float_of_js x7832)
                                  ~array:(t_of_js x7833))))|])
    let (reduce' :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> initialValue:float -> float)
      =
      fun (x7842 : 'tags this) ->
        fun
          ~callbackfn:(x7836 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          fun ~initialValue:(x7841 : float) ->
            Ojs.float_of_js
              (Ojs.call (this_to_js Obj.magic x7842) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x7837 : Ojs.t) ->
                         fun (x7838 : Ojs.t) ->
                           fun (x7839 : Ojs.t) ->
                             fun (x7840 : Ojs.t) ->
                               Ojs.float_to_js
                                 (x7836
                                    ~previousValue:(Ojs.float_of_js x7837)
                                    ~currentValue:(Ojs.float_of_js x7838)
                                    ~currentIndex:(Ojs.float_of_js x7839)
                                    ~array:(t_of_js x7840))));(Ojs.float_to_js
                                                                 x7841)|])
    let (reduce'' :
      'tags this ->
        callbackfn:(previousValue:'U ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x7850 : 'tags this) ->
        fun
          ~callbackfn:(x7844 :
                        previousValue:'U ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x7849 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic x7850) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x7845 : Ojs.t) ->
                         fun (x7846 : Ojs.t) ->
                           fun (x7847 : Ojs.t) ->
                             fun (x7848 : Ojs.t) ->
                               Obj.magic
                                 (x7844 ~previousValue:(Obj.magic x7845)
                                    ~currentValue:(Ojs.float_of_js x7846)
                                    ~currentIndex:(Ojs.float_of_js x7847)
                                    ~array:(t_of_js x7848))));(Obj.magic
                                                                 x7849)|])
    let (reduceRight :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> float)
      =
      fun (x7857 : 'tags this) ->
        fun
          ~callbackfn:(x7852 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x7857) "reduceRight"
               [|(Ojs.fun_to_js 4
                    (fun (x7853 : Ojs.t) ->
                       fun (x7854 : Ojs.t) ->
                         fun (x7855 : Ojs.t) ->
                           fun (x7856 : Ojs.t) ->
                             Ojs.float_to_js
                               (x7852 ~previousValue:(Ojs.float_of_js x7853)
                                  ~currentValue:(Ojs.float_of_js x7854)
                                  ~currentIndex:(Ojs.float_of_js x7855)
                                  ~array:(t_of_js x7856))))|])
    let (reduceRight' :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> initialValue:float -> float)
      =
      fun (x7865 : 'tags this) ->
        fun
          ~callbackfn:(x7859 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          fun ~initialValue:(x7864 : float) ->
            Ojs.float_of_js
              (Ojs.call (this_to_js Obj.magic x7865) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x7860 : Ojs.t) ->
                         fun (x7861 : Ojs.t) ->
                           fun (x7862 : Ojs.t) ->
                             fun (x7863 : Ojs.t) ->
                               Ojs.float_to_js
                                 (x7859
                                    ~previousValue:(Ojs.float_of_js x7860)
                                    ~currentValue:(Ojs.float_of_js x7861)
                                    ~currentIndex:(Ojs.float_of_js x7862)
                                    ~array:(t_of_js x7863))));(Ojs.float_to_js
                                                                 x7864)|])
    let (reduceRight'' :
      'tags this ->
        callbackfn:(previousValue:'U ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x7873 : 'tags this) ->
        fun
          ~callbackfn:(x7867 :
                        previousValue:'U ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x7872 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic x7873) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x7868 : Ojs.t) ->
                         fun (x7869 : Ojs.t) ->
                           fun (x7870 : Ojs.t) ->
                             fun (x7871 : Ojs.t) ->
                               Obj.magic
                                 (x7867 ~previousValue:(Obj.magic x7868)
                                    ~currentValue:(Ojs.float_of_js x7869)
                                    ~currentIndex:(Ojs.float_of_js x7870)
                                    ~array:(t_of_js x7871))));(Obj.magic
                                                                 x7872)|])
    let (reverse : 'tags this -> t) =
      fun (x7875 : 'tags this) ->
        t_of_js (Ojs.call (this_to_js Obj.magic x7875) "reverse" [||])
    let (set_ :
      'tags this -> array:float ArrayLike.t -> ?offset:float -> unit -> unit)
      =
      fun (x7882 : 'tags this) ->
        fun ~array:(x7877 : float ArrayLike.t) ->
          fun ?offset:(x7878 : float option) ->
            fun () ->
              ignore
                (let x7884 = this_to_js Obj.magic x7882 in
                 Ojs.call (Ojs.get_prop_ascii x7884 "set") "apply"
                   [|x7884;((let x7879 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7879 "push"
                                  [|(ArrayLike.t_to_js Ojs.float_to_js x7877)|]);
                             (match x7878 with
                              | Some x7880 ->
                                  ignore
                                    (Ojs.call x7879 "push"
                                       [|(Ojs.float_to_js x7880)|])
                              | None -> ());
                             x7879))|])
    let (slice : 'tags this -> ?start:float -> ?end_:float -> unit -> t) =
      fun (x7890 : 'tags this) ->
        fun ?start:(x7885 : float option) ->
          fun ?end_:(x7886 : float option) ->
            fun () ->
              t_of_js
                (let x7892 = this_to_js Obj.magic x7890 in
                 Ojs.call (Ojs.get_prop_ascii x7892 "slice") "apply"
                   [|x7892;((let x7887 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x7885 with
                              | Some x7889 ->
                                  ignore
                                    (Ojs.call x7887 "push"
                                       [|(Ojs.float_to_js x7889)|])
                              | None -> ());
                             (match x7886 with
                              | Some x7888 ->
                                  ignore
                                    (Ojs.call x7887 "push"
                                       [|(Ojs.float_to_js x7888)|])
                              | None -> ());
                             x7887))|])
    let (some :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x7900 : 'tags this) ->
        fun
          ~predicate:(x7893 :
                       value:float -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x7894 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x7902 = this_to_js Obj.magic x7900 in
                 Ojs.call (Ojs.get_prop_ascii x7902 "some") "apply"
                   [|x7902;((let x7895 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7895 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x7897 : Ojs.t) ->
                                          fun (x7898 : Ojs.t) ->
                                            fun (x7899 : Ojs.t) ->
                                              unknown_to_js
                                                (x7893
                                                   ~value:(Ojs.float_of_js
                                                             x7897)
                                                   ~index:(Ojs.float_of_js
                                                             x7898)
                                                   ~array:(t_of_js x7899))))|]);
                             (match x7894 with
                              | Some x7896 ->
                                  ignore
                                    (Ojs.call x7895 "push"
                                       [|(any_to_js x7896)|])
                              | None -> ());
                             x7895))|])
    let (sort :
      'tags this ->
        ?compareFn:(a:float -> b:float -> float) -> unit -> 'tags this)
      =
      fun (x7908 : 'tags this) ->
        fun ?compareFn:(x7903 : (a:float -> b:float -> float) option) ->
          fun () ->
            this_of_js Obj.magic
              (let x7910 = this_to_js Obj.magic x7908 in
               Ojs.call (Ojs.get_prop_ascii x7910 "sort") "apply"
                 [|x7910;((let x7904 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x7903 with
                            | Some x7905 ->
                                ignore
                                  (Ojs.call x7904 "push"
                                     [|(Ojs.fun_to_js 2
                                          (fun (x7906 : Ojs.t) ->
                                             fun (x7907 : Ojs.t) ->
                                               Ojs.float_to_js
                                                 (x7905
                                                    ~a:(Ojs.float_of_js x7906)
                                                    ~b:(Ojs.float_of_js x7907))))|])
                            | None -> ());
                           x7904))|])
    let (subarray : 'tags this -> ?begin_:float -> ?end_:float -> unit -> t)
      =
      fun (x7917 : 'tags this) ->
        fun ?begin_:(x7912 : float option) ->
          fun ?end_:(x7913 : float option) ->
            fun () ->
              t_of_js
                (let x7919 = this_to_js Obj.magic x7917 in
                 Ojs.call (Ojs.get_prop_ascii x7919 "subarray") "apply"
                   [|x7919;((let x7914 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x7912 with
                              | Some x7916 ->
                                  ignore
                                    (Ojs.call x7914 "push"
                                       [|(Ojs.float_to_js x7916)|])
                              | None -> ());
                             (match x7913 with
                              | Some x7915 ->
                                  ignore
                                    (Ojs.call x7914 "push"
                                       [|(Ojs.float_to_js x7915)|])
                              | None -> ());
                             x7914))|])
    let (toLocaleString : 'tags this -> string) =
      fun (x7920 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x7920) "toLocaleString" [||])
    let (toString : 'tags this -> string) =
      fun (x7922 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x7922) "toString" [||])
    let (valueOf : 'tags this -> t) =
      fun (x7924 : 'tags this) ->
        t_of_js (Ojs.call (this_to_js Obj.magic x7924) "valueOf" [||])
    let (get : 'tags this -> float -> float) =
      fun (x7926 : 'tags this) ->
        fun (x7928 : float) ->
          Ojs.float_of_js
            (Ojs.get_prop (this_to_js Obj.magic x7926)
               (Ojs.float_to_js x7928))
    let (set : 'tags this -> float -> float -> unit) =
      fun (x7929 : 'tags this) ->
        fun (x7931 : float) ->
          fun (x7932 : float) ->
            Ojs.set_prop (this_to_js Obj.magic x7929) (Ojs.float_to_js x7931)
              (Ojs.float_to_js x7932)
    let (create : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Uint16Array") [||])
    let (create' : float Iterable.t -> t) =
      fun (x7933 : float Iterable.t) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Uint16Array")
             [|(Iterable.t_to_js Ojs.float_to_js x7933)|])
    let (from :
      arrayLike:float Iterable.t ->
        ?mapfn:(v:float -> k:float -> float) -> ?thisArg:any -> unit -> t)
      =
      fun ~arrayLike:(x7935 : float Iterable.t) ->
        fun ?mapfn:(x7936 : (v:float -> k:float -> float) option) ->
          fun ?thisArg:(x7937 : any option) ->
            fun () ->
              t_of_js
                (let x7944 = Ojs.get_prop_ascii Ojs.global "Uint16Array" in
                 Ojs.call (Ojs.get_prop_ascii x7944 "from") "apply"
                   [|x7944;((let x7938 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7938 "push"
                                  [|(Iterable.t_to_js Ojs.float_to_js x7935)|]);
                             (match x7936 with
                              | Some x7940 ->
                                  ignore
                                    (Ojs.call x7938 "push"
                                       [|(Ojs.fun_to_js 2
                                            (fun (x7941 : Ojs.t) ->
                                               fun (x7942 : Ojs.t) ->
                                                 Ojs.float_to_js
                                                   (x7940
                                                      ~v:(Ojs.float_of_js
                                                            x7941)
                                                      ~k:(Ojs.float_of_js
                                                            x7942))))|])
                              | None -> ());
                             (match x7937 with
                              | Some x7939 ->
                                  ignore
                                    (Ojs.call x7938 "push"
                                       [|(any_to_js x7939)|])
                              | None -> ());
                             x7938))|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Uint16Array")
             "prototype")
    let (create'' : float -> t) =
      fun (x7945 : float) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Uint16Array")
             [|(Ojs.float_to_js x7945)|])
    let (create''' :
      [ `U1 of float ArrayLike.t  | `U2 of ArrayBufferLike.t ] -> t) =
      fun (x7946 : [ `U1 of float ArrayLike.t  | `U2 of ArrayBufferLike.t ])
        ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Uint16Array")
             [|((match x7946 with
                 | `U1 x7947 -> ArrayLike.t_to_js Ojs.float_to_js x7947
                 | `U2 x7949 -> ArrayBufferLike.t_to_js x7949))|])
    let (create'''' :
      buffer:ArrayBufferLike.t ->
        ?byteOffset:float -> ?length:float -> unit -> t)
      =
      fun ~buffer:(x7950 : ArrayBufferLike.t) ->
        fun ?byteOffset:(x7951 : float option) ->
          fun ?length:(x7952 : float option) ->
            fun () ->
              t_of_js
                (Ojs.new_obj_arr
                   (Ojs.get_prop_ascii Ojs.global "Uint16Array")
                   (let x7953 =
                      Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                        [||] in
                    ignore
                      (Ojs.call x7953 "push"
                         [|(ArrayBufferLike.t_to_js x7950)|]);
                    (match x7951 with
                     | Some x7955 ->
                         ignore
                           (Ojs.call x7953 "push" [|(Ojs.float_to_js x7955)|])
                     | None -> ());
                    (match x7952 with
                     | Some x7954 ->
                         ignore
                           (Ojs.call x7953 "push" [|(Ojs.float_to_js x7954)|])
                     | None -> ());
                    x7953))
    let (bytes_per_element : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Uint16Array")
             "BYTES_PER_ELEMENT")
    let (of_ : float list -> t) =
      fun (x7956 : float list) ->
        t_of_js
          (let x7959 = Ojs.get_prop_ascii Ojs.global "Uint16Array" in
           Ojs.call (Ojs.get_prop_ascii x7959 "of") "apply"
             [|x7959;((let x7957 =
                         Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                           [||] in
                       List.iter
                         (fun (x7958 : float) ->
                            ignore
                              (Ojs.call x7957 "push"
                                 [|(Ojs.float_to_js x7958)|])) x7956;
                       x7957))|])
    let (from' : float ArrayLike.t -> t) =
      fun (x7960 : float ArrayLike.t) ->
        t_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Uint16Array") "from"
             [|(ArrayLike.t_to_js Ojs.float_to_js x7960)|])
    let (from'' :
      arrayLike:'T ArrayLike.t ->
        mapfn:(v:'T -> k:float -> float) -> ?thisArg:any -> unit -> t)
      =
      fun ~arrayLike:(x7962 : 'T ArrayLike.t) ->
        fun ~mapfn:(x7963 : v:'T -> k:float -> float) ->
          fun ?thisArg:(x7964 : any option) ->
            fun () ->
              t_of_js
                (let x7970 = Ojs.get_prop_ascii Ojs.global "Uint16Array" in
                 Ojs.call (Ojs.get_prop_ascii x7970 "from") "apply"
                   [|x7970;((let x7965 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7965 "push"
                                  [|(ArrayLike.t_to_js Obj.magic x7962)|]);
                             ignore
                               (Ojs.call x7965 "push"
                                  [|(Ojs.fun_to_js 2
                                       (fun (x7967 : Ojs.t) ->
                                          fun (x7968 : Ojs.t) ->
                                            Ojs.float_to_js
                                              (x7963 ~v:(Obj.magic x7967)
                                                 ~k:(Ojs.float_of_js x7968))))|]);
                             (match x7964 with
                              | Some x7966 ->
                                  ignore
                                    (Ojs.call x7965 "push"
                                       [|(any_to_js x7966)|])
                              | None -> ());
                             x7965))|])
    let cast_from = Obj.magic
  end
module Uint8Array =
  struct
    type t = [ `Uint8Array ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type tags = [ `Uint8Array ]
    type 'tags this = 'tags intf constraint 'tags = [> `Uint8Array ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x7973 : Ojs.t) -> intf_of_js __tags_of_js x7973
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x7971 : __tags intf) -> intf_to_js __tags_to_js x7971
    let (findLast :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> bool) ->
          ?thisArg:any -> unit -> 'S option)
      =
      fun (x7982 : 'tags this) ->
        fun
          ~predicate:(x7975 : value:float -> index:float -> array:t -> bool)
          ->
          fun ?thisArg:(x7976 : any option) ->
            fun () ->
              Ojs.option_of_js Obj.magic
                (let x7984 = this_to_js Obj.magic x7982 in
                 Ojs.call (Ojs.get_prop_ascii x7984 "findLast") "apply"
                   [|x7984;((let x7977 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7977 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x7979 : Ojs.t) ->
                                          fun (x7980 : Ojs.t) ->
                                            fun (x7981 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x7975
                                                   ~value:(Ojs.float_of_js
                                                             x7979)
                                                   ~index:(Ojs.float_of_js
                                                             x7980)
                                                   ~array:(t_of_js x7981))))|]);
                             (match x7976 with
                              | Some x7978 ->
                                  ignore
                                    (Ojs.call x7977 "push"
                                       [|(any_to_js x7978)|])
                              | None -> ());
                             x7977))|])
    let (findLast' :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> float option)
      =
      fun (x7993 : 'tags this) ->
        fun
          ~predicate:(x7986 :
                       value:float -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x7987 : any option) ->
            fun () ->
              Ojs.option_of_js Ojs.float_of_js
                (let x7995 = this_to_js Obj.magic x7993 in
                 Ojs.call (Ojs.get_prop_ascii x7995 "findLast") "apply"
                   [|x7995;((let x7988 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7988 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x7990 : Ojs.t) ->
                                          fun (x7991 : Ojs.t) ->
                                            fun (x7992 : Ojs.t) ->
                                              unknown_to_js
                                                (x7986
                                                   ~value:(Ojs.float_of_js
                                                             x7990)
                                                   ~index:(Ojs.float_of_js
                                                             x7991)
                                                   ~array:(t_of_js x7992))))|]);
                             (match x7987 with
                              | Some x7989 ->
                                  ignore
                                    (Ojs.call x7988 "push"
                                       [|(any_to_js x7989)|])
                              | None -> ());
                             x7988))|])
    let (findLastIndex :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> float)
      =
      fun (x8004 : 'tags this) ->
        fun
          ~predicate:(x7997 :
                       value:float -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x7998 : any option) ->
            fun () ->
              Ojs.float_of_js
                (let x8006 = this_to_js Obj.magic x8004 in
                 Ojs.call (Ojs.get_prop_ascii x8006 "findLastIndex") "apply"
                   [|x8006;((let x7999 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7999 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x8001 : Ojs.t) ->
                                          fun (x8002 : Ojs.t) ->
                                            fun (x8003 : Ojs.t) ->
                                              unknown_to_js
                                                (x7997
                                                   ~value:(Ojs.float_of_js
                                                             x8001)
                                                   ~index:(Ojs.float_of_js
                                                             x8002)
                                                   ~array:(t_of_js x8003))))|]);
                             (match x7998 with
                              | Some x8000 ->
                                  ignore
                                    (Ojs.call x7999 "push"
                                       [|(any_to_js x8000)|])
                              | None -> ());
                             x7999))|])
    let (toReversed : 'tags this -> t) =
      fun (x8007 : 'tags this) ->
        t_of_js (Ojs.call (this_to_js Obj.magic x8007) "toReversed" [||])
    let (toSorted :
      'tags this -> ?compareFn:(a:float -> b:float -> float) -> unit -> t) =
      fun (x8014 : 'tags this) ->
        fun ?compareFn:(x8009 : (a:float -> b:float -> float) option) ->
          fun () ->
            t_of_js
              (let x8016 = this_to_js Obj.magic x8014 in
               Ojs.call (Ojs.get_prop_ascii x8016 "toSorted") "apply"
                 [|x8016;((let x8010 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x8009 with
                            | Some x8011 ->
                                ignore
                                  (Ojs.call x8010 "push"
                                     [|(Ojs.fun_to_js 2
                                          (fun (x8012 : Ojs.t) ->
                                             fun (x8013 : Ojs.t) ->
                                               Ojs.float_to_js
                                                 (x8011
                                                    ~a:(Ojs.float_of_js x8012)
                                                    ~b:(Ojs.float_of_js x8013))))|])
                            | None -> ());
                           x8010))|])
    let (with_ : 'tags this -> index:float -> value:float -> t) =
      fun (x8019 : 'tags this) ->
        fun ~index:(x8017 : float) ->
          fun ~value:(x8018 : float) ->
            t_of_js
              (Ojs.call (this_to_js Obj.magic x8019) "with"
                 [|(Ojs.float_to_js x8017);(Ojs.float_to_js x8018)|])
    let (at : 'tags this -> index:float -> float option) =
      fun (x8022 : 'tags this) ->
        fun ~index:(x8021 : float) ->
          Ojs.option_of_js Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x8022) "at"
               [|(Ojs.float_to_js x8021)|])
    let (includes :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> bool)
      =
      fun (x8029 : 'tags this) ->
        fun ~searchElement:(x8025 : float) ->
          fun ?fromIndex:(x8026 : float option) ->
            fun () ->
              Ojs.bool_of_js
                (let x8031 = this_to_js Obj.magic x8029 in
                 Ojs.call (Ojs.get_prop_ascii x8031 "includes") "apply"
                   [|x8031;((let x8027 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8027 "push"
                                  [|(Ojs.float_to_js x8025)|]);
                             (match x8026 with
                              | Some x8028 ->
                                  ignore
                                    (Ojs.call x8027 "push"
                                       [|(Ojs.float_to_js x8028)|])
                              | None -> ());
                             x8027))|])
    let (entries : 'tags this -> (float * float) IterableIterator.t) =
      fun (x8032 : 'tags this) ->
        IterableIterator.t_of_js
          (fun (x8034 : Ojs.t) ->
             let x8035 = x8034 in
             ((Ojs.float_of_js (Ojs.array_get x8035 0)),
               (Ojs.float_of_js (Ojs.array_get x8035 1))))
          (Ojs.call (this_to_js Obj.magic x8032) "entries" [||])
    let (keys : 'tags this -> float IterableIterator.t) =
      fun (x8036 : 'tags this) ->
        IterableIterator.t_of_js Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x8036) "keys" [||])
    let (values : 'tags this -> float IterableIterator.t) =
      fun (x8039 : 'tags this) ->
        IterableIterator.t_of_js Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x8039) "values" [||])
    let (get_BYTES_PER_ELEMENT : 'tags this -> float) =
      fun (x8042 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x8042)
             "BYTES_PER_ELEMENT")
    let (get_buffer : 'tags this -> ArrayBufferLike.t) =
      fun (x8044 : 'tags this) ->
        ArrayBufferLike.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x8044) "buffer")
    let (get_byteLength : 'tags this -> float) =
      fun (x8046 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x8046) "byteLength")
    let (get_byteOffset : 'tags this -> float) =
      fun (x8048 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x8048) "byteOffset")
    let (copyWithin :
      'tags this ->
        target:float -> start:float -> ?end_:float -> unit -> 'tags this)
      =
      fun (x8055 : 'tags this) ->
        fun ~target:(x8050 : float) ->
          fun ~start:(x8051 : float) ->
            fun ?end_:(x8052 : float option) ->
              fun () ->
                this_of_js Obj.magic
                  (let x8057 = this_to_js Obj.magic x8055 in
                   Ojs.call (Ojs.get_prop_ascii x8057 "copyWithin") "apply"
                     [|x8057;((let x8053 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x8053 "push"
                                    [|(Ojs.float_to_js x8050)|]);
                               ignore
                                 (Ojs.call x8053 "push"
                                    [|(Ojs.float_to_js x8051)|]);
                               (match x8052 with
                                | Some x8054 ->
                                    ignore
                                      (Ojs.call x8053 "push"
                                         [|(Ojs.float_to_js x8054)|])
                                | None -> ());
                               x8053))|])
    let (every :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x8066 : 'tags this) ->
        fun
          ~predicate:(x8059 :
                       value:float -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x8060 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x8068 = this_to_js Obj.magic x8066 in
                 Ojs.call (Ojs.get_prop_ascii x8068 "every") "apply"
                   [|x8068;((let x8061 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8061 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x8063 : Ojs.t) ->
                                          fun (x8064 : Ojs.t) ->
                                            fun (x8065 : Ojs.t) ->
                                              unknown_to_js
                                                (x8059
                                                   ~value:(Ojs.float_of_js
                                                             x8063)
                                                   ~index:(Ojs.float_of_js
                                                             x8064)
                                                   ~array:(t_of_js x8065))))|]);
                             (match x8060 with
                              | Some x8062 ->
                                  ignore
                                    (Ojs.call x8061 "push"
                                       [|(any_to_js x8062)|])
                              | None -> ());
                             x8061))|])
    let (fill :
      'tags this ->
        value:float -> ?start:float -> ?end_:float -> unit -> 'tags this)
      =
      fun (x8075 : 'tags this) ->
        fun ~value:(x8069 : float) ->
          fun ?start:(x8070 : float option) ->
            fun ?end_:(x8071 : float option) ->
              fun () ->
                this_of_js Obj.magic
                  (let x8077 = this_to_js Obj.magic x8075 in
                   Ojs.call (Ojs.get_prop_ascii x8077 "fill") "apply"
                     [|x8077;((let x8072 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x8072 "push"
                                    [|(Ojs.float_to_js x8069)|]);
                               (match x8070 with
                                | Some x8074 ->
                                    ignore
                                      (Ojs.call x8072 "push"
                                         [|(Ojs.float_to_js x8074)|])
                                | None -> ());
                               (match x8071 with
                                | Some x8073 ->
                                    ignore
                                      (Ojs.call x8072 "push"
                                         [|(Ojs.float_to_js x8073)|])
                                | None -> ());
                               x8072))|])
    let (filter :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> any) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x8086 : 'tags this) ->
        fun ~predicate:(x8079 : value:float -> index:float -> array:t -> any)
          ->
          fun ?thisArg:(x8080 : any option) ->
            fun () ->
              t_of_js
                (let x8088 = this_to_js Obj.magic x8086 in
                 Ojs.call (Ojs.get_prop_ascii x8088 "filter") "apply"
                   [|x8088;((let x8081 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8081 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x8083 : Ojs.t) ->
                                          fun (x8084 : Ojs.t) ->
                                            fun (x8085 : Ojs.t) ->
                                              any_to_js
                                                (x8079
                                                   ~value:(Ojs.float_of_js
                                                             x8083)
                                                   ~index:(Ojs.float_of_js
                                                             x8084)
                                                   ~array:(t_of_js x8085))))|]);
                             (match x8080 with
                              | Some x8082 ->
                                  ignore
                                    (Ojs.call x8081 "push"
                                       [|(any_to_js x8082)|])
                              | None -> ());
                             x8081))|])
    let (find :
      'tags this ->
        predicate:(value:float -> index:float -> obj:t -> bool) ->
          ?thisArg:any -> unit -> float option)
      =
      fun (x8096 : 'tags this) ->
        fun ~predicate:(x8089 : value:float -> index:float -> obj:t -> bool)
          ->
          fun ?thisArg:(x8090 : any option) ->
            fun () ->
              Ojs.option_of_js Ojs.float_of_js
                (let x8098 = this_to_js Obj.magic x8096 in
                 Ojs.call (Ojs.get_prop_ascii x8098 "find") "apply"
                   [|x8098;((let x8091 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8091 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x8093 : Ojs.t) ->
                                          fun (x8094 : Ojs.t) ->
                                            fun (x8095 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x8089
                                                   ~value:(Ojs.float_of_js
                                                             x8093)
                                                   ~index:(Ojs.float_of_js
                                                             x8094)
                                                   ~obj:(t_of_js x8095))))|]);
                             (match x8090 with
                              | Some x8092 ->
                                  ignore
                                    (Ojs.call x8091 "push"
                                       [|(any_to_js x8092)|])
                              | None -> ());
                             x8091))|])
    let (findIndex :
      'tags this ->
        predicate:(value:float -> index:float -> obj:t -> bool) ->
          ?thisArg:any -> unit -> float)
      =
      fun (x8107 : 'tags this) ->
        fun ~predicate:(x8100 : value:float -> index:float -> obj:t -> bool)
          ->
          fun ?thisArg:(x8101 : any option) ->
            fun () ->
              Ojs.float_of_js
                (let x8109 = this_to_js Obj.magic x8107 in
                 Ojs.call (Ojs.get_prop_ascii x8109 "findIndex") "apply"
                   [|x8109;((let x8102 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8102 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x8104 : Ojs.t) ->
                                          fun (x8105 : Ojs.t) ->
                                            fun (x8106 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x8100
                                                   ~value:(Ojs.float_of_js
                                                             x8104)
                                                   ~index:(Ojs.float_of_js
                                                             x8105)
                                                   ~obj:(t_of_js x8106))))|]);
                             (match x8101 with
                              | Some x8103 ->
                                  ignore
                                    (Ojs.call x8102 "push"
                                       [|(any_to_js x8103)|])
                              | None -> ());
                             x8102))|])
    let (forEach :
      'tags this ->
        callbackfn:(value:float -> index:float -> array:t -> unit) ->
          ?thisArg:any -> unit -> unit)
      =
      fun (x8117 : 'tags this) ->
        fun
          ~callbackfn:(x8110 : value:float -> index:float -> array:t -> unit)
          ->
          fun ?thisArg:(x8111 : any option) ->
            fun () ->
              ignore
                (let x8119 = this_to_js Obj.magic x8117 in
                 Ojs.call (Ojs.get_prop_ascii x8119 "forEach") "apply"
                   [|x8119;((let x8112 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8112 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x8114 : Ojs.t) ->
                                          fun (x8115 : Ojs.t) ->
                                            fun (x8116 : Ojs.t) ->
                                              x8110
                                                ~value:(Ojs.float_of_js x8114)
                                                ~index:(Ojs.float_of_js x8115)
                                                ~array:(t_of_js x8116)))|]);
                             (match x8111 with
                              | Some x8113 ->
                                  ignore
                                    (Ojs.call x8112 "push"
                                       [|(any_to_js x8113)|])
                              | None -> ());
                             x8112))|])
    let (indexOf :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> float)
      =
      fun (x8124 : 'tags this) ->
        fun ~searchElement:(x8120 : float) ->
          fun ?fromIndex:(x8121 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x8126 = this_to_js Obj.magic x8124 in
                 Ojs.call (Ojs.get_prop_ascii x8126 "indexOf") "apply"
                   [|x8126;((let x8122 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8122 "push"
                                  [|(Ojs.float_to_js x8120)|]);
                             (match x8121 with
                              | Some x8123 ->
                                  ignore
                                    (Ojs.call x8122 "push"
                                       [|(Ojs.float_to_js x8123)|])
                              | None -> ());
                             x8122))|])
    let (join : 'tags this -> ?separator:string -> unit -> string) =
      fun (x8130 : 'tags this) ->
        fun ?separator:(x8127 : string option) ->
          fun () ->
            Ojs.string_of_js
              (let x8132 = this_to_js Obj.magic x8130 in
               Ojs.call (Ojs.get_prop_ascii x8132 "join") "apply"
                 [|x8132;((let x8128 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x8127 with
                            | Some x8129 ->
                                ignore
                                  (Ojs.call x8128 "push"
                                     [|(Ojs.string_to_js x8129)|])
                            | None -> ());
                           x8128))|])
    let (lastIndexOf :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> float)
      =
      fun (x8137 : 'tags this) ->
        fun ~searchElement:(x8133 : float) ->
          fun ?fromIndex:(x8134 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x8139 = this_to_js Obj.magic x8137 in
                 Ojs.call (Ojs.get_prop_ascii x8139 "lastIndexOf") "apply"
                   [|x8139;((let x8135 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8135 "push"
                                  [|(Ojs.float_to_js x8133)|]);
                             (match x8134 with
                              | Some x8136 ->
                                  ignore
                                    (Ojs.call x8135 "push"
                                       [|(Ojs.float_to_js x8136)|])
                              | None -> ());
                             x8135))|])
    let (get_length : 'tags this -> float) =
      fun (x8140 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x8140) "length")
    let (map :
      'tags this ->
        callbackfn:(value:float -> index:float -> array:t -> float) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x8149 : 'tags this) ->
        fun
          ~callbackfn:(x8142 :
                        value:float -> index:float -> array:t -> float)
          ->
          fun ?thisArg:(x8143 : any option) ->
            fun () ->
              t_of_js
                (let x8151 = this_to_js Obj.magic x8149 in
                 Ojs.call (Ojs.get_prop_ascii x8151 "map") "apply"
                   [|x8151;((let x8144 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8144 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x8146 : Ojs.t) ->
                                          fun (x8147 : Ojs.t) ->
                                            fun (x8148 : Ojs.t) ->
                                              Ojs.float_to_js
                                                (x8142
                                                   ~value:(Ojs.float_of_js
                                                             x8146)
                                                   ~index:(Ojs.float_of_js
                                                             x8147)
                                                   ~array:(t_of_js x8148))))|]);
                             (match x8143 with
                              | Some x8145 ->
                                  ignore
                                    (Ojs.call x8144 "push"
                                       [|(any_to_js x8145)|])
                              | None -> ());
                             x8144))|])
    let (reduce :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> float)
      =
      fun (x8157 : 'tags this) ->
        fun
          ~callbackfn:(x8152 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x8157) "reduce"
               [|(Ojs.fun_to_js 4
                    (fun (x8153 : Ojs.t) ->
                       fun (x8154 : Ojs.t) ->
                         fun (x8155 : Ojs.t) ->
                           fun (x8156 : Ojs.t) ->
                             Ojs.float_to_js
                               (x8152 ~previousValue:(Ojs.float_of_js x8153)
                                  ~currentValue:(Ojs.float_of_js x8154)
                                  ~currentIndex:(Ojs.float_of_js x8155)
                                  ~array:(t_of_js x8156))))|])
    let (reduce' :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> initialValue:float -> float)
      =
      fun (x8165 : 'tags this) ->
        fun
          ~callbackfn:(x8159 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          fun ~initialValue:(x8164 : float) ->
            Ojs.float_of_js
              (Ojs.call (this_to_js Obj.magic x8165) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x8160 : Ojs.t) ->
                         fun (x8161 : Ojs.t) ->
                           fun (x8162 : Ojs.t) ->
                             fun (x8163 : Ojs.t) ->
                               Ojs.float_to_js
                                 (x8159
                                    ~previousValue:(Ojs.float_of_js x8160)
                                    ~currentValue:(Ojs.float_of_js x8161)
                                    ~currentIndex:(Ojs.float_of_js x8162)
                                    ~array:(t_of_js x8163))));(Ojs.float_to_js
                                                                 x8164)|])
    let (reduce'' :
      'tags this ->
        callbackfn:(previousValue:'U ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x8173 : 'tags this) ->
        fun
          ~callbackfn:(x8167 :
                        previousValue:'U ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x8172 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic x8173) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x8168 : Ojs.t) ->
                         fun (x8169 : Ojs.t) ->
                           fun (x8170 : Ojs.t) ->
                             fun (x8171 : Ojs.t) ->
                               Obj.magic
                                 (x8167 ~previousValue:(Obj.magic x8168)
                                    ~currentValue:(Ojs.float_of_js x8169)
                                    ~currentIndex:(Ojs.float_of_js x8170)
                                    ~array:(t_of_js x8171))));(Obj.magic
                                                                 x8172)|])
    let (reduceRight :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> float)
      =
      fun (x8180 : 'tags this) ->
        fun
          ~callbackfn:(x8175 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x8180) "reduceRight"
               [|(Ojs.fun_to_js 4
                    (fun (x8176 : Ojs.t) ->
                       fun (x8177 : Ojs.t) ->
                         fun (x8178 : Ojs.t) ->
                           fun (x8179 : Ojs.t) ->
                             Ojs.float_to_js
                               (x8175 ~previousValue:(Ojs.float_of_js x8176)
                                  ~currentValue:(Ojs.float_of_js x8177)
                                  ~currentIndex:(Ojs.float_of_js x8178)
                                  ~array:(t_of_js x8179))))|])
    let (reduceRight' :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> initialValue:float -> float)
      =
      fun (x8188 : 'tags this) ->
        fun
          ~callbackfn:(x8182 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          fun ~initialValue:(x8187 : float) ->
            Ojs.float_of_js
              (Ojs.call (this_to_js Obj.magic x8188) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x8183 : Ojs.t) ->
                         fun (x8184 : Ojs.t) ->
                           fun (x8185 : Ojs.t) ->
                             fun (x8186 : Ojs.t) ->
                               Ojs.float_to_js
                                 (x8182
                                    ~previousValue:(Ojs.float_of_js x8183)
                                    ~currentValue:(Ojs.float_of_js x8184)
                                    ~currentIndex:(Ojs.float_of_js x8185)
                                    ~array:(t_of_js x8186))));(Ojs.float_to_js
                                                                 x8187)|])
    let (reduceRight'' :
      'tags this ->
        callbackfn:(previousValue:'U ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x8196 : 'tags this) ->
        fun
          ~callbackfn:(x8190 :
                        previousValue:'U ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x8195 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic x8196) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x8191 : Ojs.t) ->
                         fun (x8192 : Ojs.t) ->
                           fun (x8193 : Ojs.t) ->
                             fun (x8194 : Ojs.t) ->
                               Obj.magic
                                 (x8190 ~previousValue:(Obj.magic x8191)
                                    ~currentValue:(Ojs.float_of_js x8192)
                                    ~currentIndex:(Ojs.float_of_js x8193)
                                    ~array:(t_of_js x8194))));(Obj.magic
                                                                 x8195)|])
    let (reverse : 'tags this -> t) =
      fun (x8198 : 'tags this) ->
        t_of_js (Ojs.call (this_to_js Obj.magic x8198) "reverse" [||])
    let (set_ :
      'tags this -> array:float ArrayLike.t -> ?offset:float -> unit -> unit)
      =
      fun (x8205 : 'tags this) ->
        fun ~array:(x8200 : float ArrayLike.t) ->
          fun ?offset:(x8201 : float option) ->
            fun () ->
              ignore
                (let x8207 = this_to_js Obj.magic x8205 in
                 Ojs.call (Ojs.get_prop_ascii x8207 "set") "apply"
                   [|x8207;((let x8202 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8202 "push"
                                  [|(ArrayLike.t_to_js Ojs.float_to_js x8200)|]);
                             (match x8201 with
                              | Some x8203 ->
                                  ignore
                                    (Ojs.call x8202 "push"
                                       [|(Ojs.float_to_js x8203)|])
                              | None -> ());
                             x8202))|])
    let (slice : 'tags this -> ?start:float -> ?end_:float -> unit -> t) =
      fun (x8213 : 'tags this) ->
        fun ?start:(x8208 : float option) ->
          fun ?end_:(x8209 : float option) ->
            fun () ->
              t_of_js
                (let x8215 = this_to_js Obj.magic x8213 in
                 Ojs.call (Ojs.get_prop_ascii x8215 "slice") "apply"
                   [|x8215;((let x8210 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x8208 with
                              | Some x8212 ->
                                  ignore
                                    (Ojs.call x8210 "push"
                                       [|(Ojs.float_to_js x8212)|])
                              | None -> ());
                             (match x8209 with
                              | Some x8211 ->
                                  ignore
                                    (Ojs.call x8210 "push"
                                       [|(Ojs.float_to_js x8211)|])
                              | None -> ());
                             x8210))|])
    let (some :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x8223 : 'tags this) ->
        fun
          ~predicate:(x8216 :
                       value:float -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x8217 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x8225 = this_to_js Obj.magic x8223 in
                 Ojs.call (Ojs.get_prop_ascii x8225 "some") "apply"
                   [|x8225;((let x8218 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8218 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x8220 : Ojs.t) ->
                                          fun (x8221 : Ojs.t) ->
                                            fun (x8222 : Ojs.t) ->
                                              unknown_to_js
                                                (x8216
                                                   ~value:(Ojs.float_of_js
                                                             x8220)
                                                   ~index:(Ojs.float_of_js
                                                             x8221)
                                                   ~array:(t_of_js x8222))))|]);
                             (match x8217 with
                              | Some x8219 ->
                                  ignore
                                    (Ojs.call x8218 "push"
                                       [|(any_to_js x8219)|])
                              | None -> ());
                             x8218))|])
    let (sort :
      'tags this ->
        ?compareFn:(a:float -> b:float -> float) -> unit -> 'tags this)
      =
      fun (x8231 : 'tags this) ->
        fun ?compareFn:(x8226 : (a:float -> b:float -> float) option) ->
          fun () ->
            this_of_js Obj.magic
              (let x8233 = this_to_js Obj.magic x8231 in
               Ojs.call (Ojs.get_prop_ascii x8233 "sort") "apply"
                 [|x8233;((let x8227 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x8226 with
                            | Some x8228 ->
                                ignore
                                  (Ojs.call x8227 "push"
                                     [|(Ojs.fun_to_js 2
                                          (fun (x8229 : Ojs.t) ->
                                             fun (x8230 : Ojs.t) ->
                                               Ojs.float_to_js
                                                 (x8228
                                                    ~a:(Ojs.float_of_js x8229)
                                                    ~b:(Ojs.float_of_js x8230))))|])
                            | None -> ());
                           x8227))|])
    let (subarray : 'tags this -> ?begin_:float -> ?end_:float -> unit -> t)
      =
      fun (x8240 : 'tags this) ->
        fun ?begin_:(x8235 : float option) ->
          fun ?end_:(x8236 : float option) ->
            fun () ->
              t_of_js
                (let x8242 = this_to_js Obj.magic x8240 in
                 Ojs.call (Ojs.get_prop_ascii x8242 "subarray") "apply"
                   [|x8242;((let x8237 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x8235 with
                              | Some x8239 ->
                                  ignore
                                    (Ojs.call x8237 "push"
                                       [|(Ojs.float_to_js x8239)|])
                              | None -> ());
                             (match x8236 with
                              | Some x8238 ->
                                  ignore
                                    (Ojs.call x8237 "push"
                                       [|(Ojs.float_to_js x8238)|])
                              | None -> ());
                             x8237))|])
    let (toLocaleString : 'tags this -> string) =
      fun (x8243 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x8243) "toLocaleString" [||])
    let (toString : 'tags this -> string) =
      fun (x8245 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x8245) "toString" [||])
    let (valueOf : 'tags this -> t) =
      fun (x8247 : 'tags this) ->
        t_of_js (Ojs.call (this_to_js Obj.magic x8247) "valueOf" [||])
    let (get : 'tags this -> float -> float) =
      fun (x8249 : 'tags this) ->
        fun (x8251 : float) ->
          Ojs.float_of_js
            (Ojs.get_prop (this_to_js Obj.magic x8249)
               (Ojs.float_to_js x8251))
    let (set : 'tags this -> float -> float -> unit) =
      fun (x8252 : 'tags this) ->
        fun (x8254 : float) ->
          fun (x8255 : float) ->
            Ojs.set_prop (this_to_js Obj.magic x8252) (Ojs.float_to_js x8254)
              (Ojs.float_to_js x8255)
    let (create : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Uint8Array") [||])
    let (create' : float Iterable.t -> t) =
      fun (x8256 : float Iterable.t) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Uint8Array")
             [|(Iterable.t_to_js Ojs.float_to_js x8256)|])
    let (from :
      arrayLike:float Iterable.t ->
        ?mapfn:(v:float -> k:float -> float) -> ?thisArg:any -> unit -> t)
      =
      fun ~arrayLike:(x8258 : float Iterable.t) ->
        fun ?mapfn:(x8259 : (v:float -> k:float -> float) option) ->
          fun ?thisArg:(x8260 : any option) ->
            fun () ->
              t_of_js
                (let x8267 = Ojs.get_prop_ascii Ojs.global "Uint8Array" in
                 Ojs.call (Ojs.get_prop_ascii x8267 "from") "apply"
                   [|x8267;((let x8261 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8261 "push"
                                  [|(Iterable.t_to_js Ojs.float_to_js x8258)|]);
                             (match x8259 with
                              | Some x8263 ->
                                  ignore
                                    (Ojs.call x8261 "push"
                                       [|(Ojs.fun_to_js 2
                                            (fun (x8264 : Ojs.t) ->
                                               fun (x8265 : Ojs.t) ->
                                                 Ojs.float_to_js
                                                   (x8263
                                                      ~v:(Ojs.float_of_js
                                                            x8264)
                                                      ~k:(Ojs.float_of_js
                                                            x8265))))|])
                              | None -> ());
                             (match x8260 with
                              | Some x8262 ->
                                  ignore
                                    (Ojs.call x8261 "push"
                                       [|(any_to_js x8262)|])
                              | None -> ());
                             x8261))|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Uint8Array")
             "prototype")
    let (create'' : float -> t) =
      fun (x8268 : float) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Uint8Array")
             [|(Ojs.float_to_js x8268)|])
    let (create''' :
      [ `U1 of float ArrayLike.t  | `U2 of ArrayBufferLike.t ] -> t) =
      fun (x8269 : [ `U1 of float ArrayLike.t  | `U2 of ArrayBufferLike.t ])
        ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Uint8Array")
             [|((match x8269 with
                 | `U1 x8270 -> ArrayLike.t_to_js Ojs.float_to_js x8270
                 | `U2 x8272 -> ArrayBufferLike.t_to_js x8272))|])
    let (create'''' :
      buffer:ArrayBufferLike.t ->
        ?byteOffset:float -> ?length:float -> unit -> t)
      =
      fun ~buffer:(x8273 : ArrayBufferLike.t) ->
        fun ?byteOffset:(x8274 : float option) ->
          fun ?length:(x8275 : float option) ->
            fun () ->
              t_of_js
                (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "Uint8Array")
                   (let x8276 =
                      Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                        [||] in
                    ignore
                      (Ojs.call x8276 "push"
                         [|(ArrayBufferLike.t_to_js x8273)|]);
                    (match x8274 with
                     | Some x8278 ->
                         ignore
                           (Ojs.call x8276 "push" [|(Ojs.float_to_js x8278)|])
                     | None -> ());
                    (match x8275 with
                     | Some x8277 ->
                         ignore
                           (Ojs.call x8276 "push" [|(Ojs.float_to_js x8277)|])
                     | None -> ());
                    x8276))
    let (bytes_per_element : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Uint8Array")
             "BYTES_PER_ELEMENT")
    let (of_ : float list -> t) =
      fun (x8279 : float list) ->
        t_of_js
          (let x8282 = Ojs.get_prop_ascii Ojs.global "Uint8Array" in
           Ojs.call (Ojs.get_prop_ascii x8282 "of") "apply"
             [|x8282;((let x8280 =
                         Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                           [||] in
                       List.iter
                         (fun (x8281 : float) ->
                            ignore
                              (Ojs.call x8280 "push"
                                 [|(Ojs.float_to_js x8281)|])) x8279;
                       x8280))|])
    let (from' : float ArrayLike.t -> t) =
      fun (x8283 : float ArrayLike.t) ->
        t_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Uint8Array") "from"
             [|(ArrayLike.t_to_js Ojs.float_to_js x8283)|])
    let (from'' :
      arrayLike:'T ArrayLike.t ->
        mapfn:(v:'T -> k:float -> float) -> ?thisArg:any -> unit -> t)
      =
      fun ~arrayLike:(x8285 : 'T ArrayLike.t) ->
        fun ~mapfn:(x8286 : v:'T -> k:float -> float) ->
          fun ?thisArg:(x8287 : any option) ->
            fun () ->
              t_of_js
                (let x8293 = Ojs.get_prop_ascii Ojs.global "Uint8Array" in
                 Ojs.call (Ojs.get_prop_ascii x8293 "from") "apply"
                   [|x8293;((let x8288 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8288 "push"
                                  [|(ArrayLike.t_to_js Obj.magic x8285)|]);
                             ignore
                               (Ojs.call x8288 "push"
                                  [|(Ojs.fun_to_js 2
                                       (fun (x8290 : Ojs.t) ->
                                          fun (x8291 : Ojs.t) ->
                                            Ojs.float_to_js
                                              (x8286 ~v:(Obj.magic x8290)
                                                 ~k:(Ojs.float_of_js x8291))))|]);
                             (match x8287 with
                              | Some x8289 ->
                                  ignore
                                    (Ojs.call x8288 "push"
                                       [|(any_to_js x8289)|])
                              | None -> ());
                             x8288))|])
    let cast_from = Obj.magic
  end
module Int8Array =
  struct
    type t = [ `Int8Array ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type tags = [ `Int8Array ]
    type 'tags this = 'tags intf constraint 'tags = [> `Int8Array ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x8296 : Ojs.t) -> intf_of_js __tags_of_js x8296
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x8294 : __tags intf) -> intf_to_js __tags_to_js x8294
    let (findLast :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> bool) ->
          ?thisArg:any -> unit -> 'S option)
      =
      fun (x8305 : 'tags this) ->
        fun
          ~predicate:(x8298 : value:float -> index:float -> array:t -> bool)
          ->
          fun ?thisArg:(x8299 : any option) ->
            fun () ->
              Ojs.option_of_js Obj.magic
                (let x8307 = this_to_js Obj.magic x8305 in
                 Ojs.call (Ojs.get_prop_ascii x8307 "findLast") "apply"
                   [|x8307;((let x8300 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8300 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x8302 : Ojs.t) ->
                                          fun (x8303 : Ojs.t) ->
                                            fun (x8304 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x8298
                                                   ~value:(Ojs.float_of_js
                                                             x8302)
                                                   ~index:(Ojs.float_of_js
                                                             x8303)
                                                   ~array:(t_of_js x8304))))|]);
                             (match x8299 with
                              | Some x8301 ->
                                  ignore
                                    (Ojs.call x8300 "push"
                                       [|(any_to_js x8301)|])
                              | None -> ());
                             x8300))|])
    let (findLast' :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> float option)
      =
      fun (x8316 : 'tags this) ->
        fun
          ~predicate:(x8309 :
                       value:float -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x8310 : any option) ->
            fun () ->
              Ojs.option_of_js Ojs.float_of_js
                (let x8318 = this_to_js Obj.magic x8316 in
                 Ojs.call (Ojs.get_prop_ascii x8318 "findLast") "apply"
                   [|x8318;((let x8311 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8311 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x8313 : Ojs.t) ->
                                          fun (x8314 : Ojs.t) ->
                                            fun (x8315 : Ojs.t) ->
                                              unknown_to_js
                                                (x8309
                                                   ~value:(Ojs.float_of_js
                                                             x8313)
                                                   ~index:(Ojs.float_of_js
                                                             x8314)
                                                   ~array:(t_of_js x8315))))|]);
                             (match x8310 with
                              | Some x8312 ->
                                  ignore
                                    (Ojs.call x8311 "push"
                                       [|(any_to_js x8312)|])
                              | None -> ());
                             x8311))|])
    let (findLastIndex :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> float)
      =
      fun (x8327 : 'tags this) ->
        fun
          ~predicate:(x8320 :
                       value:float -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x8321 : any option) ->
            fun () ->
              Ojs.float_of_js
                (let x8329 = this_to_js Obj.magic x8327 in
                 Ojs.call (Ojs.get_prop_ascii x8329 "findLastIndex") "apply"
                   [|x8329;((let x8322 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8322 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x8324 : Ojs.t) ->
                                          fun (x8325 : Ojs.t) ->
                                            fun (x8326 : Ojs.t) ->
                                              unknown_to_js
                                                (x8320
                                                   ~value:(Ojs.float_of_js
                                                             x8324)
                                                   ~index:(Ojs.float_of_js
                                                             x8325)
                                                   ~array:(t_of_js x8326))))|]);
                             (match x8321 with
                              | Some x8323 ->
                                  ignore
                                    (Ojs.call x8322 "push"
                                       [|(any_to_js x8323)|])
                              | None -> ());
                             x8322))|])
    let (toReversed : 'tags this -> Uint8Array.t) =
      fun (x8330 : 'tags this) ->
        Uint8Array.t_of_js
          (Ojs.call (this_to_js Obj.magic x8330) "toReversed" [||])
    let (toSorted :
      'tags this ->
        ?compareFn:(a:float -> b:float -> float) -> unit -> Uint8Array.t)
      =
      fun (x8337 : 'tags this) ->
        fun ?compareFn:(x8332 : (a:float -> b:float -> float) option) ->
          fun () ->
            Uint8Array.t_of_js
              (let x8339 = this_to_js Obj.magic x8337 in
               Ojs.call (Ojs.get_prop_ascii x8339 "toSorted") "apply"
                 [|x8339;((let x8333 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x8332 with
                            | Some x8334 ->
                                ignore
                                  (Ojs.call x8333 "push"
                                     [|(Ojs.fun_to_js 2
                                          (fun (x8335 : Ojs.t) ->
                                             fun (x8336 : Ojs.t) ->
                                               Ojs.float_to_js
                                                 (x8334
                                                    ~a:(Ojs.float_of_js x8335)
                                                    ~b:(Ojs.float_of_js x8336))))|])
                            | None -> ());
                           x8333))|])
    let (with_ : 'tags this -> index:float -> value:float -> Uint8Array.t) =
      fun (x8342 : 'tags this) ->
        fun ~index:(x8340 : float) ->
          fun ~value:(x8341 : float) ->
            Uint8Array.t_of_js
              (Ojs.call (this_to_js Obj.magic x8342) "with"
                 [|(Ojs.float_to_js x8340);(Ojs.float_to_js x8341)|])
    let (at : 'tags this -> index:float -> float option) =
      fun (x8345 : 'tags this) ->
        fun ~index:(x8344 : float) ->
          Ojs.option_of_js Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x8345) "at"
               [|(Ojs.float_to_js x8344)|])
    let (includes :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> bool)
      =
      fun (x8352 : 'tags this) ->
        fun ~searchElement:(x8348 : float) ->
          fun ?fromIndex:(x8349 : float option) ->
            fun () ->
              Ojs.bool_of_js
                (let x8354 = this_to_js Obj.magic x8352 in
                 Ojs.call (Ojs.get_prop_ascii x8354 "includes") "apply"
                   [|x8354;((let x8350 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8350 "push"
                                  [|(Ojs.float_to_js x8348)|]);
                             (match x8349 with
                              | Some x8351 ->
                                  ignore
                                    (Ojs.call x8350 "push"
                                       [|(Ojs.float_to_js x8351)|])
                              | None -> ());
                             x8350))|])
    let (entries : 'tags this -> (float * float) IterableIterator.t) =
      fun (x8355 : 'tags this) ->
        IterableIterator.t_of_js
          (fun (x8357 : Ojs.t) ->
             let x8358 = x8357 in
             ((Ojs.float_of_js (Ojs.array_get x8358 0)),
               (Ojs.float_of_js (Ojs.array_get x8358 1))))
          (Ojs.call (this_to_js Obj.magic x8355) "entries" [||])
    let (keys : 'tags this -> float IterableIterator.t) =
      fun (x8359 : 'tags this) ->
        IterableIterator.t_of_js Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x8359) "keys" [||])
    let (values : 'tags this -> float IterableIterator.t) =
      fun (x8362 : 'tags this) ->
        IterableIterator.t_of_js Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x8362) "values" [||])
    let (get_BYTES_PER_ELEMENT : 'tags this -> float) =
      fun (x8365 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x8365)
             "BYTES_PER_ELEMENT")
    let (get_buffer : 'tags this -> ArrayBufferLike.t) =
      fun (x8367 : 'tags this) ->
        ArrayBufferLike.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x8367) "buffer")
    let (get_byteLength : 'tags this -> float) =
      fun (x8369 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x8369) "byteLength")
    let (get_byteOffset : 'tags this -> float) =
      fun (x8371 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x8371) "byteOffset")
    let (copyWithin :
      'tags this ->
        target:float -> start:float -> ?end_:float -> unit -> 'tags this)
      =
      fun (x8378 : 'tags this) ->
        fun ~target:(x8373 : float) ->
          fun ~start:(x8374 : float) ->
            fun ?end_:(x8375 : float option) ->
              fun () ->
                this_of_js Obj.magic
                  (let x8380 = this_to_js Obj.magic x8378 in
                   Ojs.call (Ojs.get_prop_ascii x8380 "copyWithin") "apply"
                     [|x8380;((let x8376 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x8376 "push"
                                    [|(Ojs.float_to_js x8373)|]);
                               ignore
                                 (Ojs.call x8376 "push"
                                    [|(Ojs.float_to_js x8374)|]);
                               (match x8375 with
                                | Some x8377 ->
                                    ignore
                                      (Ojs.call x8376 "push"
                                         [|(Ojs.float_to_js x8377)|])
                                | None -> ());
                               x8376))|])
    let (every :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x8389 : 'tags this) ->
        fun
          ~predicate:(x8382 :
                       value:float -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x8383 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x8391 = this_to_js Obj.magic x8389 in
                 Ojs.call (Ojs.get_prop_ascii x8391 "every") "apply"
                   [|x8391;((let x8384 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8384 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x8386 : Ojs.t) ->
                                          fun (x8387 : Ojs.t) ->
                                            fun (x8388 : Ojs.t) ->
                                              unknown_to_js
                                                (x8382
                                                   ~value:(Ojs.float_of_js
                                                             x8386)
                                                   ~index:(Ojs.float_of_js
                                                             x8387)
                                                   ~array:(t_of_js x8388))))|]);
                             (match x8383 with
                              | Some x8385 ->
                                  ignore
                                    (Ojs.call x8384 "push"
                                       [|(any_to_js x8385)|])
                              | None -> ());
                             x8384))|])
    let (fill :
      'tags this ->
        value:float -> ?start:float -> ?end_:float -> unit -> 'tags this)
      =
      fun (x8398 : 'tags this) ->
        fun ~value:(x8392 : float) ->
          fun ?start:(x8393 : float option) ->
            fun ?end_:(x8394 : float option) ->
              fun () ->
                this_of_js Obj.magic
                  (let x8400 = this_to_js Obj.magic x8398 in
                   Ojs.call (Ojs.get_prop_ascii x8400 "fill") "apply"
                     [|x8400;((let x8395 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x8395 "push"
                                    [|(Ojs.float_to_js x8392)|]);
                               (match x8393 with
                                | Some x8397 ->
                                    ignore
                                      (Ojs.call x8395 "push"
                                         [|(Ojs.float_to_js x8397)|])
                                | None -> ());
                               (match x8394 with
                                | Some x8396 ->
                                    ignore
                                      (Ojs.call x8395 "push"
                                         [|(Ojs.float_to_js x8396)|])
                                | None -> ());
                               x8395))|])
    let (filter :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> any) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x8409 : 'tags this) ->
        fun ~predicate:(x8402 : value:float -> index:float -> array:t -> any)
          ->
          fun ?thisArg:(x8403 : any option) ->
            fun () ->
              t_of_js
                (let x8411 = this_to_js Obj.magic x8409 in
                 Ojs.call (Ojs.get_prop_ascii x8411 "filter") "apply"
                   [|x8411;((let x8404 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8404 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x8406 : Ojs.t) ->
                                          fun (x8407 : Ojs.t) ->
                                            fun (x8408 : Ojs.t) ->
                                              any_to_js
                                                (x8402
                                                   ~value:(Ojs.float_of_js
                                                             x8406)
                                                   ~index:(Ojs.float_of_js
                                                             x8407)
                                                   ~array:(t_of_js x8408))))|]);
                             (match x8403 with
                              | Some x8405 ->
                                  ignore
                                    (Ojs.call x8404 "push"
                                       [|(any_to_js x8405)|])
                              | None -> ());
                             x8404))|])
    let (find :
      'tags this ->
        predicate:(value:float -> index:float -> obj:t -> bool) ->
          ?thisArg:any -> unit -> float option)
      =
      fun (x8419 : 'tags this) ->
        fun ~predicate:(x8412 : value:float -> index:float -> obj:t -> bool)
          ->
          fun ?thisArg:(x8413 : any option) ->
            fun () ->
              Ojs.option_of_js Ojs.float_of_js
                (let x8421 = this_to_js Obj.magic x8419 in
                 Ojs.call (Ojs.get_prop_ascii x8421 "find") "apply"
                   [|x8421;((let x8414 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8414 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x8416 : Ojs.t) ->
                                          fun (x8417 : Ojs.t) ->
                                            fun (x8418 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x8412
                                                   ~value:(Ojs.float_of_js
                                                             x8416)
                                                   ~index:(Ojs.float_of_js
                                                             x8417)
                                                   ~obj:(t_of_js x8418))))|]);
                             (match x8413 with
                              | Some x8415 ->
                                  ignore
                                    (Ojs.call x8414 "push"
                                       [|(any_to_js x8415)|])
                              | None -> ());
                             x8414))|])
    let (findIndex :
      'tags this ->
        predicate:(value:float -> index:float -> obj:t -> bool) ->
          ?thisArg:any -> unit -> float)
      =
      fun (x8430 : 'tags this) ->
        fun ~predicate:(x8423 : value:float -> index:float -> obj:t -> bool)
          ->
          fun ?thisArg:(x8424 : any option) ->
            fun () ->
              Ojs.float_of_js
                (let x8432 = this_to_js Obj.magic x8430 in
                 Ojs.call (Ojs.get_prop_ascii x8432 "findIndex") "apply"
                   [|x8432;((let x8425 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8425 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x8427 : Ojs.t) ->
                                          fun (x8428 : Ojs.t) ->
                                            fun (x8429 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x8423
                                                   ~value:(Ojs.float_of_js
                                                             x8427)
                                                   ~index:(Ojs.float_of_js
                                                             x8428)
                                                   ~obj:(t_of_js x8429))))|]);
                             (match x8424 with
                              | Some x8426 ->
                                  ignore
                                    (Ojs.call x8425 "push"
                                       [|(any_to_js x8426)|])
                              | None -> ());
                             x8425))|])
    let (forEach :
      'tags this ->
        callbackfn:(value:float -> index:float -> array:t -> unit) ->
          ?thisArg:any -> unit -> unit)
      =
      fun (x8440 : 'tags this) ->
        fun
          ~callbackfn:(x8433 : value:float -> index:float -> array:t -> unit)
          ->
          fun ?thisArg:(x8434 : any option) ->
            fun () ->
              ignore
                (let x8442 = this_to_js Obj.magic x8440 in
                 Ojs.call (Ojs.get_prop_ascii x8442 "forEach") "apply"
                   [|x8442;((let x8435 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8435 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x8437 : Ojs.t) ->
                                          fun (x8438 : Ojs.t) ->
                                            fun (x8439 : Ojs.t) ->
                                              x8433
                                                ~value:(Ojs.float_of_js x8437)
                                                ~index:(Ojs.float_of_js x8438)
                                                ~array:(t_of_js x8439)))|]);
                             (match x8434 with
                              | Some x8436 ->
                                  ignore
                                    (Ojs.call x8435 "push"
                                       [|(any_to_js x8436)|])
                              | None -> ());
                             x8435))|])
    let (indexOf :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> float)
      =
      fun (x8447 : 'tags this) ->
        fun ~searchElement:(x8443 : float) ->
          fun ?fromIndex:(x8444 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x8449 = this_to_js Obj.magic x8447 in
                 Ojs.call (Ojs.get_prop_ascii x8449 "indexOf") "apply"
                   [|x8449;((let x8445 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8445 "push"
                                  [|(Ojs.float_to_js x8443)|]);
                             (match x8444 with
                              | Some x8446 ->
                                  ignore
                                    (Ojs.call x8445 "push"
                                       [|(Ojs.float_to_js x8446)|])
                              | None -> ());
                             x8445))|])
    let (join : 'tags this -> ?separator:string -> unit -> string) =
      fun (x8453 : 'tags this) ->
        fun ?separator:(x8450 : string option) ->
          fun () ->
            Ojs.string_of_js
              (let x8455 = this_to_js Obj.magic x8453 in
               Ojs.call (Ojs.get_prop_ascii x8455 "join") "apply"
                 [|x8455;((let x8451 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x8450 with
                            | Some x8452 ->
                                ignore
                                  (Ojs.call x8451 "push"
                                     [|(Ojs.string_to_js x8452)|])
                            | None -> ());
                           x8451))|])
    let (lastIndexOf :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> float)
      =
      fun (x8460 : 'tags this) ->
        fun ~searchElement:(x8456 : float) ->
          fun ?fromIndex:(x8457 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x8462 = this_to_js Obj.magic x8460 in
                 Ojs.call (Ojs.get_prop_ascii x8462 "lastIndexOf") "apply"
                   [|x8462;((let x8458 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8458 "push"
                                  [|(Ojs.float_to_js x8456)|]);
                             (match x8457 with
                              | Some x8459 ->
                                  ignore
                                    (Ojs.call x8458 "push"
                                       [|(Ojs.float_to_js x8459)|])
                              | None -> ());
                             x8458))|])
    let (get_length : 'tags this -> float) =
      fun (x8463 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x8463) "length")
    let (map :
      'tags this ->
        callbackfn:(value:float -> index:float -> array:t -> float) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x8472 : 'tags this) ->
        fun
          ~callbackfn:(x8465 :
                        value:float -> index:float -> array:t -> float)
          ->
          fun ?thisArg:(x8466 : any option) ->
            fun () ->
              t_of_js
                (let x8474 = this_to_js Obj.magic x8472 in
                 Ojs.call (Ojs.get_prop_ascii x8474 "map") "apply"
                   [|x8474;((let x8467 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8467 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x8469 : Ojs.t) ->
                                          fun (x8470 : Ojs.t) ->
                                            fun (x8471 : Ojs.t) ->
                                              Ojs.float_to_js
                                                (x8465
                                                   ~value:(Ojs.float_of_js
                                                             x8469)
                                                   ~index:(Ojs.float_of_js
                                                             x8470)
                                                   ~array:(t_of_js x8471))))|]);
                             (match x8466 with
                              | Some x8468 ->
                                  ignore
                                    (Ojs.call x8467 "push"
                                       [|(any_to_js x8468)|])
                              | None -> ());
                             x8467))|])
    let (reduce :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> float)
      =
      fun (x8480 : 'tags this) ->
        fun
          ~callbackfn:(x8475 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x8480) "reduce"
               [|(Ojs.fun_to_js 4
                    (fun (x8476 : Ojs.t) ->
                       fun (x8477 : Ojs.t) ->
                         fun (x8478 : Ojs.t) ->
                           fun (x8479 : Ojs.t) ->
                             Ojs.float_to_js
                               (x8475 ~previousValue:(Ojs.float_of_js x8476)
                                  ~currentValue:(Ojs.float_of_js x8477)
                                  ~currentIndex:(Ojs.float_of_js x8478)
                                  ~array:(t_of_js x8479))))|])
    let (reduce' :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> initialValue:float -> float)
      =
      fun (x8488 : 'tags this) ->
        fun
          ~callbackfn:(x8482 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          fun ~initialValue:(x8487 : float) ->
            Ojs.float_of_js
              (Ojs.call (this_to_js Obj.magic x8488) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x8483 : Ojs.t) ->
                         fun (x8484 : Ojs.t) ->
                           fun (x8485 : Ojs.t) ->
                             fun (x8486 : Ojs.t) ->
                               Ojs.float_to_js
                                 (x8482
                                    ~previousValue:(Ojs.float_of_js x8483)
                                    ~currentValue:(Ojs.float_of_js x8484)
                                    ~currentIndex:(Ojs.float_of_js x8485)
                                    ~array:(t_of_js x8486))));(Ojs.float_to_js
                                                                 x8487)|])
    let (reduce'' :
      'tags this ->
        callbackfn:(previousValue:'U ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x8496 : 'tags this) ->
        fun
          ~callbackfn:(x8490 :
                        previousValue:'U ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x8495 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic x8496) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x8491 : Ojs.t) ->
                         fun (x8492 : Ojs.t) ->
                           fun (x8493 : Ojs.t) ->
                             fun (x8494 : Ojs.t) ->
                               Obj.magic
                                 (x8490 ~previousValue:(Obj.magic x8491)
                                    ~currentValue:(Ojs.float_of_js x8492)
                                    ~currentIndex:(Ojs.float_of_js x8493)
                                    ~array:(t_of_js x8494))));(Obj.magic
                                                                 x8495)|])
    let (reduceRight :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> float)
      =
      fun (x8503 : 'tags this) ->
        fun
          ~callbackfn:(x8498 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x8503) "reduceRight"
               [|(Ojs.fun_to_js 4
                    (fun (x8499 : Ojs.t) ->
                       fun (x8500 : Ojs.t) ->
                         fun (x8501 : Ojs.t) ->
                           fun (x8502 : Ojs.t) ->
                             Ojs.float_to_js
                               (x8498 ~previousValue:(Ojs.float_of_js x8499)
                                  ~currentValue:(Ojs.float_of_js x8500)
                                  ~currentIndex:(Ojs.float_of_js x8501)
                                  ~array:(t_of_js x8502))))|])
    let (reduceRight' :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> initialValue:float -> float)
      =
      fun (x8511 : 'tags this) ->
        fun
          ~callbackfn:(x8505 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          fun ~initialValue:(x8510 : float) ->
            Ojs.float_of_js
              (Ojs.call (this_to_js Obj.magic x8511) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x8506 : Ojs.t) ->
                         fun (x8507 : Ojs.t) ->
                           fun (x8508 : Ojs.t) ->
                             fun (x8509 : Ojs.t) ->
                               Ojs.float_to_js
                                 (x8505
                                    ~previousValue:(Ojs.float_of_js x8506)
                                    ~currentValue:(Ojs.float_of_js x8507)
                                    ~currentIndex:(Ojs.float_of_js x8508)
                                    ~array:(t_of_js x8509))));(Ojs.float_to_js
                                                                 x8510)|])
    let (reduceRight'' :
      'tags this ->
        callbackfn:(previousValue:'U ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x8519 : 'tags this) ->
        fun
          ~callbackfn:(x8513 :
                        previousValue:'U ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x8518 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic x8519) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x8514 : Ojs.t) ->
                         fun (x8515 : Ojs.t) ->
                           fun (x8516 : Ojs.t) ->
                             fun (x8517 : Ojs.t) ->
                               Obj.magic
                                 (x8513 ~previousValue:(Obj.magic x8514)
                                    ~currentValue:(Ojs.float_of_js x8515)
                                    ~currentIndex:(Ojs.float_of_js x8516)
                                    ~array:(t_of_js x8517))));(Obj.magic
                                                                 x8518)|])
    let (reverse : 'tags this -> t) =
      fun (x8521 : 'tags this) ->
        t_of_js (Ojs.call (this_to_js Obj.magic x8521) "reverse" [||])
    let (set_ :
      'tags this -> array:float ArrayLike.t -> ?offset:float -> unit -> unit)
      =
      fun (x8528 : 'tags this) ->
        fun ~array:(x8523 : float ArrayLike.t) ->
          fun ?offset:(x8524 : float option) ->
            fun () ->
              ignore
                (let x8530 = this_to_js Obj.magic x8528 in
                 Ojs.call (Ojs.get_prop_ascii x8530 "set") "apply"
                   [|x8530;((let x8525 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8525 "push"
                                  [|(ArrayLike.t_to_js Ojs.float_to_js x8523)|]);
                             (match x8524 with
                              | Some x8526 ->
                                  ignore
                                    (Ojs.call x8525 "push"
                                       [|(Ojs.float_to_js x8526)|])
                              | None -> ());
                             x8525))|])
    let (slice : 'tags this -> ?start:float -> ?end_:float -> unit -> t) =
      fun (x8536 : 'tags this) ->
        fun ?start:(x8531 : float option) ->
          fun ?end_:(x8532 : float option) ->
            fun () ->
              t_of_js
                (let x8538 = this_to_js Obj.magic x8536 in
                 Ojs.call (Ojs.get_prop_ascii x8538 "slice") "apply"
                   [|x8538;((let x8533 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x8531 with
                              | Some x8535 ->
                                  ignore
                                    (Ojs.call x8533 "push"
                                       [|(Ojs.float_to_js x8535)|])
                              | None -> ());
                             (match x8532 with
                              | Some x8534 ->
                                  ignore
                                    (Ojs.call x8533 "push"
                                       [|(Ojs.float_to_js x8534)|])
                              | None -> ());
                             x8533))|])
    let (some :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x8546 : 'tags this) ->
        fun
          ~predicate:(x8539 :
                       value:float -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x8540 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x8548 = this_to_js Obj.magic x8546 in
                 Ojs.call (Ojs.get_prop_ascii x8548 "some") "apply"
                   [|x8548;((let x8541 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8541 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x8543 : Ojs.t) ->
                                          fun (x8544 : Ojs.t) ->
                                            fun (x8545 : Ojs.t) ->
                                              unknown_to_js
                                                (x8539
                                                   ~value:(Ojs.float_of_js
                                                             x8543)
                                                   ~index:(Ojs.float_of_js
                                                             x8544)
                                                   ~array:(t_of_js x8545))))|]);
                             (match x8540 with
                              | Some x8542 ->
                                  ignore
                                    (Ojs.call x8541 "push"
                                       [|(any_to_js x8542)|])
                              | None -> ());
                             x8541))|])
    let (sort :
      'tags this ->
        ?compareFn:(a:float -> b:float -> float) -> unit -> 'tags this)
      =
      fun (x8554 : 'tags this) ->
        fun ?compareFn:(x8549 : (a:float -> b:float -> float) option) ->
          fun () ->
            this_of_js Obj.magic
              (let x8556 = this_to_js Obj.magic x8554 in
               Ojs.call (Ojs.get_prop_ascii x8556 "sort") "apply"
                 [|x8556;((let x8550 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x8549 with
                            | Some x8551 ->
                                ignore
                                  (Ojs.call x8550 "push"
                                     [|(Ojs.fun_to_js 2
                                          (fun (x8552 : Ojs.t) ->
                                             fun (x8553 : Ojs.t) ->
                                               Ojs.float_to_js
                                                 (x8551
                                                    ~a:(Ojs.float_of_js x8552)
                                                    ~b:(Ojs.float_of_js x8553))))|])
                            | None -> ());
                           x8550))|])
    let (subarray : 'tags this -> ?begin_:float -> ?end_:float -> unit -> t)
      =
      fun (x8563 : 'tags this) ->
        fun ?begin_:(x8558 : float option) ->
          fun ?end_:(x8559 : float option) ->
            fun () ->
              t_of_js
                (let x8565 = this_to_js Obj.magic x8563 in
                 Ojs.call (Ojs.get_prop_ascii x8565 "subarray") "apply"
                   [|x8565;((let x8560 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x8558 with
                              | Some x8562 ->
                                  ignore
                                    (Ojs.call x8560 "push"
                                       [|(Ojs.float_to_js x8562)|])
                              | None -> ());
                             (match x8559 with
                              | Some x8561 ->
                                  ignore
                                    (Ojs.call x8560 "push"
                                       [|(Ojs.float_to_js x8561)|])
                              | None -> ());
                             x8560))|])
    let (toLocaleString : 'tags this -> string) =
      fun (x8566 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x8566) "toLocaleString" [||])
    let (toString : 'tags this -> string) =
      fun (x8568 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x8568) "toString" [||])
    let (valueOf : 'tags this -> t) =
      fun (x8570 : 'tags this) ->
        t_of_js (Ojs.call (this_to_js Obj.magic x8570) "valueOf" [||])
    let (get : 'tags this -> float -> float) =
      fun (x8572 : 'tags this) ->
        fun (x8574 : float) ->
          Ojs.float_of_js
            (Ojs.get_prop (this_to_js Obj.magic x8572)
               (Ojs.float_to_js x8574))
    let (set : 'tags this -> float -> float -> unit) =
      fun (x8575 : 'tags this) ->
        fun (x8577 : float) ->
          fun (x8578 : float) ->
            Ojs.set_prop (this_to_js Obj.magic x8575) (Ojs.float_to_js x8577)
              (Ojs.float_to_js x8578)
    let (create : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Int8Array") [||])
    let (create' : float Iterable.t -> t) =
      fun (x8579 : float Iterable.t) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Int8Array")
             [|(Iterable.t_to_js Ojs.float_to_js x8579)|])
    let (from :
      arrayLike:float Iterable.t ->
        ?mapfn:(v:float -> k:float -> float) -> ?thisArg:any -> unit -> t)
      =
      fun ~arrayLike:(x8581 : float Iterable.t) ->
        fun ?mapfn:(x8582 : (v:float -> k:float -> float) option) ->
          fun ?thisArg:(x8583 : any option) ->
            fun () ->
              t_of_js
                (let x8590 = Ojs.get_prop_ascii Ojs.global "Int8Array" in
                 Ojs.call (Ojs.get_prop_ascii x8590 "from") "apply"
                   [|x8590;((let x8584 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8584 "push"
                                  [|(Iterable.t_to_js Ojs.float_to_js x8581)|]);
                             (match x8582 with
                              | Some x8586 ->
                                  ignore
                                    (Ojs.call x8584 "push"
                                       [|(Ojs.fun_to_js 2
                                            (fun (x8587 : Ojs.t) ->
                                               fun (x8588 : Ojs.t) ->
                                                 Ojs.float_to_js
                                                   (x8586
                                                      ~v:(Ojs.float_of_js
                                                            x8587)
                                                      ~k:(Ojs.float_of_js
                                                            x8588))))|])
                              | None -> ());
                             (match x8583 with
                              | Some x8585 ->
                                  ignore
                                    (Ojs.call x8584 "push"
                                       [|(any_to_js x8585)|])
                              | None -> ());
                             x8584))|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Int8Array")
             "prototype")
    let (create'' : float -> t) =
      fun (x8591 : float) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Int8Array")
             [|(Ojs.float_to_js x8591)|])
    let (create''' :
      [ `U1 of float ArrayLike.t  | `U2 of ArrayBufferLike.t ] -> t) =
      fun (x8592 : [ `U1 of float ArrayLike.t  | `U2 of ArrayBufferLike.t ])
        ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Int8Array")
             [|((match x8592 with
                 | `U1 x8593 -> ArrayLike.t_to_js Ojs.float_to_js x8593
                 | `U2 x8595 -> ArrayBufferLike.t_to_js x8595))|])
    let (create'''' :
      buffer:ArrayBufferLike.t ->
        ?byteOffset:float -> ?length:float -> unit -> t)
      =
      fun ~buffer:(x8596 : ArrayBufferLike.t) ->
        fun ?byteOffset:(x8597 : float option) ->
          fun ?length:(x8598 : float option) ->
            fun () ->
              t_of_js
                (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "Int8Array")
                   (let x8599 =
                      Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                        [||] in
                    ignore
                      (Ojs.call x8599 "push"
                         [|(ArrayBufferLike.t_to_js x8596)|]);
                    (match x8597 with
                     | Some x8601 ->
                         ignore
                           (Ojs.call x8599 "push" [|(Ojs.float_to_js x8601)|])
                     | None -> ());
                    (match x8598 with
                     | Some x8600 ->
                         ignore
                           (Ojs.call x8599 "push" [|(Ojs.float_to_js x8600)|])
                     | None -> ());
                    x8599))
    let (bytes_per_element : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Int8Array")
             "BYTES_PER_ELEMENT")
    let (of_ : float list -> t) =
      fun (x8602 : float list) ->
        t_of_js
          (let x8605 = Ojs.get_prop_ascii Ojs.global "Int8Array" in
           Ojs.call (Ojs.get_prop_ascii x8605 "of") "apply"
             [|x8605;((let x8603 =
                         Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                           [||] in
                       List.iter
                         (fun (x8604 : float) ->
                            ignore
                              (Ojs.call x8603 "push"
                                 [|(Ojs.float_to_js x8604)|])) x8602;
                       x8603))|])
    let (from' : float ArrayLike.t -> t) =
      fun (x8606 : float ArrayLike.t) ->
        t_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Int8Array") "from"
             [|(ArrayLike.t_to_js Ojs.float_to_js x8606)|])
    let (from'' :
      arrayLike:'T ArrayLike.t ->
        mapfn:(v:'T -> k:float -> float) -> ?thisArg:any -> unit -> t)
      =
      fun ~arrayLike:(x8608 : 'T ArrayLike.t) ->
        fun ~mapfn:(x8609 : v:'T -> k:float -> float) ->
          fun ?thisArg:(x8610 : any option) ->
            fun () ->
              t_of_js
                (let x8616 = Ojs.get_prop_ascii Ojs.global "Int8Array" in
                 Ojs.call (Ojs.get_prop_ascii x8616 "from") "apply"
                   [|x8616;((let x8611 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8611 "push"
                                  [|(ArrayLike.t_to_js Obj.magic x8608)|]);
                             ignore
                               (Ojs.call x8611 "push"
                                  [|(Ojs.fun_to_js 2
                                       (fun (x8613 : Ojs.t) ->
                                          fun (x8614 : Ojs.t) ->
                                            Ojs.float_to_js
                                              (x8609 ~v:(Obj.magic x8613)
                                                 ~k:(Ojs.float_of_js x8614))))|]);
                             (match x8610 with
                              | Some x8612 ->
                                  ignore
                                    (Ojs.call x8611 "push"
                                       [|(any_to_js x8612)|])
                              | None -> ());
                             x8611))|])
    let cast_from = Obj.magic
  end
module Int32Array =
  struct
    type t = [ `Int32Array ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type tags = [ `Int32Array ]
    type 'tags this = 'tags intf constraint 'tags = [> `Int32Array ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x8619 : Ojs.t) -> intf_of_js __tags_of_js x8619
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x8617 : __tags intf) -> intf_to_js __tags_to_js x8617
    let (findLast :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> bool) ->
          ?thisArg:any -> unit -> 'S option)
      =
      fun (x8628 : 'tags this) ->
        fun
          ~predicate:(x8621 : value:float -> index:float -> array:t -> bool)
          ->
          fun ?thisArg:(x8622 : any option) ->
            fun () ->
              Ojs.option_of_js Obj.magic
                (let x8630 = this_to_js Obj.magic x8628 in
                 Ojs.call (Ojs.get_prop_ascii x8630 "findLast") "apply"
                   [|x8630;((let x8623 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8623 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x8625 : Ojs.t) ->
                                          fun (x8626 : Ojs.t) ->
                                            fun (x8627 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x8621
                                                   ~value:(Ojs.float_of_js
                                                             x8625)
                                                   ~index:(Ojs.float_of_js
                                                             x8626)
                                                   ~array:(t_of_js x8627))))|]);
                             (match x8622 with
                              | Some x8624 ->
                                  ignore
                                    (Ojs.call x8623 "push"
                                       [|(any_to_js x8624)|])
                              | None -> ());
                             x8623))|])
    let (findLast' :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> float option)
      =
      fun (x8639 : 'tags this) ->
        fun
          ~predicate:(x8632 :
                       value:float -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x8633 : any option) ->
            fun () ->
              Ojs.option_of_js Ojs.float_of_js
                (let x8641 = this_to_js Obj.magic x8639 in
                 Ojs.call (Ojs.get_prop_ascii x8641 "findLast") "apply"
                   [|x8641;((let x8634 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8634 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x8636 : Ojs.t) ->
                                          fun (x8637 : Ojs.t) ->
                                            fun (x8638 : Ojs.t) ->
                                              unknown_to_js
                                                (x8632
                                                   ~value:(Ojs.float_of_js
                                                             x8636)
                                                   ~index:(Ojs.float_of_js
                                                             x8637)
                                                   ~array:(t_of_js x8638))))|]);
                             (match x8633 with
                              | Some x8635 ->
                                  ignore
                                    (Ojs.call x8634 "push"
                                       [|(any_to_js x8635)|])
                              | None -> ());
                             x8634))|])
    let (findLastIndex :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> float)
      =
      fun (x8650 : 'tags this) ->
        fun
          ~predicate:(x8643 :
                       value:float -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x8644 : any option) ->
            fun () ->
              Ojs.float_of_js
                (let x8652 = this_to_js Obj.magic x8650 in
                 Ojs.call (Ojs.get_prop_ascii x8652 "findLastIndex") "apply"
                   [|x8652;((let x8645 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8645 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x8647 : Ojs.t) ->
                                          fun (x8648 : Ojs.t) ->
                                            fun (x8649 : Ojs.t) ->
                                              unknown_to_js
                                                (x8643
                                                   ~value:(Ojs.float_of_js
                                                             x8647)
                                                   ~index:(Ojs.float_of_js
                                                             x8648)
                                                   ~array:(t_of_js x8649))))|]);
                             (match x8644 with
                              | Some x8646 ->
                                  ignore
                                    (Ojs.call x8645 "push"
                                       [|(any_to_js x8646)|])
                              | None -> ());
                             x8645))|])
    let (toReversed : 'tags this -> t) =
      fun (x8653 : 'tags this) ->
        t_of_js (Ojs.call (this_to_js Obj.magic x8653) "toReversed" [||])
    let (toSorted :
      'tags this -> ?compareFn:(a:float -> b:float -> float) -> unit -> t) =
      fun (x8660 : 'tags this) ->
        fun ?compareFn:(x8655 : (a:float -> b:float -> float) option) ->
          fun () ->
            t_of_js
              (let x8662 = this_to_js Obj.magic x8660 in
               Ojs.call (Ojs.get_prop_ascii x8662 "toSorted") "apply"
                 [|x8662;((let x8656 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x8655 with
                            | Some x8657 ->
                                ignore
                                  (Ojs.call x8656 "push"
                                     [|(Ojs.fun_to_js 2
                                          (fun (x8658 : Ojs.t) ->
                                             fun (x8659 : Ojs.t) ->
                                               Ojs.float_to_js
                                                 (x8657
                                                    ~a:(Ojs.float_of_js x8658)
                                                    ~b:(Ojs.float_of_js x8659))))|])
                            | None -> ());
                           x8656))|])
    let (with_ : 'tags this -> index:float -> value:float -> t) =
      fun (x8665 : 'tags this) ->
        fun ~index:(x8663 : float) ->
          fun ~value:(x8664 : float) ->
            t_of_js
              (Ojs.call (this_to_js Obj.magic x8665) "with"
                 [|(Ojs.float_to_js x8663);(Ojs.float_to_js x8664)|])
    let (at : 'tags this -> index:float -> float option) =
      fun (x8668 : 'tags this) ->
        fun ~index:(x8667 : float) ->
          Ojs.option_of_js Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x8668) "at"
               [|(Ojs.float_to_js x8667)|])
    let (includes :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> bool)
      =
      fun (x8675 : 'tags this) ->
        fun ~searchElement:(x8671 : float) ->
          fun ?fromIndex:(x8672 : float option) ->
            fun () ->
              Ojs.bool_of_js
                (let x8677 = this_to_js Obj.magic x8675 in
                 Ojs.call (Ojs.get_prop_ascii x8677 "includes") "apply"
                   [|x8677;((let x8673 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8673 "push"
                                  [|(Ojs.float_to_js x8671)|]);
                             (match x8672 with
                              | Some x8674 ->
                                  ignore
                                    (Ojs.call x8673 "push"
                                       [|(Ojs.float_to_js x8674)|])
                              | None -> ());
                             x8673))|])
    let (entries : 'tags this -> (float * float) IterableIterator.t) =
      fun (x8678 : 'tags this) ->
        IterableIterator.t_of_js
          (fun (x8680 : Ojs.t) ->
             let x8681 = x8680 in
             ((Ojs.float_of_js (Ojs.array_get x8681 0)),
               (Ojs.float_of_js (Ojs.array_get x8681 1))))
          (Ojs.call (this_to_js Obj.magic x8678) "entries" [||])
    let (keys : 'tags this -> float IterableIterator.t) =
      fun (x8682 : 'tags this) ->
        IterableIterator.t_of_js Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x8682) "keys" [||])
    let (values : 'tags this -> float IterableIterator.t) =
      fun (x8685 : 'tags this) ->
        IterableIterator.t_of_js Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x8685) "values" [||])
    let (get_BYTES_PER_ELEMENT : 'tags this -> float) =
      fun (x8688 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x8688)
             "BYTES_PER_ELEMENT")
    let (get_buffer : 'tags this -> ArrayBufferLike.t) =
      fun (x8690 : 'tags this) ->
        ArrayBufferLike.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x8690) "buffer")
    let (get_byteLength : 'tags this -> float) =
      fun (x8692 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x8692) "byteLength")
    let (get_byteOffset : 'tags this -> float) =
      fun (x8694 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x8694) "byteOffset")
    let (copyWithin :
      'tags this ->
        target:float -> start:float -> ?end_:float -> unit -> 'tags this)
      =
      fun (x8701 : 'tags this) ->
        fun ~target:(x8696 : float) ->
          fun ~start:(x8697 : float) ->
            fun ?end_:(x8698 : float option) ->
              fun () ->
                this_of_js Obj.magic
                  (let x8703 = this_to_js Obj.magic x8701 in
                   Ojs.call (Ojs.get_prop_ascii x8703 "copyWithin") "apply"
                     [|x8703;((let x8699 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x8699 "push"
                                    [|(Ojs.float_to_js x8696)|]);
                               ignore
                                 (Ojs.call x8699 "push"
                                    [|(Ojs.float_to_js x8697)|]);
                               (match x8698 with
                                | Some x8700 ->
                                    ignore
                                      (Ojs.call x8699 "push"
                                         [|(Ojs.float_to_js x8700)|])
                                | None -> ());
                               x8699))|])
    let (every :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x8712 : 'tags this) ->
        fun
          ~predicate:(x8705 :
                       value:float -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x8706 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x8714 = this_to_js Obj.magic x8712 in
                 Ojs.call (Ojs.get_prop_ascii x8714 "every") "apply"
                   [|x8714;((let x8707 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8707 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x8709 : Ojs.t) ->
                                          fun (x8710 : Ojs.t) ->
                                            fun (x8711 : Ojs.t) ->
                                              unknown_to_js
                                                (x8705
                                                   ~value:(Ojs.float_of_js
                                                             x8709)
                                                   ~index:(Ojs.float_of_js
                                                             x8710)
                                                   ~array:(t_of_js x8711))))|]);
                             (match x8706 with
                              | Some x8708 ->
                                  ignore
                                    (Ojs.call x8707 "push"
                                       [|(any_to_js x8708)|])
                              | None -> ());
                             x8707))|])
    let (fill :
      'tags this ->
        value:float -> ?start:float -> ?end_:float -> unit -> 'tags this)
      =
      fun (x8721 : 'tags this) ->
        fun ~value:(x8715 : float) ->
          fun ?start:(x8716 : float option) ->
            fun ?end_:(x8717 : float option) ->
              fun () ->
                this_of_js Obj.magic
                  (let x8723 = this_to_js Obj.magic x8721 in
                   Ojs.call (Ojs.get_prop_ascii x8723 "fill") "apply"
                     [|x8723;((let x8718 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x8718 "push"
                                    [|(Ojs.float_to_js x8715)|]);
                               (match x8716 with
                                | Some x8720 ->
                                    ignore
                                      (Ojs.call x8718 "push"
                                         [|(Ojs.float_to_js x8720)|])
                                | None -> ());
                               (match x8717 with
                                | Some x8719 ->
                                    ignore
                                      (Ojs.call x8718 "push"
                                         [|(Ojs.float_to_js x8719)|])
                                | None -> ());
                               x8718))|])
    let (filter :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> any) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x8732 : 'tags this) ->
        fun ~predicate:(x8725 : value:float -> index:float -> array:t -> any)
          ->
          fun ?thisArg:(x8726 : any option) ->
            fun () ->
              t_of_js
                (let x8734 = this_to_js Obj.magic x8732 in
                 Ojs.call (Ojs.get_prop_ascii x8734 "filter") "apply"
                   [|x8734;((let x8727 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8727 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x8729 : Ojs.t) ->
                                          fun (x8730 : Ojs.t) ->
                                            fun (x8731 : Ojs.t) ->
                                              any_to_js
                                                (x8725
                                                   ~value:(Ojs.float_of_js
                                                             x8729)
                                                   ~index:(Ojs.float_of_js
                                                             x8730)
                                                   ~array:(t_of_js x8731))))|]);
                             (match x8726 with
                              | Some x8728 ->
                                  ignore
                                    (Ojs.call x8727 "push"
                                       [|(any_to_js x8728)|])
                              | None -> ());
                             x8727))|])
    let (find :
      'tags this ->
        predicate:(value:float -> index:float -> obj:t -> bool) ->
          ?thisArg:any -> unit -> float option)
      =
      fun (x8742 : 'tags this) ->
        fun ~predicate:(x8735 : value:float -> index:float -> obj:t -> bool)
          ->
          fun ?thisArg:(x8736 : any option) ->
            fun () ->
              Ojs.option_of_js Ojs.float_of_js
                (let x8744 = this_to_js Obj.magic x8742 in
                 Ojs.call (Ojs.get_prop_ascii x8744 "find") "apply"
                   [|x8744;((let x8737 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8737 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x8739 : Ojs.t) ->
                                          fun (x8740 : Ojs.t) ->
                                            fun (x8741 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x8735
                                                   ~value:(Ojs.float_of_js
                                                             x8739)
                                                   ~index:(Ojs.float_of_js
                                                             x8740)
                                                   ~obj:(t_of_js x8741))))|]);
                             (match x8736 with
                              | Some x8738 ->
                                  ignore
                                    (Ojs.call x8737 "push"
                                       [|(any_to_js x8738)|])
                              | None -> ());
                             x8737))|])
    let (findIndex :
      'tags this ->
        predicate:(value:float -> index:float -> obj:t -> bool) ->
          ?thisArg:any -> unit -> float)
      =
      fun (x8753 : 'tags this) ->
        fun ~predicate:(x8746 : value:float -> index:float -> obj:t -> bool)
          ->
          fun ?thisArg:(x8747 : any option) ->
            fun () ->
              Ojs.float_of_js
                (let x8755 = this_to_js Obj.magic x8753 in
                 Ojs.call (Ojs.get_prop_ascii x8755 "findIndex") "apply"
                   [|x8755;((let x8748 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8748 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x8750 : Ojs.t) ->
                                          fun (x8751 : Ojs.t) ->
                                            fun (x8752 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x8746
                                                   ~value:(Ojs.float_of_js
                                                             x8750)
                                                   ~index:(Ojs.float_of_js
                                                             x8751)
                                                   ~obj:(t_of_js x8752))))|]);
                             (match x8747 with
                              | Some x8749 ->
                                  ignore
                                    (Ojs.call x8748 "push"
                                       [|(any_to_js x8749)|])
                              | None -> ());
                             x8748))|])
    let (forEach :
      'tags this ->
        callbackfn:(value:float -> index:float -> array:t -> unit) ->
          ?thisArg:any -> unit -> unit)
      =
      fun (x8763 : 'tags this) ->
        fun
          ~callbackfn:(x8756 : value:float -> index:float -> array:t -> unit)
          ->
          fun ?thisArg:(x8757 : any option) ->
            fun () ->
              ignore
                (let x8765 = this_to_js Obj.magic x8763 in
                 Ojs.call (Ojs.get_prop_ascii x8765 "forEach") "apply"
                   [|x8765;((let x8758 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8758 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x8760 : Ojs.t) ->
                                          fun (x8761 : Ojs.t) ->
                                            fun (x8762 : Ojs.t) ->
                                              x8756
                                                ~value:(Ojs.float_of_js x8760)
                                                ~index:(Ojs.float_of_js x8761)
                                                ~array:(t_of_js x8762)))|]);
                             (match x8757 with
                              | Some x8759 ->
                                  ignore
                                    (Ojs.call x8758 "push"
                                       [|(any_to_js x8759)|])
                              | None -> ());
                             x8758))|])
    let (indexOf :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> float)
      =
      fun (x8770 : 'tags this) ->
        fun ~searchElement:(x8766 : float) ->
          fun ?fromIndex:(x8767 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x8772 = this_to_js Obj.magic x8770 in
                 Ojs.call (Ojs.get_prop_ascii x8772 "indexOf") "apply"
                   [|x8772;((let x8768 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8768 "push"
                                  [|(Ojs.float_to_js x8766)|]);
                             (match x8767 with
                              | Some x8769 ->
                                  ignore
                                    (Ojs.call x8768 "push"
                                       [|(Ojs.float_to_js x8769)|])
                              | None -> ());
                             x8768))|])
    let (join : 'tags this -> ?separator:string -> unit -> string) =
      fun (x8776 : 'tags this) ->
        fun ?separator:(x8773 : string option) ->
          fun () ->
            Ojs.string_of_js
              (let x8778 = this_to_js Obj.magic x8776 in
               Ojs.call (Ojs.get_prop_ascii x8778 "join") "apply"
                 [|x8778;((let x8774 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x8773 with
                            | Some x8775 ->
                                ignore
                                  (Ojs.call x8774 "push"
                                     [|(Ojs.string_to_js x8775)|])
                            | None -> ());
                           x8774))|])
    let (lastIndexOf :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> float)
      =
      fun (x8783 : 'tags this) ->
        fun ~searchElement:(x8779 : float) ->
          fun ?fromIndex:(x8780 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x8785 = this_to_js Obj.magic x8783 in
                 Ojs.call (Ojs.get_prop_ascii x8785 "lastIndexOf") "apply"
                   [|x8785;((let x8781 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8781 "push"
                                  [|(Ojs.float_to_js x8779)|]);
                             (match x8780 with
                              | Some x8782 ->
                                  ignore
                                    (Ojs.call x8781 "push"
                                       [|(Ojs.float_to_js x8782)|])
                              | None -> ());
                             x8781))|])
    let (get_length : 'tags this -> float) =
      fun (x8786 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x8786) "length")
    let (map :
      'tags this ->
        callbackfn:(value:float -> index:float -> array:t -> float) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x8795 : 'tags this) ->
        fun
          ~callbackfn:(x8788 :
                        value:float -> index:float -> array:t -> float)
          ->
          fun ?thisArg:(x8789 : any option) ->
            fun () ->
              t_of_js
                (let x8797 = this_to_js Obj.magic x8795 in
                 Ojs.call (Ojs.get_prop_ascii x8797 "map") "apply"
                   [|x8797;((let x8790 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8790 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x8792 : Ojs.t) ->
                                          fun (x8793 : Ojs.t) ->
                                            fun (x8794 : Ojs.t) ->
                                              Ojs.float_to_js
                                                (x8788
                                                   ~value:(Ojs.float_of_js
                                                             x8792)
                                                   ~index:(Ojs.float_of_js
                                                             x8793)
                                                   ~array:(t_of_js x8794))))|]);
                             (match x8789 with
                              | Some x8791 ->
                                  ignore
                                    (Ojs.call x8790 "push"
                                       [|(any_to_js x8791)|])
                              | None -> ());
                             x8790))|])
    let (reduce :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> float)
      =
      fun (x8803 : 'tags this) ->
        fun
          ~callbackfn:(x8798 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x8803) "reduce"
               [|(Ojs.fun_to_js 4
                    (fun (x8799 : Ojs.t) ->
                       fun (x8800 : Ojs.t) ->
                         fun (x8801 : Ojs.t) ->
                           fun (x8802 : Ojs.t) ->
                             Ojs.float_to_js
                               (x8798 ~previousValue:(Ojs.float_of_js x8799)
                                  ~currentValue:(Ojs.float_of_js x8800)
                                  ~currentIndex:(Ojs.float_of_js x8801)
                                  ~array:(t_of_js x8802))))|])
    let (reduce' :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> initialValue:float -> float)
      =
      fun (x8811 : 'tags this) ->
        fun
          ~callbackfn:(x8805 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          fun ~initialValue:(x8810 : float) ->
            Ojs.float_of_js
              (Ojs.call (this_to_js Obj.magic x8811) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x8806 : Ojs.t) ->
                         fun (x8807 : Ojs.t) ->
                           fun (x8808 : Ojs.t) ->
                             fun (x8809 : Ojs.t) ->
                               Ojs.float_to_js
                                 (x8805
                                    ~previousValue:(Ojs.float_of_js x8806)
                                    ~currentValue:(Ojs.float_of_js x8807)
                                    ~currentIndex:(Ojs.float_of_js x8808)
                                    ~array:(t_of_js x8809))));(Ojs.float_to_js
                                                                 x8810)|])
    let (reduce'' :
      'tags this ->
        callbackfn:(previousValue:'U ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x8819 : 'tags this) ->
        fun
          ~callbackfn:(x8813 :
                        previousValue:'U ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x8818 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic x8819) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x8814 : Ojs.t) ->
                         fun (x8815 : Ojs.t) ->
                           fun (x8816 : Ojs.t) ->
                             fun (x8817 : Ojs.t) ->
                               Obj.magic
                                 (x8813 ~previousValue:(Obj.magic x8814)
                                    ~currentValue:(Ojs.float_of_js x8815)
                                    ~currentIndex:(Ojs.float_of_js x8816)
                                    ~array:(t_of_js x8817))));(Obj.magic
                                                                 x8818)|])
    let (reduceRight :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> float)
      =
      fun (x8826 : 'tags this) ->
        fun
          ~callbackfn:(x8821 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x8826) "reduceRight"
               [|(Ojs.fun_to_js 4
                    (fun (x8822 : Ojs.t) ->
                       fun (x8823 : Ojs.t) ->
                         fun (x8824 : Ojs.t) ->
                           fun (x8825 : Ojs.t) ->
                             Ojs.float_to_js
                               (x8821 ~previousValue:(Ojs.float_of_js x8822)
                                  ~currentValue:(Ojs.float_of_js x8823)
                                  ~currentIndex:(Ojs.float_of_js x8824)
                                  ~array:(t_of_js x8825))))|])
    let (reduceRight' :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> initialValue:float -> float)
      =
      fun (x8834 : 'tags this) ->
        fun
          ~callbackfn:(x8828 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          fun ~initialValue:(x8833 : float) ->
            Ojs.float_of_js
              (Ojs.call (this_to_js Obj.magic x8834) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x8829 : Ojs.t) ->
                         fun (x8830 : Ojs.t) ->
                           fun (x8831 : Ojs.t) ->
                             fun (x8832 : Ojs.t) ->
                               Ojs.float_to_js
                                 (x8828
                                    ~previousValue:(Ojs.float_of_js x8829)
                                    ~currentValue:(Ojs.float_of_js x8830)
                                    ~currentIndex:(Ojs.float_of_js x8831)
                                    ~array:(t_of_js x8832))));(Ojs.float_to_js
                                                                 x8833)|])
    let (reduceRight'' :
      'tags this ->
        callbackfn:(previousValue:'U ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x8842 : 'tags this) ->
        fun
          ~callbackfn:(x8836 :
                        previousValue:'U ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x8841 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic x8842) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x8837 : Ojs.t) ->
                         fun (x8838 : Ojs.t) ->
                           fun (x8839 : Ojs.t) ->
                             fun (x8840 : Ojs.t) ->
                               Obj.magic
                                 (x8836 ~previousValue:(Obj.magic x8837)
                                    ~currentValue:(Ojs.float_of_js x8838)
                                    ~currentIndex:(Ojs.float_of_js x8839)
                                    ~array:(t_of_js x8840))));(Obj.magic
                                                                 x8841)|])
    let (reverse : 'tags this -> t) =
      fun (x8844 : 'tags this) ->
        t_of_js (Ojs.call (this_to_js Obj.magic x8844) "reverse" [||])
    let (set_ :
      'tags this -> array:float ArrayLike.t -> ?offset:float -> unit -> unit)
      =
      fun (x8851 : 'tags this) ->
        fun ~array:(x8846 : float ArrayLike.t) ->
          fun ?offset:(x8847 : float option) ->
            fun () ->
              ignore
                (let x8853 = this_to_js Obj.magic x8851 in
                 Ojs.call (Ojs.get_prop_ascii x8853 "set") "apply"
                   [|x8853;((let x8848 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8848 "push"
                                  [|(ArrayLike.t_to_js Ojs.float_to_js x8846)|]);
                             (match x8847 with
                              | Some x8849 ->
                                  ignore
                                    (Ojs.call x8848 "push"
                                       [|(Ojs.float_to_js x8849)|])
                              | None -> ());
                             x8848))|])
    let (slice : 'tags this -> ?start:float -> ?end_:float -> unit -> t) =
      fun (x8859 : 'tags this) ->
        fun ?start:(x8854 : float option) ->
          fun ?end_:(x8855 : float option) ->
            fun () ->
              t_of_js
                (let x8861 = this_to_js Obj.magic x8859 in
                 Ojs.call (Ojs.get_prop_ascii x8861 "slice") "apply"
                   [|x8861;((let x8856 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x8854 with
                              | Some x8858 ->
                                  ignore
                                    (Ojs.call x8856 "push"
                                       [|(Ojs.float_to_js x8858)|])
                              | None -> ());
                             (match x8855 with
                              | Some x8857 ->
                                  ignore
                                    (Ojs.call x8856 "push"
                                       [|(Ojs.float_to_js x8857)|])
                              | None -> ());
                             x8856))|])
    let (some :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x8869 : 'tags this) ->
        fun
          ~predicate:(x8862 :
                       value:float -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x8863 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x8871 = this_to_js Obj.magic x8869 in
                 Ojs.call (Ojs.get_prop_ascii x8871 "some") "apply"
                   [|x8871;((let x8864 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8864 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x8866 : Ojs.t) ->
                                          fun (x8867 : Ojs.t) ->
                                            fun (x8868 : Ojs.t) ->
                                              unknown_to_js
                                                (x8862
                                                   ~value:(Ojs.float_of_js
                                                             x8866)
                                                   ~index:(Ojs.float_of_js
                                                             x8867)
                                                   ~array:(t_of_js x8868))))|]);
                             (match x8863 with
                              | Some x8865 ->
                                  ignore
                                    (Ojs.call x8864 "push"
                                       [|(any_to_js x8865)|])
                              | None -> ());
                             x8864))|])
    let (sort :
      'tags this ->
        ?compareFn:(a:float -> b:float -> float) -> unit -> 'tags this)
      =
      fun (x8877 : 'tags this) ->
        fun ?compareFn:(x8872 : (a:float -> b:float -> float) option) ->
          fun () ->
            this_of_js Obj.magic
              (let x8879 = this_to_js Obj.magic x8877 in
               Ojs.call (Ojs.get_prop_ascii x8879 "sort") "apply"
                 [|x8879;((let x8873 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x8872 with
                            | Some x8874 ->
                                ignore
                                  (Ojs.call x8873 "push"
                                     [|(Ojs.fun_to_js 2
                                          (fun (x8875 : Ojs.t) ->
                                             fun (x8876 : Ojs.t) ->
                                               Ojs.float_to_js
                                                 (x8874
                                                    ~a:(Ojs.float_of_js x8875)
                                                    ~b:(Ojs.float_of_js x8876))))|])
                            | None -> ());
                           x8873))|])
    let (subarray : 'tags this -> ?begin_:float -> ?end_:float -> unit -> t)
      =
      fun (x8886 : 'tags this) ->
        fun ?begin_:(x8881 : float option) ->
          fun ?end_:(x8882 : float option) ->
            fun () ->
              t_of_js
                (let x8888 = this_to_js Obj.magic x8886 in
                 Ojs.call (Ojs.get_prop_ascii x8888 "subarray") "apply"
                   [|x8888;((let x8883 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x8881 with
                              | Some x8885 ->
                                  ignore
                                    (Ojs.call x8883 "push"
                                       [|(Ojs.float_to_js x8885)|])
                              | None -> ());
                             (match x8882 with
                              | Some x8884 ->
                                  ignore
                                    (Ojs.call x8883 "push"
                                       [|(Ojs.float_to_js x8884)|])
                              | None -> ());
                             x8883))|])
    let (toLocaleString : 'tags this -> string) =
      fun (x8889 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x8889) "toLocaleString" [||])
    let (toString : 'tags this -> string) =
      fun (x8891 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x8891) "toString" [||])
    let (valueOf : 'tags this -> t) =
      fun (x8893 : 'tags this) ->
        t_of_js (Ojs.call (this_to_js Obj.magic x8893) "valueOf" [||])
    let (get : 'tags this -> float -> float) =
      fun (x8895 : 'tags this) ->
        fun (x8897 : float) ->
          Ojs.float_of_js
            (Ojs.get_prop (this_to_js Obj.magic x8895)
               (Ojs.float_to_js x8897))
    let (set : 'tags this -> float -> float -> unit) =
      fun (x8898 : 'tags this) ->
        fun (x8900 : float) ->
          fun (x8901 : float) ->
            Ojs.set_prop (this_to_js Obj.magic x8898) (Ojs.float_to_js x8900)
              (Ojs.float_to_js x8901)
    let (create : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Int32Array") [||])
    let (create' : float Iterable.t -> t) =
      fun (x8902 : float Iterable.t) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Int32Array")
             [|(Iterable.t_to_js Ojs.float_to_js x8902)|])
    let (from :
      arrayLike:float Iterable.t ->
        ?mapfn:(v:float -> k:float -> float) -> ?thisArg:any -> unit -> t)
      =
      fun ~arrayLike:(x8904 : float Iterable.t) ->
        fun ?mapfn:(x8905 : (v:float -> k:float -> float) option) ->
          fun ?thisArg:(x8906 : any option) ->
            fun () ->
              t_of_js
                (let x8913 = Ojs.get_prop_ascii Ojs.global "Int32Array" in
                 Ojs.call (Ojs.get_prop_ascii x8913 "from") "apply"
                   [|x8913;((let x8907 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8907 "push"
                                  [|(Iterable.t_to_js Ojs.float_to_js x8904)|]);
                             (match x8905 with
                              | Some x8909 ->
                                  ignore
                                    (Ojs.call x8907 "push"
                                       [|(Ojs.fun_to_js 2
                                            (fun (x8910 : Ojs.t) ->
                                               fun (x8911 : Ojs.t) ->
                                                 Ojs.float_to_js
                                                   (x8909
                                                      ~v:(Ojs.float_of_js
                                                            x8910)
                                                      ~k:(Ojs.float_of_js
                                                            x8911))))|])
                              | None -> ());
                             (match x8906 with
                              | Some x8908 ->
                                  ignore
                                    (Ojs.call x8907 "push"
                                       [|(any_to_js x8908)|])
                              | None -> ());
                             x8907))|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Int32Array")
             "prototype")
    let (create'' : float -> t) =
      fun (x8914 : float) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Int32Array")
             [|(Ojs.float_to_js x8914)|])
    let (create''' :
      [ `U1 of float ArrayLike.t  | `U2 of ArrayBufferLike.t ] -> t) =
      fun (x8915 : [ `U1 of float ArrayLike.t  | `U2 of ArrayBufferLike.t ])
        ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Int32Array")
             [|((match x8915 with
                 | `U1 x8916 -> ArrayLike.t_to_js Ojs.float_to_js x8916
                 | `U2 x8918 -> ArrayBufferLike.t_to_js x8918))|])
    let (create'''' :
      buffer:ArrayBufferLike.t ->
        ?byteOffset:float -> ?length:float -> unit -> t)
      =
      fun ~buffer:(x8919 : ArrayBufferLike.t) ->
        fun ?byteOffset:(x8920 : float option) ->
          fun ?length:(x8921 : float option) ->
            fun () ->
              t_of_js
                (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "Int32Array")
                   (let x8922 =
                      Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                        [||] in
                    ignore
                      (Ojs.call x8922 "push"
                         [|(ArrayBufferLike.t_to_js x8919)|]);
                    (match x8920 with
                     | Some x8924 ->
                         ignore
                           (Ojs.call x8922 "push" [|(Ojs.float_to_js x8924)|])
                     | None -> ());
                    (match x8921 with
                     | Some x8923 ->
                         ignore
                           (Ojs.call x8922 "push" [|(Ojs.float_to_js x8923)|])
                     | None -> ());
                    x8922))
    let (bytes_per_element : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Int32Array")
             "BYTES_PER_ELEMENT")
    let (of_ : float list -> t) =
      fun (x8925 : float list) ->
        t_of_js
          (let x8928 = Ojs.get_prop_ascii Ojs.global "Int32Array" in
           Ojs.call (Ojs.get_prop_ascii x8928 "of") "apply"
             [|x8928;((let x8926 =
                         Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                           [||] in
                       List.iter
                         (fun (x8927 : float) ->
                            ignore
                              (Ojs.call x8926 "push"
                                 [|(Ojs.float_to_js x8927)|])) x8925;
                       x8926))|])
    let (from' : float ArrayLike.t -> t) =
      fun (x8929 : float ArrayLike.t) ->
        t_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Int32Array") "from"
             [|(ArrayLike.t_to_js Ojs.float_to_js x8929)|])
    let (from'' :
      arrayLike:'T ArrayLike.t ->
        mapfn:(v:'T -> k:float -> float) -> ?thisArg:any -> unit -> t)
      =
      fun ~arrayLike:(x8931 : 'T ArrayLike.t) ->
        fun ~mapfn:(x8932 : v:'T -> k:float -> float) ->
          fun ?thisArg:(x8933 : any option) ->
            fun () ->
              t_of_js
                (let x8939 = Ojs.get_prop_ascii Ojs.global "Int32Array" in
                 Ojs.call (Ojs.get_prop_ascii x8939 "from") "apply"
                   [|x8939;((let x8934 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8934 "push"
                                  [|(ArrayLike.t_to_js Obj.magic x8931)|]);
                             ignore
                               (Ojs.call x8934 "push"
                                  [|(Ojs.fun_to_js 2
                                       (fun (x8936 : Ojs.t) ->
                                          fun (x8937 : Ojs.t) ->
                                            Ojs.float_to_js
                                              (x8932 ~v:(Obj.magic x8936)
                                                 ~k:(Ojs.float_of_js x8937))))|]);
                             (match x8933 with
                              | Some x8935 ->
                                  ignore
                                    (Ojs.call x8934 "push"
                                       [|(any_to_js x8935)|])
                              | None -> ());
                             x8934))|])
    let cast_from = Obj.magic
  end
module Int16Array =
  struct
    type t = [ `Int16Array ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type tags = [ `Int16Array ]
    type 'tags this = 'tags intf constraint 'tags = [> `Int16Array ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x8942 : Ojs.t) -> intf_of_js __tags_of_js x8942
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x8940 : __tags intf) -> intf_to_js __tags_to_js x8940
    let (findLast :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> bool) ->
          ?thisArg:any -> unit -> 'S option)
      =
      fun (x8951 : 'tags this) ->
        fun
          ~predicate:(x8944 : value:float -> index:float -> array:t -> bool)
          ->
          fun ?thisArg:(x8945 : any option) ->
            fun () ->
              Ojs.option_of_js Obj.magic
                (let x8953 = this_to_js Obj.magic x8951 in
                 Ojs.call (Ojs.get_prop_ascii x8953 "findLast") "apply"
                   [|x8953;((let x8946 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8946 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x8948 : Ojs.t) ->
                                          fun (x8949 : Ojs.t) ->
                                            fun (x8950 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x8944
                                                   ~value:(Ojs.float_of_js
                                                             x8948)
                                                   ~index:(Ojs.float_of_js
                                                             x8949)
                                                   ~array:(t_of_js x8950))))|]);
                             (match x8945 with
                              | Some x8947 ->
                                  ignore
                                    (Ojs.call x8946 "push"
                                       [|(any_to_js x8947)|])
                              | None -> ());
                             x8946))|])
    let (findLast' :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> float option)
      =
      fun (x8962 : 'tags this) ->
        fun
          ~predicate:(x8955 :
                       value:float -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x8956 : any option) ->
            fun () ->
              Ojs.option_of_js Ojs.float_of_js
                (let x8964 = this_to_js Obj.magic x8962 in
                 Ojs.call (Ojs.get_prop_ascii x8964 "findLast") "apply"
                   [|x8964;((let x8957 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8957 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x8959 : Ojs.t) ->
                                          fun (x8960 : Ojs.t) ->
                                            fun (x8961 : Ojs.t) ->
                                              unknown_to_js
                                                (x8955
                                                   ~value:(Ojs.float_of_js
                                                             x8959)
                                                   ~index:(Ojs.float_of_js
                                                             x8960)
                                                   ~array:(t_of_js x8961))))|]);
                             (match x8956 with
                              | Some x8958 ->
                                  ignore
                                    (Ojs.call x8957 "push"
                                       [|(any_to_js x8958)|])
                              | None -> ());
                             x8957))|])
    let (findLastIndex :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> float)
      =
      fun (x8973 : 'tags this) ->
        fun
          ~predicate:(x8966 :
                       value:float -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x8967 : any option) ->
            fun () ->
              Ojs.float_of_js
                (let x8975 = this_to_js Obj.magic x8973 in
                 Ojs.call (Ojs.get_prop_ascii x8975 "findLastIndex") "apply"
                   [|x8975;((let x8968 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8968 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x8970 : Ojs.t) ->
                                          fun (x8971 : Ojs.t) ->
                                            fun (x8972 : Ojs.t) ->
                                              unknown_to_js
                                                (x8966
                                                   ~value:(Ojs.float_of_js
                                                             x8970)
                                                   ~index:(Ojs.float_of_js
                                                             x8971)
                                                   ~array:(t_of_js x8972))))|]);
                             (match x8967 with
                              | Some x8969 ->
                                  ignore
                                    (Ojs.call x8968 "push"
                                       [|(any_to_js x8969)|])
                              | None -> ());
                             x8968))|])
    let (toReversed : 'tags this -> t) =
      fun (x8976 : 'tags this) ->
        t_of_js (Ojs.call (this_to_js Obj.magic x8976) "toReversed" [||])
    let (toSorted :
      'tags this -> ?compareFn:(a:float -> b:float -> float) -> unit -> t) =
      fun (x8983 : 'tags this) ->
        fun ?compareFn:(x8978 : (a:float -> b:float -> float) option) ->
          fun () ->
            t_of_js
              (let x8985 = this_to_js Obj.magic x8983 in
               Ojs.call (Ojs.get_prop_ascii x8985 "toSorted") "apply"
                 [|x8985;((let x8979 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x8978 with
                            | Some x8980 ->
                                ignore
                                  (Ojs.call x8979 "push"
                                     [|(Ojs.fun_to_js 2
                                          (fun (x8981 : Ojs.t) ->
                                             fun (x8982 : Ojs.t) ->
                                               Ojs.float_to_js
                                                 (x8980
                                                    ~a:(Ojs.float_of_js x8981)
                                                    ~b:(Ojs.float_of_js x8982))))|])
                            | None -> ());
                           x8979))|])
    let (with_ : 'tags this -> index:float -> value:float -> t) =
      fun (x8988 : 'tags this) ->
        fun ~index:(x8986 : float) ->
          fun ~value:(x8987 : float) ->
            t_of_js
              (Ojs.call (this_to_js Obj.magic x8988) "with"
                 [|(Ojs.float_to_js x8986);(Ojs.float_to_js x8987)|])
    let (at : 'tags this -> index:float -> float option) =
      fun (x8991 : 'tags this) ->
        fun ~index:(x8990 : float) ->
          Ojs.option_of_js Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x8991) "at"
               [|(Ojs.float_to_js x8990)|])
    let (includes :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> bool)
      =
      fun (x8998 : 'tags this) ->
        fun ~searchElement:(x8994 : float) ->
          fun ?fromIndex:(x8995 : float option) ->
            fun () ->
              Ojs.bool_of_js
                (let x9000 = this_to_js Obj.magic x8998 in
                 Ojs.call (Ojs.get_prop_ascii x9000 "includes") "apply"
                   [|x9000;((let x8996 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8996 "push"
                                  [|(Ojs.float_to_js x8994)|]);
                             (match x8995 with
                              | Some x8997 ->
                                  ignore
                                    (Ojs.call x8996 "push"
                                       [|(Ojs.float_to_js x8997)|])
                              | None -> ());
                             x8996))|])
    let (entries : 'tags this -> (float * float) IterableIterator.t) =
      fun (x9001 : 'tags this) ->
        IterableIterator.t_of_js
          (fun (x9003 : Ojs.t) ->
             let x9004 = x9003 in
             ((Ojs.float_of_js (Ojs.array_get x9004 0)),
               (Ojs.float_of_js (Ojs.array_get x9004 1))))
          (Ojs.call (this_to_js Obj.magic x9001) "entries" [||])
    let (keys : 'tags this -> float IterableIterator.t) =
      fun (x9005 : 'tags this) ->
        IterableIterator.t_of_js Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x9005) "keys" [||])
    let (values : 'tags this -> float IterableIterator.t) =
      fun (x9008 : 'tags this) ->
        IterableIterator.t_of_js Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x9008) "values" [||])
    let (get_BYTES_PER_ELEMENT : 'tags this -> float) =
      fun (x9011 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x9011)
             "BYTES_PER_ELEMENT")
    let (get_buffer : 'tags this -> ArrayBufferLike.t) =
      fun (x9013 : 'tags this) ->
        ArrayBufferLike.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x9013) "buffer")
    let (get_byteLength : 'tags this -> float) =
      fun (x9015 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x9015) "byteLength")
    let (get_byteOffset : 'tags this -> float) =
      fun (x9017 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x9017) "byteOffset")
    let (copyWithin :
      'tags this ->
        target:float -> start:float -> ?end_:float -> unit -> 'tags this)
      =
      fun (x9024 : 'tags this) ->
        fun ~target:(x9019 : float) ->
          fun ~start:(x9020 : float) ->
            fun ?end_:(x9021 : float option) ->
              fun () ->
                this_of_js Obj.magic
                  (let x9026 = this_to_js Obj.magic x9024 in
                   Ojs.call (Ojs.get_prop_ascii x9026 "copyWithin") "apply"
                     [|x9026;((let x9022 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x9022 "push"
                                    [|(Ojs.float_to_js x9019)|]);
                               ignore
                                 (Ojs.call x9022 "push"
                                    [|(Ojs.float_to_js x9020)|]);
                               (match x9021 with
                                | Some x9023 ->
                                    ignore
                                      (Ojs.call x9022 "push"
                                         [|(Ojs.float_to_js x9023)|])
                                | None -> ());
                               x9022))|])
    let (every :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x9035 : 'tags this) ->
        fun
          ~predicate:(x9028 :
                       value:float -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x9029 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x9037 = this_to_js Obj.magic x9035 in
                 Ojs.call (Ojs.get_prop_ascii x9037 "every") "apply"
                   [|x9037;((let x9030 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x9030 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x9032 : Ojs.t) ->
                                          fun (x9033 : Ojs.t) ->
                                            fun (x9034 : Ojs.t) ->
                                              unknown_to_js
                                                (x9028
                                                   ~value:(Ojs.float_of_js
                                                             x9032)
                                                   ~index:(Ojs.float_of_js
                                                             x9033)
                                                   ~array:(t_of_js x9034))))|]);
                             (match x9029 with
                              | Some x9031 ->
                                  ignore
                                    (Ojs.call x9030 "push"
                                       [|(any_to_js x9031)|])
                              | None -> ());
                             x9030))|])
    let (fill :
      'tags this ->
        value:float -> ?start:float -> ?end_:float -> unit -> 'tags this)
      =
      fun (x9044 : 'tags this) ->
        fun ~value:(x9038 : float) ->
          fun ?start:(x9039 : float option) ->
            fun ?end_:(x9040 : float option) ->
              fun () ->
                this_of_js Obj.magic
                  (let x9046 = this_to_js Obj.magic x9044 in
                   Ojs.call (Ojs.get_prop_ascii x9046 "fill") "apply"
                     [|x9046;((let x9041 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x9041 "push"
                                    [|(Ojs.float_to_js x9038)|]);
                               (match x9039 with
                                | Some x9043 ->
                                    ignore
                                      (Ojs.call x9041 "push"
                                         [|(Ojs.float_to_js x9043)|])
                                | None -> ());
                               (match x9040 with
                                | Some x9042 ->
                                    ignore
                                      (Ojs.call x9041 "push"
                                         [|(Ojs.float_to_js x9042)|])
                                | None -> ());
                               x9041))|])
    let (filter :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> any) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x9055 : 'tags this) ->
        fun ~predicate:(x9048 : value:float -> index:float -> array:t -> any)
          ->
          fun ?thisArg:(x9049 : any option) ->
            fun () ->
              t_of_js
                (let x9057 = this_to_js Obj.magic x9055 in
                 Ojs.call (Ojs.get_prop_ascii x9057 "filter") "apply"
                   [|x9057;((let x9050 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x9050 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x9052 : Ojs.t) ->
                                          fun (x9053 : Ojs.t) ->
                                            fun (x9054 : Ojs.t) ->
                                              any_to_js
                                                (x9048
                                                   ~value:(Ojs.float_of_js
                                                             x9052)
                                                   ~index:(Ojs.float_of_js
                                                             x9053)
                                                   ~array:(t_of_js x9054))))|]);
                             (match x9049 with
                              | Some x9051 ->
                                  ignore
                                    (Ojs.call x9050 "push"
                                       [|(any_to_js x9051)|])
                              | None -> ());
                             x9050))|])
    let (find :
      'tags this ->
        predicate:(value:float -> index:float -> obj:t -> bool) ->
          ?thisArg:any -> unit -> float option)
      =
      fun (x9065 : 'tags this) ->
        fun ~predicate:(x9058 : value:float -> index:float -> obj:t -> bool)
          ->
          fun ?thisArg:(x9059 : any option) ->
            fun () ->
              Ojs.option_of_js Ojs.float_of_js
                (let x9067 = this_to_js Obj.magic x9065 in
                 Ojs.call (Ojs.get_prop_ascii x9067 "find") "apply"
                   [|x9067;((let x9060 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x9060 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x9062 : Ojs.t) ->
                                          fun (x9063 : Ojs.t) ->
                                            fun (x9064 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x9058
                                                   ~value:(Ojs.float_of_js
                                                             x9062)
                                                   ~index:(Ojs.float_of_js
                                                             x9063)
                                                   ~obj:(t_of_js x9064))))|]);
                             (match x9059 with
                              | Some x9061 ->
                                  ignore
                                    (Ojs.call x9060 "push"
                                       [|(any_to_js x9061)|])
                              | None -> ());
                             x9060))|])
    let (findIndex :
      'tags this ->
        predicate:(value:float -> index:float -> obj:t -> bool) ->
          ?thisArg:any -> unit -> float)
      =
      fun (x9076 : 'tags this) ->
        fun ~predicate:(x9069 : value:float -> index:float -> obj:t -> bool)
          ->
          fun ?thisArg:(x9070 : any option) ->
            fun () ->
              Ojs.float_of_js
                (let x9078 = this_to_js Obj.magic x9076 in
                 Ojs.call (Ojs.get_prop_ascii x9078 "findIndex") "apply"
                   [|x9078;((let x9071 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x9071 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x9073 : Ojs.t) ->
                                          fun (x9074 : Ojs.t) ->
                                            fun (x9075 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x9069
                                                   ~value:(Ojs.float_of_js
                                                             x9073)
                                                   ~index:(Ojs.float_of_js
                                                             x9074)
                                                   ~obj:(t_of_js x9075))))|]);
                             (match x9070 with
                              | Some x9072 ->
                                  ignore
                                    (Ojs.call x9071 "push"
                                       [|(any_to_js x9072)|])
                              | None -> ());
                             x9071))|])
    let (forEach :
      'tags this ->
        callbackfn:(value:float -> index:float -> array:t -> unit) ->
          ?thisArg:any -> unit -> unit)
      =
      fun (x9086 : 'tags this) ->
        fun
          ~callbackfn:(x9079 : value:float -> index:float -> array:t -> unit)
          ->
          fun ?thisArg:(x9080 : any option) ->
            fun () ->
              ignore
                (let x9088 = this_to_js Obj.magic x9086 in
                 Ojs.call (Ojs.get_prop_ascii x9088 "forEach") "apply"
                   [|x9088;((let x9081 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x9081 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x9083 : Ojs.t) ->
                                          fun (x9084 : Ojs.t) ->
                                            fun (x9085 : Ojs.t) ->
                                              x9079
                                                ~value:(Ojs.float_of_js x9083)
                                                ~index:(Ojs.float_of_js x9084)
                                                ~array:(t_of_js x9085)))|]);
                             (match x9080 with
                              | Some x9082 ->
                                  ignore
                                    (Ojs.call x9081 "push"
                                       [|(any_to_js x9082)|])
                              | None -> ());
                             x9081))|])
    let (indexOf :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> float)
      =
      fun (x9093 : 'tags this) ->
        fun ~searchElement:(x9089 : float) ->
          fun ?fromIndex:(x9090 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x9095 = this_to_js Obj.magic x9093 in
                 Ojs.call (Ojs.get_prop_ascii x9095 "indexOf") "apply"
                   [|x9095;((let x9091 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x9091 "push"
                                  [|(Ojs.float_to_js x9089)|]);
                             (match x9090 with
                              | Some x9092 ->
                                  ignore
                                    (Ojs.call x9091 "push"
                                       [|(Ojs.float_to_js x9092)|])
                              | None -> ());
                             x9091))|])
    let (join : 'tags this -> ?separator:string -> unit -> string) =
      fun (x9099 : 'tags this) ->
        fun ?separator:(x9096 : string option) ->
          fun () ->
            Ojs.string_of_js
              (let x9101 = this_to_js Obj.magic x9099 in
               Ojs.call (Ojs.get_prop_ascii x9101 "join") "apply"
                 [|x9101;((let x9097 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x9096 with
                            | Some x9098 ->
                                ignore
                                  (Ojs.call x9097 "push"
                                     [|(Ojs.string_to_js x9098)|])
                            | None -> ());
                           x9097))|])
    let (lastIndexOf :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> float)
      =
      fun (x9106 : 'tags this) ->
        fun ~searchElement:(x9102 : float) ->
          fun ?fromIndex:(x9103 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x9108 = this_to_js Obj.magic x9106 in
                 Ojs.call (Ojs.get_prop_ascii x9108 "lastIndexOf") "apply"
                   [|x9108;((let x9104 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x9104 "push"
                                  [|(Ojs.float_to_js x9102)|]);
                             (match x9103 with
                              | Some x9105 ->
                                  ignore
                                    (Ojs.call x9104 "push"
                                       [|(Ojs.float_to_js x9105)|])
                              | None -> ());
                             x9104))|])
    let (get_length : 'tags this -> float) =
      fun (x9109 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x9109) "length")
    let (map :
      'tags this ->
        callbackfn:(value:float -> index:float -> array:t -> float) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x9118 : 'tags this) ->
        fun
          ~callbackfn:(x9111 :
                        value:float -> index:float -> array:t -> float)
          ->
          fun ?thisArg:(x9112 : any option) ->
            fun () ->
              t_of_js
                (let x9120 = this_to_js Obj.magic x9118 in
                 Ojs.call (Ojs.get_prop_ascii x9120 "map") "apply"
                   [|x9120;((let x9113 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x9113 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x9115 : Ojs.t) ->
                                          fun (x9116 : Ojs.t) ->
                                            fun (x9117 : Ojs.t) ->
                                              Ojs.float_to_js
                                                (x9111
                                                   ~value:(Ojs.float_of_js
                                                             x9115)
                                                   ~index:(Ojs.float_of_js
                                                             x9116)
                                                   ~array:(t_of_js x9117))))|]);
                             (match x9112 with
                              | Some x9114 ->
                                  ignore
                                    (Ojs.call x9113 "push"
                                       [|(any_to_js x9114)|])
                              | None -> ());
                             x9113))|])
    let (reduce :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> float)
      =
      fun (x9126 : 'tags this) ->
        fun
          ~callbackfn:(x9121 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x9126) "reduce"
               [|(Ojs.fun_to_js 4
                    (fun (x9122 : Ojs.t) ->
                       fun (x9123 : Ojs.t) ->
                         fun (x9124 : Ojs.t) ->
                           fun (x9125 : Ojs.t) ->
                             Ojs.float_to_js
                               (x9121 ~previousValue:(Ojs.float_of_js x9122)
                                  ~currentValue:(Ojs.float_of_js x9123)
                                  ~currentIndex:(Ojs.float_of_js x9124)
                                  ~array:(t_of_js x9125))))|])
    let (reduce' :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> initialValue:float -> float)
      =
      fun (x9134 : 'tags this) ->
        fun
          ~callbackfn:(x9128 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          fun ~initialValue:(x9133 : float) ->
            Ojs.float_of_js
              (Ojs.call (this_to_js Obj.magic x9134) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x9129 : Ojs.t) ->
                         fun (x9130 : Ojs.t) ->
                           fun (x9131 : Ojs.t) ->
                             fun (x9132 : Ojs.t) ->
                               Ojs.float_to_js
                                 (x9128
                                    ~previousValue:(Ojs.float_of_js x9129)
                                    ~currentValue:(Ojs.float_of_js x9130)
                                    ~currentIndex:(Ojs.float_of_js x9131)
                                    ~array:(t_of_js x9132))));(Ojs.float_to_js
                                                                 x9133)|])
    let (reduce'' :
      'tags this ->
        callbackfn:(previousValue:'U ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x9142 : 'tags this) ->
        fun
          ~callbackfn:(x9136 :
                        previousValue:'U ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x9141 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic x9142) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x9137 : Ojs.t) ->
                         fun (x9138 : Ojs.t) ->
                           fun (x9139 : Ojs.t) ->
                             fun (x9140 : Ojs.t) ->
                               Obj.magic
                                 (x9136 ~previousValue:(Obj.magic x9137)
                                    ~currentValue:(Ojs.float_of_js x9138)
                                    ~currentIndex:(Ojs.float_of_js x9139)
                                    ~array:(t_of_js x9140))));(Obj.magic
                                                                 x9141)|])
    let (reduceRight :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> float)
      =
      fun (x9149 : 'tags this) ->
        fun
          ~callbackfn:(x9144 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x9149) "reduceRight"
               [|(Ojs.fun_to_js 4
                    (fun (x9145 : Ojs.t) ->
                       fun (x9146 : Ojs.t) ->
                         fun (x9147 : Ojs.t) ->
                           fun (x9148 : Ojs.t) ->
                             Ojs.float_to_js
                               (x9144 ~previousValue:(Ojs.float_of_js x9145)
                                  ~currentValue:(Ojs.float_of_js x9146)
                                  ~currentIndex:(Ojs.float_of_js x9147)
                                  ~array:(t_of_js x9148))))|])
    let (reduceRight' :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> initialValue:float -> float)
      =
      fun (x9157 : 'tags this) ->
        fun
          ~callbackfn:(x9151 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          fun ~initialValue:(x9156 : float) ->
            Ojs.float_of_js
              (Ojs.call (this_to_js Obj.magic x9157) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x9152 : Ojs.t) ->
                         fun (x9153 : Ojs.t) ->
                           fun (x9154 : Ojs.t) ->
                             fun (x9155 : Ojs.t) ->
                               Ojs.float_to_js
                                 (x9151
                                    ~previousValue:(Ojs.float_of_js x9152)
                                    ~currentValue:(Ojs.float_of_js x9153)
                                    ~currentIndex:(Ojs.float_of_js x9154)
                                    ~array:(t_of_js x9155))));(Ojs.float_to_js
                                                                 x9156)|])
    let (reduceRight'' :
      'tags this ->
        callbackfn:(previousValue:'U ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x9165 : 'tags this) ->
        fun
          ~callbackfn:(x9159 :
                        previousValue:'U ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x9164 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic x9165) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x9160 : Ojs.t) ->
                         fun (x9161 : Ojs.t) ->
                           fun (x9162 : Ojs.t) ->
                             fun (x9163 : Ojs.t) ->
                               Obj.magic
                                 (x9159 ~previousValue:(Obj.magic x9160)
                                    ~currentValue:(Ojs.float_of_js x9161)
                                    ~currentIndex:(Ojs.float_of_js x9162)
                                    ~array:(t_of_js x9163))));(Obj.magic
                                                                 x9164)|])
    let (reverse : 'tags this -> t) =
      fun (x9167 : 'tags this) ->
        t_of_js (Ojs.call (this_to_js Obj.magic x9167) "reverse" [||])
    let (set_ :
      'tags this -> array:float ArrayLike.t -> ?offset:float -> unit -> unit)
      =
      fun (x9174 : 'tags this) ->
        fun ~array:(x9169 : float ArrayLike.t) ->
          fun ?offset:(x9170 : float option) ->
            fun () ->
              ignore
                (let x9176 = this_to_js Obj.magic x9174 in
                 Ojs.call (Ojs.get_prop_ascii x9176 "set") "apply"
                   [|x9176;((let x9171 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x9171 "push"
                                  [|(ArrayLike.t_to_js Ojs.float_to_js x9169)|]);
                             (match x9170 with
                              | Some x9172 ->
                                  ignore
                                    (Ojs.call x9171 "push"
                                       [|(Ojs.float_to_js x9172)|])
                              | None -> ());
                             x9171))|])
    let (slice : 'tags this -> ?start:float -> ?end_:float -> unit -> t) =
      fun (x9182 : 'tags this) ->
        fun ?start:(x9177 : float option) ->
          fun ?end_:(x9178 : float option) ->
            fun () ->
              t_of_js
                (let x9184 = this_to_js Obj.magic x9182 in
                 Ojs.call (Ojs.get_prop_ascii x9184 "slice") "apply"
                   [|x9184;((let x9179 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x9177 with
                              | Some x9181 ->
                                  ignore
                                    (Ojs.call x9179 "push"
                                       [|(Ojs.float_to_js x9181)|])
                              | None -> ());
                             (match x9178 with
                              | Some x9180 ->
                                  ignore
                                    (Ojs.call x9179 "push"
                                       [|(Ojs.float_to_js x9180)|])
                              | None -> ());
                             x9179))|])
    let (some :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x9192 : 'tags this) ->
        fun
          ~predicate:(x9185 :
                       value:float -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x9186 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x9194 = this_to_js Obj.magic x9192 in
                 Ojs.call (Ojs.get_prop_ascii x9194 "some") "apply"
                   [|x9194;((let x9187 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x9187 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x9189 : Ojs.t) ->
                                          fun (x9190 : Ojs.t) ->
                                            fun (x9191 : Ojs.t) ->
                                              unknown_to_js
                                                (x9185
                                                   ~value:(Ojs.float_of_js
                                                             x9189)
                                                   ~index:(Ojs.float_of_js
                                                             x9190)
                                                   ~array:(t_of_js x9191))))|]);
                             (match x9186 with
                              | Some x9188 ->
                                  ignore
                                    (Ojs.call x9187 "push"
                                       [|(any_to_js x9188)|])
                              | None -> ());
                             x9187))|])
    let (sort :
      'tags this ->
        ?compareFn:(a:float -> b:float -> float) -> unit -> 'tags this)
      =
      fun (x9200 : 'tags this) ->
        fun ?compareFn:(x9195 : (a:float -> b:float -> float) option) ->
          fun () ->
            this_of_js Obj.magic
              (let x9202 = this_to_js Obj.magic x9200 in
               Ojs.call (Ojs.get_prop_ascii x9202 "sort") "apply"
                 [|x9202;((let x9196 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x9195 with
                            | Some x9197 ->
                                ignore
                                  (Ojs.call x9196 "push"
                                     [|(Ojs.fun_to_js 2
                                          (fun (x9198 : Ojs.t) ->
                                             fun (x9199 : Ojs.t) ->
                                               Ojs.float_to_js
                                                 (x9197
                                                    ~a:(Ojs.float_of_js x9198)
                                                    ~b:(Ojs.float_of_js x9199))))|])
                            | None -> ());
                           x9196))|])
    let (subarray : 'tags this -> ?begin_:float -> ?end_:float -> unit -> t)
      =
      fun (x9209 : 'tags this) ->
        fun ?begin_:(x9204 : float option) ->
          fun ?end_:(x9205 : float option) ->
            fun () ->
              t_of_js
                (let x9211 = this_to_js Obj.magic x9209 in
                 Ojs.call (Ojs.get_prop_ascii x9211 "subarray") "apply"
                   [|x9211;((let x9206 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x9204 with
                              | Some x9208 ->
                                  ignore
                                    (Ojs.call x9206 "push"
                                       [|(Ojs.float_to_js x9208)|])
                              | None -> ());
                             (match x9205 with
                              | Some x9207 ->
                                  ignore
                                    (Ojs.call x9206 "push"
                                       [|(Ojs.float_to_js x9207)|])
                              | None -> ());
                             x9206))|])
    let (toLocaleString : 'tags this -> string) =
      fun (x9212 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x9212) "toLocaleString" [||])
    let (toString : 'tags this -> string) =
      fun (x9214 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x9214) "toString" [||])
    let (valueOf : 'tags this -> t) =
      fun (x9216 : 'tags this) ->
        t_of_js (Ojs.call (this_to_js Obj.magic x9216) "valueOf" [||])
    let (get : 'tags this -> float -> float) =
      fun (x9218 : 'tags this) ->
        fun (x9220 : float) ->
          Ojs.float_of_js
            (Ojs.get_prop (this_to_js Obj.magic x9218)
               (Ojs.float_to_js x9220))
    let (set : 'tags this -> float -> float -> unit) =
      fun (x9221 : 'tags this) ->
        fun (x9223 : float) ->
          fun (x9224 : float) ->
            Ojs.set_prop (this_to_js Obj.magic x9221) (Ojs.float_to_js x9223)
              (Ojs.float_to_js x9224)
    let (create : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Int16Array") [||])
    let (create' : float Iterable.t -> t) =
      fun (x9225 : float Iterable.t) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Int16Array")
             [|(Iterable.t_to_js Ojs.float_to_js x9225)|])
    let (from :
      arrayLike:float Iterable.t ->
        ?mapfn:(v:float -> k:float -> float) -> ?thisArg:any -> unit -> t)
      =
      fun ~arrayLike:(x9227 : float Iterable.t) ->
        fun ?mapfn:(x9228 : (v:float -> k:float -> float) option) ->
          fun ?thisArg:(x9229 : any option) ->
            fun () ->
              t_of_js
                (let x9236 = Ojs.get_prop_ascii Ojs.global "Int16Array" in
                 Ojs.call (Ojs.get_prop_ascii x9236 "from") "apply"
                   [|x9236;((let x9230 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x9230 "push"
                                  [|(Iterable.t_to_js Ojs.float_to_js x9227)|]);
                             (match x9228 with
                              | Some x9232 ->
                                  ignore
                                    (Ojs.call x9230 "push"
                                       [|(Ojs.fun_to_js 2
                                            (fun (x9233 : Ojs.t) ->
                                               fun (x9234 : Ojs.t) ->
                                                 Ojs.float_to_js
                                                   (x9232
                                                      ~v:(Ojs.float_of_js
                                                            x9233)
                                                      ~k:(Ojs.float_of_js
                                                            x9234))))|])
                              | None -> ());
                             (match x9229 with
                              | Some x9231 ->
                                  ignore
                                    (Ojs.call x9230 "push"
                                       [|(any_to_js x9231)|])
                              | None -> ());
                             x9230))|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Int16Array")
             "prototype")
    let (create'' : float -> t) =
      fun (x9237 : float) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Int16Array")
             [|(Ojs.float_to_js x9237)|])
    let (create''' :
      [ `U1 of float ArrayLike.t  | `U2 of ArrayBufferLike.t ] -> t) =
      fun (x9238 : [ `U1 of float ArrayLike.t  | `U2 of ArrayBufferLike.t ])
        ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Int16Array")
             [|((match x9238 with
                 | `U1 x9239 -> ArrayLike.t_to_js Ojs.float_to_js x9239
                 | `U2 x9241 -> ArrayBufferLike.t_to_js x9241))|])
    let (create'''' :
      buffer:ArrayBufferLike.t ->
        ?byteOffset:float -> ?length:float -> unit -> t)
      =
      fun ~buffer:(x9242 : ArrayBufferLike.t) ->
        fun ?byteOffset:(x9243 : float option) ->
          fun ?length:(x9244 : float option) ->
            fun () ->
              t_of_js
                (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "Int16Array")
                   (let x9245 =
                      Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                        [||] in
                    ignore
                      (Ojs.call x9245 "push"
                         [|(ArrayBufferLike.t_to_js x9242)|]);
                    (match x9243 with
                     | Some x9247 ->
                         ignore
                           (Ojs.call x9245 "push" [|(Ojs.float_to_js x9247)|])
                     | None -> ());
                    (match x9244 with
                     | Some x9246 ->
                         ignore
                           (Ojs.call x9245 "push" [|(Ojs.float_to_js x9246)|])
                     | None -> ());
                    x9245))
    let (bytes_per_element : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Int16Array")
             "BYTES_PER_ELEMENT")
    let (of_ : float list -> t) =
      fun (x9248 : float list) ->
        t_of_js
          (let x9251 = Ojs.get_prop_ascii Ojs.global "Int16Array" in
           Ojs.call (Ojs.get_prop_ascii x9251 "of") "apply"
             [|x9251;((let x9249 =
                         Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                           [||] in
                       List.iter
                         (fun (x9250 : float) ->
                            ignore
                              (Ojs.call x9249 "push"
                                 [|(Ojs.float_to_js x9250)|])) x9248;
                       x9249))|])
    let (from' : float ArrayLike.t -> t) =
      fun (x9252 : float ArrayLike.t) ->
        t_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Int16Array") "from"
             [|(ArrayLike.t_to_js Ojs.float_to_js x9252)|])
    let (from'' :
      arrayLike:'T ArrayLike.t ->
        mapfn:(v:'T -> k:float -> float) -> ?thisArg:any -> unit -> t)
      =
      fun ~arrayLike:(x9254 : 'T ArrayLike.t) ->
        fun ~mapfn:(x9255 : v:'T -> k:float -> float) ->
          fun ?thisArg:(x9256 : any option) ->
            fun () ->
              t_of_js
                (let x9262 = Ojs.get_prop_ascii Ojs.global "Int16Array" in
                 Ojs.call (Ojs.get_prop_ascii x9262 "from") "apply"
                   [|x9262;((let x9257 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x9257 "push"
                                  [|(ArrayLike.t_to_js Obj.magic x9254)|]);
                             ignore
                               (Ojs.call x9257 "push"
                                  [|(Ojs.fun_to_js 2
                                       (fun (x9259 : Ojs.t) ->
                                          fun (x9260 : Ojs.t) ->
                                            Ojs.float_to_js
                                              (x9255 ~v:(Obj.magic x9259)
                                                 ~k:(Ojs.float_of_js x9260))))|]);
                             (match x9256 with
                              | Some x9258 ->
                                  ignore
                                    (Ojs.call x9257 "push"
                                       [|(any_to_js x9258)|])
                              | None -> ());
                             x9257))|])
    let cast_from = Obj.magic
  end
module BigUint64Array =
  struct
    type t = [ `BigUint64Array ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type tags = [ `BigUint64Array ]
    type 'tags this = 'tags intf constraint 'tags = [> `BigUint64Array ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x9265 : Ojs.t) -> intf_of_js __tags_of_js x9265
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x9263 : __tags intf) -> intf_to_js __tags_to_js x9263
    let (findLast :
      'tags this ->
        predicate:(value:bigint -> index:float -> array:t -> bool) ->
          ?thisArg:any -> unit -> 'S option)
      =
      fun (x9274 : 'tags this) ->
        fun
          ~predicate:(x9267 : value:bigint -> index:float -> array:t -> bool)
          ->
          fun ?thisArg:(x9268 : any option) ->
            fun () ->
              Ojs.option_of_js Obj.magic
                (let x9276 = this_to_js Obj.magic x9274 in
                 Ojs.call (Ojs.get_prop_ascii x9276 "findLast") "apply"
                   [|x9276;((let x9269 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x9269 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x9271 : Ojs.t) ->
                                          fun (x9272 : Ojs.t) ->
                                            fun (x9273 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x9267
                                                   ~value:(bigint_of_js x9271)
                                                   ~index:(Ojs.float_of_js
                                                             x9272)
                                                   ~array:(t_of_js x9273))))|]);
                             (match x9268 with
                              | Some x9270 ->
                                  ignore
                                    (Ojs.call x9269 "push"
                                       [|(any_to_js x9270)|])
                              | None -> ());
                             x9269))|])
    let (findLast' :
      'tags this ->
        predicate:(value:bigint -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> bigint option)
      =
      fun (x9285 : 'tags this) ->
        fun
          ~predicate:(x9278 :
                       value:bigint -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x9279 : any option) ->
            fun () ->
              Ojs.option_of_js bigint_of_js
                (let x9287 = this_to_js Obj.magic x9285 in
                 Ojs.call (Ojs.get_prop_ascii x9287 "findLast") "apply"
                   [|x9287;((let x9280 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x9280 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x9282 : Ojs.t) ->
                                          fun (x9283 : Ojs.t) ->
                                            fun (x9284 : Ojs.t) ->
                                              unknown_to_js
                                                (x9278
                                                   ~value:(bigint_of_js x9282)
                                                   ~index:(Ojs.float_of_js
                                                             x9283)
                                                   ~array:(t_of_js x9284))))|]);
                             (match x9279 with
                              | Some x9281 ->
                                  ignore
                                    (Ojs.call x9280 "push"
                                       [|(any_to_js x9281)|])
                              | None -> ());
                             x9280))|])
    let (findLastIndex :
      'tags this ->
        predicate:(value:bigint -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> float)
      =
      fun (x9296 : 'tags this) ->
        fun
          ~predicate:(x9289 :
                       value:bigint -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x9290 : any option) ->
            fun () ->
              Ojs.float_of_js
                (let x9298 = this_to_js Obj.magic x9296 in
                 Ojs.call (Ojs.get_prop_ascii x9298 "findLastIndex") "apply"
                   [|x9298;((let x9291 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x9291 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x9293 : Ojs.t) ->
                                          fun (x9294 : Ojs.t) ->
                                            fun (x9295 : Ojs.t) ->
                                              unknown_to_js
                                                (x9289
                                                   ~value:(bigint_of_js x9293)
                                                   ~index:(Ojs.float_of_js
                                                             x9294)
                                                   ~array:(t_of_js x9295))))|]);
                             (match x9290 with
                              | Some x9292 ->
                                  ignore
                                    (Ojs.call x9291 "push"
                                       [|(any_to_js x9292)|])
                              | None -> ());
                             x9291))|])
    let (toReversed : 'tags this -> t) =
      fun (x9299 : 'tags this) ->
        t_of_js (Ojs.call (this_to_js Obj.magic x9299) "toReversed" [||])
    let (toSorted :
      'tags this -> ?compareFn:(a:bigint -> b:bigint -> float) -> unit -> t)
      =
      fun (x9306 : 'tags this) ->
        fun ?compareFn:(x9301 : (a:bigint -> b:bigint -> float) option) ->
          fun () ->
            t_of_js
              (let x9308 = this_to_js Obj.magic x9306 in
               Ojs.call (Ojs.get_prop_ascii x9308 "toSorted") "apply"
                 [|x9308;((let x9302 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x9301 with
                            | Some x9303 ->
                                ignore
                                  (Ojs.call x9302 "push"
                                     [|(Ojs.fun_to_js 2
                                          (fun (x9304 : Ojs.t) ->
                                             fun (x9305 : Ojs.t) ->
                                               Ojs.float_to_js
                                                 (x9303
                                                    ~a:(bigint_of_js x9304)
                                                    ~b:(bigint_of_js x9305))))|])
                            | None -> ());
                           x9302))|])
    let (with_ : 'tags this -> index:float -> value:bigint -> t) =
      fun (x9311 : 'tags this) ->
        fun ~index:(x9309 : float) ->
          fun ~value:(x9310 : bigint) ->
            t_of_js
              (Ojs.call (this_to_js Obj.magic x9311) "with"
                 [|(Ojs.float_to_js x9309);(bigint_to_js x9310)|])
    let (at : 'tags this -> index:float -> bigint option) =
      fun (x9314 : 'tags this) ->
        fun ~index:(x9313 : float) ->
          Ojs.option_of_js bigint_of_js
            (Ojs.call (this_to_js Obj.magic x9314) "at"
               [|(Ojs.float_to_js x9313)|])
    let (get_BYTES_PER_ELEMENT : 'tags this -> float) =
      fun (x9317 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x9317)
             "BYTES_PER_ELEMENT")
    let (get_buffer : 'tags this -> ArrayBufferLike.t) =
      fun (x9319 : 'tags this) ->
        ArrayBufferLike.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x9319) "buffer")
    let (get_byteLength : 'tags this -> float) =
      fun (x9321 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x9321) "byteLength")
    let (get_byteOffset : 'tags this -> float) =
      fun (x9323 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x9323) "byteOffset")
    let (copyWithin :
      'tags this ->
        target:float -> start:float -> ?end_:float -> unit -> 'tags this)
      =
      fun (x9330 : 'tags this) ->
        fun ~target:(x9325 : float) ->
          fun ~start:(x9326 : float) ->
            fun ?end_:(x9327 : float option) ->
              fun () ->
                this_of_js Obj.magic
                  (let x9332 = this_to_js Obj.magic x9330 in
                   Ojs.call (Ojs.get_prop_ascii x9332 "copyWithin") "apply"
                     [|x9332;((let x9328 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x9328 "push"
                                    [|(Ojs.float_to_js x9325)|]);
                               ignore
                                 (Ojs.call x9328 "push"
                                    [|(Ojs.float_to_js x9326)|]);
                               (match x9327 with
                                | Some x9329 ->
                                    ignore
                                      (Ojs.call x9328 "push"
                                         [|(Ojs.float_to_js x9329)|])
                                | None -> ());
                               x9328))|])
    let (entries : 'tags this -> (float * bigint) IterableIterator.t) =
      fun (x9334 : 'tags this) ->
        IterableIterator.t_of_js
          (fun (x9336 : Ojs.t) ->
             let x9337 = x9336 in
             ((Ojs.float_of_js (Ojs.array_get x9337 0)),
               (bigint_of_js (Ojs.array_get x9337 1))))
          (Ojs.call (this_to_js Obj.magic x9334) "entries" [||])
    let (every :
      'tags this ->
        predicate:(value:bigint -> index:float -> array:t -> bool) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x9345 : 'tags this) ->
        fun
          ~predicate:(x9338 : value:bigint -> index:float -> array:t -> bool)
          ->
          fun ?thisArg:(x9339 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x9347 = this_to_js Obj.magic x9345 in
                 Ojs.call (Ojs.get_prop_ascii x9347 "every") "apply"
                   [|x9347;((let x9340 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x9340 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x9342 : Ojs.t) ->
                                          fun (x9343 : Ojs.t) ->
                                            fun (x9344 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x9338
                                                   ~value:(bigint_of_js x9342)
                                                   ~index:(Ojs.float_of_js
                                                             x9343)
                                                   ~array:(t_of_js x9344))))|]);
                             (match x9339 with
                              | Some x9341 ->
                                  ignore
                                    (Ojs.call x9340 "push"
                                       [|(any_to_js x9341)|])
                              | None -> ());
                             x9340))|])
    let (fill :
      'tags this ->
        value:bigint -> ?start:float -> ?end_:float -> unit -> 'tags this)
      =
      fun (x9354 : 'tags this) ->
        fun ~value:(x9348 : bigint) ->
          fun ?start:(x9349 : float option) ->
            fun ?end_:(x9350 : float option) ->
              fun () ->
                this_of_js Obj.magic
                  (let x9356 = this_to_js Obj.magic x9354 in
                   Ojs.call (Ojs.get_prop_ascii x9356 "fill") "apply"
                     [|x9356;((let x9351 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x9351 "push"
                                    [|(bigint_to_js x9348)|]);
                               (match x9349 with
                                | Some x9353 ->
                                    ignore
                                      (Ojs.call x9351 "push"
                                         [|(Ojs.float_to_js x9353)|])
                                | None -> ());
                               (match x9350 with
                                | Some x9352 ->
                                    ignore
                                      (Ojs.call x9351 "push"
                                         [|(Ojs.float_to_js x9352)|])
                                | None -> ());
                               x9351))|])
    let (filter :
      'tags this ->
        predicate:(value:bigint -> index:float -> array:t -> any) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x9365 : 'tags this) ->
        fun
          ~predicate:(x9358 : value:bigint -> index:float -> array:t -> any)
          ->
          fun ?thisArg:(x9359 : any option) ->
            fun () ->
              t_of_js
                (let x9367 = this_to_js Obj.magic x9365 in
                 Ojs.call (Ojs.get_prop_ascii x9367 "filter") "apply"
                   [|x9367;((let x9360 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x9360 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x9362 : Ojs.t) ->
                                          fun (x9363 : Ojs.t) ->
                                            fun (x9364 : Ojs.t) ->
                                              any_to_js
                                                (x9358
                                                   ~value:(bigint_of_js x9362)
                                                   ~index:(Ojs.float_of_js
                                                             x9363)
                                                   ~array:(t_of_js x9364))))|]);
                             (match x9359 with
                              | Some x9361 ->
                                  ignore
                                    (Ojs.call x9360 "push"
                                       [|(any_to_js x9361)|])
                              | None -> ());
                             x9360))|])
    let (find :
      'tags this ->
        predicate:(value:bigint -> index:float -> array:t -> bool) ->
          ?thisArg:any -> unit -> bigint option)
      =
      fun (x9375 : 'tags this) ->
        fun
          ~predicate:(x9368 : value:bigint -> index:float -> array:t -> bool)
          ->
          fun ?thisArg:(x9369 : any option) ->
            fun () ->
              Ojs.option_of_js bigint_of_js
                (let x9377 = this_to_js Obj.magic x9375 in
                 Ojs.call (Ojs.get_prop_ascii x9377 "find") "apply"
                   [|x9377;((let x9370 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x9370 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x9372 : Ojs.t) ->
                                          fun (x9373 : Ojs.t) ->
                                            fun (x9374 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x9368
                                                   ~value:(bigint_of_js x9372)
                                                   ~index:(Ojs.float_of_js
                                                             x9373)
                                                   ~array:(t_of_js x9374))))|]);
                             (match x9369 with
                              | Some x9371 ->
                                  ignore
                                    (Ojs.call x9370 "push"
                                       [|(any_to_js x9371)|])
                              | None -> ());
                             x9370))|])
    let (findIndex :
      'tags this ->
        predicate:(value:bigint -> index:float -> array:t -> bool) ->
          ?thisArg:any -> unit -> float)
      =
      fun (x9386 : 'tags this) ->
        fun
          ~predicate:(x9379 : value:bigint -> index:float -> array:t -> bool)
          ->
          fun ?thisArg:(x9380 : any option) ->
            fun () ->
              Ojs.float_of_js
                (let x9388 = this_to_js Obj.magic x9386 in
                 Ojs.call (Ojs.get_prop_ascii x9388 "findIndex") "apply"
                   [|x9388;((let x9381 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x9381 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x9383 : Ojs.t) ->
                                          fun (x9384 : Ojs.t) ->
                                            fun (x9385 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x9379
                                                   ~value:(bigint_of_js x9383)
                                                   ~index:(Ojs.float_of_js
                                                             x9384)
                                                   ~array:(t_of_js x9385))))|]);
                             (match x9380 with
                              | Some x9382 ->
                                  ignore
                                    (Ojs.call x9381 "push"
                                       [|(any_to_js x9382)|])
                              | None -> ());
                             x9381))|])
    let (forEach :
      'tags this ->
        callbackfn:(value:bigint -> index:float -> array:t -> unit) ->
          ?thisArg:any -> unit -> unit)
      =
      fun (x9396 : 'tags this) ->
        fun
          ~callbackfn:(x9389 :
                        value:bigint -> index:float -> array:t -> unit)
          ->
          fun ?thisArg:(x9390 : any option) ->
            fun () ->
              ignore
                (let x9398 = this_to_js Obj.magic x9396 in
                 Ojs.call (Ojs.get_prop_ascii x9398 "forEach") "apply"
                   [|x9398;((let x9391 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x9391 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x9393 : Ojs.t) ->
                                          fun (x9394 : Ojs.t) ->
                                            fun (x9395 : Ojs.t) ->
                                              x9389
                                                ~value:(bigint_of_js x9393)
                                                ~index:(Ojs.float_of_js x9394)
                                                ~array:(t_of_js x9395)))|]);
                             (match x9390 with
                              | Some x9392 ->
                                  ignore
                                    (Ojs.call x9391 "push"
                                       [|(any_to_js x9392)|])
                              | None -> ());
                             x9391))|])
    let (includes :
      'tags this -> searchElement:bigint -> ?fromIndex:float -> unit -> bool)
      =
      fun (x9403 : 'tags this) ->
        fun ~searchElement:(x9399 : bigint) ->
          fun ?fromIndex:(x9400 : float option) ->
            fun () ->
              Ojs.bool_of_js
                (let x9405 = this_to_js Obj.magic x9403 in
                 Ojs.call (Ojs.get_prop_ascii x9405 "includes") "apply"
                   [|x9405;((let x9401 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x9401 "push"
                                  [|(bigint_to_js x9399)|]);
                             (match x9400 with
                              | Some x9402 ->
                                  ignore
                                    (Ojs.call x9401 "push"
                                       [|(Ojs.float_to_js x9402)|])
                              | None -> ());
                             x9401))|])
    let (indexOf :
      'tags this -> searchElement:bigint -> ?fromIndex:float -> unit -> float)
      =
      fun (x9410 : 'tags this) ->
        fun ~searchElement:(x9406 : bigint) ->
          fun ?fromIndex:(x9407 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x9412 = this_to_js Obj.magic x9410 in
                 Ojs.call (Ojs.get_prop_ascii x9412 "indexOf") "apply"
                   [|x9412;((let x9408 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x9408 "push"
                                  [|(bigint_to_js x9406)|]);
                             (match x9407 with
                              | Some x9409 ->
                                  ignore
                                    (Ojs.call x9408 "push"
                                       [|(Ojs.float_to_js x9409)|])
                              | None -> ());
                             x9408))|])
    let (join : 'tags this -> ?separator:string -> unit -> string) =
      fun (x9416 : 'tags this) ->
        fun ?separator:(x9413 : string option) ->
          fun () ->
            Ojs.string_of_js
              (let x9418 = this_to_js Obj.magic x9416 in
               Ojs.call (Ojs.get_prop_ascii x9418 "join") "apply"
                 [|x9418;((let x9414 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x9413 with
                            | Some x9415 ->
                                ignore
                                  (Ojs.call x9414 "push"
                                     [|(Ojs.string_to_js x9415)|])
                            | None -> ());
                           x9414))|])
    let (keys : 'tags this -> float IterableIterator.t) =
      fun (x9419 : 'tags this) ->
        IterableIterator.t_of_js Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x9419) "keys" [||])
    let (lastIndexOf :
      'tags this -> searchElement:bigint -> ?fromIndex:float -> unit -> float)
      =
      fun (x9426 : 'tags this) ->
        fun ~searchElement:(x9422 : bigint) ->
          fun ?fromIndex:(x9423 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x9428 = this_to_js Obj.magic x9426 in
                 Ojs.call (Ojs.get_prop_ascii x9428 "lastIndexOf") "apply"
                   [|x9428;((let x9424 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x9424 "push"
                                  [|(bigint_to_js x9422)|]);
                             (match x9423 with
                              | Some x9425 ->
                                  ignore
                                    (Ojs.call x9424 "push"
                                       [|(Ojs.float_to_js x9425)|])
                              | None -> ());
                             x9424))|])
    let (get_length : 'tags this -> float) =
      fun (x9429 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x9429) "length")
    let (map :
      'tags this ->
        callbackfn:(value:bigint -> index:float -> array:t -> bigint) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x9438 : 'tags this) ->
        fun
          ~callbackfn:(x9431 :
                        value:bigint -> index:float -> array:t -> bigint)
          ->
          fun ?thisArg:(x9432 : any option) ->
            fun () ->
              t_of_js
                (let x9440 = this_to_js Obj.magic x9438 in
                 Ojs.call (Ojs.get_prop_ascii x9440 "map") "apply"
                   [|x9440;((let x9433 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x9433 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x9435 : Ojs.t) ->
                                          fun (x9436 : Ojs.t) ->
                                            fun (x9437 : Ojs.t) ->
                                              bigint_to_js
                                                (x9431
                                                   ~value:(bigint_of_js x9435)
                                                   ~index:(Ojs.float_of_js
                                                             x9436)
                                                   ~array:(t_of_js x9437))))|]);
                             (match x9432 with
                              | Some x9434 ->
                                  ignore
                                    (Ojs.call x9433 "push"
                                       [|(any_to_js x9434)|])
                              | None -> ());
                             x9433))|])
    let (reduce :
      'tags this ->
        callbackfn:(previousValue:bigint ->
                      currentValue:bigint ->
                        currentIndex:float -> array:t -> bigint)
          -> bigint)
      =
      fun (x9446 : 'tags this) ->
        fun
          ~callbackfn:(x9441 :
                        previousValue:bigint ->
                          currentValue:bigint ->
                            currentIndex:float -> array:t -> bigint)
          ->
          bigint_of_js
            (Ojs.call (this_to_js Obj.magic x9446) "reduce"
               [|(Ojs.fun_to_js 4
                    (fun (x9442 : Ojs.t) ->
                       fun (x9443 : Ojs.t) ->
                         fun (x9444 : Ojs.t) ->
                           fun (x9445 : Ojs.t) ->
                             bigint_to_js
                               (x9441 ~previousValue:(bigint_of_js x9442)
                                  ~currentValue:(bigint_of_js x9443)
                                  ~currentIndex:(Ojs.float_of_js x9444)
                                  ~array:(t_of_js x9445))))|])
    let (reduce' :
      'tags this ->
        callbackfn:(previousValue:'U ->
                      currentValue:bigint ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x9454 : 'tags this) ->
        fun
          ~callbackfn:(x9448 :
                        previousValue:'U ->
                          currentValue:bigint ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x9453 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic x9454) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x9449 : Ojs.t) ->
                         fun (x9450 : Ojs.t) ->
                           fun (x9451 : Ojs.t) ->
                             fun (x9452 : Ojs.t) ->
                               Obj.magic
                                 (x9448 ~previousValue:(Obj.magic x9449)
                                    ~currentValue:(bigint_of_js x9450)
                                    ~currentIndex:(Ojs.float_of_js x9451)
                                    ~array:(t_of_js x9452))));(Obj.magic
                                                                 x9453)|])
    let (reduceRight :
      'tags this ->
        callbackfn:(previousValue:bigint ->
                      currentValue:bigint ->
                        currentIndex:float -> array:t -> bigint)
          -> bigint)
      =
      fun (x9461 : 'tags this) ->
        fun
          ~callbackfn:(x9456 :
                        previousValue:bigint ->
                          currentValue:bigint ->
                            currentIndex:float -> array:t -> bigint)
          ->
          bigint_of_js
            (Ojs.call (this_to_js Obj.magic x9461) "reduceRight"
               [|(Ojs.fun_to_js 4
                    (fun (x9457 : Ojs.t) ->
                       fun (x9458 : Ojs.t) ->
                         fun (x9459 : Ojs.t) ->
                           fun (x9460 : Ojs.t) ->
                             bigint_to_js
                               (x9456 ~previousValue:(bigint_of_js x9457)
                                  ~currentValue:(bigint_of_js x9458)
                                  ~currentIndex:(Ojs.float_of_js x9459)
                                  ~array:(t_of_js x9460))))|])
    let (reduceRight' :
      'tags this ->
        callbackfn:(previousValue:'U ->
                      currentValue:bigint ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x9469 : 'tags this) ->
        fun
          ~callbackfn:(x9463 :
                        previousValue:'U ->
                          currentValue:bigint ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x9468 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic x9469) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x9464 : Ojs.t) ->
                         fun (x9465 : Ojs.t) ->
                           fun (x9466 : Ojs.t) ->
                             fun (x9467 : Ojs.t) ->
                               Obj.magic
                                 (x9463 ~previousValue:(Obj.magic x9464)
                                    ~currentValue:(bigint_of_js x9465)
                                    ~currentIndex:(Ojs.float_of_js x9466)
                                    ~array:(t_of_js x9467))));(Obj.magic
                                                                 x9468)|])
    let (reverse : 'tags this -> 'tags this) =
      fun (x9471 : 'tags this) ->
        this_of_js Obj.magic
          (Ojs.call (this_to_js Obj.magic x9471) "reverse" [||])
    let (set_ :
      'tags this -> array:bigint ArrayLike.t -> ?offset:float -> unit -> unit)
      =
      fun (x9479 : 'tags this) ->
        fun ~array:(x9474 : bigint ArrayLike.t) ->
          fun ?offset:(x9475 : float option) ->
            fun () ->
              ignore
                (let x9481 = this_to_js Obj.magic x9479 in
                 Ojs.call (Ojs.get_prop_ascii x9481 "set") "apply"
                   [|x9481;((let x9476 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x9476 "push"
                                  [|(ArrayLike.t_to_js bigint_to_js x9474)|]);
                             (match x9475 with
                              | Some x9477 ->
                                  ignore
                                    (Ojs.call x9476 "push"
                                       [|(Ojs.float_to_js x9477)|])
                              | None -> ());
                             x9476))|])
    let (slice : 'tags this -> ?start:float -> ?end_:float -> unit -> t) =
      fun (x9487 : 'tags this) ->
        fun ?start:(x9482 : float option) ->
          fun ?end_:(x9483 : float option) ->
            fun () ->
              t_of_js
                (let x9489 = this_to_js Obj.magic x9487 in
                 Ojs.call (Ojs.get_prop_ascii x9489 "slice") "apply"
                   [|x9489;((let x9484 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x9482 with
                              | Some x9486 ->
                                  ignore
                                    (Ojs.call x9484 "push"
                                       [|(Ojs.float_to_js x9486)|])
                              | None -> ());
                             (match x9483 with
                              | Some x9485 ->
                                  ignore
                                    (Ojs.call x9484 "push"
                                       [|(Ojs.float_to_js x9485)|])
                              | None -> ());
                             x9484))|])
    let (some :
      'tags this ->
        predicate:(value:bigint -> index:float -> array:t -> bool) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x9497 : 'tags this) ->
        fun
          ~predicate:(x9490 : value:bigint -> index:float -> array:t -> bool)
          ->
          fun ?thisArg:(x9491 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x9499 = this_to_js Obj.magic x9497 in
                 Ojs.call (Ojs.get_prop_ascii x9499 "some") "apply"
                   [|x9499;((let x9492 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x9492 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x9494 : Ojs.t) ->
                                          fun (x9495 : Ojs.t) ->
                                            fun (x9496 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x9490
                                                   ~value:(bigint_of_js x9494)
                                                   ~index:(Ojs.float_of_js
                                                             x9495)
                                                   ~array:(t_of_js x9496))))|]);
                             (match x9491 with
                              | Some x9493 ->
                                  ignore
                                    (Ojs.call x9492 "push"
                                       [|(any_to_js x9493)|])
                              | None -> ());
                             x9492))|])
    let (sort :
      'tags this ->
        ?compareFn:(a:bigint -> b:bigint -> [ `U1 of float  | `U2 of bigint ])
          -> unit -> 'tags this)
      =
      fun (x9507 : 'tags this) ->
        fun
          ?compareFn:(x9500 :
                       (a:bigint ->
                          b:bigint -> [ `U1 of float  | `U2 of bigint ])
                         option)
          ->
          fun () ->
            this_of_js Obj.magic
              (let x9509 = this_to_js Obj.magic x9507 in
               Ojs.call (Ojs.get_prop_ascii x9509 "sort") "apply"
                 [|x9509;((let x9501 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x9500 with
                            | Some x9502 ->
                                ignore
                                  (Ojs.call x9501 "push"
                                     [|(Ojs.fun_to_js 2
                                          (fun (x9503 : Ojs.t) ->
                                             fun (x9504 : Ojs.t) ->
                                               match x9502
                                                       ~a:(bigint_of_js x9503)
                                                       ~b:(bigint_of_js x9504)
                                               with
                                               | `U1 x9505 ->
                                                   Ojs.float_to_js x9505
                                               | `U2 x9506 ->
                                                   bigint_to_js x9506))|])
                            | None -> ());
                           x9501))|])
    let (subarray : 'tags this -> ?begin_:float -> ?end_:float -> unit -> t)
      =
      fun (x9516 : 'tags this) ->
        fun ?begin_:(x9511 : float option) ->
          fun ?end_:(x9512 : float option) ->
            fun () ->
              t_of_js
                (let x9518 = this_to_js Obj.magic x9516 in
                 Ojs.call (Ojs.get_prop_ascii x9518 "subarray") "apply"
                   [|x9518;((let x9513 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x9511 with
                              | Some x9515 ->
                                  ignore
                                    (Ojs.call x9513 "push"
                                       [|(Ojs.float_to_js x9515)|])
                              | None -> ());
                             (match x9512 with
                              | Some x9514 ->
                                  ignore
                                    (Ojs.call x9513 "push"
                                       [|(Ojs.float_to_js x9514)|])
                              | None -> ());
                             x9513))|])
    let (toLocaleString : 'tags this -> string) =
      fun (x9519 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x9519) "toLocaleString" [||])
    let (toString : 'tags this -> string) =
      fun (x9521 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x9521) "toString" [||])
    let (valueOf : 'tags this -> t) =
      fun (x9523 : 'tags this) ->
        t_of_js (Ojs.call (this_to_js Obj.magic x9523) "valueOf" [||])
    let (values : 'tags this -> bigint IterableIterator.t) =
      fun (x9525 : 'tags this) ->
        IterableIterator.t_of_js bigint_of_js
          (Ojs.call (this_to_js Obj.magic x9525) "values" [||])
    let (get : 'tags this -> float -> bigint) =
      fun (x9528 : 'tags this) ->
        fun (x9530 : float) ->
          bigint_of_js
            (Ojs.get_prop (this_to_js Obj.magic x9528)
               (Ojs.float_to_js x9530))
    let (set : 'tags this -> float -> bigint -> unit) =
      fun (x9531 : 'tags this) ->
        fun (x9533 : float) ->
          fun (x9534 : bigint) ->
            Ojs.set_prop (this_to_js Obj.magic x9531) (Ojs.float_to_js x9533)
              (bigint_to_js x9534)
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "BigUint64Array") "prototype")
    let (create : ?length:float -> unit -> t) =
      fun ?length:(x9535 : float option) ->
        fun () ->
          t_of_js
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "BigUint64Array")
               (let x9536 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x9535 with
                 | Some x9537 ->
                     ignore
                       (Ojs.call x9536 "push" [|(Ojs.float_to_js x9537)|])
                 | None -> ());
                x9536))
    let (create' : bigint Iterable.t -> t) =
      fun (x9538 : bigint Iterable.t) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "BigUint64Array")
             [|(Iterable.t_to_js bigint_to_js x9538)|])
    let (create'' :
      buffer:ArrayBufferLike.t ->
        ?byteOffset:float -> ?length:float -> unit -> t)
      =
      fun ~buffer:(x9540 : ArrayBufferLike.t) ->
        fun ?byteOffset:(x9541 : float option) ->
          fun ?length:(x9542 : float option) ->
            fun () ->
              t_of_js
                (Ojs.new_obj_arr
                   (Ojs.get_prop_ascii Ojs.global "BigUint64Array")
                   (let x9543 =
                      Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                        [||] in
                    ignore
                      (Ojs.call x9543 "push"
                         [|(ArrayBufferLike.t_to_js x9540)|]);
                    (match x9541 with
                     | Some x9545 ->
                         ignore
                           (Ojs.call x9543 "push" [|(Ojs.float_to_js x9545)|])
                     | None -> ());
                    (match x9542 with
                     | Some x9544 ->
                         ignore
                           (Ojs.call x9543 "push" [|(Ojs.float_to_js x9544)|])
                     | None -> ());
                    x9543))
    let (bytes_per_element : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "BigUint64Array")
             "BYTES_PER_ELEMENT")
    let (of_ : bigint list -> t) =
      fun (x9546 : bigint list) ->
        t_of_js
          (let x9549 = Ojs.get_prop_ascii Ojs.global "BigUint64Array" in
           Ojs.call (Ojs.get_prop_ascii x9549 "of") "apply"
             [|x9549;((let x9547 =
                         Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                           [||] in
                       List.iter
                         (fun (x9548 : bigint) ->
                            ignore
                              (Ojs.call x9547 "push" [|(bigint_to_js x9548)|]))
                         x9546;
                       x9547))|])
    let (from : bigint ArrayLike.t -> t) =
      fun (x9550 : bigint ArrayLike.t) ->
        t_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "BigUint64Array") "from"
             [|(ArrayLike.t_to_js bigint_to_js x9550)|])
    let (from' :
      arrayLike:'U ArrayLike.t ->
        mapfn:(v:'U -> k:float -> bigint) -> ?thisArg:any -> unit -> t)
      =
      fun ~arrayLike:(x9552 : 'U ArrayLike.t) ->
        fun ~mapfn:(x9553 : v:'U -> k:float -> bigint) ->
          fun ?thisArg:(x9554 : any option) ->
            fun () ->
              t_of_js
                (let x9560 = Ojs.get_prop_ascii Ojs.global "BigUint64Array" in
                 Ojs.call (Ojs.get_prop_ascii x9560 "from") "apply"
                   [|x9560;((let x9555 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x9555 "push"
                                  [|(ArrayLike.t_to_js Obj.magic x9552)|]);
                             ignore
                               (Ojs.call x9555 "push"
                                  [|(Ojs.fun_to_js 2
                                       (fun (x9557 : Ojs.t) ->
                                          fun (x9558 : Ojs.t) ->
                                            bigint_to_js
                                              (x9553 ~v:(Obj.magic x9557)
                                                 ~k:(Ojs.float_of_js x9558))))|]);
                             (match x9554 with
                              | Some x9556 ->
                                  ignore
                                    (Ojs.call x9555 "push"
                                       [|(any_to_js x9556)|])
                              | None -> ());
                             x9555))|])
    let cast_from = Obj.magic
  end
module BigInt64Array =
  struct
    type t = [ `BigInt64Array ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type tags = [ `BigInt64Array ]
    type 'tags this = 'tags intf constraint 'tags = [> `BigInt64Array ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x9563 : Ojs.t) -> intf_of_js __tags_of_js x9563
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x9561 : __tags intf) -> intf_to_js __tags_to_js x9561
    let (findLast :
      'tags this ->
        predicate:(value:bigint -> index:float -> array:t -> bool) ->
          ?thisArg:any -> unit -> 'S option)
      =
      fun (x9572 : 'tags this) ->
        fun
          ~predicate:(x9565 : value:bigint -> index:float -> array:t -> bool)
          ->
          fun ?thisArg:(x9566 : any option) ->
            fun () ->
              Ojs.option_of_js Obj.magic
                (let x9574 = this_to_js Obj.magic x9572 in
                 Ojs.call (Ojs.get_prop_ascii x9574 "findLast") "apply"
                   [|x9574;((let x9567 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x9567 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x9569 : Ojs.t) ->
                                          fun (x9570 : Ojs.t) ->
                                            fun (x9571 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x9565
                                                   ~value:(bigint_of_js x9569)
                                                   ~index:(Ojs.float_of_js
                                                             x9570)
                                                   ~array:(t_of_js x9571))))|]);
                             (match x9566 with
                              | Some x9568 ->
                                  ignore
                                    (Ojs.call x9567 "push"
                                       [|(any_to_js x9568)|])
                              | None -> ());
                             x9567))|])
    let (findLast' :
      'tags this ->
        predicate:(value:bigint -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> bigint option)
      =
      fun (x9583 : 'tags this) ->
        fun
          ~predicate:(x9576 :
                       value:bigint -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x9577 : any option) ->
            fun () ->
              Ojs.option_of_js bigint_of_js
                (let x9585 = this_to_js Obj.magic x9583 in
                 Ojs.call (Ojs.get_prop_ascii x9585 "findLast") "apply"
                   [|x9585;((let x9578 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x9578 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x9580 : Ojs.t) ->
                                          fun (x9581 : Ojs.t) ->
                                            fun (x9582 : Ojs.t) ->
                                              unknown_to_js
                                                (x9576
                                                   ~value:(bigint_of_js x9580)
                                                   ~index:(Ojs.float_of_js
                                                             x9581)
                                                   ~array:(t_of_js x9582))))|]);
                             (match x9577 with
                              | Some x9579 ->
                                  ignore
                                    (Ojs.call x9578 "push"
                                       [|(any_to_js x9579)|])
                              | None -> ());
                             x9578))|])
    let (findLastIndex :
      'tags this ->
        predicate:(value:bigint -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> float)
      =
      fun (x9594 : 'tags this) ->
        fun
          ~predicate:(x9587 :
                       value:bigint -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x9588 : any option) ->
            fun () ->
              Ojs.float_of_js
                (let x9596 = this_to_js Obj.magic x9594 in
                 Ojs.call (Ojs.get_prop_ascii x9596 "findLastIndex") "apply"
                   [|x9596;((let x9589 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x9589 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x9591 : Ojs.t) ->
                                          fun (x9592 : Ojs.t) ->
                                            fun (x9593 : Ojs.t) ->
                                              unknown_to_js
                                                (x9587
                                                   ~value:(bigint_of_js x9591)
                                                   ~index:(Ojs.float_of_js
                                                             x9592)
                                                   ~array:(t_of_js x9593))))|]);
                             (match x9588 with
                              | Some x9590 ->
                                  ignore
                                    (Ojs.call x9589 "push"
                                       [|(any_to_js x9590)|])
                              | None -> ());
                             x9589))|])
    let (toReversed : 'tags this -> t) =
      fun (x9597 : 'tags this) ->
        t_of_js (Ojs.call (this_to_js Obj.magic x9597) "toReversed" [||])
    let (toSorted :
      'tags this -> ?compareFn:(a:bigint -> b:bigint -> float) -> unit -> t)
      =
      fun (x9604 : 'tags this) ->
        fun ?compareFn:(x9599 : (a:bigint -> b:bigint -> float) option) ->
          fun () ->
            t_of_js
              (let x9606 = this_to_js Obj.magic x9604 in
               Ojs.call (Ojs.get_prop_ascii x9606 "toSorted") "apply"
                 [|x9606;((let x9600 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x9599 with
                            | Some x9601 ->
                                ignore
                                  (Ojs.call x9600 "push"
                                     [|(Ojs.fun_to_js 2
                                          (fun (x9602 : Ojs.t) ->
                                             fun (x9603 : Ojs.t) ->
                                               Ojs.float_to_js
                                                 (x9601
                                                    ~a:(bigint_of_js x9602)
                                                    ~b:(bigint_of_js x9603))))|])
                            | None -> ());
                           x9600))|])
    let (with_ : 'tags this -> index:float -> value:bigint -> t) =
      fun (x9609 : 'tags this) ->
        fun ~index:(x9607 : float) ->
          fun ~value:(x9608 : bigint) ->
            t_of_js
              (Ojs.call (this_to_js Obj.magic x9609) "with"
                 [|(Ojs.float_to_js x9607);(bigint_to_js x9608)|])
    let (at : 'tags this -> index:float -> bigint option) =
      fun (x9612 : 'tags this) ->
        fun ~index:(x9611 : float) ->
          Ojs.option_of_js bigint_of_js
            (Ojs.call (this_to_js Obj.magic x9612) "at"
               [|(Ojs.float_to_js x9611)|])
    let (get_BYTES_PER_ELEMENT : 'tags this -> float) =
      fun (x9615 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x9615)
             "BYTES_PER_ELEMENT")
    let (get_buffer : 'tags this -> ArrayBufferLike.t) =
      fun (x9617 : 'tags this) ->
        ArrayBufferLike.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x9617) "buffer")
    let (get_byteLength : 'tags this -> float) =
      fun (x9619 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x9619) "byteLength")
    let (get_byteOffset : 'tags this -> float) =
      fun (x9621 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x9621) "byteOffset")
    let (copyWithin :
      'tags this ->
        target:float -> start:float -> ?end_:float -> unit -> 'tags this)
      =
      fun (x9628 : 'tags this) ->
        fun ~target:(x9623 : float) ->
          fun ~start:(x9624 : float) ->
            fun ?end_:(x9625 : float option) ->
              fun () ->
                this_of_js Obj.magic
                  (let x9630 = this_to_js Obj.magic x9628 in
                   Ojs.call (Ojs.get_prop_ascii x9630 "copyWithin") "apply"
                     [|x9630;((let x9626 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x9626 "push"
                                    [|(Ojs.float_to_js x9623)|]);
                               ignore
                                 (Ojs.call x9626 "push"
                                    [|(Ojs.float_to_js x9624)|]);
                               (match x9625 with
                                | Some x9627 ->
                                    ignore
                                      (Ojs.call x9626 "push"
                                         [|(Ojs.float_to_js x9627)|])
                                | None -> ());
                               x9626))|])
    let (entries : 'tags this -> (float * bigint) IterableIterator.t) =
      fun (x9632 : 'tags this) ->
        IterableIterator.t_of_js
          (fun (x9634 : Ojs.t) ->
             let x9635 = x9634 in
             ((Ojs.float_of_js (Ojs.array_get x9635 0)),
               (bigint_of_js (Ojs.array_get x9635 1))))
          (Ojs.call (this_to_js Obj.magic x9632) "entries" [||])
    let (every :
      'tags this ->
        predicate:(value:bigint -> index:float -> array:t -> bool) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x9643 : 'tags this) ->
        fun
          ~predicate:(x9636 : value:bigint -> index:float -> array:t -> bool)
          ->
          fun ?thisArg:(x9637 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x9645 = this_to_js Obj.magic x9643 in
                 Ojs.call (Ojs.get_prop_ascii x9645 "every") "apply"
                   [|x9645;((let x9638 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x9638 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x9640 : Ojs.t) ->
                                          fun (x9641 : Ojs.t) ->
                                            fun (x9642 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x9636
                                                   ~value:(bigint_of_js x9640)
                                                   ~index:(Ojs.float_of_js
                                                             x9641)
                                                   ~array:(t_of_js x9642))))|]);
                             (match x9637 with
                              | Some x9639 ->
                                  ignore
                                    (Ojs.call x9638 "push"
                                       [|(any_to_js x9639)|])
                              | None -> ());
                             x9638))|])
    let (fill :
      'tags this ->
        value:bigint -> ?start:float -> ?end_:float -> unit -> 'tags this)
      =
      fun (x9652 : 'tags this) ->
        fun ~value:(x9646 : bigint) ->
          fun ?start:(x9647 : float option) ->
            fun ?end_:(x9648 : float option) ->
              fun () ->
                this_of_js Obj.magic
                  (let x9654 = this_to_js Obj.magic x9652 in
                   Ojs.call (Ojs.get_prop_ascii x9654 "fill") "apply"
                     [|x9654;((let x9649 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x9649 "push"
                                    [|(bigint_to_js x9646)|]);
                               (match x9647 with
                                | Some x9651 ->
                                    ignore
                                      (Ojs.call x9649 "push"
                                         [|(Ojs.float_to_js x9651)|])
                                | None -> ());
                               (match x9648 with
                                | Some x9650 ->
                                    ignore
                                      (Ojs.call x9649 "push"
                                         [|(Ojs.float_to_js x9650)|])
                                | None -> ());
                               x9649))|])
    let (filter :
      'tags this ->
        predicate:(value:bigint -> index:float -> array:t -> any) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x9663 : 'tags this) ->
        fun
          ~predicate:(x9656 : value:bigint -> index:float -> array:t -> any)
          ->
          fun ?thisArg:(x9657 : any option) ->
            fun () ->
              t_of_js
                (let x9665 = this_to_js Obj.magic x9663 in
                 Ojs.call (Ojs.get_prop_ascii x9665 "filter") "apply"
                   [|x9665;((let x9658 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x9658 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x9660 : Ojs.t) ->
                                          fun (x9661 : Ojs.t) ->
                                            fun (x9662 : Ojs.t) ->
                                              any_to_js
                                                (x9656
                                                   ~value:(bigint_of_js x9660)
                                                   ~index:(Ojs.float_of_js
                                                             x9661)
                                                   ~array:(t_of_js x9662))))|]);
                             (match x9657 with
                              | Some x9659 ->
                                  ignore
                                    (Ojs.call x9658 "push"
                                       [|(any_to_js x9659)|])
                              | None -> ());
                             x9658))|])
    let (find :
      'tags this ->
        predicate:(value:bigint -> index:float -> array:t -> bool) ->
          ?thisArg:any -> unit -> bigint option)
      =
      fun (x9673 : 'tags this) ->
        fun
          ~predicate:(x9666 : value:bigint -> index:float -> array:t -> bool)
          ->
          fun ?thisArg:(x9667 : any option) ->
            fun () ->
              Ojs.option_of_js bigint_of_js
                (let x9675 = this_to_js Obj.magic x9673 in
                 Ojs.call (Ojs.get_prop_ascii x9675 "find") "apply"
                   [|x9675;((let x9668 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x9668 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x9670 : Ojs.t) ->
                                          fun (x9671 : Ojs.t) ->
                                            fun (x9672 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x9666
                                                   ~value:(bigint_of_js x9670)
                                                   ~index:(Ojs.float_of_js
                                                             x9671)
                                                   ~array:(t_of_js x9672))))|]);
                             (match x9667 with
                              | Some x9669 ->
                                  ignore
                                    (Ojs.call x9668 "push"
                                       [|(any_to_js x9669)|])
                              | None -> ());
                             x9668))|])
    let (findIndex :
      'tags this ->
        predicate:(value:bigint -> index:float -> array:t -> bool) ->
          ?thisArg:any -> unit -> float)
      =
      fun (x9684 : 'tags this) ->
        fun
          ~predicate:(x9677 : value:bigint -> index:float -> array:t -> bool)
          ->
          fun ?thisArg:(x9678 : any option) ->
            fun () ->
              Ojs.float_of_js
                (let x9686 = this_to_js Obj.magic x9684 in
                 Ojs.call (Ojs.get_prop_ascii x9686 "findIndex") "apply"
                   [|x9686;((let x9679 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x9679 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x9681 : Ojs.t) ->
                                          fun (x9682 : Ojs.t) ->
                                            fun (x9683 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x9677
                                                   ~value:(bigint_of_js x9681)
                                                   ~index:(Ojs.float_of_js
                                                             x9682)
                                                   ~array:(t_of_js x9683))))|]);
                             (match x9678 with
                              | Some x9680 ->
                                  ignore
                                    (Ojs.call x9679 "push"
                                       [|(any_to_js x9680)|])
                              | None -> ());
                             x9679))|])
    let (forEach :
      'tags this ->
        callbackfn:(value:bigint -> index:float -> array:t -> unit) ->
          ?thisArg:any -> unit -> unit)
      =
      fun (x9694 : 'tags this) ->
        fun
          ~callbackfn:(x9687 :
                        value:bigint -> index:float -> array:t -> unit)
          ->
          fun ?thisArg:(x9688 : any option) ->
            fun () ->
              ignore
                (let x9696 = this_to_js Obj.magic x9694 in
                 Ojs.call (Ojs.get_prop_ascii x9696 "forEach") "apply"
                   [|x9696;((let x9689 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x9689 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x9691 : Ojs.t) ->
                                          fun (x9692 : Ojs.t) ->
                                            fun (x9693 : Ojs.t) ->
                                              x9687
                                                ~value:(bigint_of_js x9691)
                                                ~index:(Ojs.float_of_js x9692)
                                                ~array:(t_of_js x9693)))|]);
                             (match x9688 with
                              | Some x9690 ->
                                  ignore
                                    (Ojs.call x9689 "push"
                                       [|(any_to_js x9690)|])
                              | None -> ());
                             x9689))|])
    let (includes :
      'tags this -> searchElement:bigint -> ?fromIndex:float -> unit -> bool)
      =
      fun (x9701 : 'tags this) ->
        fun ~searchElement:(x9697 : bigint) ->
          fun ?fromIndex:(x9698 : float option) ->
            fun () ->
              Ojs.bool_of_js
                (let x9703 = this_to_js Obj.magic x9701 in
                 Ojs.call (Ojs.get_prop_ascii x9703 "includes") "apply"
                   [|x9703;((let x9699 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x9699 "push"
                                  [|(bigint_to_js x9697)|]);
                             (match x9698 with
                              | Some x9700 ->
                                  ignore
                                    (Ojs.call x9699 "push"
                                       [|(Ojs.float_to_js x9700)|])
                              | None -> ());
                             x9699))|])
    let (indexOf :
      'tags this -> searchElement:bigint -> ?fromIndex:float -> unit -> float)
      =
      fun (x9708 : 'tags this) ->
        fun ~searchElement:(x9704 : bigint) ->
          fun ?fromIndex:(x9705 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x9710 = this_to_js Obj.magic x9708 in
                 Ojs.call (Ojs.get_prop_ascii x9710 "indexOf") "apply"
                   [|x9710;((let x9706 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x9706 "push"
                                  [|(bigint_to_js x9704)|]);
                             (match x9705 with
                              | Some x9707 ->
                                  ignore
                                    (Ojs.call x9706 "push"
                                       [|(Ojs.float_to_js x9707)|])
                              | None -> ());
                             x9706))|])
    let (join : 'tags this -> ?separator:string -> unit -> string) =
      fun (x9714 : 'tags this) ->
        fun ?separator:(x9711 : string option) ->
          fun () ->
            Ojs.string_of_js
              (let x9716 = this_to_js Obj.magic x9714 in
               Ojs.call (Ojs.get_prop_ascii x9716 "join") "apply"
                 [|x9716;((let x9712 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x9711 with
                            | Some x9713 ->
                                ignore
                                  (Ojs.call x9712 "push"
                                     [|(Ojs.string_to_js x9713)|])
                            | None -> ());
                           x9712))|])
    let (keys : 'tags this -> float IterableIterator.t) =
      fun (x9717 : 'tags this) ->
        IterableIterator.t_of_js Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x9717) "keys" [||])
    let (lastIndexOf :
      'tags this -> searchElement:bigint -> ?fromIndex:float -> unit -> float)
      =
      fun (x9724 : 'tags this) ->
        fun ~searchElement:(x9720 : bigint) ->
          fun ?fromIndex:(x9721 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x9726 = this_to_js Obj.magic x9724 in
                 Ojs.call (Ojs.get_prop_ascii x9726 "lastIndexOf") "apply"
                   [|x9726;((let x9722 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x9722 "push"
                                  [|(bigint_to_js x9720)|]);
                             (match x9721 with
                              | Some x9723 ->
                                  ignore
                                    (Ojs.call x9722 "push"
                                       [|(Ojs.float_to_js x9723)|])
                              | None -> ());
                             x9722))|])
    let (get_length : 'tags this -> float) =
      fun (x9727 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x9727) "length")
    let (map :
      'tags this ->
        callbackfn:(value:bigint -> index:float -> array:t -> bigint) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x9736 : 'tags this) ->
        fun
          ~callbackfn:(x9729 :
                        value:bigint -> index:float -> array:t -> bigint)
          ->
          fun ?thisArg:(x9730 : any option) ->
            fun () ->
              t_of_js
                (let x9738 = this_to_js Obj.magic x9736 in
                 Ojs.call (Ojs.get_prop_ascii x9738 "map") "apply"
                   [|x9738;((let x9731 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x9731 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x9733 : Ojs.t) ->
                                          fun (x9734 : Ojs.t) ->
                                            fun (x9735 : Ojs.t) ->
                                              bigint_to_js
                                                (x9729
                                                   ~value:(bigint_of_js x9733)
                                                   ~index:(Ojs.float_of_js
                                                             x9734)
                                                   ~array:(t_of_js x9735))))|]);
                             (match x9730 with
                              | Some x9732 ->
                                  ignore
                                    (Ojs.call x9731 "push"
                                       [|(any_to_js x9732)|])
                              | None -> ());
                             x9731))|])
    let (reduce :
      'tags this ->
        callbackfn:(previousValue:bigint ->
                      currentValue:bigint ->
                        currentIndex:float -> array:t -> bigint)
          -> bigint)
      =
      fun (x9744 : 'tags this) ->
        fun
          ~callbackfn:(x9739 :
                        previousValue:bigint ->
                          currentValue:bigint ->
                            currentIndex:float -> array:t -> bigint)
          ->
          bigint_of_js
            (Ojs.call (this_to_js Obj.magic x9744) "reduce"
               [|(Ojs.fun_to_js 4
                    (fun (x9740 : Ojs.t) ->
                       fun (x9741 : Ojs.t) ->
                         fun (x9742 : Ojs.t) ->
                           fun (x9743 : Ojs.t) ->
                             bigint_to_js
                               (x9739 ~previousValue:(bigint_of_js x9740)
                                  ~currentValue:(bigint_of_js x9741)
                                  ~currentIndex:(Ojs.float_of_js x9742)
                                  ~array:(t_of_js x9743))))|])
    let (reduce' :
      'tags this ->
        callbackfn:(previousValue:'U ->
                      currentValue:bigint ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x9752 : 'tags this) ->
        fun
          ~callbackfn:(x9746 :
                        previousValue:'U ->
                          currentValue:bigint ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x9751 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic x9752) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x9747 : Ojs.t) ->
                         fun (x9748 : Ojs.t) ->
                           fun (x9749 : Ojs.t) ->
                             fun (x9750 : Ojs.t) ->
                               Obj.magic
                                 (x9746 ~previousValue:(Obj.magic x9747)
                                    ~currentValue:(bigint_of_js x9748)
                                    ~currentIndex:(Ojs.float_of_js x9749)
                                    ~array:(t_of_js x9750))));(Obj.magic
                                                                 x9751)|])
    let (reduceRight :
      'tags this ->
        callbackfn:(previousValue:bigint ->
                      currentValue:bigint ->
                        currentIndex:float -> array:t -> bigint)
          -> bigint)
      =
      fun (x9759 : 'tags this) ->
        fun
          ~callbackfn:(x9754 :
                        previousValue:bigint ->
                          currentValue:bigint ->
                            currentIndex:float -> array:t -> bigint)
          ->
          bigint_of_js
            (Ojs.call (this_to_js Obj.magic x9759) "reduceRight"
               [|(Ojs.fun_to_js 4
                    (fun (x9755 : Ojs.t) ->
                       fun (x9756 : Ojs.t) ->
                         fun (x9757 : Ojs.t) ->
                           fun (x9758 : Ojs.t) ->
                             bigint_to_js
                               (x9754 ~previousValue:(bigint_of_js x9755)
                                  ~currentValue:(bigint_of_js x9756)
                                  ~currentIndex:(Ojs.float_of_js x9757)
                                  ~array:(t_of_js x9758))))|])
    let (reduceRight' :
      'tags this ->
        callbackfn:(previousValue:'U ->
                      currentValue:bigint ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x9767 : 'tags this) ->
        fun
          ~callbackfn:(x9761 :
                        previousValue:'U ->
                          currentValue:bigint ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x9766 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic x9767) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x9762 : Ojs.t) ->
                         fun (x9763 : Ojs.t) ->
                           fun (x9764 : Ojs.t) ->
                             fun (x9765 : Ojs.t) ->
                               Obj.magic
                                 (x9761 ~previousValue:(Obj.magic x9762)
                                    ~currentValue:(bigint_of_js x9763)
                                    ~currentIndex:(Ojs.float_of_js x9764)
                                    ~array:(t_of_js x9765))));(Obj.magic
                                                                 x9766)|])
    let (reverse : 'tags this -> 'tags this) =
      fun (x9769 : 'tags this) ->
        this_of_js Obj.magic
          (Ojs.call (this_to_js Obj.magic x9769) "reverse" [||])
    let (set_ :
      'tags this -> array:bigint ArrayLike.t -> ?offset:float -> unit -> unit)
      =
      fun (x9777 : 'tags this) ->
        fun ~array:(x9772 : bigint ArrayLike.t) ->
          fun ?offset:(x9773 : float option) ->
            fun () ->
              ignore
                (let x9779 = this_to_js Obj.magic x9777 in
                 Ojs.call (Ojs.get_prop_ascii x9779 "set") "apply"
                   [|x9779;((let x9774 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x9774 "push"
                                  [|(ArrayLike.t_to_js bigint_to_js x9772)|]);
                             (match x9773 with
                              | Some x9775 ->
                                  ignore
                                    (Ojs.call x9774 "push"
                                       [|(Ojs.float_to_js x9775)|])
                              | None -> ());
                             x9774))|])
    let (slice : 'tags this -> ?start:float -> ?end_:float -> unit -> t) =
      fun (x9785 : 'tags this) ->
        fun ?start:(x9780 : float option) ->
          fun ?end_:(x9781 : float option) ->
            fun () ->
              t_of_js
                (let x9787 = this_to_js Obj.magic x9785 in
                 Ojs.call (Ojs.get_prop_ascii x9787 "slice") "apply"
                   [|x9787;((let x9782 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x9780 with
                              | Some x9784 ->
                                  ignore
                                    (Ojs.call x9782 "push"
                                       [|(Ojs.float_to_js x9784)|])
                              | None -> ());
                             (match x9781 with
                              | Some x9783 ->
                                  ignore
                                    (Ojs.call x9782 "push"
                                       [|(Ojs.float_to_js x9783)|])
                              | None -> ());
                             x9782))|])
    let (some :
      'tags this ->
        predicate:(value:bigint -> index:float -> array:t -> bool) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x9795 : 'tags this) ->
        fun
          ~predicate:(x9788 : value:bigint -> index:float -> array:t -> bool)
          ->
          fun ?thisArg:(x9789 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x9797 = this_to_js Obj.magic x9795 in
                 Ojs.call (Ojs.get_prop_ascii x9797 "some") "apply"
                   [|x9797;((let x9790 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x9790 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x9792 : Ojs.t) ->
                                          fun (x9793 : Ojs.t) ->
                                            fun (x9794 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x9788
                                                   ~value:(bigint_of_js x9792)
                                                   ~index:(Ojs.float_of_js
                                                             x9793)
                                                   ~array:(t_of_js x9794))))|]);
                             (match x9789 with
                              | Some x9791 ->
                                  ignore
                                    (Ojs.call x9790 "push"
                                       [|(any_to_js x9791)|])
                              | None -> ());
                             x9790))|])
    let (sort :
      'tags this ->
        ?compareFn:(a:bigint -> b:bigint -> [ `U1 of float  | `U2 of bigint ])
          -> unit -> 'tags this)
      =
      fun (x9805 : 'tags this) ->
        fun
          ?compareFn:(x9798 :
                       (a:bigint ->
                          b:bigint -> [ `U1 of float  | `U2 of bigint ])
                         option)
          ->
          fun () ->
            this_of_js Obj.magic
              (let x9807 = this_to_js Obj.magic x9805 in
               Ojs.call (Ojs.get_prop_ascii x9807 "sort") "apply"
                 [|x9807;((let x9799 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x9798 with
                            | Some x9800 ->
                                ignore
                                  (Ojs.call x9799 "push"
                                     [|(Ojs.fun_to_js 2
                                          (fun (x9801 : Ojs.t) ->
                                             fun (x9802 : Ojs.t) ->
                                               match x9800
                                                       ~a:(bigint_of_js x9801)
                                                       ~b:(bigint_of_js x9802)
                                               with
                                               | `U1 x9803 ->
                                                   Ojs.float_to_js x9803
                                               | `U2 x9804 ->
                                                   bigint_to_js x9804))|])
                            | None -> ());
                           x9799))|])
    let (subarray : 'tags this -> ?begin_:float -> ?end_:float -> unit -> t)
      =
      fun (x9814 : 'tags this) ->
        fun ?begin_:(x9809 : float option) ->
          fun ?end_:(x9810 : float option) ->
            fun () ->
              t_of_js
                (let x9816 = this_to_js Obj.magic x9814 in
                 Ojs.call (Ojs.get_prop_ascii x9816 "subarray") "apply"
                   [|x9816;((let x9811 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x9809 with
                              | Some x9813 ->
                                  ignore
                                    (Ojs.call x9811 "push"
                                       [|(Ojs.float_to_js x9813)|])
                              | None -> ());
                             (match x9810 with
                              | Some x9812 ->
                                  ignore
                                    (Ojs.call x9811 "push"
                                       [|(Ojs.float_to_js x9812)|])
                              | None -> ());
                             x9811))|])
    let (toLocaleString : 'tags this -> string) =
      fun (x9817 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x9817) "toLocaleString" [||])
    let (toString : 'tags this -> string) =
      fun (x9819 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x9819) "toString" [||])
    let (valueOf : 'tags this -> t) =
      fun (x9821 : 'tags this) ->
        t_of_js (Ojs.call (this_to_js Obj.magic x9821) "valueOf" [||])
    let (values : 'tags this -> bigint IterableIterator.t) =
      fun (x9823 : 'tags this) ->
        IterableIterator.t_of_js bigint_of_js
          (Ojs.call (this_to_js Obj.magic x9823) "values" [||])
    let (get : 'tags this -> float -> bigint) =
      fun (x9826 : 'tags this) ->
        fun (x9828 : float) ->
          bigint_of_js
            (Ojs.get_prop (this_to_js Obj.magic x9826)
               (Ojs.float_to_js x9828))
    let (set : 'tags this -> float -> bigint -> unit) =
      fun (x9829 : 'tags this) ->
        fun (x9831 : float) ->
          fun (x9832 : bigint) ->
            Ojs.set_prop (this_to_js Obj.magic x9829) (Ojs.float_to_js x9831)
              (bigint_to_js x9832)
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "BigInt64Array")
             "prototype")
    let (create : ?length:float -> unit -> t) =
      fun ?length:(x9833 : float option) ->
        fun () ->
          t_of_js
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "BigInt64Array")
               (let x9834 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x9833 with
                 | Some x9835 ->
                     ignore
                       (Ojs.call x9834 "push" [|(Ojs.float_to_js x9835)|])
                 | None -> ());
                x9834))
    let (create' : bigint Iterable.t -> t) =
      fun (x9836 : bigint Iterable.t) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "BigInt64Array")
             [|(Iterable.t_to_js bigint_to_js x9836)|])
    let (create'' :
      buffer:ArrayBufferLike.t ->
        ?byteOffset:float -> ?length:float -> unit -> t)
      =
      fun ~buffer:(x9838 : ArrayBufferLike.t) ->
        fun ?byteOffset:(x9839 : float option) ->
          fun ?length:(x9840 : float option) ->
            fun () ->
              t_of_js
                (Ojs.new_obj_arr
                   (Ojs.get_prop_ascii Ojs.global "BigInt64Array")
                   (let x9841 =
                      Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                        [||] in
                    ignore
                      (Ojs.call x9841 "push"
                         [|(ArrayBufferLike.t_to_js x9838)|]);
                    (match x9839 with
                     | Some x9843 ->
                         ignore
                           (Ojs.call x9841 "push" [|(Ojs.float_to_js x9843)|])
                     | None -> ());
                    (match x9840 with
                     | Some x9842 ->
                         ignore
                           (Ojs.call x9841 "push" [|(Ojs.float_to_js x9842)|])
                     | None -> ());
                    x9841))
    let (bytes_per_element : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "BigInt64Array")
             "BYTES_PER_ELEMENT")
    let (of_ : bigint list -> t) =
      fun (x9844 : bigint list) ->
        t_of_js
          (let x9847 = Ojs.get_prop_ascii Ojs.global "BigInt64Array" in
           Ojs.call (Ojs.get_prop_ascii x9847 "of") "apply"
             [|x9847;((let x9845 =
                         Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                           [||] in
                       List.iter
                         (fun (x9846 : bigint) ->
                            ignore
                              (Ojs.call x9845 "push" [|(bigint_to_js x9846)|]))
                         x9844;
                       x9845))|])
    let (from : bigint ArrayLike.t -> t) =
      fun (x9848 : bigint ArrayLike.t) ->
        t_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "BigInt64Array") "from"
             [|(ArrayLike.t_to_js bigint_to_js x9848)|])
    let (from' :
      arrayLike:'U ArrayLike.t ->
        mapfn:(v:'U -> k:float -> bigint) -> ?thisArg:any -> unit -> t)
      =
      fun ~arrayLike:(x9850 : 'U ArrayLike.t) ->
        fun ~mapfn:(x9851 : v:'U -> k:float -> bigint) ->
          fun ?thisArg:(x9852 : any option) ->
            fun () ->
              t_of_js
                (let x9858 = Ojs.get_prop_ascii Ojs.global "BigInt64Array" in
                 Ojs.call (Ojs.get_prop_ascii x9858 "from") "apply"
                   [|x9858;((let x9853 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x9853 "push"
                                  [|(ArrayLike.t_to_js Obj.magic x9850)|]);
                             ignore
                               (Ojs.call x9853 "push"
                                  [|(Ojs.fun_to_js 2
                                       (fun (x9855 : Ojs.t) ->
                                          fun (x9856 : Ojs.t) ->
                                            bigint_to_js
                                              (x9851 ~v:(Obj.magic x9855)
                                                 ~k:(Ojs.float_of_js x9856))))|]);
                             (match x9852 with
                              | Some x9854 ->
                                  ignore
                                    (Ojs.call x9853 "push"
                                       [|(any_to_js x9854)|])
                              | None -> ());
                             x9853))|])
    let cast_from = Obj.magic
  end
module PromiseRejectedResult =
  struct
    type t = [ `PromiseRejectedResult ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type tags = [ `PromiseRejectedResult ]
    type 'tags this =
      'tags intf constraint 'tags = [> `PromiseRejectedResult ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x9861 : Ojs.t) -> intf_of_js __tags_of_js x9861
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x9859 : __tags intf) -> intf_to_js __tags_to_js x9859
    let (get_status : 'tags this -> [ `L_s113_rejected ]) =
      fun (x9863 : 'tags this) ->
        let x9865 = Ojs.get_prop_ascii (this_to_js Obj.magic x9863) "status" in
        match Ojs.string_of_js x9865 with
        | "rejected" -> `L_s113_rejected
        | _ -> assert false
    let (set_status : 'tags this -> [ `L_s113_rejected ] -> unit) =
      fun (x9866 : 'tags this) ->
        fun (x9867 : [ `L_s113_rejected ]) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x9866) "status"
            (match x9867 with
             | `L_s113_rejected -> Ojs.string_to_js "rejected")
    let (get_reason : 'tags this -> any) =
      fun (x9869 : 'tags this) ->
        any_of_js (Ojs.get_prop_ascii (this_to_js Obj.magic x9869) "reason")
    let (set_reason : 'tags this -> any -> unit) =
      fun (x9871 : 'tags this) ->
        fun (x9872 : any) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x9871) "reason"
            (any_to_js x9872)
    let (create : status:[ `L_s113_rejected ] -> reason:any -> unit -> t) =
      fun ~status:(x9874 : [ `L_s113_rejected ]) ->
        fun ~reason:(x9875 : any) ->
          fun () ->
            let x9876 = Ojs.empty_obj () in
            Ojs.set_prop_ascii x9876 "status"
              (match x9874 with
               | `L_s113_rejected -> Ojs.string_to_js "rejected");
            Ojs.set_prop_ascii x9876 "reason" (any_to_js x9875);
            t_of_js x9876
    let cast_from = Obj.magic
  end
module PromiseFulfilledResult =
  struct
    type 'T t = [ `PromiseFulfilledResult of 'T ] intf
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun _T -> Obj.magic
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun _T -> Obj.magic
    type 'T tags = [ `PromiseFulfilledResult of 'T ]
    type ('tags, 'T) this =
      'tags intf constraint 'tags = [> `PromiseFulfilledResult of 'T ]
    let rec this_of_js :
      'tags 'T .
        (Ojs.t -> 'tags) -> (Ojs.t -> 'T) -> Ojs.t -> ('tags, 'T) this
      =
      fun (type __tags) ->
        fun (type __T) ->
          fun (__tags_of_js : Ojs.t -> __tags) ->
            fun (__T_of_js : Ojs.t -> __T) ->
              fun (x9879 : Ojs.t) -> intf_of_js __tags_of_js x9879
    and this_to_js :
      'tags 'T .
        ('tags -> Ojs.t) -> ('T -> Ojs.t) -> ('tags, 'T) this -> Ojs.t
      =
      fun (type __tags) ->
        fun (type __T) ->
          fun (__tags_to_js : __tags -> Ojs.t) ->
            fun (__T_to_js : __T -> Ojs.t) ->
              fun (x9877 : __tags intf) -> intf_to_js __tags_to_js x9877
    let (get_status : ('tags, 'T) this -> [ `L_s62_fulfilled ]) =
      fun (x9881 : ('tags, 'T) this) ->
        let x9884 =
          Ojs.get_prop_ascii (this_to_js Obj.magic Obj.magic x9881) "status" in
        match Ojs.string_of_js x9884 with
        | "fulfilled" -> `L_s62_fulfilled
        | _ -> assert false
    let (set_status : ('tags, 'T) this -> [ `L_s62_fulfilled ] -> unit) =
      fun (x9885 : ('tags, 'T) this) ->
        fun (x9886 : [ `L_s62_fulfilled ]) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic Obj.magic x9885) "status"
            (match x9886 with
             | `L_s62_fulfilled -> Ojs.string_to_js "fulfilled")
    let (get_value : ('tags, 'T) this -> 'T) =
      fun (x9889 : ('tags, 'T) this) ->
        Obj.magic
          (Ojs.get_prop_ascii (this_to_js Obj.magic Obj.magic x9889) "value")
    let (set_value : ('tags, 'T) this -> 'T -> unit) =
      fun (x9892 : ('tags, 'T) this) ->
        fun (x9893 : 'T) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic Obj.magic x9892) "value"
            (Obj.magic x9893)
    let (create : status:[ `L_s62_fulfilled ] -> value:'T -> unit -> 'T t) =
      fun ~status:(x9896 : [ `L_s62_fulfilled ]) ->
        fun ~value:(x9897 : 'T) ->
          fun () ->
            let x9898 = Ojs.empty_obj () in
            Ojs.set_prop_ascii x9898 "status"
              (match x9896 with
               | `L_s62_fulfilled -> Ojs.string_to_js "fulfilled");
            Ojs.set_prop_ascii x9898 "value" (Obj.magic x9897);
            t_of_js Obj.magic x9898
    let cast_from = Obj.magic
  end
module PromiseSettledResult =
  struct
    type 'T t =
      [ `U_s62_fulfilled of 'T PromiseFulfilledResult.t 
      | `U_s113_rejected of PromiseRejectedResult.t ]
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun (type __T) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x9904 : Ojs.t) ->
            let x9905 = x9904 in
            match Ojs.string_of_js (Ojs.get_prop_ascii x9905 "status") with
            | "fulfilled" ->
                `U_s62_fulfilled
                  (PromiseFulfilledResult.t_of_js __T_of_js x9905)
            | "rejected" ->
                `U_s113_rejected (PromiseRejectedResult.t_of_js x9905)
            | _ -> assert false
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t =
      fun (type __T) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun
            (x9900 :
              [ `U_s62_fulfilled of __T PromiseFulfilledResult.t 
              | `U_s113_rejected of PromiseRejectedResult.t ])
            ->
            match x9900 with
            | `U_s62_fulfilled x9901 ->
                PromiseFulfilledResult.t_to_js __T_to_js x9901
            | `U_s113_rejected x9903 -> PromiseRejectedResult.t_to_js x9903
  end
module Awaited =
  struct
    type 'T t = any
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun (type __T) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x9908 : Ojs.t) -> any_of_js x9908
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t =
      fun (type __T) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x9907 : any) -> any_to_js x9907
  end
module Promise =
  struct
    type 'T t = [ `Promise of 'T ] intf
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun _T -> Obj.magic
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun _T -> Obj.magic
    type 'T tags = [ `Promise of 'T ]
    type ('tags, 'T) this = 'tags intf constraint 'tags = [> `Promise of 'T ]
    let rec this_of_js :
      'tags 'T .
        (Ojs.t -> 'tags) -> (Ojs.t -> 'T) -> Ojs.t -> ('tags, 'T) this
      =
      fun (type __tags) ->
        fun (type __T) ->
          fun (__tags_of_js : Ojs.t -> __tags) ->
            fun (__T_of_js : Ojs.t -> __T) ->
              fun (x9911 : Ojs.t) -> intf_of_js __tags_of_js x9911
    and this_to_js :
      'tags 'T .
        ('tags -> Ojs.t) -> ('T -> Ojs.t) -> ('tags, 'T) this -> Ojs.t
      =
      fun (type __tags) ->
        fun (type __T) ->
          fun (__tags_to_js : __tags -> Ojs.t) ->
            fun (__T_to_js : __T -> Ojs.t) ->
              fun (x9909 : __tags intf) -> intf_to_js __tags_to_js x9909
    let (finally :
      ('tags, 'T) this ->
        ?onfinally:[ `Null  | `Undefined of undefined 
                   | `U1 of unit -> unit ]
          -> unit -> 'T t)
      =
      fun (x9918 : ('tags, 'T) this) ->
        fun
          ?onfinally:(x9913 :
                       [ `Null  | `Undefined of undefined 
                       | `U1 of unit -> unit ] option)
          ->
          fun () ->
            t_of_js Obj.magic
              (let x9921 = this_to_js Obj.magic Obj.magic x9918 in
               Ojs.call (Ojs.get_prop_ascii x9921 "finally") "apply"
                 [|x9921;((let x9914 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x9913 with
                            | Some x9915 ->
                                ignore
                                  (Ojs.call x9914 "push"
                                     [|((match x9915 with
                                         | `Null -> Ojs.null
                                         | `Undefined x9916 ->
                                             undefined_to_js x9916
                                         | `U1 x9917 ->
                                             Ojs.fun_to_js 1
                                               (fun _ -> x9917 ())))|])
                            | None -> ());
                           x9914))|])
    let (then_ :
      ('tags, 'T) this ->
        ?onfulfilled:[ `Null  | `Undefined of undefined 
                     | `U1 of
                         'T ->
                           [ `U1 of 'TResult1 
                           | `U2 of 'TResult1 PromiseLike.t ]
                         ]
          ->
          ?onrejected:[ `Null  | `Undefined of undefined 
                      | `U1 of
                          any ->
                            [ `U1 of 'TResult2 
                            | `U2 of 'TResult2 PromiseLike.t ]
                          ]
            -> unit -> ('TResult1, 'TResult2) union2 t)
      =
      fun (x9940 : ('tags, 'T) this) ->
        fun
          ?onfulfilled:(x9923 :
                         [ `Null  | `Undefined of undefined 
                         | `U1 of
                             'T ->
                               [ `U1 of 'TResult1 
                               | `U2 of 'TResult1 PromiseLike.t ]
                             ]
                           option)
          ->
          fun
            ?onrejected:(x9924 :
                          [ `Null  | `Undefined of undefined 
                          | `U1 of
                              any ->
                                [ `U1 of 'TResult2 
                                | `U2 of 'TResult2 PromiseLike.t ]
                              ]
                            option)
            ->
            fun () ->
              t_of_js
                (fun (x9944 : Ojs.t) ->
                   union2_of_js Obj.magic Obj.magic x9944)
                (let x9943 = this_to_js Obj.magic Obj.magic x9940 in
                 Ojs.call (Ojs.get_prop_ascii x9943 "then") "apply"
                   [|x9943;((let x9925 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x9923 with
                              | Some x9933 ->
                                  ignore
                                    (Ojs.call x9925 "push"
                                       [|((match x9933 with
                                           | `Null -> Ojs.null
                                           | `Undefined x9934 ->
                                               undefined_to_js x9934
                                           | `U1 x9935 ->
                                               Ojs.fun_to_js 1
                                                 (fun (x9936 : Ojs.t) ->
                                                    match x9935
                                                            (Obj.magic x9936)
                                                    with
                                                    | `U1 x9937 ->
                                                        Obj.magic x9937
                                                    | `U2 x9938 ->
                                                        PromiseLike.t_to_js
                                                          Obj.magic x9938)))|])
                              | None -> ());
                             (match x9924 with
                              | Some x9926 ->
                                  ignore
                                    (Ojs.call x9925 "push"
                                       [|((match x9926 with
                                           | `Null -> Ojs.null
                                           | `Undefined x9927 ->
                                               undefined_to_js x9927
                                           | `U1 x9928 ->
                                               Ojs.fun_to_js 1
                                                 (fun (x9929 : Ojs.t) ->
                                                    match x9928
                                                            (any_of_js x9929)
                                                    with
                                                    | `U1 x9930 ->
                                                        Obj.magic x9930
                                                    | `U2 x9931 ->
                                                        PromiseLike.t_to_js
                                                          Obj.magic x9931)))|])
                              | None -> ());
                             x9925))|])
    let (catch :
      ('tags, 'T) this ->
        ?onrejected:[ `Null  | `Undefined of undefined 
                    | `U1 of
                        any ->
                          [ `U1 of 'TResult 
                          | `U2 of 'TResult PromiseLike.t ]
                        ]
          -> unit -> ('T, 'TResult) union2 t)
      =
      fun (x9956 : ('tags, 'T) this) ->
        fun
          ?onrejected:(x9947 :
                        [ `Null  | `Undefined of undefined 
                        | `U1 of
                            any ->
                              [ `U1 of 'TResult 
                              | `U2 of 'TResult PromiseLike.t ]
                            ]
                          option)
          ->
          fun () ->
            t_of_js
              (fun (x9960 : Ojs.t) -> union2_of_js Obj.magic Obj.magic x9960)
              (let x9959 = this_to_js Obj.magic Obj.magic x9956 in
               Ojs.call (Ojs.get_prop_ascii x9959 "catch") "apply"
                 [|x9959;((let x9948 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x9947 with
                            | Some x9949 ->
                                ignore
                                  (Ojs.call x9948 "push"
                                     [|((match x9949 with
                                         | `Null -> Ojs.null
                                         | `Undefined x9950 ->
                                             undefined_to_js x9950
                                         | `U1 x9951 ->
                                             Ojs.fun_to_js 1
                                               (fun (x9952 : Ojs.t) ->
                                                  match x9951
                                                          (any_of_js x9952)
                                                  with
                                                  | `U1 x9953 ->
                                                      Obj.magic x9953
                                                  | `U2 x9954 ->
                                                      PromiseLike.t_to_js
                                                        Obj.magic x9954)))|])
                            | None -> ());
                           x9948))|])
    let (any : 'T -> any Awaited.t t) =
      fun (x9963 : 'T) ->
        t_of_js (fun (x9964 : Ojs.t) -> Awaited.t_of_js any_of_js x9964)
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Promise") "any"
             [|(Obj.magic x9963)|])
    let (any' :
      [ `U1 of 'T  | `U2 of 'T PromiseLike.t ] Iterable.t -> 'T Awaited.t t)
      =
      fun (x9966 : [ `U1 of 'T  | `U2 of 'T PromiseLike.t ] Iterable.t) ->
        t_of_js (fun (x9971 : Ojs.t) -> Awaited.t_of_js Obj.magic x9971)
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Promise") "any"
             [|(Iterable.t_to_js
                  (fun (x9967 : [ `U1 of 'T  | `U2 of 'T PromiseLike.t ]) ->
                     match x9967 with
                     | `U1 x9968 -> Obj.magic x9968
                     | `U2 x9969 -> PromiseLike.t_to_js Obj.magic x9969)
                  x9966)|])
    let (allSettled : 'T -> any t) =
      fun (x9973 : 'T) ->
        t_of_js any_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Promise") "allSettled"
             [|(Obj.magic x9973)|])
    let (allSettled' :
      [ `U1 of 'T  | `U2 of 'T PromiseLike.t ] Iterable.t ->
        'T Awaited.t PromiseSettledResult.t list t)
      =
      fun (x9975 : [ `U1 of 'T  | `U2 of 'T PromiseLike.t ] Iterable.t) ->
        t_of_js
          (fun (x9980 : Ojs.t) ->
             Ojs.list_of_js
               (fun (x9981 : Ojs.t) ->
                  PromiseSettledResult.t_of_js
                    (fun (x9982 : Ojs.t) -> Awaited.t_of_js Obj.magic x9982)
                    x9981) x9980)
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Promise") "allSettled"
             [|(Iterable.t_to_js
                  (fun (x9976 : [ `U1 of 'T  | `U2 of 'T PromiseLike.t ]) ->
                     match x9976 with
                     | `U1 x9977 -> Obj.magic x9977
                     | `U2 x9978 -> PromiseLike.t_to_js Obj.magic x9978)
                  x9975)|])
    let (prototype : unit -> any t) =
      fun () ->
        t_of_js any_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Promise")
             "prototype")
    let (create :
      (resolve:([ `U1 of 'T  | `U2 of 'T PromiseLike.t ] -> unit) ->
         reject:(?reason:any -> unit -> unit) -> unit)
        -> 'T t)
      =
      fun
        (x9985 :
          resolve:([ `U1 of 'T  | `U2 of 'T PromiseLike.t ] -> unit) ->
            reject:(?reason:any -> unit -> unit) -> unit)
        ->
        t_of_js Obj.magic
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Promise")
             [|(Ojs.fun_to_js 2
                  (fun (x9986 : Ojs.t) ->
                     fun (x9991 : Ojs.t) ->
                       x9985
                         ~resolve:(fun
                                     (x9987 :
                                       [ `U1 of 'T 
                                       | `U2 of 'T PromiseLike.t ])
                                     ->
                                     ignore
                                       (Ojs.apply x9986
                                          [|((match x9987 with
                                              | `U1 x9988 -> Obj.magic x9988
                                              | `U2 x9989 ->
                                                  PromiseLike.t_to_js
                                                    Obj.magic x9989))|]))
                         ~reject:(fun ?reason:(x9992 : any option) ->
                                    fun () ->
                                      ignore
                                        (Ojs.call x9991 "apply"
                                           [|Ojs.null;((let x9993 =
                                                          Ojs.new_obj
                                                            (Ojs.get_prop_ascii
                                                               Ojs.global
                                                               "Array") 
                                                            [||] in
                                                        (match x9992 with
                                                         | Some x9994 ->
                                                             ignore
                                                               (Ojs.call
                                                                  x9993
                                                                  "push"
                                                                  [|(
                                                                    any_to_js
                                                                    x9994)|])
                                                         | None -> ());
                                                        x9993))|]))))|])
    let (all : 'T -> any t) =
      fun (x9996 : 'T) ->
        t_of_js any_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Promise") "all"
             [|(Obj.magic x9996)|])
    let (race : 'T -> any Awaited.t t) =
      fun (x9998 : 'T) ->
        t_of_js (fun (x9999 : Ojs.t) -> Awaited.t_of_js any_of_js x9999)
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Promise") "race"
             [|(Obj.magic x9998)|])
    let (reject : ?reason:any -> unit -> 'T t) =
      fun ?reason:(x10001 : any option) ->
        fun () ->
          t_of_js Obj.magic
            (let x10004 = Ojs.get_prop_ascii Ojs.global "Promise" in
             Ojs.call (Ojs.get_prop_ascii x10004 "reject") "apply"
               [|x10004;((let x10002 =
                            Ojs.new_obj
                              (Ojs.get_prop_ascii Ojs.global "Array") 
                              [||] in
                          (match x10001 with
                           | Some x10003 ->
                               ignore
                                 (Ojs.call x10002 "push"
                                    [|(any_to_js x10003)|])
                           | None -> ());
                          x10002))|])
    let (resolve : unit -> unit t) =
      fun () ->
        t_of_js Ojs.unit_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Promise") "resolve" [||])
    let (resolve' : 'T -> 'T Awaited.t t) =
      fun (x10007 : 'T) ->
        t_of_js (fun (x10008 : Ojs.t) -> Awaited.t_of_js Obj.magic x10008)
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Promise") "resolve"
             [|(Obj.magic x10007)|])
    let (resolve'' :
      [ `U1 of 'T  | `U2 of 'T PromiseLike.t ] -> 'T Awaited.t t) =
      fun (x10010 : [ `U1 of 'T  | `U2 of 'T PromiseLike.t ]) ->
        t_of_js (fun (x10014 : Ojs.t) -> Awaited.t_of_js Obj.magic x10014)
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Promise") "resolve"
             [|((match x10010 with
                 | `U1 x10011 -> Obj.magic x10011
                 | `U2 x10012 -> PromiseLike.t_to_js Obj.magic x10012))|])
    let (all' :
      [ `U1 of 'T  | `U2 of 'T PromiseLike.t ] Iterable.t ->
        'T Awaited.t list t)
      =
      fun (x10016 : [ `U1 of 'T  | `U2 of 'T PromiseLike.t ] Iterable.t) ->
        t_of_js
          (fun (x10021 : Ojs.t) ->
             Ojs.list_of_js
               (fun (x10022 : Ojs.t) -> Awaited.t_of_js Obj.magic x10022)
               x10021)
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Promise") "all"
             [|(Iterable.t_to_js
                  (fun (x10017 : [ `U1 of 'T  | `U2 of 'T PromiseLike.t ]) ->
                     match x10017 with
                     | `U1 x10018 -> Obj.magic x10018
                     | `U2 x10019 -> PromiseLike.t_to_js Obj.magic x10019)
                  x10016)|])
    let (race' :
      [ `U1 of 'T  | `U2 of 'T PromiseLike.t ] Iterable.t -> 'T Awaited.t t)
      =
      fun (x10024 : [ `U1 of 'T  | `U2 of 'T PromiseLike.t ] Iterable.t) ->
        t_of_js (fun (x10029 : Ojs.t) -> Awaited.t_of_js Obj.magic x10029)
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Promise") "race"
             [|(Iterable.t_to_js
                  (fun (x10025 : [ `U1 of 'T  | `U2 of 'T PromiseLike.t ]) ->
                     match x10025 with
                     | `U1 x10026 -> Obj.magic x10026
                     | `U2 x10027 -> PromiseLike.t_to_js Obj.magic x10027)
                  x10024)|])
    let cast_from = Obj.magic
  end
module Atomics =
  struct
    module AnonymousInterface2 =
      struct
        type t = Ojs.t
        let rec t_of_js : Ojs.t -> t = fun (x10032 : Ojs.t) -> x10032
        and t_to_js : t -> Ojs.t = fun (x10031 : Ojs.t) -> x10031
        let (get_async : t -> [ `L_b_true ]) =
          fun (x10033 : t) ->
            let x10034 = Ojs.get_prop_ascii (t_to_js x10033) "async" in
            match Ojs.bool_of_js x10034 with
            | true -> `L_b_true
            | _ -> assert false
        let (set_async : t -> [ `L_b_true ] -> unit) =
          fun (x10035 : t) ->
            fun (x10036 : [ `L_b_true ]) ->
              Ojs.set_prop_ascii (t_to_js x10035) "async"
                (match x10036 with | `L_b_true -> Ojs.bool_to_js true)
        let (get_value : t -> [ `L_s133_timed_out  | `L_s99_ok ] Promise.t) =
          fun (x10037 : t) ->
            Promise.t_of_js
              (fun (x10038 : Ojs.t) ->
                 let x10039 = x10038 in
                 match Ojs.string_of_js x10039 with
                 | "timed-out" -> `L_s133_timed_out
                 | "ok" -> `L_s99_ok
                 | _ -> assert false)
              (Ojs.get_prop_ascii (t_to_js x10037) "value")
        let (set_value :
          t ->
            [ `U1 of [ `L_s99_ok ]  | `U2 of [ `L_s133_timed_out ] ]
              Promise.t -> unit)
          =
          fun (x10040 : t) ->
            fun
              (x10041 :
                [ `U1 of [ `L_s99_ok ]  | `U2 of [ `L_s133_timed_out ] ]
                  Promise.t)
              ->
              Ojs.set_prop_ascii (t_to_js x10040) "value"
                (Promise.t_to_js
                   (fun
                      (x10042 :
                        [ `U1 of [ `L_s99_ok ] 
                        | `U2 of [ `L_s133_timed_out ] ])
                      ->
                      match x10042 with
                      | `U1 x10043 ->
                          (match x10043 with
                           | `L_s99_ok -> Ojs.string_to_js "ok")
                      | `U2 x10044 ->
                          (match x10044 with
                           | `L_s133_timed_out ->
                               Ojs.string_to_js "timed-out")) x10041)
        let (create :
          async:[ `L_b_true ] ->
            value:[ `L_s133_timed_out  | `L_s99_ok ] Promise.t -> unit -> t)
          =
          fun ~async:(x10045 : [ `L_b_true ]) ->
            fun
              ~value:(x10046 : [ `L_s133_timed_out  | `L_s99_ok ] Promise.t)
              ->
              fun () ->
                let x10047 = Ojs.empty_obj () in
                Ojs.set_prop_ascii x10047 "async"
                  (match x10045 with | `L_b_true -> Ojs.bool_to_js true);
                Ojs.set_prop_ascii x10047 "value"
                  (Promise.t_to_js
                     (fun (x10048 : [ `L_s133_timed_out  | `L_s99_ok ]) ->
                        match x10048 with
                        | `L_s133_timed_out -> Ojs.string_to_js "timed-out"
                        | `L_s99_ok -> Ojs.string_to_js "ok") x10046);
                t_of_js x10047
      end
    module AnonymousInterface1 =
      struct
        type t = Ojs.t
        let rec t_of_js : Ojs.t -> t = fun (x10050 : Ojs.t) -> x10050
        and t_to_js : t -> Ojs.t = fun (x10049 : Ojs.t) -> x10049
        let (get_async : t -> [ `L_b_false ]) =
          fun (x10051 : t) ->
            let x10052 = Ojs.get_prop_ascii (t_to_js x10051) "async" in
            match Ojs.bool_of_js x10052 with
            | false -> `L_b_false
            | _ -> assert false
        let (set_async : t -> [ `L_b_false ] -> unit) =
          fun (x10053 : t) ->
            fun (x10054 : [ `L_b_false ]) ->
              Ojs.set_prop_ascii (t_to_js x10053) "async"
                (match x10054 with | `L_b_false -> Ojs.bool_to_js false)
        let (get_value : t -> [ `L_s133_timed_out  | `L_s95_not_equal ]) =
          fun (x10055 : t) ->
            let x10056 = Ojs.get_prop_ascii (t_to_js x10055) "value" in
            match Ojs.string_of_js x10056 with
            | "timed-out" -> `L_s133_timed_out
            | "not-equal" -> `L_s95_not_equal
            | _ -> assert false
        let (set_value :
          t ->
            [ `U1 of [ `L_s95_not_equal ]  | `U2 of [ `L_s133_timed_out ] ]
              -> unit)
          =
          fun (x10057 : t) ->
            fun
              (x10058 :
                [ `U1 of [ `L_s95_not_equal ] 
                | `U2 of [ `L_s133_timed_out ] ])
              ->
              Ojs.set_prop_ascii (t_to_js x10057) "value"
                (match x10058 with
                 | `U1 x10059 ->
                     (match x10059 with
                      | `L_s95_not_equal -> Ojs.string_to_js "not-equal")
                 | `U2 x10060 ->
                     (match x10060 with
                      | `L_s133_timed_out -> Ojs.string_to_js "timed-out"))
        let (create :
          async:[ `L_b_false ] ->
            value:[ `L_s133_timed_out  | `L_s95_not_equal ] -> unit -> t)
          =
          fun ~async:(x10061 : [ `L_b_false ]) ->
            fun ~value:(x10062 : [ `L_s133_timed_out  | `L_s95_not_equal ])
              ->
              fun () ->
                let x10063 = Ojs.empty_obj () in
                Ojs.set_prop_ascii x10063 "async"
                  (match x10061 with | `L_b_false -> Ojs.bool_to_js false);
                Ojs.set_prop_ascii x10063 "value"
                  (match x10062 with
                   | `L_s133_timed_out -> Ojs.string_to_js "timed-out"
                   | `L_s95_not_equal -> Ojs.string_to_js "not-equal");
                t_of_js x10063
      end
    let (waitAsync :
      typedArray:Int32Array.t ->
        index:float ->
          value:float ->
            ?timeout:float ->
              unit ->
                [ `U_b_false of AnonymousInterface1.t 
                | `U_b_true of AnonymousInterface2.t ])
      =
      fun ~typedArray:(x10064 : Int32Array.t) ->
        fun ~index:(x10065 : float) ->
          fun ~value:(x10066 : float) ->
            fun ?timeout:(x10067 : float option) ->
              fun () ->
                let x10071 =
                  let x10070 = Ojs.get_prop_ascii Ojs.global "Atomics" in
                  Ojs.call (Ojs.get_prop_ascii x10070 "waitAsync") "apply"
                    [|x10070;((let x10068 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x10068 "push"
                                    [|(Int32Array.t_to_js x10064)|]);
                               ignore
                                 (Ojs.call x10068 "push"
                                    [|(Ojs.float_to_js x10065)|]);
                               ignore
                                 (Ojs.call x10068 "push"
                                    [|(Ojs.float_to_js x10066)|]);
                               (match x10067 with
                                | Some x10069 ->
                                    ignore
                                      (Ojs.call x10068 "push"
                                         [|(Ojs.float_to_js x10069)|])
                                | None -> ());
                               x10068))|] in
                match Ojs.bool_of_js (Ojs.get_prop_ascii x10071 "async") with
                | false -> `U_b_false (AnonymousInterface1.t_of_js x10071)
                | true -> `U_b_true (AnonymousInterface2.t_of_js x10071)
    let (waitAsync' :
      typedArray:BigInt64Array.t ->
        index:float ->
          value:bigint ->
            ?timeout:float ->
              unit ->
                [ `U_b_false of AnonymousInterface1.t 
                | `U_b_true of AnonymousInterface2.t ])
      =
      fun ~typedArray:(x10072 : BigInt64Array.t) ->
        fun ~index:(x10073 : float) ->
          fun ~value:(x10074 : bigint) ->
            fun ?timeout:(x10075 : float option) ->
              fun () ->
                let x10079 =
                  let x10078 = Ojs.get_prop_ascii Ojs.global "Atomics" in
                  Ojs.call (Ojs.get_prop_ascii x10078 "waitAsync") "apply"
                    [|x10078;((let x10076 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x10076 "push"
                                    [|(BigInt64Array.t_to_js x10072)|]);
                               ignore
                                 (Ojs.call x10076 "push"
                                    [|(Ojs.float_to_js x10073)|]);
                               ignore
                                 (Ojs.call x10076 "push"
                                    [|(bigint_to_js x10074)|]);
                               (match x10075 with
                                | Some x10077 ->
                                    ignore
                                      (Ojs.call x10076 "push"
                                         [|(Ojs.float_to_js x10077)|])
                                | None -> ());
                               x10076))|] in
                match Ojs.bool_of_js (Ojs.get_prop_ascii x10079 "async") with
                | false -> `U_b_false (AnonymousInterface1.t_of_js x10079)
                | true -> `U_b_true (AnonymousInterface2.t_of_js x10079)
    let (add :
      typedArray:[ `U1 of BigInt64Array.t  | `U2 of BigUint64Array.t ] ->
        index:float -> value:bigint -> bigint)
      =
      fun
        ~typedArray:(x10080 :
                      [ `U1 of BigInt64Array.t  | `U2 of BigUint64Array.t ])
        ->
        fun ~index:(x10083 : float) ->
          fun ~value:(x10084 : bigint) ->
            bigint_of_js
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "Atomics") "add"
                 [|((match x10080 with
                     | `U1 x10081 -> BigInt64Array.t_to_js x10081
                     | `U2 x10082 -> BigUint64Array.t_to_js x10082));(
                   Ojs.float_to_js x10083);(bigint_to_js x10084)|])
    let (and_ :
      typedArray:[ `U1 of BigInt64Array.t  | `U2 of BigUint64Array.t ] ->
        index:float -> value:bigint -> bigint)
      =
      fun
        ~typedArray:(x10085 :
                      [ `U1 of BigInt64Array.t  | `U2 of BigUint64Array.t ])
        ->
        fun ~index:(x10088 : float) ->
          fun ~value:(x10089 : bigint) ->
            bigint_of_js
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "Atomics") "and"
                 [|((match x10085 with
                     | `U1 x10086 -> BigInt64Array.t_to_js x10086
                     | `U2 x10087 -> BigUint64Array.t_to_js x10087));(
                   Ojs.float_to_js x10088);(bigint_to_js x10089)|])
    let (compareExchange :
      typedArray:[ `U1 of BigInt64Array.t  | `U2 of BigUint64Array.t ] ->
        index:float ->
          expectedValue:bigint -> replacementValue:bigint -> bigint)
      =
      fun
        ~typedArray:(x10090 :
                      [ `U1 of BigInt64Array.t  | `U2 of BigUint64Array.t ])
        ->
        fun ~index:(x10093 : float) ->
          fun ~expectedValue:(x10094 : bigint) ->
            fun ~replacementValue:(x10095 : bigint) ->
              bigint_of_js
                (Ojs.call (Ojs.get_prop_ascii Ojs.global "Atomics")
                   "compareExchange"
                   [|((match x10090 with
                       | `U1 x10091 -> BigInt64Array.t_to_js x10091
                       | `U2 x10092 -> BigUint64Array.t_to_js x10092));(
                     Ojs.float_to_js x10093);(bigint_to_js x10094);(bigint_to_js
                                                                    x10095)|])
    let (exchange :
      typedArray:[ `U1 of BigInt64Array.t  | `U2 of BigUint64Array.t ] ->
        index:float -> value:bigint -> bigint)
      =
      fun
        ~typedArray:(x10096 :
                      [ `U1 of BigInt64Array.t  | `U2 of BigUint64Array.t ])
        ->
        fun ~index:(x10099 : float) ->
          fun ~value:(x10100 : bigint) ->
            bigint_of_js
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "Atomics") "exchange"
                 [|((match x10096 with
                     | `U1 x10097 -> BigInt64Array.t_to_js x10097
                     | `U2 x10098 -> BigUint64Array.t_to_js x10098));(
                   Ojs.float_to_js x10099);(bigint_to_js x10100)|])
    let (load :
      typedArray:[ `U1 of BigInt64Array.t  | `U2 of BigUint64Array.t ] ->
        index:float -> bigint)
      =
      fun
        ~typedArray:(x10101 :
                      [ `U1 of BigInt64Array.t  | `U2 of BigUint64Array.t ])
        ->
        fun ~index:(x10104 : float) ->
          bigint_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "Atomics") "load"
               [|((match x10101 with
                   | `U1 x10102 -> BigInt64Array.t_to_js x10102
                   | `U2 x10103 -> BigUint64Array.t_to_js x10103));(Ojs.float_to_js
                                                                    x10104)|])
    let (or_ :
      typedArray:[ `U1 of BigInt64Array.t  | `U2 of BigUint64Array.t ] ->
        index:float -> value:bigint -> bigint)
      =
      fun
        ~typedArray:(x10105 :
                      [ `U1 of BigInt64Array.t  | `U2 of BigUint64Array.t ])
        ->
        fun ~index:(x10108 : float) ->
          fun ~value:(x10109 : bigint) ->
            bigint_of_js
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "Atomics") "or"
                 [|((match x10105 with
                     | `U1 x10106 -> BigInt64Array.t_to_js x10106
                     | `U2 x10107 -> BigUint64Array.t_to_js x10107));(
                   Ojs.float_to_js x10108);(bigint_to_js x10109)|])
    let (store :
      typedArray:[ `U1 of BigInt64Array.t  | `U2 of BigUint64Array.t ] ->
        index:float -> value:bigint -> bigint)
      =
      fun
        ~typedArray:(x10110 :
                      [ `U1 of BigInt64Array.t  | `U2 of BigUint64Array.t ])
        ->
        fun ~index:(x10113 : float) ->
          fun ~value:(x10114 : bigint) ->
            bigint_of_js
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "Atomics") "store"
                 [|((match x10110 with
                     | `U1 x10111 -> BigInt64Array.t_to_js x10111
                     | `U2 x10112 -> BigUint64Array.t_to_js x10112));(
                   Ojs.float_to_js x10113);(bigint_to_js x10114)|])
    let (sub :
      typedArray:[ `U1 of BigInt64Array.t  | `U2 of BigUint64Array.t ] ->
        index:float -> value:bigint -> bigint)
      =
      fun
        ~typedArray:(x10115 :
                      [ `U1 of BigInt64Array.t  | `U2 of BigUint64Array.t ])
        ->
        fun ~index:(x10118 : float) ->
          fun ~value:(x10119 : bigint) ->
            bigint_of_js
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "Atomics") "sub"
                 [|((match x10115 with
                     | `U1 x10116 -> BigInt64Array.t_to_js x10116
                     | `U2 x10117 -> BigUint64Array.t_to_js x10117));(
                   Ojs.float_to_js x10118);(bigint_to_js x10119)|])
    let (wait :
      typedArray:BigInt64Array.t ->
        index:float ->
          value:bigint ->
            ?timeout:float ->
              unit -> [ `L_s133_timed_out  | `L_s95_not_equal  | `L_s99_ok ])
      =
      fun ~typedArray:(x10120 : BigInt64Array.t) ->
        fun ~index:(x10121 : float) ->
          fun ~value:(x10122 : bigint) ->
            fun ?timeout:(x10123 : float option) ->
              fun () ->
                let x10127 =
                  let x10126 = Ojs.get_prop_ascii Ojs.global "Atomics" in
                  Ojs.call (Ojs.get_prop_ascii x10126 "wait") "apply"
                    [|x10126;((let x10124 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x10124 "push"
                                    [|(BigInt64Array.t_to_js x10120)|]);
                               ignore
                                 (Ojs.call x10124 "push"
                                    [|(Ojs.float_to_js x10121)|]);
                               ignore
                                 (Ojs.call x10124 "push"
                                    [|(bigint_to_js x10122)|]);
                               (match x10123 with
                                | Some x10125 ->
                                    ignore
                                      (Ojs.call x10124 "push"
                                         [|(Ojs.float_to_js x10125)|])
                                | None -> ());
                               x10124))|] in
                match Ojs.string_of_js x10127 with
                | "timed-out" -> `L_s133_timed_out
                | "not-equal" -> `L_s95_not_equal
                | "ok" -> `L_s99_ok
                | _ -> assert false
    let (notify :
      typedArray:BigInt64Array.t ->
        index:float -> ?count:float -> unit -> float)
      =
      fun ~typedArray:(x10128 : BigInt64Array.t) ->
        fun ~index:(x10129 : float) ->
          fun ?count:(x10130 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x10133 = Ojs.get_prop_ascii Ojs.global "Atomics" in
                 Ojs.call (Ojs.get_prop_ascii x10133 "notify") "apply"
                   [|x10133;((let x10131 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x10131 "push"
                                   [|(BigInt64Array.t_to_js x10128)|]);
                              ignore
                                (Ojs.call x10131 "push"
                                   [|(Ojs.float_to_js x10129)|]);
                              (match x10130 with
                               | Some x10132 ->
                                   ignore
                                     (Ojs.call x10131 "push"
                                        [|(Ojs.float_to_js x10132)|])
                               | None -> ());
                              x10131))|])
    let (xor :
      typedArray:[ `U1 of BigInt64Array.t  | `U2 of BigUint64Array.t ] ->
        index:float -> value:bigint -> bigint)
      =
      fun
        ~typedArray:(x10134 :
                      [ `U1 of BigInt64Array.t  | `U2 of BigUint64Array.t ])
        ->
        fun ~index:(x10137 : float) ->
          fun ~value:(x10138 : bigint) ->
            bigint_of_js
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "Atomics") "xor"
                 [|((match x10134 with
                     | `U1 x10135 -> BigInt64Array.t_to_js x10135
                     | `U2 x10136 -> BigUint64Array.t_to_js x10136));(
                   Ojs.float_to_js x10137);(bigint_to_js x10138)|])
    let (add' :
      typedArray:[ `U1 of Int8Array.t  | `U2 of Uint8Array.t 
                 | `U3 of Int16Array.t  | `U4 of Uint16Array.t 
                 | `U5 of Int32Array.t  | `U6 of Uint32Array.t ]
        -> index:float -> value:float -> float)
      =
      fun
        ~typedArray:(x10139 :
                      [ `U1 of Int8Array.t  | `U2 of Uint8Array.t 
                      | `U3 of Int16Array.t  | `U4 of Uint16Array.t 
                      | `U5 of Int32Array.t  | `U6 of Uint32Array.t ])
        ->
        fun ~index:(x10146 : float) ->
          fun ~value:(x10147 : float) ->
            Ojs.float_of_js
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "Atomics") "add"
                 [|((match x10139 with
                     | `U1 x10140 -> Int8Array.t_to_js x10140
                     | `U2 x10141 -> Uint8Array.t_to_js x10141
                     | `U3 x10142 -> Int16Array.t_to_js x10142
                     | `U4 x10143 -> Uint16Array.t_to_js x10143
                     | `U5 x10144 -> Int32Array.t_to_js x10144
                     | `U6 x10145 -> Uint32Array.t_to_js x10145));(Ojs.float_to_js
                                                                    x10146);(
                   Ojs.float_to_js x10147)|])
    let (and_' :
      typedArray:[ `U1 of Int8Array.t  | `U2 of Uint8Array.t 
                 | `U3 of Int16Array.t  | `U4 of Uint16Array.t 
                 | `U5 of Int32Array.t  | `U6 of Uint32Array.t ]
        -> index:float -> value:float -> float)
      =
      fun
        ~typedArray:(x10148 :
                      [ `U1 of Int8Array.t  | `U2 of Uint8Array.t 
                      | `U3 of Int16Array.t  | `U4 of Uint16Array.t 
                      | `U5 of Int32Array.t  | `U6 of Uint32Array.t ])
        ->
        fun ~index:(x10155 : float) ->
          fun ~value:(x10156 : float) ->
            Ojs.float_of_js
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "Atomics") "and"
                 [|((match x10148 with
                     | `U1 x10149 -> Int8Array.t_to_js x10149
                     | `U2 x10150 -> Uint8Array.t_to_js x10150
                     | `U3 x10151 -> Int16Array.t_to_js x10151
                     | `U4 x10152 -> Uint16Array.t_to_js x10152
                     | `U5 x10153 -> Int32Array.t_to_js x10153
                     | `U6 x10154 -> Uint32Array.t_to_js x10154));(Ojs.float_to_js
                                                                    x10155);(
                   Ojs.float_to_js x10156)|])
    let (compareExchange' :
      typedArray:[ `U1 of Int8Array.t  | `U2 of Uint8Array.t 
                 | `U3 of Int16Array.t  | `U4 of Uint16Array.t 
                 | `U5 of Int32Array.t  | `U6 of Uint32Array.t ]
        ->
        index:float -> expectedValue:float -> replacementValue:float -> float)
      =
      fun
        ~typedArray:(x10157 :
                      [ `U1 of Int8Array.t  | `U2 of Uint8Array.t 
                      | `U3 of Int16Array.t  | `U4 of Uint16Array.t 
                      | `U5 of Int32Array.t  | `U6 of Uint32Array.t ])
        ->
        fun ~index:(x10164 : float) ->
          fun ~expectedValue:(x10165 : float) ->
            fun ~replacementValue:(x10166 : float) ->
              Ojs.float_of_js
                (Ojs.call (Ojs.get_prop_ascii Ojs.global "Atomics")
                   "compareExchange"
                   [|((match x10157 with
                       | `U1 x10158 -> Int8Array.t_to_js x10158
                       | `U2 x10159 -> Uint8Array.t_to_js x10159
                       | `U3 x10160 -> Int16Array.t_to_js x10160
                       | `U4 x10161 -> Uint16Array.t_to_js x10161
                       | `U5 x10162 -> Int32Array.t_to_js x10162
                       | `U6 x10163 -> Uint32Array.t_to_js x10163));(
                     Ojs.float_to_js x10164);(Ojs.float_to_js x10165);(
                     Ojs.float_to_js x10166)|])
    let (exchange' :
      typedArray:[ `U1 of Int8Array.t  | `U2 of Uint8Array.t 
                 | `U3 of Int16Array.t  | `U4 of Uint16Array.t 
                 | `U5 of Int32Array.t  | `U6 of Uint32Array.t ]
        -> index:float -> value:float -> float)
      =
      fun
        ~typedArray:(x10167 :
                      [ `U1 of Int8Array.t  | `U2 of Uint8Array.t 
                      | `U3 of Int16Array.t  | `U4 of Uint16Array.t 
                      | `U5 of Int32Array.t  | `U6 of Uint32Array.t ])
        ->
        fun ~index:(x10174 : float) ->
          fun ~value:(x10175 : float) ->
            Ojs.float_of_js
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "Atomics") "exchange"
                 [|((match x10167 with
                     | `U1 x10168 -> Int8Array.t_to_js x10168
                     | `U2 x10169 -> Uint8Array.t_to_js x10169
                     | `U3 x10170 -> Int16Array.t_to_js x10170
                     | `U4 x10171 -> Uint16Array.t_to_js x10171
                     | `U5 x10172 -> Int32Array.t_to_js x10172
                     | `U6 x10173 -> Uint32Array.t_to_js x10173));(Ojs.float_to_js
                                                                    x10174);(
                   Ojs.float_to_js x10175)|])
    let (isLockFree : float -> bool) =
      fun (x10176 : float) ->
        Ojs.bool_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Atomics") "isLockFree"
             [|(Ojs.float_to_js x10176)|])
    let (load' :
      typedArray:[ `U1 of Int8Array.t  | `U2 of Uint8Array.t 
                 | `U3 of Int16Array.t  | `U4 of Uint16Array.t 
                 | `U5 of Int32Array.t  | `U6 of Uint32Array.t ]
        -> index:float -> float)
      =
      fun
        ~typedArray:(x10177 :
                      [ `U1 of Int8Array.t  | `U2 of Uint8Array.t 
                      | `U3 of Int16Array.t  | `U4 of Uint16Array.t 
                      | `U5 of Int32Array.t  | `U6 of Uint32Array.t ])
        ->
        fun ~index:(x10184 : float) ->
          Ojs.float_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "Atomics") "load"
               [|((match x10177 with
                   | `U1 x10178 -> Int8Array.t_to_js x10178
                   | `U2 x10179 -> Uint8Array.t_to_js x10179
                   | `U3 x10180 -> Int16Array.t_to_js x10180
                   | `U4 x10181 -> Uint16Array.t_to_js x10181
                   | `U5 x10182 -> Int32Array.t_to_js x10182
                   | `U6 x10183 -> Uint32Array.t_to_js x10183));(Ojs.float_to_js
                                                                   x10184)|])
    let (or_' :
      typedArray:[ `U1 of Int8Array.t  | `U2 of Uint8Array.t 
                 | `U3 of Int16Array.t  | `U4 of Uint16Array.t 
                 | `U5 of Int32Array.t  | `U6 of Uint32Array.t ]
        -> index:float -> value:float -> float)
      =
      fun
        ~typedArray:(x10185 :
                      [ `U1 of Int8Array.t  | `U2 of Uint8Array.t 
                      | `U3 of Int16Array.t  | `U4 of Uint16Array.t 
                      | `U5 of Int32Array.t  | `U6 of Uint32Array.t ])
        ->
        fun ~index:(x10192 : float) ->
          fun ~value:(x10193 : float) ->
            Ojs.float_of_js
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "Atomics") "or"
                 [|((match x10185 with
                     | `U1 x10186 -> Int8Array.t_to_js x10186
                     | `U2 x10187 -> Uint8Array.t_to_js x10187
                     | `U3 x10188 -> Int16Array.t_to_js x10188
                     | `U4 x10189 -> Uint16Array.t_to_js x10189
                     | `U5 x10190 -> Int32Array.t_to_js x10190
                     | `U6 x10191 -> Uint32Array.t_to_js x10191));(Ojs.float_to_js
                                                                    x10192);(
                   Ojs.float_to_js x10193)|])
    let (store' :
      typedArray:[ `U1 of Int8Array.t  | `U2 of Uint8Array.t 
                 | `U3 of Int16Array.t  | `U4 of Uint16Array.t 
                 | `U5 of Int32Array.t  | `U6 of Uint32Array.t ]
        -> index:float -> value:float -> float)
      =
      fun
        ~typedArray:(x10194 :
                      [ `U1 of Int8Array.t  | `U2 of Uint8Array.t 
                      | `U3 of Int16Array.t  | `U4 of Uint16Array.t 
                      | `U5 of Int32Array.t  | `U6 of Uint32Array.t ])
        ->
        fun ~index:(x10201 : float) ->
          fun ~value:(x10202 : float) ->
            Ojs.float_of_js
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "Atomics") "store"
                 [|((match x10194 with
                     | `U1 x10195 -> Int8Array.t_to_js x10195
                     | `U2 x10196 -> Uint8Array.t_to_js x10196
                     | `U3 x10197 -> Int16Array.t_to_js x10197
                     | `U4 x10198 -> Uint16Array.t_to_js x10198
                     | `U5 x10199 -> Int32Array.t_to_js x10199
                     | `U6 x10200 -> Uint32Array.t_to_js x10200));(Ojs.float_to_js
                                                                    x10201);(
                   Ojs.float_to_js x10202)|])
    let (sub' :
      typedArray:[ `U1 of Int8Array.t  | `U2 of Uint8Array.t 
                 | `U3 of Int16Array.t  | `U4 of Uint16Array.t 
                 | `U5 of Int32Array.t  | `U6 of Uint32Array.t ]
        -> index:float -> value:float -> float)
      =
      fun
        ~typedArray:(x10203 :
                      [ `U1 of Int8Array.t  | `U2 of Uint8Array.t 
                      | `U3 of Int16Array.t  | `U4 of Uint16Array.t 
                      | `U5 of Int32Array.t  | `U6 of Uint32Array.t ])
        ->
        fun ~index:(x10210 : float) ->
          fun ~value:(x10211 : float) ->
            Ojs.float_of_js
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "Atomics") "sub"
                 [|((match x10203 with
                     | `U1 x10204 -> Int8Array.t_to_js x10204
                     | `U2 x10205 -> Uint8Array.t_to_js x10205
                     | `U3 x10206 -> Int16Array.t_to_js x10206
                     | `U4 x10207 -> Uint16Array.t_to_js x10207
                     | `U5 x10208 -> Int32Array.t_to_js x10208
                     | `U6 x10209 -> Uint32Array.t_to_js x10209));(Ojs.float_to_js
                                                                    x10210);(
                   Ojs.float_to_js x10211)|])
    let (wait' :
      typedArray:Int32Array.t ->
        index:float ->
          value:float ->
            ?timeout:float ->
              unit -> [ `L_s133_timed_out  | `L_s95_not_equal  | `L_s99_ok ])
      =
      fun ~typedArray:(x10212 : Int32Array.t) ->
        fun ~index:(x10213 : float) ->
          fun ~value:(x10214 : float) ->
            fun ?timeout:(x10215 : float option) ->
              fun () ->
                let x10219 =
                  let x10218 = Ojs.get_prop_ascii Ojs.global "Atomics" in
                  Ojs.call (Ojs.get_prop_ascii x10218 "wait") "apply"
                    [|x10218;((let x10216 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x10216 "push"
                                    [|(Int32Array.t_to_js x10212)|]);
                               ignore
                                 (Ojs.call x10216 "push"
                                    [|(Ojs.float_to_js x10213)|]);
                               ignore
                                 (Ojs.call x10216 "push"
                                    [|(Ojs.float_to_js x10214)|]);
                               (match x10215 with
                                | Some x10217 ->
                                    ignore
                                      (Ojs.call x10216 "push"
                                         [|(Ojs.float_to_js x10217)|])
                                | None -> ());
                               x10216))|] in
                match Ojs.string_of_js x10219 with
                | "timed-out" -> `L_s133_timed_out
                | "not-equal" -> `L_s95_not_equal
                | "ok" -> `L_s99_ok
                | _ -> assert false
    let (notify' :
      typedArray:Int32Array.t -> index:float -> ?count:float -> unit -> float)
      =
      fun ~typedArray:(x10220 : Int32Array.t) ->
        fun ~index:(x10221 : float) ->
          fun ?count:(x10222 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x10225 = Ojs.get_prop_ascii Ojs.global "Atomics" in
                 Ojs.call (Ojs.get_prop_ascii x10225 "notify") "apply"
                   [|x10225;((let x10223 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x10223 "push"
                                   [|(Int32Array.t_to_js x10220)|]);
                              ignore
                                (Ojs.call x10223 "push"
                                   [|(Ojs.float_to_js x10221)|]);
                              (match x10222 with
                               | Some x10224 ->
                                   ignore
                                     (Ojs.call x10223 "push"
                                        [|(Ojs.float_to_js x10224)|])
                               | None -> ());
                              x10223))|])
    let (xor' :
      typedArray:[ `U1 of Int8Array.t  | `U2 of Uint8Array.t 
                 | `U3 of Int16Array.t  | `U4 of Uint16Array.t 
                 | `U5 of Int32Array.t  | `U6 of Uint32Array.t ]
        -> index:float -> value:float -> float)
      =
      fun
        ~typedArray:(x10226 :
                      [ `U1 of Int8Array.t  | `U2 of Uint8Array.t 
                      | `U3 of Int16Array.t  | `U4 of Uint16Array.t 
                      | `U5 of Int32Array.t  | `U6 of Uint32Array.t ])
        ->
        fun ~index:(x10233 : float) ->
          fun ~value:(x10234 : float) ->
            Ojs.float_of_js
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "Atomics") "xor"
                 [|((match x10226 with
                     | `U1 x10227 -> Int8Array.t_to_js x10227
                     | `U2 x10228 -> Uint8Array.t_to_js x10228
                     | `U3 x10229 -> Int16Array.t_to_js x10229
                     | `U4 x10230 -> Uint16Array.t_to_js x10230
                     | `U5 x10231 -> Int32Array.t_to_js x10231
                     | `U6 x10232 -> Uint32Array.t_to_js x10232));(Ojs.float_to_js
                                                                    x10233);(
                   Ojs.float_to_js x10234)|])
  end
module AsyncIterator =
  struct
    type ('T, 'TReturn, 'TNext) t =
      [ `AsyncIterator of ('T * 'TReturn * 'TNext) ] intf
    let rec t_of_js :
      'T 'TReturn 'TNext .
        (Ojs.t -> 'T) ->
          (Ojs.t -> 'TReturn) ->
            (Ojs.t -> 'TNext) -> Ojs.t -> ('T, 'TReturn, 'TNext) t
      = fun _T -> fun _TReturn -> fun _TNext -> Obj.magic
    and t_to_js :
      'T 'TReturn 'TNext .
        ('T -> Ojs.t) ->
          ('TReturn -> Ojs.t) ->
            ('TNext -> Ojs.t) -> ('T, 'TReturn, 'TNext) t -> Ojs.t
      = fun _T -> fun _TReturn -> fun _TNext -> Obj.magic
    type ('T, 'TReturn) t_2 = ('T, 'TReturn, undefined) t
    let rec t_2_of_js :
      'T 'TReturn .
        (Ojs.t -> 'T) -> (Ojs.t -> 'TReturn) -> Ojs.t -> ('T, 'TReturn) t_2
      =
      fun (type __T) ->
        fun (type __TReturn) ->
          fun (__T_of_js : Ojs.t -> __T) ->
            fun (__TReturn_of_js : Ojs.t -> __TReturn) ->
              fun (x10239 : Ojs.t) ->
                t_of_js __T_of_js __TReturn_of_js undefined_of_js x10239
    and t_2_to_js :
      'T 'TReturn .
        ('T -> Ojs.t) -> ('TReturn -> Ojs.t) -> ('T, 'TReturn) t_2 -> Ojs.t
      =
      fun (type __T) ->
        fun (type __TReturn) ->
          fun (__T_to_js : __T -> Ojs.t) ->
            fun (__TReturn_to_js : __TReturn -> Ojs.t) ->
              fun (x10235 : (__T, __TReturn, undefined) t) ->
                t_to_js __T_to_js __TReturn_to_js undefined_to_js x10235
    type 'T t_1 = ('T, any, undefined) t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 =
      fun (type __T) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x10247 : Ojs.t) ->
            t_of_js __T_of_js any_of_js undefined_of_js x10247
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t =
      fun (type __T) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x10243 : (__T, any, undefined) t) ->
            t_to_js __T_to_js any_to_js undefined_to_js x10243
    type ('T, 'TReturn, 'TNext) tags =
      [ `AsyncIterator of ('T * 'TReturn * 'TNext) ]
    type ('T, 'TReturn) tags_2 = ('T, 'TReturn, undefined) tags
    type 'T tags_1 = ('T, any, undefined) tags
    type ('tags, 'T, 'TReturn, 'TNext) this =
      'tags intf constraint 'tags =
                  [> `AsyncIterator of ('T * 'TReturn * 'TNext) ]
    let rec this_of_js :
      'tags 'T 'TReturn 'TNext .
        (Ojs.t -> 'tags) ->
          (Ojs.t -> 'T) ->
            (Ojs.t -> 'TReturn) ->
              (Ojs.t -> 'TNext) ->
                Ojs.t -> ('tags, 'T, 'TReturn, 'TNext) this
      =
      fun (type __tags) ->
        fun (type __T) ->
          fun (type __TReturn) ->
            fun (type __TNext) ->
              fun (__tags_of_js : Ojs.t -> __tags) ->
                fun (__T_of_js : Ojs.t -> __T) ->
                  fun (__TReturn_of_js : Ojs.t -> __TReturn) ->
                    fun (__TNext_of_js : Ojs.t -> __TNext) ->
                      fun (x10253 : Ojs.t) -> intf_of_js __tags_of_js x10253
    and this_to_js :
      'tags 'T 'TReturn 'TNext .
        ('tags -> Ojs.t) ->
          ('T -> Ojs.t) ->
            ('TReturn -> Ojs.t) ->
              ('TNext -> Ojs.t) ->
                ('tags, 'T, 'TReturn, 'TNext) this -> Ojs.t
      =
      fun (type __tags) ->
        fun (type __T) ->
          fun (type __TReturn) ->
            fun (type __TNext) ->
              fun (__tags_to_js : __tags -> Ojs.t) ->
                fun (__T_to_js : __T -> Ojs.t) ->
                  fun (__TReturn_to_js : __TReturn -> Ojs.t) ->
                    fun (__TNext_to_js : __TNext -> Ojs.t) ->
                      fun (x10251 : __tags intf) ->
                        intf_to_js __tags_to_js x10251
    let (next :
      ('tags, 'T, 'TReturn, 'TNext) this ->
        args:any list -> ('T, 'TReturn) IteratorResult.t Promise.t)
      =
      fun (x10258 : ('tags, 'T, 'TReturn, 'TNext) this) ->
        fun ~args:(x10255 : any list) ->
          Promise.t_of_js
            (fun (x10264 : Ojs.t) ->
               IteratorResult.t_of_js Obj.magic Obj.magic x10264)
            (let x10263 =
               this_to_js Obj.magic Obj.magic Obj.magic Obj.magic x10258 in
             Ojs.call (Ojs.get_prop_ascii x10263 "next") "apply"
               [|x10263;((let x10256 =
                            Ojs.new_obj
                              (Ojs.get_prop_ascii Ojs.global "Array") 
                              [||] in
                          List.iter
                            (fun (x10257 : any) ->
                               ignore
                                 (Ojs.call x10256 "push"
                                    [|(any_to_js x10257)|])) x10255;
                          x10256))|])
    let (return :
      ('tags, 'T, 'TReturn, 'TNext) this ->
        ?value:[ `U1 of 'TReturn  | `U2 of 'TReturn PromiseLike.t ] ->
          unit -> ('T, 'TReturn) IteratorResult.t Promise.t)
      =
      fun (x10273 : ('tags, 'T, 'TReturn, 'TNext) this) ->
        fun
          ?value:(x10267 :
                   [ `U1 of 'TReturn  | `U2 of 'TReturn PromiseLike.t ]
                     option)
          ->
          fun () ->
            Promise.t_of_js
              (fun (x10279 : Ojs.t) ->
                 IteratorResult.t_of_js Obj.magic Obj.magic x10279)
              (let x10278 =
                 this_to_js Obj.magic Obj.magic Obj.magic Obj.magic x10273 in
               Ojs.call (Ojs.get_prop_ascii x10278 "return") "apply"
                 [|x10278;((let x10268 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x10267 with
                             | Some x10269 ->
                                 ignore
                                   (Ojs.call x10268 "push"
                                      [|((match x10269 with
                                          | `U1 x10270 -> Obj.magic x10270
                                          | `U2 x10271 ->
                                              PromiseLike.t_to_js Obj.magic
                                                x10271))|])
                             | None -> ());
                            x10268))|])
    let (throw :
      ('tags, 'T, 'TReturn, 'TNext) this ->
        ?e:any -> unit -> ('T, 'TReturn) IteratorResult.t Promise.t)
      =
      fun (x10285 : ('tags, 'T, 'TReturn, 'TNext) this) ->
        fun ?e:(x10282 : any option) ->
          fun () ->
            Promise.t_of_js
              (fun (x10291 : Ojs.t) ->
                 IteratorResult.t_of_js Obj.magic Obj.magic x10291)
              (let x10290 =
                 this_to_js Obj.magic Obj.magic Obj.magic Obj.magic x10285 in
               Ojs.call (Ojs.get_prop_ascii x10290 "throw") "apply"
                 [|x10290;((let x10283 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x10282 with
                             | Some x10284 ->
                                 ignore
                                   (Ojs.call x10283 "push"
                                      [|(any_to_js x10284)|])
                             | None -> ());
                            x10283))|])
    let cast_from = Obj.magic
  end
module AsyncIterableIterator =
  struct
    type 'T t =
      [ `AsyncIterableIterator of 'T 
      | `AsyncIterator of ('T * any * undefined) ] intf
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun _T -> Obj.magic
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun _T -> Obj.magic
    type 'T tags =
      [ `AsyncIterableIterator of 'T 
      | `AsyncIterator of ('T * any * undefined) ]
    type ('tags, 'T) this =
      'tags intf constraint 'tags = [> `AsyncIterableIterator of 'T ]
    let rec this_of_js :
      'tags 'T .
        (Ojs.t -> 'tags) -> (Ojs.t -> 'T) -> Ojs.t -> ('tags, 'T) this
      =
      fun (type __tags) ->
        fun (type __T) ->
          fun (__tags_of_js : Ojs.t -> __tags) ->
            fun (__T_of_js : Ojs.t -> __T) ->
              fun (x10296 : Ojs.t) -> intf_of_js __tags_of_js x10296
    and this_to_js :
      'tags 'T .
        ('tags -> Ojs.t) -> ('T -> Ojs.t) -> ('tags, 'T) this -> Ojs.t
      =
      fun (type __tags) ->
        fun (type __T) ->
          fun (__tags_to_js : __tags -> Ojs.t) ->
            fun (__T_to_js : __T -> Ojs.t) ->
              fun (x10294 : __tags intf) -> intf_to_js __tags_to_js x10294
    let cast_from = Obj.magic
  end
module AsyncIterable =
  struct
    type 'T t = [ `AsyncIterable of 'T ] intf
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun _T -> Obj.magic
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun _T -> Obj.magic
    type 'T tags = [ `AsyncIterable of 'T ]
    type ('tags, 'T) this =
      'tags intf constraint 'tags = [> `AsyncIterable of 'T ]
    let rec this_of_js :
      'tags 'T .
        (Ojs.t -> 'tags) -> (Ojs.t -> 'T) -> Ojs.t -> ('tags, 'T) this
      =
      fun (type __tags) ->
        fun (type __T) ->
          fun (__tags_of_js : Ojs.t -> __tags) ->
            fun (__T_of_js : Ojs.t -> __T) ->
              fun (x10300 : Ojs.t) -> intf_of_js __tags_of_js x10300
    and this_to_js :
      'tags 'T .
        ('tags -> Ojs.t) -> ('T -> Ojs.t) -> ('tags, 'T) this -> Ojs.t
      =
      fun (type __tags) ->
        fun (type __T) ->
          fun (__tags_to_js : __tags -> Ojs.t) ->
            fun (__T_to_js : __T -> Ojs.t) ->
              fun (x10298 : __tags intf) -> intf_to_js __tags_to_js x10298
    let cast_from = Obj.magic
  end
module AsyncGenerator =
  struct
    type ('T, 'TReturn, 'TNext) t =
      [ `AsyncGenerator of ('T * 'TReturn * 'TNext) 
      | `AsyncIterator of ('T * 'TReturn * 'TNext) ] intf
    let rec t_of_js :
      'T 'TReturn 'TNext .
        (Ojs.t -> 'T) ->
          (Ojs.t -> 'TReturn) ->
            (Ojs.t -> 'TNext) -> Ojs.t -> ('T, 'TReturn, 'TNext) t
      = fun _T -> fun _TReturn -> fun _TNext -> Obj.magic
    and t_to_js :
      'T 'TReturn 'TNext .
        ('T -> Ojs.t) ->
          ('TReturn -> Ojs.t) ->
            ('TNext -> Ojs.t) -> ('T, 'TReturn, 'TNext) t -> Ojs.t
      = fun _T -> fun _TReturn -> fun _TNext -> Obj.magic
    type ('T, 'TReturn) t_2 = ('T, 'TReturn, unknown) t
    let rec t_2_of_js :
      'T 'TReturn .
        (Ojs.t -> 'T) -> (Ojs.t -> 'TReturn) -> Ojs.t -> ('T, 'TReturn) t_2
      =
      fun (type __T) ->
        fun (type __TReturn) ->
          fun (__T_of_js : Ojs.t -> __T) ->
            fun (__TReturn_of_js : Ojs.t -> __TReturn) ->
              fun (x10306 : Ojs.t) ->
                t_of_js __T_of_js __TReturn_of_js unknown_of_js x10306
    and t_2_to_js :
      'T 'TReturn .
        ('T -> Ojs.t) -> ('TReturn -> Ojs.t) -> ('T, 'TReturn) t_2 -> Ojs.t
      =
      fun (type __T) ->
        fun (type __TReturn) ->
          fun (__T_to_js : __T -> Ojs.t) ->
            fun (__TReturn_to_js : __TReturn -> Ojs.t) ->
              fun (x10302 : (__T, __TReturn, unknown) t) ->
                t_to_js __T_to_js __TReturn_to_js unknown_to_js x10302
    type 'T t_1 = ('T, any, unknown) t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 =
      fun (type __T) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x10314 : Ojs.t) ->
            t_of_js __T_of_js any_of_js unknown_of_js x10314
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t =
      fun (type __T) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x10310 : (__T, any, unknown) t) ->
            t_to_js __T_to_js any_to_js unknown_to_js x10310
    type t_0 = (unknown, any, unknown) t
    let rec t_0_of_js : Ojs.t -> t_0 =
      fun (x10322 : Ojs.t) ->
        t_of_js unknown_of_js any_of_js unknown_of_js x10322
    and t_0_to_js : t_0 -> Ojs.t =
      fun (x10318 : (unknown, any, unknown) t) ->
        t_to_js unknown_to_js any_to_js unknown_to_js x10318
    type ('T, 'TReturn, 'TNext) tags =
      [ `AsyncGenerator of ('T * 'TReturn * 'TNext) 
      | `AsyncIterator of ('T * 'TReturn * 'TNext) ]
    type ('T, 'TReturn) tags_2 = ('T, 'TReturn, unknown) tags
    type 'T tags_1 = ('T, any, unknown) tags
    type tags_0 = (unknown, any, unknown) tags
    type ('tags, 'T, 'TReturn, 'TNext) this =
      'tags intf constraint 'tags =
                  [> `AsyncGenerator of ('T * 'TReturn * 'TNext) ]
    let rec this_of_js :
      'tags 'T 'TReturn 'TNext .
        (Ojs.t -> 'tags) ->
          (Ojs.t -> 'T) ->
            (Ojs.t -> 'TReturn) ->
              (Ojs.t -> 'TNext) ->
                Ojs.t -> ('tags, 'T, 'TReturn, 'TNext) this
      =
      fun (type __tags) ->
        fun (type __T) ->
          fun (type __TReturn) ->
            fun (type __TNext) ->
              fun (__tags_of_js : Ojs.t -> __tags) ->
                fun (__T_of_js : Ojs.t -> __T) ->
                  fun (__TReturn_of_js : Ojs.t -> __TReturn) ->
                    fun (__TNext_of_js : Ojs.t -> __TNext) ->
                      fun (x10328 : Ojs.t) -> intf_of_js __tags_of_js x10328
    and this_to_js :
      'tags 'T 'TReturn 'TNext .
        ('tags -> Ojs.t) ->
          ('T -> Ojs.t) ->
            ('TReturn -> Ojs.t) ->
              ('TNext -> Ojs.t) ->
                ('tags, 'T, 'TReturn, 'TNext) this -> Ojs.t
      =
      fun (type __tags) ->
        fun (type __T) ->
          fun (type __TReturn) ->
            fun (type __TNext) ->
              fun (__tags_to_js : __tags -> Ojs.t) ->
                fun (__T_to_js : __T -> Ojs.t) ->
                  fun (__TReturn_to_js : __TReturn -> Ojs.t) ->
                    fun (__TNext_to_js : __TNext -> Ojs.t) ->
                      fun (x10326 : __tags intf) ->
                        intf_to_js __tags_to_js x10326
    let (next :
      ('tags, 'T, 'TReturn, 'TNext) this ->
        args:any list -> ('T, 'TReturn) IteratorResult.t Promise.t)
      =
      fun (x10333 : ('tags, 'T, 'TReturn, 'TNext) this) ->
        fun ~args:(x10330 : any list) ->
          Promise.t_of_js
            (fun (x10339 : Ojs.t) ->
               IteratorResult.t_of_js Obj.magic Obj.magic x10339)
            (let x10338 =
               this_to_js Obj.magic Obj.magic Obj.magic Obj.magic x10333 in
             Ojs.call (Ojs.get_prop_ascii x10338 "next") "apply"
               [|x10338;((let x10331 =
                            Ojs.new_obj
                              (Ojs.get_prop_ascii Ojs.global "Array") 
                              [||] in
                          List.iter
                            (fun (x10332 : any) ->
                               ignore
                                 (Ojs.call x10331 "push"
                                    [|(any_to_js x10332)|])) x10330;
                          x10331))|])
    let (return :
      ('tags, 'T, 'TReturn, 'TNext) this ->
        value:[ `U1 of 'TReturn  | `U2 of 'TReturn PromiseLike.t ] ->
          ('T, 'TReturn) IteratorResult.t Promise.t)
      =
      fun (x10346 : ('tags, 'T, 'TReturn, 'TNext) this) ->
        fun
          ~value:(x10342 :
                   [ `U1 of 'TReturn  | `U2 of 'TReturn PromiseLike.t ])
          ->
          Promise.t_of_js
            (fun (x10351 : Ojs.t) ->
               IteratorResult.t_of_js Obj.magic Obj.magic x10351)
            (Ojs.call
               (this_to_js Obj.magic Obj.magic Obj.magic Obj.magic x10346)
               "return"
               [|((match x10342 with
                   | `U1 x10343 -> Obj.magic x10343
                   | `U2 x10344 -> PromiseLike.t_to_js Obj.magic x10344))|])
    let (throw :
      ('tags, 'T, 'TReturn, 'TNext) this ->
        e:any -> ('T, 'TReturn) IteratorResult.t Promise.t)
      =
      fun (x10355 : ('tags, 'T, 'TReturn, 'TNext) this) ->
        fun ~e:(x10354 : any) ->
          Promise.t_of_js
            (fun (x10360 : Ojs.t) ->
               IteratorResult.t_of_js Obj.magic Obj.magic x10360)
            (Ojs.call
               (this_to_js Obj.magic Obj.magic Obj.magic Obj.magic x10355)
               "throw" [|(any_to_js x10354)|])
    let cast_from = Obj.magic
  end
module AsyncGeneratorFunction =
  struct
    type t = [ `AsyncGeneratorFunction ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type tags = [ `AsyncGeneratorFunction ]
    type 'tags this =
      'tags intf constraint 'tags = [> `AsyncGeneratorFunction ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x10365 : Ojs.t) -> intf_of_js __tags_of_js x10365
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x10363 : __tags intf) -> intf_to_js __tags_to_js x10363
    let (create : 'tags this -> args:any list -> AsyncGenerator.t_0) =
      fun (x10370 : 'tags this) ->
        fun ~args:(x10367 : any list) ->
          AsyncGenerator.t_0_of_js
            (Ojs.new_obj_arr (this_to_js Obj.magic x10370)
               (let x10368 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                List.iter
                  (fun (x10369 : any) ->
                     ignore (Ojs.call x10368 "push" [|(any_to_js x10369)|]))
                  x10367;
                x10368))
    let (apply : 'tags this -> args:any list -> AsyncGenerator.t_0) =
      fun (x10375 : 'tags this) ->
        fun ~args:(x10372 : any list) ->
          AsyncGenerator.t_0_of_js
            (Ojs.call (this_to_js Obj.magic x10375) "apply"
               [|Ojs.null;((let x10373 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            List.iter
                              (fun (x10374 : any) ->
                                 ignore
                                   (Ojs.call x10373 "push"
                                      [|(any_to_js x10374)|])) x10372;
                            x10373))|])
    let (get_length : 'tags this -> float) =
      fun (x10377 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x10377) "length")
    let (get_name : 'tags this -> string) =
      fun (x10379 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x10379) "name")
    let (get_prototype : 'tags this -> AsyncGenerator.t_0) =
      fun (x10381 : 'tags this) ->
        AsyncGenerator.t_0_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x10381) "prototype")
    let cast_from = Obj.magic
  end
module AsyncGeneratorFunctionConstructor =
  struct
    type t = [ `AsyncGeneratorFunctionConstructor ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type tags = [ `AsyncGeneratorFunctionConstructor ]
    type 'tags this =
      'tags intf constraint 'tags = [> `AsyncGeneratorFunctionConstructor ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x10385 : Ojs.t) -> intf_of_js __tags_of_js x10385
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x10383 : __tags intf) -> intf_to_js __tags_to_js x10383
    let (create : 'tags this -> args:string list -> AsyncGeneratorFunction.t)
      =
      fun (x10390 : 'tags this) ->
        fun ~args:(x10387 : string list) ->
          AsyncGeneratorFunction.t_of_js
            (Ojs.new_obj_arr (this_to_js Obj.magic x10390)
               (let x10388 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                List.iter
                  (fun (x10389 : string) ->
                     ignore
                       (Ojs.call x10388 "push" [|(Ojs.string_to_js x10389)|]))
                  x10387;
                x10388))
    let (apply : 'tags this -> args:string list -> AsyncGeneratorFunction.t)
      =
      fun (x10395 : 'tags this) ->
        fun ~args:(x10392 : string list) ->
          AsyncGeneratorFunction.t_of_js
            (Ojs.call (this_to_js Obj.magic x10395) "apply"
               [|Ojs.null;((let x10393 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            List.iter
                              (fun (x10394 : string) ->
                                 ignore
                                   (Ojs.call x10393 "push"
                                      [|(Ojs.string_to_js x10394)|])) x10392;
                            x10393))|])
    let (get_length : 'tags this -> float) =
      fun (x10397 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x10397) "length")
    let (get_name : 'tags this -> string) =
      fun (x10399 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x10399) "name")
    let (get_prototype : 'tags this -> AsyncGeneratorFunction.t) =
      fun (x10401 : 'tags this) ->
        AsyncGeneratorFunction.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x10401) "prototype")
    let cast_from = Obj.magic
  end
module AsyncDisposable =
  struct
    type t = [ `AsyncDisposable ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type tags = [ `AsyncDisposable ]
    type 'tags this = 'tags intf constraint 'tags = [> `AsyncDisposable ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x10405 : Ojs.t) -> intf_of_js __tags_of_js x10405
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x10403 : __tags intf) -> intf_to_js __tags_to_js x10403
    let cast_from = Obj.magic
  end
module AsyncDisposableStack =
  struct
    type t = [ `AsyncDisposableStack ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type tags = [ `AsyncDisposableStack ]
    type 'tags this =
      'tags intf constraint 'tags = [> `AsyncDisposableStack ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x10409 : Ojs.t) -> intf_of_js __tags_of_js x10409
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x10407 : __tags intf) -> intf_to_js __tags_to_js x10407
    let (get_disposed : 'tags this -> bool) =
      fun (x10411 : 'tags this) ->
        Ojs.bool_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x10411) "disposed")
    let (disposeAsync : 'tags this -> unit Promise.t) =
      fun (x10413 : 'tags this) ->
        Promise.t_of_js Ojs.unit_of_js
          (Ojs.call (this_to_js Obj.magic x10413) "disposeAsync" [||])
    let (use : 'tags this -> value:'T -> 'T) =
      fun (x10417 : 'tags this) ->
        fun ~value:(x10416 : 'T) ->
          Obj.magic
            (Ojs.call (this_to_js Obj.magic x10417) "use"
               [|(Obj.magic x10416)|])
    let (adopt :
      'tags this ->
        value:'T ->
          onDisposeAsync:('T -> [ `U1 of unit PromiseLike.t  | `U2 of unit ])
            -> 'T)
      =
      fun (x10425 : 'tags this) ->
        fun ~value:(x10419 : 'T) ->
          fun
            ~onDisposeAsync:(x10420 :
                              'T ->
                                [ `U1 of unit PromiseLike.t  | `U2 of unit ])
            ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic x10425) "adopt"
                 [|(Obj.magic x10419);(Ojs.fun_to_js 1
                                         (fun (x10421 : Ojs.t) ->
                                            match x10420 (Obj.magic x10421)
                                            with
                                            | `U1 x10422 ->
                                                PromiseLike.t_to_js
                                                  Ojs.unit_to_js x10422
                                            | `U2 x10424 ->
                                                Ojs.unit_to_js x10424))|])
    let (defer :
      'tags this ->
        onDisposeAsync:(unit -> [ `U1 of unit PromiseLike.t  | `U2 of unit ])
          -> unit)
      =
      fun (x10431 : 'tags this) ->
        fun
          ~onDisposeAsync:(x10427 :
                            unit ->
                              [ `U1 of unit PromiseLike.t  | `U2 of unit ])
          ->
          ignore
            (Ojs.call (this_to_js Obj.magic x10431) "defer"
               [|(Ojs.fun_to_js 1
                    (fun _ ->
                       match x10427 () with
                       | `U1 x10428 ->
                           PromiseLike.t_to_js Ojs.unit_to_js x10428
                       | `U2 x10430 -> Ojs.unit_to_js x10430))|])
    let (move : 'tags this -> t) =
      fun (x10433 : 'tags this) ->
        t_of_js (Ojs.call (this_to_js Obj.magic x10433) "move" [||])
    let (create : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "AsyncDisposableStack")
             [||])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "AsyncDisposableStack")
             "prototype")
    let cast_from = Obj.magic
  end
module ArrayBufferView =
  struct
    type t = [ `ArrayBufferView ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type tags = [ `ArrayBufferView ]
    type 'tags this = 'tags intf constraint 'tags = [> `ArrayBufferView ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x10437 : Ojs.t) -> intf_of_js __tags_of_js x10437
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x10435 : __tags intf) -> intf_to_js __tags_to_js x10435
    let (get_buffer : 'tags this -> ArrayBufferLike.t) =
      fun (x10439 : 'tags this) ->
        ArrayBufferLike.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x10439) "buffer")
    let (set_buffer : 'tags this -> ArrayBufferLike.t -> unit) =
      fun (x10441 : 'tags this) ->
        fun (x10442 : ArrayBufferLike.t) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x10441) "buffer"
            (ArrayBufferLike.t_to_js x10442)
    let (get_byteLength : 'tags this -> float) =
      fun (x10444 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x10444) "byteLength")
    let (set_byteLength : 'tags this -> float -> unit) =
      fun (x10446 : 'tags this) ->
        fun (x10447 : float) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x10446) "byteLength"
            (Ojs.float_to_js x10447)
    let (get_byteOffset : 'tags this -> float) =
      fun (x10449 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x10449) "byteOffset")
    let (set_byteOffset : 'tags this -> float -> unit) =
      fun (x10451 : 'tags this) ->
        fun (x10452 : float) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x10451) "byteOffset"
            (Ojs.float_to_js x10452)
    let (create :
      buffer:ArrayBufferLike.t ->
        byteLength:float -> byteOffset:float -> unit -> t)
      =
      fun ~buffer:(x10454 : ArrayBufferLike.t) ->
        fun ~byteLength:(x10455 : float) ->
          fun ~byteOffset:(x10456 : float) ->
            fun () ->
              let x10457 = Ojs.empty_obj () in
              Ojs.set_prop_ascii x10457 "buffer"
                (ArrayBufferLike.t_to_js x10454);
              Ojs.set_prop_ascii x10457 "byteLength" (Ojs.float_to_js x10455);
              Ojs.set_prop_ascii x10457 "byteOffset" (Ojs.float_to_js x10456);
              t_of_js x10457
    let cast_from = Obj.magic
  end
module ArrayBufferTypes =
  struct
    type t = [ `ArrayBufferTypes ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type tags = [ `ArrayBufferTypes ]
    type 'tags this = 'tags intf constraint 'tags = [> `ArrayBufferTypes ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x10460 : Ojs.t) -> intf_of_js __tags_of_js x10460
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x10458 : __tags intf) -> intf_to_js __tags_to_js x10458
    let (get_SharedArrayBuffer : 'tags this -> SharedArrayBuffer.t) =
      fun (x10462 : 'tags this) ->
        SharedArrayBuffer.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x10462)
             "SharedArrayBuffer")
    let (set_SharedArrayBuffer : 'tags this -> SharedArrayBuffer.t -> unit) =
      fun (x10464 : 'tags this) ->
        fun (x10465 : SharedArrayBuffer.t) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x10464)
            "SharedArrayBuffer" (SharedArrayBuffer.t_to_js x10465)
    let (get_ArrayBuffer : 'tags this -> ArrayBuffer.t) =
      fun (x10467 : 'tags this) ->
        ArrayBuffer.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x10467) "ArrayBuffer")
    let (set_ArrayBuffer : 'tags this -> ArrayBuffer.t -> unit) =
      fun (x10469 : 'tags this) ->
        fun (x10470 : ArrayBuffer.t) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x10469) "ArrayBuffer"
            (ArrayBuffer.t_to_js x10470)
    let (create :
      sharedArrayBuffer:SharedArrayBuffer.t ->
        arrayBuffer:ArrayBuffer.t -> unit -> t)
      =
      fun ~sharedArrayBuffer:(x10472 : SharedArrayBuffer.t) ->
        fun ~arrayBuffer:(x10473 : ArrayBuffer.t) ->
          fun () ->
            let x10474 = Ojs.empty_obj () in
            Ojs.set_prop_ascii x10474 "SharedArrayBuffer"
              (SharedArrayBuffer.t_to_js x10472);
            Ojs.set_prop_ascii x10474 "ArrayBuffer"
              (ArrayBuffer.t_to_js x10473);
            t_of_js x10474
    let cast_from = Obj.magic
  end
module AggregateError =
  struct
    type t = [ `AggregateError  | `Error ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type tags = [ `AggregateError  | `Error ]
    type 'tags this = 'tags intf constraint 'tags = [> `AggregateError ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x10477 : Ojs.t) -> intf_of_js __tags_of_js x10477
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x10475 : __tags intf) -> intf_to_js __tags_to_js x10475
    let (get_errors : 'tags this -> any list) =
      fun (x10479 : 'tags this) ->
        Ojs.list_of_js any_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x10479) "errors")
    let (set_errors : 'tags this -> any list -> unit) =
      fun (x10482 : 'tags this) ->
        fun (x10483 : any list) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x10482) "errors"
            (Ojs.list_to_js any_to_js x10483)
    let (create :
      errors:any Iterable.t ->
        ?message:string -> ?options:ErrorOptions.t -> unit -> t)
      =
      fun ~errors:(x10486 : any Iterable.t) ->
        fun ?message:(x10487 : string option) ->
          fun ?options:(x10488 : ErrorOptions.t option) ->
            fun () ->
              t_of_js
                (Ojs.new_obj_arr
                   (Ojs.get_prop_ascii Ojs.global "AggregateError")
                   (let x10489 =
                      Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                        [||] in
                    ignore
                      (Ojs.call x10489 "push"
                         [|(Iterable.t_to_js any_to_js x10486)|]);
                    (match x10487 with
                     | Some x10491 ->
                         ignore
                           (Ojs.call x10489 "push"
                              [|(Ojs.string_to_js x10491)|])
                     | None -> ());
                    (match x10488 with
                     | Some x10490 ->
                         ignore
                           (Ojs.call x10489 "push"
                              [|(ErrorOptions.t_to_js x10490)|])
                     | None -> ());
                    x10489))
    let (invoke :
      errors:any Iterable.t ->
        ?message:string -> ?options:ErrorOptions.t -> unit -> t)
      =
      fun ~errors:(x10493 : any Iterable.t) ->
        fun ?message:(x10494 : string option) ->
          fun ?options:(x10495 : ErrorOptions.t option) ->
            fun () ->
              t_of_js
                (Ojs.call (Ojs.get_prop_ascii Ojs.global "AggregateError")
                   "apply"
                   [|Ojs.null;((let x10496 =
                                  Ojs.new_obj
                                    (Ojs.get_prop_ascii Ojs.global "Array")
                                    [||] in
                                ignore
                                  (Ojs.call x10496 "push"
                                     [|(Iterable.t_to_js any_to_js x10493)|]);
                                (match x10494 with
                                 | Some x10498 ->
                                     ignore
                                       (Ojs.call x10496 "push"
                                          [|(Ojs.string_to_js x10498)|])
                                 | None -> ());
                                (match x10495 with
                                 | Some x10497 ->
                                     ignore
                                       (Ojs.call x10496 "push"
                                          [|(ErrorOptions.t_to_js x10497)|])
                                 | None -> ());
                                x10496))|])
    let (create' : errors:any Iterable.t -> ?message:string -> unit -> t) =
      fun ~errors:(x10500 : any Iterable.t) ->
        fun ?message:(x10501 : string option) ->
          fun () ->
            t_of_js
              (Ojs.new_obj_arr
                 (Ojs.get_prop_ascii Ojs.global "AggregateError")
                 (let x10502 =
                    Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                  ignore
                    (Ojs.call x10502 "push"
                       [|(Iterable.t_to_js any_to_js x10500)|]);
                  (match x10501 with
                   | Some x10503 ->
                       ignore
                         (Ojs.call x10502 "push"
                            [|(Ojs.string_to_js x10503)|])
                   | None -> ());
                  x10502))
    let (invoke' : errors:any Iterable.t -> ?message:string -> unit -> t) =
      fun ~errors:(x10505 : any Iterable.t) ->
        fun ?message:(x10506 : string option) ->
          fun () ->
            t_of_js
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "AggregateError")
                 "apply"
                 [|Ojs.null;((let x10507 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x10507 "push"
                                   [|(Iterable.t_to_js any_to_js x10505)|]);
                              (match x10506 with
                               | Some x10508 ->
                                   ignore
                                     (Ojs.call x10507 "push"
                                        [|(Ojs.string_to_js x10508)|])
                               | None -> ());
                              x10507))|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "AggregateError") "prototype")
    let (create'' : errors:any list -> unit -> t) =
      fun ~errors:(x10510 : any list) ->
        fun () ->
          let x10511 = Ojs.empty_obj () in
          Ojs.set_prop_ascii x10511 "errors"
            (Ojs.list_to_js any_to_js x10510);
          t_of_js x10511
    let cast_from = Obj.magic
  end
module ReadonlyArray_Make(T:Ojs.T) =
  struct
    type 'T parent = 'T ReadonlyArray.t
    let rec parent_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T parent =
      fun (type __T) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x10515 : Ojs.t) -> ReadonlyArray.t_of_js __T_of_js x10515
    and parent_to_js : 'T . ('T -> Ojs.t) -> 'T parent -> Ojs.t =
      fun (type __T) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x10513 : __T ReadonlyArray.t) ->
            ReadonlyArray.t_to_js __T_to_js x10513
    type t = T.t parent
    let rec t_of_js : Ojs.t -> t =
      fun (x10519 : Ojs.t) -> parent_of_js T.t_of_js x10519
    and t_to_js : t -> Ojs.t =
      fun (x10517 : T.t parent) -> parent_to_js T.t_to_js x10517
    let (findLast :
      t ->
        predicate:(value:T.t -> index:float -> array:T.t list -> bool) ->
          ?thisArg:any -> unit -> 'S option)
      =
      fun (x10529 : t) ->
        fun
          ~predicate:(x10521 :
                       value:T.t -> index:float -> array:T.t list -> bool)
          ->
          fun ?thisArg:(x10522 : any option) ->
            fun () ->
              Ojs.option_of_js Obj.magic
                (let x10530 = t_to_js x10529 in
                 Ojs.call (Ojs.get_prop_ascii x10530 "findLast") "apply"
                   [|x10530;((let x10523 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x10523 "push"
                                   [|(Ojs.fun_to_js 3
                                        (fun (x10525 : Ojs.t) ->
                                           fun (x10526 : Ojs.t) ->
                                             fun (x10527 : Ojs.t) ->
                                               Ojs.bool_to_js
                                                 (x10521
                                                    ~value:(T.t_of_js x10525)
                                                    ~index:(Ojs.float_of_js
                                                              x10526)
                                                    ~array:(Ojs.list_of_js
                                                              T.t_of_js
                                                              x10527))))|]);
                              (match x10522 with
                               | Some x10524 ->
                                   ignore
                                     (Ojs.call x10523 "push"
                                        [|(any_to_js x10524)|])
                               | None -> ());
                              x10523))|])
    let (findLast :
      t ->
        predicate:(value:T.t -> index:float -> array:T.t list -> unknown) ->
          ?thisArg:any -> unit -> T.t option)
      =
      fun (x10540 : t) ->
        fun
          ~predicate:(x10532 :
                       value:T.t -> index:float -> array:T.t list -> unknown)
          ->
          fun ?thisArg:(x10533 : any option) ->
            fun () ->
              Ojs.option_of_js T.t_of_js
                (let x10541 = t_to_js x10540 in
                 Ojs.call (Ojs.get_prop_ascii x10541 "findLast") "apply"
                   [|x10541;((let x10534 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x10534 "push"
                                   [|(Ojs.fun_to_js 3
                                        (fun (x10536 : Ojs.t) ->
                                           fun (x10537 : Ojs.t) ->
                                             fun (x10538 : Ojs.t) ->
                                               unknown_to_js
                                                 (x10532
                                                    ~value:(T.t_of_js x10536)
                                                    ~index:(Ojs.float_of_js
                                                              x10537)
                                                    ~array:(Ojs.list_of_js
                                                              T.t_of_js
                                                              x10538))))|]);
                              (match x10533 with
                               | Some x10535 ->
                                   ignore
                                     (Ojs.call x10534 "push"
                                        [|(any_to_js x10535)|])
                               | None -> ());
                              x10534))|])
    let (findLastIndex :
      t ->
        predicate:(value:T.t -> index:float -> array:T.t list -> unknown) ->
          ?thisArg:any -> unit -> float)
      =
      fun (x10551 : t) ->
        fun
          ~predicate:(x10543 :
                       value:T.t -> index:float -> array:T.t list -> unknown)
          ->
          fun ?thisArg:(x10544 : any option) ->
            fun () ->
              Ojs.float_of_js
                (let x10552 = t_to_js x10551 in
                 Ojs.call (Ojs.get_prop_ascii x10552 "findLastIndex") "apply"
                   [|x10552;((let x10545 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x10545 "push"
                                   [|(Ojs.fun_to_js 3
                                        (fun (x10547 : Ojs.t) ->
                                           fun (x10548 : Ojs.t) ->
                                             fun (x10549 : Ojs.t) ->
                                               unknown_to_js
                                                 (x10543
                                                    ~value:(T.t_of_js x10547)
                                                    ~index:(Ojs.float_of_js
                                                              x10548)
                                                    ~array:(Ojs.list_of_js
                                                              T.t_of_js
                                                              x10549))))|]);
                              (match x10544 with
                               | Some x10546 ->
                                   ignore
                                     (Ojs.call x10545 "push"
                                        [|(any_to_js x10546)|])
                               | None -> ());
                              x10545))|])
    let (toReversed : t -> T.t list) =
      fun (x10553 : t) ->
        Ojs.list_of_js T.t_of_js
          (Ojs.call (t_to_js x10553) "toReversed" [||])
    let (toSorted :
      t -> ?compareFn:(a:T.t -> b:T.t -> float) -> unit -> T.t list) =
      fun (x10560 : t) ->
        fun ?compareFn:(x10555 : (a:T.t -> b:T.t -> float) option) ->
          fun () ->
            Ojs.list_of_js T.t_of_js
              (let x10561 = t_to_js x10560 in
               Ojs.call (Ojs.get_prop_ascii x10561 "toSorted") "apply"
                 [|x10561;((let x10556 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x10555 with
                             | Some x10557 ->
                                 ignore
                                   (Ojs.call x10556 "push"
                                      [|(Ojs.fun_to_js 2
                                           (fun (x10558 : Ojs.t) ->
                                              fun (x10559 : Ojs.t) ->
                                                Ojs.float_to_js
                                                  (x10557
                                                     ~a:(T.t_of_js x10558)
                                                     ~b:(T.t_of_js x10559))))|])
                             | None -> ());
                            x10556))|])
    let (toSpliced :
      t -> start:float -> deleteCount:float -> items:T.t list -> T.t list) =
      fun (x10568 : t) ->
        fun ~start:(x10563 : float) ->
          fun ~deleteCount:(x10564 : float) ->
            fun ~items:(x10565 : T.t list) ->
              Ojs.list_of_js T.t_of_js
                (let x10569 = t_to_js x10568 in
                 Ojs.call (Ojs.get_prop_ascii x10569 "toSpliced") "apply"
                   [|x10569;((let x10566 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x10566 "push"
                                   [|(Ojs.float_to_js x10563)|]);
                              ignore
                                (Ojs.call x10566 "push"
                                   [|(Ojs.float_to_js x10564)|]);
                              List.iter
                                (fun (x10567 : T.t) ->
                                   ignore
                                     (Ojs.call x10566 "push"
                                        [|(T.t_to_js x10567)|])) x10565;
                              x10566))|])
    let (toSpliced :
      t -> start:float -> ?deleteCount:float -> unit -> T.t list) =
      fun (x10575 : t) ->
        fun ~start:(x10571 : float) ->
          fun ?deleteCount:(x10572 : float option) ->
            fun () ->
              Ojs.list_of_js T.t_of_js
                (let x10576 = t_to_js x10575 in
                 Ojs.call (Ojs.get_prop_ascii x10576 "toSpliced") "apply"
                   [|x10576;((let x10573 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x10573 "push"
                                   [|(Ojs.float_to_js x10571)|]);
                              (match x10572 with
                               | Some x10574 ->
                                   ignore
                                     (Ojs.call x10573 "push"
                                        [|(Ojs.float_to_js x10574)|])
                               | None -> ());
                              x10573))|])
    let (with_ : t -> index:float -> value:T.t -> T.t list) =
      fun (x10580 : t) ->
        fun ~index:(x10578 : float) ->
          fun ~value:(x10579 : T.t) ->
            Ojs.list_of_js T.t_of_js
              (Ojs.call (t_to_js x10580) "with"
                 [|(Ojs.float_to_js x10578);(T.t_to_js x10579)|])
    let (at : t -> index:float -> T.t option) =
      fun (x10583 : t) ->
        fun ~index:(x10582 : float) ->
          Ojs.option_of_js T.t_of_js
            (Ojs.call (t_to_js x10583) "at" [|(Ojs.float_to_js x10582)|])
    let (flatMap :
      t ->
        callback:(this:'This ->
                    value:T.t ->
                      index:float ->
                        array:T.t list -> [ `U1 of 'U  | `U2 of 'U parent ])
          -> ?thisArg:'This -> unit -> 'U list)
      =
      fun (x10597 : t) ->
        fun
          ~callback:(x10585 :
                      this:'This ->
                        value:T.t ->
                          index:float ->
                            array:T.t list ->
                              [ `U1 of 'U  | `U2 of 'U parent ])
          ->
          fun ?thisArg:(x10586 : 'This option) ->
            fun () ->
              Ojs.list_of_js Obj.magic
                (let x10598 = t_to_js x10597 in
                 Ojs.call (Ojs.get_prop_ascii x10598 "flatMap") "apply"
                   [|x10598;((let x10587 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x10587 "push"
                                   [|(Ojs.fun_to_js 4
                                        (fun (x10589 : Ojs.t) ->
                                           fun (x10590 : Ojs.t) ->
                                             fun (x10591 : Ojs.t) ->
                                               fun (x10592 : Ojs.t) ->
                                                 match x10585
                                                         ~this:(Obj.magic
                                                                  x10589)
                                                         ~value:(T.t_of_js
                                                                   x10590)
                                                         ~index:(Ojs.float_of_js
                                                                   x10591)
                                                         ~array:(Ojs.list_of_js
                                                                   T.t_of_js
                                                                   x10592)
                                                 with
                                                 | `U1 x10594 ->
                                                     Obj.magic x10594
                                                 | `U2 x10595 ->
                                                     parent_to_js Obj.magic
                                                       x10595))|]);
                              (match x10586 with
                               | Some x10588 ->
                                   ignore
                                     (Ojs.call x10587 "push"
                                        [|(Obj.magic x10588)|])
                               | None -> ());
                              x10587))|])
    let (flat :
      t -> this:'A -> ?depth:'D -> unit -> ('A, 'D) FlatArray.t list) =
      fun (x10604 : t) ->
        fun ~this:(x10600 : 'A) ->
          fun ?depth:(x10601 : 'D option) ->
            fun () ->
              Ojs.list_of_js
                (fun (x10606 : Ojs.t) ->
                   FlatArray.t_of_js Obj.magic Obj.magic x10606)
                (let x10605 = t_to_js x10604 in
                 Ojs.call (Ojs.get_prop_ascii x10605 "flat") "apply"
                   [|x10605;((let x10602 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x10602 "push"
                                   [|(Obj.magic x10600)|]);
                              (match x10601 with
                               | Some x10603 ->
                                   ignore
                                     (Ojs.call x10602 "push"
                                        [|(Obj.magic x10603)|])
                               | None -> ());
                              x10602))|])
    let (includes :
      t -> searchElement:T.t -> ?fromIndex:float -> unit -> bool) =
      fun (x10613 : t) ->
        fun ~searchElement:(x10609 : T.t) ->
          fun ?fromIndex:(x10610 : float option) ->
            fun () ->
              Ojs.bool_of_js
                (let x10614 = t_to_js x10613 in
                 Ojs.call (Ojs.get_prop_ascii x10614 "includes") "apply"
                   [|x10614;((let x10611 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x10611 "push"
                                   [|(T.t_to_js x10609)|]);
                              (match x10610 with
                               | Some x10612 ->
                                   ignore
                                     (Ojs.call x10611 "push"
                                        [|(Ojs.float_to_js x10612)|])
                               | None -> ());
                              x10611))|])
    let (entries : t -> (float * T.t) IterableIterator.t) =
      fun (x10615 : t) ->
        IterableIterator.t_of_js
          (fun (x10616 : Ojs.t) ->
             let x10617 = x10616 in
             ((Ojs.float_of_js (Ojs.array_get x10617 0)),
               (T.t_of_js (Ojs.array_get x10617 1))))
          (Ojs.call (t_to_js x10615) "entries" [||])
    let (keys : t -> float IterableIterator.t) =
      fun (x10618 : t) ->
        IterableIterator.t_of_js Ojs.float_of_js
          (Ojs.call (t_to_js x10618) "keys" [||])
    let (values : t -> T.t IterableIterator.t) =
      fun (x10620 : t) ->
        IterableIterator.t_of_js T.t_of_js
          (Ojs.call (t_to_js x10620) "values" [||])
    let (find :
      t ->
        predicate:(value:T.t -> index:float -> obj:T.t list -> bool) ->
          ?thisArg:any -> unit -> 'S option)
      =
      fun (x10630 : t) ->
        fun
          ~predicate:(x10622 :
                       value:T.t -> index:float -> obj:T.t list -> bool)
          ->
          fun ?thisArg:(x10623 : any option) ->
            fun () ->
              Ojs.option_of_js Obj.magic
                (let x10631 = t_to_js x10630 in
                 Ojs.call (Ojs.get_prop_ascii x10631 "find") "apply"
                   [|x10631;((let x10624 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x10624 "push"
                                   [|(Ojs.fun_to_js 3
                                        (fun (x10626 : Ojs.t) ->
                                           fun (x10627 : Ojs.t) ->
                                             fun (x10628 : Ojs.t) ->
                                               Ojs.bool_to_js
                                                 (x10622
                                                    ~value:(T.t_of_js x10626)
                                                    ~index:(Ojs.float_of_js
                                                              x10627)
                                                    ~obj:(Ojs.list_of_js
                                                            T.t_of_js x10628))))|]);
                              (match x10623 with
                               | Some x10625 ->
                                   ignore
                                     (Ojs.call x10624 "push"
                                        [|(any_to_js x10625)|])
                               | None -> ());
                              x10624))|])
    let (find :
      t ->
        predicate:(value:T.t -> index:float -> obj:T.t list -> unknown) ->
          ?thisArg:any -> unit -> T.t option)
      =
      fun (x10641 : t) ->
        fun
          ~predicate:(x10633 :
                       value:T.t -> index:float -> obj:T.t list -> unknown)
          ->
          fun ?thisArg:(x10634 : any option) ->
            fun () ->
              Ojs.option_of_js T.t_of_js
                (let x10642 = t_to_js x10641 in
                 Ojs.call (Ojs.get_prop_ascii x10642 "find") "apply"
                   [|x10642;((let x10635 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x10635 "push"
                                   [|(Ojs.fun_to_js 3
                                        (fun (x10637 : Ojs.t) ->
                                           fun (x10638 : Ojs.t) ->
                                             fun (x10639 : Ojs.t) ->
                                               unknown_to_js
                                                 (x10633
                                                    ~value:(T.t_of_js x10637)
                                                    ~index:(Ojs.float_of_js
                                                              x10638)
                                                    ~obj:(Ojs.list_of_js
                                                            T.t_of_js x10639))))|]);
                              (match x10634 with
                               | Some x10636 ->
                                   ignore
                                     (Ojs.call x10635 "push"
                                        [|(any_to_js x10636)|])
                               | None -> ());
                              x10635))|])
    let (findIndex :
      t ->
        predicate:(value:T.t -> index:float -> obj:T.t list -> unknown) ->
          ?thisArg:any -> unit -> float)
      =
      fun (x10652 : t) ->
        fun
          ~predicate:(x10644 :
                       value:T.t -> index:float -> obj:T.t list -> unknown)
          ->
          fun ?thisArg:(x10645 : any option) ->
            fun () ->
              Ojs.float_of_js
                (let x10653 = t_to_js x10652 in
                 Ojs.call (Ojs.get_prop_ascii x10653 "findIndex") "apply"
                   [|x10653;((let x10646 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x10646 "push"
                                   [|(Ojs.fun_to_js 3
                                        (fun (x10648 : Ojs.t) ->
                                           fun (x10649 : Ojs.t) ->
                                             fun (x10650 : Ojs.t) ->
                                               unknown_to_js
                                                 (x10644
                                                    ~value:(T.t_of_js x10648)
                                                    ~index:(Ojs.float_of_js
                                                              x10649)
                                                    ~obj:(Ojs.list_of_js
                                                            T.t_of_js x10650))))|]);
                              (match x10645 with
                               | Some x10647 ->
                                   ignore
                                     (Ojs.call x10646 "push"
                                        [|(any_to_js x10647)|])
                               | None -> ());
                              x10646))|])
    let (get_length : t -> float) =
      fun (x10654 : t) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x10654) "length")
    let (toString : t -> string) =
      fun (x10655 : t) ->
        Ojs.string_of_js (Ojs.call (t_to_js x10655) "toString" [||])
    let (toLocaleString : t -> string) =
      fun (x10656 : t) ->
        Ojs.string_of_js (Ojs.call (t_to_js x10656) "toLocaleString" [||])
    let (concat : t -> items:T.t ConcatArray.t list -> T.t list) =
      fun (x10661 : t) ->
        fun ~items:(x10657 : T.t ConcatArray.t list) ->
          Ojs.list_of_js T.t_of_js
            (let x10662 = t_to_js x10661 in
             Ojs.call (Ojs.get_prop_ascii x10662 "concat") "apply"
               [|x10662;((let x10658 =
                            Ojs.new_obj
                              (Ojs.get_prop_ascii Ojs.global "Array") 
                              [||] in
                          List.iter
                            (fun (x10659 : T.t ConcatArray.t) ->
                               ignore
                                 (Ojs.call x10658 "push"
                                    [|(ConcatArray.t_to_js T.t_to_js x10659)|]))
                            x10657;
                          x10658))|])
    let (concat :
      t -> items:[ `U1 of T.t  | `U2 of T.t ConcatArray.t ] list -> T.t list)
      =
      fun (x10670 : t) ->
        fun ~items:(x10664 : [ `U1 of T.t  | `U2 of T.t ConcatArray.t ] list)
          ->
          Ojs.list_of_js T.t_of_js
            (let x10671 = t_to_js x10670 in
             Ojs.call (Ojs.get_prop_ascii x10671 "concat") "apply"
               [|x10671;((let x10665 =
                            Ojs.new_obj
                              (Ojs.get_prop_ascii Ojs.global "Array") 
                              [||] in
                          List.iter
                            (fun
                               (x10666 :
                                 [ `U1 of T.t  | `U2 of T.t ConcatArray.t ])
                               ->
                               ignore
                                 (Ojs.call x10665 "push"
                                    [|((match x10666 with
                                        | `U1 x10667 -> T.t_to_js x10667
                                        | `U2 x10668 ->
                                            ConcatArray.t_to_js T.t_to_js
                                              x10668))|])) x10664;
                          x10665))|])
    let (join : t -> ?separator:string -> unit -> string) =
      fun (x10676 : t) ->
        fun ?separator:(x10673 : string option) ->
          fun () ->
            Ojs.string_of_js
              (let x10677 = t_to_js x10676 in
               Ojs.call (Ojs.get_prop_ascii x10677 "join") "apply"
                 [|x10677;((let x10674 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x10673 with
                             | Some x10675 ->
                                 ignore
                                   (Ojs.call x10674 "push"
                                      [|(Ojs.string_to_js x10675)|])
                             | None -> ());
                            x10674))|])
    let (slice : t -> ?start:float -> ?end_:float -> unit -> T.t list) =
      fun (x10683 : t) ->
        fun ?start:(x10678 : float option) ->
          fun ?end_:(x10679 : float option) ->
            fun () ->
              Ojs.list_of_js T.t_of_js
                (let x10684 = t_to_js x10683 in
                 Ojs.call (Ojs.get_prop_ascii x10684 "slice") "apply"
                   [|x10684;((let x10680 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              (match x10678 with
                               | Some x10682 ->
                                   ignore
                                     (Ojs.call x10680 "push"
                                        [|(Ojs.float_to_js x10682)|])
                               | None -> ());
                              (match x10679 with
                               | Some x10681 ->
                                   ignore
                                     (Ojs.call x10680 "push"
                                        [|(Ojs.float_to_js x10681)|])
                               | None -> ());
                              x10680))|])
    let (indexOf :
      t -> searchElement:T.t -> ?fromIndex:float -> unit -> float) =
      fun (x10690 : t) ->
        fun ~searchElement:(x10686 : T.t) ->
          fun ?fromIndex:(x10687 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x10691 = t_to_js x10690 in
                 Ojs.call (Ojs.get_prop_ascii x10691 "indexOf") "apply"
                   [|x10691;((let x10688 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x10688 "push"
                                   [|(T.t_to_js x10686)|]);
                              (match x10687 with
                               | Some x10689 ->
                                   ignore
                                     (Ojs.call x10688 "push"
                                        [|(Ojs.float_to_js x10689)|])
                               | None -> ());
                              x10688))|])
    let (lastIndexOf :
      t -> searchElement:T.t -> ?fromIndex:float -> unit -> float) =
      fun (x10696 : t) ->
        fun ~searchElement:(x10692 : T.t) ->
          fun ?fromIndex:(x10693 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x10697 = t_to_js x10696 in
                 Ojs.call (Ojs.get_prop_ascii x10697 "lastIndexOf") "apply"
                   [|x10697;((let x10694 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x10694 "push"
                                   [|(T.t_to_js x10692)|]);
                              (match x10693 with
                               | Some x10695 ->
                                   ignore
                                     (Ojs.call x10694 "push"
                                        [|(Ojs.float_to_js x10695)|])
                               | None -> ());
                              x10694))|])
    let (every :
      t ->
        predicate:(value:T.t -> index:float -> array:T.t list -> bool) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x10706 : t) ->
        fun
          ~predicate:(x10698 :
                       value:T.t -> index:float -> array:T.t list -> bool)
          ->
          fun ?thisArg:(x10699 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x10707 = t_to_js x10706 in
                 Ojs.call (Ojs.get_prop_ascii x10707 "every") "apply"
                   [|x10707;((let x10700 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x10700 "push"
                                   [|(Ojs.fun_to_js 3
                                        (fun (x10702 : Ojs.t) ->
                                           fun (x10703 : Ojs.t) ->
                                             fun (x10704 : Ojs.t) ->
                                               Ojs.bool_to_js
                                                 (x10698
                                                    ~value:(T.t_of_js x10702)
                                                    ~index:(Ojs.float_of_js
                                                              x10703)
                                                    ~array:(Ojs.list_of_js
                                                              T.t_of_js
                                                              x10704))))|]);
                              (match x10699 with
                               | Some x10701 ->
                                   ignore
                                     (Ojs.call x10700 "push"
                                        [|(any_to_js x10701)|])
                               | None -> ());
                              x10700))|])
    let (every :
      t ->
        predicate:(value:T.t -> index:float -> array:T.t list -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x10716 : t) ->
        fun
          ~predicate:(x10708 :
                       value:T.t -> index:float -> array:T.t list -> unknown)
          ->
          fun ?thisArg:(x10709 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x10717 = t_to_js x10716 in
                 Ojs.call (Ojs.get_prop_ascii x10717 "every") "apply"
                   [|x10717;((let x10710 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x10710 "push"
                                   [|(Ojs.fun_to_js 3
                                        (fun (x10712 : Ojs.t) ->
                                           fun (x10713 : Ojs.t) ->
                                             fun (x10714 : Ojs.t) ->
                                               unknown_to_js
                                                 (x10708
                                                    ~value:(T.t_of_js x10712)
                                                    ~index:(Ojs.float_of_js
                                                              x10713)
                                                    ~array:(Ojs.list_of_js
                                                              T.t_of_js
                                                              x10714))))|]);
                              (match x10709 with
                               | Some x10711 ->
                                   ignore
                                     (Ojs.call x10710 "push"
                                        [|(any_to_js x10711)|])
                               | None -> ());
                              x10710))|])
    let (some :
      t ->
        predicate:(value:T.t -> index:float -> array:T.t list -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x10726 : t) ->
        fun
          ~predicate:(x10718 :
                       value:T.t -> index:float -> array:T.t list -> unknown)
          ->
          fun ?thisArg:(x10719 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x10727 = t_to_js x10726 in
                 Ojs.call (Ojs.get_prop_ascii x10727 "some") "apply"
                   [|x10727;((let x10720 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x10720 "push"
                                   [|(Ojs.fun_to_js 3
                                        (fun (x10722 : Ojs.t) ->
                                           fun (x10723 : Ojs.t) ->
                                             fun (x10724 : Ojs.t) ->
                                               unknown_to_js
                                                 (x10718
                                                    ~value:(T.t_of_js x10722)
                                                    ~index:(Ojs.float_of_js
                                                              x10723)
                                                    ~array:(Ojs.list_of_js
                                                              T.t_of_js
                                                              x10724))))|]);
                              (match x10719 with
                               | Some x10721 ->
                                   ignore
                                     (Ojs.call x10720 "push"
                                        [|(any_to_js x10721)|])
                               | None -> ());
                              x10720))|])
    let (forEach :
      t ->
        callbackfn:(value:T.t -> index:float -> array:T.t list -> unit) ->
          ?thisArg:any -> unit -> unit)
      =
      fun (x10736 : t) ->
        fun
          ~callbackfn:(x10728 :
                        value:T.t -> index:float -> array:T.t list -> unit)
          ->
          fun ?thisArg:(x10729 : any option) ->
            fun () ->
              ignore
                (let x10737 = t_to_js x10736 in
                 Ojs.call (Ojs.get_prop_ascii x10737 "forEach") "apply"
                   [|x10737;((let x10730 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x10730 "push"
                                   [|(Ojs.fun_to_js 3
                                        (fun (x10732 : Ojs.t) ->
                                           fun (x10733 : Ojs.t) ->
                                             fun (x10734 : Ojs.t) ->
                                               x10728
                                                 ~value:(T.t_of_js x10732)
                                                 ~index:(Ojs.float_of_js
                                                           x10733)
                                                 ~array:(Ojs.list_of_js
                                                           T.t_of_js x10734)))|]);
                              (match x10729 with
                               | Some x10731 ->
                                   ignore
                                     (Ojs.call x10730 "push"
                                        [|(any_to_js x10731)|])
                               | None -> ());
                              x10730))|])
    let (map :
      t ->
        callbackfn:(value:T.t -> index:float -> array:T.t list -> 'U) ->
          ?thisArg:any -> unit -> 'U list)
      =
      fun (x10746 : t) ->
        fun
          ~callbackfn:(x10738 :
                        value:T.t -> index:float -> array:T.t list -> 'U)
          ->
          fun ?thisArg:(x10739 : any option) ->
            fun () ->
              Ojs.list_of_js Obj.magic
                (let x10747 = t_to_js x10746 in
                 Ojs.call (Ojs.get_prop_ascii x10747 "map") "apply"
                   [|x10747;((let x10740 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x10740 "push"
                                   [|(Ojs.fun_to_js 3
                                        (fun (x10742 : Ojs.t) ->
                                           fun (x10743 : Ojs.t) ->
                                             fun (x10744 : Ojs.t) ->
                                               Obj.magic
                                                 (x10738
                                                    ~value:(T.t_of_js x10742)
                                                    ~index:(Ojs.float_of_js
                                                              x10743)
                                                    ~array:(Ojs.list_of_js
                                                              T.t_of_js
                                                              x10744))))|]);
                              (match x10739 with
                               | Some x10741 ->
                                   ignore
                                     (Ojs.call x10740 "push"
                                        [|(any_to_js x10741)|])
                               | None -> ());
                              x10740))|])
    let (filter :
      t ->
        predicate:(value:T.t -> index:float -> array:T.t list -> bool) ->
          ?thisArg:any -> unit -> 'S list)
      =
      fun (x10757 : t) ->
        fun
          ~predicate:(x10749 :
                       value:T.t -> index:float -> array:T.t list -> bool)
          ->
          fun ?thisArg:(x10750 : any option) ->
            fun () ->
              Ojs.list_of_js Obj.magic
                (let x10758 = t_to_js x10757 in
                 Ojs.call (Ojs.get_prop_ascii x10758 "filter") "apply"
                   [|x10758;((let x10751 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x10751 "push"
                                   [|(Ojs.fun_to_js 3
                                        (fun (x10753 : Ojs.t) ->
                                           fun (x10754 : Ojs.t) ->
                                             fun (x10755 : Ojs.t) ->
                                               Ojs.bool_to_js
                                                 (x10749
                                                    ~value:(T.t_of_js x10753)
                                                    ~index:(Ojs.float_of_js
                                                              x10754)
                                                    ~array:(Ojs.list_of_js
                                                              T.t_of_js
                                                              x10755))))|]);
                              (match x10750 with
                               | Some x10752 ->
                                   ignore
                                     (Ojs.call x10751 "push"
                                        [|(any_to_js x10752)|])
                               | None -> ());
                              x10751))|])
    let (filter :
      t ->
        predicate:(value:T.t -> index:float -> array:T.t list -> unknown) ->
          ?thisArg:any -> unit -> T.t list)
      =
      fun (x10768 : t) ->
        fun
          ~predicate:(x10760 :
                       value:T.t -> index:float -> array:T.t list -> unknown)
          ->
          fun ?thisArg:(x10761 : any option) ->
            fun () ->
              Ojs.list_of_js T.t_of_js
                (let x10769 = t_to_js x10768 in
                 Ojs.call (Ojs.get_prop_ascii x10769 "filter") "apply"
                   [|x10769;((let x10762 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x10762 "push"
                                   [|(Ojs.fun_to_js 3
                                        (fun (x10764 : Ojs.t) ->
                                           fun (x10765 : Ojs.t) ->
                                             fun (x10766 : Ojs.t) ->
                                               unknown_to_js
                                                 (x10760
                                                    ~value:(T.t_of_js x10764)
                                                    ~index:(Ojs.float_of_js
                                                              x10765)
                                                    ~array:(Ojs.list_of_js
                                                              T.t_of_js
                                                              x10766))))|]);
                              (match x10761 with
                               | Some x10763 ->
                                   ignore
                                     (Ojs.call x10762 "push"
                                        [|(any_to_js x10763)|])
                               | None -> ());
                              x10762))|])
    let (reduce :
      t ->
        callbackfn:(previousValue:T.t ->
                      currentValue:T.t ->
                        currentIndex:float -> array:T.t list -> T.t)
          -> T.t)
      =
      fun (x10777 : t) ->
        fun
          ~callbackfn:(x10771 :
                        previousValue:T.t ->
                          currentValue:T.t ->
                            currentIndex:float -> array:T.t list -> T.t)
          ->
          T.t_of_js
            (Ojs.call (t_to_js x10777) "reduce"
               [|(Ojs.fun_to_js 4
                    (fun (x10772 : Ojs.t) ->
                       fun (x10773 : Ojs.t) ->
                         fun (x10774 : Ojs.t) ->
                           fun (x10775 : Ojs.t) ->
                             T.t_to_js
                               (x10771 ~previousValue:(T.t_of_js x10772)
                                  ~currentValue:(T.t_of_js x10773)
                                  ~currentIndex:(Ojs.float_of_js x10774)
                                  ~array:(Ojs.list_of_js T.t_of_js x10775))))|])
    let (reduce :
      t ->
        callbackfn:(previousValue:T.t ->
                      currentValue:T.t ->
                        currentIndex:float -> array:T.t list -> T.t)
          -> initialValue:T.t -> T.t)
      =
      fun (x10785 : t) ->
        fun
          ~callbackfn:(x10778 :
                        previousValue:T.t ->
                          currentValue:T.t ->
                            currentIndex:float -> array:T.t list -> T.t)
          ->
          fun ~initialValue:(x10784 : T.t) ->
            T.t_of_js
              (Ojs.call (t_to_js x10785) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x10779 : Ojs.t) ->
                         fun (x10780 : Ojs.t) ->
                           fun (x10781 : Ojs.t) ->
                             fun (x10782 : Ojs.t) ->
                               T.t_to_js
                                 (x10778 ~previousValue:(T.t_of_js x10779)
                                    ~currentValue:(T.t_of_js x10780)
                                    ~currentIndex:(Ojs.float_of_js x10781)
                                    ~array:(Ojs.list_of_js T.t_of_js x10782))));(
                   T.t_to_js x10784)|])
    let (reduce :
      t ->
        callbackfn:(previousValue:'U ->
                      currentValue:T.t ->
                        currentIndex:float -> array:T.t list -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x10793 : t) ->
        fun
          ~callbackfn:(x10786 :
                        previousValue:'U ->
                          currentValue:T.t ->
                            currentIndex:float -> array:T.t list -> 'U)
          ->
          fun ~initialValue:(x10792 : 'U) ->
            Obj.magic
              (Ojs.call (t_to_js x10793) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x10787 : Ojs.t) ->
                         fun (x10788 : Ojs.t) ->
                           fun (x10789 : Ojs.t) ->
                             fun (x10790 : Ojs.t) ->
                               Obj.magic
                                 (x10786 ~previousValue:(Obj.magic x10787)
                                    ~currentValue:(T.t_of_js x10788)
                                    ~currentIndex:(Ojs.float_of_js x10789)
                                    ~array:(Ojs.list_of_js T.t_of_js x10790))));(
                   Obj.magic x10792)|])
    let (reduceRight :
      t ->
        callbackfn:(previousValue:T.t ->
                      currentValue:T.t ->
                        currentIndex:float -> array:T.t list -> T.t)
          -> T.t)
      =
      fun (x10800 : t) ->
        fun
          ~callbackfn:(x10794 :
                        previousValue:T.t ->
                          currentValue:T.t ->
                            currentIndex:float -> array:T.t list -> T.t)
          ->
          T.t_of_js
            (Ojs.call (t_to_js x10800) "reduceRight"
               [|(Ojs.fun_to_js 4
                    (fun (x10795 : Ojs.t) ->
                       fun (x10796 : Ojs.t) ->
                         fun (x10797 : Ojs.t) ->
                           fun (x10798 : Ojs.t) ->
                             T.t_to_js
                               (x10794 ~previousValue:(T.t_of_js x10795)
                                  ~currentValue:(T.t_of_js x10796)
                                  ~currentIndex:(Ojs.float_of_js x10797)
                                  ~array:(Ojs.list_of_js T.t_of_js x10798))))|])
    let (reduceRight :
      t ->
        callbackfn:(previousValue:T.t ->
                      currentValue:T.t ->
                        currentIndex:float -> array:T.t list -> T.t)
          -> initialValue:T.t -> T.t)
      =
      fun (x10808 : t) ->
        fun
          ~callbackfn:(x10801 :
                        previousValue:T.t ->
                          currentValue:T.t ->
                            currentIndex:float -> array:T.t list -> T.t)
          ->
          fun ~initialValue:(x10807 : T.t) ->
            T.t_of_js
              (Ojs.call (t_to_js x10808) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x10802 : Ojs.t) ->
                         fun (x10803 : Ojs.t) ->
                           fun (x10804 : Ojs.t) ->
                             fun (x10805 : Ojs.t) ->
                               T.t_to_js
                                 (x10801 ~previousValue:(T.t_of_js x10802)
                                    ~currentValue:(T.t_of_js x10803)
                                    ~currentIndex:(Ojs.float_of_js x10804)
                                    ~array:(Ojs.list_of_js T.t_of_js x10805))));(
                   T.t_to_js x10807)|])
    let (reduceRight :
      t ->
        callbackfn:(previousValue:'U ->
                      currentValue:T.t ->
                        currentIndex:float -> array:T.t list -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x10816 : t) ->
        fun
          ~callbackfn:(x10809 :
                        previousValue:'U ->
                          currentValue:T.t ->
                            currentIndex:float -> array:T.t list -> 'U)
          ->
          fun ~initialValue:(x10815 : 'U) ->
            Obj.magic
              (Ojs.call (t_to_js x10816) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x10810 : Ojs.t) ->
                         fun (x10811 : Ojs.t) ->
                           fun (x10812 : Ojs.t) ->
                             fun (x10813 : Ojs.t) ->
                               Obj.magic
                                 (x10809 ~previousValue:(Obj.magic x10810)
                                    ~currentValue:(T.t_of_js x10811)
                                    ~currentIndex:(Ojs.float_of_js x10812)
                                    ~array:(Ojs.list_of_js T.t_of_js x10813))));(
                   Obj.magic x10815)|])
    let (get : t -> float -> T.t) =
      fun (x10817 : t) ->
        fun (x10818 : float) ->
          T.t_of_js (Ojs.get_prop (t_to_js x10817) (Ojs.float_to_js x10818))
  end
module ConcatArray_Make(T:Ojs.T) =
  struct
    type 'T parent = 'T ConcatArray.t
    let rec parent_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T parent =
      fun (type __T) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x10821 : Ojs.t) -> ConcatArray.t_of_js __T_of_js x10821
    and parent_to_js : 'T . ('T -> Ojs.t) -> 'T parent -> Ojs.t =
      fun (type __T) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x10819 : __T ConcatArray.t) ->
            ConcatArray.t_to_js __T_to_js x10819
    type t = T.t parent
    let rec t_of_js : Ojs.t -> t =
      fun (x10825 : Ojs.t) -> parent_of_js T.t_of_js x10825
    and t_to_js : t -> Ojs.t =
      fun (x10823 : T.t parent) -> parent_to_js T.t_to_js x10823
    let (get_length : t -> float) =
      fun (x10827 : t) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x10827) "length")
    let (get : t -> float -> T.t) =
      fun (x10828 : t) ->
        fun (x10829 : float) ->
          T.t_of_js (Ojs.get_prop (t_to_js x10828) (Ojs.float_to_js x10829))
    let (join : t -> ?separator:string -> unit -> string) =
      fun (x10833 : t) ->
        fun ?separator:(x10830 : string option) ->
          fun () ->
            Ojs.string_of_js
              (let x10834 = t_to_js x10833 in
               Ojs.call (Ojs.get_prop_ascii x10834 "join") "apply"
                 [|x10834;((let x10831 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x10830 with
                             | Some x10832 ->
                                 ignore
                                   (Ojs.call x10831 "push"
                                      [|(Ojs.string_to_js x10832)|])
                             | None -> ());
                            x10831))|])
    let (slice : t -> ?start:float -> ?end_:float -> unit -> T.t list) =
      fun (x10840 : t) ->
        fun ?start:(x10835 : float option) ->
          fun ?end_:(x10836 : float option) ->
            fun () ->
              Ojs.list_of_js T.t_of_js
                (let x10841 = t_to_js x10840 in
                 Ojs.call (Ojs.get_prop_ascii x10841 "slice") "apply"
                   [|x10841;((let x10837 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              (match x10835 with
                               | Some x10839 ->
                                   ignore
                                     (Ojs.call x10837 "push"
                                        [|(Ojs.float_to_js x10839)|])
                               | None -> ());
                              (match x10836 with
                               | Some x10838 ->
                                   ignore
                                     (Ojs.call x10837 "push"
                                        [|(Ojs.float_to_js x10838)|])
                               | None -> ());
                              x10837))|])
  end
module Array_Make(T:Ojs.T) =
  struct
    type 'T parent = 'T Array.t
    let rec parent_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T parent =
      fun (type __T) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x10845 : Ojs.t) -> Array.t_of_js __T_of_js x10845
    and parent_to_js : 'T . ('T -> Ojs.t) -> 'T parent -> Ojs.t =
      fun (type __T) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x10843 : __T Array.t) -> Array.t_to_js __T_to_js x10843
    type t = T.t parent
    let rec t_of_js : Ojs.t -> t =
      fun (x10849 : Ojs.t) -> parent_of_js T.t_of_js x10849
    and t_to_js : t -> Ojs.t =
      fun (x10847 : T.t parent) -> parent_to_js T.t_to_js x10847
    let (findLast :
      t ->
        predicate:(value:T.t -> index:float -> array:T.t list -> bool) ->
          ?thisArg:any -> unit -> 'S option)
      =
      fun (x10859 : t) ->
        fun
          ~predicate:(x10851 :
                       value:T.t -> index:float -> array:T.t list -> bool)
          ->
          fun ?thisArg:(x10852 : any option) ->
            fun () ->
              Ojs.option_of_js Obj.magic
                (let x10860 = t_to_js x10859 in
                 Ojs.call (Ojs.get_prop_ascii x10860 "findLast") "apply"
                   [|x10860;((let x10853 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x10853 "push"
                                   [|(Ojs.fun_to_js 3
                                        (fun (x10855 : Ojs.t) ->
                                           fun (x10856 : Ojs.t) ->
                                             fun (x10857 : Ojs.t) ->
                                               Ojs.bool_to_js
                                                 (x10851
                                                    ~value:(T.t_of_js x10855)
                                                    ~index:(Ojs.float_of_js
                                                              x10856)
                                                    ~array:(Ojs.list_of_js
                                                              T.t_of_js
                                                              x10857))))|]);
                              (match x10852 with
                               | Some x10854 ->
                                   ignore
                                     (Ojs.call x10853 "push"
                                        [|(any_to_js x10854)|])
                               | None -> ());
                              x10853))|])
    let (findLast :
      t ->
        predicate:(value:T.t -> index:float -> array:T.t list -> unknown) ->
          ?thisArg:any -> unit -> T.t option)
      =
      fun (x10870 : t) ->
        fun
          ~predicate:(x10862 :
                       value:T.t -> index:float -> array:T.t list -> unknown)
          ->
          fun ?thisArg:(x10863 : any option) ->
            fun () ->
              Ojs.option_of_js T.t_of_js
                (let x10871 = t_to_js x10870 in
                 Ojs.call (Ojs.get_prop_ascii x10871 "findLast") "apply"
                   [|x10871;((let x10864 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x10864 "push"
                                   [|(Ojs.fun_to_js 3
                                        (fun (x10866 : Ojs.t) ->
                                           fun (x10867 : Ojs.t) ->
                                             fun (x10868 : Ojs.t) ->
                                               unknown_to_js
                                                 (x10862
                                                    ~value:(T.t_of_js x10866)
                                                    ~index:(Ojs.float_of_js
                                                              x10867)
                                                    ~array:(Ojs.list_of_js
                                                              T.t_of_js
                                                              x10868))))|]);
                              (match x10863 with
                               | Some x10865 ->
                                   ignore
                                     (Ojs.call x10864 "push"
                                        [|(any_to_js x10865)|])
                               | None -> ());
                              x10864))|])
    let (findLastIndex :
      t ->
        predicate:(value:T.t -> index:float -> array:T.t list -> unknown) ->
          ?thisArg:any -> unit -> float)
      =
      fun (x10881 : t) ->
        fun
          ~predicate:(x10873 :
                       value:T.t -> index:float -> array:T.t list -> unknown)
          ->
          fun ?thisArg:(x10874 : any option) ->
            fun () ->
              Ojs.float_of_js
                (let x10882 = t_to_js x10881 in
                 Ojs.call (Ojs.get_prop_ascii x10882 "findLastIndex") "apply"
                   [|x10882;((let x10875 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x10875 "push"
                                   [|(Ojs.fun_to_js 3
                                        (fun (x10877 : Ojs.t) ->
                                           fun (x10878 : Ojs.t) ->
                                             fun (x10879 : Ojs.t) ->
                                               unknown_to_js
                                                 (x10873
                                                    ~value:(T.t_of_js x10877)
                                                    ~index:(Ojs.float_of_js
                                                              x10878)
                                                    ~array:(Ojs.list_of_js
                                                              T.t_of_js
                                                              x10879))))|]);
                              (match x10874 with
                               | Some x10876 ->
                                   ignore
                                     (Ojs.call x10875 "push"
                                        [|(any_to_js x10876)|])
                               | None -> ());
                              x10875))|])
    let (toReversed : t -> T.t list) =
      fun (x10883 : t) ->
        Ojs.list_of_js T.t_of_js
          (Ojs.call (t_to_js x10883) "toReversed" [||])
    let (toSorted :
      t -> ?compareFn:(a:T.t -> b:T.t -> float) -> unit -> T.t list) =
      fun (x10890 : t) ->
        fun ?compareFn:(x10885 : (a:T.t -> b:T.t -> float) option) ->
          fun () ->
            Ojs.list_of_js T.t_of_js
              (let x10891 = t_to_js x10890 in
               Ojs.call (Ojs.get_prop_ascii x10891 "toSorted") "apply"
                 [|x10891;((let x10886 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x10885 with
                             | Some x10887 ->
                                 ignore
                                   (Ojs.call x10886 "push"
                                      [|(Ojs.fun_to_js 2
                                           (fun (x10888 : Ojs.t) ->
                                              fun (x10889 : Ojs.t) ->
                                                Ojs.float_to_js
                                                  (x10887
                                                     ~a:(T.t_of_js x10888)
                                                     ~b:(T.t_of_js x10889))))|])
                             | None -> ());
                            x10886))|])
    let (toSpliced :
      t -> start:float -> deleteCount:float -> items:T.t list -> T.t list) =
      fun (x10898 : t) ->
        fun ~start:(x10893 : float) ->
          fun ~deleteCount:(x10894 : float) ->
            fun ~items:(x10895 : T.t list) ->
              Ojs.list_of_js T.t_of_js
                (let x10899 = t_to_js x10898 in
                 Ojs.call (Ojs.get_prop_ascii x10899 "toSpliced") "apply"
                   [|x10899;((let x10896 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x10896 "push"
                                   [|(Ojs.float_to_js x10893)|]);
                              ignore
                                (Ojs.call x10896 "push"
                                   [|(Ojs.float_to_js x10894)|]);
                              List.iter
                                (fun (x10897 : T.t) ->
                                   ignore
                                     (Ojs.call x10896 "push"
                                        [|(T.t_to_js x10897)|])) x10895;
                              x10896))|])
    let (toSpliced :
      t -> start:float -> ?deleteCount:float -> unit -> T.t list) =
      fun (x10905 : t) ->
        fun ~start:(x10901 : float) ->
          fun ?deleteCount:(x10902 : float option) ->
            fun () ->
              Ojs.list_of_js T.t_of_js
                (let x10906 = t_to_js x10905 in
                 Ojs.call (Ojs.get_prop_ascii x10906 "toSpliced") "apply"
                   [|x10906;((let x10903 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x10903 "push"
                                   [|(Ojs.float_to_js x10901)|]);
                              (match x10902 with
                               | Some x10904 ->
                                   ignore
                                     (Ojs.call x10903 "push"
                                        [|(Ojs.float_to_js x10904)|])
                               | None -> ());
                              x10903))|])
    let (with_ : t -> index:float -> value:T.t -> T.t list) =
      fun (x10910 : t) ->
        fun ~index:(x10908 : float) ->
          fun ~value:(x10909 : T.t) ->
            Ojs.list_of_js T.t_of_js
              (Ojs.call (t_to_js x10910) "with"
                 [|(Ojs.float_to_js x10908);(T.t_to_js x10909)|])
    let (at : t -> index:float -> T.t option) =
      fun (x10913 : t) ->
        fun ~index:(x10912 : float) ->
          Ojs.option_of_js T.t_of_js
            (Ojs.call (t_to_js x10913) "at" [|(Ojs.float_to_js x10912)|])
    let (flatMap :
      t ->
        callback:(this:'This ->
                    value:T.t ->
                      index:float ->
                        array:T.t list ->
                          [ `U1 of 'U  | `U2 of 'U ReadonlyArray.t ])
          -> ?thisArg:'This -> unit -> 'U list)
      =
      fun (x10927 : t) ->
        fun
          ~callback:(x10915 :
                      this:'This ->
                        value:T.t ->
                          index:float ->
                            array:T.t list ->
                              [ `U1 of 'U  | `U2 of 'U ReadonlyArray.t ])
          ->
          fun ?thisArg:(x10916 : 'This option) ->
            fun () ->
              Ojs.list_of_js Obj.magic
                (let x10928 = t_to_js x10927 in
                 Ojs.call (Ojs.get_prop_ascii x10928 "flatMap") "apply"
                   [|x10928;((let x10917 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x10917 "push"
                                   [|(Ojs.fun_to_js 4
                                        (fun (x10919 : Ojs.t) ->
                                           fun (x10920 : Ojs.t) ->
                                             fun (x10921 : Ojs.t) ->
                                               fun (x10922 : Ojs.t) ->
                                                 match x10915
                                                         ~this:(Obj.magic
                                                                  x10919)
                                                         ~value:(T.t_of_js
                                                                   x10920)
                                                         ~index:(Ojs.float_of_js
                                                                   x10921)
                                                         ~array:(Ojs.list_of_js
                                                                   T.t_of_js
                                                                   x10922)
                                                 with
                                                 | `U1 x10924 ->
                                                     Obj.magic x10924
                                                 | `U2 x10925 ->
                                                     ReadonlyArray.t_to_js
                                                       Obj.magic x10925))|]);
                              (match x10916 with
                               | Some x10918 ->
                                   ignore
                                     (Ojs.call x10917 "push"
                                        [|(Obj.magic x10918)|])
                               | None -> ());
                              x10917))|])
    let (flat :
      t -> this:'A -> ?depth:'D -> unit -> ('A, 'D) FlatArray.t list) =
      fun (x10934 : t) ->
        fun ~this:(x10930 : 'A) ->
          fun ?depth:(x10931 : 'D option) ->
            fun () ->
              Ojs.list_of_js
                (fun (x10936 : Ojs.t) ->
                   FlatArray.t_of_js Obj.magic Obj.magic x10936)
                (let x10935 = t_to_js x10934 in
                 Ojs.call (Ojs.get_prop_ascii x10935 "flat") "apply"
                   [|x10935;((let x10932 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x10932 "push"
                                   [|(Obj.magic x10930)|]);
                              (match x10931 with
                               | Some x10933 ->
                                   ignore
                                     (Ojs.call x10932 "push"
                                        [|(Obj.magic x10933)|])
                               | None -> ());
                              x10932))|])
    let (includes :
      t -> searchElement:T.t -> ?fromIndex:float -> unit -> bool) =
      fun (x10943 : t) ->
        fun ~searchElement:(x10939 : T.t) ->
          fun ?fromIndex:(x10940 : float option) ->
            fun () ->
              Ojs.bool_of_js
                (let x10944 = t_to_js x10943 in
                 Ojs.call (Ojs.get_prop_ascii x10944 "includes") "apply"
                   [|x10944;((let x10941 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x10941 "push"
                                   [|(T.t_to_js x10939)|]);
                              (match x10940 with
                               | Some x10942 ->
                                   ignore
                                     (Ojs.call x10941 "push"
                                        [|(Ojs.float_to_js x10942)|])
                               | None -> ());
                              x10941))|])
    let (entries : t -> (float * T.t) IterableIterator.t) =
      fun (x10945 : t) ->
        IterableIterator.t_of_js
          (fun (x10946 : Ojs.t) ->
             let x10947 = x10946 in
             ((Ojs.float_of_js (Ojs.array_get x10947 0)),
               (T.t_of_js (Ojs.array_get x10947 1))))
          (Ojs.call (t_to_js x10945) "entries" [||])
    let (keys : t -> float IterableIterator.t) =
      fun (x10948 : t) ->
        IterableIterator.t_of_js Ojs.float_of_js
          (Ojs.call (t_to_js x10948) "keys" [||])
    let (values : t -> T.t IterableIterator.t) =
      fun (x10950 : t) ->
        IterableIterator.t_of_js T.t_of_js
          (Ojs.call (t_to_js x10950) "values" [||])
    let (find :
      t ->
        predicate:(value:T.t -> index:float -> obj:T.t list -> bool) ->
          ?thisArg:any -> unit -> 'S option)
      =
      fun (x10960 : t) ->
        fun
          ~predicate:(x10952 :
                       value:T.t -> index:float -> obj:T.t list -> bool)
          ->
          fun ?thisArg:(x10953 : any option) ->
            fun () ->
              Ojs.option_of_js Obj.magic
                (let x10961 = t_to_js x10960 in
                 Ojs.call (Ojs.get_prop_ascii x10961 "find") "apply"
                   [|x10961;((let x10954 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x10954 "push"
                                   [|(Ojs.fun_to_js 3
                                        (fun (x10956 : Ojs.t) ->
                                           fun (x10957 : Ojs.t) ->
                                             fun (x10958 : Ojs.t) ->
                                               Ojs.bool_to_js
                                                 (x10952
                                                    ~value:(T.t_of_js x10956)
                                                    ~index:(Ojs.float_of_js
                                                              x10957)
                                                    ~obj:(Ojs.list_of_js
                                                            T.t_of_js x10958))))|]);
                              (match x10953 with
                               | Some x10955 ->
                                   ignore
                                     (Ojs.call x10954 "push"
                                        [|(any_to_js x10955)|])
                               | None -> ());
                              x10954))|])
    let (find :
      t ->
        predicate:(value:T.t -> index:float -> obj:T.t list -> unknown) ->
          ?thisArg:any -> unit -> T.t option)
      =
      fun (x10971 : t) ->
        fun
          ~predicate:(x10963 :
                       value:T.t -> index:float -> obj:T.t list -> unknown)
          ->
          fun ?thisArg:(x10964 : any option) ->
            fun () ->
              Ojs.option_of_js T.t_of_js
                (let x10972 = t_to_js x10971 in
                 Ojs.call (Ojs.get_prop_ascii x10972 "find") "apply"
                   [|x10972;((let x10965 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x10965 "push"
                                   [|(Ojs.fun_to_js 3
                                        (fun (x10967 : Ojs.t) ->
                                           fun (x10968 : Ojs.t) ->
                                             fun (x10969 : Ojs.t) ->
                                               unknown_to_js
                                                 (x10963
                                                    ~value:(T.t_of_js x10967)
                                                    ~index:(Ojs.float_of_js
                                                              x10968)
                                                    ~obj:(Ojs.list_of_js
                                                            T.t_of_js x10969))))|]);
                              (match x10964 with
                               | Some x10966 ->
                                   ignore
                                     (Ojs.call x10965 "push"
                                        [|(any_to_js x10966)|])
                               | None -> ());
                              x10965))|])
    let (findIndex :
      t ->
        predicate:(value:T.t -> index:float -> obj:T.t list -> unknown) ->
          ?thisArg:any -> unit -> float)
      =
      fun (x10982 : t) ->
        fun
          ~predicate:(x10974 :
                       value:T.t -> index:float -> obj:T.t list -> unknown)
          ->
          fun ?thisArg:(x10975 : any option) ->
            fun () ->
              Ojs.float_of_js
                (let x10983 = t_to_js x10982 in
                 Ojs.call (Ojs.get_prop_ascii x10983 "findIndex") "apply"
                   [|x10983;((let x10976 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x10976 "push"
                                   [|(Ojs.fun_to_js 3
                                        (fun (x10978 : Ojs.t) ->
                                           fun (x10979 : Ojs.t) ->
                                             fun (x10980 : Ojs.t) ->
                                               unknown_to_js
                                                 (x10974
                                                    ~value:(T.t_of_js x10978)
                                                    ~index:(Ojs.float_of_js
                                                              x10979)
                                                    ~obj:(Ojs.list_of_js
                                                            T.t_of_js x10980))))|]);
                              (match x10975 with
                               | Some x10977 ->
                                   ignore
                                     (Ojs.call x10976 "push"
                                        [|(any_to_js x10977)|])
                               | None -> ());
                              x10976))|])
    let (fill : t -> value:T.t -> ?start:float -> ?end_:float -> unit -> t) =
      fun (x10990 : t) ->
        fun ~value:(x10984 : T.t) ->
          fun ?start:(x10985 : float option) ->
            fun ?end_:(x10986 : float option) ->
              fun () ->
                t_of_js
                  (let x10991 = t_to_js x10990 in
                   Ojs.call (Ojs.get_prop_ascii x10991 "fill") "apply"
                     [|x10991;((let x10987 =
                                  Ojs.new_obj
                                    (Ojs.get_prop_ascii Ojs.global "Array")
                                    [||] in
                                ignore
                                  (Ojs.call x10987 "push"
                                     [|(T.t_to_js x10984)|]);
                                (match x10985 with
                                 | Some x10989 ->
                                     ignore
                                       (Ojs.call x10987 "push"
                                          [|(Ojs.float_to_js x10989)|])
                                 | None -> ());
                                (match x10986 with
                                 | Some x10988 ->
                                     ignore
                                       (Ojs.call x10987 "push"
                                          [|(Ojs.float_to_js x10988)|])
                                 | None -> ());
                                x10987))|])
    let (copyWithin :
      t -> target:float -> start:float -> ?end_:float -> unit -> t) =
      fun (x10997 : t) ->
        fun ~target:(x10992 : float) ->
          fun ~start:(x10993 : float) ->
            fun ?end_:(x10994 : float option) ->
              fun () ->
                t_of_js
                  (let x10998 = t_to_js x10997 in
                   Ojs.call (Ojs.get_prop_ascii x10998 "copyWithin") "apply"
                     [|x10998;((let x10995 =
                                  Ojs.new_obj
                                    (Ojs.get_prop_ascii Ojs.global "Array")
                                    [||] in
                                ignore
                                  (Ojs.call x10995 "push"
                                     [|(Ojs.float_to_js x10992)|]);
                                ignore
                                  (Ojs.call x10995 "push"
                                     [|(Ojs.float_to_js x10993)|]);
                                (match x10994 with
                                 | Some x10996 ->
                                     ignore
                                       (Ojs.call x10995 "push"
                                          [|(Ojs.float_to_js x10996)|])
                                 | None -> ());
                                x10995))|])
    let (get_length : t -> float) =
      fun (x10999 : t) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x10999) "length")
    let (set_length : t -> float -> unit) =
      fun (x11000 : t) ->
        fun (x11001 : float) ->
          Ojs.set_prop_ascii (t_to_js x11000) "length"
            (Ojs.float_to_js x11001)
    let (toString : t -> string) =
      fun (x11002 : t) ->
        Ojs.string_of_js (Ojs.call (t_to_js x11002) "toString" [||])
    let (toLocaleString : t -> string) =
      fun (x11003 : t) ->
        Ojs.string_of_js (Ojs.call (t_to_js x11003) "toLocaleString" [||])
    let (pop : t -> T.t option) =
      fun (x11004 : t) ->
        Ojs.option_of_js T.t_of_js (Ojs.call (t_to_js x11004) "pop" [||])
    let (push : t -> items:T.t list -> float) =
      fun (x11009 : t) ->
        fun ~items:(x11006 : T.t list) ->
          Ojs.float_of_js
            (let x11010 = t_to_js x11009 in
             Ojs.call (Ojs.get_prop_ascii x11010 "push") "apply"
               [|x11010;((let x11007 =
                            Ojs.new_obj
                              (Ojs.get_prop_ascii Ojs.global "Array") 
                              [||] in
                          List.iter
                            (fun (x11008 : T.t) ->
                               ignore
                                 (Ojs.call x11007 "push"
                                    [|(T.t_to_js x11008)|])) x11006;
                          x11007))|])
    let (concat : t -> items:T.t ConcatArray.t list -> T.t list) =
      fun (x11015 : t) ->
        fun ~items:(x11011 : T.t ConcatArray.t list) ->
          Ojs.list_of_js T.t_of_js
            (let x11016 = t_to_js x11015 in
             Ojs.call (Ojs.get_prop_ascii x11016 "concat") "apply"
               [|x11016;((let x11012 =
                            Ojs.new_obj
                              (Ojs.get_prop_ascii Ojs.global "Array") 
                              [||] in
                          List.iter
                            (fun (x11013 : T.t ConcatArray.t) ->
                               ignore
                                 (Ojs.call x11012 "push"
                                    [|(ConcatArray.t_to_js T.t_to_js x11013)|]))
                            x11011;
                          x11012))|])
    let (concat :
      t -> items:[ `U1 of T.t  | `U2 of T.t ConcatArray.t ] list -> T.t list)
      =
      fun (x11024 : t) ->
        fun ~items:(x11018 : [ `U1 of T.t  | `U2 of T.t ConcatArray.t ] list)
          ->
          Ojs.list_of_js T.t_of_js
            (let x11025 = t_to_js x11024 in
             Ojs.call (Ojs.get_prop_ascii x11025 "concat") "apply"
               [|x11025;((let x11019 =
                            Ojs.new_obj
                              (Ojs.get_prop_ascii Ojs.global "Array") 
                              [||] in
                          List.iter
                            (fun
                               (x11020 :
                                 [ `U1 of T.t  | `U2 of T.t ConcatArray.t ])
                               ->
                               ignore
                                 (Ojs.call x11019 "push"
                                    [|((match x11020 with
                                        | `U1 x11021 -> T.t_to_js x11021
                                        | `U2 x11022 ->
                                            ConcatArray.t_to_js T.t_to_js
                                              x11022))|])) x11018;
                          x11019))|])
    let (join : t -> ?separator:string -> unit -> string) =
      fun (x11030 : t) ->
        fun ?separator:(x11027 : string option) ->
          fun () ->
            Ojs.string_of_js
              (let x11031 = t_to_js x11030 in
               Ojs.call (Ojs.get_prop_ascii x11031 "join") "apply"
                 [|x11031;((let x11028 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x11027 with
                             | Some x11029 ->
                                 ignore
                                   (Ojs.call x11028 "push"
                                      [|(Ojs.string_to_js x11029)|])
                             | None -> ());
                            x11028))|])
    let (reverse : t -> T.t list) =
      fun (x11032 : t) ->
        Ojs.list_of_js T.t_of_js (Ojs.call (t_to_js x11032) "reverse" [||])
    let (shift : t -> T.t option) =
      fun (x11034 : t) ->
        Ojs.option_of_js T.t_of_js (Ojs.call (t_to_js x11034) "shift" [||])
    let (slice : t -> ?start:float -> ?end_:float -> unit -> T.t list) =
      fun (x11041 : t) ->
        fun ?start:(x11036 : float option) ->
          fun ?end_:(x11037 : float option) ->
            fun () ->
              Ojs.list_of_js T.t_of_js
                (let x11042 = t_to_js x11041 in
                 Ojs.call (Ojs.get_prop_ascii x11042 "slice") "apply"
                   [|x11042;((let x11038 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              (match x11036 with
                               | Some x11040 ->
                                   ignore
                                     (Ojs.call x11038 "push"
                                        [|(Ojs.float_to_js x11040)|])
                               | None -> ());
                              (match x11037 with
                               | Some x11039 ->
                                   ignore
                                     (Ojs.call x11038 "push"
                                        [|(Ojs.float_to_js x11039)|])
                               | None -> ());
                              x11038))|])
    let (sort : t -> ?compareFn:(a:T.t -> b:T.t -> float) -> unit -> t) =
      fun (x11049 : t) ->
        fun ?compareFn:(x11044 : (a:T.t -> b:T.t -> float) option) ->
          fun () ->
            t_of_js
              (let x11050 = t_to_js x11049 in
               Ojs.call (Ojs.get_prop_ascii x11050 "sort") "apply"
                 [|x11050;((let x11045 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x11044 with
                             | Some x11046 ->
                                 ignore
                                   (Ojs.call x11045 "push"
                                      [|(Ojs.fun_to_js 2
                                           (fun (x11047 : Ojs.t) ->
                                              fun (x11048 : Ojs.t) ->
                                                Ojs.float_to_js
                                                  (x11046
                                                     ~a:(T.t_of_js x11047)
                                                     ~b:(T.t_of_js x11048))))|])
                             | None -> ());
                            x11045))|])
    let (splice : t -> start:float -> ?deleteCount:float -> unit -> T.t list)
      =
      fun (x11055 : t) ->
        fun ~start:(x11051 : float) ->
          fun ?deleteCount:(x11052 : float option) ->
            fun () ->
              Ojs.list_of_js T.t_of_js
                (let x11056 = t_to_js x11055 in
                 Ojs.call (Ojs.get_prop_ascii x11056 "splice") "apply"
                   [|x11056;((let x11053 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x11053 "push"
                                   [|(Ojs.float_to_js x11051)|]);
                              (match x11052 with
                               | Some x11054 ->
                                   ignore
                                     (Ojs.call x11053 "push"
                                        [|(Ojs.float_to_js x11054)|])
                               | None -> ());
                              x11053))|])
    let (splice :
      t -> start:float -> deleteCount:float -> items:T.t list -> T.t list) =
      fun (x11063 : t) ->
        fun ~start:(x11058 : float) ->
          fun ~deleteCount:(x11059 : float) ->
            fun ~items:(x11060 : T.t list) ->
              Ojs.list_of_js T.t_of_js
                (let x11064 = t_to_js x11063 in
                 Ojs.call (Ojs.get_prop_ascii x11064 "splice") "apply"
                   [|x11064;((let x11061 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x11061 "push"
                                   [|(Ojs.float_to_js x11058)|]);
                              ignore
                                (Ojs.call x11061 "push"
                                   [|(Ojs.float_to_js x11059)|]);
                              List.iter
                                (fun (x11062 : T.t) ->
                                   ignore
                                     (Ojs.call x11061 "push"
                                        [|(T.t_to_js x11062)|])) x11060;
                              x11061))|])
    let (unshift : t -> items:T.t list -> float) =
      fun (x11069 : t) ->
        fun ~items:(x11066 : T.t list) ->
          Ojs.float_of_js
            (let x11070 = t_to_js x11069 in
             Ojs.call (Ojs.get_prop_ascii x11070 "unshift") "apply"
               [|x11070;((let x11067 =
                            Ojs.new_obj
                              (Ojs.get_prop_ascii Ojs.global "Array") 
                              [||] in
                          List.iter
                            (fun (x11068 : T.t) ->
                               ignore
                                 (Ojs.call x11067 "push"
                                    [|(T.t_to_js x11068)|])) x11066;
                          x11067))|])
    let (indexOf :
      t -> searchElement:T.t -> ?fromIndex:float -> unit -> float) =
      fun (x11075 : t) ->
        fun ~searchElement:(x11071 : T.t) ->
          fun ?fromIndex:(x11072 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x11076 = t_to_js x11075 in
                 Ojs.call (Ojs.get_prop_ascii x11076 "indexOf") "apply"
                   [|x11076;((let x11073 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x11073 "push"
                                   [|(T.t_to_js x11071)|]);
                              (match x11072 with
                               | Some x11074 ->
                                   ignore
                                     (Ojs.call x11073 "push"
                                        [|(Ojs.float_to_js x11074)|])
                               | None -> ());
                              x11073))|])
    let (lastIndexOf :
      t -> searchElement:T.t -> ?fromIndex:float -> unit -> float) =
      fun (x11081 : t) ->
        fun ~searchElement:(x11077 : T.t) ->
          fun ?fromIndex:(x11078 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x11082 = t_to_js x11081 in
                 Ojs.call (Ojs.get_prop_ascii x11082 "lastIndexOf") "apply"
                   [|x11082;((let x11079 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x11079 "push"
                                   [|(T.t_to_js x11077)|]);
                              (match x11078 with
                               | Some x11080 ->
                                   ignore
                                     (Ojs.call x11079 "push"
                                        [|(Ojs.float_to_js x11080)|])
                               | None -> ());
                              x11079))|])
    let (every :
      t ->
        predicate:(value:T.t -> index:float -> array:T.t list -> bool) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x11091 : t) ->
        fun
          ~predicate:(x11083 :
                       value:T.t -> index:float -> array:T.t list -> bool)
          ->
          fun ?thisArg:(x11084 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x11092 = t_to_js x11091 in
                 Ojs.call (Ojs.get_prop_ascii x11092 "every") "apply"
                   [|x11092;((let x11085 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x11085 "push"
                                   [|(Ojs.fun_to_js 3
                                        (fun (x11087 : Ojs.t) ->
                                           fun (x11088 : Ojs.t) ->
                                             fun (x11089 : Ojs.t) ->
                                               Ojs.bool_to_js
                                                 (x11083
                                                    ~value:(T.t_of_js x11087)
                                                    ~index:(Ojs.float_of_js
                                                              x11088)
                                                    ~array:(Ojs.list_of_js
                                                              T.t_of_js
                                                              x11089))))|]);
                              (match x11084 with
                               | Some x11086 ->
                                   ignore
                                     (Ojs.call x11085 "push"
                                        [|(any_to_js x11086)|])
                               | None -> ());
                              x11085))|])
    let (every :
      t ->
        predicate:(value:T.t -> index:float -> array:T.t list -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x11101 : t) ->
        fun
          ~predicate:(x11093 :
                       value:T.t -> index:float -> array:T.t list -> unknown)
          ->
          fun ?thisArg:(x11094 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x11102 = t_to_js x11101 in
                 Ojs.call (Ojs.get_prop_ascii x11102 "every") "apply"
                   [|x11102;((let x11095 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x11095 "push"
                                   [|(Ojs.fun_to_js 3
                                        (fun (x11097 : Ojs.t) ->
                                           fun (x11098 : Ojs.t) ->
                                             fun (x11099 : Ojs.t) ->
                                               unknown_to_js
                                                 (x11093
                                                    ~value:(T.t_of_js x11097)
                                                    ~index:(Ojs.float_of_js
                                                              x11098)
                                                    ~array:(Ojs.list_of_js
                                                              T.t_of_js
                                                              x11099))))|]);
                              (match x11094 with
                               | Some x11096 ->
                                   ignore
                                     (Ojs.call x11095 "push"
                                        [|(any_to_js x11096)|])
                               | None -> ());
                              x11095))|])
    let (some :
      t ->
        predicate:(value:T.t -> index:float -> array:T.t list -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x11111 : t) ->
        fun
          ~predicate:(x11103 :
                       value:T.t -> index:float -> array:T.t list -> unknown)
          ->
          fun ?thisArg:(x11104 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x11112 = t_to_js x11111 in
                 Ojs.call (Ojs.get_prop_ascii x11112 "some") "apply"
                   [|x11112;((let x11105 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x11105 "push"
                                   [|(Ojs.fun_to_js 3
                                        (fun (x11107 : Ojs.t) ->
                                           fun (x11108 : Ojs.t) ->
                                             fun (x11109 : Ojs.t) ->
                                               unknown_to_js
                                                 (x11103
                                                    ~value:(T.t_of_js x11107)
                                                    ~index:(Ojs.float_of_js
                                                              x11108)
                                                    ~array:(Ojs.list_of_js
                                                              T.t_of_js
                                                              x11109))))|]);
                              (match x11104 with
                               | Some x11106 ->
                                   ignore
                                     (Ojs.call x11105 "push"
                                        [|(any_to_js x11106)|])
                               | None -> ());
                              x11105))|])
    let (forEach :
      t ->
        callbackfn:(value:T.t -> index:float -> array:T.t list -> unit) ->
          ?thisArg:any -> unit -> unit)
      =
      fun (x11121 : t) ->
        fun
          ~callbackfn:(x11113 :
                        value:T.t -> index:float -> array:T.t list -> unit)
          ->
          fun ?thisArg:(x11114 : any option) ->
            fun () ->
              ignore
                (let x11122 = t_to_js x11121 in
                 Ojs.call (Ojs.get_prop_ascii x11122 "forEach") "apply"
                   [|x11122;((let x11115 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x11115 "push"
                                   [|(Ojs.fun_to_js 3
                                        (fun (x11117 : Ojs.t) ->
                                           fun (x11118 : Ojs.t) ->
                                             fun (x11119 : Ojs.t) ->
                                               x11113
                                                 ~value:(T.t_of_js x11117)
                                                 ~index:(Ojs.float_of_js
                                                           x11118)
                                                 ~array:(Ojs.list_of_js
                                                           T.t_of_js x11119)))|]);
                              (match x11114 with
                               | Some x11116 ->
                                   ignore
                                     (Ojs.call x11115 "push"
                                        [|(any_to_js x11116)|])
                               | None -> ());
                              x11115))|])
    let (map :
      t ->
        callbackfn:(value:T.t -> index:float -> array:T.t list -> 'U) ->
          ?thisArg:any -> unit -> 'U list)
      =
      fun (x11131 : t) ->
        fun
          ~callbackfn:(x11123 :
                        value:T.t -> index:float -> array:T.t list -> 'U)
          ->
          fun ?thisArg:(x11124 : any option) ->
            fun () ->
              Ojs.list_of_js Obj.magic
                (let x11132 = t_to_js x11131 in
                 Ojs.call (Ojs.get_prop_ascii x11132 "map") "apply"
                   [|x11132;((let x11125 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x11125 "push"
                                   [|(Ojs.fun_to_js 3
                                        (fun (x11127 : Ojs.t) ->
                                           fun (x11128 : Ojs.t) ->
                                             fun (x11129 : Ojs.t) ->
                                               Obj.magic
                                                 (x11123
                                                    ~value:(T.t_of_js x11127)
                                                    ~index:(Ojs.float_of_js
                                                              x11128)
                                                    ~array:(Ojs.list_of_js
                                                              T.t_of_js
                                                              x11129))))|]);
                              (match x11124 with
                               | Some x11126 ->
                                   ignore
                                     (Ojs.call x11125 "push"
                                        [|(any_to_js x11126)|])
                               | None -> ());
                              x11125))|])
    let (filter :
      t ->
        predicate:(value:T.t -> index:float -> array:T.t list -> bool) ->
          ?thisArg:any -> unit -> 'S list)
      =
      fun (x11142 : t) ->
        fun
          ~predicate:(x11134 :
                       value:T.t -> index:float -> array:T.t list -> bool)
          ->
          fun ?thisArg:(x11135 : any option) ->
            fun () ->
              Ojs.list_of_js Obj.magic
                (let x11143 = t_to_js x11142 in
                 Ojs.call (Ojs.get_prop_ascii x11143 "filter") "apply"
                   [|x11143;((let x11136 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x11136 "push"
                                   [|(Ojs.fun_to_js 3
                                        (fun (x11138 : Ojs.t) ->
                                           fun (x11139 : Ojs.t) ->
                                             fun (x11140 : Ojs.t) ->
                                               Ojs.bool_to_js
                                                 (x11134
                                                    ~value:(T.t_of_js x11138)
                                                    ~index:(Ojs.float_of_js
                                                              x11139)
                                                    ~array:(Ojs.list_of_js
                                                              T.t_of_js
                                                              x11140))))|]);
                              (match x11135 with
                               | Some x11137 ->
                                   ignore
                                     (Ojs.call x11136 "push"
                                        [|(any_to_js x11137)|])
                               | None -> ());
                              x11136))|])
    let (filter :
      t ->
        predicate:(value:T.t -> index:float -> array:T.t list -> unknown) ->
          ?thisArg:any -> unit -> T.t list)
      =
      fun (x11153 : t) ->
        fun
          ~predicate:(x11145 :
                       value:T.t -> index:float -> array:T.t list -> unknown)
          ->
          fun ?thisArg:(x11146 : any option) ->
            fun () ->
              Ojs.list_of_js T.t_of_js
                (let x11154 = t_to_js x11153 in
                 Ojs.call (Ojs.get_prop_ascii x11154 "filter") "apply"
                   [|x11154;((let x11147 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x11147 "push"
                                   [|(Ojs.fun_to_js 3
                                        (fun (x11149 : Ojs.t) ->
                                           fun (x11150 : Ojs.t) ->
                                             fun (x11151 : Ojs.t) ->
                                               unknown_to_js
                                                 (x11145
                                                    ~value:(T.t_of_js x11149)
                                                    ~index:(Ojs.float_of_js
                                                              x11150)
                                                    ~array:(Ojs.list_of_js
                                                              T.t_of_js
                                                              x11151))))|]);
                              (match x11146 with
                               | Some x11148 ->
                                   ignore
                                     (Ojs.call x11147 "push"
                                        [|(any_to_js x11148)|])
                               | None -> ());
                              x11147))|])
    let (reduce :
      t ->
        callbackfn:(previousValue:T.t ->
                      currentValue:T.t ->
                        currentIndex:float -> array:T.t list -> T.t)
          -> T.t)
      =
      fun (x11162 : t) ->
        fun
          ~callbackfn:(x11156 :
                        previousValue:T.t ->
                          currentValue:T.t ->
                            currentIndex:float -> array:T.t list -> T.t)
          ->
          T.t_of_js
            (Ojs.call (t_to_js x11162) "reduce"
               [|(Ojs.fun_to_js 4
                    (fun (x11157 : Ojs.t) ->
                       fun (x11158 : Ojs.t) ->
                         fun (x11159 : Ojs.t) ->
                           fun (x11160 : Ojs.t) ->
                             T.t_to_js
                               (x11156 ~previousValue:(T.t_of_js x11157)
                                  ~currentValue:(T.t_of_js x11158)
                                  ~currentIndex:(Ojs.float_of_js x11159)
                                  ~array:(Ojs.list_of_js T.t_of_js x11160))))|])
    let (reduce :
      t ->
        callbackfn:(previousValue:T.t ->
                      currentValue:T.t ->
                        currentIndex:float -> array:T.t list -> T.t)
          -> initialValue:T.t -> T.t)
      =
      fun (x11170 : t) ->
        fun
          ~callbackfn:(x11163 :
                        previousValue:T.t ->
                          currentValue:T.t ->
                            currentIndex:float -> array:T.t list -> T.t)
          ->
          fun ~initialValue:(x11169 : T.t) ->
            T.t_of_js
              (Ojs.call (t_to_js x11170) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x11164 : Ojs.t) ->
                         fun (x11165 : Ojs.t) ->
                           fun (x11166 : Ojs.t) ->
                             fun (x11167 : Ojs.t) ->
                               T.t_to_js
                                 (x11163 ~previousValue:(T.t_of_js x11164)
                                    ~currentValue:(T.t_of_js x11165)
                                    ~currentIndex:(Ojs.float_of_js x11166)
                                    ~array:(Ojs.list_of_js T.t_of_js x11167))));(
                   T.t_to_js x11169)|])
    let (reduce :
      t ->
        callbackfn:(previousValue:'U ->
                      currentValue:T.t ->
                        currentIndex:float -> array:T.t list -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x11178 : t) ->
        fun
          ~callbackfn:(x11171 :
                        previousValue:'U ->
                          currentValue:T.t ->
                            currentIndex:float -> array:T.t list -> 'U)
          ->
          fun ~initialValue:(x11177 : 'U) ->
            Obj.magic
              (Ojs.call (t_to_js x11178) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x11172 : Ojs.t) ->
                         fun (x11173 : Ojs.t) ->
                           fun (x11174 : Ojs.t) ->
                             fun (x11175 : Ojs.t) ->
                               Obj.magic
                                 (x11171 ~previousValue:(Obj.magic x11172)
                                    ~currentValue:(T.t_of_js x11173)
                                    ~currentIndex:(Ojs.float_of_js x11174)
                                    ~array:(Ojs.list_of_js T.t_of_js x11175))));(
                   Obj.magic x11177)|])
    let (reduceRight :
      t ->
        callbackfn:(previousValue:T.t ->
                      currentValue:T.t ->
                        currentIndex:float -> array:T.t list -> T.t)
          -> T.t)
      =
      fun (x11185 : t) ->
        fun
          ~callbackfn:(x11179 :
                        previousValue:T.t ->
                          currentValue:T.t ->
                            currentIndex:float -> array:T.t list -> T.t)
          ->
          T.t_of_js
            (Ojs.call (t_to_js x11185) "reduceRight"
               [|(Ojs.fun_to_js 4
                    (fun (x11180 : Ojs.t) ->
                       fun (x11181 : Ojs.t) ->
                         fun (x11182 : Ojs.t) ->
                           fun (x11183 : Ojs.t) ->
                             T.t_to_js
                               (x11179 ~previousValue:(T.t_of_js x11180)
                                  ~currentValue:(T.t_of_js x11181)
                                  ~currentIndex:(Ojs.float_of_js x11182)
                                  ~array:(Ojs.list_of_js T.t_of_js x11183))))|])
    let (reduceRight :
      t ->
        callbackfn:(previousValue:T.t ->
                      currentValue:T.t ->
                        currentIndex:float -> array:T.t list -> T.t)
          -> initialValue:T.t -> T.t)
      =
      fun (x11193 : t) ->
        fun
          ~callbackfn:(x11186 :
                        previousValue:T.t ->
                          currentValue:T.t ->
                            currentIndex:float -> array:T.t list -> T.t)
          ->
          fun ~initialValue:(x11192 : T.t) ->
            T.t_of_js
              (Ojs.call (t_to_js x11193) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x11187 : Ojs.t) ->
                         fun (x11188 : Ojs.t) ->
                           fun (x11189 : Ojs.t) ->
                             fun (x11190 : Ojs.t) ->
                               T.t_to_js
                                 (x11186 ~previousValue:(T.t_of_js x11187)
                                    ~currentValue:(T.t_of_js x11188)
                                    ~currentIndex:(Ojs.float_of_js x11189)
                                    ~array:(Ojs.list_of_js T.t_of_js x11190))));(
                   T.t_to_js x11192)|])
    let (reduceRight :
      t ->
        callbackfn:(previousValue:'U ->
                      currentValue:T.t ->
                        currentIndex:float -> array:T.t list -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x11201 : t) ->
        fun
          ~callbackfn:(x11194 :
                        previousValue:'U ->
                          currentValue:T.t ->
                            currentIndex:float -> array:T.t list -> 'U)
          ->
          fun ~initialValue:(x11200 : 'U) ->
            Obj.magic
              (Ojs.call (t_to_js x11201) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x11195 : Ojs.t) ->
                         fun (x11196 : Ojs.t) ->
                           fun (x11197 : Ojs.t) ->
                             fun (x11198 : Ojs.t) ->
                               Obj.magic
                                 (x11194 ~previousValue:(Obj.magic x11195)
                                    ~currentValue:(T.t_of_js x11196)
                                    ~currentIndex:(Ojs.float_of_js x11197)
                                    ~array:(Ojs.list_of_js T.t_of_js x11198))));(
                   Obj.magic x11200)|])
    let (get : t -> float -> T.t) =
      fun (x11202 : t) ->
        fun (x11203 : float) ->
          T.t_of_js (Ojs.get_prop (t_to_js x11202) (Ojs.float_to_js x11203))
    let (set : t -> float -> T.t -> unit) =
      fun (x11204 : t) ->
        fun (x11205 : float) ->
          fun (x11206 : T.t) ->
            Ojs.set_prop (t_to_js x11204) (Ojs.float_to_js x11205)
              (T.t_to_js x11206)
    let (from :
      [ `U1 of T.t Iterable.t  | `U2 of T.t ArrayLike.t ] -> T.t list) =
      fun (x11207 : [ `U1 of T.t Iterable.t  | `U2 of T.t ArrayLike.t ]) ->
        Ojs.list_of_js T.t_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Array") "from"
             [|((match x11207 with
                 | `U1 x11208 -> Iterable.t_to_js T.t_to_js x11208
                 | `U2 x11210 -> ArrayLike.t_to_js T.t_to_js x11210))|])
    let (from :
      iterable:[ `U1 of T.t Iterable.t  | `U2 of T.t ArrayLike.t ] ->
        mapfn:(v:T.t -> k:float -> 'U) -> ?thisArg:any -> unit -> 'U list)
      =
      fun
        ~iterable:(x11213 :
                    [ `U1 of T.t Iterable.t  | `U2 of T.t ArrayLike.t ])
        ->
        fun ~mapfn:(x11214 : v:T.t -> k:float -> 'U) ->
          fun ?thisArg:(x11215 : any option) ->
            fun () ->
              Ojs.list_of_js Obj.magic
                (let x11224 = Ojs.get_prop_ascii Ojs.global "Array" in
                 Ojs.call (Ojs.get_prop_ascii x11224 "from") "apply"
                   [|x11224;((let x11216 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x11216 "push"
                                   [|((match x11213 with
                                       | `U1 x11220 ->
                                           Iterable.t_to_js T.t_to_js x11220
                                       | `U2 x11222 ->
                                           ArrayLike.t_to_js T.t_to_js x11222))|]);
                              ignore
                                (Ojs.call x11216 "push"
                                   [|(Ojs.fun_to_js 2
                                        (fun (x11218 : Ojs.t) ->
                                           fun (x11219 : Ojs.t) ->
                                             Obj.magic
                                               (x11214 ~v:(T.t_of_js x11218)
                                                  ~k:(Ojs.float_of_js x11219))))|]);
                              (match x11215 with
                               | Some x11217 ->
                                   ignore
                                     (Ojs.call x11216 "push"
                                        [|(any_to_js x11217)|])
                               | None -> ());
                              x11216))|])
    let (from : T.t ArrayLike.t -> T.t list) =
      fun (x11226 : T.t ArrayLike.t) ->
        Ojs.list_of_js T.t_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Array") "from"
             [|(ArrayLike.t_to_js T.t_to_js x11226)|])
    let (from :
      arrayLike:T.t ArrayLike.t ->
        mapfn:(v:T.t -> k:float -> 'U) -> ?thisArg:any -> unit -> 'U list)
      =
      fun ~arrayLike:(x11229 : T.t ArrayLike.t) ->
        fun ~mapfn:(x11230 : v:T.t -> k:float -> 'U) ->
          fun ?thisArg:(x11231 : any option) ->
            fun () ->
              Ojs.list_of_js Obj.magic
                (let x11237 = Ojs.get_prop_ascii Ojs.global "Array" in
                 Ojs.call (Ojs.get_prop_ascii x11237 "from") "apply"
                   [|x11237;((let x11232 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x11232 "push"
                                   [|(ArrayLike.t_to_js T.t_to_js x11229)|]);
                              ignore
                                (Ojs.call x11232 "push"
                                   [|(Ojs.fun_to_js 2
                                        (fun (x11234 : Ojs.t) ->
                                           fun (x11235 : Ojs.t) ->
                                             Obj.magic
                                               (x11230 ~v:(T.t_of_js x11234)
                                                  ~k:(Ojs.float_of_js x11235))))|]);
                              (match x11231 with
                               | Some x11233 ->
                                   ignore
                                     (Ojs.call x11232 "push"
                                        [|(any_to_js x11233)|])
                               | None -> ());
                              x11232))|])
    let (of_ : T.t list -> T.t list) =
      fun (x11239 : T.t list) ->
        Ojs.list_of_js T.t_of_js
          (let x11242 = Ojs.get_prop_ascii Ojs.global "Array" in
           Ojs.call (Ojs.get_prop_ascii x11242 "of") "apply"
             [|x11242;((let x11240 =
                          Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                            [||] in
                        List.iter
                          (fun (x11241 : T.t) ->
                             ignore
                               (Ojs.call x11240 "push" [|(T.t_to_js x11241)|]))
                          x11239;
                        x11240))|])
    let (create : ?arrayLength:float -> unit -> any list) =
      fun ?arrayLength:(x11244 : float option) ->
        fun () ->
          Ojs.list_of_js any_of_js
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "Array")
               (let x11245 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x11244 with
                 | Some x11246 ->
                     ignore
                       (Ojs.call x11245 "push" [|(Ojs.float_to_js x11246)|])
                 | None -> ());
                x11245))
    let (create : float -> T.t list) =
      fun (x11248 : float) ->
        Ojs.list_of_js T.t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
             [|(Ojs.float_to_js x11248)|])
    let (create : T.t list -> T.t list) =
      fun (x11250 : T.t list) ->
        Ojs.list_of_js T.t_of_js
          (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "Array")
             (let x11251 =
                Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
              List.iter
                (fun (x11252 : T.t) ->
                   ignore (Ojs.call x11251 "push" [|(T.t_to_js x11252)|]))
                x11250;
              x11251))
    let (invoke : ?arrayLength:float -> unit -> any list) =
      fun ?arrayLength:(x11254 : float option) ->
        fun () ->
          Ojs.list_of_js any_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "Array") "apply"
               [|Ojs.null;((let x11255 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x11254 with
                             | Some x11256 ->
                                 ignore
                                   (Ojs.call x11255 "push"
                                      [|(Ojs.float_to_js x11256)|])
                             | None -> ());
                            x11255))|])
    let (invoke : float -> T.t list) =
      fun (x11258 : float) ->
        Ojs.list_of_js T.t_of_js
          (Ojs.apply (Ojs.get_prop_ascii Ojs.global "Array")
             [|(Ojs.float_to_js x11258)|])
    let (invoke : T.t list -> T.t list) =
      fun (x11260 : T.t list) ->
        Ojs.list_of_js T.t_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Array") "apply"
             [|Ojs.null;((let x11261 =
                            Ojs.new_obj
                              (Ojs.get_prop_ascii Ojs.global "Array") 
                              [||] in
                          List.iter
                            (fun (x11262 : T.t) ->
                               ignore
                                 (Ojs.call x11261 "push"
                                    [|(T.t_to_js x11262)|])) x11260;
                          x11261))|])
    let (isArray : any -> bool) =
      fun (x11264 : any) ->
        Ojs.bool_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Array") "isArray"
             [|(any_to_js x11264)|])
    let (prototype : unit -> any list) =
      fun () ->
        Ojs.list_of_js any_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Array")
             "prototype")
  end
module TypedPropertyDescriptor_Make(T:Ojs.T) =
  struct
    type 'T parent = 'T TypedPropertyDescriptor.t
    let rec parent_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T parent =
      fun (type __T) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x11268 : Ojs.t) ->
            TypedPropertyDescriptor.t_of_js __T_of_js x11268
    and parent_to_js : 'T . ('T -> Ojs.t) -> 'T parent -> Ojs.t =
      fun (type __T) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x11266 : __T TypedPropertyDescriptor.t) ->
            TypedPropertyDescriptor.t_to_js __T_to_js x11266
    type t = T.t parent
    let rec t_of_js : Ojs.t -> t =
      fun (x11272 : Ojs.t) -> parent_of_js T.t_of_js x11272
    and t_to_js : t -> Ojs.t =
      fun (x11270 : T.t parent) -> parent_to_js T.t_to_js x11270
    let (get_enumerable : t -> bool option) =
      fun (x11274 : t) ->
        Ojs.option_of_js Ojs.bool_of_js
          (Ojs.get_prop_ascii (t_to_js x11274) "enumerable")
    let (set_enumerable : t -> bool -> unit) =
      fun (x11276 : t) ->
        fun (x11277 : bool) ->
          Ojs.set_prop_ascii (t_to_js x11276) "enumerable"
            (Ojs.bool_to_js x11277)
    let (get_configurable : t -> bool option) =
      fun (x11278 : t) ->
        Ojs.option_of_js Ojs.bool_of_js
          (Ojs.get_prop_ascii (t_to_js x11278) "configurable")
    let (set_configurable : t -> bool -> unit) =
      fun (x11280 : t) ->
        fun (x11281 : bool) ->
          Ojs.set_prop_ascii (t_to_js x11280) "configurable"
            (Ojs.bool_to_js x11281)
    let (get_writable : t -> bool option) =
      fun (x11282 : t) ->
        Ojs.option_of_js Ojs.bool_of_js
          (Ojs.get_prop_ascii (t_to_js x11282) "writable")
    let (set_writable : t -> bool -> unit) =
      fun (x11284 : t) ->
        fun (x11285 : bool) ->
          Ojs.set_prop_ascii (t_to_js x11284) "writable"
            (Ojs.bool_to_js x11285)
    let (get_value : t -> T.t option) =
      fun (x11286 : t) ->
        Ojs.option_of_js T.t_of_js
          (Ojs.get_prop_ascii (t_to_js x11286) "value")
    let (set_value : t -> T.t -> unit) =
      fun (x11288 : t) ->
        fun (x11289 : T.t) ->
          Ojs.set_prop_ascii (t_to_js x11288) "value" (T.t_to_js x11289)
    let (get_get : t -> (unit -> T.t) option) =
      fun (x11290 : t) ->
        Ojs.option_of_js
          (fun (x11291 : Ojs.t) ->
             fun () -> T.t_of_js (Ojs.apply x11291 [||]))
          (Ojs.get_prop_ascii (t_to_js x11290) "get")
    let (set_get : t -> (unit -> T.t) -> unit) =
      fun (x11292 : t) ->
        fun (x11293 : unit -> T.t) ->
          Ojs.set_prop_ascii (t_to_js x11292) "get"
            (Ojs.fun_to_js 1 (fun _ -> T.t_to_js (x11293 ())))
    let (get_set : t -> (T.t -> unit) option) =
      fun (x11294 : t) ->
        Ojs.option_of_js
          (fun (x11295 : Ojs.t) ->
             fun (x11296 : T.t) ->
               ignore (Ojs.apply x11295 [|(T.t_to_js x11296)|]))
          (Ojs.get_prop_ascii (t_to_js x11294) "set")
    let (set_set : t -> (T.t -> unit) -> unit) =
      fun (x11297 : t) ->
        fun (x11298 : T.t -> unit) ->
          Ojs.set_prop_ascii (t_to_js x11297) "set"
            (Ojs.fun_to_js 1
               (fun (x11299 : Ojs.t) -> x11298 (T.t_of_js x11299)))
  end
module PromiseLike_Make(T:Ojs.T) =
  struct
    type 'T parent = 'T PromiseLike.t
    let rec parent_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T parent =
      fun (type __T) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x11302 : Ojs.t) -> PromiseLike.t_of_js __T_of_js x11302
    and parent_to_js : 'T . ('T -> Ojs.t) -> 'T parent -> Ojs.t =
      fun (type __T) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x11300 : __T PromiseLike.t) ->
            PromiseLike.t_to_js __T_to_js x11300
    type t = T.t parent
    let rec t_of_js : Ojs.t -> t =
      fun (x11306 : Ojs.t) -> parent_of_js T.t_of_js x11306
    and t_to_js : t -> Ojs.t =
      fun (x11304 : T.t parent) -> parent_to_js T.t_to_js x11304
    let (then_ :
      t ->
        ?onfulfilled:[ `Null  | `Undefined of undefined 
                     | `U1 of
                         T.t ->
                           [ `U1 of 'TResult1  | `U2 of 'TResult1 parent ]
                         ]
          ->
          ?onrejected:[ `Null  | `Undefined of undefined 
                      | `U1 of
                          any ->
                            [ `U1 of 'TResult2  | `U2 of 'TResult2 parent ]
                          ]
            -> unit -> ('TResult1, 'TResult2) union2 parent)
      =
      fun (x11325 : t) ->
        fun
          ?onfulfilled:(x11308 :
                         [ `Null  | `Undefined of undefined 
                         | `U1 of
                             T.t ->
                               [ `U1 of 'TResult1 
                               | `U2 of 'TResult1 parent ]
                             ]
                           option)
          ->
          fun
            ?onrejected:(x11309 :
                          [ `Null  | `Undefined of undefined 
                          | `U1 of
                              any ->
                                [ `U1 of 'TResult2 
                                | `U2 of 'TResult2 parent ]
                              ]
                            option)
            ->
            fun () ->
              parent_of_js
                (fun (x11327 : Ojs.t) ->
                   union2_of_js Obj.magic Obj.magic x11327)
                (let x11326 = t_to_js x11325 in
                 Ojs.call (Ojs.get_prop_ascii x11326 "then") "apply"
                   [|x11326;((let x11310 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              (match x11308 with
                               | Some x11318 ->
                                   ignore
                                     (Ojs.call x11310 "push"
                                        [|((match x11318 with
                                            | `Null -> Ojs.null
                                            | `Undefined x11319 ->
                                                undefined_to_js x11319
                                            | `U1 x11320 ->
                                                Ojs.fun_to_js 1
                                                  (fun (x11321 : Ojs.t) ->
                                                     match x11320
                                                             (T.t_of_js
                                                                x11321)
                                                     with
                                                     | `U1 x11322 ->
                                                         Obj.magic x11322
                                                     | `U2 x11323 ->
                                                         parent_to_js
                                                           Obj.magic x11323)))|])
                               | None -> ());
                              (match x11309 with
                               | Some x11311 ->
                                   ignore
                                     (Ojs.call x11310 "push"
                                        [|((match x11311 with
                                            | `Null -> Ojs.null
                                            | `Undefined x11312 ->
                                                undefined_to_js x11312
                                            | `U1 x11313 ->
                                                Ojs.fun_to_js 1
                                                  (fun (x11314 : Ojs.t) ->
                                                     match x11313
                                                             (any_of_js
                                                                x11314)
                                                     with
                                                     | `U1 x11315 ->
                                                         Obj.magic x11315
                                                     | `U2 x11316 ->
                                                         parent_to_js
                                                           Obj.magic x11316)))|])
                               | None -> ());
                              x11310))|])
  end
module ArrayLike_Make(T:Ojs.T) =
  struct
    type 'T parent = 'T ArrayLike.t
    let rec parent_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T parent =
      fun (type __T) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x11332 : Ojs.t) -> ArrayLike.t_of_js __T_of_js x11332
    and parent_to_js : 'T . ('T -> Ojs.t) -> 'T parent -> Ojs.t =
      fun (type __T) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x11330 : __T ArrayLike.t) ->
            ArrayLike.t_to_js __T_to_js x11330
    type t = T.t parent
    let rec t_of_js : Ojs.t -> t =
      fun (x11336 : Ojs.t) -> parent_of_js T.t_of_js x11336
    and t_to_js : t -> Ojs.t =
      fun (x11334 : T.t parent) -> parent_to_js T.t_to_js x11334
    let (get_length : t -> float) =
      fun (x11338 : t) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x11338) "length")
    let (get : t -> float -> T.t) =
      fun (x11339 : t) ->
        fun (x11340 : float) ->
          T.t_of_js (Ojs.get_prop (t_to_js x11339) (Ojs.float_to_js x11340))
  end
module Map_Make(K:Ojs.T)(V:Ojs.T) =
  struct
    type ('K, 'V) parent = ('K, 'V) Map.t
    let rec parent_of_js :
      'K 'V . (Ojs.t -> 'K) -> (Ojs.t -> 'V) -> Ojs.t -> ('K, 'V) parent =
      fun (type __K) ->
        fun (type __V) ->
          fun (__K_of_js : Ojs.t -> __K) ->
            fun (__V_of_js : Ojs.t -> __V) ->
              fun (x11344 : Ojs.t) -> Map.t_of_js __K_of_js __V_of_js x11344
    and parent_to_js :
      'K 'V . ('K -> Ojs.t) -> ('V -> Ojs.t) -> ('K, 'V) parent -> Ojs.t =
      fun (type __K) ->
        fun (type __V) ->
          fun (__K_to_js : __K -> Ojs.t) ->
            fun (__V_to_js : __V -> Ojs.t) ->
              fun (x11341 : (__K, __V) Map.t) ->
                Map.t_to_js __K_to_js __V_to_js x11341
    type t = (K.t, V.t) parent
    let rec t_of_js : Ojs.t -> t =
      fun (x11350 : Ojs.t) -> parent_of_js K.t_of_js V.t_of_js x11350
    and t_to_js : t -> Ojs.t =
      fun (x11347 : (K.t, V.t) parent) ->
        parent_to_js K.t_to_js V.t_to_js x11347
    let (entries : t -> (K.t * V.t) IterableIterator.t) =
      fun (x11353 : t) ->
        IterableIterator.t_of_js
          (fun (x11354 : Ojs.t) ->
             let x11355 = x11354 in
             ((K.t_of_js (Ojs.array_get x11355 0)),
               (V.t_of_js (Ojs.array_get x11355 1))))
          (Ojs.call (t_to_js x11353) "entries" [||])
    let (keys : t -> K.t IterableIterator.t) =
      fun (x11356 : t) ->
        IterableIterator.t_of_js K.t_of_js
          (Ojs.call (t_to_js x11356) "keys" [||])
    let (values : t -> V.t IterableIterator.t) =
      fun (x11358 : t) ->
        IterableIterator.t_of_js V.t_of_js
          (Ojs.call (t_to_js x11358) "values" [||])
    let (clear : t -> unit) =
      fun (x11360 : t) -> ignore (Ojs.call (t_to_js x11360) "clear" [||])
    let (delete : t -> key:K.t -> bool) =
      fun (x11362 : t) ->
        fun ~key:(x11361 : K.t) ->
          Ojs.bool_of_js
            (Ojs.call (t_to_js x11362) "delete" [|(K.t_to_js x11361)|])
    let (forEach :
      t ->
        callbackfn:(value:V.t -> key:K.t -> map:t -> unit) ->
          ?thisArg:any -> unit -> unit)
      =
      fun (x11370 : t) ->
        fun ~callbackfn:(x11363 : value:V.t -> key:K.t -> map:t -> unit) ->
          fun ?thisArg:(x11364 : any option) ->
            fun () ->
              ignore
                (let x11371 = t_to_js x11370 in
                 Ojs.call (Ojs.get_prop_ascii x11371 "forEach") "apply"
                   [|x11371;((let x11365 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x11365 "push"
                                   [|(Ojs.fun_to_js 3
                                        (fun (x11367 : Ojs.t) ->
                                           fun (x11368 : Ojs.t) ->
                                             fun (x11369 : Ojs.t) ->
                                               x11363
                                                 ~value:(V.t_of_js x11367)
                                                 ~key:(K.t_of_js x11368)
                                                 ~map:(t_of_js x11369)))|]);
                              (match x11364 with
                               | Some x11366 ->
                                   ignore
                                     (Ojs.call x11365 "push"
                                        [|(any_to_js x11366)|])
                               | None -> ());
                              x11365))|])
    let (get_ : t -> key:K.t -> V.t option) =
      fun (x11373 : t) ->
        fun ~key:(x11372 : K.t) ->
          Ojs.option_of_js V.t_of_js
            (Ojs.call (t_to_js x11373) "get" [|(K.t_to_js x11372)|])
    let (has : t -> key:K.t -> bool) =
      fun (x11376 : t) ->
        fun ~key:(x11375 : K.t) ->
          Ojs.bool_of_js
            (Ojs.call (t_to_js x11376) "has" [|(K.t_to_js x11375)|])
    let (set_ : t -> key:K.t -> value:V.t -> t) =
      fun (x11379 : t) ->
        fun ~key:(x11377 : K.t) ->
          fun ~value:(x11378 : V.t) ->
            t_of_js
              (Ojs.call (t_to_js x11379) "set"
                 [|(K.t_to_js x11377);(V.t_to_js x11378)|])
    let (get_size : t -> float) =
      fun (x11380 : t) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x11380) "size")
    let (create : unit -> (any, any) parent) =
      fun () ->
        parent_of_js any_of_js any_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Map") [||])
    let (create : ?iterable:(K.t * V.t) Iterable.t option -> unit -> t) =
      fun ?iterable:(x11383 : (K.t * V.t) Iterable.t option option) ->
        fun () ->
          t_of_js
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "Map")
               (let x11384 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x11383 with
                 | Some x11385 ->
                     ignore
                       (Ojs.call x11384 "push"
                          [|(Ojs.option_to_js
                               (fun (x11386 : (K.t * V.t) Iterable.t) ->
                                  Iterable.t_to_js
                                    (fun (x11387 : (K.t * V.t)) ->
                                       let (x11388, x11389) = x11387 in
                                       let x11390 = Ojs.array_make 2 in
                                       Ojs.array_set x11390 0
                                         (K.t_to_js x11388);
                                       Ojs.array_set x11390 1
                                         (V.t_to_js x11389);
                                       x11390) x11386) x11385)|])
                 | None -> ());
                x11384))
    let (create : unit -> (any, any) parent) =
      fun () ->
        parent_of_js any_of_js any_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Map") [||])
    let (create : ?entries:(K.t * V.t) list option -> unit -> t) =
      fun ?entries:(x11393 : (K.t * V.t) list option option) ->
        fun () ->
          t_of_js
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "Map")
               (let x11394 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x11393 with
                 | Some x11395 ->
                     ignore
                       (Ojs.call x11394 "push"
                          [|(Ojs.option_to_js
                               (fun (x11396 : (K.t * V.t) list) ->
                                  Ojs.list_to_js
                                    (fun (x11397 : (K.t * V.t)) ->
                                       let (x11398, x11399) = x11397 in
                                       let x11400 = Ojs.array_make 2 in
                                       Ojs.array_set x11400 0
                                         (K.t_to_js x11398);
                                       Ojs.array_set x11400 1
                                         (V.t_to_js x11399);
                                       x11400) x11396) x11395)|])
                 | None -> ());
                x11394))
    let (prototype : unit -> (any, any) parent) =
      fun () ->
        parent_of_js any_of_js any_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Map")
             "prototype")
  end
module ReadonlyMap_Make(K:Ojs.T)(V:Ojs.T) =
  struct
    type ('K, 'V) parent = ('K, 'V) ReadonlyMap.t
    let rec parent_of_js :
      'K 'V . (Ojs.t -> 'K) -> (Ojs.t -> 'V) -> Ojs.t -> ('K, 'V) parent =
      fun (type __K) ->
        fun (type __V) ->
          fun (__K_of_js : Ojs.t -> __K) ->
            fun (__V_of_js : Ojs.t -> __V) ->
              fun (x11406 : Ojs.t) ->
                ReadonlyMap.t_of_js __K_of_js __V_of_js x11406
    and parent_to_js :
      'K 'V . ('K -> Ojs.t) -> ('V -> Ojs.t) -> ('K, 'V) parent -> Ojs.t =
      fun (type __K) ->
        fun (type __V) ->
          fun (__K_to_js : __K -> Ojs.t) ->
            fun (__V_to_js : __V -> Ojs.t) ->
              fun (x11403 : (__K, __V) ReadonlyMap.t) ->
                ReadonlyMap.t_to_js __K_to_js __V_to_js x11403
    type t = (K.t, V.t) parent
    let rec t_of_js : Ojs.t -> t =
      fun (x11412 : Ojs.t) -> parent_of_js K.t_of_js V.t_of_js x11412
    and t_to_js : t -> Ojs.t =
      fun (x11409 : (K.t, V.t) parent) ->
        parent_to_js K.t_to_js V.t_to_js x11409
    let (entries : t -> (K.t * V.t) IterableIterator.t) =
      fun (x11415 : t) ->
        IterableIterator.t_of_js
          (fun (x11416 : Ojs.t) ->
             let x11417 = x11416 in
             ((K.t_of_js (Ojs.array_get x11417 0)),
               (V.t_of_js (Ojs.array_get x11417 1))))
          (Ojs.call (t_to_js x11415) "entries" [||])
    let (keys : t -> K.t IterableIterator.t) =
      fun (x11418 : t) ->
        IterableIterator.t_of_js K.t_of_js
          (Ojs.call (t_to_js x11418) "keys" [||])
    let (values : t -> V.t IterableIterator.t) =
      fun (x11420 : t) ->
        IterableIterator.t_of_js V.t_of_js
          (Ojs.call (t_to_js x11420) "values" [||])
    let (forEach :
      t ->
        callbackfn:(value:V.t -> key:K.t -> map:t -> unit) ->
          ?thisArg:any -> unit -> unit)
      =
      fun (x11429 : t) ->
        fun ~callbackfn:(x11422 : value:V.t -> key:K.t -> map:t -> unit) ->
          fun ?thisArg:(x11423 : any option) ->
            fun () ->
              ignore
                (let x11430 = t_to_js x11429 in
                 Ojs.call (Ojs.get_prop_ascii x11430 "forEach") "apply"
                   [|x11430;((let x11424 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x11424 "push"
                                   [|(Ojs.fun_to_js 3
                                        (fun (x11426 : Ojs.t) ->
                                           fun (x11427 : Ojs.t) ->
                                             fun (x11428 : Ojs.t) ->
                                               x11422
                                                 ~value:(V.t_of_js x11426)
                                                 ~key:(K.t_of_js x11427)
                                                 ~map:(t_of_js x11428)))|]);
                              (match x11423 with
                               | Some x11425 ->
                                   ignore
                                     (Ojs.call x11424 "push"
                                        [|(any_to_js x11425)|])
                               | None -> ());
                              x11424))|])
    let (get_ : t -> key:K.t -> V.t option) =
      fun (x11432 : t) ->
        fun ~key:(x11431 : K.t) ->
          Ojs.option_of_js V.t_of_js
            (Ojs.call (t_to_js x11432) "get" [|(K.t_to_js x11431)|])
    let (has : t -> key:K.t -> bool) =
      fun (x11435 : t) ->
        fun ~key:(x11434 : K.t) ->
          Ojs.bool_of_js
            (Ojs.call (t_to_js x11435) "has" [|(K.t_to_js x11434)|])
    let (get_size : t -> float) =
      fun (x11436 : t) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x11436) "size")
  end
module WeakMap_Make(K:Ojs.T)(V:Ojs.T) =
  struct
    type ('K, 'V) parent = ('K, 'V) WeakMap.t
    let rec parent_of_js :
      'K 'V . (Ojs.t -> 'K) -> (Ojs.t -> 'V) -> Ojs.t -> ('K, 'V) parent =
      fun (type __K) ->
        fun (type __V) ->
          fun (__K_of_js : Ojs.t -> __K) ->
            fun (__V_of_js : Ojs.t -> __V) ->
              fun (x11440 : Ojs.t) ->
                WeakMap.t_of_js __K_of_js __V_of_js x11440
    and parent_to_js :
      'K 'V . ('K -> Ojs.t) -> ('V -> Ojs.t) -> ('K, 'V) parent -> Ojs.t =
      fun (type __K) ->
        fun (type __V) ->
          fun (__K_to_js : __K -> Ojs.t) ->
            fun (__V_to_js : __V -> Ojs.t) ->
              fun (x11437 : (__K, __V) WeakMap.t) ->
                WeakMap.t_to_js __K_to_js __V_to_js x11437
    type t = (K.t, V.t) parent
    let rec t_of_js : Ojs.t -> t =
      fun (x11446 : Ojs.t) -> parent_of_js K.t_of_js V.t_of_js x11446
    and t_to_js : t -> Ojs.t =
      fun (x11443 : (K.t, V.t) parent) ->
        parent_to_js K.t_to_js V.t_to_js x11443
    let (delete : t -> key:K.t -> bool) =
      fun (x11450 : t) ->
        fun ~key:(x11449 : K.t) ->
          Ojs.bool_of_js
            (Ojs.call (t_to_js x11450) "delete" [|(K.t_to_js x11449)|])
    let (get_ : t -> key:K.t -> V.t option) =
      fun (x11452 : t) ->
        fun ~key:(x11451 : K.t) ->
          Ojs.option_of_js V.t_of_js
            (Ojs.call (t_to_js x11452) "get" [|(K.t_to_js x11451)|])
    let (has : t -> key:K.t -> bool) =
      fun (x11455 : t) ->
        fun ~key:(x11454 : K.t) ->
          Ojs.bool_of_js
            (Ojs.call (t_to_js x11455) "has" [|(K.t_to_js x11454)|])
    let (set_ : t -> key:K.t -> value:V.t -> t) =
      fun (x11458 : t) ->
        fun ~key:(x11456 : K.t) ->
          fun ~value:(x11457 : V.t) ->
            t_of_js
              (Ojs.call (t_to_js x11458) "set"
                 [|(K.t_to_js x11456);(V.t_to_js x11457)|])
    let (create : (K.t * V.t) Iterable.t -> t) =
      fun (x11459 : (K.t * V.t) Iterable.t) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "WeakMap")
             [|(Iterable.t_to_js
                  (fun (x11460 : (K.t * V.t)) ->
                     let (x11461, x11462) = x11460 in
                     let x11463 = Ojs.array_make 2 in
                     Ojs.array_set x11463 0 (K.t_to_js x11461);
                     Ojs.array_set x11463 1 (V.t_to_js x11462);
                     x11463) x11459)|])
    let (create : ?entries:(K.t * V.t) list option -> unit -> t) =
      fun ?entries:(x11464 : (K.t * V.t) list option option) ->
        fun () ->
          t_of_js
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "WeakMap")
               (let x11465 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x11464 with
                 | Some x11466 ->
                     ignore
                       (Ojs.call x11465 "push"
                          [|(Ojs.option_to_js
                               (fun (x11467 : (K.t * V.t) list) ->
                                  Ojs.list_to_js
                                    (fun (x11468 : (K.t * V.t)) ->
                                       let (x11469, x11470) = x11468 in
                                       let x11471 = Ojs.array_make 2 in
                                       Ojs.array_set x11471 0
                                         (K.t_to_js x11469);
                                       Ojs.array_set x11471 1
                                         (V.t_to_js x11470);
                                       x11471) x11467) x11466)|])
                 | None -> ());
                x11465))
    let (prototype : unit -> (WeakKey.t, any) parent) =
      fun () ->
        parent_of_js WeakKey.t_of_js any_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "WeakMap")
             "prototype")
  end
module Set_Make(T:Ojs.T) =
  struct
    type 'T parent = 'T Set.t
    let rec parent_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T parent =
      fun (type __T) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x11476 : Ojs.t) -> Set.t_of_js __T_of_js x11476
    and parent_to_js : 'T . ('T -> Ojs.t) -> 'T parent -> Ojs.t =
      fun (type __T) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x11474 : __T Set.t) -> Set.t_to_js __T_to_js x11474
    type t = T.t parent
    let rec t_of_js : Ojs.t -> t =
      fun (x11480 : Ojs.t) -> parent_of_js T.t_of_js x11480
    and t_to_js : t -> Ojs.t =
      fun (x11478 : T.t parent) -> parent_to_js T.t_to_js x11478
    let (entries : t -> (T.t * T.t) IterableIterator.t) =
      fun (x11482 : t) ->
        IterableIterator.t_of_js
          (fun (x11483 : Ojs.t) ->
             let x11484 = x11483 in
             ((T.t_of_js (Ojs.array_get x11484 0)),
               (T.t_of_js (Ojs.array_get x11484 1))))
          (Ojs.call (t_to_js x11482) "entries" [||])
    let (keys : t -> T.t IterableIterator.t) =
      fun (x11485 : t) ->
        IterableIterator.t_of_js T.t_of_js
          (Ojs.call (t_to_js x11485) "keys" [||])
    let (values : t -> T.t IterableIterator.t) =
      fun (x11487 : t) ->
        IterableIterator.t_of_js T.t_of_js
          (Ojs.call (t_to_js x11487) "values" [||])
    let (add : t -> value:T.t -> t) =
      fun (x11490 : t) ->
        fun ~value:(x11489 : T.t) ->
          t_of_js (Ojs.call (t_to_js x11490) "add" [|(T.t_to_js x11489)|])
    let (clear : t -> unit) =
      fun (x11491 : t) -> ignore (Ojs.call (t_to_js x11491) "clear" [||])
    let (delete : t -> value:T.t -> bool) =
      fun (x11493 : t) ->
        fun ~value:(x11492 : T.t) ->
          Ojs.bool_of_js
            (Ojs.call (t_to_js x11493) "delete" [|(T.t_to_js x11492)|])
    let (forEach :
      t ->
        callbackfn:(value:T.t -> value2:T.t -> set_:t -> unit) ->
          ?thisArg:any -> unit -> unit)
      =
      fun (x11501 : t) ->
        fun ~callbackfn:(x11494 : value:T.t -> value2:T.t -> set_:t -> unit)
          ->
          fun ?thisArg:(x11495 : any option) ->
            fun () ->
              ignore
                (let x11502 = t_to_js x11501 in
                 Ojs.call (Ojs.get_prop_ascii x11502 "forEach") "apply"
                   [|x11502;((let x11496 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x11496 "push"
                                   [|(Ojs.fun_to_js 3
                                        (fun (x11498 : Ojs.t) ->
                                           fun (x11499 : Ojs.t) ->
                                             fun (x11500 : Ojs.t) ->
                                               x11494
                                                 ~value:(T.t_of_js x11498)
                                                 ~value2:(T.t_of_js x11499)
                                                 ~set_:(t_of_js x11500)))|]);
                              (match x11495 with
                               | Some x11497 ->
                                   ignore
                                     (Ojs.call x11496 "push"
                                        [|(any_to_js x11497)|])
                               | None -> ());
                              x11496))|])
    let (has : t -> value:T.t -> bool) =
      fun (x11504 : t) ->
        fun ~value:(x11503 : T.t) ->
          Ojs.bool_of_js
            (Ojs.call (t_to_js x11504) "has" [|(T.t_to_js x11503)|])
    let (get_size : t -> float) =
      fun (x11505 : t) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x11505) "size")
    let (create : ?iterable:T.t Iterable.t option -> unit -> t) =
      fun ?iterable:(x11506 : T.t Iterable.t option option) ->
        fun () ->
          t_of_js
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "Set")
               (let x11507 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x11506 with
                 | Some x11508 ->
                     ignore
                       (Ojs.call x11507 "push"
                          [|(Ojs.option_to_js
                               (fun (x11509 : T.t Iterable.t) ->
                                  Iterable.t_to_js T.t_to_js x11509) x11508)|])
                 | None -> ());
                x11507))
    let (create : ?values:T.t list option -> unit -> t) =
      fun ?values:(x11511 : T.t list option option) ->
        fun () ->
          t_of_js
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "Set")
               (let x11512 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x11511 with
                 | Some x11513 ->
                     ignore
                       (Ojs.call x11512 "push"
                          [|(Ojs.option_to_js
                               (fun (x11514 : T.t list) ->
                                  Ojs.list_to_js T.t_to_js x11514) x11513)|])
                 | None -> ());
                x11512))
    let (prototype : unit -> any parent) =
      fun () ->
        parent_of_js any_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Set")
             "prototype")
  end
module ReadonlySet_Make(T:Ojs.T) =
  struct
    type 'T parent = 'T ReadonlySet.t
    let rec parent_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T parent =
      fun (type __T) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x11519 : Ojs.t) -> ReadonlySet.t_of_js __T_of_js x11519
    and parent_to_js : 'T . ('T -> Ojs.t) -> 'T parent -> Ojs.t =
      fun (type __T) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x11517 : __T ReadonlySet.t) ->
            ReadonlySet.t_to_js __T_to_js x11517
    type t = T.t parent
    let rec t_of_js : Ojs.t -> t =
      fun (x11523 : Ojs.t) -> parent_of_js T.t_of_js x11523
    and t_to_js : t -> Ojs.t =
      fun (x11521 : T.t parent) -> parent_to_js T.t_to_js x11521
    let (entries : t -> (T.t * T.t) IterableIterator.t) =
      fun (x11525 : t) ->
        IterableIterator.t_of_js
          (fun (x11526 : Ojs.t) ->
             let x11527 = x11526 in
             ((T.t_of_js (Ojs.array_get x11527 0)),
               (T.t_of_js (Ojs.array_get x11527 1))))
          (Ojs.call (t_to_js x11525) "entries" [||])
    let (keys : t -> T.t IterableIterator.t) =
      fun (x11528 : t) ->
        IterableIterator.t_of_js T.t_of_js
          (Ojs.call (t_to_js x11528) "keys" [||])
    let (values : t -> T.t IterableIterator.t) =
      fun (x11530 : t) ->
        IterableIterator.t_of_js T.t_of_js
          (Ojs.call (t_to_js x11530) "values" [||])
    let (forEach :
      t ->
        callbackfn:(value:T.t -> value2:T.t -> set_:t -> unit) ->
          ?thisArg:any -> unit -> unit)
      =
      fun (x11539 : t) ->
        fun ~callbackfn:(x11532 : value:T.t -> value2:T.t -> set_:t -> unit)
          ->
          fun ?thisArg:(x11533 : any option) ->
            fun () ->
              ignore
                (let x11540 = t_to_js x11539 in
                 Ojs.call (Ojs.get_prop_ascii x11540 "forEach") "apply"
                   [|x11540;((let x11534 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x11534 "push"
                                   [|(Ojs.fun_to_js 3
                                        (fun (x11536 : Ojs.t) ->
                                           fun (x11537 : Ojs.t) ->
                                             fun (x11538 : Ojs.t) ->
                                               x11532
                                                 ~value:(T.t_of_js x11536)
                                                 ~value2:(T.t_of_js x11537)
                                                 ~set_:(t_of_js x11538)))|]);
                              (match x11533 with
                               | Some x11535 ->
                                   ignore
                                     (Ojs.call x11534 "push"
                                        [|(any_to_js x11535)|])
                               | None -> ());
                              x11534))|])
    let (has : t -> value:T.t -> bool) =
      fun (x11542 : t) ->
        fun ~value:(x11541 : T.t) ->
          Ojs.bool_of_js
            (Ojs.call (t_to_js x11542) "has" [|(T.t_to_js x11541)|])
    let (get_size : t -> float) =
      fun (x11543 : t) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x11543) "size")
  end
module WeakSet_Make(T:Ojs.T) =
  struct
    type 'T parent = 'T WeakSet.t
    let rec parent_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T parent =
      fun (type __T) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x11546 : Ojs.t) -> WeakSet.t_of_js __T_of_js x11546
    and parent_to_js : 'T . ('T -> Ojs.t) -> 'T parent -> Ojs.t =
      fun (type __T) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x11544 : __T WeakSet.t) -> WeakSet.t_to_js __T_to_js x11544
    type t = T.t parent
    let rec t_of_js : Ojs.t -> t =
      fun (x11550 : Ojs.t) -> parent_of_js T.t_of_js x11550
    and t_to_js : t -> Ojs.t =
      fun (x11548 : T.t parent) -> parent_to_js T.t_to_js x11548
    let (add : t -> value:T.t -> t) =
      fun (x11553 : t) ->
        fun ~value:(x11552 : T.t) ->
          t_of_js (Ojs.call (t_to_js x11553) "add" [|(T.t_to_js x11552)|])
    let (delete : t -> value:T.t -> bool) =
      fun (x11555 : t) ->
        fun ~value:(x11554 : T.t) ->
          Ojs.bool_of_js
            (Ojs.call (t_to_js x11555) "delete" [|(T.t_to_js x11554)|])
    let (has : t -> value:T.t -> bool) =
      fun (x11557 : t) ->
        fun ~value:(x11556 : T.t) ->
          Ojs.bool_of_js
            (Ojs.call (t_to_js x11557) "has" [|(T.t_to_js x11556)|])
    let (create : T.t Iterable.t -> t) =
      fun (x11558 : T.t Iterable.t) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "WeakSet")
             [|(Iterable.t_to_js T.t_to_js x11558)|])
    let (create : ?values:T.t list option -> unit -> t) =
      fun ?values:(x11560 : T.t list option option) ->
        fun () ->
          t_of_js
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "WeakSet")
               (let x11561 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x11560 with
                 | Some x11562 ->
                     ignore
                       (Ojs.call x11561 "push"
                          [|(Ojs.option_to_js
                               (fun (x11563 : T.t list) ->
                                  Ojs.list_to_js T.t_to_js x11563) x11562)|])
                 | None -> ());
                x11561))
    let (prototype : unit -> WeakKey.t parent) =
      fun () ->
        parent_of_js WeakKey.t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "WeakSet")
             "prototype")
  end
module Generator_Make(T:Ojs.T)(TReturn:Ojs.T)(TNext:Ojs.T) =
  struct
    type ('T, 'TReturn, 'TNext) parent = ('T, 'TReturn, 'TNext) Generator.t
    let rec parent_of_js :
      'T 'TReturn 'TNext .
        (Ojs.t -> 'T) ->
          (Ojs.t -> 'TReturn) ->
            (Ojs.t -> 'TNext) -> Ojs.t -> ('T, 'TReturn, 'TNext) parent
      =
      fun (type __T) ->
        fun (type __TReturn) ->
          fun (type __TNext) ->
            fun (__T_of_js : Ojs.t -> __T) ->
              fun (__TReturn_of_js : Ojs.t -> __TReturn) ->
                fun (__TNext_of_js : Ojs.t -> __TNext) ->
                  fun (x11570 : Ojs.t) ->
                    Generator.t_of_js __T_of_js __TReturn_of_js __TNext_of_js
                      x11570
    and parent_to_js :
      'T 'TReturn 'TNext .
        ('T -> Ojs.t) ->
          ('TReturn -> Ojs.t) ->
            ('TNext -> Ojs.t) -> ('T, 'TReturn, 'TNext) parent -> Ojs.t
      =
      fun (type __T) ->
        fun (type __TReturn) ->
          fun (type __TNext) ->
            fun (__T_to_js : __T -> Ojs.t) ->
              fun (__TReturn_to_js : __TReturn -> Ojs.t) ->
                fun (__TNext_to_js : __TNext -> Ojs.t) ->
                  fun (x11566 : (__T, __TReturn, __TNext) Generator.t) ->
                    Generator.t_to_js __T_to_js __TReturn_to_js __TNext_to_js
                      x11566
    type t = (T.t, TReturn.t, TNext.t) parent
    let rec t_of_js : Ojs.t -> t =
      fun (x11578 : Ojs.t) ->
        parent_of_js T.t_of_js TReturn.t_of_js TNext.t_of_js x11578
    and t_to_js : t -> Ojs.t =
      fun (x11574 : (T.t, TReturn.t, TNext.t) parent) ->
        parent_to_js T.t_to_js TReturn.t_to_js TNext.t_to_js x11574
    let (next : t -> args:any list -> (T.t, TReturn.t) IteratorResult.t) =
      fun (x11585 : t) ->
        fun ~args:(x11582 : any list) ->
          IteratorResult.t_of_js T.t_of_js TReturn.t_of_js
            (let x11586 = t_to_js x11585 in
             Ojs.call (Ojs.get_prop_ascii x11586 "next") "apply"
               [|x11586;((let x11583 =
                            Ojs.new_obj
                              (Ojs.get_prop_ascii Ojs.global "Array") 
                              [||] in
                          List.iter
                            (fun (x11584 : any) ->
                               ignore
                                 (Ojs.call x11583 "push"
                                    [|(any_to_js x11584)|])) x11582;
                          x11583))|])
    let (return : t -> value:TReturn.t -> (T.t, TReturn.t) IteratorResult.t)
      =
      fun (x11590 : t) ->
        fun ~value:(x11589 : TReturn.t) ->
          IteratorResult.t_of_js T.t_of_js TReturn.t_of_js
            (Ojs.call (t_to_js x11590) "return" [|(TReturn.t_to_js x11589)|])
    let (throw : t -> e:any -> (T.t, TReturn.t) IteratorResult.t) =
      fun (x11594 : t) ->
        fun ~e:(x11593 : any) ->
          IteratorResult.t_of_js T.t_of_js TReturn.t_of_js
            (Ojs.call (t_to_js x11594) "throw" [|(any_to_js x11593)|])
  end
module IteratorYieldResult_Make(TYield:Ojs.T) =
  struct
    type 'TYield parent = 'TYield IteratorYieldResult.t
    let rec parent_of_js :
      'TYield . (Ojs.t -> 'TYield) -> Ojs.t -> 'TYield parent =
      fun (type __TYield) ->
        fun (__TYield_of_js : Ojs.t -> __TYield) ->
          fun (x11599 : Ojs.t) ->
            IteratorYieldResult.t_of_js __TYield_of_js x11599
    and parent_to_js :
      'TYield . ('TYield -> Ojs.t) -> 'TYield parent -> Ojs.t =
      fun (type __TYield) ->
        fun (__TYield_to_js : __TYield -> Ojs.t) ->
          fun (x11597 : __TYield IteratorYieldResult.t) ->
            IteratorYieldResult.t_to_js __TYield_to_js x11597
    type t = TYield.t parent
    let rec t_of_js : Ojs.t -> t =
      fun (x11603 : Ojs.t) -> parent_of_js TYield.t_of_js x11603
    and t_to_js : t -> Ojs.t =
      fun (x11601 : TYield.t parent) -> parent_to_js TYield.t_to_js x11601
    let (get_done : t -> [ `L_b_false ] option) =
      fun (x11605 : t) ->
        Ojs.option_of_js
          (fun (x11606 : Ojs.t) ->
             let x11607 = x11606 in
             match Ojs.bool_of_js x11607 with
             | false -> `L_b_false
             | _ -> assert false)
          (Ojs.get_prop_ascii (t_to_js x11605) "done")
    let (set_done : t -> [ `L_b_false ] -> unit) =
      fun (x11608 : t) ->
        fun (x11609 : [ `L_b_false ]) ->
          Ojs.set_prop_ascii (t_to_js x11608) "done"
            (match x11609 with | `L_b_false -> Ojs.bool_to_js false)
    let (get_value : t -> TYield.t) =
      fun (x11610 : t) ->
        TYield.t_of_js (Ojs.get_prop_ascii (t_to_js x11610) "value")
    let (set_value : t -> TYield.t -> unit) =
      fun (x11611 : t) ->
        fun (x11612 : TYield.t) ->
          Ojs.set_prop_ascii (t_to_js x11611) "value" (TYield.t_to_js x11612)
  end
module IteratorReturnResult_Make(TReturn:Ojs.T) =
  struct
    type 'TReturn parent = 'TReturn IteratorReturnResult.t
    let rec parent_of_js :
      'TReturn . (Ojs.t -> 'TReturn) -> Ojs.t -> 'TReturn parent =
      fun (type __TReturn) ->
        fun (__TReturn_of_js : Ojs.t -> __TReturn) ->
          fun (x11615 : Ojs.t) ->
            IteratorReturnResult.t_of_js __TReturn_of_js x11615
    and parent_to_js :
      'TReturn . ('TReturn -> Ojs.t) -> 'TReturn parent -> Ojs.t =
      fun (type __TReturn) ->
        fun (__TReturn_to_js : __TReturn -> Ojs.t) ->
          fun (x11613 : __TReturn IteratorReturnResult.t) ->
            IteratorReturnResult.t_to_js __TReturn_to_js x11613
    type t = TReturn.t parent
    let rec t_of_js : Ojs.t -> t =
      fun (x11619 : Ojs.t) -> parent_of_js TReturn.t_of_js x11619
    and t_to_js : t -> Ojs.t =
      fun (x11617 : TReturn.t parent) -> parent_to_js TReturn.t_to_js x11617
    let (get_done : t -> [ `L_b_true ]) =
      fun (x11621 : t) ->
        let x11622 = Ojs.get_prop_ascii (t_to_js x11621) "done" in
        match Ojs.bool_of_js x11622 with
        | true -> `L_b_true
        | _ -> assert false
    let (set_done : t -> [ `L_b_true ] -> unit) =
      fun (x11623 : t) ->
        fun (x11624 : [ `L_b_true ]) ->
          Ojs.set_prop_ascii (t_to_js x11623) "done"
            (match x11624 with | `L_b_true -> Ojs.bool_to_js true)
    let (get_value : t -> TReturn.t) =
      fun (x11625 : t) ->
        TReturn.t_of_js (Ojs.get_prop_ascii (t_to_js x11625) "value")
    let (set_value : t -> TReturn.t -> unit) =
      fun (x11626 : t) ->
        fun (x11627 : TReturn.t) ->
          Ojs.set_prop_ascii (t_to_js x11626) "value"
            (TReturn.t_to_js x11627)
  end
module Iterator_Make(T:Ojs.T)(TReturn:Ojs.T)(TNext:Ojs.T) =
  struct
    type ('T, 'TReturn, 'TNext) parent = ('T, 'TReturn, 'TNext) Iterator.t
    let rec parent_of_js :
      'T 'TReturn 'TNext .
        (Ojs.t -> 'T) ->
          (Ojs.t -> 'TReturn) ->
            (Ojs.t -> 'TNext) -> Ojs.t -> ('T, 'TReturn, 'TNext) parent
      =
      fun (type __T) ->
        fun (type __TReturn) ->
          fun (type __TNext) ->
            fun (__T_of_js : Ojs.t -> __T) ->
              fun (__TReturn_of_js : Ojs.t -> __TReturn) ->
                fun (__TNext_of_js : Ojs.t -> __TNext) ->
                  fun (x11632 : Ojs.t) ->
                    Iterator.t_of_js __T_of_js __TReturn_of_js __TNext_of_js
                      x11632
    and parent_to_js :
      'T 'TReturn 'TNext .
        ('T -> Ojs.t) ->
          ('TReturn -> Ojs.t) ->
            ('TNext -> Ojs.t) -> ('T, 'TReturn, 'TNext) parent -> Ojs.t
      =
      fun (type __T) ->
        fun (type __TReturn) ->
          fun (type __TNext) ->
            fun (__T_to_js : __T -> Ojs.t) ->
              fun (__TReturn_to_js : __TReturn -> Ojs.t) ->
                fun (__TNext_to_js : __TNext -> Ojs.t) ->
                  fun (x11628 : (__T, __TReturn, __TNext) Iterator.t) ->
                    Iterator.t_to_js __T_to_js __TReturn_to_js __TNext_to_js
                      x11628
    type t = (T.t, TReturn.t, TNext.t) parent
    let rec t_of_js : Ojs.t -> t =
      fun (x11640 : Ojs.t) ->
        parent_of_js T.t_of_js TReturn.t_of_js TNext.t_of_js x11640
    and t_to_js : t -> Ojs.t =
      fun (x11636 : (T.t, TReturn.t, TNext.t) parent) ->
        parent_to_js T.t_to_js TReturn.t_to_js TNext.t_to_js x11636
    let (next : t -> args:any list -> (T.t, TReturn.t) IteratorResult.t) =
      fun (x11647 : t) ->
        fun ~args:(x11644 : any list) ->
          IteratorResult.t_of_js T.t_of_js TReturn.t_of_js
            (let x11648 = t_to_js x11647 in
             Ojs.call (Ojs.get_prop_ascii x11648 "next") "apply"
               [|x11648;((let x11645 =
                            Ojs.new_obj
                              (Ojs.get_prop_ascii Ojs.global "Array") 
                              [||] in
                          List.iter
                            (fun (x11646 : any) ->
                               ignore
                                 (Ojs.call x11645 "push"
                                    [|(any_to_js x11646)|])) x11644;
                          x11645))|])
    let (return :
      t -> ?value:TReturn.t -> unit -> (T.t, TReturn.t) IteratorResult.t) =
      fun (x11654 : t) ->
        fun ?value:(x11651 : TReturn.t option) ->
          fun () ->
            IteratorResult.t_of_js T.t_of_js TReturn.t_of_js
              (let x11655 = t_to_js x11654 in
               Ojs.call (Ojs.get_prop_ascii x11655 "return") "apply"
                 [|x11655;((let x11652 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x11651 with
                             | Some x11653 ->
                                 ignore
                                   (Ojs.call x11652 "push"
                                      [|(TReturn.t_to_js x11653)|])
                             | None -> ());
                            x11652))|])
    let (throw : t -> ?e:any -> unit -> (T.t, TReturn.t) IteratorResult.t) =
      fun (x11661 : t) ->
        fun ?e:(x11658 : any option) ->
          fun () ->
            IteratorResult.t_of_js T.t_of_js TReturn.t_of_js
              (let x11662 = t_to_js x11661 in
               Ojs.call (Ojs.get_prop_ascii x11662 "throw") "apply"
                 [|x11662;((let x11659 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x11658 with
                             | Some x11660 ->
                                 ignore
                                   (Ojs.call x11659 "push"
                                      [|(any_to_js x11660)|])
                             | None -> ());
                            x11659))|])
  end
module Promise_Make(T:Ojs.T) =
  struct
    type 'T parent = 'T Promise.t
    let rec parent_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T parent =
      fun (type __T) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x11667 : Ojs.t) -> Promise.t_of_js __T_of_js x11667
    and parent_to_js : 'T . ('T -> Ojs.t) -> 'T parent -> Ojs.t =
      fun (type __T) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x11665 : __T Promise.t) -> Promise.t_to_js __T_to_js x11665
    type t = T.t parent
    let rec t_of_js : Ojs.t -> t =
      fun (x11671 : Ojs.t) -> parent_of_js T.t_of_js x11671
    and t_to_js : t -> Ojs.t =
      fun (x11669 : T.t parent) -> parent_to_js T.t_to_js x11669
    let (finally :
      t ->
        ?onfinally:[ `Null  | `Undefined of undefined 
                   | `U1 of unit -> unit ]
          -> unit -> t)
      =
      fun (x11678 : t) ->
        fun
          ?onfinally:(x11673 :
                       [ `Null  | `Undefined of undefined 
                       | `U1 of unit -> unit ] option)
          ->
          fun () ->
            t_of_js
              (let x11679 = t_to_js x11678 in
               Ojs.call (Ojs.get_prop_ascii x11679 "finally") "apply"
                 [|x11679;((let x11674 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x11673 with
                             | Some x11675 ->
                                 ignore
                                   (Ojs.call x11674 "push"
                                      [|((match x11675 with
                                          | `Null -> Ojs.null
                                          | `Undefined x11676 ->
                                              undefined_to_js x11676
                                          | `U1 x11677 ->
                                              Ojs.fun_to_js 1
                                                (fun _ -> x11677 ())))|])
                             | None -> ());
                            x11674))|])
    let (then_ :
      t ->
        ?onfulfilled:[ `Null  | `Undefined of undefined 
                     | `U1 of
                         T.t ->
                           [ `U1 of 'TResult1 
                           | `U2 of 'TResult1 PromiseLike.t ]
                         ]
          ->
          ?onrejected:[ `Null  | `Undefined of undefined 
                      | `U1 of
                          any ->
                            [ `U1 of 'TResult2 
                            | `U2 of 'TResult2 PromiseLike.t ]
                          ]
            -> unit -> ('TResult1, 'TResult2) union2 parent)
      =
      fun (x11697 : t) ->
        fun
          ?onfulfilled:(x11680 :
                         [ `Null  | `Undefined of undefined 
                         | `U1 of
                             T.t ->
                               [ `U1 of 'TResult1 
                               | `U2 of 'TResult1 PromiseLike.t ]
                             ]
                           option)
          ->
          fun
            ?onrejected:(x11681 :
                          [ `Null  | `Undefined of undefined 
                          | `U1 of
                              any ->
                                [ `U1 of 'TResult2 
                                | `U2 of 'TResult2 PromiseLike.t ]
                              ]
                            option)
            ->
            fun () ->
              parent_of_js
                (fun (x11699 : Ojs.t) ->
                   union2_of_js Obj.magic Obj.magic x11699)
                (let x11698 = t_to_js x11697 in
                 Ojs.call (Ojs.get_prop_ascii x11698 "then") "apply"
                   [|x11698;((let x11682 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              (match x11680 with
                               | Some x11690 ->
                                   ignore
                                     (Ojs.call x11682 "push"
                                        [|((match x11690 with
                                            | `Null -> Ojs.null
                                            | `Undefined x11691 ->
                                                undefined_to_js x11691
                                            | `U1 x11692 ->
                                                Ojs.fun_to_js 1
                                                  (fun (x11693 : Ojs.t) ->
                                                     match x11692
                                                             (T.t_of_js
                                                                x11693)
                                                     with
                                                     | `U1 x11694 ->
                                                         Obj.magic x11694
                                                     | `U2 x11695 ->
                                                         PromiseLike.t_to_js
                                                           Obj.magic x11695)))|])
                               | None -> ());
                              (match x11681 with
                               | Some x11683 ->
                                   ignore
                                     (Ojs.call x11682 "push"
                                        [|((match x11683 with
                                            | `Null -> Ojs.null
                                            | `Undefined x11684 ->
                                                undefined_to_js x11684
                                            | `U1 x11685 ->
                                                Ojs.fun_to_js 1
                                                  (fun (x11686 : Ojs.t) ->
                                                     match x11685
                                                             (any_of_js
                                                                x11686)
                                                     with
                                                     | `U1 x11687 ->
                                                         Obj.magic x11687
                                                     | `U2 x11688 ->
                                                         PromiseLike.t_to_js
                                                           Obj.magic x11688)))|])
                               | None -> ());
                              x11682))|])
    let (catch :
      t ->
        ?onrejected:[ `Null  | `Undefined of undefined 
                    | `U1 of
                        any ->
                          [ `U1 of 'TResult 
                          | `U2 of 'TResult PromiseLike.t ]
                        ]
          -> unit -> (T.t, 'TResult) union2 parent)
      =
      fun (x11711 : t) ->
        fun
          ?onrejected:(x11702 :
                        [ `Null  | `Undefined of undefined 
                        | `U1 of
                            any ->
                              [ `U1 of 'TResult 
                              | `U2 of 'TResult PromiseLike.t ]
                            ]
                          option)
          ->
          fun () ->
            parent_of_js
              (fun (x11713 : Ojs.t) ->
                 union2_of_js T.t_of_js Obj.magic x11713)
              (let x11712 = t_to_js x11711 in
               Ojs.call (Ojs.get_prop_ascii x11712 "catch") "apply"
                 [|x11712;((let x11703 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x11702 with
                             | Some x11704 ->
                                 ignore
                                   (Ojs.call x11703 "push"
                                      [|((match x11704 with
                                          | `Null -> Ojs.null
                                          | `Undefined x11705 ->
                                              undefined_to_js x11705
                                          | `U1 x11706 ->
                                              Ojs.fun_to_js 1
                                                (fun (x11707 : Ojs.t) ->
                                                   match x11706
                                                           (any_of_js x11707)
                                                   with
                                                   | `U1 x11708 ->
                                                       Obj.magic x11708
                                                   | `U2 x11709 ->
                                                       PromiseLike.t_to_js
                                                         Obj.magic x11709)))|])
                             | None -> ());
                            x11703))|])
    let (any : T.t -> any Awaited.t parent) =
      fun (x11716 : T.t) ->
        parent_of_js
          (fun (x11717 : Ojs.t) -> Awaited.t_of_js any_of_js x11717)
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Promise") "any"
             [|(T.t_to_js x11716)|])
    let (any :
      [ `U1 of T.t  | `U2 of T.t PromiseLike.t ] Iterable.t ->
        T.t Awaited.t Awaited.t parent)
      =
      fun (x11719 : [ `U1 of T.t  | `U2 of T.t PromiseLike.t ] Iterable.t) ->
        parent_of_js
          (fun (x11724 : Ojs.t) ->
             Awaited.t_of_js
               (fun (x11725 : Ojs.t) -> Awaited.t_of_js T.t_of_js x11725)
               x11724)
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Promise") "any"
             [|(Iterable.t_to_js
                  (fun (x11720 : [ `U1 of T.t  | `U2 of T.t PromiseLike.t ])
                     ->
                     match x11720 with
                     | `U1 x11721 -> T.t_to_js x11721
                     | `U2 x11722 -> PromiseLike.t_to_js T.t_to_js x11722)
                  x11719)|])
    let (allSettled : T.t -> any parent) =
      fun (x11727 : T.t) ->
        parent_of_js any_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Promise") "allSettled"
             [|(T.t_to_js x11727)|])
    let (allSettled :
      [ `U1 of T.t  | `U2 of T.t PromiseLike.t ] Iterable.t ->
        T.t Awaited.t PromiseSettledResult.t list Awaited.t
          PromiseSettledResult.t list parent)
      =
      fun (x11729 : [ `U1 of T.t  | `U2 of T.t PromiseLike.t ] Iterable.t) ->
        parent_of_js
          (fun (x11734 : Ojs.t) ->
             Ojs.list_of_js
               (fun (x11735 : Ojs.t) ->
                  PromiseSettledResult.t_of_js
                    (fun (x11736 : Ojs.t) ->
                       Awaited.t_of_js
                         (fun (x11737 : Ojs.t) ->
                            Ojs.list_of_js
                              (fun (x11738 : Ojs.t) ->
                                 PromiseSettledResult.t_of_js
                                   (fun (x11739 : Ojs.t) ->
                                      Awaited.t_of_js T.t_of_js x11739)
                                   x11738) x11737) x11736) x11735) x11734)
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Promise") "allSettled"
             [|(Iterable.t_to_js
                  (fun (x11730 : [ `U1 of T.t  | `U2 of T.t PromiseLike.t ])
                     ->
                     match x11730 with
                     | `U1 x11731 -> T.t_to_js x11731
                     | `U2 x11732 -> PromiseLike.t_to_js T.t_to_js x11732)
                  x11729)|])
    let (prototype : unit -> any parent) =
      fun () ->
        parent_of_js any_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Promise")
             "prototype")
    let (create :
      (resolve:([ `U1 of T.t  | `U2 of T.t PromiseLike.t ] -> unit) ->
         reject:(?reason:any -> unit -> unit) -> unit)
        -> t)
      =
      fun
        (x11742 :
          resolve:([ `U1 of T.t  | `U2 of T.t PromiseLike.t ] -> unit) ->
            reject:(?reason:any -> unit -> unit) -> unit)
        ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Promise")
             [|(Ojs.fun_to_js 2
                  (fun (x11743 : Ojs.t) ->
                     fun (x11748 : Ojs.t) ->
                       x11742
                         ~resolve:(fun
                                     (x11744 :
                                       [ `U1 of T.t 
                                       | `U2 of T.t PromiseLike.t ])
                                     ->
                                     ignore
                                       (Ojs.apply x11743
                                          [|((match x11744 with
                                              | `U1 x11745 ->
                                                  T.t_to_js x11745
                                              | `U2 x11746 ->
                                                  PromiseLike.t_to_js
                                                    T.t_to_js x11746))|]))
                         ~reject:(fun ?reason:(x11749 : any option) ->
                                    fun () ->
                                      ignore
                                        (Ojs.call x11748 "apply"
                                           [|Ojs.null;((let x11750 =
                                                          Ojs.new_obj
                                                            (Ojs.get_prop_ascii
                                                               Ojs.global
                                                               "Array") 
                                                            [||] in
                                                        (match x11749 with
                                                         | Some x11751 ->
                                                             ignore
                                                               (Ojs.call
                                                                  x11750
                                                                  "push"
                                                                  [|(
                                                                    any_to_js
                                                                    x11751)|])
                                                         | None -> ());
                                                        x11750))|]))))|])
    let (all : T.t -> any parent) =
      fun (x11752 : T.t) ->
        parent_of_js any_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Promise") "all"
             [|(T.t_to_js x11752)|])
    let (race : T.t -> any Awaited.t parent) =
      fun (x11754 : T.t) ->
        parent_of_js
          (fun (x11755 : Ojs.t) -> Awaited.t_of_js any_of_js x11755)
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Promise") "race"
             [|(T.t_to_js x11754)|])
    let (reject : ?reason:any -> unit -> t) =
      fun ?reason:(x11757 : any option) ->
        fun () ->
          t_of_js
            (let x11760 = Ojs.get_prop_ascii Ojs.global "Promise" in
             Ojs.call (Ojs.get_prop_ascii x11760 "reject") "apply"
               [|x11760;((let x11758 =
                            Ojs.new_obj
                              (Ojs.get_prop_ascii Ojs.global "Array") 
                              [||] in
                          (match x11757 with
                           | Some x11759 ->
                               ignore
                                 (Ojs.call x11758 "push"
                                    [|(any_to_js x11759)|])
                           | None -> ());
                          x11758))|])
    let (resolve : unit -> unit parent) =
      fun () ->
        parent_of_js Ojs.unit_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Promise") "resolve" [||])
    let (resolve : T.t -> T.t Awaited.t Awaited.t parent) =
      fun (x11762 : T.t) ->
        parent_of_js
          (fun (x11763 : Ojs.t) ->
             Awaited.t_of_js
               (fun (x11764 : Ojs.t) -> Awaited.t_of_js T.t_of_js x11764)
               x11763)
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Promise") "resolve"
             [|(T.t_to_js x11762)|])
    let (resolve :
      [ `U1 of T.t  | `U2 of T.t PromiseLike.t ] ->
        T.t Awaited.t Awaited.t parent)
      =
      fun (x11766 : [ `U1 of T.t  | `U2 of T.t PromiseLike.t ]) ->
        parent_of_js
          (fun (x11770 : Ojs.t) ->
             Awaited.t_of_js
               (fun (x11771 : Ojs.t) -> Awaited.t_of_js T.t_of_js x11771)
               x11770)
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Promise") "resolve"
             [|((match x11766 with
                 | `U1 x11767 -> T.t_to_js x11767
                 | `U2 x11768 -> PromiseLike.t_to_js T.t_to_js x11768))|])
    let (all :
      [ `U1 of T.t  | `U2 of T.t PromiseLike.t ] Iterable.t ->
        T.t Awaited.t list Awaited.t list parent)
      =
      fun (x11773 : [ `U1 of T.t  | `U2 of T.t PromiseLike.t ] Iterable.t) ->
        parent_of_js
          (fun (x11778 : Ojs.t) ->
             Ojs.list_of_js
               (fun (x11779 : Ojs.t) ->
                  Awaited.t_of_js
                    (fun (x11780 : Ojs.t) ->
                       Ojs.list_of_js
                         (fun (x11781 : Ojs.t) ->
                            Awaited.t_of_js T.t_of_js x11781) x11780) x11779)
               x11778)
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Promise") "all"
             [|(Iterable.t_to_js
                  (fun (x11774 : [ `U1 of T.t  | `U2 of T.t PromiseLike.t ])
                     ->
                     match x11774 with
                     | `U1 x11775 -> T.t_to_js x11775
                     | `U2 x11776 -> PromiseLike.t_to_js T.t_to_js x11776)
                  x11773)|])
    let (race :
      [ `U1 of T.t  | `U2 of T.t PromiseLike.t ] Iterable.t ->
        T.t Awaited.t Awaited.t parent)
      =
      fun (x11783 : [ `U1 of T.t  | `U2 of T.t PromiseLike.t ] Iterable.t) ->
        parent_of_js
          (fun (x11788 : Ojs.t) ->
             Awaited.t_of_js
               (fun (x11789 : Ojs.t) -> Awaited.t_of_js T.t_of_js x11789)
               x11788)
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Promise") "race"
             [|(Iterable.t_to_js
                  (fun (x11784 : [ `U1 of T.t  | `U2 of T.t PromiseLike.t ])
                     ->
                     match x11784 with
                     | `U1 x11785 -> T.t_to_js x11785
                     | `U2 x11786 -> PromiseLike.t_to_js T.t_to_js x11786)
                  x11783)|])
  end
module ProxyHandler_Make(T:Ojs.T) =
  struct
    type 'T parent = 'T ProxyHandler.t
    let rec parent_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T parent =
      fun (type __T) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x11793 : Ojs.t) -> ProxyHandler.t_of_js __T_of_js x11793
    and parent_to_js : 'T . ('T -> Ojs.t) -> 'T parent -> Ojs.t =
      fun (type __T) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x11791 : __T ProxyHandler.t) ->
            ProxyHandler.t_to_js __T_to_js x11791
    type t = T.t parent
    let rec t_of_js : Ojs.t -> t =
      fun (x11797 : Ojs.t) -> parent_of_js T.t_of_js x11797
    and t_to_js : t -> Ojs.t =
      fun (x11795 : T.t parent) -> parent_to_js T.t_to_js x11795
    let (apply_ : t -> target:T.t -> thisArg:any -> argArray:any list -> any)
      =
      fun (x11803 : t) ->
        fun ~target:(x11799 : T.t) ->
          fun ~thisArg:(x11800 : any) ->
            fun ~argArray:(x11801 : any list) ->
              any_of_js
                (Ojs.call (t_to_js x11803) "apply"
                   [|(T.t_to_js x11799);(any_to_js x11800);(Ojs.list_to_js
                                                              any_to_js
                                                              x11801)|])
    let (construct :
      t ->
        target:T.t ->
          argArray:any list -> newTarget:Function.t -> untyped_object)
      =
      fun (x11808 : t) ->
        fun ~target:(x11804 : T.t) ->
          fun ~argArray:(x11805 : any list) ->
            fun ~newTarget:(x11807 : Function.t) ->
              untyped_object_of_js
                (Ojs.call (t_to_js x11808) "construct"
                   [|(T.t_to_js x11804);(Ojs.list_to_js any_to_js x11805);(
                     Function.t_to_js x11807)|])
    let (defineProperty :
      t ->
        target:T.t ->
          property:[ `U1 of string  | `U2 of symbol ] ->
            attributes:PropertyDescriptor.t -> bool)
      =
      fun (x11814 : t) ->
        fun ~target:(x11809 : T.t) ->
          fun ~property:(x11810 : [ `U1 of string  | `U2 of symbol ]) ->
            fun ~attributes:(x11813 : PropertyDescriptor.t) ->
              Ojs.bool_of_js
                (Ojs.call (t_to_js x11814) "defineProperty"
                   [|(T.t_to_js x11809);((match x11810 with
                                          | `U1 x11811 ->
                                              Ojs.string_to_js x11811
                                          | `U2 x11812 -> symbol_to_js x11812));(
                     PropertyDescriptor.t_to_js x11813)|])
    let (deleteProperty :
      t -> target:T.t -> p:[ `U1 of string  | `U2 of symbol ] -> bool) =
      fun (x11819 : t) ->
        fun ~target:(x11815 : T.t) ->
          fun ~p:(x11816 : [ `U1 of string  | `U2 of symbol ]) ->
            Ojs.bool_of_js
              (Ojs.call (t_to_js x11819) "deleteProperty"
                 [|(T.t_to_js x11815);((match x11816 with
                                        | `U1 x11817 ->
                                            Ojs.string_to_js x11817
                                        | `U2 x11818 -> symbol_to_js x11818))|])
    let (get_ :
      t ->
        target:T.t ->
          p:[ `U1 of string  | `U2 of symbol ] -> receiver:any -> any)
      =
      fun (x11825 : t) ->
        fun ~target:(x11820 : T.t) ->
          fun ~p:(x11821 : [ `U1 of string  | `U2 of symbol ]) ->
            fun ~receiver:(x11824 : any) ->
              any_of_js
                (Ojs.call (t_to_js x11825) "get"
                   [|(T.t_to_js x11820);((match x11821 with
                                          | `U1 x11822 ->
                                              Ojs.string_to_js x11822
                                          | `U2 x11823 -> symbol_to_js x11823));(
                     any_to_js x11824)|])
    let (getOwnPropertyDescriptor :
      t ->
        target:T.t ->
          p:[ `U1 of string  | `U2 of symbol ] -> PropertyDescriptor.t option)
      =
      fun (x11830 : t) ->
        fun ~target:(x11826 : T.t) ->
          fun ~p:(x11827 : [ `U1 of string  | `U2 of symbol ]) ->
            Ojs.option_of_js PropertyDescriptor.t_of_js
              (Ojs.call (t_to_js x11830) "getOwnPropertyDescriptor"
                 [|(T.t_to_js x11826);((match x11827 with
                                        | `U1 x11828 ->
                                            Ojs.string_to_js x11828
                                        | `U2 x11829 -> symbol_to_js x11829))|])
    let (getPrototypeOf : t -> target:T.t -> untyped_object option) =
      fun (x11833 : t) ->
        fun ~target:(x11832 : T.t) ->
          Ojs.option_of_js untyped_object_of_js
            (Ojs.call (t_to_js x11833) "getPrototypeOf"
               [|(T.t_to_js x11832)|])
    let (has :
      t -> target:T.t -> p:[ `U1 of string  | `U2 of symbol ] -> bool) =
      fun (x11839 : t) ->
        fun ~target:(x11835 : T.t) ->
          fun ~p:(x11836 : [ `U1 of string  | `U2 of symbol ]) ->
            Ojs.bool_of_js
              (Ojs.call (t_to_js x11839) "has"
                 [|(T.t_to_js x11835);((match x11836 with
                                        | `U1 x11837 ->
                                            Ojs.string_to_js x11837
                                        | `U2 x11838 -> symbol_to_js x11838))|])
    let (isExtensible : t -> target:T.t -> bool) =
      fun (x11841 : t) ->
        fun ~target:(x11840 : T.t) ->
          Ojs.bool_of_js
            (Ojs.call (t_to_js x11841) "isExtensible" [|(T.t_to_js x11840)|])
    let (ownKeys :
      t ->
        target:T.t ->
          [ `String of string  | `Symbol of symbol ] Primitive.t ArrayLike.t)
      =
      fun (x11843 : t) ->
        fun ~target:(x11842 : T.t) ->
          ArrayLike.t_of_js
            (fun (x11844 : Ojs.t) ->
               Primitive.t_of_js
                 (fun (x11845 : Ojs.t) ->
                    let x11846 = x11845 in
                    match Ojs.string_of_js
                            (Ojs.get_prop_ascii x11846 "dummy")
                    with
                    | "String" -> `String (Ojs.string_of_js x11846)
                    | "Symbol" -> `Symbol (symbol_of_js x11846)
                    | _ -> assert false) x11844)
            (Ojs.call (t_to_js x11843) "ownKeys" [|(T.t_to_js x11842)|])
    let (preventExtensions : t -> target:T.t -> bool) =
      fun (x11848 : t) ->
        fun ~target:(x11847 : T.t) ->
          Ojs.bool_of_js
            (Ojs.call (t_to_js x11848) "preventExtensions"
               [|(T.t_to_js x11847)|])
    let (set_ :
      t ->
        target:T.t ->
          p:[ `U1 of string  | `U2 of symbol ] ->
            newValue:any -> receiver:any -> bool)
      =
      fun (x11855 : t) ->
        fun ~target:(x11849 : T.t) ->
          fun ~p:(x11850 : [ `U1 of string  | `U2 of symbol ]) ->
            fun ~newValue:(x11853 : any) ->
              fun ~receiver:(x11854 : any) ->
                Ojs.bool_of_js
                  (Ojs.call (t_to_js x11855) "set"
                     [|(T.t_to_js x11849);((match x11850 with
                                            | `U1 x11851 ->
                                                Ojs.string_to_js x11851
                                            | `U2 x11852 ->
                                                symbol_to_js x11852));(
                       any_to_js x11853);(any_to_js x11854)|])
    let (setPrototypeOf : t -> target:T.t -> v:untyped_object option -> bool)
      =
      fun (x11859 : t) ->
        fun ~target:(x11856 : T.t) ->
          fun ~v:(x11857 : untyped_object option) ->
            Ojs.bool_of_js
              (Ojs.call (t_to_js x11859) "setPrototypeOf"
                 [|(T.t_to_js x11856);(Ojs.option_to_js untyped_object_to_js
                                         x11857)|])
  end
module AsyncGenerator_Make(T:Ojs.T)(TReturn:Ojs.T)(TNext:Ojs.T) =
  struct
    type ('T, 'TReturn, 'TNext) parent =
      ('T, 'TReturn, 'TNext) AsyncGenerator.t
    let rec parent_of_js :
      'T 'TReturn 'TNext .
        (Ojs.t -> 'T) ->
          (Ojs.t -> 'TReturn) ->
            (Ojs.t -> 'TNext) -> Ojs.t -> ('T, 'TReturn, 'TNext) parent
      =
      fun (type __T) ->
        fun (type __TReturn) ->
          fun (type __TNext) ->
            fun (__T_of_js : Ojs.t -> __T) ->
              fun (__TReturn_of_js : Ojs.t -> __TReturn) ->
                fun (__TNext_of_js : Ojs.t -> __TNext) ->
                  fun (x11864 : Ojs.t) ->
                    AsyncGenerator.t_of_js __T_of_js __TReturn_of_js
                      __TNext_of_js x11864
    and parent_to_js :
      'T 'TReturn 'TNext .
        ('T -> Ojs.t) ->
          ('TReturn -> Ojs.t) ->
            ('TNext -> Ojs.t) -> ('T, 'TReturn, 'TNext) parent -> Ojs.t
      =
      fun (type __T) ->
        fun (type __TReturn) ->
          fun (type __TNext) ->
            fun (__T_to_js : __T -> Ojs.t) ->
              fun (__TReturn_to_js : __TReturn -> Ojs.t) ->
                fun (__TNext_to_js : __TNext -> Ojs.t) ->
                  fun (x11860 : (__T, __TReturn, __TNext) AsyncGenerator.t)
                    ->
                    AsyncGenerator.t_to_js __T_to_js __TReturn_to_js
                      __TNext_to_js x11860
    type t = (T.t, TReturn.t, TNext.t) parent
    let rec t_of_js : Ojs.t -> t =
      fun (x11872 : Ojs.t) ->
        parent_of_js T.t_of_js TReturn.t_of_js TNext.t_of_js x11872
    and t_to_js : t -> Ojs.t =
      fun (x11868 : (T.t, TReturn.t, TNext.t) parent) ->
        parent_to_js T.t_to_js TReturn.t_to_js TNext.t_to_js x11868
    let (next :
      t -> args:any list -> (T.t, TReturn.t) IteratorResult.t Promise.t) =
      fun (x11879 : t) ->
        fun ~args:(x11876 : any list) ->
          Promise.t_of_js
            (fun (x11881 : Ojs.t) ->
               IteratorResult.t_of_js T.t_of_js TReturn.t_of_js x11881)
            (let x11880 = t_to_js x11879 in
             Ojs.call (Ojs.get_prop_ascii x11880 "next") "apply"
               [|x11880;((let x11877 =
                            Ojs.new_obj
                              (Ojs.get_prop_ascii Ojs.global "Array") 
                              [||] in
                          List.iter
                            (fun (x11878 : any) ->
                               ignore
                                 (Ojs.call x11877 "push"
                                    [|(any_to_js x11878)|])) x11876;
                          x11877))|])
    let (return :
      t ->
        value:[ `U1 of TReturn.t  | `U2 of TReturn.t PromiseLike.t ] ->
          (T.t, TReturn.t) IteratorResult.t Promise.t)
      =
      fun (x11888 : t) ->
        fun
          ~value:(x11884 :
                   [ `U1 of TReturn.t  | `U2 of TReturn.t PromiseLike.t ])
          ->
          Promise.t_of_js
            (fun (x11889 : Ojs.t) ->
               IteratorResult.t_of_js T.t_of_js TReturn.t_of_js x11889)
            (Ojs.call (t_to_js x11888) "return"
               [|((match x11884 with
                   | `U1 x11885 -> TReturn.t_to_js x11885
                   | `U2 x11886 -> PromiseLike.t_to_js TReturn.t_to_js x11886))|])
    let (throw : t -> e:any -> (T.t, TReturn.t) IteratorResult.t Promise.t) =
      fun (x11893 : t) ->
        fun ~e:(x11892 : any) ->
          Promise.t_of_js
            (fun (x11894 : Ojs.t) ->
               IteratorResult.t_of_js T.t_of_js TReturn.t_of_js x11894)
            (Ojs.call (t_to_js x11893) "throw" [|(any_to_js x11892)|])
  end
module AsyncIterator_Make(T:Ojs.T)(TReturn:Ojs.T)(TNext:Ojs.T) =
  struct
    type ('T, 'TReturn, 'TNext) parent =
      ('T, 'TReturn, 'TNext) AsyncIterator.t
    let rec parent_of_js :
      'T 'TReturn 'TNext .
        (Ojs.t -> 'T) ->
          (Ojs.t -> 'TReturn) ->
            (Ojs.t -> 'TNext) -> Ojs.t -> ('T, 'TReturn, 'TNext) parent
      =
      fun (type __T) ->
        fun (type __TReturn) ->
          fun (type __TNext) ->
            fun (__T_of_js : Ojs.t -> __T) ->
              fun (__TReturn_of_js : Ojs.t -> __TReturn) ->
                fun (__TNext_of_js : Ojs.t -> __TNext) ->
                  fun (x11901 : Ojs.t) ->
                    AsyncIterator.t_of_js __T_of_js __TReturn_of_js
                      __TNext_of_js x11901
    and parent_to_js :
      'T 'TReturn 'TNext .
        ('T -> Ojs.t) ->
          ('TReturn -> Ojs.t) ->
            ('TNext -> Ojs.t) -> ('T, 'TReturn, 'TNext) parent -> Ojs.t
      =
      fun (type __T) ->
        fun (type __TReturn) ->
          fun (type __TNext) ->
            fun (__T_to_js : __T -> Ojs.t) ->
              fun (__TReturn_to_js : __TReturn -> Ojs.t) ->
                fun (__TNext_to_js : __TNext -> Ojs.t) ->
                  fun (x11897 : (__T, __TReturn, __TNext) AsyncIterator.t) ->
                    AsyncIterator.t_to_js __T_to_js __TReturn_to_js
                      __TNext_to_js x11897
    type t = (T.t, TReturn.t, TNext.t) parent
    let rec t_of_js : Ojs.t -> t =
      fun (x11909 : Ojs.t) ->
        parent_of_js T.t_of_js TReturn.t_of_js TNext.t_of_js x11909
    and t_to_js : t -> Ojs.t =
      fun (x11905 : (T.t, TReturn.t, TNext.t) parent) ->
        parent_to_js T.t_to_js TReturn.t_to_js TNext.t_to_js x11905
    let (next :
      t -> args:any list -> (T.t, TReturn.t) IteratorResult.t Promise.t) =
      fun (x11916 : t) ->
        fun ~args:(x11913 : any list) ->
          Promise.t_of_js
            (fun (x11918 : Ojs.t) ->
               IteratorResult.t_of_js T.t_of_js TReturn.t_of_js x11918)
            (let x11917 = t_to_js x11916 in
             Ojs.call (Ojs.get_prop_ascii x11917 "next") "apply"
               [|x11917;((let x11914 =
                            Ojs.new_obj
                              (Ojs.get_prop_ascii Ojs.global "Array") 
                              [||] in
                          List.iter
                            (fun (x11915 : any) ->
                               ignore
                                 (Ojs.call x11914 "push"
                                    [|(any_to_js x11915)|])) x11913;
                          x11914))|])
    let (return :
      t ->
        ?value:[ `U1 of TReturn.t  | `U2 of TReturn.t PromiseLike.t ] ->
          unit -> (T.t, TReturn.t) IteratorResult.t Promise.t)
      =
      fun (x11927 : t) ->
        fun
          ?value:(x11921 :
                   [ `U1 of TReturn.t  | `U2 of TReturn.t PromiseLike.t ]
                     option)
          ->
          fun () ->
            Promise.t_of_js
              (fun (x11929 : Ojs.t) ->
                 IteratorResult.t_of_js T.t_of_js TReturn.t_of_js x11929)
              (let x11928 = t_to_js x11927 in
               Ojs.call (Ojs.get_prop_ascii x11928 "return") "apply"
                 [|x11928;((let x11922 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x11921 with
                             | Some x11923 ->
                                 ignore
                                   (Ojs.call x11922 "push"
                                      [|((match x11923 with
                                          | `U1 x11924 ->
                                              TReturn.t_to_js x11924
                                          | `U2 x11925 ->
                                              PromiseLike.t_to_js
                                                TReturn.t_to_js x11925))|])
                             | None -> ());
                            x11922))|])
    let (throw :
      t -> ?e:any -> unit -> (T.t, TReturn.t) IteratorResult.t Promise.t) =
      fun (x11935 : t) ->
        fun ?e:(x11932 : any option) ->
          fun () ->
            Promise.t_of_js
              (fun (x11937 : Ojs.t) ->
                 IteratorResult.t_of_js T.t_of_js TReturn.t_of_js x11937)
              (let x11936 = t_to_js x11935 in
               Ojs.call (Ojs.get_prop_ascii x11936 "throw") "apply"
                 [|x11936;((let x11933 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x11932 with
                             | Some x11934 ->
                                 ignore
                                   (Ojs.call x11933 "push"
                                      [|(any_to_js x11934)|])
                             | None -> ());
                            x11933))|])
  end
module PromiseFulfilledResult_Make(T:Ojs.T) =
  struct
    type 'T parent = 'T PromiseFulfilledResult.t
    let rec parent_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T parent =
      fun (type __T) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x11942 : Ojs.t) ->
            PromiseFulfilledResult.t_of_js __T_of_js x11942
    and parent_to_js : 'T . ('T -> Ojs.t) -> 'T parent -> Ojs.t =
      fun (type __T) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x11940 : __T PromiseFulfilledResult.t) ->
            PromiseFulfilledResult.t_to_js __T_to_js x11940
    type t = T.t parent
    let rec t_of_js : Ojs.t -> t =
      fun (x11946 : Ojs.t) -> parent_of_js T.t_of_js x11946
    and t_to_js : t -> Ojs.t =
      fun (x11944 : T.t parent) -> parent_to_js T.t_to_js x11944
    let (get_status : t -> [ `L_s62_fulfilled ]) =
      fun (x11948 : t) ->
        let x11949 = Ojs.get_prop_ascii (t_to_js x11948) "status" in
        match Ojs.string_of_js x11949 with
        | "fulfilled" -> `L_s62_fulfilled
        | _ -> assert false
    let (set_status : t -> [ `L_s62_fulfilled ] -> unit) =
      fun (x11950 : t) ->
        fun (x11951 : [ `L_s62_fulfilled ]) ->
          Ojs.set_prop_ascii (t_to_js x11950) "status"
            (match x11951 with
             | `L_s62_fulfilled -> Ojs.string_to_js "fulfilled")
    let (get_value : t -> T.t) =
      fun (x11952 : t) ->
        T.t_of_js (Ojs.get_prop_ascii (t_to_js x11952) "value")
    let (set_value : t -> T.t -> unit) =
      fun (x11953 : t) ->
        fun (x11954 : T.t) ->
          Ojs.set_prop_ascii (t_to_js x11953) "value" (T.t_to_js x11954)
  end
module WeakRef_Make(T:Ojs.T) =
  struct
    type 'T parent = 'T WeakRef.t
    let rec parent_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T parent =
      fun (type __T) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x11957 : Ojs.t) -> WeakRef.t_of_js __T_of_js x11957
    and parent_to_js : 'T . ('T -> Ojs.t) -> 'T parent -> Ojs.t =
      fun (type __T) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x11955 : __T WeakRef.t) -> WeakRef.t_to_js __T_to_js x11955
    type t = T.t parent
    let rec t_of_js : Ojs.t -> t =
      fun (x11961 : Ojs.t) -> parent_of_js T.t_of_js x11961
    and t_to_js : t -> Ojs.t =
      fun (x11959 : T.t parent) -> parent_to_js T.t_to_js x11959
    let (deref : t -> T.t option) =
      fun (x11963 : t) ->
        Ojs.option_of_js T.t_of_js (Ojs.call (t_to_js x11963) "deref" [||])
    let (prototype : unit -> any parent) =
      fun () ->
        parent_of_js any_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "WeakRef")
             "prototype")
    let (create : T.t -> t) =
      fun (x11966 : T.t) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "WeakRef")
             [|(T.t_to_js x11966)|])
  end
module FinalizationRegistry_Make(T:Ojs.T) =
  struct
    type 'T parent = 'T FinalizationRegistry.t
    let rec parent_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T parent =
      fun (type __T) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x11969 : Ojs.t) ->
            FinalizationRegistry.t_of_js __T_of_js x11969
    and parent_to_js : 'T . ('T -> Ojs.t) -> 'T parent -> Ojs.t =
      fun (type __T) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x11967 : __T FinalizationRegistry.t) ->
            FinalizationRegistry.t_to_js __T_to_js x11967
    type t = T.t parent
    let rec t_of_js : Ojs.t -> t =
      fun (x11973 : Ojs.t) -> parent_of_js T.t_of_js x11973
    and t_to_js : t -> Ojs.t =
      fun (x11971 : T.t parent) -> parent_to_js T.t_to_js x11971
    let (register :
      t ->
        target:WeakKey.t ->
          heldValue:T.t -> ?unregisterToken:WeakKey.t -> unit -> unit)
      =
      fun (x11980 : t) ->
        fun ~target:(x11975 : WeakKey.t) ->
          fun ~heldValue:(x11976 : T.t) ->
            fun ?unregisterToken:(x11977 : WeakKey.t option) ->
              fun () ->
                ignore
                  (let x11981 = t_to_js x11980 in
                   Ojs.call (Ojs.get_prop_ascii x11981 "register") "apply"
                     [|x11981;((let x11978 =
                                  Ojs.new_obj
                                    (Ojs.get_prop_ascii Ojs.global "Array")
                                    [||] in
                                ignore
                                  (Ojs.call x11978 "push"
                                     [|(WeakKey.t_to_js x11975)|]);
                                ignore
                                  (Ojs.call x11978 "push"
                                     [|(T.t_to_js x11976)|]);
                                (match x11977 with
                                 | Some x11979 ->
                                     ignore
                                       (Ojs.call x11978 "push"
                                          [|(WeakKey.t_to_js x11979)|])
                                 | None -> ());
                                x11978))|])
    let (unregister : t -> unregisterToken:WeakKey.t -> unit) =
      fun (x11983 : t) ->
        fun ~unregisterToken:(x11982 : WeakKey.t) ->
          ignore
            (Ojs.call (t_to_js x11983) "unregister"
               [|(WeakKey.t_to_js x11982)|])
    let (prototype : unit -> any parent) =
      fun () ->
        parent_of_js any_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "FinalizationRegistry")
             "prototype")
    let (create : (T.t -> unit) -> t) =
      fun (x11985 : T.t -> unit) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "FinalizationRegistry")
             [|(Ojs.fun_to_js 1
                  (fun (x11986 : Ojs.t) -> x11985 (T.t_of_js x11986)))|])
  end
let (nan : unit -> float) =
  fun () -> Ojs.float_of_js (Ojs.get_prop_ascii Ojs.global "NaN")
let (infinity : unit -> float) =
  fun () -> Ojs.float_of_js (Ojs.get_prop_ascii Ojs.global "Infinity")
let (eval : string -> any) =
  fun (x11987 : string) ->
    any_of_js (Ojs.call Ojs.global "eval" [|(Ojs.string_to_js x11987)|])
let (parseInt : string:string -> ?radix:float -> unit -> float) =
  fun ~string:(x11988 : string) ->
    fun ?radix:(x11989 : float option) ->
      fun () ->
        Ojs.float_of_js
          (let x11992 = Ojs.global in
           Ojs.call (Ojs.get_prop_ascii x11992 "parseInt") "apply"
             [|x11992;((let x11990 =
                          Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                            [||] in
                        ignore
                          (Ojs.call x11990 "push"
                             [|(Ojs.string_to_js x11988)|]);
                        (match x11989 with
                         | Some x11991 ->
                             ignore
                               (Ojs.call x11990 "push"
                                  [|(Ojs.float_to_js x11991)|])
                         | None -> ());
                        x11990))|])
let (parseFloat : string -> float) =
  fun (x11993 : string) ->
    Ojs.float_of_js
      (Ojs.call Ojs.global "parseFloat" [|(Ojs.string_to_js x11993)|])
let (isNaN : float -> bool) =
  fun (x11994 : float) ->
    Ojs.bool_of_js (Ojs.call Ojs.global "isNaN" [|(Ojs.float_to_js x11994)|])
let (isFinite : float -> bool) =
  fun (x11995 : float) ->
    Ojs.bool_of_js
      (Ojs.call Ojs.global "isFinite" [|(Ojs.float_to_js x11995)|])
let (decodeURI : string -> string) =
  fun (x11996 : string) ->
    Ojs.string_of_js
      (Ojs.call Ojs.global "decodeURI" [|(Ojs.string_to_js x11996)|])
let (decodeURIComponent : string -> string) =
  fun (x11997 : string) ->
    Ojs.string_of_js
      (Ojs.call Ojs.global "decodeURIComponent" [|(Ojs.string_to_js x11997)|])
let (encodeURI : string -> string) =
  fun (x11998 : string) ->
    Ojs.string_of_js
      (Ojs.call Ojs.global "encodeURI" [|(Ojs.string_to_js x11998)|])
let (encodeURIComponent :
  [ `Number of float  | `String of string  | `Boolean of bool ] Primitive.t
    -> string)
  =
  fun
    (x11999 :
      [ `Number of float  | `String of string  | `Boolean of bool ]
        Primitive.t)
    ->
    Ojs.string_of_js
      (Ojs.call Ojs.global "encodeURIComponent"
         [|(Primitive.t_to_js
              (fun
                 (x12000 :
                   [ `Number of float  | `String of string 
                   | `Boolean of bool ])
                 ->
                 match x12000 with
                 | `Number x12001 -> Ojs.float_to_js x12001
                 | `String x12002 -> Ojs.string_to_js x12002
                 | `Boolean x12003 -> Ojs.bool_to_js x12003) x11999)|])
let (escape : string -> string) =
  fun (x12004 : string) ->
    Ojs.string_of_js
      (Ojs.call Ojs.global "escape" [|(Ojs.string_to_js x12004)|])
let (unescape : string -> string) =
  fun (x12005 : string) ->
    Ojs.string_of_js
      (Ojs.call Ojs.global "unescape" [|(Ojs.string_to_js x12005)|])
let (proxy : unit -> ProxyConstructor.t) =
  fun () -> ProxyConstructor.t_of_js (Ojs.get_prop_ascii Ojs.global "Proxy")
